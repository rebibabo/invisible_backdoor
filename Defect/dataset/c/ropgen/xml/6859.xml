<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6859.c" pos:tabs="8"><function pos:start="1:1" pos:end="453:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">helper_lcall_protected</name><parameter_list pos:start="1:28" pos:end="3:59">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">CPUX86State</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:56">new_cs</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><name pos:start="1:59" pos:end="1:70">target_ulong</name></type> <name pos:start="1:72" pos:end="1:78">new_eip</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:37"><decl pos:start="3:29" pos:end="3:37"><type pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:37">shift</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:58"><decl pos:start="3:40" pos:end="3:58"><type pos:start="3:40" pos:end="3:58"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:58">next_eip_addend</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="453:1">{<block_content pos:start="7:5" pos:end="451:5">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">new_stack</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">e1</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">e2</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:22" pos:end="9:24">cpl</name></decl>, <decl pos:start="9:27" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:27" pos:end="9:29">dpl</name></decl>, <decl pos:start="9:32" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:32" pos:end="9:34">rpl</name></decl>, <decl pos:start="9:37" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:37" pos:end="9:44">selector</name></decl>, <decl pos:start="9:47" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:47" pos:end="9:52">offset</name></decl>, <decl pos:start="9:55" pos:end="9:65"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:55" pos:end="9:65">param_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:69"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:15">ss</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>, <decl pos:start="11:22" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:22" pos:end="11:26">ss_e1</name> <init pos:start="11:28" pos:end="11:30">= <expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">0</literal></expr></init></decl>, <decl pos:start="11:33" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:33" pos:end="11:37">ss_e2</name> <init pos:start="11:39" pos:end="11:41">= <expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr></init></decl>, <decl pos:start="11:44" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:44" pos:end="11:45">sp</name></decl>, <decl pos:start="11:48" pos:end="11:51"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:48" pos:end="11:51">type</name></decl>, <decl pos:start="11:54" pos:end="11:59"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:54" pos:end="11:59">ss_dpl</name></decl>, <decl pos:start="11:62" pos:end="11:68"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:62" pos:end="11:68">sp_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">val</name></decl>, <decl pos:start="13:19" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:23">limit</name></decl>, <decl pos:start="13:26" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:26" pos:end="13:36">old_sp_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:20">ssp</name></decl>, <decl pos:start="15:23" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:23" pos:end="15:29">old_ssp</name></decl>, <decl pos:start="15:32" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:32" pos:end="15:39">next_eip</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:12">next_eip</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:18">env</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:23">eip</name></name> <operator pos:start="19:25" pos:end="19:25">+</operator> <name pos:start="19:27" pos:end="19:41">next_eip_addend</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:74"><expr pos:start="21:5" pos:end="21:73"><call pos:start="21:5" pos:end="21:73"><name pos:start="21:5" pos:end="21:13">LOG_PCALL</name><argument_list pos:start="21:14" pos:end="21:73">(<argument pos:start="21:15" pos:end="21:38"><expr pos:start="21:15" pos:end="21:38"><literal type="string" pos:start="21:15" pos:end="21:38">"lcall %04x:%08x s=%d\n"</literal></expr></argument>, <argument pos:start="21:41" pos:end="21:46"><expr pos:start="21:41" pos:end="21:46"><name pos:start="21:41" pos:end="21:46">new_cs</name></expr></argument>, <argument pos:start="21:49" pos:end="21:65"><expr pos:start="21:49" pos:end="21:65"><operator pos:start="21:49" pos:end="21:49">(</operator><name pos:start="21:50" pos:end="21:57">uint32_t</name><operator pos:start="21:58" pos:end="21:58">)</operator><name pos:start="21:59" pos:end="21:65">new_eip</name></expr></argument>, <argument pos:start="21:68" pos:end="21:72"><expr pos:start="21:68" pos:end="21:72"><name pos:start="21:68" pos:end="21:72">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><call pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:19">LOG_PCALL_STATE</name><argument_list pos:start="23:20" pos:end="23:46">(<argument pos:start="23:21" pos:end="23:45"><expr pos:start="23:21" pos:end="23:45"><call pos:start="23:21" pos:end="23:45"><name pos:start="23:21" pos:end="23:23">CPU</name><argument_list pos:start="23:24" pos:end="23:45">(<argument pos:start="23:25" pos:end="23:44"><expr pos:start="23:25" pos:end="23:44"><call pos:start="23:25" pos:end="23:44"><name pos:start="23:25" pos:end="23:39">x86_env_get_cpu</name><argument_list pos:start="23:40" pos:end="23:44">(<argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:31">(<expr pos:start="25:9" pos:end="25:30"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:15">new_cs</name> <operator pos:start="25:17" pos:end="25:17">&amp;</operator> <literal type="number" pos:start="25:19" pos:end="25:24">0xfffc</literal><operator pos:start="25:25" pos:end="25:25">)</operator> <operator pos:start="25:27" pos:end="25:28">==</operator> <literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr>)</condition> <block pos:start="25:33" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:48">

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:27">raise_exception_err</name><argument_list pos:start="27:28" pos:end="27:47">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">env</name></expr></argument>, <argument pos:start="27:34" pos:end="27:43"><expr pos:start="27:34" pos:end="27:43"><name pos:start="27:34" pos:end="27:43">EXCP0D_GPF</name></expr></argument>, <argument pos:start="27:46" pos:end="27:46"><expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:49">(<expr pos:start="31:9" pos:end="31:48"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:20">load_segment</name><argument_list pos:start="31:21" pos:end="31:43">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">env</name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:29">e1</name></expr></argument>, <argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><operator pos:start="31:32" pos:end="31:32">&amp;</operator><name pos:start="31:33" pos:end="31:34">e2</name></expr></argument>, <argument pos:start="31:37" pos:end="31:42"><expr pos:start="31:37" pos:end="31:42"><name pos:start="31:37" pos:end="31:42">new_cs</name></expr></argument>)</argument_list></call> <operator pos:start="31:45" pos:end="31:46">!=</operator> <literal type="number" pos:start="31:48" pos:end="31:48">0</literal></expr>)</condition> <block pos:start="31:51" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:62">

        <expr_stmt pos:start="33:9" pos:end="33:62"><expr pos:start="33:9" pos:end="33:61"><call pos:start="33:9" pos:end="33:61"><name pos:start="33:9" pos:end="33:27">raise_exception_err</name><argument_list pos:start="33:28" pos:end="33:61">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">env</name></expr></argument>, <argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43">EXCP0D_GPF</name></expr></argument>, <argument pos:start="33:46" pos:end="33:60"><expr pos:start="33:46" pos:end="33:60"><name pos:start="33:46" pos:end="33:51">new_cs</name> <operator pos:start="33:53" pos:end="33:53">&amp;</operator> <literal type="number" pos:start="33:55" pos:end="33:60">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:7">cpl</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:21"><name pos:start="37:11" pos:end="37:13">env</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:21">hflags</name></name> <operator pos:start="37:23" pos:end="37:23">&amp;</operator> <name pos:start="37:25" pos:end="37:35">HF_CPL_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:13">LOG_PCALL</name><argument_list pos:start="39:14" pos:end="39:41">(<argument pos:start="39:15" pos:end="39:32"><expr pos:start="39:15" pos:end="39:32"><literal type="string" pos:start="39:15" pos:end="39:32">"desc=%08x:%08x\n"</literal></expr></argument>, <argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">e1</name></expr></argument>, <argument pos:start="39:39" pos:end="39:40"><expr pos:start="39:39" pos:end="39:40"><name pos:start="39:39" pos:end="39:40">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="451:5"><if pos:start="41:5" pos:end="167:5">if <condition pos:start="41:8" pos:end="41:25">(<expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:10">e2</name> <operator pos:start="41:12" pos:end="41:12">&amp;</operator> <name pos:start="41:14" pos:end="41:24">DESC_S_MASK</name></expr>)</condition> <block pos:start="41:27" pos:end="167:5">{<block_content pos:start="43:9" pos:end="165:9">

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:33">(<expr pos:start="43:13" pos:end="43:32"><operator pos:start="43:13" pos:end="43:13">!</operator><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:16">e2</name> <operator pos:start="43:18" pos:end="43:18">&amp;</operator> <name pos:start="43:20" pos:end="43:31">DESC_CS_MASK</name><operator pos:start="43:32" pos:end="43:32">)</operator></expr>)</condition> <block pos:start="43:35" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:66">

            <expr_stmt pos:start="45:13" pos:end="45:66"><expr pos:start="45:13" pos:end="45:65"><call pos:start="45:13" pos:end="45:65"><name pos:start="45:13" pos:end="45:31">raise_exception_err</name><argument_list pos:start="45:32" pos:end="45:65">(<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">env</name></expr></argument>, <argument pos:start="45:38" pos:end="45:47"><expr pos:start="45:38" pos:end="45:47"><name pos:start="45:38" pos:end="45:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="45:50" pos:end="45:64"><expr pos:start="45:50" pos:end="45:64"><name pos:start="45:50" pos:end="45:55">new_cs</name> <operator pos:start="45:57" pos:end="45:57">&amp;</operator> <literal type="number" pos:start="45:59" pos:end="45:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:11">dpl</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">(</operator><name pos:start="49:16" pos:end="49:17">e2</name> <operator pos:start="49:19" pos:end="49:20">&gt;&gt;</operator> <name pos:start="49:22" pos:end="49:35">DESC_DPL_SHIFT</name><operator pos:start="49:36" pos:end="49:36">)</operator> <operator pos:start="49:38" pos:end="49:38">&amp;</operator> <literal type="number" pos:start="49:40" pos:end="49:40">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="79:9"><if pos:start="51:9" pos:end="61:9">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:14">e2</name> <operator pos:start="51:16" pos:end="51:16">&amp;</operator> <name pos:start="51:18" pos:end="51:28">DESC_C_MASK</name></expr>)</condition> <block pos:start="51:31" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:13">

            <comment type="block" pos:start="53:13" pos:end="53:41">/* conforming code segment */</comment>

            <if_stmt pos:start="55:13" pos:end="59:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:26">(<expr pos:start="55:17" pos:end="55:25"><name pos:start="55:17" pos:end="55:19">dpl</name> <operator pos:start="55:21" pos:end="55:21">&gt;</operator> <name pos:start="55:23" pos:end="55:25">cpl</name></expr>)</condition> <block pos:start="55:28" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:70">

                <expr_stmt pos:start="57:17" pos:end="57:70"><expr pos:start="57:17" pos:end="57:69"><call pos:start="57:17" pos:end="57:69"><name pos:start="57:17" pos:end="57:35">raise_exception_err</name><argument_list pos:start="57:36" pos:end="57:69">(<argument pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:39">env</name></expr></argument>, <argument pos:start="57:42" pos:end="57:51"><expr pos:start="57:42" pos:end="57:51"><name pos:start="57:42" pos:end="57:51">EXCP0D_GPF</name></expr></argument>, <argument pos:start="57:54" pos:end="57:68"><expr pos:start="57:54" pos:end="57:68"><name pos:start="57:54" pos:end="57:59">new_cs</name> <operator pos:start="57:61" pos:end="57:61">&amp;</operator> <literal type="number" pos:start="57:63" pos:end="57:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="79:9">else <block pos:start="61:16" pos:end="79:9">{<block_content pos:start="65:13" pos:end="77:13">

            <comment type="block" pos:start="63:13" pos:end="63:45">/* non conforming code segment */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:29"><expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:15">rpl</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:24">new_cs</name> <operator pos:start="65:26" pos:end="65:26">&amp;</operator> <literal type="number" pos:start="65:28" pos:end="65:28">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="71:13"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:26">(<expr pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:19">rpl</name> <operator pos:start="67:21" pos:end="67:21">&gt;</operator> <name pos:start="67:23" pos:end="67:25">cpl</name></expr>)</condition> <block pos:start="67:28" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:70">

                <expr_stmt pos:start="69:17" pos:end="69:70"><expr pos:start="69:17" pos:end="69:69"><call pos:start="69:17" pos:end="69:69"><name pos:start="69:17" pos:end="69:35">raise_exception_err</name><argument_list pos:start="69:36" pos:end="69:69">(<argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">env</name></expr></argument>, <argument pos:start="69:42" pos:end="69:51"><expr pos:start="69:42" pos:end="69:51"><name pos:start="69:42" pos:end="69:51">EXCP0D_GPF</name></expr></argument>, <argument pos:start="69:54" pos:end="69:68"><expr pos:start="69:54" pos:end="69:68"><name pos:start="69:54" pos:end="69:59">new_cs</name> <operator pos:start="69:61" pos:end="69:61">&amp;</operator> <literal type="number" pos:start="69:63" pos:end="69:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="73:13" pos:end="77:13"><if pos:start="73:13" pos:end="77:13">if <condition pos:start="73:16" pos:end="73:27">(<expr pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:19">dpl</name> <operator pos:start="73:21" pos:end="73:22">!=</operator> <name pos:start="73:24" pos:end="73:26">cpl</name></expr>)</condition> <block pos:start="73:29" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:70">

                <expr_stmt pos:start="75:17" pos:end="75:70"><expr pos:start="75:17" pos:end="75:69"><call pos:start="75:17" pos:end="75:69"><name pos:start="75:17" pos:end="75:35">raise_exception_err</name><argument_list pos:start="75:36" pos:end="75:69">(<argument pos:start="75:37" pos:end="75:39"><expr pos:start="75:37" pos:end="75:39"><name pos:start="75:37" pos:end="75:39">env</name></expr></argument>, <argument pos:start="75:42" pos:end="75:51"><expr pos:start="75:42" pos:end="75:51"><name pos:start="75:42" pos:end="75:51">EXCP0D_GPF</name></expr></argument>, <argument pos:start="75:54" pos:end="75:68"><expr pos:start="75:54" pos:end="75:68"><name pos:start="75:54" pos:end="75:59">new_cs</name> <operator pos:start="75:61" pos:end="75:61">&amp;</operator> <literal type="number" pos:start="75:63" pos:end="75:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="81:9" pos:end="90:0"><if pos:start="81:9" pos:end="90:0">if <condition pos:start="81:12" pos:end="81:32">(<expr pos:start="81:13" pos:end="81:31"><operator pos:start="81:13" pos:end="81:13">!</operator><operator pos:start="81:14" pos:end="81:14">(</operator><name pos:start="81:15" pos:end="81:16">e2</name> <operator pos:start="81:18" pos:end="81:18">&amp;</operator> <name pos:start="81:20" pos:end="81:30">DESC_P_MASK</name><operator pos:start="81:31" pos:end="81:31">)</operator></expr>)</condition> <block pos:start="81:34" pos:end="90:0">{<block_content pos:start="83:13" pos:end="83:68">

            <expr_stmt pos:start="83:13" pos:end="83:68"><expr pos:start="83:13" pos:end="83:67"><call pos:start="83:13" pos:end="83:67"><name pos:start="83:13" pos:end="83:31">raise_exception_err</name><argument_list pos:start="83:32" pos:end="83:67">(<argument pos:start="83:33" pos:end="83:35"><expr pos:start="83:33" pos:end="83:35"><name pos:start="83:33" pos:end="83:35">env</name></expr></argument>, <argument pos:start="83:38" pos:end="83:49"><expr pos:start="83:38" pos:end="83:49"><name pos:start="83:38" pos:end="83:49">EXCP0B_NOSEG</name></expr></argument>, <argument pos:start="83:52" pos:end="83:66"><expr pos:start="83:52" pos:end="83:66"><name pos:start="83:52" pos:end="83:57">new_cs</name> <operator pos:start="83:59" pos:end="83:59">&amp;</operator> <literal type="number" pos:start="83:61" pos:end="83:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="89:1" pos:end="89:20">#<cpp:directive pos:start="89:2" pos:end="89:6">ifdef</cpp:directive> <name pos:start="89:8" pos:end="89:20">TARGET_X86_64</name></cpp:ifdef>

        <comment type="block" pos:start="91:9" pos:end="91:53">/* XXX: check 16/32 bit cases in long mode */</comment>

        <if_stmt pos:start="93:9" pos:end="165:9"><if pos:start="93:9" pos:end="119:9">if <condition pos:start="93:12" pos:end="93:23">(<expr pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:17">shift</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <literal type="number" pos:start="93:22" pos:end="93:22">2</literal></expr>)</condition> <block pos:start="93:25" pos:end="119:9">{<block_content pos:start="95:13" pos:end="117:31">

            <decl_stmt pos:start="95:13" pos:end="95:29"><decl pos:start="95:13" pos:end="95:28"><type pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:24">target_ulong</name></type> <name pos:start="95:26" pos:end="95:28">rsp</name></decl>;</decl_stmt>



            <comment type="block" pos:start="99:13" pos:end="99:29">/* 64 bit case */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:35"><expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:15">rsp</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:34"><name pos:start="101:19" pos:end="101:21">env</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:27">regs</name><index pos:start="101:28" pos:end="101:34">[<expr pos:start="101:29" pos:end="101:33"><name pos:start="101:29" pos:end="101:33">R_ESP</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:49"><expr pos:start="103:13" pos:end="103:48"><call pos:start="103:13" pos:end="103:48"><name pos:start="103:13" pos:end="103:17">PUSHQ</name><argument_list pos:start="103:18" pos:end="103:48">(<argument pos:start="103:19" pos:end="103:21"><expr pos:start="103:19" pos:end="103:21"><name pos:start="103:19" pos:end="103:21">rsp</name></expr></argument>, <argument pos:start="103:24" pos:end="103:47"><expr pos:start="103:24" pos:end="103:47"><name pos:start="103:24" pos:end="103:38"><name pos:start="103:24" pos:end="103:26">env</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:32">segs</name><index pos:start="103:33" pos:end="103:38">[<expr pos:start="103:34" pos:end="103:37"><name pos:start="103:34" pos:end="103:37">R_CS</name></expr>]</index></name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:47">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:33"><expr pos:start="105:13" pos:end="105:32"><call pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:17">PUSHQ</name><argument_list pos:start="105:18" pos:end="105:32">(<argument pos:start="105:19" pos:end="105:21"><expr pos:start="105:19" pos:end="105:21"><name pos:start="105:19" pos:end="105:21">rsp</name></expr></argument>, <argument pos:start="105:24" pos:end="105:31"><expr pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:31">next_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="107:13" pos:end="107:50">/* from this point, not restartable */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:35"><expr pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:15">env</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:21">regs</name><index pos:start="109:22" pos:end="109:28">[<expr pos:start="109:23" pos:end="109:27"><name pos:start="109:23" pos:end="109:27">R_ESP</name></expr>]</index></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:34">rsp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="115:62"><expr pos:start="111:13" pos:end="115:61"><call pos:start="111:13" pos:end="115:61"><name pos:start="111:13" pos:end="111:34">cpu_x86_load_seg_cache</name><argument_list pos:start="111:35" pos:end="115:61">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">env</name></expr></argument>, <argument pos:start="111:41" pos:end="111:44"><expr pos:start="111:41" pos:end="111:44"><name pos:start="111:41" pos:end="111:44">R_CS</name></expr></argument>, <argument pos:start="111:47" pos:end="111:69"><expr pos:start="111:47" pos:end="111:69"><operator pos:start="111:47" pos:end="111:47">(</operator><name pos:start="111:48" pos:end="111:53">new_cs</name> <operator pos:start="111:55" pos:end="111:55">&amp;</operator> <literal type="number" pos:start="111:57" pos:end="111:62">0xfffc</literal><operator pos:start="111:63" pos:end="111:63">)</operator> <operator pos:start="111:65" pos:end="111:65">|</operator> <name pos:start="111:67" pos:end="111:69">cpl</name></expr></argument>,

                                   <argument pos:start="113:36" pos:end="113:55"><expr pos:start="113:36" pos:end="113:55"><call pos:start="113:36" pos:end="113:55"><name pos:start="113:36" pos:end="113:47">get_seg_base</name><argument_list pos:start="113:48" pos:end="113:55">(<argument pos:start="113:49" pos:end="113:50"><expr pos:start="113:49" pos:end="113:50"><name pos:start="113:49" pos:end="113:50">e1</name></expr></argument>, <argument pos:start="113:53" pos:end="113:54"><expr pos:start="113:53" pos:end="113:54"><name pos:start="113:53" pos:end="113:54">e2</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="115:36" pos:end="115:56"><expr pos:start="115:36" pos:end="115:56"><call pos:start="115:36" pos:end="115:56"><name pos:start="115:36" pos:end="115:48">get_seg_limit</name><argument_list pos:start="115:49" pos:end="115:56">(<argument pos:start="115:50" pos:end="115:51"><expr pos:start="115:50" pos:end="115:51"><name pos:start="115:50" pos:end="115:51">e1</name></expr></argument>, <argument pos:start="115:54" pos:end="115:55"><expr pos:start="115:54" pos:end="115:55"><name pos:start="115:54" pos:end="115:55">e2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:59" pos:end="115:60"><expr pos:start="115:59" pos:end="115:60"><name pos:start="115:59" pos:end="115:60">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:31"><expr pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:15">env</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:20">eip</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:30">new_eip</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="165:9">else

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

        <block pos:start="123:9" pos:end="165:9">{<block_content pos:start="125:13" pos:end="163:31">

            <expr_stmt pos:start="125:13" pos:end="125:34"><expr pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:14">sp</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <name pos:start="125:18" pos:end="125:33"><name pos:start="125:18" pos:end="125:20">env</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:26">regs</name><index pos:start="125:27" pos:end="125:33">[<expr pos:start="125:28" pos:end="125:32"><name pos:start="125:28" pos:end="125:32">R_ESP</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:57"><expr pos:start="127:13" pos:end="127:56"><name pos:start="127:13" pos:end="127:19">sp_mask</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <call pos:start="127:23" pos:end="127:56"><name pos:start="127:23" pos:end="127:33">get_sp_mask</name><argument_list pos:start="127:34" pos:end="127:56">(<argument pos:start="127:35" pos:end="127:55"><expr pos:start="127:35" pos:end="127:55"><name pos:start="127:35" pos:end="127:49"><name pos:start="127:35" pos:end="127:37">env</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:43">segs</name><index pos:start="127:44" pos:end="127:49">[<expr pos:start="127:45" pos:end="127:48"><name pos:start="127:45" pos:end="127:48">R_SS</name></expr>]</index></name><operator pos:start="127:50" pos:end="127:50">.</operator><name pos:start="127:51" pos:end="127:55">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:39"><expr pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:15">ssp</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <name pos:start="129:19" pos:end="129:33"><name pos:start="129:19" pos:end="129:21">env</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:27">segs</name><index pos:start="129:28" pos:end="129:33">[<expr pos:start="129:29" pos:end="129:32"><name pos:start="129:29" pos:end="129:32">R_SS</name></expr>]</index></name><operator pos:start="129:34" pos:end="129:34">.</operator><name pos:start="129:35" pos:end="129:38">base</name></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="143:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:22">(<expr pos:start="131:17" pos:end="131:21"><name pos:start="131:17" pos:end="131:21">shift</name></expr>)</condition> <block pos:start="131:24" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:50">

                <expr_stmt pos:start="133:17" pos:end="133:66"><expr pos:start="133:17" pos:end="133:65"><call pos:start="133:17" pos:end="133:65"><name pos:start="133:17" pos:end="133:21">PUSHL</name><argument_list pos:start="133:22" pos:end="133:65">(<argument pos:start="133:23" pos:end="133:25"><expr pos:start="133:23" pos:end="133:25"><name pos:start="133:23" pos:end="133:25">ssp</name></expr></argument>, <argument pos:start="133:28" pos:end="133:29"><expr pos:start="133:28" pos:end="133:29"><name pos:start="133:28" pos:end="133:29">sp</name></expr></argument>, <argument pos:start="133:32" pos:end="133:38"><expr pos:start="133:32" pos:end="133:38"><name pos:start="133:32" pos:end="133:38">sp_mask</name></expr></argument>, <argument pos:start="133:41" pos:end="133:64"><expr pos:start="133:41" pos:end="133:64"><name pos:start="133:41" pos:end="133:55"><name pos:start="133:41" pos:end="133:43">env</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:49">segs</name><index pos:start="133:50" pos:end="133:55">[<expr pos:start="133:51" pos:end="133:54"><name pos:start="133:51" pos:end="133:54">R_CS</name></expr>]</index></name><operator pos:start="133:56" pos:end="133:56">.</operator><name pos:start="133:57" pos:end="133:64">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:50"><expr pos:start="135:17" pos:end="135:49"><call pos:start="135:17" pos:end="135:49"><name pos:start="135:17" pos:end="135:21">PUSHL</name><argument_list pos:start="135:22" pos:end="135:49">(<argument pos:start="135:23" pos:end="135:25"><expr pos:start="135:23" pos:end="135:25"><name pos:start="135:23" pos:end="135:25">ssp</name></expr></argument>, <argument pos:start="135:28" pos:end="135:29"><expr pos:start="135:28" pos:end="135:29"><name pos:start="135:28" pos:end="135:29">sp</name></expr></argument>, <argument pos:start="135:32" pos:end="135:38"><expr pos:start="135:32" pos:end="135:38"><name pos:start="135:32" pos:end="135:38">sp_mask</name></expr></argument>, <argument pos:start="135:41" pos:end="135:48"><expr pos:start="135:41" pos:end="135:48"><name pos:start="135:41" pos:end="135:48">next_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="137:15" pos:end="143:13">else <block pos:start="137:20" pos:end="143:13">{<block_content pos:start="139:17" pos:end="141:50">

                <expr_stmt pos:start="139:17" pos:end="139:66"><expr pos:start="139:17" pos:end="139:65"><call pos:start="139:17" pos:end="139:65"><name pos:start="139:17" pos:end="139:21">PUSHW</name><argument_list pos:start="139:22" pos:end="139:65">(<argument pos:start="139:23" pos:end="139:25"><expr pos:start="139:23" pos:end="139:25"><name pos:start="139:23" pos:end="139:25">ssp</name></expr></argument>, <argument pos:start="139:28" pos:end="139:29"><expr pos:start="139:28" pos:end="139:29"><name pos:start="139:28" pos:end="139:29">sp</name></expr></argument>, <argument pos:start="139:32" pos:end="139:38"><expr pos:start="139:32" pos:end="139:38"><name pos:start="139:32" pos:end="139:38">sp_mask</name></expr></argument>, <argument pos:start="139:41" pos:end="139:64"><expr pos:start="139:41" pos:end="139:64"><name pos:start="139:41" pos:end="139:55"><name pos:start="139:41" pos:end="139:43">env</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:49">segs</name><index pos:start="139:50" pos:end="139:55">[<expr pos:start="139:51" pos:end="139:54"><name pos:start="139:51" pos:end="139:54">R_CS</name></expr>]</index></name><operator pos:start="139:56" pos:end="139:56">.</operator><name pos:start="139:57" pos:end="139:64">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:50"><expr pos:start="141:17" pos:end="141:49"><call pos:start="141:17" pos:end="141:49"><name pos:start="141:17" pos:end="141:21">PUSHW</name><argument_list pos:start="141:22" pos:end="141:49">(<argument pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:25">ssp</name></expr></argument>, <argument pos:start="141:28" pos:end="141:29"><expr pos:start="141:28" pos:end="141:29"><name pos:start="141:28" pos:end="141:29">sp</name></expr></argument>, <argument pos:start="141:32" pos:end="141:38"><expr pos:start="141:32" pos:end="141:38"><name pos:start="141:32" pos:end="141:38">sp_mask</name></expr></argument>, <argument pos:start="141:41" pos:end="141:48"><expr pos:start="141:41" pos:end="141:48"><name pos:start="141:41" pos:end="141:48">next_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:42"><expr pos:start="147:13" pos:end="147:41"><name pos:start="147:13" pos:end="147:17">limit</name> <operator pos:start="147:19" pos:end="147:19">=</operator> <call pos:start="147:21" pos:end="147:41"><name pos:start="147:21" pos:end="147:33">get_seg_limit</name><argument_list pos:start="147:34" pos:end="147:41">(<argument pos:start="147:35" pos:end="147:36"><expr pos:start="147:35" pos:end="147:36"><name pos:start="147:35" pos:end="147:36">e1</name></expr></argument>, <argument pos:start="147:39" pos:end="147:40"><expr pos:start="147:39" pos:end="147:40"><name pos:start="147:39" pos:end="147:40">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="153:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:32">(<expr pos:start="149:17" pos:end="149:31"><name pos:start="149:17" pos:end="149:23">new_eip</name> <operator pos:start="149:25" pos:end="149:25">&gt;</operator> <name pos:start="149:27" pos:end="149:31">limit</name></expr>)</condition> <block pos:start="149:34" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:70">

                <expr_stmt pos:start="151:17" pos:end="151:70"><expr pos:start="151:17" pos:end="151:69"><call pos:start="151:17" pos:end="151:69"><name pos:start="151:17" pos:end="151:35">raise_exception_err</name><argument_list pos:start="151:36" pos:end="151:69">(<argument pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:39">env</name></expr></argument>, <argument pos:start="151:42" pos:end="151:51"><expr pos:start="151:42" pos:end="151:51"><name pos:start="151:42" pos:end="151:51">EXCP0D_GPF</name></expr></argument>, <argument pos:start="151:54" pos:end="151:68"><expr pos:start="151:54" pos:end="151:68"><name pos:start="151:54" pos:end="151:59">new_cs</name> <operator pos:start="151:61" pos:end="151:61">&amp;</operator> <literal type="number" pos:start="151:63" pos:end="151:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="155:13" pos:end="155:50">/* from this point, not restartable */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:33"><expr pos:start="157:13" pos:end="157:32"><call pos:start="157:13" pos:end="157:32"><name pos:start="157:13" pos:end="157:19">SET_ESP</name><argument_list pos:start="157:20" pos:end="157:32">(<argument pos:start="157:21" pos:end="157:22"><expr pos:start="157:21" pos:end="157:22"><name pos:start="157:21" pos:end="157:22">sp</name></expr></argument>, <argument pos:start="157:25" pos:end="157:31"><expr pos:start="157:25" pos:end="157:31"><name pos:start="157:25" pos:end="157:31">sp_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="161:68"><expr pos:start="159:13" pos:end="161:67"><call pos:start="159:13" pos:end="161:67"><name pos:start="159:13" pos:end="159:34">cpu_x86_load_seg_cache</name><argument_list pos:start="159:35" pos:end="161:67">(<argument pos:start="159:36" pos:end="159:38"><expr pos:start="159:36" pos:end="159:38"><name pos:start="159:36" pos:end="159:38">env</name></expr></argument>, <argument pos:start="159:41" pos:end="159:44"><expr pos:start="159:41" pos:end="159:44"><name pos:start="159:41" pos:end="159:44">R_CS</name></expr></argument>, <argument pos:start="159:47" pos:end="159:69"><expr pos:start="159:47" pos:end="159:69"><operator pos:start="159:47" pos:end="159:47">(</operator><name pos:start="159:48" pos:end="159:53">new_cs</name> <operator pos:start="159:55" pos:end="159:55">&amp;</operator> <literal type="number" pos:start="159:57" pos:end="159:62">0xfffc</literal><operator pos:start="159:63" pos:end="159:63">)</operator> <operator pos:start="159:65" pos:end="159:65">|</operator> <name pos:start="159:67" pos:end="159:69">cpl</name></expr></argument>,

                                   <argument pos:start="161:36" pos:end="161:55"><expr pos:start="161:36" pos:end="161:55"><call pos:start="161:36" pos:end="161:55"><name pos:start="161:36" pos:end="161:47">get_seg_base</name><argument_list pos:start="161:48" pos:end="161:55">(<argument pos:start="161:49" pos:end="161:50"><expr pos:start="161:49" pos:end="161:50"><name pos:start="161:49" pos:end="161:50">e1</name></expr></argument>, <argument pos:start="161:53" pos:end="161:54"><expr pos:start="161:53" pos:end="161:54"><name pos:start="161:53" pos:end="161:54">e2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="161:58" pos:end="161:62"><expr pos:start="161:58" pos:end="161:62"><name pos:start="161:58" pos:end="161:62">limit</name></expr></argument>, <argument pos:start="161:65" pos:end="161:66"><expr pos:start="161:65" pos:end="161:66"><name pos:start="161:65" pos:end="161:66">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:20"><name pos:start="163:13" pos:end="163:15">env</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:20">eip</name></name> <operator pos:start="163:22" pos:end="163:22">=</operator> <name pos:start="163:24" pos:end="163:30">new_eip</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="451:5">else <block pos:start="167:12" pos:end="451:5">{<block_content pos:start="171:9" pos:end="449:26">

        <comment type="block" pos:start="169:9" pos:end="169:29">/* check gate type */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:46"><expr pos:start="171:9" pos:end="171:45"><name pos:start="171:9" pos:end="171:12">type</name> <operator pos:start="171:14" pos:end="171:14">=</operator> <operator pos:start="171:16" pos:end="171:16">(</operator><name pos:start="171:17" pos:end="171:18">e2</name> <operator pos:start="171:20" pos:end="171:21">&gt;&gt;</operator> <name pos:start="171:23" pos:end="171:37">DESC_TYPE_SHIFT</name><operator pos:start="171:38" pos:end="171:38">)</operator> <operator pos:start="171:40" pos:end="171:40">&amp;</operator> <literal type="number" pos:start="171:42" pos:end="171:45">0x1f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:41"><expr pos:start="173:9" pos:end="173:40"><name pos:start="173:9" pos:end="173:11">dpl</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <operator pos:start="173:15" pos:end="173:15">(</operator><name pos:start="173:16" pos:end="173:17">e2</name> <operator pos:start="173:19" pos:end="173:20">&gt;&gt;</operator> <name pos:start="173:22" pos:end="173:35">DESC_DPL_SHIFT</name><operator pos:start="173:36" pos:end="173:36">)</operator> <operator pos:start="173:38" pos:end="173:38">&amp;</operator> <literal type="number" pos:start="173:40" pos:end="173:40">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:25"><expr pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:11">rpl</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <name pos:start="175:15" pos:end="175:20">new_cs</name> <operator pos:start="175:22" pos:end="175:22">&amp;</operator> <literal type="number" pos:start="175:24" pos:end="175:24">3</literal></expr>;</expr_stmt>

        <switch pos:start="177:9" pos:end="209:9">switch <condition pos:start="177:16" pos:end="177:21">(<expr pos:start="177:17" pos:end="177:20"><name pos:start="177:17" pos:end="177:20">type</name></expr>)</condition> <block pos:start="177:23" pos:end="209:9">{<block_content pos:start="179:9" pos:end="207:18">

        <case pos:start="179:9" pos:end="179:15">case <expr pos:start="179:14" pos:end="179:14"><literal type="number" pos:start="179:14" pos:end="179:14">1</literal></expr>:</case> <comment type="block" pos:start="179:17" pos:end="179:39">/* available 286 TSS */</comment>

        <case pos:start="181:9" pos:end="181:15">case <expr pos:start="181:14" pos:end="181:14"><literal type="number" pos:start="181:14" pos:end="181:14">9</literal></expr>:</case> <comment type="block" pos:start="181:17" pos:end="181:39">/* available 386 TSS */</comment>

        <case pos:start="183:9" pos:end="183:15">case <expr pos:start="183:14" pos:end="183:14"><literal type="number" pos:start="183:14" pos:end="183:14">5</literal></expr>:</case> <comment type="block" pos:start="183:17" pos:end="183:31">/* task gate */</comment>

            <if_stmt pos:start="185:13" pos:end="189:13"><if pos:start="185:13" pos:end="189:13">if <condition pos:start="185:16" pos:end="185:39">(<expr pos:start="185:17" pos:end="185:38"><name pos:start="185:17" pos:end="185:19">dpl</name> <operator pos:start="185:21" pos:end="185:21">&lt;</operator> <name pos:start="185:23" pos:end="185:25">cpl</name> <operator pos:start="185:27" pos:end="185:28">||</operator> <name pos:start="185:30" pos:end="185:32">dpl</name> <operator pos:start="185:34" pos:end="185:34">&lt;</operator> <name pos:start="185:36" pos:end="185:38">rpl</name></expr>)</condition> <block pos:start="185:41" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:70">

                <expr_stmt pos:start="187:17" pos:end="187:70"><expr pos:start="187:17" pos:end="187:69"><call pos:start="187:17" pos:end="187:69"><name pos:start="187:17" pos:end="187:35">raise_exception_err</name><argument_list pos:start="187:36" pos:end="187:69">(<argument pos:start="187:37" pos:end="187:39"><expr pos:start="187:37" pos:end="187:39"><name pos:start="187:37" pos:end="187:39">env</name></expr></argument>, <argument pos:start="187:42" pos:end="187:51"><expr pos:start="187:42" pos:end="187:51"><name pos:start="187:42" pos:end="187:51">EXCP0D_GPF</name></expr></argument>, <argument pos:start="187:54" pos:end="187:68"><expr pos:start="187:54" pos:end="187:68"><name pos:start="187:54" pos:end="187:59">new_cs</name> <operator pos:start="187:61" pos:end="187:61">&amp;</operator> <literal type="number" pos:start="187:63" pos:end="187:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:71"><expr pos:start="191:13" pos:end="191:70"><call pos:start="191:13" pos:end="191:70"><name pos:start="191:13" pos:end="191:22">switch_tss</name><argument_list pos:start="191:23" pos:end="191:70">(<argument pos:start="191:24" pos:end="191:26"><expr pos:start="191:24" pos:end="191:26"><name pos:start="191:24" pos:end="191:26">env</name></expr></argument>, <argument pos:start="191:29" pos:end="191:34"><expr pos:start="191:29" pos:end="191:34"><name pos:start="191:29" pos:end="191:34">new_cs</name></expr></argument>, <argument pos:start="191:37" pos:end="191:38"><expr pos:start="191:37" pos:end="191:38"><name pos:start="191:37" pos:end="191:38">e1</name></expr></argument>, <argument pos:start="191:41" pos:end="191:42"><expr pos:start="191:41" pos:end="191:42"><name pos:start="191:41" pos:end="191:42">e2</name></expr></argument>, <argument pos:start="191:45" pos:end="191:59"><expr pos:start="191:45" pos:end="191:59"><name pos:start="191:45" pos:end="191:59">SWITCH_TSS_CALL</name></expr></argument>, <argument pos:start="191:62" pos:end="191:69"><expr pos:start="191:62" pos:end="191:69"><name pos:start="191:62" pos:end="191:69">next_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:33"><expr pos:start="193:13" pos:end="193:32"><name pos:start="193:13" pos:end="193:17">CC_OP</name> <operator pos:start="193:19" pos:end="193:19">=</operator> <name pos:start="193:21" pos:end="193:32">CC_OP_EFLAGS</name></expr>;</expr_stmt>

            <return pos:start="195:13" pos:end="195:19">return;</return>

        <case pos:start="197:9" pos:end="197:15">case <expr pos:start="197:14" pos:end="197:14"><literal type="number" pos:start="197:14" pos:end="197:14">4</literal></expr>:</case> <comment type="block" pos:start="197:17" pos:end="197:35">/* 286 call gate */</comment>

        <case pos:start="199:9" pos:end="199:16">case <expr pos:start="199:14" pos:end="199:15"><literal type="number" pos:start="199:14" pos:end="199:15">12</literal></expr>:</case> <comment type="block" pos:start="199:18" pos:end="199:36">/* 386 call gate */</comment>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <default pos:start="203:9" pos:end="203:16">default:</default>

            <expr_stmt pos:start="205:13" pos:end="205:66"><expr pos:start="205:13" pos:end="205:65"><call pos:start="205:13" pos:end="205:65"><name pos:start="205:13" pos:end="205:31">raise_exception_err</name><argument_list pos:start="205:32" pos:end="205:65">(<argument pos:start="205:33" pos:end="205:35"><expr pos:start="205:33" pos:end="205:35"><name pos:start="205:33" pos:end="205:35">env</name></expr></argument>, <argument pos:start="205:38" pos:end="205:47"><expr pos:start="205:38" pos:end="205:47"><name pos:start="205:38" pos:end="205:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="205:50" pos:end="205:64"><expr pos:start="205:50" pos:end="205:64"><name pos:start="205:50" pos:end="205:55">new_cs</name> <operator pos:start="205:57" pos:end="205:57">&amp;</operator> <literal type="number" pos:start="205:59" pos:end="205:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="211:9" pos:end="211:26"><expr pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:13">shift</name> <operator pos:start="211:15" pos:end="211:15">=</operator> <name pos:start="211:17" pos:end="211:20">type</name> <operator pos:start="211:22" pos:end="211:23">&gt;&gt;</operator> <literal type="number" pos:start="211:25" pos:end="211:25">3</literal></expr>;</expr_stmt>



        <if_stmt pos:start="215:9" pos:end="219:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:35">(<expr pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:15">dpl</name> <operator pos:start="215:17" pos:end="215:17">&lt;</operator> <name pos:start="215:19" pos:end="215:21">cpl</name> <operator pos:start="215:23" pos:end="215:24">||</operator> <name pos:start="215:26" pos:end="215:28">dpl</name> <operator pos:start="215:30" pos:end="215:30">&lt;</operator> <name pos:start="215:32" pos:end="215:34">rpl</name></expr>)</condition> <block pos:start="215:37" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:66">

            <expr_stmt pos:start="217:13" pos:end="217:66"><expr pos:start="217:13" pos:end="217:65"><call pos:start="217:13" pos:end="217:65"><name pos:start="217:13" pos:end="217:31">raise_exception_err</name><argument_list pos:start="217:32" pos:end="217:65">(<argument pos:start="217:33" pos:end="217:35"><expr pos:start="217:33" pos:end="217:35"><name pos:start="217:33" pos:end="217:35">env</name></expr></argument>, <argument pos:start="217:38" pos:end="217:47"><expr pos:start="217:38" pos:end="217:47"><name pos:start="217:38" pos:end="217:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="217:50" pos:end="217:64"><expr pos:start="217:50" pos:end="217:64"><name pos:start="217:50" pos:end="217:55">new_cs</name> <operator pos:start="217:57" pos:end="217:57">&amp;</operator> <literal type="number" pos:start="217:59" pos:end="217:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="221:9" pos:end="221:29">/* check valid bit */</comment>

        <if_stmt pos:start="223:9" pos:end="227:9"><if pos:start="223:9" pos:end="227:9">if <condition pos:start="223:12" pos:end="223:32">(<expr pos:start="223:13" pos:end="223:31"><operator pos:start="223:13" pos:end="223:13">!</operator><operator pos:start="223:14" pos:end="223:14">(</operator><name pos:start="223:15" pos:end="223:16">e2</name> <operator pos:start="223:18" pos:end="223:18">&amp;</operator> <name pos:start="223:20" pos:end="223:30">DESC_P_MASK</name><operator pos:start="223:31" pos:end="223:31">)</operator></expr>)</condition> <block pos:start="223:34" pos:end="227:9">{<block_content pos:start="225:13" pos:end="225:69">

            <expr_stmt pos:start="225:13" pos:end="225:69"><expr pos:start="225:13" pos:end="225:68"><call pos:start="225:13" pos:end="225:68"><name pos:start="225:13" pos:end="225:31">raise_exception_err</name><argument_list pos:start="225:32" pos:end="225:68">(<argument pos:start="225:33" pos:end="225:35"><expr pos:start="225:33" pos:end="225:35"><name pos:start="225:33" pos:end="225:35">env</name></expr></argument>, <argument pos:start="225:38" pos:end="225:49"><expr pos:start="225:38" pos:end="225:49"><name pos:start="225:38" pos:end="225:49">EXCP0B_NOSEG</name></expr></argument>,  <argument pos:start="225:53" pos:end="225:67"><expr pos:start="225:53" pos:end="225:67"><name pos:start="225:53" pos:end="225:58">new_cs</name> <operator pos:start="225:60" pos:end="225:60">&amp;</operator> <literal type="number" pos:start="225:62" pos:end="225:67">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:28"><expr pos:start="229:9" pos:end="229:27"><name pos:start="229:9" pos:end="229:16">selector</name> <operator pos:start="229:18" pos:end="229:18">=</operator> <name pos:start="229:20" pos:end="229:21">e1</name> <operator pos:start="229:23" pos:end="229:24">&gt;&gt;</operator> <literal type="number" pos:start="229:26" pos:end="229:27">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:55"><expr pos:start="231:9" pos:end="231:54"><name pos:start="231:9" pos:end="231:14">offset</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <operator pos:start="231:18" pos:end="231:18">(</operator><name pos:start="231:19" pos:end="231:20">e2</name> <operator pos:start="231:22" pos:end="231:22">&amp;</operator> <literal type="number" pos:start="231:24" pos:end="231:33">0xffff0000</literal><operator pos:start="231:34" pos:end="231:34">)</operator> <operator pos:start="231:36" pos:end="231:36">|</operator> <operator pos:start="231:38" pos:end="231:38">(</operator><name pos:start="231:39" pos:end="231:40">e1</name> <operator pos:start="231:42" pos:end="231:42">&amp;</operator> <literal type="number" pos:start="231:44" pos:end="231:53">0x0000ffff</literal><operator pos:start="231:54" pos:end="231:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:32"><expr pos:start="233:9" pos:end="233:31"><name pos:start="233:9" pos:end="233:19">param_count</name> <operator pos:start="233:21" pos:end="233:21">=</operator> <name pos:start="233:23" pos:end="233:24">e2</name> <operator pos:start="233:26" pos:end="233:26">&amp;</operator> <literal type="number" pos:start="233:28" pos:end="233:31">0x1f</literal></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="239:9"><if pos:start="235:9" pos:end="239:9">if <condition pos:start="235:12" pos:end="235:37">(<expr pos:start="235:13" pos:end="235:36"><operator pos:start="235:13" pos:end="235:13">(</operator><name pos:start="235:14" pos:end="235:21">selector</name> <operator pos:start="235:23" pos:end="235:23">&amp;</operator> <literal type="number" pos:start="235:25" pos:end="235:30">0xfffc</literal><operator pos:start="235:31" pos:end="235:31">)</operator> <operator pos:start="235:33" pos:end="235:34">==</operator> <literal type="number" pos:start="235:36" pos:end="235:36">0</literal></expr>)</condition> <block pos:start="235:39" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:52">

            <expr_stmt pos:start="237:13" pos:end="237:52"><expr pos:start="237:13" pos:end="237:51"><call pos:start="237:13" pos:end="237:51"><name pos:start="237:13" pos:end="237:31">raise_exception_err</name><argument_list pos:start="237:32" pos:end="237:51">(<argument pos:start="237:33" pos:end="237:35"><expr pos:start="237:33" pos:end="237:35"><name pos:start="237:33" pos:end="237:35">env</name></expr></argument>, <argument pos:start="237:38" pos:end="237:47"><expr pos:start="237:38" pos:end="237:47"><name pos:start="237:38" pos:end="237:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="237:50" pos:end="237:50"><expr pos:start="237:50" pos:end="237:50"><literal type="number" pos:start="237:50" pos:end="237:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="243:9" pos:end="247:9"><if pos:start="243:9" pos:end="247:9">if <condition pos:start="243:12" pos:end="243:55">(<expr pos:start="243:13" pos:end="243:54"><call pos:start="243:13" pos:end="243:49"><name pos:start="243:13" pos:end="243:24">load_segment</name><argument_list pos:start="243:25" pos:end="243:49">(<argument pos:start="243:26" pos:end="243:28"><expr pos:start="243:26" pos:end="243:28"><name pos:start="243:26" pos:end="243:28">env</name></expr></argument>, <argument pos:start="243:31" pos:end="243:33"><expr pos:start="243:31" pos:end="243:33"><operator pos:start="243:31" pos:end="243:31">&amp;</operator><name pos:start="243:32" pos:end="243:33">e1</name></expr></argument>, <argument pos:start="243:36" pos:end="243:38"><expr pos:start="243:36" pos:end="243:38"><operator pos:start="243:36" pos:end="243:36">&amp;</operator><name pos:start="243:37" pos:end="243:38">e2</name></expr></argument>, <argument pos:start="243:41" pos:end="243:48"><expr pos:start="243:41" pos:end="243:48"><name pos:start="243:41" pos:end="243:48">selector</name></expr></argument>)</argument_list></call> <operator pos:start="243:51" pos:end="243:52">!=</operator> <literal type="number" pos:start="243:54" pos:end="243:54">0</literal></expr>)</condition> <block pos:start="243:57" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:68">

            <expr_stmt pos:start="245:13" pos:end="245:68"><expr pos:start="245:13" pos:end="245:67"><call pos:start="245:13" pos:end="245:67"><name pos:start="245:13" pos:end="245:31">raise_exception_err</name><argument_list pos:start="245:32" pos:end="245:67">(<argument pos:start="245:33" pos:end="245:35"><expr pos:start="245:33" pos:end="245:35"><name pos:start="245:33" pos:end="245:35">env</name></expr></argument>, <argument pos:start="245:38" pos:end="245:47"><expr pos:start="245:38" pos:end="245:47"><name pos:start="245:38" pos:end="245:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="245:50" pos:end="245:66"><expr pos:start="245:50" pos:end="245:66"><name pos:start="245:50" pos:end="245:57">selector</name> <operator pos:start="245:59" pos:end="245:59">&amp;</operator> <literal type="number" pos:start="245:61" pos:end="245:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="249:9" pos:end="253:9"><if pos:start="249:9" pos:end="253:9">if <condition pos:start="249:12" pos:end="249:58">(<expr pos:start="249:13" pos:end="249:57"><operator pos:start="249:13" pos:end="249:13">!</operator><operator pos:start="249:14" pos:end="249:14">(</operator><name pos:start="249:15" pos:end="249:16">e2</name> <operator pos:start="249:18" pos:end="249:18">&amp;</operator> <name pos:start="249:20" pos:end="249:30">DESC_S_MASK</name><operator pos:start="249:31" pos:end="249:31">)</operator> <operator pos:start="249:33" pos:end="249:34">||</operator> <operator pos:start="249:36" pos:end="249:36">!</operator><operator pos:start="249:37" pos:end="249:37">(</operator><name pos:start="249:38" pos:end="249:39">e2</name> <operator pos:start="249:41" pos:end="249:41">&amp;</operator> <operator pos:start="249:43" pos:end="249:43">(</operator><name pos:start="249:44" pos:end="249:55">DESC_CS_MASK</name><operator pos:start="249:56" pos:end="249:56">)</operator><operator pos:start="249:57" pos:end="249:57">)</operator></expr>)</condition> <block pos:start="249:60" pos:end="253:9">{<block_content pos:start="251:13" pos:end="251:68">

            <expr_stmt pos:start="251:13" pos:end="251:68"><expr pos:start="251:13" pos:end="251:67"><call pos:start="251:13" pos:end="251:67"><name pos:start="251:13" pos:end="251:31">raise_exception_err</name><argument_list pos:start="251:32" pos:end="251:67">(<argument pos:start="251:33" pos:end="251:35"><expr pos:start="251:33" pos:end="251:35"><name pos:start="251:33" pos:end="251:35">env</name></expr></argument>, <argument pos:start="251:38" pos:end="251:47"><expr pos:start="251:38" pos:end="251:47"><name pos:start="251:38" pos:end="251:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="251:50" pos:end="251:66"><expr pos:start="251:50" pos:end="251:66"><name pos:start="251:50" pos:end="251:57">selector</name> <operator pos:start="251:59" pos:end="251:59">&amp;</operator> <literal type="number" pos:start="251:61" pos:end="251:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:41"><expr pos:start="255:9" pos:end="255:40"><name pos:start="255:9" pos:end="255:11">dpl</name> <operator pos:start="255:13" pos:end="255:13">=</operator> <operator pos:start="255:15" pos:end="255:15">(</operator><name pos:start="255:16" pos:end="255:17">e2</name> <operator pos:start="255:19" pos:end="255:20">&gt;&gt;</operator> <name pos:start="255:22" pos:end="255:35">DESC_DPL_SHIFT</name><operator pos:start="255:36" pos:end="255:36">)</operator> <operator pos:start="255:38" pos:end="255:38">&amp;</operator> <literal type="number" pos:start="255:40" pos:end="255:40">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="261:9"><if pos:start="257:9" pos:end="261:9">if <condition pos:start="257:12" pos:end="257:22">(<expr pos:start="257:13" pos:end="257:21"><name pos:start="257:13" pos:end="257:15">dpl</name> <operator pos:start="257:17" pos:end="257:17">&gt;</operator> <name pos:start="257:19" pos:end="257:21">cpl</name></expr>)</condition> <block pos:start="257:24" pos:end="261:9">{<block_content pos:start="259:13" pos:end="259:68">

            <expr_stmt pos:start="259:13" pos:end="259:68"><expr pos:start="259:13" pos:end="259:67"><call pos:start="259:13" pos:end="259:67"><name pos:start="259:13" pos:end="259:31">raise_exception_err</name><argument_list pos:start="259:32" pos:end="259:67">(<argument pos:start="259:33" pos:end="259:35"><expr pos:start="259:33" pos:end="259:35"><name pos:start="259:33" pos:end="259:35">env</name></expr></argument>, <argument pos:start="259:38" pos:end="259:47"><expr pos:start="259:38" pos:end="259:47"><name pos:start="259:38" pos:end="259:47">EXCP0D_GPF</name></expr></argument>, <argument pos:start="259:50" pos:end="259:66"><expr pos:start="259:50" pos:end="259:66"><name pos:start="259:50" pos:end="259:57">selector</name> <operator pos:start="259:59" pos:end="259:59">&amp;</operator> <literal type="number" pos:start="259:61" pos:end="259:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="263:9" pos:end="267:9"><if pos:start="263:9" pos:end="267:9">if <condition pos:start="263:12" pos:end="263:32">(<expr pos:start="263:13" pos:end="263:31"><operator pos:start="263:13" pos:end="263:13">!</operator><operator pos:start="263:14" pos:end="263:14">(</operator><name pos:start="263:15" pos:end="263:16">e2</name> <operator pos:start="263:18" pos:end="263:18">&amp;</operator> <name pos:start="263:20" pos:end="263:30">DESC_P_MASK</name><operator pos:start="263:31" pos:end="263:31">)</operator></expr>)</condition> <block pos:start="263:34" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:70">

            <expr_stmt pos:start="265:13" pos:end="265:70"><expr pos:start="265:13" pos:end="265:69"><call pos:start="265:13" pos:end="265:69"><name pos:start="265:13" pos:end="265:31">raise_exception_err</name><argument_list pos:start="265:32" pos:end="265:69">(<argument pos:start="265:33" pos:end="265:35"><expr pos:start="265:33" pos:end="265:35"><name pos:start="265:33" pos:end="265:35">env</name></expr></argument>, <argument pos:start="265:38" pos:end="265:49"><expr pos:start="265:38" pos:end="265:49"><name pos:start="265:38" pos:end="265:49">EXCP0B_NOSEG</name></expr></argument>, <argument pos:start="265:52" pos:end="265:68"><expr pos:start="265:52" pos:end="265:68"><name pos:start="265:52" pos:end="265:59">selector</name> <operator pos:start="265:61" pos:end="265:61">&amp;</operator> <literal type="number" pos:start="265:63" pos:end="265:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="271:9" pos:end="395:9"><if pos:start="271:9" pos:end="381:9">if <condition pos:start="271:12" pos:end="271:45">(<expr pos:start="271:13" pos:end="271:44"><operator pos:start="271:13" pos:end="271:13">!</operator><operator pos:start="271:14" pos:end="271:14">(</operator><name pos:start="271:15" pos:end="271:16">e2</name> <operator pos:start="271:18" pos:end="271:18">&amp;</operator> <name pos:start="271:20" pos:end="271:30">DESC_C_MASK</name><operator pos:start="271:31" pos:end="271:31">)</operator> <operator pos:start="271:33" pos:end="271:34">&amp;&amp;</operator> <name pos:start="271:36" pos:end="271:38">dpl</name> <operator pos:start="271:40" pos:end="271:40">&lt;</operator> <name pos:start="271:42" pos:end="271:44">cpl</name></expr>)</condition> <block pos:start="271:47" pos:end="381:9">{<block_content pos:start="275:13" pos:end="379:26">

            <comment type="block" pos:start="273:13" pos:end="273:36">/* to inner privilege */</comment>

            <expr_stmt pos:start="275:13" pos:end="275:52"><expr pos:start="275:13" pos:end="275:51"><call pos:start="275:13" pos:end="275:51"><name pos:start="275:13" pos:end="275:31">get_ss_esp_from_tss</name><argument_list pos:start="275:32" pos:end="275:51">(<argument pos:start="275:33" pos:end="275:35"><expr pos:start="275:33" pos:end="275:35"><name pos:start="275:33" pos:end="275:35">env</name></expr></argument>, <argument pos:start="275:38" pos:end="275:40"><expr pos:start="275:38" pos:end="275:40"><operator pos:start="275:38" pos:end="275:38">&amp;</operator><name pos:start="275:39" pos:end="275:40">ss</name></expr></argument>, <argument pos:start="275:43" pos:end="275:45"><expr pos:start="275:43" pos:end="275:45"><operator pos:start="275:43" pos:end="275:43">&amp;</operator><name pos:start="275:44" pos:end="275:45">sp</name></expr></argument>, <argument pos:start="275:48" pos:end="275:50"><expr pos:start="275:48" pos:end="275:50"><name pos:start="275:48" pos:end="275:50">dpl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="281:40"><expr pos:start="277:13" pos:end="281:39"><call pos:start="277:13" pos:end="281:39"><name pos:start="277:13" pos:end="277:21">LOG_PCALL</name><argument_list pos:start="277:22" pos:end="281:39">(<argument pos:start="277:23" pos:end="279:40"><expr pos:start="277:23" pos:end="279:40"><literal type="string" pos:start="277:23" pos:end="277:77">"new ss:esp=%04x:%08x param_count=%d env-&gt;regs[R_ESP]="</literal>

                      <name pos:start="279:23" pos:end="279:35">TARGET_FMT_lx</name> <literal type="string" pos:start="279:37" pos:end="279:40">"\n"</literal></expr></argument>, <argument pos:start="279:43" pos:end="279:44"><expr pos:start="279:43" pos:end="279:44"><name pos:start="279:43" pos:end="279:44">ss</name></expr></argument>, <argument pos:start="279:47" pos:end="279:48"><expr pos:start="279:47" pos:end="279:48"><name pos:start="279:47" pos:end="279:48">sp</name></expr></argument>, <argument pos:start="279:51" pos:end="279:61"><expr pos:start="279:51" pos:end="279:61"><name pos:start="279:51" pos:end="279:61">param_count</name></expr></argument>,

                      <argument pos:start="281:23" pos:end="281:38"><expr pos:start="281:23" pos:end="281:38"><name pos:start="281:23" pos:end="281:38"><name pos:start="281:23" pos:end="281:25">env</name><operator pos:start="281:26" pos:end="281:27">-&gt;</operator><name pos:start="281:28" pos:end="281:31">regs</name><index pos:start="281:32" pos:end="281:38">[<expr pos:start="281:33" pos:end="281:37"><name pos:start="281:33" pos:end="281:37">R_ESP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="283:13" pos:end="287:13"><if pos:start="283:13" pos:end="287:13">if <condition pos:start="283:16" pos:end="283:35">(<expr pos:start="283:17" pos:end="283:34"><operator pos:start="283:17" pos:end="283:17">(</operator><name pos:start="283:18" pos:end="283:19">ss</name> <operator pos:start="283:21" pos:end="283:21">&amp;</operator> <literal type="number" pos:start="283:23" pos:end="283:28">0xfffc</literal><operator pos:start="283:29" pos:end="283:29">)</operator> <operator pos:start="283:31" pos:end="283:32">==</operator> <literal type="number" pos:start="283:34" pos:end="283:34">0</literal></expr>)</condition> <block pos:start="283:37" pos:end="287:13">{<block_content pos:start="285:17" pos:end="285:66">

                <expr_stmt pos:start="285:17" pos:end="285:66"><expr pos:start="285:17" pos:end="285:65"><call pos:start="285:17" pos:end="285:65"><name pos:start="285:17" pos:end="285:35">raise_exception_err</name><argument_list pos:start="285:36" pos:end="285:65">(<argument pos:start="285:37" pos:end="285:39"><expr pos:start="285:37" pos:end="285:39"><name pos:start="285:37" pos:end="285:39">env</name></expr></argument>, <argument pos:start="285:42" pos:end="285:51"><expr pos:start="285:42" pos:end="285:51"><name pos:start="285:42" pos:end="285:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="285:54" pos:end="285:64"><expr pos:start="285:54" pos:end="285:64"><name pos:start="285:54" pos:end="285:55">ss</name> <operator pos:start="285:57" pos:end="285:57">&amp;</operator> <literal type="number" pos:start="285:59" pos:end="285:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="289:13" pos:end="293:13"><if pos:start="289:13" pos:end="293:13">if <condition pos:start="289:16" pos:end="289:32">(<expr pos:start="289:17" pos:end="289:31"><operator pos:start="289:17" pos:end="289:17">(</operator><name pos:start="289:18" pos:end="289:19">ss</name> <operator pos:start="289:21" pos:end="289:21">&amp;</operator> <literal type="number" pos:start="289:23" pos:end="289:23">3</literal><operator pos:start="289:24" pos:end="289:24">)</operator> <operator pos:start="289:26" pos:end="289:27">!=</operator> <name pos:start="289:29" pos:end="289:31">dpl</name></expr>)</condition> <block pos:start="289:34" pos:end="293:13">{<block_content pos:start="291:17" pos:end="291:66">

                <expr_stmt pos:start="291:17" pos:end="291:66"><expr pos:start="291:17" pos:end="291:65"><call pos:start="291:17" pos:end="291:65"><name pos:start="291:17" pos:end="291:35">raise_exception_err</name><argument_list pos:start="291:36" pos:end="291:65">(<argument pos:start="291:37" pos:end="291:39"><expr pos:start="291:37" pos:end="291:39"><name pos:start="291:37" pos:end="291:39">env</name></expr></argument>, <argument pos:start="291:42" pos:end="291:51"><expr pos:start="291:42" pos:end="291:51"><name pos:start="291:42" pos:end="291:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="291:54" pos:end="291:64"><expr pos:start="291:54" pos:end="291:64"><name pos:start="291:54" pos:end="291:55">ss</name> <operator pos:start="291:57" pos:end="291:57">&amp;</operator> <literal type="number" pos:start="291:59" pos:end="291:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="295:13" pos:end="299:13"><if pos:start="295:13" pos:end="299:13">if <condition pos:start="295:16" pos:end="295:59">(<expr pos:start="295:17" pos:end="295:58"><call pos:start="295:17" pos:end="295:53"><name pos:start="295:17" pos:end="295:28">load_segment</name><argument_list pos:start="295:29" pos:end="295:53">(<argument pos:start="295:30" pos:end="295:32"><expr pos:start="295:30" pos:end="295:32"><name pos:start="295:30" pos:end="295:32">env</name></expr></argument>, <argument pos:start="295:35" pos:end="295:40"><expr pos:start="295:35" pos:end="295:40"><operator pos:start="295:35" pos:end="295:35">&amp;</operator><name pos:start="295:36" pos:end="295:40">ss_e1</name></expr></argument>, <argument pos:start="295:43" pos:end="295:48"><expr pos:start="295:43" pos:end="295:48"><operator pos:start="295:43" pos:end="295:43">&amp;</operator><name pos:start="295:44" pos:end="295:48">ss_e2</name></expr></argument>, <argument pos:start="295:51" pos:end="295:52"><expr pos:start="295:51" pos:end="295:52"><name pos:start="295:51" pos:end="295:52">ss</name></expr></argument>)</argument_list></call> <operator pos:start="295:55" pos:end="295:56">!=</operator> <literal type="number" pos:start="295:58" pos:end="295:58">0</literal></expr>)</condition> <block pos:start="295:61" pos:end="299:13">{<block_content pos:start="297:17" pos:end="297:66">

                <expr_stmt pos:start="297:17" pos:end="297:66"><expr pos:start="297:17" pos:end="297:65"><call pos:start="297:17" pos:end="297:65"><name pos:start="297:17" pos:end="297:35">raise_exception_err</name><argument_list pos:start="297:36" pos:end="297:65">(<argument pos:start="297:37" pos:end="297:39"><expr pos:start="297:37" pos:end="297:39"><name pos:start="297:37" pos:end="297:39">env</name></expr></argument>, <argument pos:start="297:42" pos:end="297:51"><expr pos:start="297:42" pos:end="297:51"><name pos:start="297:42" pos:end="297:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="297:54" pos:end="297:64"><expr pos:start="297:54" pos:end="297:64"><name pos:start="297:54" pos:end="297:55">ss</name> <operator pos:start="297:57" pos:end="297:57">&amp;</operator> <literal type="number" pos:start="297:59" pos:end="297:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:51"><expr pos:start="301:13" pos:end="301:50"><name pos:start="301:13" pos:end="301:18">ss_dpl</name> <operator pos:start="301:20" pos:end="301:20">=</operator> <operator pos:start="301:22" pos:end="301:22">(</operator><name pos:start="301:23" pos:end="301:27">ss_e2</name> <operator pos:start="301:29" pos:end="301:30">&gt;&gt;</operator> <name pos:start="301:32" pos:end="301:45">DESC_DPL_SHIFT</name><operator pos:start="301:46" pos:end="301:46">)</operator> <operator pos:start="301:48" pos:end="301:48">&amp;</operator> <literal type="number" pos:start="301:50" pos:end="301:50">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="303:13" pos:end="307:13"><if pos:start="303:13" pos:end="307:13">if <condition pos:start="303:16" pos:end="303:30">(<expr pos:start="303:17" pos:end="303:29"><name pos:start="303:17" pos:end="303:22">ss_dpl</name> <operator pos:start="303:24" pos:end="303:25">!=</operator> <name pos:start="303:27" pos:end="303:29">dpl</name></expr>)</condition> <block pos:start="303:32" pos:end="307:13">{<block_content pos:start="305:17" pos:end="305:66">

                <expr_stmt pos:start="305:17" pos:end="305:66"><expr pos:start="305:17" pos:end="305:65"><call pos:start="305:17" pos:end="305:65"><name pos:start="305:17" pos:end="305:35">raise_exception_err</name><argument_list pos:start="305:36" pos:end="305:65">(<argument pos:start="305:37" pos:end="305:39"><expr pos:start="305:37" pos:end="305:39"><name pos:start="305:37" pos:end="305:39">env</name></expr></argument>, <argument pos:start="305:42" pos:end="305:51"><expr pos:start="305:42" pos:end="305:51"><name pos:start="305:42" pos:end="305:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="305:54" pos:end="305:64"><expr pos:start="305:54" pos:end="305:64"><name pos:start="305:54" pos:end="305:55">ss</name> <operator pos:start="305:57" pos:end="305:57">&amp;</operator> <literal type="number" pos:start="305:59" pos:end="305:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="309:13" pos:end="317:13"><if pos:start="309:13" pos:end="317:13">if <condition pos:start="309:16" pos:end="313:39">(<expr pos:start="309:17" pos:end="313:38"><operator pos:start="309:17" pos:end="309:17">!</operator><operator pos:start="309:18" pos:end="309:18">(</operator><name pos:start="309:19" pos:end="309:23">ss_e2</name> <operator pos:start="309:25" pos:end="309:25">&amp;</operator> <name pos:start="309:27" pos:end="309:37">DESC_S_MASK</name><operator pos:start="309:38" pos:end="309:38">)</operator> <operator pos:start="309:40" pos:end="309:41">||</operator>

                <operator pos:start="311:17" pos:end="311:17">(</operator><name pos:start="311:18" pos:end="311:22">ss_e2</name> <operator pos:start="311:24" pos:end="311:24">&amp;</operator> <name pos:start="311:26" pos:end="311:37">DESC_CS_MASK</name><operator pos:start="311:38" pos:end="311:38">)</operator> <operator pos:start="311:40" pos:end="311:41">||</operator>

                <operator pos:start="313:17" pos:end="313:17">!</operator><operator pos:start="313:18" pos:end="313:18">(</operator><name pos:start="313:19" pos:end="313:23">ss_e2</name> <operator pos:start="313:25" pos:end="313:25">&amp;</operator> <name pos:start="313:27" pos:end="313:37">DESC_W_MASK</name><operator pos:start="313:38" pos:end="313:38">)</operator></expr>)</condition> <block pos:start="313:41" pos:end="317:13">{<block_content pos:start="315:17" pos:end="315:66">

                <expr_stmt pos:start="315:17" pos:end="315:66"><expr pos:start="315:17" pos:end="315:65"><call pos:start="315:17" pos:end="315:65"><name pos:start="315:17" pos:end="315:35">raise_exception_err</name><argument_list pos:start="315:36" pos:end="315:65">(<argument pos:start="315:37" pos:end="315:39"><expr pos:start="315:37" pos:end="315:39"><name pos:start="315:37" pos:end="315:39">env</name></expr></argument>, <argument pos:start="315:42" pos:end="315:51"><expr pos:start="315:42" pos:end="315:51"><name pos:start="315:42" pos:end="315:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="315:54" pos:end="315:64"><expr pos:start="315:54" pos:end="315:64"><name pos:start="315:54" pos:end="315:55">ss</name> <operator pos:start="315:57" pos:end="315:57">&amp;</operator> <literal type="number" pos:start="315:59" pos:end="315:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="319:13" pos:end="323:13"><if pos:start="319:13" pos:end="323:13">if <condition pos:start="319:16" pos:end="319:39">(<expr pos:start="319:17" pos:end="319:38"><operator pos:start="319:17" pos:end="319:17">!</operator><operator pos:start="319:18" pos:end="319:18">(</operator><name pos:start="319:19" pos:end="319:23">ss_e2</name> <operator pos:start="319:25" pos:end="319:25">&amp;</operator> <name pos:start="319:27" pos:end="319:37">DESC_P_MASK</name><operator pos:start="319:38" pos:end="319:38">)</operator></expr>)</condition> <block pos:start="319:41" pos:end="323:13">{<block_content pos:start="321:17" pos:end="321:66">

                <expr_stmt pos:start="321:17" pos:end="321:66"><expr pos:start="321:17" pos:end="321:65"><call pos:start="321:17" pos:end="321:65"><name pos:start="321:17" pos:end="321:35">raise_exception_err</name><argument_list pos:start="321:36" pos:end="321:65">(<argument pos:start="321:37" pos:end="321:39"><expr pos:start="321:37" pos:end="321:39"><name pos:start="321:37" pos:end="321:39">env</name></expr></argument>, <argument pos:start="321:42" pos:end="321:51"><expr pos:start="321:42" pos:end="321:51"><name pos:start="321:42" pos:end="321:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="321:54" pos:end="321:64"><expr pos:start="321:54" pos:end="321:64"><name pos:start="321:54" pos:end="321:55">ss</name> <operator pos:start="321:57" pos:end="321:57">&amp;</operator> <literal type="number" pos:start="321:59" pos:end="321:64">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="327:13" pos:end="327:63">/* push_size = ((param_count * 2) + 8) &lt;&lt; shift; */</comment>



            <expr_stmt pos:start="331:13" pos:end="331:61"><expr pos:start="331:13" pos:end="331:60"><name pos:start="331:13" pos:end="331:23">old_sp_mask</name> <operator pos:start="331:25" pos:end="331:25">=</operator> <call pos:start="331:27" pos:end="331:60"><name pos:start="331:27" pos:end="331:37">get_sp_mask</name><argument_list pos:start="331:38" pos:end="331:60">(<argument pos:start="331:39" pos:end="331:59"><expr pos:start="331:39" pos:end="331:59"><name pos:start="331:39" pos:end="331:53"><name pos:start="331:39" pos:end="331:41">env</name><operator pos:start="331:42" pos:end="331:43">-&gt;</operator><name pos:start="331:44" pos:end="331:47">segs</name><index pos:start="331:48" pos:end="331:53">[<expr pos:start="331:49" pos:end="331:52"><name pos:start="331:49" pos:end="331:52">R_SS</name></expr>]</index></name><operator pos:start="331:54" pos:end="331:54">.</operator><name pos:start="331:55" pos:end="331:59">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:43"><expr pos:start="333:13" pos:end="333:42"><name pos:start="333:13" pos:end="333:19">old_ssp</name> <operator pos:start="333:21" pos:end="333:21">=</operator> <name pos:start="333:23" pos:end="333:37"><name pos:start="333:23" pos:end="333:25">env</name><operator pos:start="333:26" pos:end="333:27">-&gt;</operator><name pos:start="333:28" pos:end="333:31">segs</name><index pos:start="333:32" pos:end="333:37">[<expr pos:start="333:33" pos:end="333:36"><name pos:start="333:33" pos:end="333:36">R_SS</name></expr>]</index></name><operator pos:start="333:38" pos:end="333:38">.</operator><name pos:start="333:39" pos:end="333:42">base</name></expr>;</expr_stmt>



            <expr_stmt pos:start="337:13" pos:end="337:41"><expr pos:start="337:13" pos:end="337:40"><name pos:start="337:13" pos:end="337:19">sp_mask</name> <operator pos:start="337:21" pos:end="337:21">=</operator> <call pos:start="337:23" pos:end="337:40"><name pos:start="337:23" pos:end="337:33">get_sp_mask</name><argument_list pos:start="337:34" pos:end="337:40">(<argument pos:start="337:35" pos:end="337:39"><expr pos:start="337:35" pos:end="337:39"><name pos:start="337:35" pos:end="337:39">ss_e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:45"><expr pos:start="339:13" pos:end="339:44"><name pos:start="339:13" pos:end="339:15">ssp</name> <operator pos:start="339:17" pos:end="339:17">=</operator> <call pos:start="339:19" pos:end="339:44"><name pos:start="339:19" pos:end="339:30">get_seg_base</name><argument_list pos:start="339:31" pos:end="339:44">(<argument pos:start="339:32" pos:end="339:36"><expr pos:start="339:32" pos:end="339:36"><name pos:start="339:32" pos:end="339:36">ss_e1</name></expr></argument>, <argument pos:start="339:39" pos:end="339:43"><expr pos:start="339:39" pos:end="339:43"><name pos:start="339:39" pos:end="339:43">ss_e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="377:13"><if pos:start="341:13" pos:end="359:13">if <condition pos:start="341:16" pos:end="341:22">(<expr pos:start="341:17" pos:end="341:21"><name pos:start="341:17" pos:end="341:21">shift</name></expr>)</condition> <block pos:start="341:24" pos:end="359:13">{<block_content pos:start="343:17" pos:end="357:17">

                <expr_stmt pos:start="343:17" pos:end="343:66"><expr pos:start="343:17" pos:end="343:65"><call pos:start="343:17" pos:end="343:65"><name pos:start="343:17" pos:end="343:21">PUSHL</name><argument_list pos:start="343:22" pos:end="343:65">(<argument pos:start="343:23" pos:end="343:25"><expr pos:start="343:23" pos:end="343:25"><name pos:start="343:23" pos:end="343:25">ssp</name></expr></argument>, <argument pos:start="343:28" pos:end="343:29"><expr pos:start="343:28" pos:end="343:29"><name pos:start="343:28" pos:end="343:29">sp</name></expr></argument>, <argument pos:start="343:32" pos:end="343:38"><expr pos:start="343:32" pos:end="343:38"><name pos:start="343:32" pos:end="343:38">sp_mask</name></expr></argument>, <argument pos:start="343:41" pos:end="343:64"><expr pos:start="343:41" pos:end="343:64"><name pos:start="343:41" pos:end="343:55"><name pos:start="343:41" pos:end="343:43">env</name><operator pos:start="343:44" pos:end="343:45">-&gt;</operator><name pos:start="343:46" pos:end="343:49">segs</name><index pos:start="343:50" pos:end="343:55">[<expr pos:start="343:51" pos:end="343:54"><name pos:start="343:51" pos:end="343:54">R_SS</name></expr>]</index></name><operator pos:start="343:56" pos:end="343:56">.</operator><name pos:start="343:57" pos:end="343:64">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:58"><expr pos:start="345:17" pos:end="345:57"><call pos:start="345:17" pos:end="345:57"><name pos:start="345:17" pos:end="345:21">PUSHL</name><argument_list pos:start="345:22" pos:end="345:57">(<argument pos:start="345:23" pos:end="345:25"><expr pos:start="345:23" pos:end="345:25"><name pos:start="345:23" pos:end="345:25">ssp</name></expr></argument>, <argument pos:start="345:28" pos:end="345:29"><expr pos:start="345:28" pos:end="345:29"><name pos:start="345:28" pos:end="345:29">sp</name></expr></argument>, <argument pos:start="345:32" pos:end="345:38"><expr pos:start="345:32" pos:end="345:38"><name pos:start="345:32" pos:end="345:38">sp_mask</name></expr></argument>, <argument pos:start="345:41" pos:end="345:56"><expr pos:start="345:41" pos:end="345:56"><name pos:start="345:41" pos:end="345:56"><name pos:start="345:41" pos:end="345:43">env</name><operator pos:start="345:44" pos:end="345:45">-&gt;</operator><name pos:start="345:46" pos:end="345:49">regs</name><index pos:start="345:50" pos:end="345:56">[<expr pos:start="345:51" pos:end="345:55"><name pos:start="345:51" pos:end="345:55">R_ESP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="347:17" pos:end="357:17">for <control pos:start="347:21" pos:end="347:54">(<init pos:start="347:22" pos:end="347:41"><expr pos:start="347:22" pos:end="347:40"><name pos:start="347:22" pos:end="347:22">i</name> <operator pos:start="347:24" pos:end="347:24">=</operator> <name pos:start="347:26" pos:end="347:36">param_count</name> <operator pos:start="347:38" pos:end="347:38">-</operator> <literal type="number" pos:start="347:40" pos:end="347:40">1</literal></expr>;</init> <condition pos:start="347:43" pos:end="347:49"><expr pos:start="347:43" pos:end="347:48"><name pos:start="347:43" pos:end="347:43">i</name> <operator pos:start="347:45" pos:end="347:46">&gt;=</operator> <literal type="number" pos:start="347:48" pos:end="347:48">0</literal></expr>;</condition> <incr pos:start="347:51" pos:end="347:53"><expr pos:start="347:51" pos:end="347:53"><name pos:start="347:51" pos:end="347:51">i</name><operator pos:start="347:52" pos:end="347:53">--</operator></expr></incr>)</control> <block pos:start="347:56" pos:end="357:17">{<block_content pos:start="349:21" pos:end="355:49">

                    <expr_stmt pos:start="349:21" pos:end="353:56"><expr pos:start="349:21" pos:end="353:55"><name pos:start="349:21" pos:end="349:23">val</name> <operator pos:start="349:25" pos:end="349:25">=</operator> <call pos:start="349:27" pos:end="353:55"><name pos:start="349:27" pos:end="349:40">cpu_ldl_kernel</name><argument_list pos:start="349:41" pos:end="353:55">(<argument pos:start="349:42" pos:end="349:44"><expr pos:start="349:42" pos:end="349:44"><name pos:start="349:42" pos:end="349:44">env</name></expr></argument>, <argument pos:start="349:47" pos:end="353:54"><expr pos:start="349:47" pos:end="353:54"><name pos:start="349:47" pos:end="349:53">old_ssp</name> <operator pos:start="349:55" pos:end="349:55">+</operator>

                                         <operator pos:start="351:42" pos:end="351:42">(</operator><operator pos:start="351:43" pos:end="351:43">(</operator><name pos:start="351:44" pos:end="351:59"><name pos:start="351:44" pos:end="351:46">env</name><operator pos:start="351:47" pos:end="351:48">-&gt;</operator><name pos:start="351:49" pos:end="351:52">regs</name><index pos:start="351:53" pos:end="351:59">[<expr pos:start="351:54" pos:end="351:58"><name pos:start="351:54" pos:end="351:58">R_ESP</name></expr>]</index></name> <operator pos:start="351:61" pos:end="351:61">+</operator> <name pos:start="351:63" pos:end="351:63">i</name> <operator pos:start="351:65" pos:end="351:65">*</operator> <literal type="number" pos:start="351:67" pos:end="351:67">4</literal><operator pos:start="351:68" pos:end="351:68">)</operator> <operator pos:start="351:70" pos:end="351:70">&amp;</operator>

                                          <name pos:start="353:43" pos:end="353:53">old_sp_mask</name><operator pos:start="353:54" pos:end="353:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="355:21" pos:end="355:49"><expr pos:start="355:21" pos:end="355:48"><call pos:start="355:21" pos:end="355:48"><name pos:start="355:21" pos:end="355:25">PUSHL</name><argument_list pos:start="355:26" pos:end="355:48">(<argument pos:start="355:27" pos:end="355:29"><expr pos:start="355:27" pos:end="355:29"><name pos:start="355:27" pos:end="355:29">ssp</name></expr></argument>, <argument pos:start="355:32" pos:end="355:33"><expr pos:start="355:32" pos:end="355:33"><name pos:start="355:32" pos:end="355:33">sp</name></expr></argument>, <argument pos:start="355:36" pos:end="355:42"><expr pos:start="355:36" pos:end="355:42"><name pos:start="355:36" pos:end="355:42">sp_mask</name></expr></argument>, <argument pos:start="355:45" pos:end="355:47"><expr pos:start="355:45" pos:end="355:47"><name pos:start="355:45" pos:end="355:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="359:15" pos:end="377:13">else <block pos:start="359:20" pos:end="377:13">{<block_content pos:start="361:17" pos:end="375:17">

                <expr_stmt pos:start="361:17" pos:end="361:66"><expr pos:start="361:17" pos:end="361:65"><call pos:start="361:17" pos:end="361:65"><name pos:start="361:17" pos:end="361:21">PUSHW</name><argument_list pos:start="361:22" pos:end="361:65">(<argument pos:start="361:23" pos:end="361:25"><expr pos:start="361:23" pos:end="361:25"><name pos:start="361:23" pos:end="361:25">ssp</name></expr></argument>, <argument pos:start="361:28" pos:end="361:29"><expr pos:start="361:28" pos:end="361:29"><name pos:start="361:28" pos:end="361:29">sp</name></expr></argument>, <argument pos:start="361:32" pos:end="361:38"><expr pos:start="361:32" pos:end="361:38"><name pos:start="361:32" pos:end="361:38">sp_mask</name></expr></argument>, <argument pos:start="361:41" pos:end="361:64"><expr pos:start="361:41" pos:end="361:64"><name pos:start="361:41" pos:end="361:55"><name pos:start="361:41" pos:end="361:43">env</name><operator pos:start="361:44" pos:end="361:45">-&gt;</operator><name pos:start="361:46" pos:end="361:49">segs</name><index pos:start="361:50" pos:end="361:55">[<expr pos:start="361:51" pos:end="361:54"><name pos:start="361:51" pos:end="361:54">R_SS</name></expr>]</index></name><operator pos:start="361:56" pos:end="361:56">.</operator><name pos:start="361:57" pos:end="361:64">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:58"><expr pos:start="363:17" pos:end="363:57"><call pos:start="363:17" pos:end="363:57"><name pos:start="363:17" pos:end="363:21">PUSHW</name><argument_list pos:start="363:22" pos:end="363:57">(<argument pos:start="363:23" pos:end="363:25"><expr pos:start="363:23" pos:end="363:25"><name pos:start="363:23" pos:end="363:25">ssp</name></expr></argument>, <argument pos:start="363:28" pos:end="363:29"><expr pos:start="363:28" pos:end="363:29"><name pos:start="363:28" pos:end="363:29">sp</name></expr></argument>, <argument pos:start="363:32" pos:end="363:38"><expr pos:start="363:32" pos:end="363:38"><name pos:start="363:32" pos:end="363:38">sp_mask</name></expr></argument>, <argument pos:start="363:41" pos:end="363:56"><expr pos:start="363:41" pos:end="363:56"><name pos:start="363:41" pos:end="363:56"><name pos:start="363:41" pos:end="363:43">env</name><operator pos:start="363:44" pos:end="363:45">-&gt;</operator><name pos:start="363:46" pos:end="363:49">regs</name><index pos:start="363:50" pos:end="363:56">[<expr pos:start="363:51" pos:end="363:55"><name pos:start="363:51" pos:end="363:55">R_ESP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="365:17" pos:end="375:17">for <control pos:start="365:21" pos:end="365:54">(<init pos:start="365:22" pos:end="365:41"><expr pos:start="365:22" pos:end="365:40"><name pos:start="365:22" pos:end="365:22">i</name> <operator pos:start="365:24" pos:end="365:24">=</operator> <name pos:start="365:26" pos:end="365:36">param_count</name> <operator pos:start="365:38" pos:end="365:38">-</operator> <literal type="number" pos:start="365:40" pos:end="365:40">1</literal></expr>;</init> <condition pos:start="365:43" pos:end="365:49"><expr pos:start="365:43" pos:end="365:48"><name pos:start="365:43" pos:end="365:43">i</name> <operator pos:start="365:45" pos:end="365:46">&gt;=</operator> <literal type="number" pos:start="365:48" pos:end="365:48">0</literal></expr>;</condition> <incr pos:start="365:51" pos:end="365:53"><expr pos:start="365:51" pos:end="365:53"><name pos:start="365:51" pos:end="365:51">i</name><operator pos:start="365:52" pos:end="365:53">--</operator></expr></incr>)</control> <block pos:start="365:56" pos:end="375:17">{<block_content pos:start="367:21" pos:end="373:49">

                    <expr_stmt pos:start="367:21" pos:end="371:57"><expr pos:start="367:21" pos:end="371:56"><name pos:start="367:21" pos:end="367:23">val</name> <operator pos:start="367:25" pos:end="367:25">=</operator> <call pos:start="367:27" pos:end="371:56"><name pos:start="367:27" pos:end="367:41">cpu_lduw_kernel</name><argument_list pos:start="367:42" pos:end="371:56">(<argument pos:start="367:43" pos:end="367:45"><expr pos:start="367:43" pos:end="367:45"><name pos:start="367:43" pos:end="367:45">env</name></expr></argument>, <argument pos:start="367:48" pos:end="371:55"><expr pos:start="367:48" pos:end="371:55"><name pos:start="367:48" pos:end="367:54">old_ssp</name> <operator pos:start="367:56" pos:end="367:56">+</operator>

                                          <operator pos:start="369:43" pos:end="369:43">(</operator><operator pos:start="369:44" pos:end="369:44">(</operator><name pos:start="369:45" pos:end="369:60"><name pos:start="369:45" pos:end="369:47">env</name><operator pos:start="369:48" pos:end="369:49">-&gt;</operator><name pos:start="369:50" pos:end="369:53">regs</name><index pos:start="369:54" pos:end="369:60">[<expr pos:start="369:55" pos:end="369:59"><name pos:start="369:55" pos:end="369:59">R_ESP</name></expr>]</index></name> <operator pos:start="369:62" pos:end="369:62">+</operator> <name pos:start="369:64" pos:end="369:64">i</name> <operator pos:start="369:66" pos:end="369:66">*</operator> <literal type="number" pos:start="369:68" pos:end="369:68">2</literal><operator pos:start="369:69" pos:end="369:69">)</operator> <operator pos:start="369:71" pos:end="369:71">&amp;</operator>

                                           <name pos:start="371:44" pos:end="371:54">old_sp_mask</name><operator pos:start="371:55" pos:end="371:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="373:21" pos:end="373:49"><expr pos:start="373:21" pos:end="373:48"><call pos:start="373:21" pos:end="373:48"><name pos:start="373:21" pos:end="373:25">PUSHW</name><argument_list pos:start="373:26" pos:end="373:48">(<argument pos:start="373:27" pos:end="373:29"><expr pos:start="373:27" pos:end="373:29"><name pos:start="373:27" pos:end="373:29">ssp</name></expr></argument>, <argument pos:start="373:32" pos:end="373:33"><expr pos:start="373:32" pos:end="373:33"><name pos:start="373:32" pos:end="373:33">sp</name></expr></argument>, <argument pos:start="373:36" pos:end="373:42"><expr pos:start="373:36" pos:end="373:42"><name pos:start="373:36" pos:end="373:42">sp_mask</name></expr></argument>, <argument pos:start="373:45" pos:end="373:47"><expr pos:start="373:45" pos:end="373:47"><name pos:start="373:45" pos:end="373:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:26"><expr pos:start="379:13" pos:end="379:25"><name pos:start="379:13" pos:end="379:21">new_stack</name> <operator pos:start="379:23" pos:end="379:23">=</operator> <literal type="number" pos:start="379:25" pos:end="379:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="381:11" pos:end="395:9">else <block pos:start="381:16" pos:end="395:9">{<block_content pos:start="385:13" pos:end="393:26">

            <comment type="block" pos:start="383:13" pos:end="383:35">/* to same privilege */</comment>

            <expr_stmt pos:start="385:13" pos:end="385:34"><expr pos:start="385:13" pos:end="385:33"><name pos:start="385:13" pos:end="385:14">sp</name> <operator pos:start="385:16" pos:end="385:16">=</operator> <name pos:start="385:18" pos:end="385:33"><name pos:start="385:18" pos:end="385:20">env</name><operator pos:start="385:21" pos:end="385:22">-&gt;</operator><name pos:start="385:23" pos:end="385:26">regs</name><index pos:start="385:27" pos:end="385:33">[<expr pos:start="385:28" pos:end="385:32"><name pos:start="385:28" pos:end="385:32">R_ESP</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:57"><expr pos:start="387:13" pos:end="387:56"><name pos:start="387:13" pos:end="387:19">sp_mask</name> <operator pos:start="387:21" pos:end="387:21">=</operator> <call pos:start="387:23" pos:end="387:56"><name pos:start="387:23" pos:end="387:33">get_sp_mask</name><argument_list pos:start="387:34" pos:end="387:56">(<argument pos:start="387:35" pos:end="387:55"><expr pos:start="387:35" pos:end="387:55"><name pos:start="387:35" pos:end="387:49"><name pos:start="387:35" pos:end="387:37">env</name><operator pos:start="387:38" pos:end="387:39">-&gt;</operator><name pos:start="387:40" pos:end="387:43">segs</name><index pos:start="387:44" pos:end="387:49">[<expr pos:start="387:45" pos:end="387:48"><name pos:start="387:45" pos:end="387:48">R_SS</name></expr>]</index></name><operator pos:start="387:50" pos:end="387:50">.</operator><name pos:start="387:51" pos:end="387:55">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:39"><expr pos:start="389:13" pos:end="389:38"><name pos:start="389:13" pos:end="389:15">ssp</name> <operator pos:start="389:17" pos:end="389:17">=</operator> <name pos:start="389:19" pos:end="389:33"><name pos:start="389:19" pos:end="389:21">env</name><operator pos:start="389:22" pos:end="389:23">-&gt;</operator><name pos:start="389:24" pos:end="389:27">segs</name><index pos:start="389:28" pos:end="389:33">[<expr pos:start="389:29" pos:end="389:32"><name pos:start="389:29" pos:end="389:32">R_SS</name></expr>]</index></name><operator pos:start="389:34" pos:end="389:34">.</operator><name pos:start="389:35" pos:end="389:38">base</name></expr>;</expr_stmt>

            <comment type="block" pos:start="391:13" pos:end="391:43">/* push_size = (4 &lt;&lt; shift); */</comment>

            <expr_stmt pos:start="393:13" pos:end="393:26"><expr pos:start="393:13" pos:end="393:25"><name pos:start="393:13" pos:end="393:21">new_stack</name> <operator pos:start="393:23" pos:end="393:23">=</operator> <literal type="number" pos:start="393:25" pos:end="393:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="399:9" pos:end="411:9"><if pos:start="399:9" pos:end="405:9">if <condition pos:start="399:12" pos:end="399:18">(<expr pos:start="399:13" pos:end="399:17"><name pos:start="399:13" pos:end="399:17">shift</name></expr>)</condition> <block pos:start="399:20" pos:end="405:9">{<block_content pos:start="401:13" pos:end="403:46">

            <expr_stmt pos:start="401:13" pos:end="401:62"><expr pos:start="401:13" pos:end="401:61"><call pos:start="401:13" pos:end="401:61"><name pos:start="401:13" pos:end="401:17">PUSHL</name><argument_list pos:start="401:18" pos:end="401:61">(<argument pos:start="401:19" pos:end="401:21"><expr pos:start="401:19" pos:end="401:21"><name pos:start="401:19" pos:end="401:21">ssp</name></expr></argument>, <argument pos:start="401:24" pos:end="401:25"><expr pos:start="401:24" pos:end="401:25"><name pos:start="401:24" pos:end="401:25">sp</name></expr></argument>, <argument pos:start="401:28" pos:end="401:34"><expr pos:start="401:28" pos:end="401:34"><name pos:start="401:28" pos:end="401:34">sp_mask</name></expr></argument>, <argument pos:start="401:37" pos:end="401:60"><expr pos:start="401:37" pos:end="401:60"><name pos:start="401:37" pos:end="401:51"><name pos:start="401:37" pos:end="401:39">env</name><operator pos:start="401:40" pos:end="401:41">-&gt;</operator><name pos:start="401:42" pos:end="401:45">segs</name><index pos:start="401:46" pos:end="401:51">[<expr pos:start="401:47" pos:end="401:50"><name pos:start="401:47" pos:end="401:50">R_CS</name></expr>]</index></name><operator pos:start="401:52" pos:end="401:52">.</operator><name pos:start="401:53" pos:end="401:60">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:46"><expr pos:start="403:13" pos:end="403:45"><call pos:start="403:13" pos:end="403:45"><name pos:start="403:13" pos:end="403:17">PUSHL</name><argument_list pos:start="403:18" pos:end="403:45">(<argument pos:start="403:19" pos:end="403:21"><expr pos:start="403:19" pos:end="403:21"><name pos:start="403:19" pos:end="403:21">ssp</name></expr></argument>, <argument pos:start="403:24" pos:end="403:25"><expr pos:start="403:24" pos:end="403:25"><name pos:start="403:24" pos:end="403:25">sp</name></expr></argument>, <argument pos:start="403:28" pos:end="403:34"><expr pos:start="403:28" pos:end="403:34"><name pos:start="403:28" pos:end="403:34">sp_mask</name></expr></argument>, <argument pos:start="403:37" pos:end="403:44"><expr pos:start="403:37" pos:end="403:44"><name pos:start="403:37" pos:end="403:44">next_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="405:11" pos:end="411:9">else <block pos:start="405:16" pos:end="411:9">{<block_content pos:start="407:13" pos:end="409:46">

            <expr_stmt pos:start="407:13" pos:end="407:62"><expr pos:start="407:13" pos:end="407:61"><call pos:start="407:13" pos:end="407:61"><name pos:start="407:13" pos:end="407:17">PUSHW</name><argument_list pos:start="407:18" pos:end="407:61">(<argument pos:start="407:19" pos:end="407:21"><expr pos:start="407:19" pos:end="407:21"><name pos:start="407:19" pos:end="407:21">ssp</name></expr></argument>, <argument pos:start="407:24" pos:end="407:25"><expr pos:start="407:24" pos:end="407:25"><name pos:start="407:24" pos:end="407:25">sp</name></expr></argument>, <argument pos:start="407:28" pos:end="407:34"><expr pos:start="407:28" pos:end="407:34"><name pos:start="407:28" pos:end="407:34">sp_mask</name></expr></argument>, <argument pos:start="407:37" pos:end="407:60"><expr pos:start="407:37" pos:end="407:60"><name pos:start="407:37" pos:end="407:51"><name pos:start="407:37" pos:end="407:39">env</name><operator pos:start="407:40" pos:end="407:41">-&gt;</operator><name pos:start="407:42" pos:end="407:45">segs</name><index pos:start="407:46" pos:end="407:51">[<expr pos:start="407:47" pos:end="407:50"><name pos:start="407:47" pos:end="407:50">R_CS</name></expr>]</index></name><operator pos:start="407:52" pos:end="407:52">.</operator><name pos:start="407:53" pos:end="407:60">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:46"><expr pos:start="409:13" pos:end="409:45"><call pos:start="409:13" pos:end="409:45"><name pos:start="409:13" pos:end="409:17">PUSHW</name><argument_list pos:start="409:18" pos:end="409:45">(<argument pos:start="409:19" pos:end="409:21"><expr pos:start="409:19" pos:end="409:21"><name pos:start="409:19" pos:end="409:21">ssp</name></expr></argument>, <argument pos:start="409:24" pos:end="409:25"><expr pos:start="409:24" pos:end="409:25"><name pos:start="409:24" pos:end="409:25">sp</name></expr></argument>, <argument pos:start="409:28" pos:end="409:34"><expr pos:start="409:28" pos:end="409:34"><name pos:start="409:28" pos:end="409:34">sp_mask</name></expr></argument>, <argument pos:start="409:37" pos:end="409:44"><expr pos:start="409:37" pos:end="409:44"><name pos:start="409:37" pos:end="409:44">next_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="415:9" pos:end="415:46">/* from this point, not restartable */</comment>



        <if_stmt pos:start="419:9" pos:end="431:9"><if pos:start="419:9" pos:end="431:9">if <condition pos:start="419:12" pos:end="419:22">(<expr pos:start="419:13" pos:end="419:21"><name pos:start="419:13" pos:end="419:21">new_stack</name></expr>)</condition> <block pos:start="419:24" pos:end="431:9">{<block_content pos:start="421:13" pos:end="429:42">

            <expr_stmt pos:start="421:13" pos:end="421:33"><expr pos:start="421:13" pos:end="421:32"><name pos:start="421:13" pos:end="421:14">ss</name> <operator pos:start="421:16" pos:end="421:16">=</operator> <operator pos:start="421:18" pos:end="421:18">(</operator><name pos:start="421:19" pos:end="421:20">ss</name> <operator pos:start="421:22" pos:end="421:22">&amp;</operator> <operator pos:start="421:24" pos:end="421:24">~</operator><literal type="number" pos:start="421:25" pos:end="421:25">3</literal><operator pos:start="421:26" pos:end="421:26">)</operator> <operator pos:start="421:28" pos:end="421:28">|</operator> <name pos:start="421:30" pos:end="421:32">dpl</name></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="429:42"><expr pos:start="423:13" pos:end="429:41"><call pos:start="423:13" pos:end="429:41"><name pos:start="423:13" pos:end="423:34">cpu_x86_load_seg_cache</name><argument_list pos:start="423:35" pos:end="429:41">(<argument pos:start="423:36" pos:end="423:38"><expr pos:start="423:36" pos:end="423:38"><name pos:start="423:36" pos:end="423:38">env</name></expr></argument>, <argument pos:start="423:41" pos:end="423:44"><expr pos:start="423:41" pos:end="423:44"><name pos:start="423:41" pos:end="423:44">R_SS</name></expr></argument>, <argument pos:start="423:47" pos:end="423:48"><expr pos:start="423:47" pos:end="423:48"><name pos:start="423:47" pos:end="423:48">ss</name></expr></argument>,

                                   <argument pos:start="425:36" pos:end="425:38"><expr pos:start="425:36" pos:end="425:38"><name pos:start="425:36" pos:end="425:38">ssp</name></expr></argument>,

                                   <argument pos:start="427:36" pos:end="427:62"><expr pos:start="427:36" pos:end="427:62"><call pos:start="427:36" pos:end="427:62"><name pos:start="427:36" pos:end="427:48">get_seg_limit</name><argument_list pos:start="427:49" pos:end="427:62">(<argument pos:start="427:50" pos:end="427:54"><expr pos:start="427:50" pos:end="427:54"><name pos:start="427:50" pos:end="427:54">ss_e1</name></expr></argument>, <argument pos:start="427:57" pos:end="427:61"><expr pos:start="427:57" pos:end="427:61"><name pos:start="427:57" pos:end="427:61">ss_e2</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="429:36" pos:end="429:40"><expr pos:start="429:36" pos:end="429:40"><name pos:start="429:36" pos:end="429:40">ss_e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="435:9" pos:end="435:41"><expr pos:start="435:9" pos:end="435:40"><name pos:start="435:9" pos:end="435:16">selector</name> <operator pos:start="435:18" pos:end="435:18">=</operator> <operator pos:start="435:20" pos:end="435:20">(</operator><name pos:start="435:21" pos:end="435:28">selector</name> <operator pos:start="435:30" pos:end="435:30">&amp;</operator> <operator pos:start="435:32" pos:end="435:32">~</operator><literal type="number" pos:start="435:33" pos:end="435:33">3</literal><operator pos:start="435:34" pos:end="435:34">)</operator> <operator pos:start="435:36" pos:end="435:36">|</operator> <name pos:start="435:38" pos:end="435:40">dpl</name></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="443:27"><expr pos:start="437:9" pos:end="443:26"><call pos:start="437:9" pos:end="443:26"><name pos:start="437:9" pos:end="437:30">cpu_x86_load_seg_cache</name><argument_list pos:start="437:31" pos:end="443:26">(<argument pos:start="437:32" pos:end="437:34"><expr pos:start="437:32" pos:end="437:34"><name pos:start="437:32" pos:end="437:34">env</name></expr></argument>, <argument pos:start="437:37" pos:end="437:40"><expr pos:start="437:37" pos:end="437:40"><name pos:start="437:37" pos:end="437:40">R_CS</name></expr></argument>, <argument pos:start="437:43" pos:end="437:50"><expr pos:start="437:43" pos:end="437:50"><name pos:start="437:43" pos:end="437:50">selector</name></expr></argument>,

                       <argument pos:start="439:24" pos:end="439:43"><expr pos:start="439:24" pos:end="439:43"><call pos:start="439:24" pos:end="439:43"><name pos:start="439:24" pos:end="439:35">get_seg_base</name><argument_list pos:start="439:36" pos:end="439:43">(<argument pos:start="439:37" pos:end="439:38"><expr pos:start="439:37" pos:end="439:38"><name pos:start="439:37" pos:end="439:38">e1</name></expr></argument>, <argument pos:start="439:41" pos:end="439:42"><expr pos:start="439:41" pos:end="439:42"><name pos:start="439:41" pos:end="439:42">e2</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="441:24" pos:end="441:44"><expr pos:start="441:24" pos:end="441:44"><call pos:start="441:24" pos:end="441:44"><name pos:start="441:24" pos:end="441:36">get_seg_limit</name><argument_list pos:start="441:37" pos:end="441:44">(<argument pos:start="441:38" pos:end="441:39"><expr pos:start="441:38" pos:end="441:39"><name pos:start="441:38" pos:end="441:39">e1</name></expr></argument>, <argument pos:start="441:42" pos:end="441:43"><expr pos:start="441:42" pos:end="441:43"><name pos:start="441:42" pos:end="441:43">e2</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="443:24" pos:end="443:25"><expr pos:start="443:24" pos:end="443:25"><name pos:start="443:24" pos:end="443:25">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:34"><expr pos:start="445:9" pos:end="445:33"><call pos:start="445:9" pos:end="445:33"><name pos:start="445:9" pos:end="445:23">cpu_x86_set_cpl</name><argument_list pos:start="445:24" pos:end="445:33">(<argument pos:start="445:25" pos:end="445:27"><expr pos:start="445:25" pos:end="445:27"><name pos:start="445:25" pos:end="445:27">env</name></expr></argument>, <argument pos:start="445:30" pos:end="445:32"><expr pos:start="445:30" pos:end="445:32"><name pos:start="445:30" pos:end="445:32">dpl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:29"><expr pos:start="447:9" pos:end="447:28"><call pos:start="447:9" pos:end="447:28"><name pos:start="447:9" pos:end="447:15">SET_ESP</name><argument_list pos:start="447:16" pos:end="447:28">(<argument pos:start="447:17" pos:end="447:18"><expr pos:start="447:17" pos:end="447:18"><name pos:start="447:17" pos:end="447:18">sp</name></expr></argument>, <argument pos:start="447:21" pos:end="447:27"><expr pos:start="447:21" pos:end="447:27"><name pos:start="447:21" pos:end="447:27">sp_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:26"><expr pos:start="449:9" pos:end="449:25"><name pos:start="449:9" pos:end="449:16"><name pos:start="449:9" pos:end="449:11">env</name><operator pos:start="449:12" pos:end="449:13">-&gt;</operator><name pos:start="449:14" pos:end="449:16">eip</name></name> <operator pos:start="449:18" pos:end="449:18">=</operator> <name pos:start="449:20" pos:end="449:25">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
