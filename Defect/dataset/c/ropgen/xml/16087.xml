<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16087.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:28">fd_put_buffer</name><parameter_list pos:start="1:29" pos:end="1:73">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">void</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">size_t</name></type> <name pos:start="1:69" pos:end="1:72">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">FdMigrationState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="15:42">do <block pos:start="11:8" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:39">

        <expr_stmt pos:start="13:9" pos:end="13:39"><expr pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:38"><name pos:start="13:15" pos:end="13:19">write</name><argument_list pos:start="13:20" pos:end="13:38">(<argument pos:start="13:21" pos:end="13:25"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:25">fd</name></name></expr></argument>, <argument pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">data</name></expr></argument>, <argument pos:start="13:34" pos:end="13:37"><expr pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="15:13" pos:end="15:41">(<expr pos:start="15:14" pos:end="15:40"><name pos:start="15:14" pos:end="15:16">ret</name> <operator pos:start="15:18" pos:end="15:19">==</operator> <operator pos:start="15:21" pos:end="15:21">-</operator><literal type="number" pos:start="15:22" pos:end="15:22">1</literal> <operator pos:start="15:24" pos:end="15:25">&amp;&amp;</operator> <name pos:start="15:27" pos:end="15:31">errno</name> <operator pos:start="15:33" pos:end="15:34">==</operator> <name pos:start="15:36" pos:end="15:40">EINTR</name></expr>)</condition>;</do>



    <if_stmt pos:start="19:5" pos:end="21:21"><if pos:start="19:5" pos:end="21:21">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:21"><block_content pos:start="21:9" pos:end="21:21">

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">-</operator><name pos:start="21:16" pos:end="21:20">errno</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:66"><if pos:start="25:5" pos:end="27:66">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">EAGAIN</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:66"><block_content pos:start="27:9" pos:end="27:66">

        <expr_stmt pos:start="27:9" pos:end="27:66"><expr pos:start="27:9" pos:end="27:65"><call pos:start="27:9" pos:end="27:65"><name pos:start="27:9" pos:end="27:28">qemu_set_fd_handler2</name><argument_list pos:start="27:29" pos:end="27:65">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:34">fd</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><name pos:start="27:37" pos:end="27:40">NULL</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">NULL</name></expr></argument>, <argument pos:start="27:49" pos:end="27:61"><expr pos:start="27:49" pos:end="27:61"><name pos:start="27:49" pos:end="27:61">fd_put_notify</name></expr></argument>, <argument pos:start="27:64" pos:end="27:64"><expr pos:start="27:64" pos:end="27:64"><name pos:start="27:64" pos:end="27:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
