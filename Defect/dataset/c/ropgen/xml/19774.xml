<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19774.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">parse_source_parameters</name><parameter_list pos:start="1:35" pos:end="2:49">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:51">AVDiracSeqHeader</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dsh</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:71">GetBitContext</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">gb</name></decl></parameter>,
                                   <parameter pos:start="2:36" pos:end="2:48"><decl pos:start="2:36" pos:end="2:48"><type pos:start="2:36" pos:end="2:48"><name pos:start="2:36" pos:end="2:39">void</name> <modifier pos:start="2:41" pos:end="2:41">*</modifier></type><name pos:start="2:42" pos:end="2:48">log_ctx</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="4:5" pos:end="142:13">
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:36"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:14">AVRational</name></type> <name pos:start="4:16" pos:end="4:25">frame_rate</name> <init pos:start="4:27" pos:end="4:36">= <expr pos:start="4:29" pos:end="4:36"><block pos:start="4:29" pos:end="4:36">{ <expr pos:start="4:31" pos:end="4:31"><literal type="number" pos:start="4:31" pos:end="4:31">0</literal></expr>, <expr pos:start="4:34" pos:end="4:34"><literal type="number" pos:start="4:34" pos:end="4:34">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:23">luma_depth</name> <init pos:start="5:25" pos:end="5:27">= <expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">8</literal></expr></init></decl>, <decl pos:start="5:30" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:30" pos:end="5:40">luma_offset</name> <init pos:start="5:42" pos:end="5:45">= <expr pos:start="5:44" pos:end="5:45"><literal type="number" pos:start="5:44" pos:end="5:45">16</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">idx</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">chroma_x_shift</name></decl>, <decl pos:start="7:25" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:38">chroma_y_shift</name></decl>;</decl_stmt>
    <comment type="block" pos:start="8:5" pos:end="8:65">/* [DIRAC_STD] 10.3.2 Frame size. frame_size(video_params) */</comment>
    <comment type="block" pos:start="9:5" pos:end="9:44">/* [DIRAC_STD] custom_dimensions_flag */</comment>
    <if_stmt pos:start="10:5" pos:end="13:5"><if pos:start="10:5" pos:end="13:5">if <condition pos:start="10:8" pos:end="10:22">(<expr pos:start="10:9" pos:end="10:21"><call pos:start="10:9" pos:end="10:21"><name pos:start="10:9" pos:end="10:17">get_bits1</name><argument_list pos:start="10:18" pos:end="10:21">(<argument pos:start="10:19" pos:end="10:20"><expr pos:start="10:19" pos:end="10:20"><name pos:start="10:19" pos:end="10:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="10:24" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:45">
        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:11">dsh</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:18">width</name></name>  <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:44"><name pos:start="11:23" pos:end="11:40">svq3_get_ue_golomb</name><argument_list pos:start="11:41" pos:end="11:44">(<argument pos:start="11:42" pos:end="11:43"><expr pos:start="11:42" pos:end="11:43"><name pos:start="11:42" pos:end="11:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="11:47" pos:end="11:76">/* [DIRAC_STD] FRAME_WIDTH  */</comment>
        <expr_stmt pos:start="12:9" pos:end="12:45"><expr pos:start="12:9" pos:end="12:44"><name pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:11">dsh</name><operator pos:start="12:12" pos:end="12:13">-&gt;</operator><name pos:start="12:14" pos:end="12:19">height</name></name> <operator pos:start="12:21" pos:end="12:21">=</operator> <call pos:start="12:23" pos:end="12:44"><name pos:start="12:23" pos:end="12:40">svq3_get_ue_golomb</name><argument_list pos:start="12:41" pos:end="12:44">(<argument pos:start="12:42" pos:end="12:43"><expr pos:start="12:42" pos:end="12:43"><name pos:start="12:42" pos:end="12:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="12:47" pos:end="12:76">/* [DIRAC_STD] FRAME_HEIGHT */</comment>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="14:5" pos:end="15:47">/* [DIRAC_STD] 10.3.3 Chroma Sampling Format.
     *  chroma_sampling_format(video_params) */</comment>
    <comment type="block" pos:start="16:5" pos:end="16:47">/* [DIRAC_STD] custom_chroma_format_flag */</comment>
    <if_stmt pos:start="17:5" pos:end="19:52"><if pos:start="17:5" pos:end="19:52">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><call pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:17">get_bits1</name><argument_list pos:start="17:18" pos:end="17:21">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:52"><block_content pos:start="19:9" pos:end="19:52">
        <comment type="block" pos:start="18:9" pos:end="18:45">/* [DIRAC_STD] CHROMA_FORMAT_INDEX */</comment>
        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:11">dsh</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:26">chroma_format</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <call pos:start="19:30" pos:end="19:51"><name pos:start="19:30" pos:end="19:47">svq3_get_ue_golomb</name><argument_list pos:start="19:48" pos:end="19:51">(<argument pos:start="19:49" pos:end="19:50"><expr pos:start="19:49" pos:end="19:50"><name pos:start="19:49" pos:end="19:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="20:5" pos:end="24:5"><if pos:start="20:5" pos:end="24:5">if <condition pos:start="20:8" pos:end="20:32">(<expr pos:start="20:9" pos:end="20:31"><name pos:start="20:9" pos:end="20:26"><name pos:start="20:9" pos:end="20:11">dsh</name><operator pos:start="20:12" pos:end="20:13">-&gt;</operator><name pos:start="20:14" pos:end="20:26">chroma_format</name></name> <operator pos:start="20:28" pos:end="20:28">&gt;</operator> <literal type="number" pos:start="20:30" pos:end="20:31">2U</literal></expr>)</condition> <block pos:start="20:34" pos:end="24:5">{<block_content pos:start="21:9" pos:end="23:39">
        <if_stmt pos:start="21:9" pos:end="23:39"><if pos:start="21:9" pos:end="23:39">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:19">log_ctx</name></expr>)</condition><block type="pseudo" pos:start="22:13" pos:end="23:39"><block_content pos:start="22:13" pos:end="23:39">
            <expr_stmt pos:start="22:13" pos:end="23:39"><expr pos:start="22:13" pos:end="23:38"><call pos:start="22:13" pos:end="23:38"><name pos:start="22:13" pos:end="22:18">av_log</name><argument_list pos:start="22:19" pos:end="23:38">(<argument pos:start="22:20" pos:end="22:26"><expr pos:start="22:20" pos:end="22:26"><name pos:start="22:20" pos:end="22:26">log_ctx</name></expr></argument>, <argument pos:start="22:29" pos:end="22:40"><expr pos:start="22:29" pos:end="22:40"><name pos:start="22:29" pos:end="22:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="22:43" pos:end="22:70"><expr pos:start="22:43" pos:end="22:70"><literal type="string" pos:start="22:43" pos:end="22:70">"Unknown chroma format %d\n"</literal></expr></argument>,
                   <argument pos:start="23:20" pos:end="23:37"><expr pos:start="23:20" pos:end="23:37"><name pos:start="23:20" pos:end="23:37"><name pos:start="23:20" pos:end="23:22">dsh</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:37">chroma_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="25:5" pos:end="25:67">/* [DIRAC_STD] 10.3.4 Scan Format. scan_format(video_params) */</comment>
    <comment type="block" pos:start="26:5" pos:end="26:45">/* [DIRAC_STD] custom_scan_format_flag */</comment>
    <if_stmt pos:start="27:5" pos:end="29:49"><if pos:start="27:5" pos:end="29:49">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><call pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:17">get_bits1</name><argument_list pos:start="27:18" pos:end="27:21">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:49"><block_content pos:start="29:9" pos:end="29:49">
        <comment type="block" pos:start="28:9" pos:end="28:41">/* [DIRAC_STD] SOURCE_SAMPLING */</comment>
        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:11">dsh</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:23">interlaced</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <call pos:start="29:27" pos:end="29:48"><name pos:start="29:27" pos:end="29:44">svq3_get_ue_golomb</name><argument_list pos:start="29:45" pos:end="29:48">(<argument pos:start="29:46" pos:end="29:47"><expr pos:start="29:46" pos:end="29:47"><name pos:start="29:46" pos:end="29:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="30:5" pos:end="41:5"><if pos:start="30:5" pos:end="41:5">if <condition pos:start="30:8" pos:end="30:29">(<expr pos:start="30:9" pos:end="30:28"><name pos:start="30:9" pos:end="30:23"><name pos:start="30:9" pos:end="30:11">dsh</name><operator pos:start="30:12" pos:end="30:13">-&gt;</operator><name pos:start="30:14" pos:end="30:23">interlaced</name></name> <operator pos:start="30:25" pos:end="30:25">&gt;</operator> <literal type="number" pos:start="30:27" pos:end="30:28">1U</literal></expr>)</condition><block type="pseudo" pos:start="32:5" pos:end="41:5"><block_content pos:start="32:5" pos:end="41:5">
    <comment type="block" pos:start="31:5" pos:end="31:65">/* [DIRAC_STD] 10.3.5 Frame Rate. frame_rate(video_params) */</comment>
    <if_stmt pos:start="32:5" pos:end="41:5"><if pos:start="32:5" pos:end="41:5">if <condition pos:start="32:8" pos:end="32:22">(<expr pos:start="32:9" pos:end="32:21"><call pos:start="32:9" pos:end="32:21"><name pos:start="32:9" pos:end="32:17">get_bits1</name><argument_list pos:start="32:18" pos:end="32:21">(<argument pos:start="32:19" pos:end="32:20"><expr pos:start="32:19" pos:end="32:20"><name pos:start="32:19" pos:end="32:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="32:24" pos:end="41:5">{<block_content pos:start="33:9" pos:end="40:9"> <comment type="block" pos:start="32:26" pos:end="32:65">/* [DIRAC_STD] custom_frame_rate_flag */</comment>
        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:11">dsh</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:29">frame_rate_index</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <call pos:start="33:33" pos:end="33:54"><name pos:start="33:33" pos:end="33:50">svq3_get_ue_golomb</name><argument_list pos:start="33:51" pos:end="33:54">(<argument pos:start="33:52" pos:end="33:53"><expr pos:start="33:52" pos:end="33:53"><name pos:start="33:52" pos:end="33:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="34:9" pos:end="40:9"><if pos:start="34:9" pos:end="40:9">if <condition pos:start="34:12" pos:end="34:40">(<expr pos:start="34:13" pos:end="34:39"><name pos:start="34:13" pos:end="34:33"><name pos:start="34:13" pos:end="34:15">dsh</name><operator pos:start="34:16" pos:end="34:17">-&gt;</operator><name pos:start="34:18" pos:end="34:33">frame_rate_index</name></name> <operator pos:start="34:35" pos:end="34:35">&gt;</operator> <literal type="number" pos:start="34:37" pos:end="34:39">10U</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="40:9"><block_content pos:start="35:9" pos:end="40:9">
        <if_stmt pos:start="35:9" pos:end="40:9"><if pos:start="35:9" pos:end="40:9">if <condition pos:start="35:12" pos:end="35:35">(<expr pos:start="35:13" pos:end="35:34"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:34"><name pos:start="35:14" pos:end="35:16">dsh</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:34">frame_rate_index</name></name></expr>)</condition> <block pos:start="35:37" pos:end="40:9">{<block_content pos:start="37:13" pos:end="39:52">
            <comment type="block" pos:start="36:13" pos:end="36:46">/* [DIRAC_STD] FRAME_RATE_NUMER */</comment>
            <expr_stmt pos:start="37:13" pos:end="37:52"><expr pos:start="37:13" pos:end="37:51"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:22">frame_rate</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:26">num</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <call pos:start="37:30" pos:end="37:51"><name pos:start="37:30" pos:end="37:47">svq3_get_ue_golomb</name><argument_list pos:start="37:48" pos:end="37:51">(<argument pos:start="37:49" pos:end="37:50"><expr pos:start="37:49" pos:end="37:50"><name pos:start="37:49" pos:end="37:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="38:13" pos:end="38:46">/* [DIRAC_STD] FRAME_RATE_DENOM */</comment>
            <expr_stmt pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:22">frame_rate</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:26">den</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <call pos:start="39:30" pos:end="39:51"><name pos:start="39:30" pos:end="39:47">svq3_get_ue_golomb</name><argument_list pos:start="39:48" pos:end="39:51">(<argument pos:start="39:49" pos:end="39:50"><expr pos:start="39:49" pos:end="39:50"><name pos:start="39:49" pos:end="39:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="42:5" pos:end="42:60">/* [DIRAC_STD] preset_frame_rate(video_params, index) */</comment>
    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:34">(<expr pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:11">dsh</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:29">frame_rate_index</name></name> <operator pos:start="43:31" pos:end="43:31">&gt;</operator> <literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>)</condition> <block pos:start="43:36" pos:end="49:5">{<block_content pos:start="44:9" pos:end="48:69">
        <if_stmt pos:start="44:9" pos:end="48:69"><if pos:start="44:9" pos:end="45:73">if <condition pos:start="44:12" pos:end="44:39">(<expr pos:start="44:13" pos:end="44:38"><name pos:start="44:13" pos:end="44:33"><name pos:start="44:13" pos:end="44:15">dsh</name><operator pos:start="44:16" pos:end="44:17">-&gt;</operator><name pos:start="44:18" pos:end="44:33">frame_rate_index</name></name> <operator pos:start="44:35" pos:end="44:36">&lt;=</operator> <literal type="number" pos:start="44:38" pos:end="44:38">8</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:73"><block_content pos:start="45:13" pos:end="45:73">
            <expr_stmt pos:start="45:13" pos:end="45:73"><expr pos:start="45:13" pos:end="45:72"><name pos:start="45:13" pos:end="45:22">frame_rate</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:72"><name pos:start="45:26" pos:end="45:49">ff_mpeg12_frame_rate_tab</name><index pos:start="45:50" pos:end="45:72">[<expr pos:start="45:51" pos:end="45:71"><name pos:start="45:51" pos:end="45:71"><name pos:start="45:51" pos:end="45:53">dsh</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:71">frame_rate_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="46:9" pos:end="48:69">else<block type="pseudo" pos:start="48:13" pos:end="48:69"><block_content pos:start="48:13" pos:end="48:69">
            <comment type="block" pos:start="47:13" pos:end="47:52">/* [DIRAC_STD] Table 10.3 values 9-10 */</comment>
            <expr_stmt pos:start="48:13" pos:end="48:69"><expr pos:start="48:13" pos:end="48:68"><name pos:start="48:13" pos:end="48:22">frame_rate</name> <operator pos:start="48:24" pos:end="48:24">=</operator> <name pos:start="48:26" pos:end="48:68"><name pos:start="48:26" pos:end="48:41">dirac_frame_rate</name><index pos:start="48:42" pos:end="48:68">[<expr pos:start="48:43" pos:end="48:67"><name pos:start="48:43" pos:end="48:63"><name pos:start="48:43" pos:end="48:45">dsh</name><operator pos:start="48:46" pos:end="48:47">-&gt;</operator><name pos:start="48:48" pos:end="48:63">frame_rate_index</name></name> <operator pos:start="48:65" pos:end="48:65">-</operator> <literal type="number" pos:start="48:67" pos:end="48:67">9</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:32"><expr pos:start="50:5" pos:end="50:31"><name pos:start="50:5" pos:end="50:18"><name pos:start="50:5" pos:end="50:7">dsh</name><operator pos:start="50:8" pos:end="50:9">-&gt;</operator><name pos:start="50:10" pos:end="50:18">framerate</name></name> <operator pos:start="50:20" pos:end="50:20">=</operator> <name pos:start="50:22" pos:end="50:31">frame_rate</name></expr>;</expr_stmt>
    <comment type="block" pos:start="51:5" pos:end="52:42">/* [DIRAC_STD] 10.3.6 Pixel Aspect Ratio.
     * pixel_aspect_ratio(video_params) */</comment>
    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:17">get_bits1</name><argument_list pos:start="53:18" pos:end="53:21">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:24" pos:end="61:5">{<block_content pos:start="55:9" pos:end="60:9"> <comment type="block" pos:start="53:26" pos:end="53:73">/* [DIRAC_STD] custom_pixel_aspect_ratio_flag */</comment>
        <comment type="block" pos:start="54:9" pos:end="54:31">/* [DIRAC_STD] index */</comment>
        <expr_stmt pos:start="55:9" pos:end="55:57"><expr pos:start="55:9" pos:end="55:56"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:11">dsh</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:31">aspect_ratio_index</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <call pos:start="55:35" pos:end="55:56"><name pos:start="55:35" pos:end="55:52">svq3_get_ue_golomb</name><argument_list pos:start="55:53" pos:end="55:56">(<argument pos:start="55:54" pos:end="55:55"><expr pos:start="55:54" pos:end="55:55"><name pos:start="55:54" pos:end="55:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="56:9" pos:end="60:9"><if pos:start="56:9" pos:end="60:9">if <condition pos:start="56:12" pos:end="56:41">(<expr pos:start="56:13" pos:end="56:40"><name pos:start="56:13" pos:end="56:35"><name pos:start="56:13" pos:end="56:15">dsh</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:35">aspect_ratio_index</name></name> <operator pos:start="56:37" pos:end="56:37">&gt;</operator> <literal type="number" pos:start="56:39" pos:end="56:40">6U</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="60:9"><block_content pos:start="57:9" pos:end="60:9">
        <if_stmt pos:start="57:9" pos:end="60:9"><if pos:start="57:9" pos:end="60:9">if <condition pos:start="57:12" pos:end="57:37">(<expr pos:start="57:13" pos:end="57:36"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:36"><name pos:start="57:14" pos:end="57:16">dsh</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:36">aspect_ratio_index</name></name></expr>)</condition> <block pos:start="57:39" pos:end="60:9">{<block_content pos:start="58:13" pos:end="59:66">
            <expr_stmt pos:start="58:13" pos:end="58:66"><expr pos:start="58:13" pos:end="58:65"><name pos:start="58:13" pos:end="58:40"><name pos:start="58:13" pos:end="58:15">dsh</name><operator pos:start="58:16" pos:end="58:17">-&gt;</operator><name pos:start="58:18" pos:end="58:36">sample_aspect_ratio</name><operator pos:start="58:37" pos:end="58:37">.</operator><name pos:start="58:38" pos:end="58:40">num</name></name> <operator pos:start="58:42" pos:end="58:42">=</operator> <call pos:start="58:44" pos:end="58:65"><name pos:start="58:44" pos:end="58:61">svq3_get_ue_golomb</name><argument_list pos:start="58:62" pos:end="58:65">(<argument pos:start="58:63" pos:end="58:64"><expr pos:start="58:63" pos:end="58:64"><name pos:start="58:63" pos:end="58:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:66"><expr pos:start="59:13" pos:end="59:65"><name pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:15">dsh</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:36">sample_aspect_ratio</name><operator pos:start="59:37" pos:end="59:37">.</operator><name pos:start="59:38" pos:end="59:40">den</name></name> <operator pos:start="59:42" pos:end="59:42">=</operator> <call pos:start="59:44" pos:end="59:65"><name pos:start="59:44" pos:end="59:61">svq3_get_ue_golomb</name><argument_list pos:start="59:62" pos:end="59:65">(<argument pos:start="59:63" pos:end="59:64"><expr pos:start="59:63" pos:end="59:64"><name pos:start="59:63" pos:end="59:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="62:5" pos:end="63:30">/* [DIRAC_STD] Take value from Table 10.4 Available preset pixel
     *  aspect ratio values */</comment>
    <if_stmt pos:start="64:5" pos:end="66:68"><if pos:start="64:5" pos:end="66:68">if <condition pos:start="64:8" pos:end="64:36">(<expr pos:start="64:9" pos:end="64:35"><name pos:start="64:9" pos:end="64:31"><name pos:start="64:9" pos:end="64:11">dsh</name><operator pos:start="64:12" pos:end="64:13">-&gt;</operator><name pos:start="64:14" pos:end="64:31">aspect_ratio_index</name></name> <operator pos:start="64:33" pos:end="64:33">&gt;</operator> <literal type="number" pos:start="64:35" pos:end="64:35">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="66:68"><block_content pos:start="65:9" pos:end="66:68">
        <expr_stmt pos:start="65:9" pos:end="66:68"><expr pos:start="65:9" pos:end="66:67"><name pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:11">dsh</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:32">sample_aspect_ratio</name></name> <operator pos:start="65:34" pos:end="65:34">=</operator>
            <name pos:start="66:13" pos:end="66:67"><name pos:start="66:13" pos:end="66:38">dirac_preset_aspect_ratios</name><index pos:start="66:39" pos:end="66:67">[<expr pos:start="66:40" pos:end="66:66"><name pos:start="66:40" pos:end="66:62"><name pos:start="66:40" pos:end="66:42">dsh</name><operator pos:start="66:43" pos:end="66:44">-&gt;</operator><name pos:start="66:45" pos:end="66:62">aspect_ratio_index</name></name> <operator pos:start="66:64" pos:end="66:64">-</operator> <literal type="number" pos:start="66:66" pos:end="66:66">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="67:5" pos:end="67:65">/* [DIRAC_STD] 10.3.7 Clean area. clean_area(video_params) */</comment>
    <if_stmt pos:start="68:5" pos:end="77:5"><if pos:start="68:5" pos:end="77:5">if <condition pos:start="68:8" pos:end="68:22">(<expr pos:start="68:9" pos:end="68:21"><call pos:start="68:9" pos:end="68:21"><name pos:start="68:9" pos:end="68:17">get_bits1</name><argument_list pos:start="68:18" pos:end="68:21">(<argument pos:start="68:19" pos:end="68:20"><expr pos:start="68:19" pos:end="68:20"><name pos:start="68:19" pos:end="68:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="68:24" pos:end="77:5">{<block_content pos:start="70:9" pos:end="76:57"> <comment type="block" pos:start="68:26" pos:end="68:65">/* [DIRAC_STD] custom_clean_area_flag */</comment>
        <comment type="block" pos:start="69:9" pos:end="69:37">/* [DIRAC_STD] CLEAN_WIDTH */</comment>
        <expr_stmt pos:start="70:9" pos:end="70:50"><expr pos:start="70:9" pos:end="70:49"><name pos:start="70:9" pos:end="70:24"><name pos:start="70:9" pos:end="70:11">dsh</name><operator pos:start="70:12" pos:end="70:13">-&gt;</operator><name pos:start="70:14" pos:end="70:24">clean_width</name></name> <operator pos:start="70:26" pos:end="70:26">=</operator> <call pos:start="70:28" pos:end="70:49"><name pos:start="70:28" pos:end="70:45">svq3_get_ue_golomb</name><argument_list pos:start="70:46" pos:end="70:49">(<argument pos:start="70:47" pos:end="70:48"><expr pos:start="70:47" pos:end="70:48"><name pos:start="70:47" pos:end="70:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="71:9" pos:end="71:38">/* [DIRAC_STD] CLEAN_HEIGHT */</comment>
        <expr_stmt pos:start="72:9" pos:end="72:51"><expr pos:start="72:9" pos:end="72:50"><name pos:start="72:9" pos:end="72:25"><name pos:start="72:9" pos:end="72:11">dsh</name><operator pos:start="72:12" pos:end="72:13">-&gt;</operator><name pos:start="72:14" pos:end="72:25">clean_height</name></name> <operator pos:start="72:27" pos:end="72:27">=</operator> <call pos:start="72:29" pos:end="72:50"><name pos:start="72:29" pos:end="72:46">svq3_get_ue_golomb</name><argument_list pos:start="72:47" pos:end="72:50">(<argument pos:start="72:48" pos:end="72:49"><expr pos:start="72:48" pos:end="72:49"><name pos:start="72:48" pos:end="72:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="73:9" pos:end="73:43">/* [DIRAC_STD] CLEAN_LEFT_OFFSET */</comment>
        <expr_stmt pos:start="74:9" pos:end="74:56"><expr pos:start="74:9" pos:end="74:55"><name pos:start="74:9" pos:end="74:30"><name pos:start="74:9" pos:end="74:11">dsh</name><operator pos:start="74:12" pos:end="74:13">-&gt;</operator><name pos:start="74:14" pos:end="74:30">clean_left_offset</name></name> <operator pos:start="74:32" pos:end="74:32">=</operator> <call pos:start="74:34" pos:end="74:55"><name pos:start="74:34" pos:end="74:51">svq3_get_ue_golomb</name><argument_list pos:start="74:52" pos:end="74:55">(<argument pos:start="74:53" pos:end="74:54"><expr pos:start="74:53" pos:end="74:54"><name pos:start="74:53" pos:end="74:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="75:9" pos:end="75:44">/* [DIRAC_STD] CLEAN_RIGHT_OFFSET */</comment>
        <expr_stmt pos:start="76:9" pos:end="76:57"><expr pos:start="76:9" pos:end="76:56"><name pos:start="76:9" pos:end="76:31"><name pos:start="76:9" pos:end="76:11">dsh</name><operator pos:start="76:12" pos:end="76:13">-&gt;</operator><name pos:start="76:14" pos:end="76:31">clean_right_offset</name></name> <operator pos:start="76:33" pos:end="76:33">=</operator> <call pos:start="76:35" pos:end="76:56"><name pos:start="76:35" pos:end="76:52">svq3_get_ue_golomb</name><argument_list pos:start="76:53" pos:end="76:56">(<argument pos:start="76:54" pos:end="76:55"><expr pos:start="76:54" pos:end="76:55"><name pos:start="76:54" pos:end="76:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="78:5" pos:end="80:38">/* [DIRAC_STD] 10.3.8 Signal range. signal_range(video_params)
     * WARNING: Some adaptation seems to be done using the
     * AVCOL_RANGE_MPEG/JPEG values */</comment>
    <if_stmt pos:start="81:5" pos:end="94:5"><if pos:start="81:5" pos:end="94:5">if <condition pos:start="81:8" pos:end="81:22">(<expr pos:start="81:9" pos:end="81:21"><call pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:17">get_bits1</name><argument_list pos:start="81:18" pos:end="81:21">(<argument pos:start="81:19" pos:end="81:20"><expr pos:start="81:19" pos:end="81:20"><name pos:start="81:19" pos:end="81:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:24" pos:end="94:5">{<block_content pos:start="83:9" pos:end="93:9"> <comment type="block" pos:start="81:26" pos:end="81:67">/* [DIRAC_STD] custom_signal_range_flag */</comment>
        <comment type="block" pos:start="82:9" pos:end="82:31">/* [DIRAC_STD] index */</comment>
        <expr_stmt pos:start="83:9" pos:end="83:56"><expr pos:start="83:9" pos:end="83:55"><name pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:11">dsh</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:30">pixel_range_index</name></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <call pos:start="83:34" pos:end="83:55"><name pos:start="83:34" pos:end="83:51">svq3_get_ue_golomb</name><argument_list pos:start="83:52" pos:end="83:55">(<argument pos:start="83:53" pos:end="83:54"><expr pos:start="83:53" pos:end="83:54"><name pos:start="83:53" pos:end="83:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="84:9" pos:end="93:9"><if pos:start="84:9" pos:end="93:9">if <condition pos:start="84:12" pos:end="84:40">(<expr pos:start="84:13" pos:end="84:39"><name pos:start="84:13" pos:end="84:34"><name pos:start="84:13" pos:end="84:15">dsh</name><operator pos:start="84:16" pos:end="84:17">-&gt;</operator><name pos:start="84:18" pos:end="84:34">pixel_range_index</name></name> <operator pos:start="84:36" pos:end="84:36">&gt;</operator> <literal type="number" pos:start="84:38" pos:end="84:39">4U</literal></expr>)</condition><block type="pseudo" pos:start="86:9" pos:end="93:9"><block_content pos:start="86:9" pos:end="93:9">
        <comment type="block" pos:start="85:9" pos:end="85:63">/* This assumes either fullrange or MPEG levels only */</comment>
        <if_stmt pos:start="86:9" pos:end="93:9"><if pos:start="86:9" pos:end="93:9">if <condition pos:start="86:12" pos:end="86:36">(<expr pos:start="86:13" pos:end="86:35"><operator pos:start="86:13" pos:end="86:13">!</operator><name pos:start="86:14" pos:end="86:35"><name pos:start="86:14" pos:end="86:16">dsh</name><operator pos:start="86:17" pos:end="86:18">-&gt;</operator><name pos:start="86:19" pos:end="86:35">pixel_range_index</name></name></expr>)</condition> <block pos:start="86:38" pos:end="93:9">{<block_content pos:start="87:13" pos:end="92:62">
            <expr_stmt pos:start="87:13" pos:end="87:49"><expr pos:start="87:13" pos:end="87:48"><name pos:start="87:13" pos:end="87:23">luma_offset</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:48"><name pos:start="87:27" pos:end="87:44">svq3_get_ue_golomb</name><argument_list pos:start="87:45" pos:end="87:48">(<argument pos:start="87:46" pos:end="87:47"><expr pos:start="87:46" pos:end="87:47"><name pos:start="87:46" pos:end="87:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="88:13" pos:end="88:62"><expr pos:start="88:13" pos:end="88:61"><name pos:start="88:13" pos:end="88:22">luma_depth</name>  <operator pos:start="88:25" pos:end="88:25">=</operator> <call pos:start="88:27" pos:end="88:57"><name pos:start="88:27" pos:end="88:33">av_log2</name><argument_list pos:start="88:34" pos:end="88:57">(<argument pos:start="88:35" pos:end="88:56"><expr pos:start="88:35" pos:end="88:56"><call pos:start="88:35" pos:end="88:56"><name pos:start="88:35" pos:end="88:52">svq3_get_ue_golomb</name><argument_list pos:start="88:53" pos:end="88:56">(<argument pos:start="88:54" pos:end="88:55"><expr pos:start="88:54" pos:end="88:55"><name pos:start="88:54" pos:end="88:55">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="88:59" pos:end="88:59">+</operator> <literal type="number" pos:start="88:61" pos:end="88:61">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:34"><call pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:30">svq3_get_ue_golomb</name><argument_list pos:start="89:31" pos:end="89:34">(<argument pos:start="89:32" pos:end="89:33"><expr pos:start="89:32" pos:end="89:33"><name pos:start="89:32" pos:end="89:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:37" pos:end="89:58">/* chroma offset    */</comment>
            <expr_stmt pos:start="90:13" pos:end="90:35"><expr pos:start="90:13" pos:end="90:34"><call pos:start="90:13" pos:end="90:34"><name pos:start="90:13" pos:end="90:30">svq3_get_ue_golomb</name><argument_list pos:start="90:31" pos:end="90:34">(<argument pos:start="90:32" pos:end="90:33"><expr pos:start="90:32" pos:end="90:33"><name pos:start="90:32" pos:end="90:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="90:37" pos:end="90:58">/* chroma excursion */</comment>
            <expr_stmt pos:start="91:13" pos:end="92:62"><expr pos:start="91:13" pos:end="92:61"><name pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:15">dsh</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:28">color_range</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <ternary pos:start="91:32" pos:end="92:61"><condition pos:start="91:32" pos:end="91:44"><expr pos:start="91:32" pos:end="91:42"><name pos:start="91:32" pos:end="91:42">luma_offset</name></expr> ?</condition><then pos:start="91:46" pos:end="91:61"> <expr pos:start="91:46" pos:end="91:61"><name pos:start="91:46" pos:end="91:61">AVCOL_RANGE_MPEG</name></expr>
                                           </then><else pos:start="92:44" pos:end="92:61">: <expr pos:start="92:46" pos:end="92:61"><name pos:start="92:46" pos:end="92:61">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="95:5" pos:end="96:65">/* [DIRAC_STD] Table 10.5
     * Available signal range presets &lt;--&gt; pixel_range_presets */</comment>
    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:35">(<expr pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:11">dsh</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:30">pixel_range_index</name></name> <operator pos:start="97:32" pos:end="97:32">&gt;</operator> <literal type="number" pos:start="97:34" pos:end="97:34">0</literal></expr>)</condition> <block pos:start="97:37" pos:end="101:5">{<block_content pos:start="98:9" pos:end="100:66">
        <expr_stmt pos:start="98:9" pos:end="98:56"><expr pos:start="98:9" pos:end="98:55"><name pos:start="98:9" pos:end="98:11">idx</name>                <operator pos:start="98:28" pos:end="98:28">=</operator> <name pos:start="98:30" pos:end="98:51"><name pos:start="98:30" pos:end="98:32">dsh</name><operator pos:start="98:33" pos:end="98:34">-&gt;</operator><name pos:start="98:35" pos:end="98:51">pixel_range_index</name></name> <operator pos:start="98:53" pos:end="98:53">-</operator> <literal type="number" pos:start="98:55" pos:end="98:55">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="99:9" pos:end="99:63"><expr pos:start="99:9" pos:end="99:62"><name pos:start="99:9" pos:end="99:18">luma_depth</name>         <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:53"><name pos:start="99:30" pos:end="99:48">pixel_range_presets</name><index pos:start="99:49" pos:end="99:53">[<expr pos:start="99:50" pos:end="99:52"><name pos:start="99:50" pos:end="99:52">idx</name></expr>]</index></name><operator pos:start="99:54" pos:end="99:54">.</operator><name pos:start="99:55" pos:end="99:62">bitdepth</name></expr>;</expr_stmt>
        <expr_stmt pos:start="100:9" pos:end="100:66"><expr pos:start="100:9" pos:end="100:65"><name pos:start="100:9" pos:end="100:24"><name pos:start="100:9" pos:end="100:11">dsh</name><operator pos:start="100:12" pos:end="100:13">-&gt;</operator><name pos:start="100:14" pos:end="100:24">color_range</name></name>   <operator pos:start="100:28" pos:end="100:28">=</operator> <name pos:start="100:30" pos:end="100:53"><name pos:start="100:30" pos:end="100:48">pixel_range_presets</name><index pos:start="100:49" pos:end="100:53">[<expr pos:start="100:50" pos:end="100:52"><name pos:start="100:50" pos:end="100:52">idx</name></expr>]</index></name><operator pos:start="100:54" pos:end="100:54">.</operator><name pos:start="100:55" pos:end="100:65">color_range</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="102:5" pos:end="102:32"><expr pos:start="102:5" pos:end="102:31"><name pos:start="102:5" pos:end="102:18"><name pos:start="102:5" pos:end="102:7">dsh</name><operator pos:start="102:8" pos:end="102:9">-&gt;</operator><name pos:start="102:10" pos:end="102:18">bit_depth</name></name> <operator pos:start="102:20" pos:end="102:20">=</operator> <name pos:start="102:22" pos:end="102:31">luma_depth</name></expr>;</expr_stmt>
    <expr_stmt pos:start="103:5" pos:end="103:79"><expr pos:start="103:5" pos:end="103:78"><name pos:start="103:5" pos:end="103:16"><name pos:start="103:5" pos:end="103:7">dsh</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:16">pix_fmt</name></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:78"><name pos:start="103:20" pos:end="103:32">dirac_pix_fmt</name><index pos:start="103:33" pos:end="103:52">[<expr pos:start="103:34" pos:end="103:51"><name pos:start="103:34" pos:end="103:51"><name pos:start="103:34" pos:end="103:36">dsh</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:51">chroma_format</name></name></expr>]</index><index pos:start="103:53" pos:end="103:78">[<expr pos:start="103:54" pos:end="103:77"><name pos:start="103:54" pos:end="103:75"><name pos:start="103:54" pos:end="103:56">dsh</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:75">pixel_range_index</name></name><operator pos:start="103:76" pos:end="103:76">-</operator><literal type="number" pos:start="103:77" pos:end="103:77">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="104:5" pos:end="104:82"><expr pos:start="104:5" pos:end="104:81"><call pos:start="104:5" pos:end="104:81"><name pos:start="104:5" pos:end="104:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="104:34" pos:end="104:81">(<argument pos:start="104:35" pos:end="104:46"><expr pos:start="104:35" pos:end="104:46"><name pos:start="104:35" pos:end="104:46"><name pos:start="104:35" pos:end="104:37">dsh</name><operator pos:start="104:38" pos:end="104:39">-&gt;</operator><name pos:start="104:40" pos:end="104:46">pix_fmt</name></name></expr></argument>, <argument pos:start="104:49" pos:end="104:63"><expr pos:start="104:49" pos:end="104:63"><operator pos:start="104:49" pos:end="104:49">&amp;</operator><name pos:start="104:50" pos:end="104:63">chroma_x_shift</name></expr></argument>, <argument pos:start="104:66" pos:end="104:80"><expr pos:start="104:66" pos:end="104:80"><operator pos:start="104:66" pos:end="104:66">&amp;</operator><name pos:start="104:67" pos:end="104:80">chroma_y_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="105:5" pos:end="108:5"><if pos:start="105:5" pos:end="108:5">if <condition pos:start="105:8" pos:end="105:82">(<expr pos:start="105:9" pos:end="105:81"><operator pos:start="105:9" pos:end="105:9">(</operator><name pos:start="105:10" pos:end="105:19"><name pos:start="105:10" pos:end="105:12">dsh</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:19">width</name></name> <operator pos:start="105:21" pos:end="105:21">%</operator> <operator pos:start="105:23" pos:end="105:23">(</operator><literal type="number" pos:start="105:24" pos:end="105:24">1</literal><operator pos:start="105:25" pos:end="105:26">&lt;&lt;</operator><name pos:start="105:27" pos:end="105:40">chroma_x_shift</name><operator pos:start="105:41" pos:end="105:41">)</operator><operator pos:start="105:42" pos:end="105:42">)</operator> <operator pos:start="105:44" pos:end="105:45">||</operator> <operator pos:start="105:47" pos:end="105:47">(</operator><name pos:start="105:48" pos:end="105:58"><name pos:start="105:48" pos:end="105:50">dsh</name><operator pos:start="105:51" pos:end="105:52">-&gt;</operator><name pos:start="105:53" pos:end="105:58">height</name></name> <operator pos:start="105:60" pos:end="105:60">%</operator> <operator pos:start="105:62" pos:end="105:62">(</operator><literal type="number" pos:start="105:63" pos:end="105:63">1</literal><operator pos:start="105:64" pos:end="105:65">&lt;&lt;</operator><name pos:start="105:66" pos:end="105:79">chroma_y_shift</name><operator pos:start="105:80" pos:end="105:80">)</operator><operator pos:start="105:81" pos:end="105:81">)</operator></expr>)</condition> <block pos:start="105:84" pos:end="108:5">{<block_content pos:start="106:9" pos:end="107:112">
        <if_stmt pos:start="106:9" pos:end="107:112"><if pos:start="106:9" pos:end="107:112">if <condition pos:start="106:12" pos:end="106:20">(<expr pos:start="106:13" pos:end="106:19"><name pos:start="106:13" pos:end="106:19">log_ctx</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:112"><block_content pos:start="107:13" pos:end="107:112">
            <expr_stmt pos:start="107:13" pos:end="107:112"><expr pos:start="107:13" pos:end="107:111"><call pos:start="107:13" pos:end="107:111"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="107:111">(<argument pos:start="107:20" pos:end="107:26"><expr pos:start="107:20" pos:end="107:26"><name pos:start="107:20" pos:end="107:26">log_ctx</name></expr></argument>, <argument pos:start="107:29" pos:end="107:40"><expr pos:start="107:29" pos:end="107:40"><name pos:start="107:29" pos:end="107:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:43" pos:end="107:110"><expr pos:start="107:43" pos:end="107:110"><literal type="string" pos:start="107:43" pos:end="107:110">"Dimensions must be an integer multiple of the chroma subsampling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="109:5" pos:end="109:76">/* [DIRAC_STD] 10.3.9 Colour specification. colour_spec(video_params) */</comment>
    <if_stmt pos:start="110:5" pos:end="141:5"><if pos:start="110:5" pos:end="136:5">if <condition pos:start="110:8" pos:end="110:22">(<expr pos:start="110:9" pos:end="110:21"><call pos:start="110:9" pos:end="110:21"><name pos:start="110:9" pos:end="110:17">get_bits1</name><argument_list pos:start="110:18" pos:end="110:21">(<argument pos:start="110:19" pos:end="110:20"><expr pos:start="110:19" pos:end="110:20"><name pos:start="110:19" pos:end="110:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="110:24" pos:end="136:5">{<block_content pos:start="112:9" pos:end="135:9"> <comment type="block" pos:start="110:26" pos:end="110:66">/* [DIRAC_STD] custom_colour_spec_flag */</comment>
        <comment type="block" pos:start="111:9" pos:end="111:31">/* [DIRAC_STD] index */</comment>
        <expr_stmt pos:start="112:9" pos:end="112:61"><expr pos:start="112:9" pos:end="112:60"><name pos:start="112:9" pos:end="112:11">idx</name> <operator pos:start="112:13" pos:end="112:13">=</operator> <name pos:start="112:15" pos:end="112:35"><name pos:start="112:15" pos:end="112:17">dsh</name><operator pos:start="112:18" pos:end="112:19">-&gt;</operator><name pos:start="112:20" pos:end="112:35">color_spec_index</name></name> <operator pos:start="112:37" pos:end="112:37">=</operator> <call pos:start="112:39" pos:end="112:60"><name pos:start="112:39" pos:end="112:56">svq3_get_ue_golomb</name><argument_list pos:start="112:57" pos:end="112:60">(<argument pos:start="112:58" pos:end="112:59"><expr pos:start="112:58" pos:end="112:59"><name pos:start="112:58" pos:end="112:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="113:9" pos:end="114:72"><if pos:start="113:9" pos:end="114:72">if <condition pos:start="113:12" pos:end="113:39">(<expr pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:15">dsh</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:33">color_spec_index</name></name> <operator pos:start="113:35" pos:end="113:35">&gt;</operator> <literal type="number" pos:start="113:37" pos:end="113:38">4U</literal></expr>)</condition><block type="pseudo" pos:start="114:9" pos:end="114:72"><block_content pos:start="114:9" pos:end="114:72">
        <expr_stmt pos:start="114:9" pos:end="114:72"><expr pos:start="114:9" pos:end="114:71"><name pos:start="114:9" pos:end="114:28"><name pos:start="114:9" pos:end="114:11">dsh</name><operator pos:start="114:12" pos:end="114:13">-&gt;</operator><name pos:start="114:14" pos:end="114:28">color_primaries</name></name> <operator pos:start="114:30" pos:end="114:30">=</operator> <name pos:start="114:32" pos:end="114:55"><name pos:start="114:32" pos:end="114:50">dirac_color_presets</name><index pos:start="114:51" pos:end="114:55">[<expr pos:start="114:52" pos:end="114:54"><name pos:start="114:52" pos:end="114:54">idx</name></expr>]</index></name><operator pos:start="114:56" pos:end="114:56">.</operator><name pos:start="114:57" pos:end="114:71">color_primaries</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="115:9" pos:end="115:67"><expr pos:start="115:9" pos:end="115:66"><name pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:11">dsh</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:23">colorspace</name></name>      <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:55"><name pos:start="115:32" pos:end="115:50">dirac_color_presets</name><index pos:start="115:51" pos:end="115:55">[<expr pos:start="115:52" pos:end="115:54"><name pos:start="115:52" pos:end="115:54">idx</name></expr>]</index></name><operator pos:start="115:56" pos:end="115:56">.</operator><name pos:start="115:57" pos:end="115:66">colorspace</name></expr>;</expr_stmt>
        <expr_stmt pos:start="116:9" pos:end="116:66"><expr pos:start="116:9" pos:end="116:65"><name pos:start="116:9" pos:end="116:22"><name pos:start="116:9" pos:end="116:11">dsh</name><operator pos:start="116:12" pos:end="116:13">-&gt;</operator><name pos:start="116:14" pos:end="116:22">color_trc</name></name>       <operator pos:start="116:30" pos:end="116:30">=</operator> <name pos:start="116:32" pos:end="116:55"><name pos:start="116:32" pos:end="116:50">dirac_color_presets</name><index pos:start="116:51" pos:end="116:55">[<expr pos:start="116:52" pos:end="116:54"><name pos:start="116:52" pos:end="116:54">idx</name></expr>]</index></name><operator pos:start="116:56" pos:end="116:56">.</operator><name pos:start="116:57" pos:end="116:65">color_trc</name></expr>;</expr_stmt>
        <if_stmt pos:start="117:9" pos:end="135:9"><if pos:start="117:9" pos:end="135:9">if <condition pos:start="117:12" pos:end="117:35">(<expr pos:start="117:13" pos:end="117:34"><operator pos:start="117:13" pos:end="117:13">!</operator><name pos:start="117:14" pos:end="117:34"><name pos:start="117:14" pos:end="117:16">dsh</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:34">color_spec_index</name></name></expr>)</condition> <block pos:start="117:37" pos:end="135:9">{<block_content pos:start="119:13" pos:end="134:49">
            <comment type="block" pos:start="118:13" pos:end="118:55">/* [DIRAC_STD] 10.3.9.1 Colour primaries */</comment>
            <if_stmt pos:start="119:13" pos:end="123:13"><if pos:start="119:13" pos:end="123:13">if <condition pos:start="119:16" pos:end="119:30">(<expr pos:start="119:17" pos:end="119:29"><call pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:25">get_bits1</name><argument_list pos:start="119:26" pos:end="119:29">(<argument pos:start="119:27" pos:end="119:28"><expr pos:start="119:27" pos:end="119:28"><name pos:start="119:27" pos:end="119:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:32" pos:end="123:13">{<block_content pos:start="120:17" pos:end="122:64">
                <expr_stmt pos:start="120:17" pos:end="120:45"><expr pos:start="120:17" pos:end="120:44"><name pos:start="120:17" pos:end="120:19">idx</name> <operator pos:start="120:21" pos:end="120:21">=</operator> <call pos:start="120:23" pos:end="120:44"><name pos:start="120:23" pos:end="120:40">svq3_get_ue_golomb</name><argument_list pos:start="120:41" pos:end="120:44">(<argument pos:start="120:42" pos:end="120:43"><expr pos:start="120:42" pos:end="120:43"><name pos:start="120:42" pos:end="120:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="121:17" pos:end="122:64"><if pos:start="121:17" pos:end="122:64">if <condition pos:start="121:20" pos:end="121:29">(<expr pos:start="121:21" pos:end="121:28"><name pos:start="121:21" pos:end="121:23">idx</name> <operator pos:start="121:25" pos:end="121:25">&lt;</operator> <literal type="number" pos:start="121:27" pos:end="121:28">3U</literal></expr>)</condition><block type="pseudo" pos:start="122:21" pos:end="122:64"><block_content pos:start="122:21" pos:end="122:64">
                    <expr_stmt pos:start="122:21" pos:end="122:64"><expr pos:start="122:21" pos:end="122:63"><name pos:start="122:21" pos:end="122:40"><name pos:start="122:21" pos:end="122:23">dsh</name><operator pos:start="122:24" pos:end="122:25">-&gt;</operator><name pos:start="122:26" pos:end="122:40">color_primaries</name></name> <operator pos:start="122:42" pos:end="122:42">=</operator> <name pos:start="122:44" pos:end="122:63"><name pos:start="122:44" pos:end="122:58">dirac_primaries</name><index pos:start="122:59" pos:end="122:63">[<expr pos:start="122:60" pos:end="122:62"><name pos:start="122:60" pos:end="122:62">idx</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <comment type="block" pos:start="124:13" pos:end="124:52">/* [DIRAC_STD] 10.3.9.2 Colour matrix */</comment>
            <if_stmt pos:start="125:13" pos:end="131:13"><if pos:start="125:13" pos:end="131:13">if <condition pos:start="125:16" pos:end="125:30">(<expr pos:start="125:17" pos:end="125:29"><call pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:25">get_bits1</name><argument_list pos:start="125:26" pos:end="125:29">(<argument pos:start="125:27" pos:end="125:28"><expr pos:start="125:27" pos:end="125:28"><name pos:start="125:27" pos:end="125:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:32" pos:end="131:13">{<block_content pos:start="126:17" pos:end="130:56">
                <expr_stmt pos:start="126:17" pos:end="126:45"><expr pos:start="126:17" pos:end="126:44"><name pos:start="126:17" pos:end="126:19">idx</name> <operator pos:start="126:21" pos:end="126:21">=</operator> <call pos:start="126:23" pos:end="126:44"><name pos:start="126:23" pos:end="126:40">svq3_get_ue_golomb</name><argument_list pos:start="126:41" pos:end="126:44">(<argument pos:start="126:42" pos:end="126:43"><expr pos:start="126:42" pos:end="126:43"><name pos:start="126:42" pos:end="126:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="127:17" pos:end="130:56"><if pos:start="127:17" pos:end="128:54">if <condition pos:start="127:20" pos:end="127:25">(<expr pos:start="127:21" pos:end="127:24"><operator pos:start="127:21" pos:end="127:21">!</operator><name pos:start="127:22" pos:end="127:24">idx</name></expr>)</condition><block type="pseudo" pos:start="128:21" pos:end="128:54"><block_content pos:start="128:21" pos:end="128:54">
                    <expr_stmt pos:start="128:21" pos:end="128:54"><expr pos:start="128:21" pos:end="128:53"><name pos:start="128:21" pos:end="128:35"><name pos:start="128:21" pos:end="128:23">dsh</name><operator pos:start="128:24" pos:end="128:25">-&gt;</operator><name pos:start="128:26" pos:end="128:35">colorspace</name></name> <operator pos:start="128:37" pos:end="128:37">=</operator> <name pos:start="128:39" pos:end="128:53">AVCOL_SPC_BT709</name></expr>;</expr_stmt></block_content></block></if>
                <if type="elseif" pos:start="129:17" pos:end="130:56">else if <condition pos:start="129:25" pos:end="129:34">(<expr pos:start="129:26" pos:end="129:33"><name pos:start="129:26" pos:end="129:28">idx</name> <operator pos:start="129:30" pos:end="129:31">==</operator> <literal type="number" pos:start="129:33" pos:end="129:33">1</literal></expr>)</condition><block type="pseudo" pos:start="130:21" pos:end="130:56"><block_content pos:start="130:21" pos:end="130:56">
                    <expr_stmt pos:start="130:21" pos:end="130:56"><expr pos:start="130:21" pos:end="130:55"><name pos:start="130:21" pos:end="130:35"><name pos:start="130:21" pos:end="130:23">dsh</name><operator pos:start="130:24" pos:end="130:25">-&gt;</operator><name pos:start="130:26" pos:end="130:35">colorspace</name></name> <operator pos:start="130:37" pos:end="130:37">=</operator> <name pos:start="130:39" pos:end="130:55">AVCOL_SPC_BT470BG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <comment type="block" pos:start="132:13" pos:end="132:56">/* [DIRAC_STD] 10.3.9.3 Transfer function */</comment>
            <if_stmt pos:start="133:13" pos:end="134:49"><if pos:start="133:13" pos:end="134:49">if <condition pos:start="133:16" pos:end="133:57">(<expr pos:start="133:17" pos:end="133:56"><call pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:25">get_bits1</name><argument_list pos:start="133:26" pos:end="133:29">(<argument pos:start="133:27" pos:end="133:28"><expr pos:start="133:27" pos:end="133:28"><name pos:start="133:27" pos:end="133:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="133:31" pos:end="133:32">&amp;&amp;</operator> <operator pos:start="133:34" pos:end="133:34">!</operator><call pos:start="133:35" pos:end="133:56"><name pos:start="133:35" pos:end="133:52">svq3_get_ue_golomb</name><argument_list pos:start="133:53" pos:end="133:56">(<argument pos:start="133:54" pos:end="133:55"><expr pos:start="133:54" pos:end="133:55"><name pos:start="133:54" pos:end="133:55">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="134:17" pos:end="134:49"><block_content pos:start="134:17" pos:end="134:49">
                <expr_stmt pos:start="134:17" pos:end="134:49"><expr pos:start="134:17" pos:end="134:48"><name pos:start="134:17" pos:end="134:30"><name pos:start="134:17" pos:end="134:19">dsh</name><operator pos:start="134:20" pos:end="134:21">-&gt;</operator><name pos:start="134:22" pos:end="134:30">color_trc</name></name> <operator pos:start="134:32" pos:end="134:32">=</operator> <name pos:start="134:34" pos:end="134:48">AVCOL_TRC_BT709</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="136:7" pos:end="141:5">else <block pos:start="136:12" pos:end="141:5">{<block_content pos:start="137:9" pos:end="140:66">
        <expr_stmt pos:start="137:9" pos:end="137:55"><expr pos:start="137:9" pos:end="137:54"><name pos:start="137:9" pos:end="137:11">idx</name>                    <operator pos:start="137:32" pos:end="137:32">=</operator> <name pos:start="137:34" pos:end="137:54"><name pos:start="137:34" pos:end="137:36">dsh</name><operator pos:start="137:37" pos:end="137:38">-&gt;</operator><name pos:start="137:39" pos:end="137:54">color_spec_index</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="138:9" pos:end="138:72"><expr pos:start="138:9" pos:end="138:71"><name pos:start="138:9" pos:end="138:28"><name pos:start="138:9" pos:end="138:11">dsh</name><operator pos:start="138:12" pos:end="138:13">-&gt;</operator><name pos:start="138:14" pos:end="138:28">color_primaries</name></name> <operator pos:start="138:30" pos:end="138:30">=</operator> <name pos:start="138:32" pos:end="138:55"><name pos:start="138:32" pos:end="138:50">dirac_color_presets</name><index pos:start="138:51" pos:end="138:55">[<expr pos:start="138:52" pos:end="138:54"><name pos:start="138:52" pos:end="138:54">idx</name></expr>]</index></name><operator pos:start="138:56" pos:end="138:56">.</operator><name pos:start="138:57" pos:end="138:71">color_primaries</name></expr>;</expr_stmt>
        <expr_stmt pos:start="139:9" pos:end="139:67"><expr pos:start="139:9" pos:end="139:66"><name pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:11">dsh</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:23">colorspace</name></name>      <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:55"><name pos:start="139:32" pos:end="139:50">dirac_color_presets</name><index pos:start="139:51" pos:end="139:55">[<expr pos:start="139:52" pos:end="139:54"><name pos:start="139:52" pos:end="139:54">idx</name></expr>]</index></name><operator pos:start="139:56" pos:end="139:56">.</operator><name pos:start="139:57" pos:end="139:66">colorspace</name></expr>;</expr_stmt>
        <expr_stmt pos:start="140:9" pos:end="140:66"><expr pos:start="140:9" pos:end="140:65"><name pos:start="140:9" pos:end="140:22"><name pos:start="140:9" pos:end="140:11">dsh</name><operator pos:start="140:12" pos:end="140:13">-&gt;</operator><name pos:start="140:14" pos:end="140:22">color_trc</name></name>       <operator pos:start="140:30" pos:end="140:30">=</operator> <name pos:start="140:32" pos:end="140:55"><name pos:start="140:32" pos:end="140:50">dirac_color_presets</name><index pos:start="140:51" pos:end="140:55">[<expr pos:start="140:52" pos:end="140:54"><name pos:start="140:52" pos:end="140:54">idx</name></expr>]</index></name><operator pos:start="140:56" pos:end="140:56">.</operator><name pos:start="140:57" pos:end="140:65">color_trc</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="142:5" pos:end="142:13">return <expr pos:start="142:12" pos:end="142:12"><literal type="number" pos:start="142:12" pos:end="142:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
