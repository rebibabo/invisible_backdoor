<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8415.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">output_packet</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">flush</name></decl></parameter>)</parameter_list><block pos:start="1:58" pos:end="245:1">{<block_content pos:start="3:5" pos:end="243:13">

    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">MpegMuxContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">s</name> <init pos:start="3:23" pos:end="3:38">= <expr pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:27">ctx</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">StreamInfo</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:22">avail_space</name><init pos:start="9:23" pos:end="9:24">=<expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>, <decl pos:start="9:27" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:33">es_size</name></decl>, <decl pos:start="9:36" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:36" pos:end="9:47">trailer_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">best_i</name><init pos:start="11:15" pos:end="11:18">= <expr pos:start="11:17" pos:end="11:18"><operator pos:start="11:17" pos:end="11:17">-</operator><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">best_score</name><init pos:start="13:19" pos:end="13:27">= <expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:27">INT_MIN</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:26">ignore_constraints</name><init pos:start="15:27" pos:end="15:28">=<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">scr</name><init pos:start="17:16" pos:end="17:28">= <expr pos:start="17:18" pos:end="17:28"><name pos:start="17:18" pos:end="17:28"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:28">last_scr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">PacketDesc</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:32">timestamp_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:77"><decl pos:start="21:5" pos:end="21:76"><type pos:start="21:5" pos:end="21:17"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">int64_t</name></type> <name pos:start="21:19" pos:end="21:27">max_delay</name><init pos:start="21:28" pos:end="21:76">= <expr pos:start="21:30" pos:end="21:76"><call pos:start="21:30" pos:end="21:76"><name pos:start="21:30" pos:end="21:39">av_rescale</name><argument_list pos:start="21:40" pos:end="21:76">(<argument pos:start="21:41" pos:end="21:54"><expr pos:start="21:41" pos:end="21:54"><name pos:start="21:41" pos:end="21:54"><name pos:start="21:41" pos:end="21:43">ctx</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:54">max_delay</name></name></expr></argument>, <argument pos:start="21:57" pos:end="21:61"><expr pos:start="21:57" pos:end="21:61"><literal type="number" pos:start="21:57" pos:end="21:61">90000</literal></expr></argument>, <argument pos:start="21:64" pos:end="21:75"><expr pos:start="21:64" pos:end="21:75"><name pos:start="21:64" pos:end="21:75">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<label pos:start="25:1" pos:end="25:6"><name pos:start="25:1" pos:end="25:5">retry</name>:</label>

    <for pos:start="27:5" pos:end="83:5">for<control pos:start="27:8" pos:end="27:36">(<init pos:start="27:9" pos:end="27:12"><expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:9">i</name><operator pos:start="27:10" pos:end="27:10">=</operator><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>;</init> <condition pos:start="27:14" pos:end="27:31"><expr pos:start="27:14" pos:end="27:30"><name pos:start="27:14" pos:end="27:14">i</name><operator pos:start="27:15" pos:end="27:15">&lt;</operator><name pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:18">ctx</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:30">nb_streams</name></name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control><block pos:start="27:37" pos:end="83:5">{<block_content pos:start="29:9" pos:end="81:9">

        <decl_stmt pos:start="29:9" pos:end="29:39"><decl pos:start="29:9" pos:end="29:38"><type pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:16">AVStream</name> <modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:20">st</name> <init pos:start="29:22" pos:end="29:38">= <expr pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:26">ctx</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:35">streams</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:43"><decl pos:start="31:9" pos:end="31:42"><type pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:18">StreamInfo</name> <modifier pos:start="31:20" pos:end="31:20">*</modifier></type><name pos:start="31:21" pos:end="31:26">stream</name> <init pos:start="31:28" pos:end="31:42">= <expr pos:start="31:30" pos:end="31:42"><name pos:start="31:30" pos:end="31:42"><name pos:start="31:30" pos:end="31:31">st</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:58"><decl pos:start="33:9" pos:end="33:57"><type pos:start="33:9" pos:end="33:17"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:17">int</name></type> <name pos:start="33:19" pos:end="33:28">avail_data</name><init pos:start="33:29" pos:end="33:57">=  <expr pos:start="33:32" pos:end="33:57"><call pos:start="33:32" pos:end="33:57"><name pos:start="33:32" pos:end="33:43">av_fifo_size</name><argument_list pos:start="33:44" pos:end="33:57">(<argument pos:start="33:45" pos:end="33:56"><expr pos:start="33:45" pos:end="33:56"><name pos:start="33:45" pos:end="33:56"><name pos:start="33:45" pos:end="33:50">stream</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:56">fifo</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:72"><decl pos:start="35:9" pos:end="35:71"><type pos:start="35:9" pos:end="35:17"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:17">int</name></type> <name pos:start="35:19" pos:end="35:23">space</name><init pos:start="35:24" pos:end="35:71">= <expr pos:start="35:26" pos:end="35:71"><name pos:start="35:26" pos:end="35:48"><name pos:start="35:26" pos:end="35:31">stream</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:48">max_buffer_size</name></name> <operator pos:start="35:50" pos:end="35:50">-</operator> <name pos:start="35:52" pos:end="35:71"><name pos:start="35:52" pos:end="35:57">stream</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:71">buffer_index</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:62"><decl pos:start="37:9" pos:end="37:61"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:21">rel_space</name><init pos:start="37:22" pos:end="37:61">= <expr pos:start="37:24" pos:end="37:61"><literal type="number" pos:start="37:24" pos:end="37:29">1024LL</literal><operator pos:start="37:30" pos:end="37:30">*</operator><name pos:start="37:31" pos:end="37:35">space</name> <operator pos:start="37:37" pos:end="37:37">/</operator> <name pos:start="37:39" pos:end="37:61"><name pos:start="37:39" pos:end="37:44">stream</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:61">max_buffer_size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:52"><decl pos:start="39:9" pos:end="39:51"><type pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:18">PacketDesc</name> <modifier pos:start="39:20" pos:end="39:20">*</modifier></type><name pos:start="39:21" pos:end="39:28">next_pkt</name><init pos:start="39:29" pos:end="39:51">= <expr pos:start="39:31" pos:end="39:51"><name pos:start="39:31" pos:end="39:51"><name pos:start="39:31" pos:end="39:36">stream</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:51">premux_packet</name></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="43:9" pos:end="45:60">/* for subtitle, a single PES packet must be generated,

           so we flush after every single subtitle packet */</comment>

        <if_stmt pos:start="47:9" pos:end="51:21"><if pos:start="47:9" pos:end="51:21">if<condition pos:start="47:11" pos:end="49:61">(<expr pos:start="47:12" pos:end="49:60"><name pos:start="47:12" pos:end="47:25"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:25">packet_size</name></name> <operator pos:start="47:27" pos:end="47:27">&gt;</operator> <name pos:start="47:29" pos:end="47:38">avail_data</name> <operator pos:start="47:40" pos:end="47:41">&amp;&amp;</operator> <operator pos:start="47:43" pos:end="47:43">!</operator><name pos:start="47:44" pos:end="47:48">flush</name>

           <operator pos:start="49:12" pos:end="49:13">&amp;&amp;</operator> <name pos:start="49:15" pos:end="49:35"><name pos:start="49:15" pos:end="49:16">st</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">codec</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:35">codec_type</name></name> <operator pos:start="49:37" pos:end="49:38">!=</operator> <name pos:start="49:40" pos:end="49:60">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <return pos:start="51:13" pos:end="51:21">return <expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:21"><if pos:start="53:9" pos:end="55:21">if<condition pos:start="53:11" pos:end="53:25">(<expr pos:start="53:12" pos:end="53:24"><name pos:start="53:12" pos:end="53:21">avail_data</name><operator pos:start="53:22" pos:end="53:23">==</operator><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <continue pos:start="55:13" pos:end="55:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:18">av_assert0</name><argument_list pos:start="57:19" pos:end="57:32">(<argument pos:start="57:20" pos:end="57:31"><expr pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:29">avail_data</name><operator pos:start="57:30" pos:end="57:30">&gt;</operator><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="63:21"><if pos:start="61:9" pos:end="63:21">if<condition pos:start="61:11" pos:end="61:57">(<expr pos:start="61:12" pos:end="61:56"><name pos:start="61:12" pos:end="61:16">space</name> <operator pos:start="61:18" pos:end="61:18">&lt;</operator> <name pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:33">packet_size</name></name> <operator pos:start="61:35" pos:end="61:36">&amp;&amp;</operator> <operator pos:start="61:38" pos:end="61:38">!</operator><name pos:start="61:39" pos:end="61:56">ignore_constraints</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:21"><block_content pos:start="63:13" pos:end="63:21">

            <continue pos:start="63:13" pos:end="63:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="67:9" pos:end="69:21"><if pos:start="67:9" pos:end="69:21">if<condition pos:start="67:11" pos:end="67:55">(<expr pos:start="67:12" pos:end="67:54"><name pos:start="67:12" pos:end="67:19">next_pkt</name> <operator pos:start="67:21" pos:end="67:22">&amp;&amp;</operator> <name pos:start="67:24" pos:end="67:36"><name pos:start="67:24" pos:end="67:31">next_pkt</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:36">dts</name></name> <operator pos:start="67:38" pos:end="67:38">-</operator> <name pos:start="67:40" pos:end="67:42">scr</name> <operator pos:start="67:44" pos:end="67:44">&gt;</operator> <name pos:start="67:46" pos:end="67:54">max_delay</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:21"><block_content pos:start="69:13" pos:end="69:21">

            <continue pos:start="69:13" pos:end="69:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if<condition pos:start="73:11" pos:end="73:34">(<expr pos:start="73:12" pos:end="73:33"><name pos:start="73:12" pos:end="73:20">rel_space</name> <operator pos:start="73:22" pos:end="73:22">&gt;</operator> <name pos:start="73:24" pos:end="73:33">best_score</name></expr>)</condition><block pos:start="73:35" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:31">

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:22">best_score</name><operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:33">rel_space</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:23"><expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:18">best_i</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:22">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:31"><expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:23">avail_space</name><operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:30">space</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="87:5" pos:end="135:5"><if pos:start="87:5" pos:end="135:5">if<condition pos:start="87:7" pos:end="87:18">(<expr pos:start="87:8" pos:end="87:17"><name pos:start="87:8" pos:end="87:13">best_i</name> <operator pos:start="87:15" pos:end="87:15">&lt;</operator> <literal type="number" pos:start="87:17" pos:end="87:17">0</literal></expr>)</condition><block pos:start="87:19" pos:end="135:5">{<block_content pos:start="89:9" pos:end="133:19">

        <decl_stmt pos:start="89:9" pos:end="89:36"><decl pos:start="89:9" pos:end="89:35"><type pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:15">int64_t</name></type> <name pos:start="89:17" pos:end="89:24">best_dts</name><init pos:start="89:25" pos:end="89:35">= <expr pos:start="89:27" pos:end="89:35"><name pos:start="89:27" pos:end="89:35">INT64_MAX</name></expr></init></decl>;</decl_stmt>



        <for pos:start="93:9" pos:end="105:9">for<control pos:start="93:12" pos:end="93:40">(<init pos:start="93:13" pos:end="93:16"><expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:13">i</name><operator pos:start="93:14" pos:end="93:14">=</operator><literal type="number" pos:start="93:15" pos:end="93:15">0</literal></expr>;</init> <condition pos:start="93:18" pos:end="93:35"><expr pos:start="93:18" pos:end="93:34"><name pos:start="93:18" pos:end="93:18">i</name><operator pos:start="93:19" pos:end="93:19">&lt;</operator><name pos:start="93:20" pos:end="93:34"><name pos:start="93:20" pos:end="93:22">ctx</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:34">nb_streams</name></name></expr>;</condition> <incr pos:start="93:37" pos:end="93:39"><expr pos:start="93:37" pos:end="93:39"><name pos:start="93:37" pos:end="93:37">i</name><operator pos:start="93:38" pos:end="93:39">++</operator></expr></incr>)</control><block pos:start="93:41" pos:end="105:9">{<block_content pos:start="95:13" pos:end="103:40">

            <decl_stmt pos:start="95:13" pos:end="95:43"><decl pos:start="95:13" pos:end="95:42"><type pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:20">AVStream</name> <modifier pos:start="95:22" pos:end="95:22">*</modifier></type><name pos:start="95:23" pos:end="95:24">st</name> <init pos:start="95:26" pos:end="95:42">= <expr pos:start="95:28" pos:end="95:42"><name pos:start="95:28" pos:end="95:42"><name pos:start="95:28" pos:end="95:30">ctx</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:39">streams</name><index pos:start="95:40" pos:end="95:42">[<expr pos:start="95:41" pos:end="95:41"><name pos:start="95:41" pos:end="95:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="97:47"><decl pos:start="97:13" pos:end="97:46"><type pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:22">StreamInfo</name> <modifier pos:start="97:24" pos:end="97:24">*</modifier></type><name pos:start="97:25" pos:end="97:30">stream</name> <init pos:start="97:32" pos:end="97:46">= <expr pos:start="97:34" pos:end="97:46"><name pos:start="97:34" pos:end="97:46"><name pos:start="97:34" pos:end="97:35">st</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="99:13" pos:end="99:59"><decl pos:start="99:13" pos:end="99:58"><type pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:22">PacketDesc</name> <modifier pos:start="99:24" pos:end="99:24">*</modifier></type><name pos:start="99:25" pos:end="99:32">pkt_desc</name><init pos:start="99:33" pos:end="99:58">= <expr pos:start="99:35" pos:end="99:58"><name pos:start="99:35" pos:end="99:58"><name pos:start="99:35" pos:end="99:40">stream</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:58">predecode_packet</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="101:13" pos:end="103:40"><if pos:start="101:13" pos:end="103:40">if<condition pos:start="101:15" pos:end="101:52">(<expr pos:start="101:16" pos:end="101:51"><name pos:start="101:16" pos:end="101:23">pkt_desc</name> <operator pos:start="101:25" pos:end="101:26">&amp;&amp;</operator> <name pos:start="101:28" pos:end="101:40"><name pos:start="101:28" pos:end="101:35">pkt_desc</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:40">dts</name></name> <operator pos:start="101:42" pos:end="101:42">&lt;</operator> <name pos:start="101:44" pos:end="101:51">best_dts</name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:40"><block_content pos:start="103:17" pos:end="103:40">

                <expr_stmt pos:start="103:17" pos:end="103:40"><expr pos:start="103:17" pos:end="103:39"><name pos:start="103:17" pos:end="103:24">best_dts</name><operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:39"><name pos:start="103:27" pos:end="103:34">pkt_desc</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:39">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="109:9" pos:end="111:51"><expr pos:start="109:9" pos:end="111:50"><call pos:start="109:9" pos:end="111:50"><name pos:start="109:9" pos:end="109:15">av_dlog</name><argument_list pos:start="109:16" pos:end="111:50">(<argument pos:start="109:17" pos:end="109:19"><expr pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">ctx</name></expr></argument>, <argument pos:start="109:22" pos:end="109:52"><expr pos:start="109:22" pos:end="109:52"><literal type="string" pos:start="109:22" pos:end="109:52">"bumping scr, scr:%f, dts:%f\n"</literal></expr></argument>,

                <argument pos:start="111:17" pos:end="111:29"><expr pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:19">scr</name> <operator pos:start="111:21" pos:end="111:21">/</operator> <literal type="number" pos:start="111:23" pos:end="111:29">90000.0</literal></expr></argument>, <argument pos:start="111:32" pos:end="111:49"><expr pos:start="111:32" pos:end="111:49"><name pos:start="111:32" pos:end="111:39">best_dts</name> <operator pos:start="111:41" pos:end="111:41">/</operator> <literal type="number" pos:start="111:43" pos:end="111:49">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="115:21"><if pos:start="113:9" pos:end="115:21">if<condition pos:start="113:11" pos:end="113:33">(<expr pos:start="113:12" pos:end="113:32"><name pos:start="113:12" pos:end="113:19">best_dts</name> <operator pos:start="113:21" pos:end="113:22">==</operator> <name pos:start="113:24" pos:end="113:32">INT64_MAX</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:21"><block_content pos:start="115:13" pos:end="115:21">

            <return pos:start="115:13" pos:end="115:21">return <expr pos:start="115:20" pos:end="115:20"><literal type="number" pos:start="115:20" pos:end="115:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if<condition pos:start="119:11" pos:end="119:52">(<expr pos:start="119:12" pos:end="119:51"><name pos:start="119:12" pos:end="119:14">scr</name> <operator pos:start="119:16" pos:end="119:17">&gt;=</operator> <name pos:start="119:19" pos:end="119:26">best_dts</name><operator pos:start="119:27" pos:end="119:27">+</operator><literal type="number" pos:start="119:28" pos:end="119:28">1</literal> <operator pos:start="119:30" pos:end="119:31">&amp;&amp;</operator> <operator pos:start="119:33" pos:end="119:33">!</operator><name pos:start="119:34" pos:end="119:51">ignore_constraints</name></expr>)</condition><block pos:start="119:53" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:34">

            <expr_stmt pos:start="121:13" pos:end="121:94"><expr pos:start="121:13" pos:end="121:93"><call pos:start="121:13" pos:end="121:93"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="121:93">(<argument pos:start="121:20" pos:end="121:22"><expr pos:start="121:20" pos:end="121:22"><name pos:start="121:20" pos:end="121:22">ctx</name></expr></argument>, <argument pos:start="121:25" pos:end="121:36"><expr pos:start="121:25" pos:end="121:36"><name pos:start="121:25" pos:end="121:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:39" pos:end="121:92"><expr pos:start="121:39" pos:end="121:92"><literal type="string" pos:start="121:39" pos:end="121:92">"packet too large, ignoring buffer limits to mux it\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:34"><expr pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:30">ignore_constraints</name><operator pos:start="123:31" pos:end="123:31">=</operator> <literal type="number" pos:start="123:33" pos:end="123:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:36"><expr pos:start="127:9" pos:end="127:35"><name pos:start="127:9" pos:end="127:11">scr</name><operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:35"><name pos:start="127:14" pos:end="127:18">FFMAX</name><argument_list pos:start="127:19" pos:end="127:35">(<argument pos:start="127:20" pos:end="127:29"><expr pos:start="127:20" pos:end="127:29"><name pos:start="127:20" pos:end="127:27">best_dts</name><operator pos:start="127:28" pos:end="127:28">+</operator><literal type="number" pos:start="127:29" pos:end="127:29">1</literal></expr></argument>, <argument pos:start="127:32" pos:end="127:34"><expr pos:start="127:32" pos:end="127:34"><name pos:start="127:32" pos:end="127:34">scr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:22"><if pos:start="129:9" pos:end="131:22">if<condition pos:start="129:11" pos:end="129:48">(<expr pos:start="129:12" pos:end="129:47"><call pos:start="129:12" pos:end="129:43"><name pos:start="129:12" pos:end="129:33">remove_decoded_packets</name><argument_list pos:start="129:34" pos:end="129:43">(<argument pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><name pos:start="129:35" pos:end="129:37">ctx</name></expr></argument>, <argument pos:start="129:40" pos:end="129:42"><expr pos:start="129:40" pos:end="129:42"><name pos:start="129:40" pos:end="129:42">scr</name></expr></argument>)</argument_list></call> <operator pos:start="129:45" pos:end="129:45">&lt;</operator> <literal type="number" pos:start="129:47" pos:end="129:47">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:22"><block_content pos:start="131:13" pos:end="131:22">

            <return pos:start="131:13" pos:end="131:22">return <expr pos:start="131:20" pos:end="131:21"><operator pos:start="131:20" pos:end="131:20">-</operator><literal type="number" pos:start="131:21" pos:end="131:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <goto pos:start="133:9" pos:end="133:19">goto <name pos:start="133:14" pos:end="133:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:24"><expr pos:start="139:5" pos:end="139:23"><call pos:start="139:5" pos:end="139:23"><name pos:start="139:5" pos:end="139:10">assert</name><argument_list pos:start="139:11" pos:end="139:23">(<argument pos:start="139:12" pos:end="139:22"><expr pos:start="139:12" pos:end="139:22"><name pos:start="139:12" pos:end="139:17">best_i</name> <operator pos:start="139:19" pos:end="139:20">&gt;=</operator> <literal type="number" pos:start="139:22" pos:end="139:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:30"><expr pos:start="143:5" pos:end="143:29"><name pos:start="143:5" pos:end="143:6">st</name> <operator pos:start="143:8" pos:end="143:8">=</operator> <name pos:start="143:10" pos:end="143:29"><name pos:start="143:10" pos:end="143:12">ctx</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:21">streams</name><index pos:start="143:22" pos:end="143:29">[<expr pos:start="143:23" pos:end="143:28"><name pos:start="143:23" pos:end="143:28">best_i</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:27"><expr pos:start="145:5" pos:end="145:26"><name pos:start="145:5" pos:end="145:10">stream</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <name pos:start="145:14" pos:end="145:26"><name pos:start="145:14" pos:end="145:15">st</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:26">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:43"><expr pos:start="149:5" pos:end="149:42"><call pos:start="149:5" pos:end="149:42"><name pos:start="149:5" pos:end="149:10">assert</name><argument_list pos:start="149:11" pos:end="149:42">(<argument pos:start="149:12" pos:end="149:41"><expr pos:start="149:12" pos:end="149:41"><call pos:start="149:12" pos:end="149:37"><name pos:start="149:12" pos:end="149:23">av_fifo_size</name><argument_list pos:start="149:24" pos:end="149:37">(<argument pos:start="149:25" pos:end="149:36"><expr pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:30">stream</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:36">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="149:39" pos:end="149:39">&gt;</operator> <literal type="number" pos:start="149:41" pos:end="149:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:64"><expr pos:start="153:5" pos:end="153:63"><call pos:start="153:5" pos:end="153:63"><name pos:start="153:5" pos:end="153:10">assert</name><argument_list pos:start="153:11" pos:end="153:63">(<argument pos:start="153:12" pos:end="153:62"><expr pos:start="153:12" pos:end="153:62"><name pos:start="153:12" pos:end="153:22">avail_space</name> <operator pos:start="153:24" pos:end="153:25">&gt;=</operator> <name pos:start="153:27" pos:end="153:40"><name pos:start="153:27" pos:end="153:27">s</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:40">packet_size</name></name> <operator pos:start="153:42" pos:end="153:43">||</operator> <name pos:start="153:45" pos:end="153:62">ignore_constraints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:44"><expr pos:start="157:5" pos:end="157:43"><name pos:start="157:5" pos:end="157:20">timestamp_packet</name><operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:43"><name pos:start="157:23" pos:end="157:28">stream</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:43">premux_packet</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="169:5"><if pos:start="159:5" pos:end="163:5">if<condition pos:start="159:7" pos:end="159:66">(<expr pos:start="159:8" pos:end="159:65"><name pos:start="159:8" pos:end="159:39"><name pos:start="159:8" pos:end="159:23">timestamp_packet</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:39">unwritten_size</name></name> <operator pos:start="159:41" pos:end="159:42">==</operator> <name pos:start="159:44" pos:end="159:65"><name pos:start="159:44" pos:end="159:59">timestamp_packet</name><operator pos:start="159:60" pos:end="159:61">-&gt;</operator><name pos:start="159:62" pos:end="159:65">size</name></name></expr>)</condition><block pos:start="159:67" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:24">

        <expr_stmt pos:start="161:9" pos:end="161:24"><expr pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:20">trailer_size</name><operator pos:start="161:21" pos:end="161:21">=</operator> <literal type="number" pos:start="161:23" pos:end="161:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="163:6" pos:end="169:5">else<block pos:start="163:10" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:49">

        <expr_stmt pos:start="165:9" pos:end="165:55"><expr pos:start="165:9" pos:end="165:54"><name pos:start="165:9" pos:end="165:20">trailer_size</name><operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:54"><name pos:start="165:23" pos:end="165:38">timestamp_packet</name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:54">unwritten_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:49"><expr pos:start="167:9" pos:end="167:48"><name pos:start="167:9" pos:end="167:24">timestamp_packet</name><operator pos:start="167:25" pos:end="167:25">=</operator> <name pos:start="167:27" pos:end="167:48"><name pos:start="167:27" pos:end="167:42">timestamp_packet</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:48">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="173:5" pos:end="191:5"><if pos:start="173:5" pos:end="185:5">if<condition pos:start="173:7" pos:end="173:24">(<expr pos:start="173:8" pos:end="173:23"><name pos:start="173:8" pos:end="173:23">timestamp_packet</name></expr>)</condition><block pos:start="173:25" pos:end="185:5">{<block_content pos:start="175:9" pos:end="183:108">

        <expr_stmt pos:start="175:9" pos:end="181:39"><expr pos:start="175:9" pos:end="181:38"><call pos:start="175:9" pos:end="181:38"><name pos:start="175:9" pos:end="175:15">av_dlog</name><argument_list pos:start="175:16" pos:end="181:38">(<argument pos:start="175:17" pos:end="175:19"><expr pos:start="175:17" pos:end="175:19"><name pos:start="175:17" pos:end="175:19">ctx</name></expr></argument>, <argument pos:start="175:22" pos:end="175:55"><expr pos:start="175:22" pos:end="175:55"><literal type="string" pos:start="175:22" pos:end="175:55">"dts:%f pts:%f scr:%f stream:%d\n"</literal></expr></argument>,

                <argument pos:start="177:17" pos:end="177:47"><expr pos:start="177:17" pos:end="177:47"><name pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:32">timestamp_packet</name><operator pos:start="177:33" pos:end="177:34">-&gt;</operator><name pos:start="177:35" pos:end="177:37">dts</name></name> <operator pos:start="177:39" pos:end="177:39">/</operator> <literal type="number" pos:start="177:41" pos:end="177:47">90000.0</literal></expr></argument>,

                <argument pos:start="179:17" pos:end="179:47"><expr pos:start="179:17" pos:end="179:47"><name pos:start="179:17" pos:end="179:37"><name pos:start="179:17" pos:end="179:32">timestamp_packet</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:37">pts</name></name> <operator pos:start="179:39" pos:end="179:39">/</operator> <literal type="number" pos:start="179:41" pos:end="179:47">90000.0</literal></expr></argument>,

                <argument pos:start="181:17" pos:end="181:29"><expr pos:start="181:17" pos:end="181:29"><name pos:start="181:17" pos:end="181:19">scr</name> <operator pos:start="181:21" pos:end="181:21">/</operator> <literal type="number" pos:start="181:23" pos:end="181:29">90000.0</literal></expr></argument>, <argument pos:start="181:32" pos:end="181:37"><expr pos:start="181:32" pos:end="181:37"><name pos:start="181:32" pos:end="181:37">best_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:108"><expr pos:start="183:9" pos:end="183:107"><name pos:start="183:9" pos:end="183:15">es_size</name><operator pos:start="183:16" pos:end="183:16">=</operator> <call pos:start="183:18" pos:end="183:107"><name pos:start="183:18" pos:end="183:29">flush_packet</name><argument_list pos:start="183:30" pos:end="183:107">(<argument pos:start="183:31" pos:end="183:33"><expr pos:start="183:31" pos:end="183:33"><name pos:start="183:31" pos:end="183:33">ctx</name></expr></argument>, <argument pos:start="183:36" pos:end="183:41"><expr pos:start="183:36" pos:end="183:41"><name pos:start="183:36" pos:end="183:41">best_i</name></expr></argument>, <argument pos:start="183:44" pos:end="183:64"><expr pos:start="183:44" pos:end="183:64"><name pos:start="183:44" pos:end="183:64"><name pos:start="183:44" pos:end="183:59">timestamp_packet</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:64">pts</name></name></expr></argument>, <argument pos:start="183:67" pos:end="183:87"><expr pos:start="183:67" pos:end="183:87"><name pos:start="183:67" pos:end="183:87"><name pos:start="183:67" pos:end="183:82">timestamp_packet</name><operator pos:start="183:83" pos:end="183:84">-&gt;</operator><name pos:start="183:85" pos:end="183:87">dts</name></name></expr></argument>, <argument pos:start="183:90" pos:end="183:92"><expr pos:start="183:90" pos:end="183:92"><name pos:start="183:90" pos:end="183:92">scr</name></expr></argument>, <argument pos:start="183:95" pos:end="183:106"><expr pos:start="183:95" pos:end="183:106"><name pos:start="183:95" pos:end="183:106">trailer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="185:6" pos:end="191:5">else<block pos:start="185:10" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:94">

        <expr_stmt pos:start="187:9" pos:end="187:59"><expr pos:start="187:9" pos:end="187:58"><call pos:start="187:9" pos:end="187:58"><name pos:start="187:9" pos:end="187:14">assert</name><argument_list pos:start="187:15" pos:end="187:58">(<argument pos:start="187:16" pos:end="187:57"><expr pos:start="187:16" pos:end="187:57"><call pos:start="187:16" pos:end="187:41"><name pos:start="187:16" pos:end="187:27">av_fifo_size</name><argument_list pos:start="187:28" pos:end="187:41">(<argument pos:start="187:29" pos:end="187:40"><expr pos:start="187:29" pos:end="187:40"><name pos:start="187:29" pos:end="187:40"><name pos:start="187:29" pos:end="187:34">stream</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:40">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="187:43" pos:end="187:44">==</operator> <name pos:start="187:46" pos:end="187:57">trailer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:94"><expr pos:start="189:9" pos:end="189:93"><name pos:start="189:9" pos:end="189:15">es_size</name><operator pos:start="189:16" pos:end="189:16">=</operator> <call pos:start="189:18" pos:end="189:93"><name pos:start="189:18" pos:end="189:29">flush_packet</name><argument_list pos:start="189:30" pos:end="189:93">(<argument pos:start="189:31" pos:end="189:33"><expr pos:start="189:31" pos:end="189:33"><name pos:start="189:31" pos:end="189:33">ctx</name></expr></argument>, <argument pos:start="189:36" pos:end="189:41"><expr pos:start="189:36" pos:end="189:41"><name pos:start="189:36" pos:end="189:41">best_i</name></expr></argument>, <argument pos:start="189:44" pos:end="189:57"><expr pos:start="189:44" pos:end="189:57"><name pos:start="189:44" pos:end="189:57">AV_NOPTS_VALUE</name></expr></argument>, <argument pos:start="189:60" pos:end="189:73"><expr pos:start="189:60" pos:end="189:73"><name pos:start="189:60" pos:end="189:73">AV_NOPTS_VALUE</name></expr></argument>, <argument pos:start="189:76" pos:end="189:78"><expr pos:start="189:76" pos:end="189:78"><name pos:start="189:76" pos:end="189:78">scr</name></expr></argument>, <argument pos:start="189:81" pos:end="189:92"><expr pos:start="189:81" pos:end="189:92"><name pos:start="189:81" pos:end="189:92">trailer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="195:5" pos:end="213:5"><if pos:start="195:5" pos:end="213:5">if <condition pos:start="195:8" pos:end="195:18">(<expr pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:17">is_vcd</name></name></expr>)</condition> <block pos:start="195:20" pos:end="213:5">{<block_content pos:start="201:9" pos:end="211:9">

        <comment type="block" pos:start="197:9" pos:end="199:42">/* Write one or more padding sectors, if necessary, to reach

           the constant overall bitrate.*/</comment>

        <decl_stmt pos:start="201:9" pos:end="201:26"><decl pos:start="201:9" pos:end="201:25"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:25">vcd_pad_bytes</name></decl>;</decl_stmt>



        <while pos:start="205:9" pos:end="211:9">while<condition pos:start="205:14" pos:end="205:104">(<expr pos:start="205:15" pos:end="205:103"><operator pos:start="205:15" pos:end="205:15">(</operator><name pos:start="205:16" pos:end="205:28">vcd_pad_bytes</name> <operator pos:start="205:30" pos:end="205:30">=</operator> <call pos:start="205:32" pos:end="205:83"><name pos:start="205:32" pos:end="205:51">get_vcd_padding_size</name><argument_list pos:start="205:52" pos:end="205:83">(<argument pos:start="205:53" pos:end="205:55"><expr pos:start="205:53" pos:end="205:55"><name pos:start="205:53" pos:end="205:55">ctx</name></expr></argument>,<argument pos:start="205:57" pos:end="205:82"><expr pos:start="205:57" pos:end="205:82"><name pos:start="205:57" pos:end="205:82"><name pos:start="205:57" pos:end="205:62">stream</name><operator pos:start="205:63" pos:end="205:64">-&gt;</operator><name pos:start="205:65" pos:end="205:77">premux_packet</name><operator pos:start="205:78" pos:end="205:79">-&gt;</operator><name pos:start="205:80" pos:end="205:82">pts</name></name></expr></argument>)</argument_list></call> <operator pos:start="205:85" pos:end="205:85">)</operator> <operator pos:start="205:87" pos:end="205:88">&gt;=</operator> <name pos:start="205:90" pos:end="205:103"><name pos:start="205:90" pos:end="205:90">s</name><operator pos:start="205:91" pos:end="205:92">-&gt;</operator><name pos:start="205:93" pos:end="205:103">packet_size</name></name></expr>)</condition><block pos:start="205:105" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:71"> <comment type="line" pos:start="205:107" pos:end="205:140">//FIXME pts cannot be correct here</comment>

            <expr_stmt pos:start="207:13" pos:end="207:40"><expr pos:start="207:13" pos:end="207:39"><call pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:34">put_vcd_padding_sector</name><argument_list pos:start="207:35" pos:end="207:39">(<argument pos:start="207:36" pos:end="207:38"><expr pos:start="207:36" pos:end="207:38"><name pos:start="207:36" pos:end="207:38">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:71"><expr pos:start="209:13" pos:end="209:70"><name pos:start="209:13" pos:end="209:23"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:23">last_scr</name></name> <operator pos:start="209:25" pos:end="209:26">+=</operator> <name pos:start="209:28" pos:end="209:41"><name pos:start="209:28" pos:end="209:28">s</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:41">packet_size</name></name><operator pos:start="209:42" pos:end="209:42">*</operator><literal type="number" pos:start="209:43" pos:end="209:49">90000LL</literal> <operator pos:start="209:51" pos:end="209:51">/</operator> <operator pos:start="209:53" pos:end="209:53">(</operator><name pos:start="209:54" pos:end="209:64"><name pos:start="209:54" pos:end="209:54">s</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:64">mux_rate</name></name><operator pos:start="209:65" pos:end="209:65">*</operator><literal type="number" pos:start="209:66" pos:end="209:69">50LL</literal><operator pos:start="209:70" pos:end="209:70">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="209:73" pos:end="209:123">//FIXME rounding and first few bytes of each packet</comment>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:36"><expr pos:start="217:5" pos:end="217:35"><name pos:start="217:5" pos:end="217:24"><name pos:start="217:5" pos:end="217:10">stream</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:24">buffer_index</name></name> <operator pos:start="217:26" pos:end="217:27">+=</operator> <name pos:start="217:29" pos:end="217:35">es_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:63"><expr pos:start="219:5" pos:end="219:62"><name pos:start="219:5" pos:end="219:15"><name pos:start="219:5" pos:end="219:5">s</name><operator pos:start="219:6" pos:end="219:7">-&gt;</operator><name pos:start="219:8" pos:end="219:15">last_scr</name></name> <operator pos:start="219:17" pos:end="219:18">+=</operator> <name pos:start="219:20" pos:end="219:33"><name pos:start="219:20" pos:end="219:20">s</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:33">packet_size</name></name><operator pos:start="219:34" pos:end="219:34">*</operator><literal type="number" pos:start="219:35" pos:end="219:41">90000LL</literal> <operator pos:start="219:43" pos:end="219:43">/</operator> <operator pos:start="219:45" pos:end="219:45">(</operator><name pos:start="219:46" pos:end="219:56"><name pos:start="219:46" pos:end="219:46">s</name><operator pos:start="219:47" pos:end="219:48">-&gt;</operator><name pos:start="219:49" pos:end="219:56">mux_rate</name></name><operator pos:start="219:57" pos:end="219:57">*</operator><literal type="number" pos:start="219:58" pos:end="219:61">50LL</literal><operator pos:start="219:62" pos:end="219:62">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="219:65" pos:end="219:115">//FIXME rounding and first few bytes of each packet</comment>



    <while pos:start="223:5" pos:end="229:5">while<condition pos:start="223:10" pos:end="223:84">(<expr pos:start="223:11" pos:end="223:83"><name pos:start="223:11" pos:end="223:31"><name pos:start="223:11" pos:end="223:16">stream</name><operator pos:start="223:17" pos:end="223:18">-&gt;</operator><name pos:start="223:19" pos:end="223:31">premux_packet</name></name> <operator pos:start="223:33" pos:end="223:34">&amp;&amp;</operator> <name pos:start="223:36" pos:end="223:72"><name pos:start="223:36" pos:end="223:41">stream</name><operator pos:start="223:42" pos:end="223:43">-&gt;</operator><name pos:start="223:44" pos:end="223:56">premux_packet</name><operator pos:start="223:57" pos:end="223:58">-&gt;</operator><name pos:start="223:59" pos:end="223:72">unwritten_size</name></name> <operator pos:start="223:74" pos:end="223:75">&lt;=</operator> <name pos:start="223:77" pos:end="223:83">es_size</name></expr>)</condition><block pos:start="223:85" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:59">

        <expr_stmt pos:start="225:9" pos:end="225:57"><expr pos:start="225:9" pos:end="225:56"><name pos:start="225:9" pos:end="225:15">es_size</name> <operator pos:start="225:17" pos:end="225:18">-=</operator> <name pos:start="225:20" pos:end="225:56"><name pos:start="225:20" pos:end="225:25">stream</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:40">premux_packet</name><operator pos:start="225:41" pos:end="225:42">-&gt;</operator><name pos:start="225:43" pos:end="225:56">unwritten_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:59"><expr pos:start="227:9" pos:end="227:58"><name pos:start="227:9" pos:end="227:29"><name pos:start="227:9" pos:end="227:14">stream</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:29">premux_packet</name></name><operator pos:start="227:30" pos:end="227:30">=</operator> <name pos:start="227:32" pos:end="227:58"><name pos:start="227:32" pos:end="227:37">stream</name><operator pos:start="227:38" pos:end="227:39">-&gt;</operator><name pos:start="227:40" pos:end="227:52">premux_packet</name><operator pos:start="227:53" pos:end="227:54">-&gt;</operator><name pos:start="227:55" pos:end="227:58">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="231:5" pos:end="233:57"><if pos:start="231:5" pos:end="233:57">if<condition pos:start="231:7" pos:end="231:15">(<expr pos:start="231:8" pos:end="231:14"><name pos:start="231:8" pos:end="231:14">es_size</name></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:57"><block_content pos:start="233:9" pos:end="233:57">

        <expr_stmt pos:start="233:9" pos:end="233:57"><expr pos:start="233:9" pos:end="233:56"><name pos:start="233:9" pos:end="233:45"><name pos:start="233:9" pos:end="233:14">stream</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:29">premux_packet</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:45">unwritten_size</name></name> <operator pos:start="233:47" pos:end="233:48">-=</operator> <name pos:start="233:50" pos:end="233:56">es_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="237:5" pos:end="239:18"><if pos:start="237:5" pos:end="239:18">if<condition pos:start="237:7" pos:end="237:52">(<expr pos:start="237:8" pos:end="237:51"><call pos:start="237:8" pos:end="237:47"><name pos:start="237:8" pos:end="237:29">remove_decoded_packets</name><argument_list pos:start="237:30" pos:end="237:47">(<argument pos:start="237:31" pos:end="237:33"><expr pos:start="237:31" pos:end="237:33"><name pos:start="237:31" pos:end="237:33">ctx</name></expr></argument>, <argument pos:start="237:36" pos:end="237:46"><expr pos:start="237:36" pos:end="237:46"><name pos:start="237:36" pos:end="237:46"><name pos:start="237:36" pos:end="237:36">s</name><operator pos:start="237:37" pos:end="237:38">-&gt;</operator><name pos:start="237:39" pos:end="237:46">last_scr</name></name></expr></argument>)</argument_list></call> <operator pos:start="237:49" pos:end="237:49">&lt;</operator> <literal type="number" pos:start="237:51" pos:end="237:51">0</literal></expr>)</condition><block type="pseudo" pos:start="239:9" pos:end="239:18"><block_content pos:start="239:9" pos:end="239:18">

        <return pos:start="239:9" pos:end="239:18">return <expr pos:start="239:16" pos:end="239:17"><operator pos:start="239:16" pos:end="239:16">-</operator><literal type="number" pos:start="239:17" pos:end="239:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="243:5" pos:end="243:13">return <expr pos:start="243:12" pos:end="243:12"><literal type="number" pos:start="243:12" pos:end="243:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
