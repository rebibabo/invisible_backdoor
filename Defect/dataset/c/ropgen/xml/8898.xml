<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8898.c" pos:tabs="8"><function pos:start="1:1" pos:end="56:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:25">qemu_net_queue_flush</name><parameter_list pos:start="1:26" pos:end="1:42">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:34">NetQueue</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">queue</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="56:1">{<block_content pos:start="5:5" pos:end="54:16">

    <while pos:start="5:5" pos:end="52:5">while <condition pos:start="5:11" pos:end="5:42">(<expr pos:start="5:12" pos:end="5:41"><operator pos:start="5:12" pos:end="5:12">!</operator><call pos:start="5:13" pos:end="5:41"><name pos:start="5:13" pos:end="5:24">QTAILQ_EMPTY</name><argument_list pos:start="5:25" pos:end="5:41">(<argument pos:start="5:26" pos:end="5:40"><expr pos:start="5:26" pos:end="5:40"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:40"><name pos:start="5:27" pos:end="5:31">queue</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:40">packets</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:44" pos:end="52:5">{<block_content pos:start="7:9" pos:end="50:23">

        <decl_stmt pos:start="7:9" pos:end="7:26"><decl pos:start="7:9" pos:end="7:25"><type pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:17">NetPacket</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">packet</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="13:9" pos:end="13:47"><expr pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:14">packet</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:46"><name pos:start="13:18" pos:end="13:29">QTAILQ_FIRST</name><argument_list pos:start="13:30" pos:end="13:46">(<argument pos:start="13:31" pos:end="13:45"><expr pos:start="13:31" pos:end="13:45"><operator pos:start="13:31" pos:end="13:31">&amp;</operator><name pos:start="13:32" pos:end="13:45"><name pos:start="13:32" pos:end="13:36">queue</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:45">packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:54"><expr pos:start="15:9" pos:end="15:53"><call pos:start="15:9" pos:end="15:53"><name pos:start="15:9" pos:end="15:21">QTAILQ_REMOVE</name><argument_list pos:start="15:22" pos:end="15:53">(<argument pos:start="15:23" pos:end="15:37"><expr pos:start="15:23" pos:end="15:37"><operator pos:start="15:23" pos:end="15:23">&amp;</operator><name pos:start="15:24" pos:end="15:37"><name pos:start="15:24" pos:end="15:28">queue</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:37">packets</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:45"><expr pos:start="15:40" pos:end="15:45"><name pos:start="15:40" pos:end="15:45">packet</name></expr></argument>, <argument pos:start="15:48" pos:end="15:52"><expr pos:start="15:48" pos:end="15:52"><name pos:start="15:48" pos:end="15:52">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <expr_stmt pos:start="20:9" pos:end="28:51"><expr pos:start="20:9" pos:end="28:50"><name pos:start="20:9" pos:end="20:11">ret</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <call pos:start="20:15" pos:end="28:50"><name pos:start="20:15" pos:end="20:36">qemu_net_queue_deliver</name><argument_list pos:start="20:37" pos:end="28:50">(<argument pos:start="20:38" pos:end="20:42"><expr pos:start="20:38" pos:end="20:42"><name pos:start="20:38" pos:end="20:42">queue</name></expr></argument>,

                                     <argument pos:start="22:38" pos:end="22:51"><expr pos:start="22:38" pos:end="22:51"><name pos:start="22:38" pos:end="22:51"><name pos:start="22:38" pos:end="22:43">packet</name><operator pos:start="22:44" pos:end="22:45">-&gt;</operator><name pos:start="22:46" pos:end="22:51">sender</name></name></expr></argument>,

                                     <argument pos:start="24:38" pos:end="24:50"><expr pos:start="24:38" pos:end="24:50"><name pos:start="24:38" pos:end="24:50"><name pos:start="24:38" pos:end="24:43">packet</name><operator pos:start="24:44" pos:end="24:45">-&gt;</operator><name pos:start="24:46" pos:end="24:50">flags</name></name></expr></argument>,

                                     <argument pos:start="26:38" pos:end="26:49"><expr pos:start="26:38" pos:end="26:49"><name pos:start="26:38" pos:end="26:49"><name pos:start="26:38" pos:end="26:43">packet</name><operator pos:start="26:44" pos:end="26:45">-&gt;</operator><name pos:start="26:46" pos:end="26:49">data</name></name></expr></argument>,

                                     <argument pos:start="28:38" pos:end="28:49"><expr pos:start="28:38" pos:end="28:49"><name pos:start="28:38" pos:end="28:49"><name pos:start="28:38" pos:end="28:43">packet</name><operator pos:start="28:44" pos:end="28:45">-&gt;</operator><name pos:start="28:46" pos:end="28:49">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="30:9" pos:end="38:9"><if pos:start="30:9" pos:end="38:9">if <condition pos:start="30:12" pos:end="30:21">(<expr pos:start="30:13" pos:end="30:20"><name pos:start="30:13" pos:end="30:15">ret</name> <operator pos:start="30:17" pos:end="30:18">==</operator> <literal type="number" pos:start="30:20" pos:end="30:20">0</literal></expr>)</condition> <block pos:start="30:23" pos:end="38:9">{<block_content pos:start="32:13" pos:end="36:25">

            <expr_stmt pos:start="32:13" pos:end="32:30"><expr pos:start="32:13" pos:end="32:29"><name pos:start="32:13" pos:end="32:27"><name pos:start="32:13" pos:end="32:17">queue</name><operator pos:start="32:18" pos:end="32:19">-&gt;</operator><name pos:start="32:20" pos:end="32:27">nq_count</name></name><operator pos:start="32:28" pos:end="32:29">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="34:13" pos:end="34:63"><expr pos:start="34:13" pos:end="34:62"><call pos:start="34:13" pos:end="34:62"><name pos:start="34:13" pos:end="34:30">QTAILQ_INSERT_HEAD</name><argument_list pos:start="34:31" pos:end="34:62">(<argument pos:start="34:32" pos:end="34:46"><expr pos:start="34:32" pos:end="34:46"><operator pos:start="34:32" pos:end="34:32">&amp;</operator><name pos:start="34:33" pos:end="34:46"><name pos:start="34:33" pos:end="34:37">queue</name><operator pos:start="34:38" pos:end="34:39">-&gt;</operator><name pos:start="34:40" pos:end="34:46">packets</name></name></expr></argument>, <argument pos:start="34:49" pos:end="34:54"><expr pos:start="34:49" pos:end="34:54"><name pos:start="34:49" pos:end="34:54">packet</name></expr></argument>, <argument pos:start="34:57" pos:end="34:61"><expr pos:start="34:57" pos:end="34:61"><name pos:start="34:57" pos:end="34:61">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="36:13" pos:end="36:25">return <expr pos:start="36:20" pos:end="36:24"><name pos:start="36:20" pos:end="36:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="42:9" pos:end="46:9"><if pos:start="42:9" pos:end="46:9">if <condition pos:start="42:12" pos:end="42:28">(<expr pos:start="42:13" pos:end="42:27"><name pos:start="42:13" pos:end="42:27"><name pos:start="42:13" pos:end="42:18">packet</name><operator pos:start="42:19" pos:end="42:20">-&gt;</operator><name pos:start="42:21" pos:end="42:27">sent_cb</name></name></expr>)</condition> <block pos:start="42:30" pos:end="46:9">{<block_content pos:start="44:13" pos:end="44:49">

            <expr_stmt pos:start="44:13" pos:end="44:49"><expr pos:start="44:13" pos:end="44:48"><call pos:start="44:13" pos:end="44:48"><name pos:start="44:13" pos:end="44:27"><name pos:start="44:13" pos:end="44:18">packet</name><operator pos:start="44:19" pos:end="44:20">-&gt;</operator><name pos:start="44:21" pos:end="44:27">sent_cb</name></name><argument_list pos:start="44:28" pos:end="44:48">(<argument pos:start="44:29" pos:end="44:42"><expr pos:start="44:29" pos:end="44:42"><name pos:start="44:29" pos:end="44:42"><name pos:start="44:29" pos:end="44:34">packet</name><operator pos:start="44:35" pos:end="44:36">-&gt;</operator><name pos:start="44:37" pos:end="44:42">sender</name></name></expr></argument>, <argument pos:start="44:45" pos:end="44:47"><expr pos:start="44:45" pos:end="44:47"><name pos:start="44:45" pos:end="44:47">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="50:9" pos:end="50:23"><expr pos:start="50:9" pos:end="50:22"><call pos:start="50:9" pos:end="50:22"><name pos:start="50:9" pos:end="50:14">g_free</name><argument_list pos:start="50:15" pos:end="50:22">(<argument pos:start="50:16" pos:end="50:21"><expr pos:start="50:16" pos:end="50:21"><name pos:start="50:16" pos:end="50:21">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="54:5" pos:end="54:16">return <expr pos:start="54:12" pos:end="54:15"><name pos:start="54:12" pos:end="54:15">true</name></expr>;</return>

</block_content>}</block></function></unit>
