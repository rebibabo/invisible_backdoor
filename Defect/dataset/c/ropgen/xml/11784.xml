<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11784.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">parse_command_line</name><parameter_list pos:start="1:37" pos:end="4:65">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:52">AVFormatContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:73"><decl pos:start="1:58" pos:end="1:73"><type pos:start="1:58" pos:end="1:73"><specifier pos:start="1:58" pos:end="1:62">const</specifier> <name pos:start="1:64" pos:end="1:67">char</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">line</name></decl></parameter>,
                                     <parameter pos:start="2:38" pos:end="2:48"><decl pos:start="2:38" pos:end="2:48"><type pos:start="2:38" pos:end="2:48"><name pos:start="2:38" pos:end="2:40">int</name></type> <name pos:start="2:42" pos:end="2:48">linelen</name></decl></parameter>, <parameter pos:start="2:51" pos:end="2:59"><decl pos:start="2:51" pos:end="2:59"><type pos:start="2:51" pos:end="2:59"><name pos:start="2:51" pos:end="2:54">char</name> <modifier pos:start="2:56" pos:end="2:56">*</modifier></type><name pos:start="2:57" pos:end="2:59">uri</name></decl></parameter>, <parameter pos:start="2:62" pos:end="2:72"><decl pos:start="2:62" pos:end="2:72"><type pos:start="2:62" pos:end="2:72"><name pos:start="2:62" pos:end="2:64">int</name></type> <name pos:start="2:66" pos:end="2:72">urisize</name></decl></parameter>,
                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:49">method</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:65">methodsize</name></decl></parameter>,
                                     <parameter pos:start="4:38" pos:end="4:64"><decl pos:start="4:38" pos:end="4:64"><type pos:start="4:38" pos:end="4:64"><name pos:start="4:38" pos:end="4:52"><name pos:start="4:38" pos:end="4:41">enum</name> <name pos:start="4:43" pos:end="4:52">RTSPMethod</name></name> <modifier pos:start="4:54" pos:end="4:54">*</modifier></type><name pos:start="4:55" pos:end="4:64">methodcode</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="6:5" pos:end="92:13">
    <decl_stmt pos:start="6:5" pos:end="6:33"><decl pos:start="6:5" pos:end="6:32"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:13">RTSPState</name> <modifier pos:start="6:15" pos:end="6:15">*</modifier></type><name pos:start="6:16" pos:end="6:17">rt</name> <init pos:start="6:19" pos:end="6:32">= <expr pos:start="6:21" pos:end="6:32"><name pos:start="6:21" pos:end="6:32"><name pos:start="6:21" pos:end="6:21">s</name><operator pos:start="6:22" pos:end="6:23">-&gt;</operator><name pos:start="6:24" pos:end="6:32">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">linept</name></decl>, <decl pos:start="7:25" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:37">searchlinept</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:31"><expr pos:start="8:5" pos:end="8:30"><name pos:start="8:5" pos:end="8:10">linept</name> <operator pos:start="8:12" pos:end="8:12">=</operator> <call pos:start="8:14" pos:end="8:30"><name pos:start="8:14" pos:end="8:19">strchr</name><argument_list pos:start="8:20" pos:end="8:30">(<argument pos:start="8:21" pos:end="8:24"><expr pos:start="8:21" pos:end="8:24"><name pos:start="8:21" pos:end="8:24">line</name></expr></argument>, <argument pos:start="8:27" pos:end="8:29"><expr pos:start="8:27" pos:end="8:29"><literal type="char" pos:start="8:27" pos:end="8:29">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:14">linept</name> <operator pos:start="9:16" pos:end="9:16">-</operator> <name pos:start="9:18" pos:end="9:21">line</name> <operator pos:start="9:23" pos:end="9:23">&gt;</operator> <name pos:start="9:25" pos:end="9:34">methodsize</name> <operator pos:start="9:36" pos:end="9:36">-</operator> <literal type="number" pos:start="9:38" pos:end="9:38">1</literal></expr>)</condition> <block pos:start="9:41" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:28">
        <expr_stmt pos:start="10:9" pos:end="10:60"><expr pos:start="10:9" pos:end="10:59"><call pos:start="10:9" pos:end="10:59"><name pos:start="10:9" pos:end="10:14">av_log</name><argument_list pos:start="10:15" pos:end="10:59">(<argument pos:start="10:16" pos:end="10:16"><expr pos:start="10:16" pos:end="10:16"><name pos:start="10:16" pos:end="10:16">s</name></expr></argument>, <argument pos:start="10:19" pos:end="10:30"><expr pos:start="10:19" pos:end="10:30"><name pos:start="10:19" pos:end="10:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="10:33" pos:end="10:58"><expr pos:start="10:33" pos:end="10:58"><literal type="string" pos:start="10:33" pos:end="10:58">"Method string too long\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:28">return <expr pos:start="11:16" pos:end="11:27"><call pos:start="11:16" pos:end="11:27"><name pos:start="11:16" pos:end="11:22">AVERROR</name><argument_list pos:start="11:23" pos:end="11:27">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><call pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:10">memcpy</name><argument_list pos:start="13:11" pos:end="13:39">(<argument pos:start="13:12" pos:end="13:17"><expr pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:17">method</name></expr></argument>, <argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">line</name></expr></argument>, <argument pos:start="13:26" pos:end="13:38"><expr pos:start="13:26" pos:end="13:38"><name pos:start="13:26" pos:end="13:31">linept</name> <operator pos:start="13:33" pos:end="13:33">-</operator> <name pos:start="13:35" pos:end="13:38">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:33"><expr pos:start="14:5" pos:end="14:32"><name pos:start="14:5" pos:end="14:25"><name pos:start="14:5" pos:end="14:10">method</name><index pos:start="14:11" pos:end="14:25">[<expr pos:start="14:12" pos:end="14:24"><name pos:start="14:12" pos:end="14:17">linept</name> <operator pos:start="14:19" pos:end="14:19">-</operator> <name pos:start="14:21" pos:end="14:24">line</name></expr>]</index></name> <operator pos:start="14:27" pos:end="14:27">=</operator> <literal type="char" pos:start="14:29" pos:end="14:32">'\0'</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:10">linept</name><operator pos:start="15:11" pos:end="15:12">++</operator></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="29:30"><if pos:start="16:5" pos:end="17:31">if <condition pos:start="16:8" pos:end="16:36">(<expr pos:start="16:9" pos:end="16:35"><operator pos:start="16:9" pos:end="16:9">!</operator><call pos:start="16:10" pos:end="16:35"><name pos:start="16:10" pos:end="16:15">strcmp</name><argument_list pos:start="16:16" pos:end="16:35">(<argument pos:start="16:17" pos:end="16:22"><expr pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:22">method</name></expr></argument>, <argument pos:start="16:25" pos:end="16:34"><expr pos:start="16:25" pos:end="16:34"><literal type="string" pos:start="16:25" pos:end="16:34">"ANNOUNCE"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">
        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:19">methodcode</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:30">ANNOUNCE</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="18:5" pos:end="19:30">else if <condition pos:start="18:13" pos:end="18:40">(<expr pos:start="18:14" pos:end="18:39"><operator pos:start="18:14" pos:end="18:14">!</operator><call pos:start="18:15" pos:end="18:39"><name pos:start="18:15" pos:end="18:20">strcmp</name><argument_list pos:start="18:21" pos:end="18:39">(<argument pos:start="18:22" pos:end="18:27"><expr pos:start="18:22" pos:end="18:27"><name pos:start="18:22" pos:end="18:27">method</name></expr></argument>, <argument pos:start="18:30" pos:end="18:38"><expr pos:start="18:30" pos:end="18:38"><literal type="string" pos:start="18:30" pos:end="18:38">"OPTIONS"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:30"><block_content pos:start="19:9" pos:end="19:30">
        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:19">methodcode</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:29">OPTIONS</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="20:5" pos:end="21:29">else if <condition pos:start="20:13" pos:end="20:39">(<expr pos:start="20:14" pos:end="20:38"><operator pos:start="20:14" pos:end="20:14">!</operator><call pos:start="20:15" pos:end="20:38"><name pos:start="20:15" pos:end="20:20">strcmp</name><argument_list pos:start="20:21" pos:end="20:38">(<argument pos:start="20:22" pos:end="20:27"><expr pos:start="20:22" pos:end="20:27"><name pos:start="20:22" pos:end="20:27">method</name></expr></argument>, <argument pos:start="20:30" pos:end="20:37"><expr pos:start="20:30" pos:end="20:37"><literal type="string" pos:start="20:30" pos:end="20:37">"RECORD"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:29"><block_content pos:start="21:9" pos:end="21:29">
        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:19">methodcode</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:28">RECORD</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="22:5" pos:end="23:28">else if <condition pos:start="22:13" pos:end="22:38">(<expr pos:start="22:14" pos:end="22:37"><operator pos:start="22:14" pos:end="22:14">!</operator><call pos:start="22:15" pos:end="22:37"><name pos:start="22:15" pos:end="22:20">strcmp</name><argument_list pos:start="22:21" pos:end="22:37">(<argument pos:start="22:22" pos:end="22:27"><expr pos:start="22:22" pos:end="22:27"><name pos:start="22:22" pos:end="22:27">method</name></expr></argument>, <argument pos:start="22:30" pos:end="22:36"><expr pos:start="22:30" pos:end="22:36"><literal type="string" pos:start="22:30" pos:end="22:36">"SETUP"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:28"><block_content pos:start="23:9" pos:end="23:28">
        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:19">methodcode</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:27">SETUP</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="24:5" pos:end="25:28">else if <condition pos:start="24:13" pos:end="24:38">(<expr pos:start="24:14" pos:end="24:37"><operator pos:start="24:14" pos:end="24:14">!</operator><call pos:start="24:15" pos:end="24:37"><name pos:start="24:15" pos:end="24:20">strcmp</name><argument_list pos:start="24:21" pos:end="24:37">(<argument pos:start="24:22" pos:end="24:27"><expr pos:start="24:22" pos:end="24:27"><name pos:start="24:22" pos:end="24:27">method</name></expr></argument>, <argument pos:start="24:30" pos:end="24:36"><expr pos:start="24:30" pos:end="24:36"><literal type="string" pos:start="24:30" pos:end="24:36">"PAUSE"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:28"><block_content pos:start="25:9" pos:end="25:28">
        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:19">methodcode</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:27">PAUSE</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="26:5" pos:end="27:31">else if <condition pos:start="26:13" pos:end="26:41">(<expr pos:start="26:14" pos:end="26:40"><operator pos:start="26:14" pos:end="26:14">!</operator><call pos:start="26:15" pos:end="26:40"><name pos:start="26:15" pos:end="26:20">strcmp</name><argument_list pos:start="26:21" pos:end="26:40">(<argument pos:start="26:22" pos:end="26:27"><expr pos:start="26:22" pos:end="26:27"><name pos:start="26:22" pos:end="26:27">method</name></expr></argument>, <argument pos:start="26:30" pos:end="26:39"><expr pos:start="26:30" pos:end="26:39"><literal type="string" pos:start="26:30" pos:end="26:39">"TEARDOWN"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">
        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:19">methodcode</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:30">TEARDOWN</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="28:5" pos:end="29:30">else<block type="pseudo" pos:start="29:9" pos:end="29:30"><block_content pos:start="29:9" pos:end="29:30">
        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:19">methodcode</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:29">UNKNOWN</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <comment type="block" pos:start="30:5" pos:end="30:38">/* Check method with the state  */</comment>
    <if_stmt pos:start="31:5" pos:end="54:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:37">(<expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:10">rt</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:17">state</name></name> <operator pos:start="31:19" pos:end="31:20">==</operator> <name pos:start="31:22" pos:end="31:36">RTSP_STATE_IDLE</name></expr>)</condition> <block pos:start="31:39" pos:end="37:5">{<block_content pos:start="32:9" pos:end="36:9">
        <if_stmt pos:start="32:9" pos:end="36:9"><if pos:start="32:9" pos:end="36:9">if <condition pos:start="32:12" pos:end="32:66">(<expr pos:start="32:13" pos:end="32:65"><operator pos:start="32:13" pos:end="32:13">(</operator><operator pos:start="32:14" pos:end="32:14">*</operator><name pos:start="32:15" pos:end="32:24">methodcode</name> <operator pos:start="32:26" pos:end="32:27">!=</operator> <name pos:start="32:29" pos:end="32:36">ANNOUNCE</name><operator pos:start="32:37" pos:end="32:37">)</operator> <operator pos:start="32:39" pos:end="32:40">&amp;&amp;</operator> <operator pos:start="32:42" pos:end="32:42">(</operator><operator pos:start="32:43" pos:end="32:43">*</operator><name pos:start="32:44" pos:end="32:53">methodcode</name> <operator pos:start="32:55" pos:end="32:56">!=</operator> <name pos:start="32:58" pos:end="32:64">OPTIONS</name><operator pos:start="32:65" pos:end="32:65">)</operator></expr>)</condition> <block pos:start="32:68" pos:end="36:9">{<block_content pos:start="33:13" pos:end="35:46">
            <expr_stmt pos:start="33:13" pos:end="34:25"><expr pos:start="33:13" pos:end="34:24"><call pos:start="33:13" pos:end="34:24"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="34:24">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">s</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:75"><expr pos:start="33:37" pos:end="33:75"><literal type="string" pos:start="33:37" pos:end="33:75">"Unexpected command in Idle State %s\n"</literal></expr></argument>,
                   <argument pos:start="34:20" pos:end="34:23"><expr pos:start="34:20" pos:end="34:23"><name pos:start="34:20" pos:end="34:23">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="35:13" pos:end="35:46">return <expr pos:start="35:20" pos:end="35:45"><name pos:start="35:20" pos:end="35:45">AVERROR_PROTOCOL_NOT_FOUND</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="44:5">else if <condition pos:start="37:15" pos:end="37:46">(<expr pos:start="37:16" pos:end="37:45"><name pos:start="37:16" pos:end="37:24"><name pos:start="37:16" pos:end="37:17">rt</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">state</name></name> <operator pos:start="37:26" pos:end="37:27">==</operator> <name pos:start="37:29" pos:end="37:45">RTSP_STATE_PAUSED</name></expr>)</condition> <block pos:start="37:48" pos:end="44:5">{<block_content pos:start="38:9" pos:end="43:9">
        <if_stmt pos:start="38:9" pos:end="43:9"><if pos:start="38:9" pos:end="43:9">if <condition pos:start="38:12" pos:end="39:38">(<expr pos:start="38:13" pos:end="39:37"><operator pos:start="38:13" pos:end="38:13">(</operator><operator pos:start="38:14" pos:end="38:14">*</operator><name pos:start="38:15" pos:end="38:24">methodcode</name> <operator pos:start="38:26" pos:end="38:27">!=</operator> <name pos:start="38:29" pos:end="38:35">OPTIONS</name><operator pos:start="38:36" pos:end="38:36">)</operator> <operator pos:start="38:38" pos:end="38:39">&amp;&amp;</operator> <operator pos:start="38:41" pos:end="38:41">(</operator><operator pos:start="38:42" pos:end="38:42">*</operator><name pos:start="38:43" pos:end="38:52">methodcode</name> <operator pos:start="38:54" pos:end="38:55">!=</operator> <name pos:start="38:57" pos:end="38:62">RECORD</name><operator pos:start="38:63" pos:end="38:63">)</operator>
            <operator pos:start="39:13" pos:end="39:14">&amp;&amp;</operator> <operator pos:start="39:16" pos:end="39:16">(</operator><operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:27">methodcode</name> <operator pos:start="39:29" pos:end="39:30">!=</operator> <name pos:start="39:32" pos:end="39:36">SETUP</name><operator pos:start="39:37" pos:end="39:37">)</operator></expr>)</condition> <block pos:start="39:40" pos:end="43:9">{<block_content pos:start="40:13" pos:end="42:46">
            <expr_stmt pos:start="40:13" pos:end="41:25"><expr pos:start="40:13" pos:end="41:24"><call pos:start="40:13" pos:end="41:24"><name pos:start="40:13" pos:end="40:18">av_log</name><argument_list pos:start="40:19" pos:end="41:24">(<argument pos:start="40:20" pos:end="40:20"><expr pos:start="40:20" pos:end="40:20"><name pos:start="40:20" pos:end="40:20">s</name></expr></argument>, <argument pos:start="40:23" pos:end="40:34"><expr pos:start="40:23" pos:end="40:34"><name pos:start="40:23" pos:end="40:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="40:37" pos:end="40:77"><expr pos:start="40:37" pos:end="40:77"><literal type="string" pos:start="40:37" pos:end="40:77">"Unexpected command in Paused State %s\n"</literal></expr></argument>,
                   <argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="42:13" pos:end="42:46">return <expr pos:start="42:20" pos:end="42:45"><name pos:start="42:20" pos:end="42:45">AVERROR_PROTOCOL_NOT_FOUND</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="44:7" pos:end="51:5">else if <condition pos:start="44:15" pos:end="44:49">(<expr pos:start="44:16" pos:end="44:48"><name pos:start="44:16" pos:end="44:24"><name pos:start="44:16" pos:end="44:17">rt</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:24">state</name></name> <operator pos:start="44:26" pos:end="44:27">==</operator> <name pos:start="44:29" pos:end="44:48">RTSP_STATE_STREAMING</name></expr>)</condition> <block pos:start="44:51" pos:end="51:5">{<block_content pos:start="45:9" pos:end="50:9">
        <if_stmt pos:start="45:9" pos:end="50:9"><if pos:start="45:9" pos:end="50:9">if <condition pos:start="45:12" pos:end="46:41">(<expr pos:start="45:13" pos:end="46:40"><operator pos:start="45:13" pos:end="45:13">(</operator><operator pos:start="45:14" pos:end="45:14">*</operator><name pos:start="45:15" pos:end="45:24">methodcode</name> <operator pos:start="45:26" pos:end="45:27">!=</operator> <name pos:start="45:29" pos:end="45:33">PAUSE</name><operator pos:start="45:34" pos:end="45:34">)</operator> <operator pos:start="45:36" pos:end="45:37">&amp;&amp;</operator> <operator pos:start="45:39" pos:end="45:39">(</operator><operator pos:start="45:40" pos:end="45:40">*</operator><name pos:start="45:41" pos:end="45:50">methodcode</name> <operator pos:start="45:52" pos:end="45:53">!=</operator> <name pos:start="45:55" pos:end="45:61">OPTIONS</name><operator pos:start="45:62" pos:end="45:62">)</operator>
            <operator pos:start="46:13" pos:end="46:14">&amp;&amp;</operator> <operator pos:start="46:16" pos:end="46:16">(</operator><operator pos:start="46:17" pos:end="46:17">*</operator><name pos:start="46:18" pos:end="46:27">methodcode</name> <operator pos:start="46:29" pos:end="46:30">!=</operator> <name pos:start="46:32" pos:end="46:39">TEARDOWN</name><operator pos:start="46:40" pos:end="46:40">)</operator></expr>)</condition> <block pos:start="46:43" pos:end="50:9">{<block_content pos:start="47:13" pos:end="49:46">
            <expr_stmt pos:start="47:13" pos:end="48:34"><expr pos:start="47:13" pos:end="48:33"><call pos:start="47:13" pos:end="48:33"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="48:33">(<argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">s</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="48:26"><expr pos:start="47:37" pos:end="48:26"><literal type="string" pos:start="47:37" pos:end="47:75">"Unexpected command in Streaming State"</literal>
                   <literal type="string" pos:start="48:20" pos:end="48:26">" %s\n"</literal></expr></argument>, <argument pos:start="48:29" pos:end="48:32"><expr pos:start="48:29" pos:end="48:32"><name pos:start="48:29" pos:end="48:32">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="49:13" pos:end="49:46">return <expr pos:start="49:20" pos:end="49:45"><name pos:start="49:20" pos:end="49:45">AVERROR_PROTOCOL_NOT_FOUND</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="51:7" pos:end="54:5">else <block pos:start="51:12" pos:end="54:5">{<block_content pos:start="52:9" pos:end="53:27">
        <expr_stmt pos:start="52:9" pos:end="52:70"><expr pos:start="52:9" pos:end="52:69"><call pos:start="52:9" pos:end="52:69"><name pos:start="52:9" pos:end="52:14">av_log</name><argument_list pos:start="52:15" pos:end="52:69">(<argument pos:start="52:16" pos:end="52:16"><expr pos:start="52:16" pos:end="52:16"><name pos:start="52:16" pos:end="52:16">s</name></expr></argument>, <argument pos:start="52:19" pos:end="52:30"><expr pos:start="52:19" pos:end="52:30"><name pos:start="52:19" pos:end="52:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="52:33" pos:end="52:57"><expr pos:start="52:33" pos:end="52:57"><literal type="string" pos:start="52:33" pos:end="52:57">"Unexpected State [%d]\n"</literal></expr></argument>, <argument pos:start="52:60" pos:end="52:68"><expr pos:start="52:60" pos:end="52:68"><name pos:start="52:60" pos:end="52:68"><name pos:start="52:60" pos:end="52:61">rt</name><operator pos:start="52:62" pos:end="52:63">-&gt;</operator><name pos:start="52:64" pos:end="52:68">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="53:9" pos:end="53:27">return <expr pos:start="53:16" pos:end="53:26"><name pos:start="53:16" pos:end="53:26">AVERROR_BUG</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:16">searchlinept</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:25">strchr</name><argument_list pos:start="55:26" pos:end="55:38">(<argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:32">linept</name></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><literal type="char" pos:start="55:35" pos:end="55:37">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="56:5" pos:end="58:5"><if pos:start="56:5" pos:end="58:5">if <condition pos:start="56:8" pos:end="56:22">(<expr pos:start="56:9" pos:end="56:21"><operator pos:start="56:9" pos:end="56:9">!</operator><name pos:start="56:10" pos:end="56:21">searchlinept</name></expr>)</condition> <block pos:start="56:24" pos:end="58:5">{<block_content pos:start="57:9" pos:end="57:63">
        <expr_stmt pos:start="57:9" pos:end="57:63"><expr pos:start="57:9" pos:end="57:62"><call pos:start="57:9" pos:end="57:62"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:62">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:33" pos:end="57:61"><expr pos:start="57:33" pos:end="57:61"><literal type="string" pos:start="57:33" pos:end="57:61">"Error parsing message URI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="59:5" pos:end="62:5"><if pos:start="59:5" pos:end="62:5">if <condition pos:start="59:8" pos:end="59:44">(<expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:20">searchlinept</name> <operator pos:start="59:22" pos:end="59:22">-</operator> <name pos:start="59:24" pos:end="59:29">linept</name> <operator pos:start="59:31" pos:end="59:31">&gt;</operator> <name pos:start="59:33" pos:end="59:39">urisize</name> <operator pos:start="59:41" pos:end="59:41">-</operator> <literal type="number" pos:start="59:43" pos:end="59:43">1</literal></expr>)</condition> <block pos:start="59:46" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:28">
        <expr_stmt pos:start="60:9" pos:end="60:76"><expr pos:start="60:9" pos:end="60:75"><call pos:start="60:9" pos:end="60:75"><name pos:start="60:9" pos:end="60:14">av_log</name><argument_list pos:start="60:15" pos:end="60:75">(<argument pos:start="60:16" pos:end="60:16"><expr pos:start="60:16" pos:end="60:16"><name pos:start="60:16" pos:end="60:16">s</name></expr></argument>, <argument pos:start="60:19" pos:end="60:30"><expr pos:start="60:19" pos:end="60:30"><name pos:start="60:19" pos:end="60:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="60:33" pos:end="60:74"><expr pos:start="60:33" pos:end="60:74"><literal type="string" pos:start="60:33" pos:end="60:74">"uri string length exceeded buffer size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="61:9" pos:end="61:28">return <expr pos:start="61:16" pos:end="61:27"><call pos:start="61:16" pos:end="61:27"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:27">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><call pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:10">memcpy</name><argument_list pos:start="63:11" pos:end="63:46">(<argument pos:start="63:12" pos:end="63:14"><expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">uri</name></expr></argument>, <argument pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">linept</name></expr></argument>, <argument pos:start="63:25" pos:end="63:45"><expr pos:start="63:25" pos:end="63:45"><name pos:start="63:25" pos:end="63:36">searchlinept</name> <operator pos:start="63:38" pos:end="63:38">-</operator> <name pos:start="63:40" pos:end="63:45">linept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="64:5" pos:end="64:38"><expr pos:start="64:5" pos:end="64:37"><name pos:start="64:5" pos:end="64:30"><name pos:start="64:5" pos:end="64:7">uri</name><index pos:start="64:8" pos:end="64:30">[<expr pos:start="64:9" pos:end="64:29"><name pos:start="64:9" pos:end="64:20">searchlinept</name> <operator pos:start="64:22" pos:end="64:22">-</operator> <name pos:start="64:24" pos:end="64:29">linept</name></expr>]</index></name> <operator pos:start="64:32" pos:end="64:32">=</operator> <literal type="char" pos:start="64:34" pos:end="64:37">'\0'</literal></expr>;</expr_stmt>
    <if_stmt pos:start="65:5" pos:end="86:5"><if pos:start="65:5" pos:end="86:5">if <condition pos:start="65:8" pos:end="65:37">(<expr pos:start="65:9" pos:end="65:36"><call pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:14">strcmp</name><argument_list pos:start="65:15" pos:end="65:36">(<argument pos:start="65:16" pos:end="65:30"><expr pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:17">rt</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:30">control_uri</name></name></expr></argument>, <argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">uri</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:39" pos:end="86:5">{<block_content pos:start="66:9" pos:end="85:9">
        <decl_stmt pos:start="66:9" pos:end="66:45"><decl pos:start="66:9" pos:end="66:22"><type pos:start="66:9" pos:end="66:12"><name pos:start="66:9" pos:end="66:12">char</name></type> <name pos:start="66:14" pos:end="66:22"><name pos:start="66:14" pos:end="66:17">host</name><index pos:start="66:18" pos:end="66:22">[<expr pos:start="66:19" pos:end="66:21"><literal type="number" pos:start="66:19" pos:end="66:21">128</literal></expr>]</index></name></decl>, <decl pos:start="66:25" pos:end="66:33"><type ref="prev" pos:start="66:9" pos:end="66:12"/><name pos:start="66:25" pos:end="66:33"><name pos:start="66:25" pos:end="66:28">path</name><index pos:start="66:29" pos:end="66:33">[<expr pos:start="66:30" pos:end="66:32"><literal type="number" pos:start="66:30" pos:end="66:32">512</literal></expr>]</index></name></decl>, <decl pos:start="66:36" pos:end="66:44"><type ref="prev" pos:start="66:9" pos:end="66:12"/><name pos:start="66:36" pos:end="66:44"><name pos:start="66:36" pos:end="66:39">auth</name><index pos:start="66:40" pos:end="66:44">[<expr pos:start="66:41" pos:end="66:43"><literal type="number" pos:start="66:41" pos:end="66:43">128</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="67:9" pos:end="67:17"><decl pos:start="67:9" pos:end="67:16"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:16">port</name></decl>;</decl_stmt>
        <decl_stmt pos:start="68:9" pos:end="68:57"><decl pos:start="68:9" pos:end="68:26"><type pos:start="68:9" pos:end="68:12"><name pos:start="68:9" pos:end="68:12">char</name></type> <name pos:start="68:14" pos:end="68:26"><name pos:start="68:14" pos:end="68:21">ctl_host</name><index pos:start="68:22" pos:end="68:26">[<expr pos:start="68:23" pos:end="68:25"><literal type="number" pos:start="68:23" pos:end="68:25">128</literal></expr>]</index></name></decl>, <decl pos:start="68:29" pos:end="68:41"><type ref="prev" pos:start="68:9" pos:end="68:12"/><name pos:start="68:29" pos:end="68:41"><name pos:start="68:29" pos:end="68:36">ctl_path</name><index pos:start="68:37" pos:end="68:41">[<expr pos:start="68:38" pos:end="68:40"><literal type="number" pos:start="68:38" pos:end="68:40">512</literal></expr>]</index></name></decl>, <decl pos:start="68:44" pos:end="68:56"><type ref="prev" pos:start="68:9" pos:end="68:12"/><name pos:start="68:44" pos:end="68:56"><name pos:start="68:44" pos:end="68:51">ctl_auth</name><index pos:start="68:52" pos:end="68:56">[<expr pos:start="68:53" pos:end="68:55"><literal type="number" pos:start="68:53" pos:end="68:55">128</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="69:9" pos:end="69:21"><decl pos:start="69:9" pos:end="69:20"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:20">ctl_port</name></decl>;</decl_stmt>
        <expr_stmt pos:start="70:9" pos:end="71:46"><expr pos:start="70:9" pos:end="71:45"><call pos:start="70:9" pos:end="71:45"><name pos:start="70:9" pos:end="70:20">av_url_split</name><argument_list pos:start="70:21" pos:end="71:45">(<argument pos:start="70:22" pos:end="70:25"><expr pos:start="70:22" pos:end="70:25"><name pos:start="70:22" pos:end="70:25">NULL</name></expr></argument>, <argument pos:start="70:28" pos:end="70:28"><expr pos:start="70:28" pos:end="70:28"><literal type="number" pos:start="70:28" pos:end="70:28">0</literal></expr></argument>, <argument pos:start="70:31" pos:end="70:34"><expr pos:start="70:31" pos:end="70:34"><name pos:start="70:31" pos:end="70:34">auth</name></expr></argument>, <argument pos:start="70:37" pos:end="70:48"><expr pos:start="70:37" pos:end="70:48"><sizeof pos:start="70:37" pos:end="70:48">sizeof<argument_list pos:start="70:43" pos:end="70:48">(<argument pos:start="70:44" pos:end="70:47"><expr pos:start="70:44" pos:end="70:47"><name pos:start="70:44" pos:end="70:47">auth</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="70:51" pos:end="70:54"><expr pos:start="70:51" pos:end="70:54"><name pos:start="70:51" pos:end="70:54">host</name></expr></argument>, <argument pos:start="70:57" pos:end="70:68"><expr pos:start="70:57" pos:end="70:68"><sizeof pos:start="70:57" pos:end="70:68">sizeof<argument_list pos:start="70:63" pos:end="70:68">(<argument pos:start="70:64" pos:end="70:67"><expr pos:start="70:64" pos:end="70:67"><name pos:start="70:64" pos:end="70:67">host</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="70:71" pos:end="70:75"><expr pos:start="70:71" pos:end="70:75"><operator pos:start="70:71" pos:end="70:71">&amp;</operator><name pos:start="70:72" pos:end="70:75">port</name></expr></argument>,
                     <argument pos:start="71:22" pos:end="71:25"><expr pos:start="71:22" pos:end="71:25"><name pos:start="71:22" pos:end="71:25">path</name></expr></argument>, <argument pos:start="71:28" pos:end="71:39"><expr pos:start="71:28" pos:end="71:39"><sizeof pos:start="71:28" pos:end="71:39">sizeof<argument_list pos:start="71:34" pos:end="71:39">(<argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><name pos:start="71:35" pos:end="71:38">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="71:42" pos:end="71:44"><expr pos:start="71:42" pos:end="71:44"><name pos:start="71:42" pos:end="71:44">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="72:9" pos:end="74:38"><expr pos:start="72:9" pos:end="74:37"><call pos:start="72:9" pos:end="74:37"><name pos:start="72:9" pos:end="72:20">av_url_split</name><argument_list pos:start="72:21" pos:end="74:37">(<argument pos:start="72:22" pos:end="72:25"><expr pos:start="72:22" pos:end="72:25"><name pos:start="72:22" pos:end="72:25">NULL</name></expr></argument>, <argument pos:start="72:28" pos:end="72:28"><expr pos:start="72:28" pos:end="72:28"><literal type="number" pos:start="72:28" pos:end="72:28">0</literal></expr></argument>, <argument pos:start="72:31" pos:end="72:38"><expr pos:start="72:31" pos:end="72:38"><name pos:start="72:31" pos:end="72:38">ctl_auth</name></expr></argument>, <argument pos:start="72:41" pos:end="72:56"><expr pos:start="72:41" pos:end="72:56"><sizeof pos:start="72:41" pos:end="72:56">sizeof<argument_list pos:start="72:47" pos:end="72:56">(<argument pos:start="72:48" pos:end="72:55"><expr pos:start="72:48" pos:end="72:55"><name pos:start="72:48" pos:end="72:55">ctl_auth</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="72:59" pos:end="72:66"><expr pos:start="72:59" pos:end="72:66"><name pos:start="72:59" pos:end="72:66">ctl_host</name></expr></argument>,
                     <argument pos:start="73:22" pos:end="73:37"><expr pos:start="73:22" pos:end="73:37"><sizeof pos:start="73:22" pos:end="73:37">sizeof<argument_list pos:start="73:28" pos:end="73:37">(<argument pos:start="73:29" pos:end="73:36"><expr pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:36">ctl_host</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="73:40" pos:end="73:48"><expr pos:start="73:40" pos:end="73:48"><operator pos:start="73:40" pos:end="73:40">&amp;</operator><name pos:start="73:41" pos:end="73:48">ctl_port</name></expr></argument>, <argument pos:start="73:51" pos:end="73:58"><expr pos:start="73:51" pos:end="73:58"><name pos:start="73:51" pos:end="73:58">ctl_path</name></expr></argument>, <argument pos:start="73:61" pos:end="73:76"><expr pos:start="73:61" pos:end="73:76"><sizeof pos:start="73:61" pos:end="73:76">sizeof<argument_list pos:start="73:67" pos:end="73:76">(<argument pos:start="73:68" pos:end="73:75"><expr pos:start="73:68" pos:end="73:75"><name pos:start="73:68" pos:end="73:75">ctl_path</name></expr></argument>)</argument_list></sizeof></expr></argument>,
                     <argument pos:start="74:22" pos:end="74:36"><expr pos:start="74:22" pos:end="74:36"><name pos:start="74:22" pos:end="74:36"><name pos:start="74:22" pos:end="74:23">rt</name><operator pos:start="74:24" pos:end="74:25">-&gt;</operator><name pos:start="74:26" pos:end="74:36">control_uri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="75:9" pos:end="77:35"><if pos:start="75:9" pos:end="77:35">if <condition pos:start="75:12" pos:end="75:35">(<expr pos:start="75:13" pos:end="75:34"><call pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:18">strcmp</name><argument_list pos:start="75:19" pos:end="75:34">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">host</name></expr></argument>, <argument pos:start="75:26" pos:end="75:33"><expr pos:start="75:26" pos:end="75:33"><name pos:start="75:26" pos:end="75:33">ctl_host</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="76:13" pos:end="77:35"><block_content pos:start="76:13" pos:end="77:35">
            <expr_stmt pos:start="76:13" pos:end="77:35"><expr pos:start="76:13" pos:end="77:34"><call pos:start="76:13" pos:end="77:34"><name pos:start="76:13" pos:end="76:18">av_log</name><argument_list pos:start="76:19" pos:end="77:34">(<argument pos:start="76:20" pos:end="76:20"><expr pos:start="76:20" pos:end="76:20"><name pos:start="76:20" pos:end="76:20">s</name></expr></argument>, <argument pos:start="76:23" pos:end="76:33"><expr pos:start="76:23" pos:end="76:33"><name pos:start="76:23" pos:end="76:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="76:36" pos:end="76:71"><expr pos:start="76:36" pos:end="76:71"><literal type="string" pos:start="76:36" pos:end="76:71">"Host %s differs from expected %s\n"</literal></expr></argument>,
                   <argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><name pos:start="77:20" pos:end="77:23">host</name></expr></argument>, <argument pos:start="77:26" pos:end="77:33"><expr pos:start="77:26" pos:end="77:33"><name pos:start="77:26" pos:end="77:33">ctl_host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="78:9" pos:end="80:44"><if pos:start="78:9" pos:end="80:44">if <condition pos:start="78:12" pos:end="78:59">(<expr pos:start="78:13" pos:end="78:58"><call pos:start="78:13" pos:end="78:34"><name pos:start="78:13" pos:end="78:18">strcmp</name><argument_list pos:start="78:19" pos:end="78:34">(<argument pos:start="78:20" pos:end="78:23"><expr pos:start="78:20" pos:end="78:23"><name pos:start="78:20" pos:end="78:23">path</name></expr></argument>, <argument pos:start="78:26" pos:end="78:33"><expr pos:start="78:26" pos:end="78:33"><name pos:start="78:26" pos:end="78:33">ctl_path</name></expr></argument>)</argument_list></call> <operator pos:start="78:36" pos:end="78:37">&amp;&amp;</operator> <operator pos:start="78:39" pos:end="78:39">*</operator><name pos:start="78:40" pos:end="78:49">methodcode</name> <operator pos:start="78:51" pos:end="78:52">!=</operator> <name pos:start="78:54" pos:end="78:58">SETUP</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="80:44"><block_content pos:start="79:13" pos:end="80:44">
            <expr_stmt pos:start="79:13" pos:end="80:44"><expr pos:start="79:13" pos:end="80:43"><call pos:start="79:13" pos:end="80:43"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="80:43">(<argument pos:start="79:20" pos:end="79:20"><expr pos:start="79:20" pos:end="79:20"><name pos:start="79:20" pos:end="79:20">s</name></expr></argument>, <argument pos:start="79:23" pos:end="79:36"><expr pos:start="79:23" pos:end="79:36"><name pos:start="79:23" pos:end="79:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="79:39" pos:end="80:26"><expr pos:start="79:39" pos:end="80:26"><literal type="string" pos:start="79:39" pos:end="79:78">"WARNING: Path %s differs from expected"</literal>
                   <literal type="string" pos:start="80:20" pos:end="80:26">" %s\n"</literal></expr></argument>, <argument pos:start="80:29" pos:end="80:32"><expr pos:start="80:29" pos:end="80:32"><name pos:start="80:29" pos:end="80:32">path</name></expr></argument>, <argument pos:start="80:35" pos:end="80:42"><expr pos:start="80:35" pos:end="80:42"><name pos:start="80:35" pos:end="80:42">ctl_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:36">(<expr pos:start="81:13" pos:end="81:35"><operator pos:start="81:13" pos:end="81:13">*</operator><name pos:start="81:14" pos:end="81:23">methodcode</name> <operator pos:start="81:25" pos:end="81:26">==</operator> <name pos:start="81:28" pos:end="81:35">ANNOUNCE</name></expr>)</condition> <block pos:start="81:38" pos:end="85:9">{<block_content pos:start="82:13" pos:end="84:70">
            <expr_stmt pos:start="82:13" pos:end="83:56"><expr pos:start="82:13" pos:end="83:55"><call pos:start="82:13" pos:end="83:55"><name pos:start="82:13" pos:end="82:18">av_log</name><argument_list pos:start="82:19" pos:end="83:55">(<argument pos:start="82:20" pos:end="82:20"><expr pos:start="82:20" pos:end="82:20"><name pos:start="82:20" pos:end="82:20">s</name></expr></argument>, <argument pos:start="82:23" pos:end="82:33"><expr pos:start="82:23" pos:end="82:33"><name pos:start="82:23" pos:end="82:33">AV_LOG_INFO</name></expr></argument>,
                   <argument pos:start="83:20" pos:end="83:49"><expr pos:start="83:20" pos:end="83:49"><literal type="string" pos:start="83:20" pos:end="83:49">"Updating control URI to %s\n"</literal></expr></argument>, <argument pos:start="83:52" pos:end="83:54"><expr pos:start="83:52" pos:end="83:54"><name pos:start="83:52" pos:end="83:54">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="84:13" pos:end="84:70"><expr pos:start="84:13" pos:end="84:69"><call pos:start="84:13" pos:end="84:69"><name pos:start="84:13" pos:end="84:22">av_strlcpy</name><argument_list pos:start="84:23" pos:end="84:69">(<argument pos:start="84:24" pos:end="84:38"><expr pos:start="84:24" pos:end="84:38"><name pos:start="84:24" pos:end="84:38"><name pos:start="84:24" pos:end="84:25">rt</name><operator pos:start="84:26" pos:end="84:27">-&gt;</operator><name pos:start="84:28" pos:end="84:38">control_uri</name></name></expr></argument>, <argument pos:start="84:41" pos:end="84:43"><expr pos:start="84:41" pos:end="84:43"><name pos:start="84:41" pos:end="84:43">uri</name></expr></argument>, <argument pos:start="84:46" pos:end="84:68"><expr pos:start="84:46" pos:end="84:68"><sizeof pos:start="84:46" pos:end="84:68">sizeof<argument_list pos:start="84:52" pos:end="84:68">(<argument pos:start="84:53" pos:end="84:67"><expr pos:start="84:53" pos:end="84:67"><name pos:start="84:53" pos:end="84:67"><name pos:start="84:53" pos:end="84:54">rt</name><operator pos:start="84:55" pos:end="84:56">-&gt;</operator><name pos:start="84:57" pos:end="84:67">control_uri</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="87:5" pos:end="87:30"><expr pos:start="87:5" pos:end="87:29"><name pos:start="87:5" pos:end="87:10">linept</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="87:25">searchlinept</name> <operator pos:start="87:27" pos:end="87:27">+</operator> <literal type="number" pos:start="87:29" pos:end="87:29">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="88:5" pos:end="91:5"><if pos:start="88:5" pos:end="91:5">if <condition pos:start="88:8" pos:end="88:47">(<expr pos:start="88:9" pos:end="88:46"><operator pos:start="88:9" pos:end="88:9">!</operator><call pos:start="88:10" pos:end="88:46"><name pos:start="88:10" pos:end="88:20">av_strstart</name><argument_list pos:start="88:21" pos:end="88:46">(<argument pos:start="88:22" pos:end="88:27"><expr pos:start="88:22" pos:end="88:27"><name pos:start="88:22" pos:end="88:27">linept</name></expr></argument>, <argument pos:start="88:30" pos:end="88:39"><expr pos:start="88:30" pos:end="88:39"><literal type="string" pos:start="88:30" pos:end="88:39">"RTSP/1.0"</literal></expr></argument>, <argument pos:start="88:42" pos:end="88:45"><expr pos:start="88:42" pos:end="88:45"><name pos:start="88:42" pos:end="88:45">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="88:49" pos:end="91:5">{<block_content pos:start="89:9" pos:end="90:42">
        <expr_stmt pos:start="89:9" pos:end="89:71"><expr pos:start="89:9" pos:end="89:70"><call pos:start="89:9" pos:end="89:70"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:70">(<argument pos:start="89:16" pos:end="89:16"><expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">s</name></expr></argument>, <argument pos:start="89:19" pos:end="89:30"><expr pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:33" pos:end="89:69"><expr pos:start="89:33" pos:end="89:69"><literal type="string" pos:start="89:33" pos:end="89:69">"Error parsing protocol or version\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="90:9" pos:end="90:42">return <expr pos:start="90:16" pos:end="90:41"><name pos:start="90:16" pos:end="90:41">AVERROR_PROTOCOL_NOT_FOUND</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="92:5" pos:end="92:13">return <expr pos:start="92:12" pos:end="92:12"><literal type="number" pos:start="92:12" pos:end="92:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
