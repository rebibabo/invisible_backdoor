<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19000.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">CPUSPARCState</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:29">cpu_sparc_init</name><parameter_list pos:start="1:30" pos:end="1:35">(<parameter pos:start="1:31" pos:end="1:34"><decl pos:start="1:31" pos:end="1:34"><type pos:start="1:31" pos:end="1:34"><name pos:start="1:31" pos:end="1:34">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:17">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUSPARCState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><call pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">cpu_exec_init</name><argument_list pos:start="9:18" pos:end="9:19">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="15:22"><if pos:start="13:5" pos:end="15:22">if <condition pos:start="13:8" pos:end="13:47">(<expr pos:start="13:9" pos:end="13:46"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:13">env</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:45"><name pos:start="13:17" pos:end="13:22">malloc</name><argument_list pos:start="13:23" pos:end="13:45">(<argument pos:start="13:24" pos:end="13:44"><expr pos:start="13:24" pos:end="13:44"><sizeof pos:start="13:24" pos:end="13:44">sizeof<argument_list pos:start="13:30" pos:end="13:44">(<argument pos:start="13:31" pos:end="13:43"><expr pos:start="13:31" pos:end="13:43"><name pos:start="13:31" pos:end="13:43">CPUSPARCState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="13:46" pos:end="13:46">)</operator></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:22"><block_content pos:start="15:9" pos:end="15:22">

	<return pos:start="15:9" pos:end="15:22">return <expr pos:start="15:16" pos:end="15:21"><operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:20">NULL</name><operator pos:start="15:21" pos:end="15:21">)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:32">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">env</name></expr></argument>, <argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></argument>, <argument pos:start="17:20" pos:end="17:31"><expr pos:start="17:20" pos:end="17:31"><sizeof pos:start="17:20" pos:end="17:31">sizeof<argument_list pos:start="17:26" pos:end="17:31">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><operator pos:start="17:27" pos:end="17:27">*</operator><name pos:start="17:28" pos:end="17:30">env</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:12">cwp</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">env</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:12">wim</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:16">regwptr</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:31"><name pos:start="23:20" pos:end="23:22">env</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:31">regbase</name></name> <operator pos:start="23:33" pos:end="23:33">+</operator> <operator pos:start="23:35" pos:end="23:35">(</operator><name pos:start="23:36" pos:end="23:43"><name pos:start="23:36" pos:end="23:38">env</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:43">cwp</name></name> <operator pos:start="23:45" pos:end="23:45">*</operator> <literal type="number" pos:start="23:47" pos:end="23:48">16</literal><operator pos:start="23:49" pos:end="23:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">env</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:20">access_type</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:34">ACCESS_DATA</name></expr>;</expr_stmt>

<cpp:if pos:start="27:1" pos:end="27:29">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:29"><call pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:11">defined</name><argument_list pos:start="27:12" pos:end="27:29">(<argument pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:23">user_mode_only</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

    <comment type="block" pos:start="33:5" pos:end="33:22">/* Emulate Prom */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:13">psrs</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:11">pc</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:20">0x4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:12">npc</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:22"><name pos:start="39:16" pos:end="39:18">env</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:22">pc</name></name> <operator pos:start="39:24" pos:end="39:24">+</operator> <literal type="number" pos:start="39:26" pos:end="39:26">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:16">mmuregs</name><index pos:start="41:17" pos:end="41:19">[<expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>]</index></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">(</operator><literal type="number" pos:start="41:24" pos:end="41:27">0x10</literal><operator pos:start="41:28" pos:end="41:29">&lt;&lt;</operator><literal type="number" pos:start="41:30" pos:end="41:31">24</literal><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">|</operator> <name pos:start="41:36" pos:end="41:40">MMU_E</name></expr>;</expr_stmt> <comment type="block" pos:start="41:43" pos:end="41:74">/* Impl 1, ver 0, MMU Enabled */</comment>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">env</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:16">mmuregs</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:28">0x3000</literal> <operator pos:start="43:30" pos:end="43:31">&gt;&gt;</operator> <literal type="number" pos:start="43:33" pos:end="43:33">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:36" pos:end="43:58">/* MMU Context table */</comment>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:18">cpu_single_env</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:24">env</name></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:17">return <expr pos:start="49:12" pos:end="49:16"><operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:15">env</name><operator pos:start="49:16" pos:end="49:16">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
