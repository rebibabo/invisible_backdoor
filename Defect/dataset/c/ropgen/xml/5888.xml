<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5888.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">unplug_disks</name><parameter_list pos:start="1:25" pos:end="1:58">(<parameter pos:start="1:26" pos:end="1:34"><decl pos:start="1:26" pos:end="1:34"><type pos:start="1:26" pos:end="1:34"><name pos:start="1:26" pos:end="1:31">PCIBus</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">b</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:45">PCIDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">d</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:57"><decl pos:start="1:51" pos:end="1:57"><type pos:start="1:51" pos:end="1:57"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">o</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <comment type="block" pos:start="5:5" pos:end="5:47">/* We have to ignore passthrough devices */</comment>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:48">(<expr pos:start="7:9" pos:end="7:47"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:47"><name pos:start="7:10" pos:end="7:15">strcmp</name><argument_list pos:start="7:16" pos:end="7:47">(<argument pos:start="7:17" pos:end="7:23"><expr pos:start="7:17" pos:end="7:23"><name pos:start="7:17" pos:end="7:23"><name pos:start="7:17" pos:end="7:17">d</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:23">name</name></name></expr></argument>, <argument pos:start="7:26" pos:end="7:46"><expr pos:start="7:26" pos:end="7:46"><literal type="string" pos:start="7:26" pos:end="7:46">"xen-pci-passthrough"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:50" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="15:5" pos:end="39:5">switch <condition pos:start="15:12" pos:end="15:55">(<expr pos:start="15:13" pos:end="15:54"><call pos:start="15:13" pos:end="15:54"><name pos:start="15:13" pos:end="15:24">pci_get_word</name><argument_list pos:start="15:25" pos:end="15:54">(<argument pos:start="15:26" pos:end="15:53"><expr pos:start="15:26" pos:end="15:53"><name pos:start="15:26" pos:end="15:34"><name pos:start="15:26" pos:end="15:26">d</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:34">config</name></name> <operator pos:start="15:36" pos:end="15:36">+</operator> <name pos:start="15:38" pos:end="15:53">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:57" pos:end="39:5">{<block_content pos:start="17:5" pos:end="37:14">

    <case pos:start="17:5" pos:end="17:31">case <expr pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:30">PCI_CLASS_STORAGE_IDE</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:32">pci_piix3_xen_ide_unplug</name><argument_list pos:start="19:33" pos:end="19:43">(<argument pos:start="19:34" pos:end="19:42"><expr pos:start="19:34" pos:end="19:42"><call pos:start="19:34" pos:end="19:42"><name pos:start="19:34" pos:end="19:39">DEVICE</name><argument_list pos:start="19:40" pos:end="19:42">(<argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>



    <case pos:start="25:5" pos:end="25:32">case <expr pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:31">PCI_CLASS_STORAGE_SCSI</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:35">case <expr pos:start="27:10" pos:end="27:34"><name pos:start="27:10" pos:end="27:34">PCI_CLASS_STORAGE_EXPRESS</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><call pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:23">object_unparent</name><argument_list pos:start="29:24" pos:end="29:34">(<argument pos:start="29:25" pos:end="29:33"><expr pos:start="29:25" pos:end="29:33"><call pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:30">OBJECT</name><argument_list pos:start="29:31" pos:end="29:33">(<argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>



    <default pos:start="35:5" pos:end="35:12">default:</default>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
