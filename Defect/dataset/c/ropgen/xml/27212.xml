<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27212.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">vga_precise_update_retrace_info</name><parameter_list pos:start="1:44" pos:end="1:62">(<parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:60"><name pos:start="1:45" pos:end="1:58">VGACommonState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="180:0">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:20">htotal_chars</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24">hretr_start_char</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">hretr_skew_chars</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">hretr_end_char</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">vtotal_lines</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:24">vretr_start_line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">vretr_end_line</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="30:0"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">dots</name></decl>;</decl_stmt>

<cpp:if pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:5"><literal type="number" pos:start="25:5" pos:end="25:5">0</literal></expr></cpp:if>

    int div2, sldiv2;

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="31:5" pos:end="31:22"><decl pos:start="31:5" pos:end="31:21"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:21">clocking_mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:18"><decl pos:start="33:5" pos:end="33:17"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:17">clock_sel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:66"><decl pos:start="35:5" pos:end="35:65"><type pos:start="35:5" pos:end="35:13"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:13">int</name></type> <name pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:20">clk_hz</name><index pos:start="35:21" pos:end="35:22">[]</index></name> <init pos:start="35:24" pos:end="35:65">= <expr pos:start="35:26" pos:end="35:65"><block pos:start="35:26" pos:end="35:65">{<expr pos:start="35:27" pos:end="35:34"><literal type="number" pos:start="35:27" pos:end="35:34">25175000</literal></expr>, <expr pos:start="35:37" pos:end="35:44"><literal type="number" pos:start="35:37" pos:end="35:44">28322000</literal></expr>, <expr pos:start="35:47" pos:end="35:54"><literal type="number" pos:start="35:47" pos:end="35:54">25175000</literal></expr>, <expr pos:start="35:57" pos:end="35:64"><literal type="number" pos:start="35:57" pos:end="35:64">25175000</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:26"><decl pos:start="37:5" pos:end="37:25"><type pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:11">int64_t</name></type> <name pos:start="37:13" pos:end="37:25">chars_per_sec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:61"><decl pos:start="39:5" pos:end="39:60"><type pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:10">struct</name> <name pos:start="39:12" pos:end="39:30">vga_precise_retrace</name></name> <modifier pos:start="39:32" pos:end="39:32">*</modifier></type><name pos:start="39:33" pos:end="39:33">r</name> <init pos:start="39:35" pos:end="39:60">= <expr pos:start="39:37" pos:end="39:60"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:60"><name pos:start="39:38" pos:end="39:38">s</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:52">retrace_info</name><operator pos:start="39:53" pos:end="39:53">.</operator><name pos:start="39:54" pos:end="39:60">precise</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:16">htotal_chars</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:42"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:24">cr</name><index pos:start="43:25" pos:end="43:42">[<expr pos:start="43:26" pos:end="43:41"><name pos:start="43:26" pos:end="43:41">VGA_CRTC_H_TOTAL</name></expr>]</index></name> <operator pos:start="43:44" pos:end="43:44">+</operator> <literal type="number" pos:start="43:46" pos:end="43:46">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:20">hretr_start_char</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:51"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:28">cr</name><index pos:start="45:29" pos:end="45:51">[<expr pos:start="45:30" pos:end="45:50"><name pos:start="45:30" pos:end="45:50">VGA_CRTC_H_SYNC_START</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:20">hretr_skew_chars</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <operator pos:start="47:24" pos:end="47:24">(</operator><name pos:start="47:25" pos:end="47:50"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:29">cr</name><index pos:start="47:30" pos:end="47:50">[<expr pos:start="47:31" pos:end="47:49"><name pos:start="47:31" pos:end="47:49">VGA_CRTC_H_SYNC_END</name></expr>]</index></name> <operator pos:start="47:52" pos:end="47:53">&gt;&gt;</operator> <literal type="number" pos:start="47:55" pos:end="47:55">5</literal><operator pos:start="47:56" pos:end="47:56">)</operator> <operator pos:start="47:58" pos:end="47:58">&amp;</operator> <literal type="number" pos:start="47:60" pos:end="47:60">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:55"><expr pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:18">hretr_end_char</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:47"><name pos:start="49:22" pos:end="49:22">s</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:26">cr</name><index pos:start="49:27" pos:end="49:47">[<expr pos:start="49:28" pos:end="49:46"><name pos:start="49:28" pos:end="49:46">VGA_CRTC_H_SYNC_END</name></expr>]</index></name> <operator pos:start="49:49" pos:end="49:49">&amp;</operator> <literal type="number" pos:start="49:51" pos:end="49:54">0x1f</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:72"><expr pos:start="53:5" pos:end="57:71"><name pos:start="53:5" pos:end="53:16">vtotal_lines</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:43"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:25">cr</name><index pos:start="53:26" pos:end="53:43">[<expr pos:start="53:27" pos:end="53:42"><name pos:start="53:27" pos:end="53:42">VGA_CRTC_V_TOTAL</name></expr>]</index></name> <operator pos:start="53:45" pos:end="53:45">|</operator>

                    <operator pos:start="55:21" pos:end="55:21">(</operator><operator pos:start="55:22" pos:end="55:22">(</operator><operator pos:start="55:23" pos:end="55:23">(</operator><name pos:start="55:24" pos:end="55:47"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:28">cr</name><index pos:start="55:29" pos:end="55:47">[<expr pos:start="55:30" pos:end="55:46"><name pos:start="55:30" pos:end="55:46">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="55:49" pos:end="55:49">&amp;</operator> <literal type="number" pos:start="55:51" pos:end="55:51">1</literal><operator pos:start="55:52" pos:end="55:52">)</operator> <operator pos:start="55:54" pos:end="55:54">|</operator>

                      <operator pos:start="57:23" pos:end="57:23">(</operator><operator pos:start="57:24" pos:end="57:24">(</operator><name pos:start="57:25" pos:end="57:48"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:29">cr</name><index pos:start="57:30" pos:end="57:48">[<expr pos:start="57:31" pos:end="57:47"><name pos:start="57:31" pos:end="57:47">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="57:50" pos:end="57:51">&gt;&gt;</operator> <literal type="number" pos:start="57:53" pos:end="57:53">4</literal><operator pos:start="57:54" pos:end="57:54">)</operator> <operator pos:start="57:56" pos:end="57:56">&amp;</operator> <literal type="number" pos:start="57:58" pos:end="57:58">2</literal><operator pos:start="57:59" pos:end="57:59">)</operator><operator pos:start="57:60" pos:end="57:60">)</operator> <operator pos:start="57:62" pos:end="57:63">&lt;&lt;</operator> <literal type="number" pos:start="57:65" pos:end="57:65">8</literal><operator pos:start="57:66" pos:end="57:66">)</operator><operator pos:start="57:67" pos:end="57:67">)</operator> <operator pos:start="57:69" pos:end="57:69">+</operator> <literal type="number" pos:start="57:71" pos:end="57:71">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="63:55"><expr pos:start="59:5" pos:end="63:54"><name pos:start="59:5" pos:end="59:20">vretr_start_line</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:51"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:28">cr</name><index pos:start="59:29" pos:end="59:51">[<expr pos:start="59:30" pos:end="59:50"><name pos:start="59:30" pos:end="59:50">VGA_CRTC_V_SYNC_START</name></expr>]</index></name> <operator pos:start="59:53" pos:end="59:53">|</operator>

        <operator pos:start="61:9" pos:end="61:9">(</operator><operator pos:start="61:10" pos:end="61:10">(</operator><operator pos:start="61:11" pos:end="61:11">(</operator><operator pos:start="61:12" pos:end="61:12">(</operator><name pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:17">cr</name><index pos:start="61:18" pos:end="61:36">[<expr pos:start="61:19" pos:end="61:35"><name pos:start="61:19" pos:end="61:35">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="61:38" pos:end="61:39">&gt;&gt;</operator> <literal type="number" pos:start="61:41" pos:end="61:41">2</literal><operator pos:start="61:42" pos:end="61:42">)</operator> <operator pos:start="61:44" pos:end="61:44">&amp;</operator> <literal type="number" pos:start="61:46" pos:end="61:46">1</literal><operator pos:start="61:47" pos:end="61:47">)</operator> <operator pos:start="61:49" pos:end="61:49">|</operator>

          <operator pos:start="63:11" pos:end="63:11">(</operator><operator pos:start="63:12" pos:end="63:12">(</operator><name pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:17">cr</name><index pos:start="63:18" pos:end="63:36">[<expr pos:start="63:19" pos:end="63:35"><name pos:start="63:19" pos:end="63:35">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="63:38" pos:end="63:39">&gt;&gt;</operator> <literal type="number" pos:start="63:41" pos:end="63:41">6</literal><operator pos:start="63:42" pos:end="63:42">)</operator> <operator pos:start="63:44" pos:end="63:44">&amp;</operator> <literal type="number" pos:start="63:46" pos:end="63:46">2</literal><operator pos:start="63:47" pos:end="63:47">)</operator><operator pos:start="63:48" pos:end="63:48">)</operator> <operator pos:start="63:50" pos:end="63:51">&lt;&lt;</operator> <literal type="number" pos:start="63:53" pos:end="63:53">8</literal><operator pos:start="63:54" pos:end="63:54">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:54"><expr pos:start="65:5" pos:end="65:53"><name pos:start="65:5" pos:end="65:18">vretr_end_line</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:47"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:26">cr</name><index pos:start="65:27" pos:end="65:47">[<expr pos:start="65:28" pos:end="65:46"><name pos:start="65:28" pos:end="65:46">VGA_CRTC_V_SYNC_END</name></expr>]</index></name> <operator pos:start="65:49" pos:end="65:49">&amp;</operator> <literal type="number" pos:start="65:51" pos:end="65:53">0xf</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:57"><expr pos:start="69:5" pos:end="69:56"><name pos:start="69:5" pos:end="69:17">clocking_mode</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:46"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:26">sr</name><index pos:start="69:27" pos:end="69:46">[<expr pos:start="69:28" pos:end="69:45"><name pos:start="69:28" pos:end="69:45">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="69:48" pos:end="69:49">&gt;&gt;</operator> <literal type="number" pos:start="69:51" pos:end="69:51">3</literal><operator pos:start="69:52" pos:end="69:52">)</operator> <operator pos:start="69:54" pos:end="69:54">&amp;</operator> <literal type="number" pos:start="69:56" pos:end="69:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:13">clock_sel</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:23"><name pos:start="71:18" pos:end="71:18">s</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:23">msr</name></name> <operator pos:start="71:25" pos:end="71:26">&gt;&gt;</operator> <literal type="number" pos:start="71:28" pos:end="71:28">2</literal><operator pos:start="71:29" pos:end="71:29">)</operator> <operator pos:start="71:31" pos:end="71:31">&amp;</operator> <literal type="number" pos:start="71:33" pos:end="71:33">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:8">dots</name> <operator pos:start="73:10" pos:end="73:10">=</operator> <ternary pos:start="73:12" pos:end="73:31"><condition pos:start="73:12" pos:end="73:25"><expr pos:start="73:12" pos:end="73:23"><operator pos:start="73:12" pos:end="73:12">(</operator><name pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:18">msr</name></name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <literal type="number" pos:start="73:22" pos:end="73:22">1</literal><operator pos:start="73:23" pos:end="73:23">)</operator></expr> ?</condition><then pos:start="73:27" pos:end="73:27"> <expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">8</literal></expr> </then><else pos:start="73:29" pos:end="73:31">: <expr pos:start="73:31" pos:end="73:31"><literal type="number" pos:start="73:31" pos:end="73:31">9</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:45"><expr pos:start="77:5" pos:end="77:44"><name pos:start="77:5" pos:end="77:17">chars_per_sec</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:26">clk_hz</name><index pos:start="77:27" pos:end="77:37">[<expr pos:start="77:28" pos:end="77:36"><name pos:start="77:28" pos:end="77:36">clock_sel</name></expr>]</index></name> <operator pos:start="77:39" pos:end="77:39">/</operator> <name pos:start="77:41" pos:end="77:44">dots</name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:16">htotal_chars</name> <operator pos:start="81:18" pos:end="81:20">&lt;&lt;=</operator> <name pos:start="81:22" pos:end="81:34">clocking_mode</name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:5">r</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:18">total_chars</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:33">vtotal_lines</name> <operator pos:start="85:35" pos:end="85:35">*</operator> <name pos:start="85:37" pos:end="85:48">htotal_chars</name></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:9">r</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:15">freq</name></name></expr>)</condition> <block pos:start="87:18" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:80">

        <expr_stmt pos:start="89:9" pos:end="89:80"><expr pos:start="89:9" pos:end="89:79"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:9">r</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:25">ticks_per_char</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:50">NANOSECONDS_PER_SECOND</name> <operator pos:start="89:52" pos:end="89:52">/</operator> <operator pos:start="89:54" pos:end="89:54">(</operator><name pos:start="89:55" pos:end="89:68"><name pos:start="89:55" pos:end="89:55">r</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:68">total_chars</name></name> <operator pos:start="89:70" pos:end="89:70">*</operator> <name pos:start="89:72" pos:end="89:78"><name pos:start="89:72" pos:end="89:72">r</name><operator pos:start="89:73" pos:end="89:74">-&gt;</operator><name pos:start="89:75" pos:end="89:78">freq</name></name><operator pos:start="89:79" pos:end="89:79">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="95:5">else <block pos:start="91:12" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:67">

        <expr_stmt pos:start="93:9" pos:end="93:67"><expr pos:start="93:9" pos:end="93:66"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:9">r</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:25">ticks_per_char</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:50">NANOSECONDS_PER_SECOND</name> <operator pos:start="93:52" pos:end="93:52">/</operator> <name pos:start="93:54" pos:end="93:66">chars_per_sec</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:33"><expr pos:start="99:5" pos:end="99:32"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:5">r</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:13">vstart</name></name> <operator pos:start="99:15" pos:end="99:15">=</operator> <name pos:start="99:17" pos:end="99:32">vretr_start_line</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:45"><expr pos:start="101:5" pos:end="101:44"><name pos:start="101:5" pos:end="101:11"><name pos:start="101:5" pos:end="101:5">r</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:11">vend</name></name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:23"><name pos:start="101:15" pos:end="101:15">r</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:23">vstart</name></name> <operator pos:start="101:25" pos:end="101:25">+</operator> <name pos:start="101:27" pos:end="101:40">vretr_end_line</name> <operator pos:start="101:42" pos:end="101:42">+</operator> <literal type="number" pos:start="101:44" pos:end="101:44">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:52"><expr pos:start="105:5" pos:end="105:51"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:5">r</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:13">hstart</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:32">hretr_start_char</name> <operator pos:start="105:34" pos:end="105:34">+</operator> <name pos:start="105:36" pos:end="105:51">hretr_skew_chars</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:11"><name pos:start="107:5" pos:end="107:5">r</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:11">hend</name></name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:23"><name pos:start="107:15" pos:end="107:15">r</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:23">hstart</name></name> <operator pos:start="107:25" pos:end="107:25">+</operator> <name pos:start="107:27" pos:end="107:40">hretr_end_char</name> <operator pos:start="107:42" pos:end="107:42">+</operator> <literal type="number" pos:start="107:44" pos:end="107:44">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="180:0"><expr pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:13"><name pos:start="109:5" pos:end="109:5">r</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:13">htotal</name></name> <operator pos:start="109:15" pos:end="109:15">=</operator> <name pos:start="109:17" pos:end="109:28">htotal_chars</name></expr>;</expr_stmt>



<cpp:if pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:5"><literal type="number" pos:start="113:5" pos:end="113:5">0</literal></expr></cpp:if>

    div2 = (s-&gt;cr[VGA_CRTC_MODE] &gt;&gt; 2) &amp; 1;

    sldiv2 = (s-&gt;cr[VGA_CRTC_MODE] &gt;&gt; 3) &amp; 1;

    printf (

        "hz=%f\n"

        "htotal = %d\n"

        "hretr_start = %d\n"

        "hretr_skew = %d\n"

        "hretr_end = %d\n"

        "vtotal = %d\n"

        "vretr_start = %d\n"

        "vretr_end = %d\n"

        "div2 = %d sldiv2 = %d\n"

        "clocking_mode = %d\n"

        "clock_sel = %d %d\n"

        "dots = %d\n"

        "ticks/char = %" PRId64 "\n"

        "\n",

        (double) NANOSECONDS_PER_SECOND / (r-&gt;ticks_per_char * r-&gt;total_chars),

        htotal_chars,

        hretr_start_char,

        hretr_skew_chars,

        hretr_end_char,

        vtotal_lines,

        vretr_start_line,

        vretr_end_line,

        div2, sldiv2,

        clocking_mode,

        clock_sel,

        clk_hz[clock_sel],

        dots,

        r-&gt;ticks_per_char

        );

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
