<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22996.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">qemu_opt_foreach</name><parameter_list pos:start="1:21" pos:end="3:42">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:29">QemuOpts</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">opts</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:59"><decl pos:start="1:38" pos:end="1:59"><type pos:start="1:38" pos:end="1:59"><name pos:start="1:38" pos:end="1:54">qemu_opt_loopfunc</name></type> <name pos:start="1:56" pos:end="1:59">func</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:65">void</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:73">opaque</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:41"><decl pos:start="3:22" pos:end="3:41"><type pos:start="3:22" pos:end="3:41"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:41">abort_on_failure</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:14">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QemuOpt</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">opt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:17">TAILQ_FOREACH</name><argument_list pos:start="13:18" pos:end="13:41">(<argument pos:start="13:19" pos:end="13:21">opt</argument>, <argument pos:start="13:24" pos:end="13:34">&amp;opts-&gt;head</argument>, <argument pos:start="13:37" pos:end="13:40">next</argument>)</argument_list></macro> <block pos:start="13:43" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:18">

        <expr_stmt pos:start="15:9" pos:end="15:47"><expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:10">rc</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:46"><name pos:start="15:14" pos:end="15:17">func</name><argument_list pos:start="15:18" pos:end="15:46">(<argument pos:start="15:19" pos:end="15:27"><expr pos:start="15:19" pos:end="15:27"><name pos:start="15:19" pos:end="15:27"><name pos:start="15:19" pos:end="15:21">opt</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:27">name</name></name></expr></argument>, <argument pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:37"><name pos:start="15:30" pos:end="15:37"><name pos:start="15:30" pos:end="15:32">opt</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:37">str</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:45"><expr pos:start="15:40" pos:end="15:45"><name pos:start="15:40" pos:end="15:45">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:18"><if pos:start="17:9" pos:end="19:18">if <condition pos:start="17:12" pos:end="17:42">(<expr pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:28">abort_on_failure</name>  <operator pos:start="17:31" pos:end="17:32">&amp;&amp;</operator>  <name pos:start="17:35" pos:end="17:36">rc</name> <operator pos:start="17:38" pos:end="17:39">!=</operator> <literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:18"><block_content pos:start="19:13" pos:end="19:18">

            <break pos:start="19:13" pos:end="19:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="23:5" pos:end="23:14">return <expr pos:start="23:12" pos:end="23:13"><name pos:start="23:12" pos:end="23:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
