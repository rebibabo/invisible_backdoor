<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/324.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">usb_host_realize</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:38">USBDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">udev</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:51">Error</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:30">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">USBHostDevice</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:38">USB_HOST_DEVICE</name><argument_list pos:start="5:39" pos:end="5:44">(<argument pos:start="5:40" pos:end="5:43"><expr pos:start="5:40" pos:end="5:43"><name pos:start="5:40" pos:end="5:43">udev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">match</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:26">vendor_id</name></name> <operator pos:start="9:28" pos:end="9:28">&gt;</operator> <literal type="number" pos:start="9:30" pos:end="9:35">0xffff</literal></expr>)</condition> <block pos:start="9:38" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:50"><expr pos:start="11:9" pos:end="11:49"><call pos:start="11:9" pos:end="11:49"><name pos:start="11:9" pos:end="11:18">error_setg</name><argument_list pos:start="11:19" pos:end="11:49">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">errp</name></expr></argument>, <argument pos:start="11:26" pos:end="11:48"><expr pos:start="11:26" pos:end="11:48"><literal type="string" pos:start="11:26" pos:end="11:48">"vendorid out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:37">(<expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">match</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:27">product_id</name></name> <operator pos:start="17:29" pos:end="17:29">&gt;</operator> <literal type="number" pos:start="17:31" pos:end="17:36">0xffff</literal></expr>)</condition> <block pos:start="17:39" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:50">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:49"><expr pos:start="19:26" pos:end="19:49"><literal type="string" pos:start="19:26" pos:end="19:49">"productid out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:28">(<expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">match</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:21">addr</name></name> <operator pos:start="25:23" pos:end="25:23">&gt;</operator> <literal type="number" pos:start="25:25" pos:end="25:27">127</literal></expr>)</condition> <block pos:start="25:30" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="27:49">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:48"><expr pos:start="27:26" pos:end="27:48"><literal type="string" pos:start="27:26" pos:end="27:48">"hostaddr out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:12">loglevel</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:26">loglevel</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:8">udev</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:15">flags</name></name> <operator pos:start="37:17" pos:end="37:18">|=</operator> <operator pos:start="37:20" pos:end="37:20">(</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal> <operator pos:start="37:23" pos:end="37:24">&lt;&lt;</operator> <name pos:start="37:26" pos:end="37:45">USB_DEV_FLAG_IS_HOST</name><operator pos:start="37:46" pos:end="37:46">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:8">udev</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:21">auto_attach</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><call pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:15">QTAILQ_INIT</name><argument_list pos:start="41:16" pos:end="41:29">(<argument pos:start="41:17" pos:end="41:28"><expr pos:start="41:17" pos:end="41:28"><operator pos:start="41:17" pos:end="41:17">&amp;</operator><name pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:28">requests</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><call pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:15">QTAILQ_INIT</name><argument_list pos:start="43:16" pos:end="43:29">(<argument pos:start="43:17" pos:end="43:28"><expr pos:start="43:17" pos:end="43:28"><operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:28"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:28">isorings</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:11">exit</name><operator pos:start="47:12" pos:end="47:12">.</operator><name pos:start="47:13" pos:end="47:18">notify</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:43">usb_host_exit_notifier</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><call pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:26">qemu_add_exit_notifier</name><argument_list pos:start="49:27" pos:end="49:36">(<argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:35"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:35">exit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:43"><expr pos:start="53:5" pos:end="53:42"><call pos:start="53:5" pos:end="53:42"><name pos:start="53:5" pos:end="53:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="53:23" pos:end="53:42">(<argument pos:start="53:24" pos:end="53:32"><expr pos:start="53:24" pos:end="53:32"><operator pos:start="53:24" pos:end="53:24">&amp;</operator><name pos:start="53:25" pos:end="53:32">hostdevs</name></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">s</name></expr></argument>, <argument pos:start="53:38" pos:end="53:41"><expr pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:41">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><call pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:23">usb_host_auto_check</name><argument_list pos:start="55:24" pos:end="55:29">(<argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
