<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8818.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">avisynth_read_packet_video</name><parameter_list pos:start="1:38" pos:end="1:85">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">AVPacket</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pkt</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:84"><decl pos:start="1:74" pos:end="1:84"><type pos:start="1:74" pos:end="1:84"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:84">discard</name></decl></parameter>)</parameter_list> <block pos:start="1:87" pos:end="147:13">{<block_content pos:start="3:5" pos:end="147:13">

    <decl_stmt pos:start="3:5" pos:end="3:40"><decl pos:start="3:5" pos:end="3:39"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">AviSynthContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:24">avs</name> <init pos:start="3:26" pos:end="3:39">= <expr pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:28">s</name><operator pos:start="3:29" pos:end="3:30">-&gt;</operator><name pos:start="3:31" pos:end="3:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVS_VideoFrame</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">dst_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">unsigned</name> <name pos:start="9:20" pos:end="9:23">char</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:30">src_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">i</name></decl>, <decl pos:start="11:15" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:19">plane</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:28">rowsize</name></decl>, <decl pos:start="11:31" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:41">planeheight</name></decl>, <decl pos:start="11:44" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:44" pos:end="11:48">pitch</name></decl>, <decl pos:start="11:51" pos:end="11:54"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:51" pos:end="11:54">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:21">error</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:27"><if pos:start="17:5" pos:end="19:27">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:11">avs</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:23">curr_frame</name></name> <operator pos:start="17:25" pos:end="17:26">&gt;=</operator> <name pos:start="17:28" pos:end="17:46"><name pos:start="17:28" pos:end="17:30">avs</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:34">vi</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:46">num_frames</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:27"><block_content pos:start="19:9" pos:end="19:27">

        <return pos:start="19:9" pos:end="19:27">return <expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="23:5" pos:end="23:74">// This must happen even if the stream is discarded to prevent desync.</comment>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:5">n</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">avs</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">curr_frame</name></name><operator pos:start="25:24" pos:end="25:25">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">discard</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">pkt</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">pts</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:16">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:7">pkt</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">dts</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:16">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:7">pkt</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:17">duration</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:65">// Define the bpp values for the new AviSynth 2.6 colorspaces</comment>

    <if_stmt pos:start="43:5" pos:end="147:13"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:29">(<expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:19">avs_is_yv24</name><argument_list pos:start="43:20" pos:end="43:28">(<argument pos:start="43:21" pos:end="43:27"><expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:23">avs</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:27">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:31" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:18">

        <expr_stmt pos:start="45:9" pos:end="45:18"><expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:12">bits</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <literal type="number" pos:start="45:16" pos:end="45:17">24</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="51:5">else if <condition pos:start="47:15" pos:end="47:36">(<expr pos:start="47:16" pos:end="47:35"><call pos:start="47:16" pos:end="47:35"><name pos:start="47:16" pos:end="47:26">avs_is_yv16</name><argument_list pos:start="47:27" pos:end="47:35">(<argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:30">avs</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:34">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:38" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:18">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:12">bits</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <literal type="number" pos:start="49:16" pos:end="49:17">16</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="55:5">else if <condition pos:start="51:15" pos:end="51:37">(<expr pos:start="51:16" pos:end="51:36"><call pos:start="51:16" pos:end="51:36"><name pos:start="51:16" pos:end="51:27">avs_is_yv411</name><argument_list pos:start="51:28" pos:end="51:36">(<argument pos:start="51:29" pos:end="51:35"><expr pos:start="51:29" pos:end="51:35"><name pos:start="51:29" pos:end="51:35"><name pos:start="51:29" pos:end="51:31">avs</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:35">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:39" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:18">

        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:12">bits</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:17">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="147:13">else if <condition pos:start="55:15" pos:end="55:34">(<expr pos:start="55:16" pos:end="55:33"><call pos:start="55:16" pos:end="55:33"><name pos:start="55:16" pos:end="55:24">avs_is_y8</name><argument_list pos:start="55:25" pos:end="55:33">(<argument pos:start="55:26" pos:end="55:32"><expr pos:start="55:26" pos:end="55:32"><name pos:start="55:26" pos:end="55:32"><name pos:start="55:26" pos:end="55:28">avs</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:32">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:36" pos:end="147:13">{<block_content pos:start="57:9" pos:end="147:13">

        <expr_stmt pos:start="57:9" pos:end="57:17"><expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:12">bits</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">8</literal></expr>;</expr_stmt>


        <expr_stmt pos:start="60:9" pos:end="60:43"><expr pos:start="60:9" pos:end="60:42"><name pos:start="60:9" pos:end="60:12">bits</name> <operator pos:start="60:14" pos:end="60:14">=</operator> <call pos:start="60:16" pos:end="60:42"><name pos:start="60:16" pos:end="60:33">avs_bits_per_pixel</name><argument_list pos:start="60:34" pos:end="60:42">(<argument pos:start="60:35" pos:end="60:41"><expr pos:start="60:35" pos:end="60:41"><name pos:start="60:35" pos:end="60:41"><name pos:start="60:35" pos:end="60:37">avs</name><operator pos:start="60:38" pos:end="60:39">-&gt;</operator><name pos:start="60:40" pos:end="60:41">vi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <comment type="line" pos:start="65:5" pos:end="65:82">// Without cast to int64_t, calculation overflows at about 9k x 9k resolution.</comment>

    <expr_stmt pos:start="67:5" pos:end="67:82"><expr pos:start="67:5" pos:end="67:81"><name pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:7">pkt</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:13">size</name></name> <operator pos:start="67:15" pos:end="67:15">=</operator> <operator pos:start="67:17" pos:end="67:17">(</operator><operator pos:start="67:18" pos:end="67:18">(</operator><operator pos:start="67:19" pos:end="67:19">(</operator><name pos:start="67:20" pos:end="67:26">int64_t</name><operator pos:start="67:27" pos:end="67:27">)</operator><name pos:start="67:28" pos:end="67:41"><name pos:start="67:28" pos:end="67:30">avs</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:34">vi</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:41">width</name></name> <operator pos:start="67:43" pos:end="67:43">*</operator> <operator pos:start="67:45" pos:end="67:45">(</operator><name pos:start="67:46" pos:end="67:52">int64_t</name><operator pos:start="67:53" pos:end="67:53">)</operator><name pos:start="67:54" pos:end="67:68"><name pos:start="67:54" pos:end="67:56">avs</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:60">vi</name><operator pos:start="67:61" pos:end="67:62">-&gt;</operator><name pos:start="67:63" pos:end="67:68">height</name></name><operator pos:start="67:69" pos:end="67:69">)</operator> <operator pos:start="67:71" pos:end="67:71">*</operator> <name pos:start="67:73" pos:end="67:76">bits</name><operator pos:start="67:77" pos:end="67:77">)</operator> <operator pos:start="67:79" pos:end="67:79">/</operator> <literal type="number" pos:start="67:81" pos:end="67:81">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="72:37"><if pos:start="69:5" pos:end="72:37">if <condition pos:start="69:8" pos:end="69:19">(<expr pos:start="69:9" pos:end="69:18"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:18"><name pos:start="69:10" pos:end="69:12">pkt</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:18">size</name></name></expr>)</condition><block type="pseudo" pos:start="72:5" pos:end="72:37"><block_content pos:start="72:5" pos:end="72:37">


    <expr_stmt pos:start="72:5" pos:end="72:37"><expr pos:start="72:5" pos:end="72:36"><name pos:start="72:5" pos:end="72:13"><name pos:start="72:5" pos:end="72:7">pkt</name><operator pos:start="72:8" pos:end="72:9">-&gt;</operator><name pos:start="72:10" pos:end="72:13">data</name></name> <operator pos:start="72:15" pos:end="72:15">=</operator> <call pos:start="72:17" pos:end="72:36"><name pos:start="72:17" pos:end="72:25">av_malloc</name><argument_list pos:start="72:26" pos:end="72:36">(<argument pos:start="72:27" pos:end="72:35"><expr pos:start="72:27" pos:end="72:35"><name pos:start="72:27" pos:end="72:35"><name pos:start="72:27" pos:end="72:29">pkt</name><operator pos:start="72:30" pos:end="72:31">-&gt;</operator><name pos:start="72:32" pos:end="72:35">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="74:5" pos:end="79:53"><if pos:start="74:5" pos:end="79:53">if <condition pos:start="74:8" pos:end="74:19">(<expr pos:start="74:9" pos:end="74:18"><operator pos:start="74:9" pos:end="74:9">!</operator><name pos:start="74:10" pos:end="74:18"><name pos:start="74:10" pos:end="74:12">pkt</name><operator pos:start="74:13" pos:end="74:14">-&gt;</operator><name pos:start="74:15" pos:end="74:18">data</name></name></expr>)</condition><block type="pseudo" pos:start="79:5" pos:end="79:53"><block_content pos:start="79:5" pos:end="79:53">




    <expr_stmt pos:start="79:5" pos:end="79:53"><expr pos:start="79:5" pos:end="79:52"><name pos:start="79:5" pos:end="79:9">frame</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <call pos:start="79:13" pos:end="79:52"><name pos:start="79:13" pos:end="79:38"><name pos:start="79:13" pos:end="79:23">avs_library</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:38">avs_get_frame</name></name><argument_list pos:start="79:39" pos:end="79:52">(<argument pos:start="79:40" pos:end="79:48"><expr pos:start="79:40" pos:end="79:48"><name pos:start="79:40" pos:end="79:48"><name pos:start="79:40" pos:end="79:42">avs</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:48">clip</name></name></expr></argument>, <argument pos:start="79:51" pos:end="79:51"><expr pos:start="79:51" pos:end="79:51"><name pos:start="79:51" pos:end="79:51">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:55"><expr pos:start="81:5" pos:end="81:54"><name pos:start="81:5" pos:end="81:9">error</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="81:54"><name pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:23">avs_library</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:43">avs_clip_get_error</name></name><argument_list pos:start="81:44" pos:end="81:54">(<argument pos:start="81:45" pos:end="81:53"><expr pos:start="81:45" pos:end="81:53"><name pos:start="81:45" pos:end="81:53"><name pos:start="81:45" pos:end="81:47">avs</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:53">clip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="147:13"><if pos:start="83:5" pos:end="147:13">if <condition pos:start="83:8" pos:end="83:14">(<expr pos:start="83:9" pos:end="83:13"><name pos:start="83:9" pos:end="83:13">error</name></expr>)</condition> <block pos:start="83:16" pos:end="147:13">{<block_content pos:start="85:9" pos:end="147:13">

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><call pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:46">(<argument pos:start="85:16" pos:end="85:16"><expr pos:start="85:16" pos:end="85:16"><name pos:start="85:16" pos:end="85:16">s</name></expr></argument>, <argument pos:start="85:19" pos:end="85:30"><expr pos:start="85:19" pos:end="85:30"><name pos:start="85:19" pos:end="85:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:33" pos:end="85:38"><expr pos:start="85:33" pos:end="85:38"><literal type="string" pos:start="85:33" pos:end="85:38">"%s\n"</literal></expr></argument>, <argument pos:start="85:41" pos:end="85:45"><expr pos:start="85:41" pos:end="85:45"><name pos:start="85:41" pos:end="85:45">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <expr_stmt pos:start="93:5" pos:end="93:22"><expr pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:9">dst_p</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:15">pkt</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:21">data</name></name></expr>;</expr_stmt>

    <for pos:start="95:5" pos:end="147:13">for <control pos:start="95:9" pos:end="95:39">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:34"><expr pos:start="95:17" pos:end="95:33"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:33"><name pos:start="95:21" pos:end="95:23">avs</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:33">n_planes</name></name></expr>;</condition> <incr pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:36">i</name><operator pos:start="95:37" pos:end="95:38">++</operator></expr></incr>)</control> <block pos:start="95:41" pos:end="147:13">{<block_content pos:start="97:9" pos:end="147:13">

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:13">plane</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <name pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:19">avs</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:27">planes</name><index pos:start="97:28" pos:end="97:30">[<expr pos:start="97:29" pos:end="97:29"><name pos:start="97:29" pos:end="97:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:49"><expr pos:start="99:9" pos:end="99:48"><name pos:start="99:9" pos:end="99:13">src_p</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <call pos:start="99:17" pos:end="99:48"><name pos:start="99:17" pos:end="99:34">avs_get_read_ptr_p</name><argument_list pos:start="99:35" pos:end="99:48">(<argument pos:start="99:36" pos:end="99:40"><expr pos:start="99:36" pos:end="99:40"><name pos:start="99:36" pos:end="99:40">frame</name></expr></argument>, <argument pos:start="99:43" pos:end="99:47"><expr pos:start="99:43" pos:end="99:47"><name pos:start="99:43" pos:end="99:47">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:51"><expr pos:start="101:9" pos:end="101:50"><name pos:start="101:9" pos:end="101:15">rowsize</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:50"><name pos:start="101:19" pos:end="101:36">avs_get_row_size_p</name><argument_list pos:start="101:37" pos:end="101:50">(<argument pos:start="101:38" pos:end="101:42"><expr pos:start="101:38" pos:end="101:42"><name pos:start="101:38" pos:end="101:42">frame</name></expr></argument>, <argument pos:start="101:45" pos:end="101:49"><expr pos:start="101:45" pos:end="101:49"><name pos:start="101:45" pos:end="101:49">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:53"><expr pos:start="103:9" pos:end="103:52"><name pos:start="103:9" pos:end="103:19">planeheight</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:52"><name pos:start="103:23" pos:end="103:38">avs_get_height_p</name><argument_list pos:start="103:39" pos:end="103:52">(<argument pos:start="103:40" pos:end="103:44"><expr pos:start="103:40" pos:end="103:44"><name pos:start="103:40" pos:end="103:44">frame</name></expr></argument>, <argument pos:start="103:47" pos:end="103:51"><expr pos:start="103:47" pos:end="103:51"><name pos:start="103:47" pos:end="103:51">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:13">pitch</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <call pos:start="105:17" pos:end="105:45"><name pos:start="105:17" pos:end="105:31">avs_get_pitch_p</name><argument_list pos:start="105:32" pos:end="105:45">(<argument pos:start="105:33" pos:end="105:37"><expr pos:start="105:33" pos:end="105:37"><name pos:start="105:33" pos:end="105:37">frame</name></expr></argument>, <argument pos:start="105:40" pos:end="105:44"><expr pos:start="105:40" pos:end="105:44"><name pos:start="105:40" pos:end="105:44">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="109:9" pos:end="109:26">// Flip RGB video.</comment>

        <if_stmt pos:start="111:9" pos:end="147:13"><if pos:start="111:9" pos:end="147:13">if <condition pos:start="111:12" pos:end="111:57">(<expr pos:start="111:13" pos:end="111:56"><call pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:24">avs_is_rgb24</name><argument_list pos:start="111:25" pos:end="111:33">(<argument pos:start="111:26" pos:end="111:32"><expr pos:start="111:26" pos:end="111:32"><name pos:start="111:26" pos:end="111:32"><name pos:start="111:26" pos:end="111:28">avs</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:32">vi</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:35" pos:end="111:36">||</operator> <call pos:start="111:38" pos:end="111:56"><name pos:start="111:38" pos:end="111:47">avs_is_rgb</name><argument_list pos:start="111:48" pos:end="111:56">(<argument pos:start="111:49" pos:end="111:55"><expr pos:start="111:49" pos:end="111:55"><name pos:start="111:49" pos:end="111:55"><name pos:start="111:49" pos:end="111:51">avs</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:55">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:59" pos:end="147:13">{<block_content pos:start="113:13" pos:end="147:13">

            <expr_stmt pos:start="113:13" pos:end="113:54"><expr pos:start="113:13" pos:end="113:53"><name pos:start="113:13" pos:end="113:17">src_p</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:25">src_p</name> <operator pos:start="113:27" pos:end="113:27">+</operator> <operator pos:start="113:29" pos:end="113:29">(</operator><name pos:start="113:30" pos:end="113:40">planeheight</name> <operator pos:start="113:42" pos:end="113:42">-</operator> <literal type="number" pos:start="113:44" pos:end="113:44">1</literal><operator pos:start="113:45" pos:end="113:45">)</operator> <operator pos:start="113:47" pos:end="113:47">*</operator> <name pos:start="113:49" pos:end="113:53">pitch</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:27"><expr pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:17">pitch</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <operator pos:start="115:21" pos:end="115:21">-</operator><name pos:start="115:22" pos:end="115:26">pitch</name></expr>;</expr_stmt>
























        <expr_stmt pos:start="140:9" pos:end="140:39"><expr pos:start="140:9" pos:end="140:38"><name pos:start="140:9" pos:end="140:13">dst_p</name> <operator pos:start="140:15" pos:end="140:16">+=</operator> <name pos:start="140:18" pos:end="140:24">rowsize</name> <operator pos:start="140:26" pos:end="140:26">*</operator> <name pos:start="140:28" pos:end="140:38">planeheight</name></expr>;</expr_stmt>




    <expr_stmt pos:start="145:5" pos:end="145:48"><expr pos:start="145:5" pos:end="145:47"><call pos:start="145:5" pos:end="145:47"><name pos:start="145:5" pos:end="145:40"><name pos:start="145:5" pos:end="145:15">avs_library</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:40">avs_release_video_frame</name></name><argument_list pos:start="145:41" pos:end="145:47">(<argument pos:start="145:42" pos:end="145:46"><expr pos:start="145:42" pos:end="145:46"><name pos:start="145:42" pos:end="145:46">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
