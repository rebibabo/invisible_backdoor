<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1371.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">checkasm_check_blend</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:20">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">top1</name> <init pos:start="5:19" pos:end="5:39">= <expr pos:start="5:21" pos:end="5:39"><call pos:start="5:21" pos:end="5:39"><name pos:start="5:21" pos:end="5:29">av_malloc</name><argument_list pos:start="5:30" pos:end="5:39">(<argument pos:start="5:31" pos:end="5:38"><expr pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:38">BUF_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">top2</name> <init pos:start="7:19" pos:end="7:39">= <expr pos:start="7:21" pos:end="7:39"><call pos:start="7:21" pos:end="7:39"><name pos:start="7:21" pos:end="7:29">av_malloc</name><argument_list pos:start="7:30" pos:end="7:39">(<argument pos:start="7:31" pos:end="7:38"><expr pos:start="7:31" pos:end="7:38"><name pos:start="7:31" pos:end="7:38">BUF_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">bot1</name> <init pos:start="9:19" pos:end="9:39">= <expr pos:start="9:21" pos:end="9:39"><call pos:start="9:21" pos:end="9:39"><name pos:start="9:21" pos:end="9:29">av_malloc</name><argument_list pos:start="9:30" pos:end="9:39">(<argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:38">BUF_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">bot2</name> <init pos:start="11:19" pos:end="11:39">= <expr pos:start="11:21" pos:end="11:39"><call pos:start="11:21" pos:end="11:39"><name pos:start="11:21" pos:end="11:29">av_malloc</name><argument_list pos:start="11:30" pos:end="11:39">(<argument pos:start="11:31" pos:end="11:38"><expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:38">BUF_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">dst1</name> <init pos:start="13:19" pos:end="13:39">= <expr pos:start="13:21" pos:end="13:39"><call pos:start="13:21" pos:end="13:39"><name pos:start="13:21" pos:end="13:29">av_malloc</name><argument_list pos:start="13:30" pos:end="13:39">(<argument pos:start="13:31" pos:end="13:38"><expr pos:start="13:31" pos:end="13:38"><name pos:start="13:31" pos:end="13:38">BUF_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">dst2</name> <init pos:start="15:19" pos:end="15:39">= <expr pos:start="15:21" pos:end="15:39"><call pos:start="15:21" pos:end="15:39"><name pos:start="15:21" pos:end="15:29">av_malloc</name><argument_list pos:start="15:30" pos:end="15:39">(<argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38">BUF_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="34:0"><decl pos:start="17:5" pos:end="21:5"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">FilterParams</name></type> <name pos:start="17:18" pos:end="17:22">param</name> <init pos:start="17:24" pos:end="21:5">= <expr pos:start="17:26" pos:end="21:5"><block pos:start="17:26" pos:end="21:5">{

        <expr pos:start="19:9" pos:end="19:22"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:16">opacity</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:22">1.0</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="25:1" pos:end="33:27">#<cpp:directive pos:start="25:2" pos:end="25:7">define</cpp:directive> <cpp:macro pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:24">check_and_report</name><parameter_list pos:start="25:25" pos:end="25:35">(<parameter pos:start="25:26" pos:end="25:29"><type pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">name</name></type></parameter>, <parameter pos:start="25:32" pos:end="25:34"><type pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:34">val</name></type></parameter>)</parameter_list></cpp:macro>               \

    <cpp:value pos:start="27:5" pos:end="33:27">param.mode = val;                             \

    ff_blend_init(&amp;param, 0);                     \

    if (check_func(param.blend, #name))           \

        check_blend_func();</cpp:value></cpp:define>



    <macro pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:20">check_and_report</name><argument_list pos:start="37:21" pos:end="37:46">(<argument pos:start="37:22" pos:end="37:29">addition</argument>, <argument pos:start="37:32" pos:end="37:45">BLEND_ADDITION</argument>)</argument_list></macro>

    <macro pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:20">check_and_report</name><argument_list pos:start="39:21" pos:end="39:52">(<argument pos:start="39:22" pos:end="39:32">addition128</argument>, <argument pos:start="39:35" pos:end="39:51">BLEND_ADDITION128</argument>)</argument_list></macro>

    <macro pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:20">check_and_report</name><argument_list pos:start="41:21" pos:end="41:36">(<argument pos:start="41:22" pos:end="41:24">and</argument>, <argument pos:start="41:27" pos:end="41:35">BLEND_AND</argument>)</argument_list></macro>

    <macro pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:20">check_and_report</name><argument_list pos:start="43:21" pos:end="43:44">(<argument pos:start="43:22" pos:end="43:28">average</argument>, <argument pos:start="43:31" pos:end="43:43">BLEND_AVERAGE</argument>)</argument_list></macro>

    <macro pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:20">check_and_report</name><argument_list pos:start="45:21" pos:end="45:42">(<argument pos:start="45:22" pos:end="45:27">darken</argument>, <argument pos:start="45:30" pos:end="45:41">BLEND_DARKEN</argument>)</argument_list></macro>

    <macro pos:start="47:5" pos:end="47:56"><name pos:start="47:5" pos:end="47:20">check_and_report</name><argument_list pos:start="47:21" pos:end="47:56">(<argument pos:start="47:22" pos:end="47:34">difference128</argument>, <argument pos:start="47:37" pos:end="47:55">BLEND_DIFFERENCE128</argument>)</argument_list></macro>

    <macro pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:20">check_and_report</name><argument_list pos:start="49:21" pos:end="49:44">(<argument pos:start="49:22" pos:end="49:28">hardmix</argument>, <argument pos:start="49:31" pos:end="49:43">BLEND_HARDMIX</argument>)</argument_list></macro>

    <macro pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:20">check_and_report</name><argument_list pos:start="51:21" pos:end="51:44">(<argument pos:start="51:22" pos:end="51:28">lighten</argument>, <argument pos:start="51:31" pos:end="51:43">BLEND_LIGHTEN</argument>)</argument_list></macro>

    <macro pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:20">check_and_report</name><argument_list pos:start="53:21" pos:end="53:46">(<argument pos:start="53:22" pos:end="53:29">multiply</argument>, <argument pos:start="53:32" pos:end="53:45">BLEND_MULTIPLY</argument>)</argument_list></macro>

    <macro pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:20">check_and_report</name><argument_list pos:start="55:21" pos:end="55:34">(<argument pos:start="55:22" pos:end="55:23">or</argument>, <argument pos:start="55:26" pos:end="55:33">BLEND_OR</argument>)</argument_list></macro>

    <macro pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:20">check_and_report</name><argument_list pos:start="57:21" pos:end="57:44">(<argument pos:start="57:22" pos:end="57:28">phoenix</argument>, <argument pos:start="57:31" pos:end="57:43">BLEND_PHOENIX</argument>)</argument_list></macro>

    <macro pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:20">check_and_report</name><argument_list pos:start="59:21" pos:end="59:42">(<argument pos:start="59:22" pos:end="59:27">screen</argument>, <argument pos:start="59:30" pos:end="59:41">BLEND_SCREEN</argument>)</argument_list></macro>

    <macro pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:20">check_and_report</name><argument_list pos:start="61:21" pos:end="61:46">(<argument pos:start="61:22" pos:end="61:29">subtract</argument>, <argument pos:start="61:32" pos:end="61:45">BLEND_SUBTRACT</argument>)</argument_list></macro>

    <macro pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:20">check_and_report</name><argument_list pos:start="63:21" pos:end="63:36">(<argument pos:start="63:22" pos:end="63:24">xor</argument>, <argument pos:start="63:27" pos:end="63:35">BLEND_XOR</argument>)</argument_list></macro>

    <macro pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:20">check_and_report</name><argument_list pos:start="65:21" pos:end="65:50">(<argument pos:start="65:22" pos:end="65:31">difference</argument>, <argument pos:start="65:34" pos:end="65:49">BLEND_DIFFERENCE</argument>)</argument_list></macro>

    <macro pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:20">check_and_report</name><argument_list pos:start="67:21" pos:end="67:48">(<argument pos:start="67:22" pos:end="67:30">extremity</argument>, <argument pos:start="67:33" pos:end="67:47">BLEND_EXTREMITY</argument>)</argument_list></macro>

    <macro pos:start="69:5" pos:end="69:46"><name pos:start="69:5" pos:end="69:20">check_and_report</name><argument_list pos:start="69:21" pos:end="69:46">(<argument pos:start="69:22" pos:end="69:29">negation</argument>, <argument pos:start="69:32" pos:end="69:45">BLEND_NEGATION</argument>)</argument_list></macro>



    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><call pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:10">report</name><argument_list pos:start="73:11" pos:end="73:18">(<argument pos:start="73:12" pos:end="73:17"><expr pos:start="73:12" pos:end="73:17"><literal type="string" pos:start="73:12" pos:end="73:17">"8bit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:20"><expr pos:start="77:5" pos:end="77:19"><call pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:12">av_freep</name><argument_list pos:start="77:13" pos:end="77:19">(<argument pos:start="77:14" pos:end="77:18"><expr pos:start="77:14" pos:end="77:18"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:18">top1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:20"><expr pos:start="79:5" pos:end="79:19"><call pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:12">av_freep</name><argument_list pos:start="79:13" pos:end="79:19">(<argument pos:start="79:14" pos:end="79:18"><expr pos:start="79:14" pos:end="79:18"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:18">top2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:20"><expr pos:start="81:5" pos:end="81:19"><call pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:12">av_freep</name><argument_list pos:start="81:13" pos:end="81:19">(<argument pos:start="81:14" pos:end="81:18"><expr pos:start="81:14" pos:end="81:18"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:18">bot1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:20"><expr pos:start="83:5" pos:end="83:19"><call pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:12">av_freep</name><argument_list pos:start="83:13" pos:end="83:19">(<argument pos:start="83:14" pos:end="83:18"><expr pos:start="83:14" pos:end="83:18"><operator pos:start="83:14" pos:end="83:14">&amp;</operator><name pos:start="83:15" pos:end="83:18">bot2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:20"><expr pos:start="85:5" pos:end="85:19"><call pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:12">av_freep</name><argument_list pos:start="85:13" pos:end="85:19">(<argument pos:start="85:14" pos:end="85:18"><expr pos:start="85:14" pos:end="85:18"><operator pos:start="85:14" pos:end="85:14">&amp;</operator><name pos:start="85:15" pos:end="85:18">dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:20"><expr pos:start="87:5" pos:end="87:19"><call pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:12">av_freep</name><argument_list pos:start="87:13" pos:end="87:19">(<argument pos:start="87:14" pos:end="87:18"><expr pos:start="87:14" pos:end="87:18"><operator pos:start="87:14" pos:end="87:14">&amp;</operator><name pos:start="87:15" pos:end="87:18">dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
