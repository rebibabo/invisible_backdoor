<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17347.c" pos:tabs="8"> <macro pos:start="1:2" pos:end="3:89"><name pos:start="1:2" pos:end="1:21">roundAndPackFloat128</name><argument_list pos:start="1:22" pos:end="3:89">(

     <argument pos:start="3:6" pos:end="3:15">flag zSign</argument>, <argument pos:start="3:18" pos:end="3:27">int32 zExp</argument>, <argument pos:start="3:30" pos:end="3:43">uint64_t zSig0</argument>, <argument pos:start="3:46" pos:end="3:59">uint64_t zSig1</argument>, <argument pos:start="3:62" pos:end="3:88">uint64_t zSig2 STATUS_PARAM</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="177:1">{<block_content pos:start="7:5" pos:end="173:53">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">int8</name></type> <name pos:start="7:10" pos:end="7:21">roundingMode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">flag</name></type> <name pos:start="9:10" pos:end="9:25">roundNearestEven</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:28" pos:end="9:36">increment</name></decl>, <decl pos:start="9:39" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:39" pos:end="9:44">isTiny</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:16">roundingMode</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:46"><name pos:start="13:20" pos:end="13:25">STATUS</name><argument_list pos:start="13:26" pos:end="13:46">(<argument pos:start="13:27" pos:end="13:45"><expr pos:start="13:27" pos:end="13:45"><name pos:start="13:27" pos:end="13:45">float_rounding_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:68"><expr pos:start="15:5" pos:end="15:67"><name pos:start="15:5" pos:end="15:20">roundNearestEven</name> <operator pos:start="15:22" pos:end="15:22">=</operator> <operator pos:start="15:24" pos:end="15:24">(</operator> <name pos:start="15:26" pos:end="15:37">roundingMode</name> <operator pos:start="15:39" pos:end="15:40">==</operator> <name pos:start="15:42" pos:end="15:65">float_round_nearest_even</name> <operator pos:start="15:67" pos:end="15:67">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:13">increment</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <operator pos:start="17:17" pos:end="17:17">(</operator> <operator pos:start="17:19" pos:end="17:19">(</operator><name pos:start="17:20" pos:end="17:26">int64_t</name><operator pos:start="17:27" pos:end="17:27">)</operator> <name pos:start="17:29" pos:end="17:33">zSig2</name> <operator pos:start="17:35" pos:end="17:35">&lt;</operator> <literal type="number" pos:start="17:37" pos:end="17:37">0</literal> <operator pos:start="17:39" pos:end="17:39">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="43:5"><if pos:start="19:5" pos:end="43:5">if <condition pos:start="19:8" pos:end="19:29">( <expr pos:start="19:10" pos:end="19:27"><operator pos:start="19:10" pos:end="19:10">!</operator> <name pos:start="19:12" pos:end="19:27">roundNearestEven</name></expr> )</condition> <block pos:start="19:31" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:9">

        <if_stmt pos:start="21:9" pos:end="41:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:50">( <expr pos:start="21:14" pos:end="21:48"><name pos:start="21:14" pos:end="21:25">roundingMode</name> <operator pos:start="21:27" pos:end="21:28">==</operator> <name pos:start="21:30" pos:end="21:48">float_round_to_zero</name></expr> )</condition> <block pos:start="21:52" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:26">

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21">increment</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="27:9" pos:end="41:9">else <block pos:start="27:14" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:13">

            <if_stmt pos:start="29:13" pos:end="39:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:24">( <expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:22">zSign</name></expr> )</condition> <block pos:start="29:26" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:74">

                <expr_stmt pos:start="31:17" pos:end="31:74"><expr pos:start="31:17" pos:end="31:73"><name pos:start="31:17" pos:end="31:25">increment</name> <operator pos:start="31:27" pos:end="31:27">=</operator> <operator pos:start="31:29" pos:end="31:29">(</operator> <name pos:start="31:31" pos:end="31:42">roundingMode</name> <operator pos:start="31:44" pos:end="31:45">==</operator> <name pos:start="31:47" pos:end="31:62">float_round_down</name> <operator pos:start="31:64" pos:end="31:64">)</operator> <operator pos:start="31:66" pos:end="31:67">&amp;&amp;</operator> <name pos:start="31:69" pos:end="31:73">zSig2</name></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="35:13" pos:end="39:13">else <block pos:start="35:18" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:72">

                <expr_stmt pos:start="37:17" pos:end="37:72"><expr pos:start="37:17" pos:end="37:71"><name pos:start="37:17" pos:end="37:25">increment</name> <operator pos:start="37:27" pos:end="37:27">=</operator> <operator pos:start="37:29" pos:end="37:29">(</operator> <name pos:start="37:31" pos:end="37:42">roundingMode</name> <operator pos:start="37:44" pos:end="37:45">==</operator> <name pos:start="37:47" pos:end="37:60">float_round_up</name> <operator pos:start="37:62" pos:end="37:62">)</operator> <operator pos:start="37:64" pos:end="37:65">&amp;&amp;</operator> <name pos:start="37:67" pos:end="37:71">zSig2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="155:5"><if pos:start="45:5" pos:end="155:5">if <condition pos:start="45:8" pos:end="45:36">( <expr pos:start="45:10" pos:end="45:34"><literal type="number" pos:start="45:10" pos:end="45:15">0x7FFD</literal> <operator pos:start="45:17" pos:end="45:18">&lt;=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:28">uint32_t</name><operator pos:start="45:29" pos:end="45:29">)</operator> <name pos:start="45:31" pos:end="45:34">zExp</name></expr> )</condition> <block pos:start="45:38" pos:end="155:5">{<block_content pos:start="47:9" pos:end="153:9">

        <if_stmt pos:start="47:9" pos:end="97:9"><if pos:start="47:9" pos:end="97:9">if <condition pos:start="47:12" pos:end="67:12">(    <expr pos:start="47:17" pos:end="65:17"><operator pos:start="47:17" pos:end="47:17">(</operator> <literal type="number" pos:start="47:19" pos:end="47:24">0x7FFD</literal> <operator pos:start="47:26" pos:end="47:26">&lt;</operator> <name pos:start="47:28" pos:end="47:31">zExp</name> <operator pos:start="47:33" pos:end="47:33">)</operator>

             <operator pos:start="49:14" pos:end="49:15">||</operator> <operator pos:start="49:17" pos:end="49:17">(</operator>    <operator pos:start="49:22" pos:end="49:22">(</operator> <name pos:start="49:24" pos:end="49:27">zExp</name> <operator pos:start="49:29" pos:end="49:30">==</operator> <literal type="number" pos:start="49:32" pos:end="49:37">0x7FFD</literal> <operator pos:start="49:39" pos:end="49:39">)</operator>

                  <operator pos:start="51:19" pos:end="51:20">&amp;&amp;</operator> <call pos:start="51:22" pos:end="61:22"><name pos:start="51:22" pos:end="51:26">eq128</name><argument_list pos:start="51:27" pos:end="61:22">(

                         <argument pos:start="53:26" pos:end="53:52"><expr pos:start="53:26" pos:end="53:52"><call pos:start="53:26" pos:end="53:52"><name pos:start="53:26" pos:end="53:30">LIT64</name><argument_list pos:start="53:31" pos:end="53:52">( <argument pos:start="53:33" pos:end="53:50"><expr pos:start="53:33" pos:end="53:50"><literal type="number" pos:start="53:33" pos:end="53:50">0x0001FFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:52"><expr pos:start="55:26" pos:end="55:52"><call pos:start="55:26" pos:end="55:52"><name pos:start="55:26" pos:end="55:30">LIT64</name><argument_list pos:start="55:31" pos:end="55:52">( <argument pos:start="55:33" pos:end="55:50"><expr pos:start="55:33" pos:end="55:50"><literal type="number" pos:start="55:33" pos:end="55:50">0xFFFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr></argument>,

                         <argument pos:start="57:26" pos:end="57:30"><expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:30">zSig0</name></expr></argument>,

                         <argument pos:start="59:26" pos:end="59:30"><expr pos:start="59:26" pos:end="59:30"><name pos:start="59:26" pos:end="59:30">zSig1</name></expr></argument>

                     )</argument_list></call>

                  <operator pos:start="63:19" pos:end="63:20">&amp;&amp;</operator> <name pos:start="63:22" pos:end="63:30">increment</name>

                <operator pos:start="65:17" pos:end="65:17">)</operator></expr>

           )</condition> <block pos:start="67:14" pos:end="97:9">{<block_content pos:start="69:13" pos:end="95:55">

            <macro pos:start="69:13" pos:end="69:77"><name pos:start="69:13" pos:end="69:23">float_raise</name><argument_list pos:start="69:24" pos:end="69:77">( <argument pos:start="69:26" pos:end="69:76">float_flag_overflow | float_flag_inexact STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="69:78" pos:end="69:78">;</empty_stmt>

            <if_stmt pos:start="71:13" pos:end="93:13"><if pos:start="71:13" pos:end="93:13">if <condition pos:start="71:16" pos:end="77:16">(    <expr pos:start="71:21" pos:end="75:71"><operator pos:start="71:21" pos:end="71:21">(</operator> <name pos:start="71:23" pos:end="71:34">roundingMode</name> <operator pos:start="71:36" pos:end="71:37">==</operator> <name pos:start="71:39" pos:end="71:57">float_round_to_zero</name> <operator pos:start="71:59" pos:end="71:59">)</operator>

                 <operator pos:start="73:18" pos:end="73:19">||</operator> <operator pos:start="73:21" pos:end="73:21">(</operator> <name pos:start="73:23" pos:end="73:27">zSign</name> <operator pos:start="73:29" pos:end="73:30">&amp;&amp;</operator> <operator pos:start="73:32" pos:end="73:32">(</operator> <name pos:start="73:34" pos:end="73:45">roundingMode</name> <operator pos:start="73:47" pos:end="73:48">==</operator> <name pos:start="73:50" pos:end="73:63">float_round_up</name> <operator pos:start="73:65" pos:end="73:65">)</operator> <operator pos:start="73:67" pos:end="73:67">)</operator>

                 <operator pos:start="75:18" pos:end="75:19">||</operator> <operator pos:start="75:21" pos:end="75:21">(</operator> <operator pos:start="75:23" pos:end="75:23">!</operator> <name pos:start="75:25" pos:end="75:29">zSign</name> <operator pos:start="75:31" pos:end="75:32">&amp;&amp;</operator> <operator pos:start="75:34" pos:end="75:34">(</operator> <name pos:start="75:36" pos:end="75:47">roundingMode</name> <operator pos:start="75:49" pos:end="75:50">==</operator> <name pos:start="75:52" pos:end="75:67">float_round_down</name> <operator pos:start="75:69" pos:end="75:69">)</operator> <operator pos:start="75:71" pos:end="75:71">)</operator></expr>

               )</condition> <block pos:start="77:18" pos:end="93:13">{<block_content pos:start="79:17" pos:end="91:22">

                <return pos:start="79:17" pos:end="91:22">return

                    <expr pos:start="81:21" pos:end="91:21"><call pos:start="81:21" pos:end="91:21"><name pos:start="81:21" pos:end="81:32">packFloat128</name><argument_list pos:start="81:33" pos:end="91:21">(

                        <argument pos:start="83:25" pos:end="83:29"><expr pos:start="83:25" pos:end="83:29"><name pos:start="83:25" pos:end="83:29">zSign</name></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:30"><expr pos:start="85:25" pos:end="85:30"><literal type="number" pos:start="85:25" pos:end="85:30">0x7FFE</literal></expr></argument>,

                        <argument pos:start="87:25" pos:end="87:51"><expr pos:start="87:25" pos:end="87:51"><call pos:start="87:25" pos:end="87:51"><name pos:start="87:25" pos:end="87:29">LIT64</name><argument_list pos:start="87:30" pos:end="87:51">( <argument pos:start="87:32" pos:end="87:49"><expr pos:start="87:32" pos:end="87:49"><literal type="number" pos:start="87:32" pos:end="87:49">0x0000FFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr></argument>,

                        <argument pos:start="89:25" pos:end="89:51"><expr pos:start="89:25" pos:end="89:51"><call pos:start="89:25" pos:end="89:51"><name pos:start="89:25" pos:end="89:29">LIT64</name><argument_list pos:start="89:30" pos:end="89:51">( <argument pos:start="89:32" pos:end="89:49"><expr pos:start="89:32" pos:end="89:49"><literal type="number" pos:start="89:32" pos:end="89:49">0xFFFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr></argument>

                    )</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="95:13" pos:end="95:55">return <expr pos:start="95:20" pos:end="95:54"><call pos:start="95:20" pos:end="95:54"><name pos:start="95:20" pos:end="95:31">packFloat128</name><argument_list pos:start="95:32" pos:end="95:54">( <argument pos:start="95:34" pos:end="95:38"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38">zSign</name></expr></argument>, <argument pos:start="95:41" pos:end="95:46"><expr pos:start="95:41" pos:end="95:46"><literal type="number" pos:start="95:41" pos:end="95:46">0x7FFF</literal></expr></argument>, <argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><literal type="number" pos:start="95:49" pos:end="95:49">0</literal></expr></argument>, <argument pos:start="95:52" pos:end="95:52"><expr pos:start="95:52" pos:end="95:52"><literal type="number" pos:start="95:52" pos:end="95:52">0</literal></expr></argument> )</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="153:9"><if pos:start="99:9" pos:end="153:9">if <condition pos:start="99:12" pos:end="99:23">( <expr pos:start="99:14" pos:end="99:21"><name pos:start="99:14" pos:end="99:17">zExp</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr> )</condition> <block pos:start="99:25" pos:end="153:9">{<block_content pos:start="101:13" pos:end="151:13">

            <if_stmt pos:start="101:13" pos:end="101:79"><if pos:start="101:13" pos:end="101:79">if <condition pos:start="101:16" pos:end="101:40">( <expr pos:start="101:18" pos:end="101:38"><call pos:start="101:18" pos:end="101:38"><name pos:start="101:18" pos:end="101:23">STATUS</name><argument_list pos:start="101:24" pos:end="101:38">(<argument pos:start="101:25" pos:end="101:37"><expr pos:start="101:25" pos:end="101:37"><name pos:start="101:25" pos:end="101:37">flush_to_zero</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo" pos:start="101:42" pos:end="101:79"><block_content pos:start="101:42" pos:end="101:79"> <return pos:start="101:42" pos:end="101:79">return <expr pos:start="101:49" pos:end="101:78"><call pos:start="101:49" pos:end="101:78"><name pos:start="101:49" pos:end="101:60">packFloat128</name><argument_list pos:start="101:61" pos:end="101:78">( <argument pos:start="101:63" pos:end="101:67"><expr pos:start="101:63" pos:end="101:67"><name pos:start="101:63" pos:end="101:67">zSign</name></expr></argument>, <argument pos:start="101:70" pos:end="101:70"><expr pos:start="101:70" pos:end="101:70"><literal type="number" pos:start="101:70" pos:end="101:70">0</literal></expr></argument>, <argument pos:start="101:73" pos:end="101:73"><expr pos:start="101:73" pos:end="101:73"><literal type="number" pos:start="101:73" pos:end="101:73">0</literal></expr></argument>, <argument pos:start="101:76" pos:end="101:76"><expr pos:start="101:76" pos:end="101:76"><literal type="number" pos:start="101:76" pos:end="101:76">0</literal></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="121:21"><expr pos:start="103:13" pos:end="121:20"><name pos:start="103:13" pos:end="103:18">isTiny</name> <operator pos:start="103:20" pos:end="103:20">=</operator>

                   <operator pos:start="105:20" pos:end="105:20">(</operator> <call pos:start="105:22" pos:end="105:50"><name pos:start="105:22" pos:end="105:27">STATUS</name><argument_list pos:start="105:28" pos:end="105:50">(<argument pos:start="105:29" pos:end="105:49"><expr pos:start="105:29" pos:end="105:49"><name pos:start="105:29" pos:end="105:49">float_detect_tininess</name></expr></argument>)</argument_list></call> <operator pos:start="105:52" pos:end="105:53">==</operator> <name pos:start="105:55" pos:end="105:84">float_tininess_before_rounding</name> <operator pos:start="105:86" pos:end="105:86">)</operator>

                <operator pos:start="107:17" pos:end="107:18">||</operator> <operator pos:start="107:20" pos:end="107:20">(</operator> <name pos:start="107:22" pos:end="107:25">zExp</name> <operator pos:start="107:27" pos:end="107:27">&lt;</operator> <operator pos:start="107:29" pos:end="107:29">-</operator><literal type="number" pos:start="107:30" pos:end="107:30">1</literal> <operator pos:start="107:32" pos:end="107:32">)</operator>

                <operator pos:start="109:17" pos:end="109:18">||</operator> <operator pos:start="109:20" pos:end="109:20">!</operator> <name pos:start="109:22" pos:end="109:30">increment</name>

                <operator pos:start="111:17" pos:end="111:18">||</operator> <call pos:start="111:20" pos:end="121:20"><name pos:start="111:20" pos:end="111:24">lt128</name><argument_list pos:start="111:25" pos:end="121:20">(

                       <argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">zSig0</name></expr></argument>,

                       <argument pos:start="115:24" pos:end="115:28"><expr pos:start="115:24" pos:end="115:28"><name pos:start="115:24" pos:end="115:28">zSig1</name></expr></argument>,

                       <argument pos:start="117:24" pos:end="117:50"><expr pos:start="117:24" pos:end="117:50"><call pos:start="117:24" pos:end="117:50"><name pos:start="117:24" pos:end="117:28">LIT64</name><argument_list pos:start="117:29" pos:end="117:50">( <argument pos:start="117:31" pos:end="117:48"><expr pos:start="117:31" pos:end="117:48"><literal type="number" pos:start="117:31" pos:end="117:48">0x0001FFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr></argument>,

                       <argument pos:start="119:24" pos:end="119:50"><expr pos:start="119:24" pos:end="119:50"><call pos:start="119:24" pos:end="119:50"><name pos:start="119:24" pos:end="119:28">LIT64</name><argument_list pos:start="119:29" pos:end="119:50">( <argument pos:start="119:31" pos:end="119:48"><expr pos:start="119:31" pos:end="119:48"><literal type="number" pos:start="119:31" pos:end="119:48">0xFFFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr></argument>

                   )</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="125:70"><expr pos:start="123:13" pos:end="125:69"><call pos:start="123:13" pos:end="125:69"><name pos:start="123:13" pos:end="123:37">shift128ExtraRightJamming</name><argument_list pos:start="123:38" pos:end="125:69">(

                <argument pos:start="125:17" pos:end="125:21"><expr pos:start="125:17" pos:end="125:21"><name pos:start="125:17" pos:end="125:21">zSig0</name></expr></argument>, <argument pos:start="125:24" pos:end="125:28"><expr pos:start="125:24" pos:end="125:28"><name pos:start="125:24" pos:end="125:28">zSig1</name></expr></argument>, <argument pos:start="125:31" pos:end="125:35"><expr pos:start="125:31" pos:end="125:35"><name pos:start="125:31" pos:end="125:35">zSig2</name></expr></argument>, <argument pos:start="125:38" pos:end="125:43"><expr pos:start="125:38" pos:end="125:43"><operator pos:start="125:38" pos:end="125:38">-</operator> <name pos:start="125:40" pos:end="125:43">zExp</name></expr></argument>, <argument pos:start="125:46" pos:end="125:51"><expr pos:start="125:46" pos:end="125:51"><operator pos:start="125:46" pos:end="125:46">&amp;</operator><name pos:start="125:47" pos:end="125:51">zSig0</name></expr></argument>, <argument pos:start="125:54" pos:end="125:59"><expr pos:start="125:54" pos:end="125:59"><operator pos:start="125:54" pos:end="125:54">&amp;</operator><name pos:start="125:55" pos:end="125:59">zSig1</name></expr></argument>, <argument pos:start="125:62" pos:end="125:67"><expr pos:start="125:62" pos:end="125:67"><operator pos:start="125:62" pos:end="125:62">&amp;</operator><name pos:start="125:63" pos:end="125:67">zSig2</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:21"><expr pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:16">zExp</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <literal type="number" pos:start="127:20" pos:end="127:20">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="129:81"><if pos:start="129:13" pos:end="129:81">if <condition pos:start="129:16" pos:end="129:34">( <expr pos:start="129:18" pos:end="129:32"><name pos:start="129:18" pos:end="129:23">isTiny</name> <operator pos:start="129:25" pos:end="129:26">&amp;&amp;</operator> <name pos:start="129:28" pos:end="129:32">zSig2</name></expr> )</condition><block type="pseudo" pos:start="129:36" pos:end="129:81"><block_content pos:start="129:36" pos:end="129:81"> <macro pos:start="129:36" pos:end="129:80"><name pos:start="129:36" pos:end="129:46">float_raise</name><argument_list pos:start="129:47" pos:end="129:80">( <argument pos:start="129:49" pos:end="129:79">float_flag_underflow STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="129:81" pos:end="129:81">;</empty_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="151:13"><if pos:start="131:13" pos:end="135:13">if <condition pos:start="131:16" pos:end="131:35">( <expr pos:start="131:18" pos:end="131:33"><name pos:start="131:18" pos:end="131:33">roundNearestEven</name></expr> )</condition> <block pos:start="131:37" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:52">

                <expr_stmt pos:start="133:17" pos:end="133:52"><expr pos:start="133:17" pos:end="133:51"><name pos:start="133:17" pos:end="133:25">increment</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <operator pos:start="133:29" pos:end="133:29">(</operator> <operator pos:start="133:31" pos:end="133:31">(</operator><name pos:start="133:32" pos:end="133:38">int64_t</name><operator pos:start="133:39" pos:end="133:39">)</operator> <name pos:start="133:41" pos:end="133:45">zSig2</name> <operator pos:start="133:47" pos:end="133:47">&lt;</operator> <literal type="number" pos:start="133:49" pos:end="133:49">0</literal> <operator pos:start="133:51" pos:end="133:51">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="137:13" pos:end="151:13">else <block pos:start="137:18" pos:end="151:13">{<block_content pos:start="139:17" pos:end="149:17">

                <if_stmt pos:start="139:17" pos:end="149:17"><if pos:start="139:17" pos:end="143:17">if <condition pos:start="139:20" pos:end="139:28">( <expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:26">zSign</name></expr> )</condition> <block pos:start="139:30" pos:end="143:17">{<block_content pos:start="141:21" pos:end="141:78">

                    <expr_stmt pos:start="141:21" pos:end="141:78"><expr pos:start="141:21" pos:end="141:77"><name pos:start="141:21" pos:end="141:29">increment</name> <operator pos:start="141:31" pos:end="141:31">=</operator> <operator pos:start="141:33" pos:end="141:33">(</operator> <name pos:start="141:35" pos:end="141:46">roundingMode</name> <operator pos:start="141:48" pos:end="141:49">==</operator> <name pos:start="141:51" pos:end="141:66">float_round_down</name> <operator pos:start="141:68" pos:end="141:68">)</operator> <operator pos:start="141:70" pos:end="141:71">&amp;&amp;</operator> <name pos:start="141:73" pos:end="141:77">zSig2</name></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="145:17" pos:end="149:17">else <block pos:start="145:22" pos:end="149:17">{<block_content pos:start="147:21" pos:end="147:76">

                    <expr_stmt pos:start="147:21" pos:end="147:76"><expr pos:start="147:21" pos:end="147:75"><name pos:start="147:21" pos:end="147:29">increment</name> <operator pos:start="147:31" pos:end="147:31">=</operator> <operator pos:start="147:33" pos:end="147:33">(</operator> <name pos:start="147:35" pos:end="147:46">roundingMode</name> <operator pos:start="147:48" pos:end="147:49">==</operator> <name pos:start="147:51" pos:end="147:64">float_round_up</name> <operator pos:start="147:66" pos:end="147:66">)</operator> <operator pos:start="147:68" pos:end="147:69">&amp;&amp;</operator> <name pos:start="147:71" pos:end="147:75">zSig2</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="157:69"><if pos:start="157:5" pos:end="157:69">if <condition pos:start="157:8" pos:end="157:16">( <expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:14">zSig2</name></expr> )</condition><block type="pseudo" pos:start="157:18" pos:end="157:69"><block_content pos:start="157:18" pos:end="157:69"> <expr_stmt pos:start="157:18" pos:end="157:69"><expr pos:start="157:18" pos:end="157:68"><call pos:start="157:18" pos:end="157:46"><name pos:start="157:18" pos:end="157:23">STATUS</name><argument_list pos:start="157:24" pos:end="157:46">(<argument pos:start="157:25" pos:end="157:45"><expr pos:start="157:25" pos:end="157:45"><name pos:start="157:25" pos:end="157:45">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="157:48" pos:end="157:49">|=</operator> <name pos:start="157:51" pos:end="157:68">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="171:5"><if pos:start="159:5" pos:end="165:5">if <condition pos:start="159:8" pos:end="159:20">( <expr pos:start="159:10" pos:end="159:18"><name pos:start="159:10" pos:end="159:18">increment</name></expr> )</condition> <block pos:start="159:22" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:65">

        <expr_stmt pos:start="161:9" pos:end="161:53"><expr pos:start="161:9" pos:end="161:52"><call pos:start="161:9" pos:end="161:52"><name pos:start="161:9" pos:end="161:14">add128</name><argument_list pos:start="161:15" pos:end="161:52">( <argument pos:start="161:17" pos:end="161:21"><expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:21">zSig0</name></expr></argument>, <argument pos:start="161:24" pos:end="161:28"><expr pos:start="161:24" pos:end="161:28"><name pos:start="161:24" pos:end="161:28">zSig1</name></expr></argument>, <argument pos:start="161:31" pos:end="161:31"><expr pos:start="161:31" pos:end="161:31"><literal type="number" pos:start="161:31" pos:end="161:31">0</literal></expr></argument>, <argument pos:start="161:34" pos:end="161:34"><expr pos:start="161:34" pos:end="161:34"><literal type="number" pos:start="161:34" pos:end="161:34">1</literal></expr></argument>, <argument pos:start="161:37" pos:end="161:42"><expr pos:start="161:37" pos:end="161:42"><operator pos:start="161:37" pos:end="161:37">&amp;</operator><name pos:start="161:38" pos:end="161:42">zSig0</name></expr></argument>, <argument pos:start="161:45" pos:end="161:50"><expr pos:start="161:45" pos:end="161:50"><operator pos:start="161:45" pos:end="161:45">&amp;</operator><name pos:start="161:46" pos:end="161:50">zSig1</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:65"><expr pos:start="163:9" pos:end="163:64"><name pos:start="163:9" pos:end="163:13">zSig1</name> <operator pos:start="163:15" pos:end="163:16">&amp;=</operator> <operator pos:start="163:18" pos:end="163:18">~</operator> <operator pos:start="163:20" pos:end="163:20">(</operator> <operator pos:start="163:22" pos:end="163:22">(</operator> <name pos:start="163:24" pos:end="163:28">zSig2</name> <operator pos:start="163:30" pos:end="163:30">+</operator> <name pos:start="163:32" pos:end="163:36">zSig2</name> <operator pos:start="163:38" pos:end="163:39">==</operator> <literal type="number" pos:start="163:41" pos:end="163:41">0</literal> <operator pos:start="163:43" pos:end="163:43">)</operator> <operator pos:start="163:45" pos:end="163:45">&amp;</operator> <name pos:start="163:47" pos:end="163:62">roundNearestEven</name> <operator pos:start="163:64" pos:end="163:64">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="167:5" pos:end="171:5">else <block pos:start="167:10" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:47">

        <if_stmt pos:start="169:9" pos:end="169:47"><if pos:start="169:9" pos:end="169:47">if <condition pos:start="169:12" pos:end="169:37">( <expr pos:start="169:14" pos:end="169:35"><operator pos:start="169:14" pos:end="169:14">(</operator> <name pos:start="169:16" pos:end="169:20">zSig0</name> <operator pos:start="169:22" pos:end="169:22">|</operator> <name pos:start="169:24" pos:end="169:28">zSig1</name> <operator pos:start="169:30" pos:end="169:30">)</operator> <operator pos:start="169:32" pos:end="169:33">==</operator> <literal type="number" pos:start="169:35" pos:end="169:35">0</literal></expr> )</condition><block type="pseudo" pos:start="169:39" pos:end="169:47"><block_content pos:start="169:39" pos:end="169:47"> <expr_stmt pos:start="169:39" pos:end="169:47"><expr pos:start="169:39" pos:end="169:46"><name pos:start="169:39" pos:end="169:42">zExp</name> <operator pos:start="169:44" pos:end="169:44">=</operator> <literal type="number" pos:start="169:46" pos:end="169:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="173:5" pos:end="173:53">return <expr pos:start="173:12" pos:end="173:52"><call pos:start="173:12" pos:end="173:52"><name pos:start="173:12" pos:end="173:23">packFloat128</name><argument_list pos:start="173:24" pos:end="173:52">( <argument pos:start="173:26" pos:end="173:30"><expr pos:start="173:26" pos:end="173:30"><name pos:start="173:26" pos:end="173:30">zSign</name></expr></argument>, <argument pos:start="173:33" pos:end="173:36"><expr pos:start="173:33" pos:end="173:36"><name pos:start="173:33" pos:end="173:36">zExp</name></expr></argument>, <argument pos:start="173:39" pos:end="173:43"><expr pos:start="173:39" pos:end="173:43"><name pos:start="173:39" pos:end="173:43">zSig0</name></expr></argument>, <argument pos:start="173:46" pos:end="173:50"><expr pos:start="173:46" pos:end="173:50"><name pos:start="173:46" pos:end="173:50">zSig1</name></expr></argument> )</argument_list></call></expr>;</return>



</block_content>}</block>
</unit>
