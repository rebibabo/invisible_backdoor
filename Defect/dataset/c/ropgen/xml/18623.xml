<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18623.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_sot</name><parameter_list pos:start="1:19" pos:end="1:52">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:41">Jpeg2000DecoderContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:51"><decl pos:start="1:47" pos:end="1:51"><type pos:start="1:47" pos:end="1:51"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:51">n</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="40:1">{<block_content pos:start="3:5" pos:end="39:13">
    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:24"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:20">Jpeg2000TilePart</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:24">tp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:18"><decl pos:start="4:5" pos:end="4:17"><type pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:12">uint16_t</name></type> <name pos:start="4:14" pos:end="4:17">Isot</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">Psot</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:11">uint8_t</name></type> <name pos:start="6:13" pos:end="6:17">TPsot</name></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="8:40"><if pos:start="7:5" pos:end="8:40">if <condition pos:start="7:8" pos:end="7:46">(<expr pos:start="7:9" pos:end="7:45"><call pos:start="7:9" pos:end="7:41"><name pos:start="7:9" pos:end="7:34">bytestream2_get_bytes_left</name><argument_list pos:start="7:35" pos:end="7:41">(<argument pos:start="7:36" pos:end="7:40"><expr pos:start="7:36" pos:end="7:40"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:40"><name pos:start="7:37" pos:end="7:37">s</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:40">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="7:43" pos:end="7:43">&lt;</operator> <literal type="number" pos:start="7:45" pos:end="7:45">8</literal></expr>)</condition><block type="pseudo" pos:start="8:5" pos:end="8:40"><block_content pos:start="8:5" pos:end="8:40">
    <expr_stmt pos:start="8:5" pos:end="8:40"><expr pos:start="8:5" pos:end="8:39"><name pos:start="8:5" pos:end="8:8">Isot</name> <operator pos:start="8:10" pos:end="8:10">=</operator> <call pos:start="8:12" pos:end="8:39"><name pos:start="8:12" pos:end="8:32">bytestream2_get_be16u</name><argument_list pos:start="8:33" pos:end="8:39">(<argument pos:start="8:34" pos:end="8:38"><expr pos:start="8:34" pos:end="8:38"><operator pos:start="8:34" pos:end="8:34">&amp;</operator><name pos:start="8:35" pos:end="8:38"><name pos:start="8:35" pos:end="8:35">s</name><operator pos:start="8:36" pos:end="8:37">-&gt;</operator><name pos:start="8:38" pos:end="8:38">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>        <comment type="line" pos:start="8:49" pos:end="8:55">// Isot</comment>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">Isot</name></expr>)</condition> <block pos:start="9:15" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:36">
        <expr_stmt pos:start="10:9" pos:end="10:74"><expr pos:start="10:9" pos:end="10:73"><call pos:start="10:9" pos:end="10:73"><name pos:start="10:9" pos:end="10:29">avpriv_request_sample</name><argument_list pos:start="10:30" pos:end="10:73">(<argument pos:start="10:31" pos:end="10:38"><expr pos:start="10:31" pos:end="10:38"><name pos:start="10:31" pos:end="10:38"><name pos:start="10:31" pos:end="10:31">s</name><operator pos:start="10:32" pos:end="10:33">-&gt;</operator><name pos:start="10:34" pos:end="10:38">avctx</name></name></expr></argument>, <argument pos:start="10:41" pos:end="10:72"><expr pos:start="10:41" pos:end="10:72"><literal type="string" pos:start="10:41" pos:end="10:72">"Support for more than one tile"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:36">return <expr pos:start="11:16" pos:end="11:35"><name pos:start="11:16" pos:end="11:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:8">Psot</name>  <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:40"><name pos:start="13:13" pos:end="13:33">bytestream2_get_be32u</name><argument_list pos:start="13:34" pos:end="13:40">(<argument pos:start="13:35" pos:end="13:39"><expr pos:start="13:35" pos:end="13:39"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:39"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:39">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="13:49" pos:end="13:55">// Psot</comment>
    <expr_stmt pos:start="14:5" pos:end="14:41"><expr pos:start="14:5" pos:end="14:40"><name pos:start="14:5" pos:end="14:9">TPsot</name> <operator pos:start="14:11" pos:end="14:11">=</operator> <call pos:start="14:13" pos:end="14:40"><name pos:start="14:13" pos:end="14:33">bytestream2_get_byteu</name><argument_list pos:start="14:34" pos:end="14:40">(<argument pos:start="14:35" pos:end="14:39"><expr pos:start="14:35" pos:end="14:39"><operator pos:start="14:35" pos:end="14:35">&amp;</operator><name pos:start="14:36" pos:end="14:39"><name pos:start="14:36" pos:end="14:36">s</name><operator pos:start="14:37" pos:end="14:38">-&gt;</operator><name pos:start="14:39" pos:end="14:39">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="14:49" pos:end="14:56">// TPsot</comment>
    <comment type="block" pos:start="15:5" pos:end="15:33">/* Read TNSot but not used */</comment>
    <expr_stmt pos:start="16:5" pos:end="16:33"><expr pos:start="16:5" pos:end="16:32"><call pos:start="16:5" pos:end="16:32"><name pos:start="16:5" pos:end="16:25">bytestream2_get_byteu</name><argument_list pos:start="16:26" pos:end="16:32">(<argument pos:start="16:27" pos:end="16:31"><expr pos:start="16:27" pos:end="16:31"><operator pos:start="16:27" pos:end="16:27">&amp;</operator><name pos:start="16:28" pos:end="16:31"><name pos:start="16:28" pos:end="16:28">s</name><operator pos:start="16:29" pos:end="16:30">-&gt;</operator><name pos:start="16:31" pos:end="16:31">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="line" pos:start="16:49" pos:end="16:56">// TNsot</comment>
    <if_stmt pos:start="17:5" pos:end="19:5"><if pos:start="17:5" pos:end="19:5">if <condition pos:start="17:8" pos:end="17:57">(<expr pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:12">Psot</name> <operator pos:start="17:14" pos:end="17:14">&gt;</operator> <call pos:start="17:16" pos:end="17:48"><name pos:start="17:16" pos:end="17:41">bytestream2_get_bytes_left</name><argument_list pos:start="17:42" pos:end="17:48">(<argument pos:start="17:43" pos:end="17:47"><expr pos:start="17:43" pos:end="17:47"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:44">s</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:47">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:50" pos:end="17:50">+</operator> <name pos:start="17:52" pos:end="17:52">n</name> <operator pos:start="17:54" pos:end="17:54">+</operator> <literal type="number" pos:start="17:56" pos:end="17:56">2</literal></expr>)</condition> <block pos:start="17:59" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:66">
        <expr_stmt pos:start="18:9" pos:end="18:66"><expr pos:start="18:9" pos:end="18:65"><call pos:start="18:9" pos:end="18:65"><name pos:start="18:9" pos:end="18:14">av_log</name><argument_list pos:start="18:15" pos:end="18:65">(<argument pos:start="18:16" pos:end="18:23"><expr pos:start="18:16" pos:end="18:23"><name pos:start="18:16" pos:end="18:23"><name pos:start="18:16" pos:end="18:16">s</name><operator pos:start="18:17" pos:end="18:18">-&gt;</operator><name pos:start="18:19" pos:end="18:23">avctx</name></name></expr></argument>, <argument pos:start="18:26" pos:end="18:37"><expr pos:start="18:26" pos:end="18:37"><name pos:start="18:26" pos:end="18:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="18:40" pos:end="18:58"><expr pos:start="18:40" pos:end="18:58"><literal type="string" pos:start="18:40" pos:end="18:58">"Psot %d too big\n"</literal></expr></argument>, <argument pos:start="18:61" pos:end="18:64"><expr pos:start="18:61" pos:end="18:64"><name pos:start="18:61" pos:end="18:64">Psot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="20:5" pos:end="23:5"><if pos:start="20:5" pos:end="23:5">if <condition pos:start="20:8" pos:end="20:57">(<expr pos:start="20:9" pos:end="20:56"><name pos:start="20:9" pos:end="20:13">TPsot</name> <operator pos:start="20:15" pos:end="20:16">&gt;=</operator> <call pos:start="20:18" pos:end="20:56"><name pos:start="20:18" pos:end="20:31">FF_ARRAY_ELEMS</name><argument_list pos:start="20:32" pos:end="20:56">(<argument pos:start="20:33" pos:end="20:55"><expr pos:start="20:33" pos:end="20:55"><name pos:start="20:33" pos:end="20:45"><name pos:start="20:33" pos:end="20:33">s</name><operator pos:start="20:34" pos:end="20:35">-&gt;</operator><name pos:start="20:36" pos:end="20:39">tile</name><index pos:start="20:40" pos:end="20:45">[<expr pos:start="20:41" pos:end="20:44"><name pos:start="20:41" pos:end="20:44">Isot</name></expr>]</index></name><operator pos:start="20:46" pos:end="20:46">.</operator><name pos:start="20:47" pos:end="20:55">tile_part</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="20:59" pos:end="23:5">{<block_content pos:start="21:9" pos:end="22:36">
        <expr_stmt pos:start="21:9" pos:end="21:76"><expr pos:start="21:9" pos:end="21:75"><call pos:start="21:9" pos:end="21:75"><name pos:start="21:9" pos:end="21:29">avpriv_request_sample</name><argument_list pos:start="21:30" pos:end="21:75">(<argument pos:start="21:31" pos:end="21:38"><expr pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:38">avctx</name></name></expr></argument>, <argument pos:start="21:41" pos:end="21:67"><expr pos:start="21:41" pos:end="21:67"><literal type="string" pos:start="21:41" pos:end="21:67">"Support for %d components"</literal></expr></argument>, <argument pos:start="21:70" pos:end="21:74"><expr pos:start="21:70" pos:end="21:74"><name pos:start="21:70" pos:end="21:74">TPsot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="22:9" pos:end="22:36">return <expr pos:start="22:16" pos:end="22:35"><name pos:start="22:16" pos:end="22:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:61"><expr pos:start="24:5" pos:end="24:60"><name pos:start="24:5" pos:end="24:6">tp</name>             <operator pos:start="24:20" pos:end="24:20">=</operator> <name pos:start="24:22" pos:end="24:42"><name pos:start="24:22" pos:end="24:22">s</name><operator pos:start="24:23" pos:end="24:24">-&gt;</operator><name pos:start="24:25" pos:end="24:28">tile</name><index pos:start="24:29" pos:end="24:42">[<expr pos:start="24:30" pos:end="24:41"><name pos:start="24:30" pos:end="24:41"><name pos:start="24:30" pos:end="24:30">s</name><operator pos:start="24:31" pos:end="24:32">-&gt;</operator><name pos:start="24:33" pos:end="24:41">curtileno</name></name></expr>]</index></name><operator pos:start="24:43" pos:end="24:43">.</operator><name pos:start="24:44" pos:end="24:52">tile_part</name> <operator pos:start="24:54" pos:end="24:54">+</operator> <name pos:start="24:56" pos:end="24:60">TPsot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">tp</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:18">tile_index</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:25">Isot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:26"><expr pos:start="26:5" pos:end="26:25"><name pos:start="26:5" pos:end="26:14"><name pos:start="26:5" pos:end="26:6">tp</name><operator pos:start="26:7" pos:end="26:8">-&gt;</operator><name pos:start="26:9" pos:end="26:14">tp_len</name></name>     <operator pos:start="26:20" pos:end="26:20">=</operator> <name pos:start="26:22" pos:end="26:25">Psot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:6">tp</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:14">tp_idx</name></name>     <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:26">TPsot</name></expr>;</expr_stmt>
    <comment type="block" pos:start="28:5" pos:end="29:38">/* Start of bit stream. Pointer to SOD marker
     * Check SOD marker is present. */</comment>
    <if_stmt pos:start="30:5" pos:end="35:5"><if pos:start="30:5" pos:end="33:5">if <condition pos:start="30:8" pos:end="30:52">(<expr pos:start="30:9" pos:end="30:51"><name pos:start="30:9" pos:end="30:20">JPEG2000_SOD</name> <operator pos:start="30:22" pos:end="30:23">==</operator> <call pos:start="30:25" pos:end="30:51"><name pos:start="30:25" pos:end="30:44">bytestream2_get_be16</name><argument_list pos:start="30:45" pos:end="30:51">(<argument pos:start="30:46" pos:end="30:50"><expr pos:start="30:46" pos:end="30:50"><operator pos:start="30:46" pos:end="30:46">&amp;</operator><name pos:start="30:47" pos:end="30:50"><name pos:start="30:47" pos:end="30:47">s</name><operator pos:start="30:48" pos:end="30:49">-&gt;</operator><name pos:start="30:50" pos:end="30:50">g</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="30:54" pos:end="33:5">{<block_content pos:start="31:9" pos:end="32:52">
        <expr_stmt pos:start="31:9" pos:end="31:68"><expr pos:start="31:9" pos:end="31:67"><call pos:start="31:9" pos:end="31:67"><name pos:start="31:9" pos:end="31:24">bytestream2_init</name><argument_list pos:start="31:25" pos:end="31:67">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:33"><name pos:start="31:27" pos:end="31:28">tp</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:33">tpg</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:46"><expr pos:start="31:36" pos:end="31:46"><name pos:start="31:36" pos:end="31:46"><name pos:start="31:36" pos:end="31:36">s</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:39">g</name><operator pos:start="31:40" pos:end="31:40">.</operator><name pos:start="31:41" pos:end="31:46">buffer</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:66"><expr pos:start="31:49" pos:end="31:66"><name pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:50">tp</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:58">tp_len</name></name> <operator pos:start="31:60" pos:end="31:60">-</operator> <name pos:start="31:62" pos:end="31:62">n</name> <operator pos:start="31:64" pos:end="31:64">-</operator> <literal type="number" pos:start="31:66" pos:end="31:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:52"><expr pos:start="32:9" pos:end="32:51"><call pos:start="32:9" pos:end="32:51"><name pos:start="32:9" pos:end="32:24">bytestream2_skip</name><argument_list pos:start="32:25" pos:end="32:51">(<argument pos:start="32:26" pos:end="32:30"><expr pos:start="32:26" pos:end="32:30"><operator pos:start="32:26" pos:end="32:26">&amp;</operator><name pos:start="32:27" pos:end="32:30"><name pos:start="32:27" pos:end="32:27">s</name><operator pos:start="32:28" pos:end="32:29">-&gt;</operator><name pos:start="32:30" pos:end="32:30">g</name></name></expr></argument>, <argument pos:start="32:33" pos:end="32:50"><expr pos:start="32:33" pos:end="32:50"><name pos:start="32:33" pos:end="32:42"><name pos:start="32:33" pos:end="32:34">tp</name><operator pos:start="32:35" pos:end="32:36">-&gt;</operator><name pos:start="32:37" pos:end="32:42">tp_len</name></name> <operator pos:start="32:44" pos:end="32:44">-</operator> <name pos:start="32:46" pos:end="32:46">n</name> <operator pos:start="32:48" pos:end="32:48">-</operator> <literal type="number" pos:start="32:50" pos:end="32:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="33:7" pos:end="35:5">else <block pos:start="33:12" pos:end="35:5">{<block_content pos:start="34:9" pos:end="34:66">
        <expr_stmt pos:start="34:9" pos:end="34:66"><expr pos:start="34:9" pos:end="34:65"><call pos:start="34:9" pos:end="34:65"><name pos:start="34:9" pos:end="34:14">av_log</name><argument_list pos:start="34:15" pos:end="34:65">(<argument pos:start="34:16" pos:end="34:23"><expr pos:start="34:16" pos:end="34:23"><name pos:start="34:16" pos:end="34:23"><name pos:start="34:16" pos:end="34:16">s</name><operator pos:start="34:17" pos:end="34:18">-&gt;</operator><name pos:start="34:19" pos:end="34:23">avctx</name></name></expr></argument>, <argument pos:start="34:26" pos:end="34:37"><expr pos:start="34:26" pos:end="34:37"><name pos:start="34:26" pos:end="34:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="34:40" pos:end="34:64"><expr pos:start="34:40" pos:end="34:64"><literal type="string" pos:start="34:40" pos:end="34:64">"SOD marker not found \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <comment type="block" pos:start="36:5" pos:end="38:62">/* End address of bit stream =
     *     start address + (Psot - size of SOT HEADER(n)
     *     - size of SOT MARKER(2)  - size of SOD marker(2) */</comment>
    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
