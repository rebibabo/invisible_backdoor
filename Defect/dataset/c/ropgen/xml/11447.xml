<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11447.c" pos:tabs="8"><function pos:start="1:1" pos:end="721:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_h263_decode_mb</name><parameter_list pos:start="1:22" pos:end="3:43">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:36">MpegEncContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:42"><decl pos:start="3:23" pos:end="3:42"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:29">DCTELEM</name></type> <name pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:35">block</name><index pos:start="3:36" pos:end="3:38">[<expr pos:start="3:37" pos:end="3:37"><literal type="number" pos:start="3:37" pos:end="3:37">6</literal></expr>]</index><index pos:start="3:39" pos:end="3:42">[<expr pos:start="3:40" pos:end="3:41"><literal type="number" pos:start="3:40" pos:end="3:41">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="721:1">{<block_content pos:start="7:5" pos:end="719:20">

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">cbpc</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">cbpy</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>, <decl pos:start="7:24" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:26">cbp</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:34">pred_x</name></decl>, <decl pos:start="7:37" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:42">pred_y</name></decl>, <decl pos:start="7:45" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:46">mx</name></decl>, <decl pos:start="7:49" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:49" pos:end="7:50">my</name></decl>, <decl pos:start="7:53" pos:end="7:58"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:58">dquant</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">INT16</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">mot_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:15">INT8</name></type> <name pos:start="11:17" pos:end="11:28"><name pos:start="11:17" pos:end="11:25">quant_tab</name><index pos:start="11:26" pos:end="11:28">[<expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">4</literal></expr>]</index></name> <init pos:start="11:30" pos:end="11:47">= <expr pos:start="11:32" pos:end="11:47"><block pos:start="11:32" pos:end="11:47">{ <expr pos:start="11:34" pos:end="11:35"><operator pos:start="11:34" pos:end="11:34">-</operator><literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>, <expr pos:start="11:38" pos:end="11:39"><operator pos:start="11:38" pos:end="11:38">-</operator><literal type="number" pos:start="11:39" pos:end="11:39">2</literal></expr>, <expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">1</literal></expr>, <expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:60"><expr pos:start="15:5" pos:end="15:59"><name pos:start="15:5" pos:end="15:56"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:25">error_status_table</name><index pos:start="15:26" pos:end="15:56">[<expr pos:start="15:27" pos:end="15:55"><name pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:33">mb_x</name></name> <operator pos:start="15:35" pos:end="15:35">+</operator> <name pos:start="15:37" pos:end="15:43"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:43">mb_y</name></name><operator pos:start="15:44" pos:end="15:44">*</operator><name pos:start="15:45" pos:end="15:55"><name pos:start="15:45" pos:end="15:45">s</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:55">mb_width</name></name></expr>]</index></name><operator pos:start="15:57" pos:end="15:57">=</operator> <literal type="number" pos:start="15:59" pos:end="15:59">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="19:39"><if pos:start="19:5" pos:end="19:39">if<condition pos:start="19:7" pos:end="19:18">(<expr pos:start="19:8" pos:end="19:17"><name pos:start="19:8" pos:end="19:14"><name pos:start="19:8" pos:end="19:8">s</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:14">mb_x</name></name><operator pos:start="19:15" pos:end="19:16">==</operator><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>)</condition><block type="pseudo" pos:start="19:20" pos:end="19:39"><block_content pos:start="19:20" pos:end="19:39"> <expr_stmt pos:start="19:20" pos:end="19:39"><expr pos:start="19:20" pos:end="19:38"><call pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:32">PRINT_MB_TYPE</name><argument_list pos:start="19:33" pos:end="19:38">(<argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><literal type="string" pos:start="19:34" pos:end="19:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="647:5"><if pos:start="23:5" pos:end="287:5">if <condition pos:start="23:8" pos:end="23:55">(<expr pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">pict_type</name></name> <operator pos:start="23:22" pos:end="23:23">==</operator> <name pos:start="23:25" pos:end="23:30">P_TYPE</name> <operator pos:start="23:32" pos:end="23:33">||</operator> <name pos:start="23:35" pos:end="23:46"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:46">pict_type</name></name><operator pos:start="23:47" pos:end="23:48">==</operator><name pos:start="23:49" pos:end="23:54">S_TYPE</name></expr>)</condition> <block pos:start="23:57" pos:end="287:5">{<block_content pos:start="25:9" pos:end="285:9">

        <if_stmt pos:start="25:9" pos:end="69:9"><if pos:start="25:9" pos:end="69:9">if <condition pos:start="25:12" pos:end="25:30">(<expr pos:start="25:13" pos:end="25:29"><call pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:21">get_bits1</name><argument_list pos:start="25:22" pos:end="25:29">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:32" pos:end="69:9">{<block_content pos:start="29:13" pos:end="67:21">

            <comment type="block" pos:start="27:13" pos:end="27:25">/* skip mb */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:28"><expr pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">mb_intra</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr>;</expr_stmt>

            <for pos:start="31:13" pos:end="33:44">for<control pos:start="31:16" pos:end="31:28">(<init pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">=</operator><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>;</init><condition pos:start="31:21" pos:end="31:24"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:21">i</name><operator pos:start="31:22" pos:end="31:22">&lt;</operator><literal type="number" pos:start="31:23" pos:end="31:23">6</literal></expr>;</condition><incr pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:17" pos:end="33:44"><block_content pos:start="33:17" pos:end="33:44">

                <expr_stmt pos:start="33:17" pos:end="33:44"><expr pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:35">block_last_index</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name> <operator pos:start="33:40" pos:end="33:40">=</operator> <operator pos:start="33:42" pos:end="33:42">-</operator><literal type="number" pos:start="33:43" pos:end="33:43">1</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="35:13" pos:end="35:39"><expr pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">mv_dir</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">mv_type</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:38">MV_TYPE_16X16</name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="65:13"><if pos:start="39:13" pos:end="53:13">if<condition pos:start="39:15" pos:end="39:71">(<expr pos:start="39:16" pos:end="39:70"><name pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:27">pict_type</name></name><operator pos:start="39:28" pos:end="39:29">==</operator><name pos:start="39:30" pos:end="39:35">S_TYPE</name> <operator pos:start="39:37" pos:end="39:38">&amp;&amp;</operator> <name pos:start="39:40" pos:end="39:58"><name pos:start="39:40" pos:end="39:40">s</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:58">vol_sprite_usage</name></name><operator pos:start="39:59" pos:end="39:60">==</operator><name pos:start="39:61" pos:end="39:70">GMC_SPRITE</name></expr>)</condition><block pos:start="39:72" pos:end="53:13">{<block_content pos:start="41:17" pos:end="51:33">

                <expr_stmt pos:start="41:17" pos:end="41:35"><expr pos:start="41:17" pos:end="41:34"><call pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:29">PRINT_MB_TYPE</name><argument_list pos:start="41:30" pos:end="41:34">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><literal type="string" pos:start="41:31" pos:end="41:33">"G"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:27"><expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:24">mcsel</name></name><operator pos:start="43:25" pos:end="43:25">=</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:46"><expr pos:start="45:17" pos:end="45:45"><name pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:21">mv</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>]</index><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>]</index><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>]</index></name><operator pos:start="45:31" pos:end="45:31">=</operator> <call pos:start="45:33" pos:end="45:45"><name pos:start="45:33" pos:end="45:39">get_amv</name><argument_list pos:start="45:40" pos:end="45:45">(<argument pos:start="45:41" pos:end="45:41"><expr pos:start="45:41" pos:end="45:41"><name pos:start="45:41" pos:end="45:41">s</name></expr></argument>, <argument pos:start="45:44" pos:end="45:44"><expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:46"><expr pos:start="47:17" pos:end="47:45"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:21">mv</name><index pos:start="47:22" pos:end="47:24">[<expr pos:start="47:23" pos:end="47:23"><literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>]</index><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>]</index><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>]</index></name><operator pos:start="47:31" pos:end="47:31">=</operator> <call pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:39">get_amv</name><argument_list pos:start="47:40" pos:end="47:45">(<argument pos:start="47:41" pos:end="47:41"><expr pos:start="47:41" pos:end="47:41"><name pos:start="47:41" pos:end="47:41">s</name></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="51:17" pos:end="51:33"><expr pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:28">mb_skiped</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="53:14" pos:end="65:13">else<block pos:start="53:18" pos:end="65:13">{<block_content pos:start="55:17" pos:end="63:33">

                <expr_stmt pos:start="55:17" pos:end="55:35"><expr pos:start="55:17" pos:end="55:34"><call pos:start="55:17" pos:end="55:34"><name pos:start="55:17" pos:end="55:29">PRINT_MB_TYPE</name><argument_list pos:start="55:30" pos:end="55:34">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><literal type="string" pos:start="55:31" pos:end="55:33">"S"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:27"><expr pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:24">mcsel</name></name><operator pos:start="57:25" pos:end="57:25">=</operator><literal type="number" pos:start="57:26" pos:end="57:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:35"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:21">mv</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>]</index><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>]</index><index pos:start="59:28" pos:end="59:30">[<expr pos:start="59:29" pos:end="59:29"><literal type="number" pos:start="59:29" pos:end="59:29">0</literal></expr>]</index></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:35"><expr pos:start="61:17" pos:end="61:34"><name pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:21">mv</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>]</index><index pos:start="61:25" pos:end="61:27">[<expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr>]</index><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr>]</index></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:28">mb_skiped</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <literal type="number" pos:start="63:32" pos:end="63:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <goto pos:start="67:13" pos:end="67:21">goto <name pos:start="67:18" pos:end="67:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:80"><expr pos:start="71:9" pos:end="71:79"><name pos:start="71:9" pos:end="71:12">cbpc</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:79"><name pos:start="71:16" pos:end="71:23">get_vlc2</name><argument_list pos:start="71:24" pos:end="71:79">(<argument pos:start="71:25" pos:end="71:30"><expr pos:start="71:25" pos:end="71:30"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:30"><name pos:start="71:26" pos:end="71:26">s</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:30">gb</name></name></expr></argument>, <argument pos:start="71:33" pos:end="71:53"><expr pos:start="71:33" pos:end="71:53"><name pos:start="71:33" pos:end="71:53"><name pos:start="71:33" pos:end="71:47">inter_MCBPC_vlc</name><operator pos:start="71:48" pos:end="71:48">.</operator><name pos:start="71:49" pos:end="71:53">table</name></name></expr></argument>, <argument pos:start="71:56" pos:end="71:75"><expr pos:start="71:56" pos:end="71:75"><name pos:start="71:56" pos:end="71:75">INTER_MCBPC_VLC_BITS</name></expr></argument>, <argument pos:start="71:78" pos:end="71:78"><expr pos:start="71:78" pos:end="71:78"><literal type="number" pos:start="71:78" pos:end="71:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="73:9" pos:end="73:46">//fprintf(stderr, "\tCBPC: %d", cbpc);</comment>

        <if_stmt pos:start="75:9" pos:end="77:22"><if pos:start="75:9" pos:end="77:22">if <condition pos:start="75:12" pos:end="75:21">(<expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:16">cbpc</name> <operator pos:start="75:18" pos:end="75:18">&lt;</operator> <literal type="number" pos:start="75:20" pos:end="75:20">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:22"><block_content pos:start="77:13" pos:end="77:22">

            <return pos:start="77:13" pos:end="77:22">return <expr pos:start="77:20" pos:end="77:21"><operator pos:start="77:20" pos:end="77:20">-</operator><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="85:42"><if pos:start="79:9" pos:end="81:20">if <condition pos:start="79:12" pos:end="79:22">(<expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:16">cbpc</name> <operator pos:start="79:18" pos:end="79:18">&gt;</operator> <literal type="number" pos:start="79:20" pos:end="79:21">20</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:20"><block_content pos:start="81:13" pos:end="81:20">

            <expr_stmt pos:start="81:13" pos:end="81:20"><expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:16">cbpc</name><operator pos:start="81:17" pos:end="81:18">+=</operator><literal type="number" pos:start="81:19" pos:end="81:19">3</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="83:9" pos:end="85:42">else if <condition pos:start="83:17" pos:end="83:28">(<expr pos:start="83:18" pos:end="83:27"><name pos:start="83:18" pos:end="83:21">cbpc</name> <operator pos:start="83:23" pos:end="83:24">==</operator> <literal type="number" pos:start="83:26" pos:end="83:27">20</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:42"><block_content pos:start="85:13" pos:end="85:42">

            <expr_stmt pos:start="85:13" pos:end="85:42"><expr pos:start="85:13" pos:end="85:41"><call pos:start="85:13" pos:end="85:41"><name pos:start="85:13" pos:end="85:19">fprintf</name><argument_list pos:start="85:20" pos:end="85:41">(<argument pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:26">stderr</name></expr></argument>, <argument pos:start="85:29" pos:end="85:40"><expr pos:start="85:29" pos:end="85:40"><literal type="string" pos:start="85:29" pos:end="85:40">"Stuffing !"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:14">dquant</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:21">cbpc</name> <operator pos:start="89:23" pos:end="89:23">&amp;</operator> <literal type="number" pos:start="89:25" pos:end="89:25">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:19">mb_intra</name></name> <operator pos:start="91:21" pos:end="91:21">=</operator> <operator pos:start="91:23" pos:end="91:23">(</operator><operator pos:start="91:24" pos:end="91:24">(</operator><name pos:start="91:25" pos:end="91:28">cbpc</name> <operator pos:start="91:30" pos:end="91:30">&amp;</operator> <literal type="number" pos:start="91:32" pos:end="91:32">4</literal><operator pos:start="91:33" pos:end="91:33">)</operator> <operator pos:start="91:35" pos:end="91:36">!=</operator> <literal type="number" pos:start="91:38" pos:end="91:38">0</literal><operator pos:start="91:39" pos:end="91:39">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="93:36"><if pos:start="93:9" pos:end="93:36">if <condition pos:start="93:12" pos:end="93:24">(<expr pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="93:26" pos:end="93:36"><block_content pos:start="93:26" pos:end="93:36"> <goto pos:start="93:26" pos:end="93:36">goto <name pos:start="93:31" pos:end="93:35">intra</name>;</goto></block_content></block></if></if_stmt>

        

        <if_stmt pos:start="97:9" pos:end="101:25"><if pos:start="97:9" pos:end="99:40">if<condition pos:start="97:11" pos:end="97:87">(<expr pos:start="97:12" pos:end="97:86"><name pos:start="97:12" pos:end="97:23"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:23">pict_type</name></name><operator pos:start="97:24" pos:end="97:25">==</operator><name pos:start="97:26" pos:end="97:31">S_TYPE</name> <operator pos:start="97:33" pos:end="97:34">&amp;&amp;</operator> <name pos:start="97:36" pos:end="97:54"><name pos:start="97:36" pos:end="97:36">s</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:54">vol_sprite_usage</name></name><operator pos:start="97:55" pos:end="97:56">==</operator><name pos:start="97:57" pos:end="97:66">GMC_SPRITE</name> <operator pos:start="97:68" pos:end="97:69">&amp;&amp;</operator> <operator pos:start="97:71" pos:end="97:71">(</operator><name pos:start="97:72" pos:end="97:75">cbpc</name> <operator pos:start="97:77" pos:end="97:77">&amp;</operator> <literal type="number" pos:start="97:79" pos:end="97:80">16</literal><operator pos:start="97:81" pos:end="97:81">)</operator> <operator pos:start="97:83" pos:end="97:84">==</operator> <literal type="number" pos:start="97:86" pos:end="97:86">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:40"><block_content pos:start="99:13" pos:end="99:40">

            <expr_stmt pos:start="99:13" pos:end="99:40"><expr pos:start="99:13" pos:end="99:39"><name pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:20">mcsel</name></name><operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:39"><name pos:start="99:23" pos:end="99:31">get_bits1</name><argument_list pos:start="99:32" pos:end="99:39">(<argument pos:start="99:33" pos:end="99:38"><expr pos:start="99:33" pos:end="99:38"><operator pos:start="99:33" pos:end="99:33">&amp;</operator><name pos:start="99:34" pos:end="99:38"><name pos:start="99:34" pos:end="99:34">s</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="101:9" pos:end="101:25">else<block type="pseudo" pos:start="101:14" pos:end="101:25"><block_content pos:start="101:14" pos:end="101:25"> <expr_stmt pos:start="101:14" pos:end="101:25"><expr pos:start="101:14" pos:end="101:24"><name pos:start="101:14" pos:end="101:21"><name pos:start="101:14" pos:end="101:14">s</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:21">mcsel</name></name><operator pos:start="101:22" pos:end="101:22">=</operator> <literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:66"><expr pos:start="103:9" pos:end="103:65"><name pos:start="103:9" pos:end="103:12">cbpy</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <call pos:start="103:16" pos:end="103:65"><name pos:start="103:16" pos:end="103:23">get_vlc2</name><argument_list pos:start="103:24" pos:end="103:65">(<argument pos:start="103:25" pos:end="103:30"><expr pos:start="103:25" pos:end="103:30"><operator pos:start="103:25" pos:end="103:25">&amp;</operator><name pos:start="103:26" pos:end="103:30"><name pos:start="103:26" pos:end="103:26">s</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:30">gb</name></name></expr></argument>, <argument pos:start="103:33" pos:end="103:46"><expr pos:start="103:33" pos:end="103:46"><name pos:start="103:33" pos:end="103:46"><name pos:start="103:33" pos:end="103:40">cbpy_vlc</name><operator pos:start="103:41" pos:end="103:41">.</operator><name pos:start="103:42" pos:end="103:46">table</name></name></expr></argument>, <argument pos:start="103:49" pos:end="103:61"><expr pos:start="103:49" pos:end="103:61"><name pos:start="103:49" pos:end="103:61">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="103:64" pos:end="103:64"><expr pos:start="103:64" pos:end="103:64"><literal type="number" pos:start="103:64" pos:end="103:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:47"><expr pos:start="105:9" pos:end="105:46"><name pos:start="105:9" pos:end="105:11">cbp</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <operator pos:start="105:15" pos:end="105:15">(</operator><name pos:start="105:16" pos:end="105:19">cbpc</name> <operator pos:start="105:21" pos:end="105:21">&amp;</operator> <literal type="number" pos:start="105:23" pos:end="105:23">3</literal><operator pos:start="105:24" pos:end="105:24">)</operator> <operator pos:start="105:26" pos:end="105:26">|</operator> <operator pos:start="105:28" pos:end="105:28">(</operator><operator pos:start="105:29" pos:end="105:29">(</operator><name pos:start="105:30" pos:end="105:33">cbpy</name> <operator pos:start="105:35" pos:end="105:35">^</operator> <literal type="number" pos:start="105:37" pos:end="105:39">0xf</literal><operator pos:start="105:40" pos:end="105:40">)</operator> <operator pos:start="105:42" pos:end="105:43">&lt;&lt;</operator> <literal type="number" pos:start="105:45" pos:end="105:45">2</literal><operator pos:start="105:46" pos:end="105:46">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:19">(<expr pos:start="107:13" pos:end="107:18"><name pos:start="107:13" pos:end="107:18">dquant</name></expr>)</condition> <block pos:start="107:21" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:61">

            <expr_stmt pos:start="109:13" pos:end="109:61"><expr pos:start="109:13" pos:end="109:60"><call pos:start="109:13" pos:end="109:60"><name pos:start="109:13" pos:end="109:25">change_qscale</name><argument_list pos:start="109:26" pos:end="109:60">(<argument pos:start="109:27" pos:end="109:27"><expr pos:start="109:27" pos:end="109:27"><name pos:start="109:27" pos:end="109:27">s</name></expr></argument>, <argument pos:start="109:30" pos:end="109:59"><expr pos:start="109:30" pos:end="109:59"><name pos:start="109:30" pos:end="109:59"><name pos:start="109:30" pos:end="109:38">quant_tab</name><index pos:start="109:39" pos:end="109:59">[<expr pos:start="109:40" pos:end="109:58"><call pos:start="109:40" pos:end="109:58"><name pos:start="109:40" pos:end="109:47">get_bits</name><argument_list pos:start="109:48" pos:end="109:58">(<argument pos:start="109:49" pos:end="109:54"><expr pos:start="109:49" pos:end="109:54"><operator pos:start="109:49" pos:end="109:49">&amp;</operator><name pos:start="109:50" pos:end="109:54"><name pos:start="109:50" pos:end="109:50">s</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:54">gb</name></name></expr></argument>, <argument pos:start="109:57" pos:end="109:57"><expr pos:start="109:57" pos:end="109:57"><literal type="number" pos:start="109:57" pos:end="109:57">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="115:49"><if pos:start="113:9" pos:end="115:49">if<condition pos:start="113:11" pos:end="113:89">(<expr pos:start="113:12" pos:end="113:88"><operator pos:start="113:12" pos:end="113:12">(</operator><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:36"><name pos:start="113:14" pos:end="113:14">s</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:36">progressive_sequence</name></name><operator pos:start="113:37" pos:end="113:37">)</operator> <operator pos:start="113:39" pos:end="113:40">&amp;&amp;</operator> <operator pos:start="113:42" pos:end="113:42">(</operator><name pos:start="113:43" pos:end="113:45">cbp</name> <operator pos:start="113:47" pos:end="113:48">||</operator> <operator pos:start="113:50" pos:end="113:50">(</operator><name pos:start="113:51" pos:end="113:68"><name pos:start="113:51" pos:end="113:51">s</name><operator pos:start="113:52" pos:end="113:53">-&gt;</operator><name pos:start="113:54" pos:end="113:68">workaround_bugs</name></name><operator pos:start="113:69" pos:end="113:69">&amp;</operator><name pos:start="113:70" pos:end="113:86">FF_BUG_XVID_ILACE</name><operator pos:start="113:87" pos:end="113:87">)</operator><operator pos:start="113:88" pos:end="113:88">)</operator></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:49"><block_content pos:start="115:13" pos:end="115:49">

            <expr_stmt pos:start="115:13" pos:end="115:49"><expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:29">interlaced_dct</name></name><operator pos:start="115:30" pos:end="115:30">=</operator> <call pos:start="115:32" pos:end="115:48"><name pos:start="115:32" pos:end="115:40">get_bits1</name><argument_list pos:start="115:41" pos:end="115:48">(<argument pos:start="115:42" pos:end="115:47"><expr pos:start="115:42" pos:end="115:47"><operator pos:start="115:42" pos:end="115:42">&amp;</operator><name pos:start="115:43" pos:end="115:47"><name pos:start="115:43" pos:end="115:43">s</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

        <expr_stmt pos:start="119:9" pos:end="119:35"><expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:17">mv_dir</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:34">MV_DIR_FORWARD</name></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="285:9"><if pos:start="121:9" pos:end="235:9">if <condition pos:start="121:12" pos:end="121:29">(<expr pos:start="121:13" pos:end="121:28"><operator pos:start="121:13" pos:end="121:13">(</operator><name pos:start="121:14" pos:end="121:17">cbpc</name> <operator pos:start="121:19" pos:end="121:19">&amp;</operator> <literal type="number" pos:start="121:21" pos:end="121:22">16</literal><operator pos:start="121:23" pos:end="121:23">)</operator> <operator pos:start="121:25" pos:end="121:26">==</operator> <literal type="number" pos:start="121:28" pos:end="121:28">0</literal></expr>)</condition> <block pos:start="121:31" pos:end="235:9">{<block_content pos:start="123:13" pos:end="233:13">

            <if_stmt pos:start="123:13" pos:end="233:13"><if pos:start="123:13" pos:end="139:13">if<condition pos:start="123:15" pos:end="123:24">(<expr pos:start="123:16" pos:end="123:23"><name pos:start="123:16" pos:end="123:23"><name pos:start="123:16" pos:end="123:16">s</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:23">mcsel</name></name></expr>)</condition><block pos:start="123:25" pos:end="139:13">{<block_content pos:start="125:17" pos:end="137:36">

                <expr_stmt pos:start="125:17" pos:end="125:35"><expr pos:start="125:17" pos:end="125:34"><call pos:start="125:17" pos:end="125:34"><name pos:start="125:17" pos:end="125:29">PRINT_MB_TYPE</name><argument_list pos:start="125:30" pos:end="125:34">(<argument pos:start="125:31" pos:end="125:33"><expr pos:start="125:31" pos:end="125:33"><literal type="string" pos:start="125:31" pos:end="125:33">"G"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="127:17" pos:end="127:52">/* 16x16 global motion prediction */</comment>

                <expr_stmt pos:start="129:17" pos:end="129:43"><expr pos:start="129:17" pos:end="129:42"><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:26">mv_type</name></name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:34"><expr pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:18">mx</name><operator pos:start="131:19" pos:end="131:19">=</operator> <call pos:start="131:21" pos:end="131:33"><name pos:start="131:21" pos:end="131:27">get_amv</name><argument_list pos:start="131:28" pos:end="131:33">(<argument pos:start="131:29" pos:end="131:29"><expr pos:start="131:29" pos:end="131:29"><name pos:start="131:29" pos:end="131:29">s</name></expr></argument>, <argument pos:start="131:32" pos:end="131:32"><expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:34"><expr pos:start="133:17" pos:end="133:33"><name pos:start="133:17" pos:end="133:18">my</name><operator pos:start="133:19" pos:end="133:19">=</operator> <call pos:start="133:21" pos:end="133:33"><name pos:start="133:21" pos:end="133:27">get_amv</name><argument_list pos:start="133:28" pos:end="133:33">(<argument pos:start="133:29" pos:end="133:29"><expr pos:start="133:29" pos:end="133:29"><name pos:start="133:29" pos:end="133:29">s</name></expr></argument>, <argument pos:start="133:32" pos:end="133:32"><expr pos:start="133:32" pos:end="133:32"><literal type="number" pos:start="133:32" pos:end="133:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:36"><expr pos:start="135:17" pos:end="135:35"><name pos:start="135:17" pos:end="135:30"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:21">mv</name><index pos:start="135:22" pos:end="135:24">[<expr pos:start="135:23" pos:end="135:23"><literal type="number" pos:start="135:23" pos:end="135:23">0</literal></expr>]</index><index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>]</index><index pos:start="135:28" pos:end="135:30">[<expr pos:start="135:29" pos:end="135:29"><literal type="number" pos:start="135:29" pos:end="135:29">0</literal></expr>]</index></name> <operator pos:start="135:32" pos:end="135:32">=</operator> <name pos:start="135:34" pos:end="135:35">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:36"><expr pos:start="137:17" pos:end="137:35"><name pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:21">mv</name><index pos:start="137:22" pos:end="137:24">[<expr pos:start="137:23" pos:end="137:23"><literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>]</index><index pos:start="137:25" pos:end="137:27">[<expr pos:start="137:26" pos:end="137:26"><literal type="number" pos:start="137:26" pos:end="137:26">0</literal></expr>]</index><index pos:start="137:28" pos:end="137:30">[<expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">1</literal></expr>]</index></name> <operator pos:start="137:32" pos:end="137:32">=</operator> <name pos:start="137:34" pos:end="137:35">my</name></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="139:14" pos:end="183:13">else if<condition pos:start="139:21" pos:end="139:69">(<expr pos:start="139:22" pos:end="139:68"><operator pos:start="139:22" pos:end="139:22">(</operator><operator pos:start="139:23" pos:end="139:23">!</operator><name pos:start="139:24" pos:end="139:46"><name pos:start="139:24" pos:end="139:24">s</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:46">progressive_sequence</name></name><operator pos:start="139:47" pos:end="139:47">)</operator> <operator pos:start="139:49" pos:end="139:50">&amp;&amp;</operator> <call pos:start="139:52" pos:end="139:68"><name pos:start="139:52" pos:end="139:60">get_bits1</name><argument_list pos:start="139:61" pos:end="139:68">(<argument pos:start="139:62" pos:end="139:67"><expr pos:start="139:62" pos:end="139:67"><operator pos:start="139:62" pos:end="139:62">&amp;</operator><name pos:start="139:63" pos:end="139:67"><name pos:start="139:63" pos:end="139:63">s</name><operator pos:start="139:64" pos:end="139:65">-&gt;</operator><name pos:start="139:66" pos:end="139:67">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="139:70" pos:end="183:13">{<block_content pos:start="141:17" pos:end="181:17">

                <expr_stmt pos:start="141:17" pos:end="141:35"><expr pos:start="141:17" pos:end="141:34"><call pos:start="141:17" pos:end="141:34"><name pos:start="141:17" pos:end="141:29">PRINT_MB_TYPE</name><argument_list pos:start="141:30" pos:end="141:34">(<argument pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><literal type="string" pos:start="141:31" pos:end="141:33">"f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="143:17" pos:end="143:50">/* 16x8 field motion prediction */</comment>

                <expr_stmt pos:start="145:17" pos:end="145:42"><expr pos:start="145:17" pos:end="145:41"><name pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:26">mv_type</name></name><operator pos:start="145:27" pos:end="145:27">=</operator> <name pos:start="145:29" pos:end="145:41">MV_TYPE_FIELD</name></expr>;</expr_stmt>



                <expr_stmt pos:start="149:17" pos:end="149:57"><expr pos:start="149:17" pos:end="149:56"><name pos:start="149:17" pos:end="149:37"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:31">field_select</name><index pos:start="149:32" pos:end="149:34">[<expr pos:start="149:33" pos:end="149:33"><literal type="number" pos:start="149:33" pos:end="149:33">0</literal></expr>]</index><index pos:start="149:35" pos:end="149:37">[<expr pos:start="149:36" pos:end="149:36"><literal type="number" pos:start="149:36" pos:end="149:36">0</literal></expr>]</index></name><operator pos:start="149:38" pos:end="149:38">=</operator> <call pos:start="149:40" pos:end="149:56"><name pos:start="149:40" pos:end="149:48">get_bits1</name><argument_list pos:start="149:49" pos:end="149:56">(<argument pos:start="149:50" pos:end="149:55"><expr pos:start="149:50" pos:end="149:55"><operator pos:start="149:50" pos:end="149:50">&amp;</operator><name pos:start="149:51" pos:end="149:55"><name pos:start="149:51" pos:end="149:51">s</name><operator pos:start="149:52" pos:end="149:53">-&gt;</operator><name pos:start="149:54" pos:end="149:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:57"><expr pos:start="151:17" pos:end="151:56"><name pos:start="151:17" pos:end="151:37"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:31">field_select</name><index pos:start="151:32" pos:end="151:34">[<expr pos:start="151:33" pos:end="151:33"><literal type="number" pos:start="151:33" pos:end="151:33">0</literal></expr>]</index><index pos:start="151:35" pos:end="151:37">[<expr pos:start="151:36" pos:end="151:36"><literal type="number" pos:start="151:36" pos:end="151:36">1</literal></expr>]</index></name><operator pos:start="151:38" pos:end="151:38">=</operator> <call pos:start="151:40" pos:end="151:56"><name pos:start="151:40" pos:end="151:48">get_bits1</name><argument_list pos:start="151:49" pos:end="151:56">(<argument pos:start="151:50" pos:end="151:55"><expr pos:start="151:50" pos:end="151:55"><operator pos:start="151:50" pos:end="151:50">&amp;</operator><name pos:start="151:51" pos:end="151:55"><name pos:start="151:51" pos:end="151:51">s</name><operator pos:start="151:52" pos:end="151:53">-&gt;</operator><name pos:start="151:54" pos:end="151:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="155:17" pos:end="155:57"><expr pos:start="155:17" pos:end="155:56"><call pos:start="155:17" pos:end="155:56"><name pos:start="155:17" pos:end="155:32">h263_pred_motion</name><argument_list pos:start="155:33" pos:end="155:56">(<argument pos:start="155:34" pos:end="155:34"><expr pos:start="155:34" pos:end="155:34"><name pos:start="155:34" pos:end="155:34">s</name></expr></argument>, <argument pos:start="155:37" pos:end="155:37"><expr pos:start="155:37" pos:end="155:37"><literal type="number" pos:start="155:37" pos:end="155:37">0</literal></expr></argument>, <argument pos:start="155:40" pos:end="155:46"><expr pos:start="155:40" pos:end="155:46"><operator pos:start="155:40" pos:end="155:40">&amp;</operator><name pos:start="155:41" pos:end="155:46">pred_x</name></expr></argument>, <argument pos:start="155:49" pos:end="155:55"><expr pos:start="155:49" pos:end="155:55"><operator pos:start="155:49" pos:end="155:49">&amp;</operator><name pos:start="155:50" pos:end="155:55">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                

                <for pos:start="159:17" pos:end="181:17">for<control pos:start="159:20" pos:end="159:34">(<init pos:start="159:21" pos:end="159:24"><expr pos:start="159:21" pos:end="159:23"><name pos:start="159:21" pos:end="159:21">i</name><operator pos:start="159:22" pos:end="159:22">=</operator><literal type="number" pos:start="159:23" pos:end="159:23">0</literal></expr>;</init> <condition pos:start="159:26" pos:end="159:29"><expr pos:start="159:26" pos:end="159:28"><name pos:start="159:26" pos:end="159:26">i</name><operator pos:start="159:27" pos:end="159:27">&lt;</operator><literal type="number" pos:start="159:28" pos:end="159:28">2</literal></expr>;</condition> <incr pos:start="159:31" pos:end="159:33"><expr pos:start="159:31" pos:end="159:33"><name pos:start="159:31" pos:end="159:31">i</name><operator pos:start="159:32" pos:end="159:33">++</operator></expr></incr>)</control><block pos:start="159:35" pos:end="181:17">{<block_content pos:start="161:21" pos:end="179:40">

                    <expr_stmt pos:start="161:21" pos:end="161:66"><expr pos:start="161:21" pos:end="161:65"><name pos:start="161:21" pos:end="161:22">mx</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <call pos:start="161:26" pos:end="161:65"><name pos:start="161:26" pos:end="161:43">h263_decode_motion</name><argument_list pos:start="161:44" pos:end="161:65">(<argument pos:start="161:45" pos:end="161:45"><expr pos:start="161:45" pos:end="161:45"><name pos:start="161:45" pos:end="161:45">s</name></expr></argument>, <argument pos:start="161:48" pos:end="161:53"><expr pos:start="161:48" pos:end="161:53"><name pos:start="161:48" pos:end="161:53">pred_x</name></expr></argument>, <argument pos:start="161:56" pos:end="161:64"><expr pos:start="161:56" pos:end="161:64"><name pos:start="161:56" pos:end="161:64"><name pos:start="161:56" pos:end="161:56">s</name><operator pos:start="161:57" pos:end="161:58">-&gt;</operator><name pos:start="161:59" pos:end="161:64">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="163:21" pos:end="165:34"><if pos:start="163:21" pos:end="165:34">if <condition pos:start="163:24" pos:end="163:37">(<expr pos:start="163:25" pos:end="163:36"><name pos:start="163:25" pos:end="163:26">mx</name> <operator pos:start="163:28" pos:end="163:29">&gt;=</operator> <literal type="number" pos:start="163:31" pos:end="163:36">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="165:25" pos:end="165:34"><block_content pos:start="165:25" pos:end="165:34">

                        <return pos:start="165:25" pos:end="165:34">return <expr pos:start="165:32" pos:end="165:33"><operator pos:start="165:32" pos:end="165:32">-</operator><literal type="number" pos:start="165:33" pos:end="165:33">1</literal></expr>;</return></block_content></block></if></if_stmt>

            

                    <expr_stmt pos:start="169:21" pos:end="169:68"><expr pos:start="169:21" pos:end="169:67"><name pos:start="169:21" pos:end="169:22">my</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <call pos:start="169:26" pos:end="169:67"><name pos:start="169:26" pos:end="169:43">h263_decode_motion</name><argument_list pos:start="169:44" pos:end="169:67">(<argument pos:start="169:45" pos:end="169:45"><expr pos:start="169:45" pos:end="169:45"><name pos:start="169:45" pos:end="169:45">s</name></expr></argument>, <argument pos:start="169:48" pos:end="169:55"><expr pos:start="169:48" pos:end="169:55"><name pos:start="169:48" pos:end="169:53">pred_y</name><operator pos:start="169:54" pos:end="169:54">/</operator><literal type="number" pos:start="169:55" pos:end="169:55">2</literal></expr></argument>, <argument pos:start="169:58" pos:end="169:66"><expr pos:start="169:58" pos:end="169:66"><name pos:start="169:58" pos:end="169:66"><name pos:start="169:58" pos:end="169:58">s</name><operator pos:start="169:59" pos:end="169:60">-&gt;</operator><name pos:start="169:61" pos:end="169:66">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="171:21" pos:end="173:34"><if pos:start="171:21" pos:end="173:34">if <condition pos:start="171:24" pos:end="171:37">(<expr pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:26">my</name> <operator pos:start="171:28" pos:end="171:29">&gt;=</operator> <literal type="number" pos:start="171:31" pos:end="171:36">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="173:25" pos:end="173:34"><block_content pos:start="173:25" pos:end="173:34">

                        <return pos:start="173:25" pos:end="173:34">return <expr pos:start="173:32" pos:end="173:33"><operator pos:start="173:32" pos:end="173:32">-</operator><literal type="number" pos:start="173:33" pos:end="173:33">1</literal></expr>;</return></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="177:21" pos:end="177:40"><expr pos:start="177:21" pos:end="177:39"><name pos:start="177:21" pos:end="177:34"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:25">mv</name><index pos:start="177:26" pos:end="177:28">[<expr pos:start="177:27" pos:end="177:27"><literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr>]</index><index pos:start="177:29" pos:end="177:31">[<expr pos:start="177:30" pos:end="177:30"><name pos:start="177:30" pos:end="177:30">i</name></expr>]</index><index pos:start="177:32" pos:end="177:34">[<expr pos:start="177:33" pos:end="177:33"><literal type="number" pos:start="177:33" pos:end="177:33">0</literal></expr>]</index></name> <operator pos:start="177:36" pos:end="177:36">=</operator> <name pos:start="177:38" pos:end="177:39">mx</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:40"><expr pos:start="179:21" pos:end="179:39"><name pos:start="179:21" pos:end="179:34"><name pos:start="179:21" pos:end="179:21">s</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:25">mv</name><index pos:start="179:26" pos:end="179:28">[<expr pos:start="179:27" pos:end="179:27"><literal type="number" pos:start="179:27" pos:end="179:27">0</literal></expr>]</index><index pos:start="179:29" pos:end="179:31">[<expr pos:start="179:30" pos:end="179:30"><name pos:start="179:30" pos:end="179:30">i</name></expr>]</index><index pos:start="179:32" pos:end="179:34">[<expr pos:start="179:33" pos:end="179:33"><literal type="number" pos:start="179:33" pos:end="179:33">1</literal></expr>]</index></name> <operator pos:start="179:36" pos:end="179:36">=</operator> <name pos:start="179:38" pos:end="179:39">my</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if><else pos:start="183:14" pos:end="233:13">else<block pos:start="183:18" pos:end="233:13">{<block_content pos:start="185:17" pos:end="231:38">

                <expr_stmt pos:start="185:17" pos:end="185:35"><expr pos:start="185:17" pos:end="185:34"><call pos:start="185:17" pos:end="185:34"><name pos:start="185:17" pos:end="185:29">PRINT_MB_TYPE</name><argument_list pos:start="185:30" pos:end="185:34">(<argument pos:start="185:31" pos:end="185:33"><expr pos:start="185:31" pos:end="185:33"><literal type="string" pos:start="185:31" pos:end="185:33">"P"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="187:17" pos:end="187:45">/* 16x16 motion prediction */</comment>

                <expr_stmt pos:start="189:17" pos:end="189:43"><expr pos:start="189:17" pos:end="189:42"><name pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:26">mv_type</name></name> <operator pos:start="189:28" pos:end="189:28">=</operator> <name pos:start="189:30" pos:end="189:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:57"><expr pos:start="191:17" pos:end="191:56"><call pos:start="191:17" pos:end="191:56"><name pos:start="191:17" pos:end="191:32">h263_pred_motion</name><argument_list pos:start="191:33" pos:end="191:56">(<argument pos:start="191:34" pos:end="191:34"><expr pos:start="191:34" pos:end="191:34"><name pos:start="191:34" pos:end="191:34">s</name></expr></argument>, <argument pos:start="191:37" pos:end="191:37"><expr pos:start="191:37" pos:end="191:37"><literal type="number" pos:start="191:37" pos:end="191:37">0</literal></expr></argument>, <argument pos:start="191:40" pos:end="191:46"><expr pos:start="191:40" pos:end="191:46"><operator pos:start="191:40" pos:end="191:40">&amp;</operator><name pos:start="191:41" pos:end="191:46">pred_x</name></expr></argument>, <argument pos:start="191:49" pos:end="191:55"><expr pos:start="191:49" pos:end="191:55"><operator pos:start="191:49" pos:end="191:49">&amp;</operator><name pos:start="191:50" pos:end="191:55">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="193:17" pos:end="199:65"><if pos:start="193:17" pos:end="195:56">if <condition pos:start="193:20" pos:end="193:35">(<expr pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:21">s</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:34">umvplus_dec</name></name></expr>)</condition><block type="pseudo" pos:start="195:20" pos:end="195:56"><block_content pos:start="195:20" pos:end="195:56">

                   <expr_stmt pos:start="195:20" pos:end="195:56"><expr pos:start="195:20" pos:end="195:55"><name pos:start="195:20" pos:end="195:21">mx</name> <operator pos:start="195:23" pos:end="195:23">=</operator> <call pos:start="195:25" pos:end="195:55"><name pos:start="195:25" pos:end="195:44">h263p_decode_umotion</name><argument_list pos:start="195:45" pos:end="195:55">(<argument pos:start="195:46" pos:end="195:46"><expr pos:start="195:46" pos:end="195:46"><name pos:start="195:46" pos:end="195:46">s</name></expr></argument>, <argument pos:start="195:49" pos:end="195:54"><expr pos:start="195:49" pos:end="195:54"><name pos:start="195:49" pos:end="195:54">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="197:17" pos:end="199:65">else<block type="pseudo" pos:start="199:20" pos:end="199:65"><block_content pos:start="199:20" pos:end="199:65">

                   <expr_stmt pos:start="199:20" pos:end="199:65"><expr pos:start="199:20" pos:end="199:64"><name pos:start="199:20" pos:end="199:21">mx</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <call pos:start="199:25" pos:end="199:64"><name pos:start="199:25" pos:end="199:42">h263_decode_motion</name><argument_list pos:start="199:43" pos:end="199:64">(<argument pos:start="199:44" pos:end="199:44"><expr pos:start="199:44" pos:end="199:44"><name pos:start="199:44" pos:end="199:44">s</name></expr></argument>, <argument pos:start="199:47" pos:end="199:52"><expr pos:start="199:47" pos:end="199:52"><name pos:start="199:47" pos:end="199:52">pred_x</name></expr></argument>, <argument pos:start="199:55" pos:end="199:63"><expr pos:start="199:55" pos:end="199:63"><name pos:start="199:55" pos:end="199:63"><name pos:start="199:55" pos:end="199:55">s</name><operator pos:start="199:56" pos:end="199:57">-&gt;</operator><name pos:start="199:58" pos:end="199:63">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

                <if_stmt pos:start="203:17" pos:end="205:30"><if pos:start="203:17" pos:end="205:30">if <condition pos:start="203:20" pos:end="203:33">(<expr pos:start="203:21" pos:end="203:32"><name pos:start="203:21" pos:end="203:22">mx</name> <operator pos:start="203:24" pos:end="203:25">&gt;=</operator> <literal type="number" pos:start="203:27" pos:end="203:32">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="205:21" pos:end="205:30"><block_content pos:start="205:21" pos:end="205:30">

                    <return pos:start="205:21" pos:end="205:30">return <expr pos:start="205:28" pos:end="205:29"><operator pos:start="205:28" pos:end="205:28">-</operator><literal type="number" pos:start="205:29" pos:end="205:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            

                <if_stmt pos:start="209:17" pos:end="215:65"><if pos:start="209:17" pos:end="211:56">if <condition pos:start="209:20" pos:end="209:35">(<expr pos:start="209:21" pos:end="209:34"><name pos:start="209:21" pos:end="209:34"><name pos:start="209:21" pos:end="209:21">s</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:34">umvplus_dec</name></name></expr>)</condition><block type="pseudo" pos:start="211:20" pos:end="211:56"><block_content pos:start="211:20" pos:end="211:56">

                   <expr_stmt pos:start="211:20" pos:end="211:56"><expr pos:start="211:20" pos:end="211:55"><name pos:start="211:20" pos:end="211:21">my</name> <operator pos:start="211:23" pos:end="211:23">=</operator> <call pos:start="211:25" pos:end="211:55"><name pos:start="211:25" pos:end="211:44">h263p_decode_umotion</name><argument_list pos:start="211:45" pos:end="211:55">(<argument pos:start="211:46" pos:end="211:46"><expr pos:start="211:46" pos:end="211:46"><name pos:start="211:46" pos:end="211:46">s</name></expr></argument>, <argument pos:start="211:49" pos:end="211:54"><expr pos:start="211:49" pos:end="211:54"><name pos:start="211:49" pos:end="211:54">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="213:17" pos:end="215:65">else<block type="pseudo" pos:start="215:20" pos:end="215:65"><block_content pos:start="215:20" pos:end="215:65">

                   <expr_stmt pos:start="215:20" pos:end="215:65"><expr pos:start="215:20" pos:end="215:64"><name pos:start="215:20" pos:end="215:21">my</name> <operator pos:start="215:23" pos:end="215:23">=</operator> <call pos:start="215:25" pos:end="215:64"><name pos:start="215:25" pos:end="215:42">h263_decode_motion</name><argument_list pos:start="215:43" pos:end="215:64">(<argument pos:start="215:44" pos:end="215:44"><expr pos:start="215:44" pos:end="215:44"><name pos:start="215:44" pos:end="215:44">s</name></expr></argument>, <argument pos:start="215:47" pos:end="215:52"><expr pos:start="215:47" pos:end="215:52"><name pos:start="215:47" pos:end="215:52">pred_y</name></expr></argument>, <argument pos:start="215:55" pos:end="215:63"><expr pos:start="215:55" pos:end="215:63"><name pos:start="215:55" pos:end="215:63"><name pos:start="215:55" pos:end="215:55">s</name><operator pos:start="215:56" pos:end="215:57">-&gt;</operator><name pos:start="215:58" pos:end="215:63">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

                <if_stmt pos:start="219:17" pos:end="221:30"><if pos:start="219:17" pos:end="221:30">if <condition pos:start="219:20" pos:end="219:33">(<expr pos:start="219:21" pos:end="219:32"><name pos:start="219:21" pos:end="219:22">my</name> <operator pos:start="219:24" pos:end="219:25">&gt;=</operator> <literal type="number" pos:start="219:27" pos:end="219:32">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:30"><block_content pos:start="221:21" pos:end="221:30">

                    <return pos:start="221:21" pos:end="221:30">return <expr pos:start="221:28" pos:end="221:29"><operator pos:start="221:28" pos:end="221:28">-</operator><literal type="number" pos:start="221:29" pos:end="221:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:36"><expr pos:start="223:17" pos:end="223:35"><name pos:start="223:17" pos:end="223:30"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:21">mv</name><index pos:start="223:22" pos:end="223:24">[<expr pos:start="223:23" pos:end="223:23"><literal type="number" pos:start="223:23" pos:end="223:23">0</literal></expr>]</index><index pos:start="223:25" pos:end="223:27">[<expr pos:start="223:26" pos:end="223:26"><literal type="number" pos:start="223:26" pos:end="223:26">0</literal></expr>]</index><index pos:start="223:28" pos:end="223:30">[<expr pos:start="223:29" pos:end="223:29"><literal type="number" pos:start="223:29" pos:end="223:29">0</literal></expr>]</index></name> <operator pos:start="223:32" pos:end="223:32">=</operator> <name pos:start="223:34" pos:end="223:35">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:36"><expr pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:17">s</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:21">mv</name><index pos:start="225:22" pos:end="225:24">[<expr pos:start="225:23" pos:end="225:23"><literal type="number" pos:start="225:23" pos:end="225:23">0</literal></expr>]</index><index pos:start="225:25" pos:end="225:27">[<expr pos:start="225:26" pos:end="225:26"><literal type="number" pos:start="225:26" pos:end="225:26">0</literal></expr>]</index><index pos:start="225:28" pos:end="225:30">[<expr pos:start="225:29" pos:end="225:29"><literal type="number" pos:start="225:29" pos:end="225:29">1</literal></expr>]</index></name> <operator pos:start="225:32" pos:end="225:32">=</operator> <name pos:start="225:34" pos:end="225:35">my</name></expr>;</expr_stmt>



                <if_stmt pos:start="229:17" pos:end="231:38"><if pos:start="229:17" pos:end="231:38">if <condition pos:start="229:20" pos:end="229:79">(<expr pos:start="229:21" pos:end="229:78"><name pos:start="229:21" pos:end="229:34"><name pos:start="229:21" pos:end="229:21">s</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:34">umvplus_dec</name></name> <operator pos:start="229:36" pos:end="229:37">&amp;&amp;</operator> <operator pos:start="229:39" pos:end="229:39">(</operator><name pos:start="229:40" pos:end="229:41">mx</name> <operator pos:start="229:43" pos:end="229:43">-</operator> <name pos:start="229:45" pos:end="229:50">pred_x</name><operator pos:start="229:51" pos:end="229:51">)</operator> <operator pos:start="229:53" pos:end="229:54">==</operator> <literal type="number" pos:start="229:56" pos:end="229:56">1</literal> <operator pos:start="229:58" pos:end="229:59">&amp;&amp;</operator> <operator pos:start="229:61" pos:end="229:61">(</operator><name pos:start="229:62" pos:end="229:63">my</name> <operator pos:start="229:65" pos:end="229:65">-</operator> <name pos:start="229:67" pos:end="229:72">pred_y</name><operator pos:start="229:73" pos:end="229:73">)</operator> <operator pos:start="229:75" pos:end="229:76">==</operator> <literal type="number" pos:start="229:78" pos:end="229:78">1</literal></expr>)</condition><block type="pseudo" pos:start="231:20" pos:end="231:38"><block_content pos:start="231:20" pos:end="231:38">

                   <expr_stmt pos:start="231:20" pos:end="231:38"><expr pos:start="231:20" pos:end="231:37"><call pos:start="231:20" pos:end="231:37"><name pos:start="231:20" pos:end="231:29">skip_bits1</name><argument_list pos:start="231:30" pos:end="231:37">(<argument pos:start="231:31" pos:end="231:36"><expr pos:start="231:31" pos:end="231:36"><operator pos:start="231:31" pos:end="231:31">&amp;</operator><name pos:start="231:32" pos:end="231:36"><name pos:start="231:32" pos:end="231:32">s</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="231:40" pos:end="231:72">/* Bit stuffing to prevent PSC */</comment>                   

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="235:11" pos:end="285:9">else <block pos:start="235:16" pos:end="285:9">{<block_content pos:start="237:13" pos:end="283:13">

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><call pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:25">PRINT_MB_TYPE</name><argument_list pos:start="237:26" pos:end="237:30">(<argument pos:start="237:27" pos:end="237:29"><expr pos:start="237:27" pos:end="237:29"><literal type="string" pos:start="237:27" pos:end="237:29">"4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:37"><expr pos:start="239:13" pos:end="239:36"><name pos:start="239:13" pos:end="239:22"><name pos:start="239:13" pos:end="239:13">s</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:22">mv_type</name></name> <operator pos:start="239:24" pos:end="239:24">=</operator> <name pos:start="239:26" pos:end="239:36">MV_TYPE_8X8</name></expr>;</expr_stmt>

            <for pos:start="241:13" pos:end="283:13">for<control pos:start="241:16" pos:end="241:28">(<init pos:start="241:17" pos:end="241:20"><expr pos:start="241:17" pos:end="241:19"><name pos:start="241:17" pos:end="241:17">i</name><operator pos:start="241:18" pos:end="241:18">=</operator><literal type="number" pos:start="241:19" pos:end="241:19">0</literal></expr>;</init><condition pos:start="241:21" pos:end="241:24"><expr pos:start="241:21" pos:end="241:23"><name pos:start="241:21" pos:end="241:21">i</name><operator pos:start="241:22" pos:end="241:22">&lt;</operator><literal type="number" pos:start="241:23" pos:end="241:23">4</literal></expr>;</condition><incr pos:start="241:25" pos:end="241:27"><expr pos:start="241:25" pos:end="241:27"><name pos:start="241:25" pos:end="241:25">i</name><operator pos:start="241:26" pos:end="241:27">++</operator></expr></incr>)</control> <block pos:start="241:30" pos:end="283:13">{<block_content pos:start="243:17" pos:end="281:32">

                <expr_stmt pos:start="243:17" pos:end="243:67"><expr pos:start="243:17" pos:end="243:66"><name pos:start="243:17" pos:end="243:23">mot_val</name> <operator pos:start="243:25" pos:end="243:25">=</operator> <call pos:start="243:27" pos:end="243:66"><name pos:start="243:27" pos:end="243:42">h263_pred_motion</name><argument_list pos:start="243:43" pos:end="243:66">(<argument pos:start="243:44" pos:end="243:44"><expr pos:start="243:44" pos:end="243:44"><name pos:start="243:44" pos:end="243:44">s</name></expr></argument>, <argument pos:start="243:47" pos:end="243:47"><expr pos:start="243:47" pos:end="243:47"><name pos:start="243:47" pos:end="243:47">i</name></expr></argument>, <argument pos:start="243:50" pos:end="243:56"><expr pos:start="243:50" pos:end="243:56"><operator pos:start="243:50" pos:end="243:50">&amp;</operator><name pos:start="243:51" pos:end="243:56">pred_x</name></expr></argument>, <argument pos:start="243:59" pos:end="243:65"><expr pos:start="243:59" pos:end="243:65"><operator pos:start="243:59" pos:end="243:59">&amp;</operator><name pos:start="243:60" pos:end="243:65">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="245:17" pos:end="251:64"><if pos:start="245:17" pos:end="247:55">if <condition pos:start="245:20" pos:end="245:35">(<expr pos:start="245:21" pos:end="245:34"><name pos:start="245:21" pos:end="245:34"><name pos:start="245:21" pos:end="245:21">s</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:34">umvplus_dec</name></name></expr>)</condition><block type="pseudo" pos:start="247:19" pos:end="247:55"><block_content pos:start="247:19" pos:end="247:55">

                  <expr_stmt pos:start="247:19" pos:end="247:55"><expr pos:start="247:19" pos:end="247:54"><name pos:start="247:19" pos:end="247:20">mx</name> <operator pos:start="247:22" pos:end="247:22">=</operator> <call pos:start="247:24" pos:end="247:54"><name pos:start="247:24" pos:end="247:43">h263p_decode_umotion</name><argument_list pos:start="247:44" pos:end="247:54">(<argument pos:start="247:45" pos:end="247:45"><expr pos:start="247:45" pos:end="247:45"><name pos:start="247:45" pos:end="247:45">s</name></expr></argument>, <argument pos:start="247:48" pos:end="247:53"><expr pos:start="247:48" pos:end="247:53"><name pos:start="247:48" pos:end="247:53">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="249:17" pos:end="251:64">else<block type="pseudo" pos:start="251:19" pos:end="251:64"><block_content pos:start="251:19" pos:end="251:64">

                  <expr_stmt pos:start="251:19" pos:end="251:64"><expr pos:start="251:19" pos:end="251:63"><name pos:start="251:19" pos:end="251:20">mx</name> <operator pos:start="251:22" pos:end="251:22">=</operator> <call pos:start="251:24" pos:end="251:63"><name pos:start="251:24" pos:end="251:41">h263_decode_motion</name><argument_list pos:start="251:42" pos:end="251:63">(<argument pos:start="251:43" pos:end="251:43"><expr pos:start="251:43" pos:end="251:43"><name pos:start="251:43" pos:end="251:43">s</name></expr></argument>, <argument pos:start="251:46" pos:end="251:51"><expr pos:start="251:46" pos:end="251:51"><name pos:start="251:46" pos:end="251:51">pred_x</name></expr></argument>, <argument pos:start="251:54" pos:end="251:62"><expr pos:start="251:54" pos:end="251:62"><name pos:start="251:54" pos:end="251:62"><name pos:start="251:54" pos:end="251:54">s</name><operator pos:start="251:55" pos:end="251:56">-&gt;</operator><name pos:start="251:57" pos:end="251:62">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="253:17" pos:end="255:30"><if pos:start="253:17" pos:end="255:30">if <condition pos:start="253:20" pos:end="253:33">(<expr pos:start="253:21" pos:end="253:32"><name pos:start="253:21" pos:end="253:22">mx</name> <operator pos:start="253:24" pos:end="253:25">&gt;=</operator> <literal type="number" pos:start="253:27" pos:end="253:32">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="255:21" pos:end="255:30"><block_content pos:start="255:21" pos:end="255:30">

                    <return pos:start="255:21" pos:end="255:30">return <expr pos:start="255:28" pos:end="255:29"><operator pos:start="255:28" pos:end="255:28">-</operator><literal type="number" pos:start="255:29" pos:end="255:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                

                <if_stmt pos:start="259:17" pos:end="265:64"><if pos:start="259:17" pos:end="261:55">if <condition pos:start="259:20" pos:end="259:35">(<expr pos:start="259:21" pos:end="259:34"><name pos:start="259:21" pos:end="259:34"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:34">umvplus_dec</name></name></expr>)</condition><block type="pseudo" pos:start="261:19" pos:end="261:55"><block_content pos:start="261:19" pos:end="261:55">

                  <expr_stmt pos:start="261:19" pos:end="261:55"><expr pos:start="261:19" pos:end="261:54"><name pos:start="261:19" pos:end="261:20">my</name> <operator pos:start="261:22" pos:end="261:22">=</operator> <call pos:start="261:24" pos:end="261:54"><name pos:start="261:24" pos:end="261:43">h263p_decode_umotion</name><argument_list pos:start="261:44" pos:end="261:54">(<argument pos:start="261:45" pos:end="261:45"><expr pos:start="261:45" pos:end="261:45"><name pos:start="261:45" pos:end="261:45">s</name></expr></argument>, <argument pos:start="261:48" pos:end="261:53"><expr pos:start="261:48" pos:end="261:53"><name pos:start="261:48" pos:end="261:53">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="263:17" pos:end="265:64">else<block type="pseudo" pos:start="265:19" pos:end="265:64"><block_content pos:start="265:19" pos:end="265:64">    

                  <expr_stmt pos:start="265:19" pos:end="265:64"><expr pos:start="265:19" pos:end="265:63"><name pos:start="265:19" pos:end="265:20">my</name> <operator pos:start="265:22" pos:end="265:22">=</operator> <call pos:start="265:24" pos:end="265:63"><name pos:start="265:24" pos:end="265:41">h263_decode_motion</name><argument_list pos:start="265:42" pos:end="265:63">(<argument pos:start="265:43" pos:end="265:43"><expr pos:start="265:43" pos:end="265:43"><name pos:start="265:43" pos:end="265:43">s</name></expr></argument>, <argument pos:start="265:46" pos:end="265:51"><expr pos:start="265:46" pos:end="265:51"><name pos:start="265:46" pos:end="265:51">pred_y</name></expr></argument>, <argument pos:start="265:54" pos:end="265:62"><expr pos:start="265:54" pos:end="265:62"><name pos:start="265:54" pos:end="265:62"><name pos:start="265:54" pos:end="265:54">s</name><operator pos:start="265:55" pos:end="265:56">-&gt;</operator><name pos:start="265:57" pos:end="265:62">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="267:17" pos:end="269:30"><if pos:start="267:17" pos:end="269:30">if <condition pos:start="267:20" pos:end="267:33">(<expr pos:start="267:21" pos:end="267:32"><name pos:start="267:21" pos:end="267:22">my</name> <operator pos:start="267:24" pos:end="267:25">&gt;=</operator> <literal type="number" pos:start="267:27" pos:end="267:32">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="269:21" pos:end="269:30"><block_content pos:start="269:21" pos:end="269:30">

                    <return pos:start="269:21" pos:end="269:30">return <expr pos:start="269:28" pos:end="269:29"><operator pos:start="269:28" pos:end="269:28">-</operator><literal type="number" pos:start="269:29" pos:end="269:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:36"><expr pos:start="271:17" pos:end="271:35"><name pos:start="271:17" pos:end="271:30"><name pos:start="271:17" pos:end="271:17">s</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:21">mv</name><index pos:start="271:22" pos:end="271:24">[<expr pos:start="271:23" pos:end="271:23"><literal type="number" pos:start="271:23" pos:end="271:23">0</literal></expr>]</index><index pos:start="271:25" pos:end="271:27">[<expr pos:start="271:26" pos:end="271:26"><name pos:start="271:26" pos:end="271:26">i</name></expr>]</index><index pos:start="271:28" pos:end="271:30">[<expr pos:start="271:29" pos:end="271:29"><literal type="number" pos:start="271:29" pos:end="271:29">0</literal></expr>]</index></name> <operator pos:start="271:32" pos:end="271:32">=</operator> <name pos:start="271:34" pos:end="271:35">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:36"><expr pos:start="273:17" pos:end="273:35"><name pos:start="273:17" pos:end="273:30"><name pos:start="273:17" pos:end="273:17">s</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:21">mv</name><index pos:start="273:22" pos:end="273:24">[<expr pos:start="273:23" pos:end="273:23"><literal type="number" pos:start="273:23" pos:end="273:23">0</literal></expr>]</index><index pos:start="273:25" pos:end="273:27">[<expr pos:start="273:26" pos:end="273:26"><name pos:start="273:26" pos:end="273:26">i</name></expr>]</index><index pos:start="273:28" pos:end="273:30">[<expr pos:start="273:29" pos:end="273:29"><literal type="number" pos:start="273:29" pos:end="273:29">1</literal></expr>]</index></name> <operator pos:start="273:32" pos:end="273:32">=</operator> <name pos:start="273:34" pos:end="273:35">my</name></expr>;</expr_stmt>

                <if_stmt pos:start="275:17" pos:end="277:37"><if pos:start="275:17" pos:end="277:37">if <condition pos:start="275:20" pos:end="275:79">(<expr pos:start="275:21" pos:end="275:78"><name pos:start="275:21" pos:end="275:34"><name pos:start="275:21" pos:end="275:21">s</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:34">umvplus_dec</name></name> <operator pos:start="275:36" pos:end="275:37">&amp;&amp;</operator> <operator pos:start="275:39" pos:end="275:39">(</operator><name pos:start="275:40" pos:end="275:41">mx</name> <operator pos:start="275:43" pos:end="275:43">-</operator> <name pos:start="275:45" pos:end="275:50">pred_x</name><operator pos:start="275:51" pos:end="275:51">)</operator> <operator pos:start="275:53" pos:end="275:54">==</operator> <literal type="number" pos:start="275:56" pos:end="275:56">1</literal> <operator pos:start="275:58" pos:end="275:59">&amp;&amp;</operator> <operator pos:start="275:61" pos:end="275:61">(</operator><name pos:start="275:62" pos:end="275:63">my</name> <operator pos:start="275:65" pos:end="275:65">-</operator> <name pos:start="275:67" pos:end="275:72">pred_y</name><operator pos:start="275:73" pos:end="275:73">)</operator> <operator pos:start="275:75" pos:end="275:76">==</operator> <literal type="number" pos:start="275:78" pos:end="275:78">1</literal></expr>)</condition><block type="pseudo" pos:start="277:19" pos:end="277:37"><block_content pos:start="277:19" pos:end="277:37">

                  <expr_stmt pos:start="277:19" pos:end="277:37"><expr pos:start="277:19" pos:end="277:36"><call pos:start="277:19" pos:end="277:36"><name pos:start="277:19" pos:end="277:28">skip_bits1</name><argument_list pos:start="277:29" pos:end="277:36">(<argument pos:start="277:30" pos:end="277:35"><expr pos:start="277:30" pos:end="277:35"><operator pos:start="277:30" pos:end="277:30">&amp;</operator><name pos:start="277:31" pos:end="277:35"><name pos:start="277:31" pos:end="277:31">s</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="277:39" pos:end="277:71">/* Bit stuffing to prevent PSC */</comment>

                <expr_stmt pos:start="279:17" pos:end="279:32"><expr pos:start="279:17" pos:end="279:31"><name pos:start="279:17" pos:end="279:26"><name pos:start="279:17" pos:end="279:23">mot_val</name><index pos:start="279:24" pos:end="279:26">[<expr pos:start="279:25" pos:end="279:25"><literal type="number" pos:start="279:25" pos:end="279:25">0</literal></expr>]</index></name> <operator pos:start="279:28" pos:end="279:28">=</operator> <name pos:start="279:30" pos:end="279:31">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:32"><expr pos:start="281:17" pos:end="281:31"><name pos:start="281:17" pos:end="281:26"><name pos:start="281:17" pos:end="281:23">mot_val</name><index pos:start="281:24" pos:end="281:26">[<expr pos:start="281:25" pos:end="281:25"><literal type="number" pos:start="281:25" pos:end="281:25">1</literal></expr>]</index></name> <operator pos:start="281:28" pos:end="281:28">=</operator> <name pos:start="281:30" pos:end="281:31">my</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="287:7" pos:end="567:5">else if<condition pos:start="287:14" pos:end="287:35">(<expr pos:start="287:15" pos:end="287:34"><name pos:start="287:15" pos:end="287:26"><name pos:start="287:15" pos:end="287:15">s</name><operator pos:start="287:16" pos:end="287:17">-&gt;</operator><name pos:start="287:18" pos:end="287:26">pict_type</name></name><operator pos:start="287:27" pos:end="287:28">==</operator><name pos:start="287:29" pos:end="287:34">B_TYPE</name></expr>)</condition> <block pos:start="287:37" pos:end="567:5">{<block_content pos:start="289:9" pos:end="565:9">

        <decl_stmt pos:start="289:9" pos:end="289:18"><decl pos:start="289:9" pos:end="289:17"><type pos:start="289:9" pos:end="289:11"><name pos:start="289:9" pos:end="289:11">int</name></type> <name pos:start="289:13" pos:end="289:17">modb1</name></decl>;</decl_stmt> <comment type="line" pos:start="289:20" pos:end="289:39">// first bit of modb</comment>

        <decl_stmt pos:start="291:9" pos:end="291:18"><decl pos:start="291:9" pos:end="291:17"><type pos:start="291:9" pos:end="291:11"><name pos:start="291:9" pos:end="291:11">int</name></type> <name pos:start="291:13" pos:end="291:17">modb2</name></decl>;</decl_stmt> <comment type="line" pos:start="291:20" pos:end="291:40">// second bit of modb</comment>

        <decl_stmt pos:start="293:9" pos:end="293:20"><decl pos:start="293:9" pos:end="293:19"><type pos:start="293:9" pos:end="293:11"><name pos:start="293:9" pos:end="293:11">int</name></type> <name pos:start="293:13" pos:end="293:19">mb_type</name></decl>;</decl_stmt>

        <decl_stmt pos:start="295:9" pos:end="295:15"><decl pos:start="295:9" pos:end="295:14"><type pos:start="295:9" pos:end="295:11"><name pos:start="295:9" pos:end="295:11">int</name></type> <name pos:start="295:13" pos:end="295:14">xy</name></decl>;</decl_stmt>



        <expr_stmt pos:start="299:9" pos:end="299:24"><expr pos:start="299:9" pos:end="299:23"><name pos:start="299:9" pos:end="299:19"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:19">mb_intra</name></name> <operator pos:start="299:21" pos:end="299:21">=</operator> <literal type="number" pos:start="299:23" pos:end="299:23">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="299:26" pos:end="299:62">//B-frames never contain intra blocks</comment>

        <expr_stmt pos:start="301:9" pos:end="301:19"><expr pos:start="301:9" pos:end="301:18"><name pos:start="301:9" pos:end="301:16"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:16">mcsel</name></name><operator pos:start="301:17" pos:end="301:17">=</operator><literal type="number" pos:start="301:18" pos:end="301:18">0</literal></expr>;</expr_stmt>      <comment type="line" pos:start="301:26" pos:end="301:65">//     ...               true gmc blocks</comment>



        <if_stmt pos:start="305:9" pos:end="319:9"><if pos:start="305:9" pos:end="319:9">if<condition pos:start="305:11" pos:end="305:22">(<expr pos:start="305:12" pos:end="305:21"><name pos:start="305:12" pos:end="305:18"><name pos:start="305:12" pos:end="305:12">s</name><operator pos:start="305:13" pos:end="305:14">-&gt;</operator><name pos:start="305:15" pos:end="305:18">mb_x</name></name><operator pos:start="305:19" pos:end="305:20">==</operator><literal type="number" pos:start="305:21" pos:end="305:21">0</literal></expr>)</condition><block pos:start="305:23" pos:end="319:9">{<block_content pos:start="307:13" pos:end="317:13">

            <for pos:start="307:13" pos:end="317:13">for<control pos:start="307:16" pos:end="307:30">(<init pos:start="307:17" pos:end="307:20"><expr pos:start="307:17" pos:end="307:19"><name pos:start="307:17" pos:end="307:17">i</name><operator pos:start="307:18" pos:end="307:18">=</operator><literal type="number" pos:start="307:19" pos:end="307:19">0</literal></expr>;</init> <condition pos:start="307:22" pos:end="307:25"><expr pos:start="307:22" pos:end="307:24"><name pos:start="307:22" pos:end="307:22">i</name><operator pos:start="307:23" pos:end="307:23">&lt;</operator><literal type="number" pos:start="307:24" pos:end="307:24">2</literal></expr>;</condition> <incr pos:start="307:27" pos:end="307:29"><expr pos:start="307:27" pos:end="307:29"><name pos:start="307:27" pos:end="307:27">i</name><operator pos:start="307:28" pos:end="307:29">++</operator></expr></incr>)</control><block pos:start="307:31" pos:end="317:13">{<block_content pos:start="309:17" pos:end="315:39">

                <expr_stmt pos:start="309:17" pos:end="315:39"><expr pos:start="309:17" pos:end="315:38"><name pos:start="309:17" pos:end="309:35"><name pos:start="309:17" pos:end="309:17">s</name><operator pos:start="309:18" pos:end="309:19">-&gt;</operator><name pos:start="309:20" pos:end="309:26">last_mv</name><index pos:start="309:27" pos:end="309:29">[<expr pos:start="309:28" pos:end="309:28"><name pos:start="309:28" pos:end="309:28">i</name></expr>]</index><index pos:start="309:30" pos:end="309:32">[<expr pos:start="309:31" pos:end="309:31"><literal type="number" pos:start="309:31" pos:end="309:31">0</literal></expr>]</index><index pos:start="309:33" pos:end="309:35">[<expr pos:start="309:34" pos:end="309:34"><literal type="number" pos:start="309:34" pos:end="309:34">0</literal></expr>]</index></name><operator pos:start="309:36" pos:end="309:36">=</operator> 

                <name pos:start="311:17" pos:end="311:35"><name pos:start="311:17" pos:end="311:17">s</name><operator pos:start="311:18" pos:end="311:19">-&gt;</operator><name pos:start="311:20" pos:end="311:26">last_mv</name><index pos:start="311:27" pos:end="311:29">[<expr pos:start="311:28" pos:end="311:28"><name pos:start="311:28" pos:end="311:28">i</name></expr>]</index><index pos:start="311:30" pos:end="311:32">[<expr pos:start="311:31" pos:end="311:31"><literal type="number" pos:start="311:31" pos:end="311:31">0</literal></expr>]</index><index pos:start="311:33" pos:end="311:35">[<expr pos:start="311:34" pos:end="311:34"><literal type="number" pos:start="311:34" pos:end="311:34">1</literal></expr>]</index></name><operator pos:start="311:36" pos:end="311:36">=</operator> 

                <name pos:start="313:17" pos:end="313:35"><name pos:start="313:17" pos:end="313:17">s</name><operator pos:start="313:18" pos:end="313:19">-&gt;</operator><name pos:start="313:20" pos:end="313:26">last_mv</name><index pos:start="313:27" pos:end="313:29">[<expr pos:start="313:28" pos:end="313:28"><name pos:start="313:28" pos:end="313:28">i</name></expr>]</index><index pos:start="313:30" pos:end="313:32">[<expr pos:start="313:31" pos:end="313:31"><literal type="number" pos:start="313:31" pos:end="313:31">1</literal></expr>]</index><index pos:start="313:33" pos:end="313:35">[<expr pos:start="313:34" pos:end="313:34"><literal type="number" pos:start="313:34" pos:end="313:34">0</literal></expr>]</index></name><operator pos:start="313:36" pos:end="313:36">=</operator> 

                <name pos:start="315:17" pos:end="315:35"><name pos:start="315:17" pos:end="315:17">s</name><operator pos:start="315:18" pos:end="315:19">-&gt;</operator><name pos:start="315:20" pos:end="315:26">last_mv</name><index pos:start="315:27" pos:end="315:29">[<expr pos:start="315:28" pos:end="315:28"><name pos:start="315:28" pos:end="315:28">i</name></expr>]</index><index pos:start="315:30" pos:end="315:32">[<expr pos:start="315:31" pos:end="315:31"><literal type="number" pos:start="315:31" pos:end="315:31">1</literal></expr>]</index><index pos:start="315:33" pos:end="315:35">[<expr pos:start="315:34" pos:end="315:34"><literal type="number" pos:start="315:34" pos:end="315:34">1</literal></expr>]</index></name><operator pos:start="315:36" pos:end="315:36">=</operator> <literal type="number" pos:start="315:38" pos:end="315:38">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="323:9" pos:end="323:73">/* if we skipped it in the future P Frame than skip it now too */</comment>

        <expr_stmt pos:start="325:9" pos:end="325:84"><expr pos:start="325:9" pos:end="325:83"><name pos:start="325:9" pos:end="325:20"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:20">mb_skiped</name></name><operator pos:start="325:21" pos:end="325:21">=</operator> <name pos:start="325:23" pos:end="325:83"><name pos:start="325:23" pos:end="325:23">s</name><operator pos:start="325:24" pos:end="325:25">-&gt;</operator><name pos:start="325:26" pos:end="325:37">next_picture</name><operator pos:start="325:38" pos:end="325:38">.</operator><name pos:start="325:39" pos:end="325:50">mbskip_table</name><index pos:start="325:51" pos:end="325:83">[<expr pos:start="325:52" pos:end="325:82"><name pos:start="325:52" pos:end="325:58"><name pos:start="325:52" pos:end="325:52">s</name><operator pos:start="325:53" pos:end="325:54">-&gt;</operator><name pos:start="325:55" pos:end="325:58">mb_y</name></name> <operator pos:start="325:60" pos:end="325:60">*</operator> <name pos:start="325:62" pos:end="325:72"><name pos:start="325:62" pos:end="325:62">s</name><operator pos:start="325:63" pos:end="325:64">-&gt;</operator><name pos:start="325:65" pos:end="325:72">mb_width</name></name> <operator pos:start="325:74" pos:end="325:74">+</operator> <name pos:start="325:76" pos:end="325:82"><name pos:start="325:76" pos:end="325:76">s</name><operator pos:start="325:77" pos:end="325:78">-&gt;</operator><name pos:start="325:79" pos:end="325:82">mb_x</name></name></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="325:86" pos:end="325:119">// Note, skiptab=0 if last was GMC</comment>



        <if_stmt pos:start="329:9" pos:end="355:9"><if pos:start="329:9" pos:end="355:9">if<condition pos:start="329:11" pos:end="329:24">(<expr pos:start="329:12" pos:end="329:23"><name pos:start="329:12" pos:end="329:23"><name pos:start="329:12" pos:end="329:12">s</name><operator pos:start="329:13" pos:end="329:14">-&gt;</operator><name pos:start="329:15" pos:end="329:23">mb_skiped</name></name></expr>)</condition><block pos:start="329:25" pos:end="355:9">{<block_content pos:start="333:13" pos:end="353:21">

                <comment type="block" pos:start="331:17" pos:end="331:29">/* skip mb */</comment>

            <for pos:start="333:13" pos:end="335:44">for<control pos:start="333:16" pos:end="333:28">(<init pos:start="333:17" pos:end="333:20"><expr pos:start="333:17" pos:end="333:19"><name pos:start="333:17" pos:end="333:17">i</name><operator pos:start="333:18" pos:end="333:18">=</operator><literal type="number" pos:start="333:19" pos:end="333:19">0</literal></expr>;</init><condition pos:start="333:21" pos:end="333:24"><expr pos:start="333:21" pos:end="333:23"><name pos:start="333:21" pos:end="333:21">i</name><operator pos:start="333:22" pos:end="333:22">&lt;</operator><literal type="number" pos:start="333:23" pos:end="333:23">6</literal></expr>;</condition><incr pos:start="333:25" pos:end="333:27"><expr pos:start="333:25" pos:end="333:27"><name pos:start="333:25" pos:end="333:25">i</name><operator pos:start="333:26" pos:end="333:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="335:17" pos:end="335:44"><block_content pos:start="335:17" pos:end="335:44">

                <expr_stmt pos:start="335:17" pos:end="335:44"><expr pos:start="335:17" pos:end="335:43"><name pos:start="335:17" pos:end="335:38"><name pos:start="335:17" pos:end="335:17">s</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:35">block_last_index</name><index pos:start="335:36" pos:end="335:38">[<expr pos:start="335:37" pos:end="335:37"><name pos:start="335:37" pos:end="335:37">i</name></expr>]</index></name> <operator pos:start="335:40" pos:end="335:40">=</operator> <operator pos:start="335:42" pos:end="335:42">-</operator><literal type="number" pos:start="335:43" pos:end="335:43">1</literal></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="339:13" pos:end="339:39"><expr pos:start="339:13" pos:end="339:38"><name pos:start="339:13" pos:end="339:21"><name pos:start="339:13" pos:end="339:13">s</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:21">mv_dir</name></name> <operator pos:start="339:23" pos:end="339:23">=</operator> <name pos:start="339:25" pos:end="339:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:39"><expr pos:start="341:13" pos:end="341:38"><name pos:start="341:13" pos:end="341:22"><name pos:start="341:13" pos:end="341:13">s</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:22">mv_type</name></name> <operator pos:start="341:24" pos:end="341:24">=</operator> <name pos:start="341:26" pos:end="341:38">MV_TYPE_16X16</name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:31"><expr pos:start="343:13" pos:end="343:30"><name pos:start="343:13" pos:end="343:26"><name pos:start="343:13" pos:end="343:13">s</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:17">mv</name><index pos:start="343:18" pos:end="343:20">[<expr pos:start="343:19" pos:end="343:19"><literal type="number" pos:start="343:19" pos:end="343:19">0</literal></expr>]</index><index pos:start="343:21" pos:end="343:23">[<expr pos:start="343:22" pos:end="343:22"><literal type="number" pos:start="343:22" pos:end="343:22">0</literal></expr>]</index><index pos:start="343:24" pos:end="343:26">[<expr pos:start="343:25" pos:end="343:25"><literal type="number" pos:start="343:25" pos:end="343:25">0</literal></expr>]</index></name> <operator pos:start="343:28" pos:end="343:28">=</operator> <literal type="number" pos:start="343:30" pos:end="343:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:31"><expr pos:start="345:13" pos:end="345:30"><name pos:start="345:13" pos:end="345:26"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:17">mv</name><index pos:start="345:18" pos:end="345:20">[<expr pos:start="345:19" pos:end="345:19"><literal type="number" pos:start="345:19" pos:end="345:19">0</literal></expr>]</index><index pos:start="345:21" pos:end="345:23">[<expr pos:start="345:22" pos:end="345:22"><literal type="number" pos:start="345:22" pos:end="345:22">0</literal></expr>]</index><index pos:start="345:24" pos:end="345:26">[<expr pos:start="345:25" pos:end="345:25"><literal type="number" pos:start="345:25" pos:end="345:25">1</literal></expr>]</index></name> <operator pos:start="345:28" pos:end="345:28">=</operator> <literal type="number" pos:start="345:30" pos:end="345:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:31"><expr pos:start="347:13" pos:end="347:30"><name pos:start="347:13" pos:end="347:26"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:17">mv</name><index pos:start="347:18" pos:end="347:20">[<expr pos:start="347:19" pos:end="347:19"><literal type="number" pos:start="347:19" pos:end="347:19">1</literal></expr>]</index><index pos:start="347:21" pos:end="347:23">[<expr pos:start="347:22" pos:end="347:22"><literal type="number" pos:start="347:22" pos:end="347:22">0</literal></expr>]</index><index pos:start="347:24" pos:end="347:26">[<expr pos:start="347:25" pos:end="347:25"><literal type="number" pos:start="347:25" pos:end="347:25">0</literal></expr>]</index></name> <operator pos:start="347:28" pos:end="347:28">=</operator> <literal type="number" pos:start="347:30" pos:end="347:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:31"><expr pos:start="349:13" pos:end="349:30"><name pos:start="349:13" pos:end="349:26"><name pos:start="349:13" pos:end="349:13">s</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:17">mv</name><index pos:start="349:18" pos:end="349:20">[<expr pos:start="349:19" pos:end="349:19"><literal type="number" pos:start="349:19" pos:end="349:19">1</literal></expr>]</index><index pos:start="349:21" pos:end="349:23">[<expr pos:start="349:22" pos:end="349:22"><literal type="number" pos:start="349:22" pos:end="349:22">0</literal></expr>]</index><index pos:start="349:24" pos:end="349:26">[<expr pos:start="349:25" pos:end="349:25"><literal type="number" pos:start="349:25" pos:end="349:25">1</literal></expr>]</index></name> <operator pos:start="349:28" pos:end="349:28">=</operator> <literal type="number" pos:start="349:30" pos:end="349:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:31"><expr pos:start="351:13" pos:end="351:30"><call pos:start="351:13" pos:end="351:30"><name pos:start="351:13" pos:end="351:25">PRINT_MB_TYPE</name><argument_list pos:start="351:26" pos:end="351:30">(<argument pos:start="351:27" pos:end="351:29"><expr pos:start="351:27" pos:end="351:29"><literal type="string" pos:start="351:27" pos:end="351:29">"s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="353:13" pos:end="353:21">goto <name pos:start="353:18" pos:end="353:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="359:9" pos:end="359:33"><expr pos:start="359:9" pos:end="359:32"><name pos:start="359:9" pos:end="359:13">modb1</name><operator pos:start="359:14" pos:end="359:14">=</operator> <call pos:start="359:16" pos:end="359:32"><name pos:start="359:16" pos:end="359:24">get_bits1</name><argument_list pos:start="359:25" pos:end="359:32">(<argument pos:start="359:26" pos:end="359:31"><expr pos:start="359:26" pos:end="359:31"><operator pos:start="359:26" pos:end="359:26">&amp;</operator><name pos:start="359:27" pos:end="359:31"><name pos:start="359:27" pos:end="359:27">s</name><operator pos:start="359:28" pos:end="359:29">-&gt;</operator><name pos:start="359:30" pos:end="359:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

        <if_stmt pos:start="361:9" pos:end="531:9"><if pos:start="361:9" pos:end="367:9">if<condition pos:start="361:11" pos:end="361:17">(<expr pos:start="361:12" pos:end="361:16"><name pos:start="361:12" pos:end="361:16">modb1</name></expr>)</condition><block pos:start="361:18" pos:end="367:9">{<block_content pos:start="363:13" pos:end="365:18">

            <expr_stmt pos:start="363:13" pos:end="363:22"><expr pos:start="363:13" pos:end="363:21"><name pos:start="363:13" pos:end="363:19">mb_type</name><operator pos:start="363:20" pos:end="363:20">=</operator><literal type="number" pos:start="363:21" pos:end="363:21">4</literal></expr>;</expr_stmt> <comment type="line" pos:start="363:24" pos:end="363:67">//like MB_TYPE_B_DIRECT but no vectors coded</comment>

            <expr_stmt pos:start="365:13" pos:end="365:18"><expr pos:start="365:13" pos:end="365:17"><name pos:start="365:13" pos:end="365:15">cbp</name><operator pos:start="365:16" pos:end="365:16">=</operator><literal type="number" pos:start="365:17" pos:end="365:17">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="367:10" pos:end="531:9">else<block pos:start="367:14" pos:end="531:9">{<block_content pos:start="369:13" pos:end="529:13">

            <decl_stmt pos:start="369:13" pos:end="369:25"><decl pos:start="369:13" pos:end="369:24"><type pos:start="369:13" pos:end="369:15"><name pos:start="369:13" pos:end="369:15">int</name></type> <name pos:start="369:17" pos:end="369:24">field_mv</name></decl>;</decl_stmt>

        

            <expr_stmt pos:start="373:13" pos:end="373:37"><expr pos:start="373:13" pos:end="373:36"><name pos:start="373:13" pos:end="373:17">modb2</name><operator pos:start="373:18" pos:end="373:18">=</operator> <call pos:start="373:20" pos:end="373:36"><name pos:start="373:20" pos:end="373:28">get_bits1</name><argument_list pos:start="373:29" pos:end="373:36">(<argument pos:start="373:30" pos:end="373:35"><expr pos:start="373:30" pos:end="373:35"><operator pos:start="373:30" pos:end="373:30">&amp;</operator><name pos:start="373:31" pos:end="373:35"><name pos:start="373:31" pos:end="373:31">s</name><operator pos:start="373:32" pos:end="373:33">-&gt;</operator><name pos:start="373:34" pos:end="373:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:82"><expr pos:start="375:13" pos:end="375:81"><name pos:start="375:13" pos:end="375:19">mb_type</name><operator pos:start="375:20" pos:end="375:20">=</operator> <call pos:start="375:22" pos:end="375:81"><name pos:start="375:22" pos:end="375:29">get_vlc2</name><argument_list pos:start="375:30" pos:end="375:81">(<argument pos:start="375:31" pos:end="375:36"><expr pos:start="375:31" pos:end="375:36"><operator pos:start="375:31" pos:end="375:31">&amp;</operator><name pos:start="375:32" pos:end="375:36"><name pos:start="375:32" pos:end="375:32">s</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:36">gb</name></name></expr></argument>, <argument pos:start="375:39" pos:end="375:57"><expr pos:start="375:39" pos:end="375:57"><name pos:start="375:39" pos:end="375:57"><name pos:start="375:39" pos:end="375:51">mb_type_b_vlc</name><operator pos:start="375:52" pos:end="375:52">.</operator><name pos:start="375:53" pos:end="375:57">table</name></name></expr></argument>, <argument pos:start="375:60" pos:end="375:77"><expr pos:start="375:60" pos:end="375:77"><name pos:start="375:60" pos:end="375:77">MB_TYPE_B_VLC_BITS</name></expr></argument>, <argument pos:start="375:80" pos:end="375:80"><expr pos:start="375:80" pos:end="375:80"><literal type="number" pos:start="375:80" pos:end="375:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="377:13" pos:end="379:47"><if pos:start="377:13" pos:end="377:29">if<condition pos:start="377:15" pos:end="377:21">(<expr pos:start="377:16" pos:end="377:20"><name pos:start="377:16" pos:end="377:20">modb2</name></expr>)</condition><block type="pseudo" pos:start="377:23" pos:end="377:29"><block_content pos:start="377:23" pos:end="377:29"> <expr_stmt pos:start="377:23" pos:end="377:29"><expr pos:start="377:23" pos:end="377:28"><name pos:start="377:23" pos:end="377:25">cbp</name><operator pos:start="377:26" pos:end="377:26">=</operator> <literal type="number" pos:start="377:28" pos:end="377:28">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="379:13" pos:end="379:47">else<block type="pseudo" pos:start="379:23" pos:end="379:47"><block_content pos:start="379:23" pos:end="379:47">      <expr_stmt pos:start="379:23" pos:end="379:47"><expr pos:start="379:23" pos:end="379:46"><name pos:start="379:23" pos:end="379:25">cbp</name><operator pos:start="379:26" pos:end="379:26">=</operator> <call pos:start="379:28" pos:end="379:46"><name pos:start="379:28" pos:end="379:35">get_bits</name><argument_list pos:start="379:36" pos:end="379:46">(<argument pos:start="379:37" pos:end="379:42"><expr pos:start="379:37" pos:end="379:42"><operator pos:start="379:37" pos:end="379:37">&amp;</operator><name pos:start="379:38" pos:end="379:42"><name pos:start="379:38" pos:end="379:38">s</name><operator pos:start="379:39" pos:end="379:40">-&gt;</operator><name pos:start="379:41" pos:end="379:42">gb</name></name></expr></argument>, <argument pos:start="379:45" pos:end="379:45"><expr pos:start="379:45" pos:end="379:45"><literal type="number" pos:start="379:45" pos:end="379:45">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="383:13" pos:end="391:13"><if pos:start="383:13" pos:end="391:13">if <condition pos:start="383:16" pos:end="383:49">(<expr pos:start="383:17" pos:end="383:48"><name pos:start="383:17" pos:end="383:23">mb_type</name><operator pos:start="383:24" pos:end="383:25">!=</operator><name pos:start="383:26" pos:end="383:41">MB_TYPE_B_DIRECT</name> <operator pos:start="383:43" pos:end="383:44">&amp;&amp;</operator> <name pos:start="383:46" pos:end="383:48">cbp</name></expr>)</condition> <block pos:start="383:51" pos:end="391:13">{<block_content pos:start="385:17" pos:end="389:17">

                <if_stmt pos:start="385:17" pos:end="389:17"><if pos:start="385:17" pos:end="389:17">if<condition pos:start="385:19" pos:end="385:37">(<expr pos:start="385:20" pos:end="385:36"><call pos:start="385:20" pos:end="385:36"><name pos:start="385:20" pos:end="385:28">get_bits1</name><argument_list pos:start="385:29" pos:end="385:36">(<argument pos:start="385:30" pos:end="385:35"><expr pos:start="385:30" pos:end="385:35"><operator pos:start="385:30" pos:end="385:30">&amp;</operator><name pos:start="385:31" pos:end="385:35"><name pos:start="385:31" pos:end="385:31">s</name><operator pos:start="385:32" pos:end="385:33">-&gt;</operator><name pos:start="385:34" pos:end="385:35">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="385:38" pos:end="389:17">{<block_content pos:start="387:21" pos:end="387:62">

                    <expr_stmt pos:start="387:21" pos:end="387:62"><expr pos:start="387:21" pos:end="387:61"><call pos:start="387:21" pos:end="387:61"><name pos:start="387:21" pos:end="387:33">change_qscale</name><argument_list pos:start="387:34" pos:end="387:61">(<argument pos:start="387:35" pos:end="387:35"><expr pos:start="387:35" pos:end="387:35"><name pos:start="387:35" pos:end="387:35">s</name></expr></argument>, <argument pos:start="387:38" pos:end="387:60"><expr pos:start="387:38" pos:end="387:60"><call pos:start="387:38" pos:end="387:54"><name pos:start="387:38" pos:end="387:46">get_bits1</name><argument_list pos:start="387:47" pos:end="387:54">(<argument pos:start="387:48" pos:end="387:53"><expr pos:start="387:48" pos:end="387:53"><operator pos:start="387:48" pos:end="387:48">&amp;</operator><name pos:start="387:49" pos:end="387:53"><name pos:start="387:49" pos:end="387:49">s</name><operator pos:start="387:50" pos:end="387:51">-&gt;</operator><name pos:start="387:52" pos:end="387:53">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="387:55" pos:end="387:55">*</operator><literal type="number" pos:start="387:56" pos:end="387:58">4</literal> <operator pos:start="387:58" pos:end="387:58">-</operator> <literal type="number" pos:start="387:60" pos:end="387:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:23"><expr pos:start="393:13" pos:end="393:22"><name pos:start="393:13" pos:end="393:20">field_mv</name><operator pos:start="393:21" pos:end="393:21">=</operator><literal type="number" pos:start="393:22" pos:end="393:22">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="397:13" pos:end="429:13"><if pos:start="397:13" pos:end="429:13">if<condition pos:start="397:15" pos:end="397:40">(<expr pos:start="397:16" pos:end="397:39"><operator pos:start="397:16" pos:end="397:16">!</operator><name pos:start="397:17" pos:end="397:39"><name pos:start="397:17" pos:end="397:17">s</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:39">progressive_sequence</name></name></expr>)</condition><block pos:start="397:41" pos:end="429:13">{<block_content pos:start="399:17" pos:end="427:17">

                <if_stmt pos:start="399:17" pos:end="401:57"><if pos:start="399:17" pos:end="401:57">if<condition pos:start="399:19" pos:end="399:23">(<expr pos:start="399:20" pos:end="399:22"><name pos:start="399:20" pos:end="399:22">cbp</name></expr>)</condition><block type="pseudo" pos:start="401:21" pos:end="401:57"><block_content pos:start="401:21" pos:end="401:57">

                    <expr_stmt pos:start="401:21" pos:end="401:57"><expr pos:start="401:21" pos:end="401:56"><name pos:start="401:21" pos:end="401:37"><name pos:start="401:21" pos:end="401:21">s</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:37">interlaced_dct</name></name><operator pos:start="401:38" pos:end="401:38">=</operator> <call pos:start="401:40" pos:end="401:56"><name pos:start="401:40" pos:end="401:48">get_bits1</name><argument_list pos:start="401:49" pos:end="401:56">(<argument pos:start="401:50" pos:end="401:55"><expr pos:start="401:50" pos:end="401:55"><operator pos:start="401:50" pos:end="401:50">&amp;</operator><name pos:start="401:51" pos:end="401:55"><name pos:start="401:51" pos:end="401:51">s</name><operator pos:start="401:52" pos:end="401:53">-&gt;</operator><name pos:start="401:54" pos:end="401:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="405:17" pos:end="427:17"><if pos:start="405:17" pos:end="427:17">if<condition pos:start="405:19" pos:end="405:66">(<expr pos:start="405:20" pos:end="405:65"><name pos:start="405:20" pos:end="405:26">mb_type</name><operator pos:start="405:27" pos:end="405:28">!=</operator><name pos:start="405:29" pos:end="405:44">MB_TYPE_B_DIRECT</name> <operator pos:start="405:46" pos:end="405:47">&amp;&amp;</operator> <call pos:start="405:49" pos:end="405:65"><name pos:start="405:49" pos:end="405:57">get_bits1</name><argument_list pos:start="405:58" pos:end="405:65">(<argument pos:start="405:59" pos:end="405:64"><expr pos:start="405:59" pos:end="405:64"><operator pos:start="405:59" pos:end="405:59">&amp;</operator><name pos:start="405:60" pos:end="405:64"><name pos:start="405:60" pos:end="405:60">s</name><operator pos:start="405:61" pos:end="405:62">-&gt;</operator><name pos:start="405:63" pos:end="405:64">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="405:67" pos:end="427:17">{<block_content pos:start="407:21" pos:end="425:21">

                    <expr_stmt pos:start="407:21" pos:end="407:31"><expr pos:start="407:21" pos:end="407:30"><name pos:start="407:21" pos:end="407:28">field_mv</name><operator pos:start="407:29" pos:end="407:29">=</operator><literal type="number" pos:start="407:30" pos:end="407:30">1</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="411:21" pos:end="417:21"><if pos:start="411:21" pos:end="417:21">if<condition pos:start="411:23" pos:end="411:48">(<expr pos:start="411:24" pos:end="411:47"><name pos:start="411:24" pos:end="411:30">mb_type</name><operator pos:start="411:31" pos:end="411:32">!=</operator><name pos:start="411:33" pos:end="411:47">MB_TYPE_B_BACKW</name></expr>)</condition><block pos:start="411:49" pos:end="417:21">{<block_content pos:start="413:25" pos:end="415:65">

                        <expr_stmt pos:start="413:25" pos:end="413:65"><expr pos:start="413:25" pos:end="413:64"><name pos:start="413:25" pos:end="413:45"><name pos:start="413:25" pos:end="413:25">s</name><operator pos:start="413:26" pos:end="413:27">-&gt;</operator><name pos:start="413:28" pos:end="413:39">field_select</name><index pos:start="413:40" pos:end="413:42">[<expr pos:start="413:41" pos:end="413:41"><literal type="number" pos:start="413:41" pos:end="413:41">0</literal></expr>]</index><index pos:start="413:43" pos:end="413:45">[<expr pos:start="413:44" pos:end="413:44"><literal type="number" pos:start="413:44" pos:end="413:44">0</literal></expr>]</index></name><operator pos:start="413:46" pos:end="413:46">=</operator> <call pos:start="413:48" pos:end="413:64"><name pos:start="413:48" pos:end="413:56">get_bits1</name><argument_list pos:start="413:57" pos:end="413:64">(<argument pos:start="413:58" pos:end="413:63"><expr pos:start="413:58" pos:end="413:63"><operator pos:start="413:58" pos:end="413:58">&amp;</operator><name pos:start="413:59" pos:end="413:63"><name pos:start="413:59" pos:end="413:59">s</name><operator pos:start="413:60" pos:end="413:61">-&gt;</operator><name pos:start="413:62" pos:end="413:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="415:25" pos:end="415:65"><expr pos:start="415:25" pos:end="415:64"><name pos:start="415:25" pos:end="415:45"><name pos:start="415:25" pos:end="415:25">s</name><operator pos:start="415:26" pos:end="415:27">-&gt;</operator><name pos:start="415:28" pos:end="415:39">field_select</name><index pos:start="415:40" pos:end="415:42">[<expr pos:start="415:41" pos:end="415:41"><literal type="number" pos:start="415:41" pos:end="415:41">0</literal></expr>]</index><index pos:start="415:43" pos:end="415:45">[<expr pos:start="415:44" pos:end="415:44"><literal type="number" pos:start="415:44" pos:end="415:44">1</literal></expr>]</index></name><operator pos:start="415:46" pos:end="415:46">=</operator> <call pos:start="415:48" pos:end="415:64"><name pos:start="415:48" pos:end="415:56">get_bits1</name><argument_list pos:start="415:57" pos:end="415:64">(<argument pos:start="415:58" pos:end="415:63"><expr pos:start="415:58" pos:end="415:63"><operator pos:start="415:58" pos:end="415:58">&amp;</operator><name pos:start="415:59" pos:end="415:63"><name pos:start="415:59" pos:end="415:59">s</name><operator pos:start="415:60" pos:end="415:61">-&gt;</operator><name pos:start="415:62" pos:end="415:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="419:21" pos:end="425:21"><if pos:start="419:21" pos:end="425:21">if<condition pos:start="419:23" pos:end="419:47">(<expr pos:start="419:24" pos:end="419:46"><name pos:start="419:24" pos:end="419:30">mb_type</name><operator pos:start="419:31" pos:end="419:32">!=</operator><name pos:start="419:33" pos:end="419:46">MB_TYPE_B_FORW</name></expr>)</condition><block pos:start="419:48" pos:end="425:21">{<block_content pos:start="421:25" pos:end="423:65">

                        <expr_stmt pos:start="421:25" pos:end="421:65"><expr pos:start="421:25" pos:end="421:64"><name pos:start="421:25" pos:end="421:45"><name pos:start="421:25" pos:end="421:25">s</name><operator pos:start="421:26" pos:end="421:27">-&gt;</operator><name pos:start="421:28" pos:end="421:39">field_select</name><index pos:start="421:40" pos:end="421:42">[<expr pos:start="421:41" pos:end="421:41"><literal type="number" pos:start="421:41" pos:end="421:41">1</literal></expr>]</index><index pos:start="421:43" pos:end="421:45">[<expr pos:start="421:44" pos:end="421:44"><literal type="number" pos:start="421:44" pos:end="421:44">0</literal></expr>]</index></name><operator pos:start="421:46" pos:end="421:46">=</operator> <call pos:start="421:48" pos:end="421:64"><name pos:start="421:48" pos:end="421:56">get_bits1</name><argument_list pos:start="421:57" pos:end="421:64">(<argument pos:start="421:58" pos:end="421:63"><expr pos:start="421:58" pos:end="421:63"><operator pos:start="421:58" pos:end="421:58">&amp;</operator><name pos:start="421:59" pos:end="421:63"><name pos:start="421:59" pos:end="421:59">s</name><operator pos:start="421:60" pos:end="421:61">-&gt;</operator><name pos:start="421:62" pos:end="421:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="423:25" pos:end="423:65"><expr pos:start="423:25" pos:end="423:64"><name pos:start="423:25" pos:end="423:45"><name pos:start="423:25" pos:end="423:25">s</name><operator pos:start="423:26" pos:end="423:27">-&gt;</operator><name pos:start="423:28" pos:end="423:39">field_select</name><index pos:start="423:40" pos:end="423:42">[<expr pos:start="423:41" pos:end="423:41"><literal type="number" pos:start="423:41" pos:end="423:41">1</literal></expr>]</index><index pos:start="423:43" pos:end="423:45">[<expr pos:start="423:44" pos:end="423:44"><literal type="number" pos:start="423:44" pos:end="423:44">1</literal></expr>]</index></name><operator pos:start="423:46" pos:end="423:46">=</operator> <call pos:start="423:48" pos:end="423:64"><name pos:start="423:48" pos:end="423:56">get_bits1</name><argument_list pos:start="423:57" pos:end="423:64">(<argument pos:start="423:58" pos:end="423:63"><expr pos:start="423:58" pos:end="423:63"><operator pos:start="423:58" pos:end="423:58">&amp;</operator><name pos:start="423:59" pos:end="423:63"><name pos:start="423:59" pos:end="423:59">s</name><operator pos:start="423:60" pos:end="423:61">-&gt;</operator><name pos:start="423:62" pos:end="423:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="433:13" pos:end="433:26"><expr pos:start="433:13" pos:end="433:25"><name pos:start="433:13" pos:end="433:21"><name pos:start="433:13" pos:end="433:13">s</name><operator pos:start="433:14" pos:end="433:15">-&gt;</operator><name pos:start="433:16" pos:end="433:21">mv_dir</name></name> <operator pos:start="433:23" pos:end="433:23">=</operator> <literal type="number" pos:start="433:25" pos:end="433:25">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="435:13" pos:end="529:13"><if pos:start="435:13" pos:end="477:13">if<condition pos:start="435:15" pos:end="435:54">(<expr pos:start="435:16" pos:end="435:53"><name pos:start="435:16" pos:end="435:22">mb_type</name><operator pos:start="435:23" pos:end="435:24">!=</operator><name pos:start="435:25" pos:end="435:40">MB_TYPE_B_DIRECT</name> <operator pos:start="435:42" pos:end="435:43">&amp;&amp;</operator> <operator pos:start="435:45" pos:end="435:45">!</operator><name pos:start="435:46" pos:end="435:53">field_mv</name></expr>)</condition><block pos:start="435:55" pos:end="477:13">{<block_content pos:start="437:17" pos:end="475:106">

                <expr_stmt pos:start="437:17" pos:end="437:42"><expr pos:start="437:17" pos:end="437:41"><name pos:start="437:17" pos:end="437:26"><name pos:start="437:17" pos:end="437:17">s</name><operator pos:start="437:18" pos:end="437:19">-&gt;</operator><name pos:start="437:20" pos:end="437:26">mv_type</name></name><operator pos:start="437:27" pos:end="437:27">=</operator> <name pos:start="437:29" pos:end="437:41">MV_TYPE_16X16</name></expr>;</expr_stmt>

                <if_stmt pos:start="439:17" pos:end="453:17"><if pos:start="439:17" pos:end="453:17">if<condition pos:start="439:19" pos:end="439:44">(<expr pos:start="439:20" pos:end="439:43"><name pos:start="439:20" pos:end="439:26">mb_type</name><operator pos:start="439:27" pos:end="439:28">!=</operator><name pos:start="439:29" pos:end="439:43">MB_TYPE_B_BACKW</name></expr>)</condition><block pos:start="439:45" pos:end="453:17">{<block_content pos:start="441:21" pos:end="451:82">

                    <expr_stmt pos:start="441:21" pos:end="441:47"><expr pos:start="441:21" pos:end="441:46"><name pos:start="441:21" pos:end="441:29"><name pos:start="441:21" pos:end="441:21">s</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:29">mv_dir</name></name> <operator pos:start="441:31" pos:end="441:31">=</operator> <name pos:start="441:33" pos:end="441:46">MV_DIR_FORWARD</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="445:21" pos:end="445:79"><expr pos:start="445:21" pos:end="445:78"><name pos:start="445:21" pos:end="445:22">mx</name> <operator pos:start="445:24" pos:end="445:24">=</operator> <call pos:start="445:26" pos:end="445:78"><name pos:start="445:26" pos:end="445:43">h263_decode_motion</name><argument_list pos:start="445:44" pos:end="445:78">(<argument pos:start="445:45" pos:end="445:45"><expr pos:start="445:45" pos:end="445:45"><name pos:start="445:45" pos:end="445:45">s</name></expr></argument>, <argument pos:start="445:48" pos:end="445:66"><expr pos:start="445:48" pos:end="445:66"><name pos:start="445:48" pos:end="445:66"><name pos:start="445:48" pos:end="445:48">s</name><operator pos:start="445:49" pos:end="445:50">-&gt;</operator><name pos:start="445:51" pos:end="445:57">last_mv</name><index pos:start="445:58" pos:end="445:60">[<expr pos:start="445:59" pos:end="445:59"><literal type="number" pos:start="445:59" pos:end="445:59">0</literal></expr>]</index><index pos:start="445:61" pos:end="445:63">[<expr pos:start="445:62" pos:end="445:62"><literal type="number" pos:start="445:62" pos:end="445:62">0</literal></expr>]</index><index pos:start="445:64" pos:end="445:66">[<expr pos:start="445:65" pos:end="445:65"><literal type="number" pos:start="445:65" pos:end="445:65">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="445:69" pos:end="445:77"><expr pos:start="445:69" pos:end="445:77"><name pos:start="445:69" pos:end="445:77"><name pos:start="445:69" pos:end="445:69">s</name><operator pos:start="445:70" pos:end="445:71">-&gt;</operator><name pos:start="445:72" pos:end="445:77">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="447:21" pos:end="447:79"><expr pos:start="447:21" pos:end="447:78"><name pos:start="447:21" pos:end="447:22">my</name> <operator pos:start="447:24" pos:end="447:24">=</operator> <call pos:start="447:26" pos:end="447:78"><name pos:start="447:26" pos:end="447:43">h263_decode_motion</name><argument_list pos:start="447:44" pos:end="447:78">(<argument pos:start="447:45" pos:end="447:45"><expr pos:start="447:45" pos:end="447:45"><name pos:start="447:45" pos:end="447:45">s</name></expr></argument>, <argument pos:start="447:48" pos:end="447:66"><expr pos:start="447:48" pos:end="447:66"><name pos:start="447:48" pos:end="447:66"><name pos:start="447:48" pos:end="447:48">s</name><operator pos:start="447:49" pos:end="447:50">-&gt;</operator><name pos:start="447:51" pos:end="447:57">last_mv</name><index pos:start="447:58" pos:end="447:60">[<expr pos:start="447:59" pos:end="447:59"><literal type="number" pos:start="447:59" pos:end="447:59">0</literal></expr>]</index><index pos:start="447:61" pos:end="447:63">[<expr pos:start="447:62" pos:end="447:62"><literal type="number" pos:start="447:62" pos:end="447:62">0</literal></expr>]</index><index pos:start="447:64" pos:end="447:66">[<expr pos:start="447:65" pos:end="447:65"><literal type="number" pos:start="447:65" pos:end="447:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="447:69" pos:end="447:77"><expr pos:start="447:69" pos:end="447:77"><name pos:start="447:69" pos:end="447:77"><name pos:start="447:69" pos:end="447:69">s</name><operator pos:start="447:70" pos:end="447:71">-&gt;</operator><name pos:start="447:72" pos:end="447:77">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="449:21" pos:end="449:82"><expr pos:start="449:21" pos:end="449:81"><name pos:start="449:21" pos:end="449:39"><name pos:start="449:21" pos:end="449:21">s</name><operator pos:start="449:22" pos:end="449:23">-&gt;</operator><name pos:start="449:24" pos:end="449:30">last_mv</name><index pos:start="449:31" pos:end="449:33">[<expr pos:start="449:32" pos:end="449:32"><literal type="number" pos:start="449:32" pos:end="449:32">0</literal></expr>]</index><index pos:start="449:34" pos:end="449:36">[<expr pos:start="449:35" pos:end="449:35"><literal type="number" pos:start="449:35" pos:end="449:35">1</literal></expr>]</index><index pos:start="449:37" pos:end="449:39">[<expr pos:start="449:38" pos:end="449:38"><literal type="number" pos:start="449:38" pos:end="449:38">0</literal></expr>]</index></name><operator pos:start="449:40" pos:end="449:40">=</operator> <name pos:start="449:42" pos:end="449:60"><name pos:start="449:42" pos:end="449:42">s</name><operator pos:start="449:43" pos:end="449:44">-&gt;</operator><name pos:start="449:45" pos:end="449:51">last_mv</name><index pos:start="449:52" pos:end="449:54">[<expr pos:start="449:53" pos:end="449:53"><literal type="number" pos:start="449:53" pos:end="449:53">0</literal></expr>]</index><index pos:start="449:55" pos:end="449:57">[<expr pos:start="449:56" pos:end="449:56"><literal type="number" pos:start="449:56" pos:end="449:56">0</literal></expr>]</index><index pos:start="449:58" pos:end="449:60">[<expr pos:start="449:59" pos:end="449:59"><literal type="number" pos:start="449:59" pos:end="449:59">0</literal></expr>]</index></name><operator pos:start="449:61" pos:end="449:61">=</operator> <name pos:start="449:63" pos:end="449:76"><name pos:start="449:63" pos:end="449:63">s</name><operator pos:start="449:64" pos:end="449:65">-&gt;</operator><name pos:start="449:66" pos:end="449:67">mv</name><index pos:start="449:68" pos:end="449:70">[<expr pos:start="449:69" pos:end="449:69"><literal type="number" pos:start="449:69" pos:end="449:69">0</literal></expr>]</index><index pos:start="449:71" pos:end="449:73">[<expr pos:start="449:72" pos:end="449:72"><literal type="number" pos:start="449:72" pos:end="449:72">0</literal></expr>]</index><index pos:start="449:74" pos:end="449:76">[<expr pos:start="449:75" pos:end="449:75"><literal type="number" pos:start="449:75" pos:end="449:75">0</literal></expr>]</index></name> <operator pos:start="449:78" pos:end="449:78">=</operator> <name pos:start="449:80" pos:end="449:81">mx</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="451:21" pos:end="451:82"><expr pos:start="451:21" pos:end="451:81"><name pos:start="451:21" pos:end="451:39"><name pos:start="451:21" pos:end="451:21">s</name><operator pos:start="451:22" pos:end="451:23">-&gt;</operator><name pos:start="451:24" pos:end="451:30">last_mv</name><index pos:start="451:31" pos:end="451:33">[<expr pos:start="451:32" pos:end="451:32"><literal type="number" pos:start="451:32" pos:end="451:32">0</literal></expr>]</index><index pos:start="451:34" pos:end="451:36">[<expr pos:start="451:35" pos:end="451:35"><literal type="number" pos:start="451:35" pos:end="451:35">1</literal></expr>]</index><index pos:start="451:37" pos:end="451:39">[<expr pos:start="451:38" pos:end="451:38"><literal type="number" pos:start="451:38" pos:end="451:38">1</literal></expr>]</index></name><operator pos:start="451:40" pos:end="451:40">=</operator> <name pos:start="451:42" pos:end="451:60"><name pos:start="451:42" pos:end="451:42">s</name><operator pos:start="451:43" pos:end="451:44">-&gt;</operator><name pos:start="451:45" pos:end="451:51">last_mv</name><index pos:start="451:52" pos:end="451:54">[<expr pos:start="451:53" pos:end="451:53"><literal type="number" pos:start="451:53" pos:end="451:53">0</literal></expr>]</index><index pos:start="451:55" pos:end="451:57">[<expr pos:start="451:56" pos:end="451:56"><literal type="number" pos:start="451:56" pos:end="451:56">0</literal></expr>]</index><index pos:start="451:58" pos:end="451:60">[<expr pos:start="451:59" pos:end="451:59"><literal type="number" pos:start="451:59" pos:end="451:59">1</literal></expr>]</index></name><operator pos:start="451:61" pos:end="451:61">=</operator> <name pos:start="451:63" pos:end="451:76"><name pos:start="451:63" pos:end="451:63">s</name><operator pos:start="451:64" pos:end="451:65">-&gt;</operator><name pos:start="451:66" pos:end="451:67">mv</name><index pos:start="451:68" pos:end="451:70">[<expr pos:start="451:69" pos:end="451:69"><literal type="number" pos:start="451:69" pos:end="451:69">0</literal></expr>]</index><index pos:start="451:71" pos:end="451:73">[<expr pos:start="451:72" pos:end="451:72"><literal type="number" pos:start="451:72" pos:end="451:72">0</literal></expr>]</index><index pos:start="451:74" pos:end="451:76">[<expr pos:start="451:75" pos:end="451:75"><literal type="number" pos:start="451:75" pos:end="451:75">1</literal></expr>]</index></name> <operator pos:start="451:78" pos:end="451:78">=</operator> <name pos:start="451:80" pos:end="451:81">my</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

    

                <if_stmt pos:start="457:17" pos:end="471:17"><if pos:start="457:17" pos:end="471:17">if<condition pos:start="457:19" pos:end="457:43">(<expr pos:start="457:20" pos:end="457:42"><name pos:start="457:20" pos:end="457:26">mb_type</name><operator pos:start="457:27" pos:end="457:28">!=</operator><name pos:start="457:29" pos:end="457:42">MB_TYPE_B_FORW</name></expr>)</condition><block pos:start="457:44" pos:end="471:17">{<block_content pos:start="459:21" pos:end="469:82">

                    <expr_stmt pos:start="459:21" pos:end="459:49"><expr pos:start="459:21" pos:end="459:48"><name pos:start="459:21" pos:end="459:29"><name pos:start="459:21" pos:end="459:21">s</name><operator pos:start="459:22" pos:end="459:23">-&gt;</operator><name pos:start="459:24" pos:end="459:29">mv_dir</name></name> <operator pos:start="459:31" pos:end="459:32">|=</operator> <name pos:start="459:34" pos:end="459:48">MV_DIR_BACKWARD</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="463:21" pos:end="463:79"><expr pos:start="463:21" pos:end="463:78"><name pos:start="463:21" pos:end="463:22">mx</name> <operator pos:start="463:24" pos:end="463:24">=</operator> <call pos:start="463:26" pos:end="463:78"><name pos:start="463:26" pos:end="463:43">h263_decode_motion</name><argument_list pos:start="463:44" pos:end="463:78">(<argument pos:start="463:45" pos:end="463:45"><expr pos:start="463:45" pos:end="463:45"><name pos:start="463:45" pos:end="463:45">s</name></expr></argument>, <argument pos:start="463:48" pos:end="463:66"><expr pos:start="463:48" pos:end="463:66"><name pos:start="463:48" pos:end="463:66"><name pos:start="463:48" pos:end="463:48">s</name><operator pos:start="463:49" pos:end="463:50">-&gt;</operator><name pos:start="463:51" pos:end="463:57">last_mv</name><index pos:start="463:58" pos:end="463:60">[<expr pos:start="463:59" pos:end="463:59"><literal type="number" pos:start="463:59" pos:end="463:59">1</literal></expr>]</index><index pos:start="463:61" pos:end="463:63">[<expr pos:start="463:62" pos:end="463:62"><literal type="number" pos:start="463:62" pos:end="463:62">0</literal></expr>]</index><index pos:start="463:64" pos:end="463:66">[<expr pos:start="463:65" pos:end="463:65"><literal type="number" pos:start="463:65" pos:end="463:65">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="463:69" pos:end="463:77"><expr pos:start="463:69" pos:end="463:77"><name pos:start="463:69" pos:end="463:77"><name pos:start="463:69" pos:end="463:69">s</name><operator pos:start="463:70" pos:end="463:71">-&gt;</operator><name pos:start="463:72" pos:end="463:77">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="465:21" pos:end="465:79"><expr pos:start="465:21" pos:end="465:78"><name pos:start="465:21" pos:end="465:22">my</name> <operator pos:start="465:24" pos:end="465:24">=</operator> <call pos:start="465:26" pos:end="465:78"><name pos:start="465:26" pos:end="465:43">h263_decode_motion</name><argument_list pos:start="465:44" pos:end="465:78">(<argument pos:start="465:45" pos:end="465:45"><expr pos:start="465:45" pos:end="465:45"><name pos:start="465:45" pos:end="465:45">s</name></expr></argument>, <argument pos:start="465:48" pos:end="465:66"><expr pos:start="465:48" pos:end="465:66"><name pos:start="465:48" pos:end="465:66"><name pos:start="465:48" pos:end="465:48">s</name><operator pos:start="465:49" pos:end="465:50">-&gt;</operator><name pos:start="465:51" pos:end="465:57">last_mv</name><index pos:start="465:58" pos:end="465:60">[<expr pos:start="465:59" pos:end="465:59"><literal type="number" pos:start="465:59" pos:end="465:59">1</literal></expr>]</index><index pos:start="465:61" pos:end="465:63">[<expr pos:start="465:62" pos:end="465:62"><literal type="number" pos:start="465:62" pos:end="465:62">0</literal></expr>]</index><index pos:start="465:64" pos:end="465:66">[<expr pos:start="465:65" pos:end="465:65"><literal type="number" pos:start="465:65" pos:end="465:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="465:69" pos:end="465:77"><expr pos:start="465:69" pos:end="465:77"><name pos:start="465:69" pos:end="465:77"><name pos:start="465:69" pos:end="465:69">s</name><operator pos:start="465:70" pos:end="465:71">-&gt;</operator><name pos:start="465:72" pos:end="465:77">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="467:21" pos:end="467:82"><expr pos:start="467:21" pos:end="467:81"><name pos:start="467:21" pos:end="467:39"><name pos:start="467:21" pos:end="467:21">s</name><operator pos:start="467:22" pos:end="467:23">-&gt;</operator><name pos:start="467:24" pos:end="467:30">last_mv</name><index pos:start="467:31" pos:end="467:33">[<expr pos:start="467:32" pos:end="467:32"><literal type="number" pos:start="467:32" pos:end="467:32">1</literal></expr>]</index><index pos:start="467:34" pos:end="467:36">[<expr pos:start="467:35" pos:end="467:35"><literal type="number" pos:start="467:35" pos:end="467:35">1</literal></expr>]</index><index pos:start="467:37" pos:end="467:39">[<expr pos:start="467:38" pos:end="467:38"><literal type="number" pos:start="467:38" pos:end="467:38">0</literal></expr>]</index></name><operator pos:start="467:40" pos:end="467:40">=</operator> <name pos:start="467:42" pos:end="467:60"><name pos:start="467:42" pos:end="467:42">s</name><operator pos:start="467:43" pos:end="467:44">-&gt;</operator><name pos:start="467:45" pos:end="467:51">last_mv</name><index pos:start="467:52" pos:end="467:54">[<expr pos:start="467:53" pos:end="467:53"><literal type="number" pos:start="467:53" pos:end="467:53">1</literal></expr>]</index><index pos:start="467:55" pos:end="467:57">[<expr pos:start="467:56" pos:end="467:56"><literal type="number" pos:start="467:56" pos:end="467:56">0</literal></expr>]</index><index pos:start="467:58" pos:end="467:60">[<expr pos:start="467:59" pos:end="467:59"><literal type="number" pos:start="467:59" pos:end="467:59">0</literal></expr>]</index></name><operator pos:start="467:61" pos:end="467:61">=</operator> <name pos:start="467:63" pos:end="467:76"><name pos:start="467:63" pos:end="467:63">s</name><operator pos:start="467:64" pos:end="467:65">-&gt;</operator><name pos:start="467:66" pos:end="467:67">mv</name><index pos:start="467:68" pos:end="467:70">[<expr pos:start="467:69" pos:end="467:69"><literal type="number" pos:start="467:69" pos:end="467:69">1</literal></expr>]</index><index pos:start="467:71" pos:end="467:73">[<expr pos:start="467:72" pos:end="467:72"><literal type="number" pos:start="467:72" pos:end="467:72">0</literal></expr>]</index><index pos:start="467:74" pos:end="467:76">[<expr pos:start="467:75" pos:end="467:75"><literal type="number" pos:start="467:75" pos:end="467:75">0</literal></expr>]</index></name> <operator pos:start="467:78" pos:end="467:78">=</operator> <name pos:start="467:80" pos:end="467:81">mx</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="469:21" pos:end="469:82"><expr pos:start="469:21" pos:end="469:81"><name pos:start="469:21" pos:end="469:39"><name pos:start="469:21" pos:end="469:21">s</name><operator pos:start="469:22" pos:end="469:23">-&gt;</operator><name pos:start="469:24" pos:end="469:30">last_mv</name><index pos:start="469:31" pos:end="469:33">[<expr pos:start="469:32" pos:end="469:32"><literal type="number" pos:start="469:32" pos:end="469:32">1</literal></expr>]</index><index pos:start="469:34" pos:end="469:36">[<expr pos:start="469:35" pos:end="469:35"><literal type="number" pos:start="469:35" pos:end="469:35">1</literal></expr>]</index><index pos:start="469:37" pos:end="469:39">[<expr pos:start="469:38" pos:end="469:38"><literal type="number" pos:start="469:38" pos:end="469:38">1</literal></expr>]</index></name><operator pos:start="469:40" pos:end="469:40">=</operator> <name pos:start="469:42" pos:end="469:60"><name pos:start="469:42" pos:end="469:42">s</name><operator pos:start="469:43" pos:end="469:44">-&gt;</operator><name pos:start="469:45" pos:end="469:51">last_mv</name><index pos:start="469:52" pos:end="469:54">[<expr pos:start="469:53" pos:end="469:53"><literal type="number" pos:start="469:53" pos:end="469:53">1</literal></expr>]</index><index pos:start="469:55" pos:end="469:57">[<expr pos:start="469:56" pos:end="469:56"><literal type="number" pos:start="469:56" pos:end="469:56">0</literal></expr>]</index><index pos:start="469:58" pos:end="469:60">[<expr pos:start="469:59" pos:end="469:59"><literal type="number" pos:start="469:59" pos:end="469:59">1</literal></expr>]</index></name><operator pos:start="469:61" pos:end="469:61">=</operator> <name pos:start="469:63" pos:end="469:76"><name pos:start="469:63" pos:end="469:63">s</name><operator pos:start="469:64" pos:end="469:65">-&gt;</operator><name pos:start="469:66" pos:end="469:67">mv</name><index pos:start="469:68" pos:end="469:70">[<expr pos:start="469:69" pos:end="469:69"><literal type="number" pos:start="469:69" pos:end="469:69">1</literal></expr>]</index><index pos:start="469:71" pos:end="469:73">[<expr pos:start="469:72" pos:end="469:72"><literal type="number" pos:start="469:72" pos:end="469:72">0</literal></expr>]</index><index pos:start="469:74" pos:end="469:76">[<expr pos:start="469:75" pos:end="469:75"><literal type="number" pos:start="469:75" pos:end="469:75">1</literal></expr>]</index></name> <operator pos:start="469:78" pos:end="469:78">=</operator> <name pos:start="469:80" pos:end="469:81">my</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="473:17" pos:end="475:106"><if pos:start="473:17" pos:end="475:106">if<condition pos:start="473:19" pos:end="473:45">(<expr pos:start="473:20" pos:end="473:44"><name pos:start="473:20" pos:end="473:26">mb_type</name><operator pos:start="473:27" pos:end="473:28">!=</operator><name pos:start="473:29" pos:end="473:44">MB_TYPE_B_DIRECT</name></expr>)</condition><block type="pseudo" pos:start="475:21" pos:end="475:106"><block_content pos:start="475:21" pos:end="475:106">

                    <expr_stmt pos:start="475:21" pos:end="475:106"><expr pos:start="475:21" pos:end="475:105"><call pos:start="475:21" pos:end="475:105"><name pos:start="475:21" pos:end="475:33">PRINT_MB_TYPE</name><argument_list pos:start="475:34" pos:end="475:105">(<argument pos:start="475:35" pos:end="475:104"><expr pos:start="475:35" pos:end="475:104"><ternary pos:start="475:35" pos:end="475:104"><condition pos:start="475:35" pos:end="475:59"><expr pos:start="475:35" pos:end="475:57"><name pos:start="475:35" pos:end="475:41">mb_type</name><operator pos:start="475:42" pos:end="475:43">==</operator><name pos:start="475:44" pos:end="475:57">MB_TYPE_B_FORW</name></expr> ?</condition><then pos:start="475:61" pos:end="475:63"> <expr pos:start="475:61" pos:end="475:63"><literal type="string" pos:start="475:61" pos:end="475:63">"F"</literal></expr> </then><else pos:start="475:65" pos:end="475:104">: <expr pos:start="475:67" pos:end="475:104"><operator pos:start="475:67" pos:end="475:67">(</operator><ternary pos:start="475:68" pos:end="475:103"><condition pos:start="475:68" pos:end="475:93"><expr pos:start="475:68" pos:end="475:91"><name pos:start="475:68" pos:end="475:74">mb_type</name><operator pos:start="475:75" pos:end="475:76">==</operator><name pos:start="475:77" pos:end="475:91">MB_TYPE_B_BACKW</name></expr> ?</condition><then pos:start="475:95" pos:end="475:97"> <expr pos:start="475:95" pos:end="475:97"><literal type="string" pos:start="475:95" pos:end="475:97">"B"</literal></expr> </then><else pos:start="475:99" pos:end="475:103">: <expr pos:start="475:101" pos:end="475:103"><literal type="string" pos:start="475:101" pos:end="475:103">"T"</literal></expr></else></ternary><operator pos:start="475:104" pos:end="475:104">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="477:14" pos:end="529:13">else if<condition pos:start="477:21" pos:end="477:47">(<expr pos:start="477:22" pos:end="477:46"><name pos:start="477:22" pos:end="477:28">mb_type</name><operator pos:start="477:29" pos:end="477:30">!=</operator><name pos:start="477:31" pos:end="477:46">MB_TYPE_B_DIRECT</name></expr>)</condition><block pos:start="477:48" pos:end="529:13">{<block_content pos:start="479:17" pos:end="527:106">

                <expr_stmt pos:start="479:17" pos:end="479:42"><expr pos:start="479:17" pos:end="479:41"><name pos:start="479:17" pos:end="479:26"><name pos:start="479:17" pos:end="479:17">s</name><operator pos:start="479:18" pos:end="479:19">-&gt;</operator><name pos:start="479:20" pos:end="479:26">mv_type</name></name><operator pos:start="479:27" pos:end="479:27">=</operator> <name pos:start="479:29" pos:end="479:41">MV_TYPE_FIELD</name></expr>;</expr_stmt>



                <if_stmt pos:start="483:17" pos:end="501:17"><if pos:start="483:17" pos:end="501:17">if<condition pos:start="483:19" pos:end="483:44">(<expr pos:start="483:20" pos:end="483:43"><name pos:start="483:20" pos:end="483:26">mb_type</name><operator pos:start="483:27" pos:end="483:28">!=</operator><name pos:start="483:29" pos:end="483:43">MB_TYPE_B_BACKW</name></expr>)</condition><block pos:start="483:45" pos:end="501:17">{<block_content pos:start="485:21" pos:end="499:21">

                    <expr_stmt pos:start="485:21" pos:end="485:47"><expr pos:start="485:21" pos:end="485:46"><name pos:start="485:21" pos:end="485:29"><name pos:start="485:21" pos:end="485:21">s</name><operator pos:start="485:22" pos:end="485:23">-&gt;</operator><name pos:start="485:24" pos:end="485:29">mv_dir</name></name> <operator pos:start="485:31" pos:end="485:31">=</operator> <name pos:start="485:33" pos:end="485:46">MV_DIR_FORWARD</name></expr>;</expr_stmt>

                

                    <for pos:start="489:21" pos:end="499:21">for<control pos:start="489:24" pos:end="489:38">(<init pos:start="489:25" pos:end="489:28"><expr pos:start="489:25" pos:end="489:27"><name pos:start="489:25" pos:end="489:25">i</name><operator pos:start="489:26" pos:end="489:26">=</operator><literal type="number" pos:start="489:27" pos:end="489:27">0</literal></expr>;</init> <condition pos:start="489:30" pos:end="489:33"><expr pos:start="489:30" pos:end="489:32"><name pos:start="489:30" pos:end="489:30">i</name><operator pos:start="489:31" pos:end="489:31">&lt;</operator><literal type="number" pos:start="489:32" pos:end="489:32">2</literal></expr>;</condition> <incr pos:start="489:35" pos:end="489:37"><expr pos:start="489:35" pos:end="489:37"><name pos:start="489:35" pos:end="489:35">i</name><operator pos:start="489:36" pos:end="489:37">++</operator></expr></incr>)</control><block pos:start="489:39" pos:end="499:21">{<block_content pos:start="491:25" pos:end="497:69">

                        <expr_stmt pos:start="491:25" pos:end="491:85"><expr pos:start="491:25" pos:end="491:84"><name pos:start="491:25" pos:end="491:26">mx</name> <operator pos:start="491:28" pos:end="491:28">=</operator> <call pos:start="491:30" pos:end="491:84"><name pos:start="491:30" pos:end="491:47">h263_decode_motion</name><argument_list pos:start="491:48" pos:end="491:84">(<argument pos:start="491:49" pos:end="491:49"><expr pos:start="491:49" pos:end="491:49"><name pos:start="491:49" pos:end="491:49">s</name></expr></argument>, <argument pos:start="491:52" pos:end="491:70"><expr pos:start="491:52" pos:end="491:70"><name pos:start="491:52" pos:end="491:70"><name pos:start="491:52" pos:end="491:52">s</name><operator pos:start="491:53" pos:end="491:54">-&gt;</operator><name pos:start="491:55" pos:end="491:61">last_mv</name><index pos:start="491:62" pos:end="491:64">[<expr pos:start="491:63" pos:end="491:63"><literal type="number" pos:start="491:63" pos:end="491:63">0</literal></expr>]</index><index pos:start="491:65" pos:end="491:67">[<expr pos:start="491:66" pos:end="491:66"><name pos:start="491:66" pos:end="491:66">i</name></expr>]</index><index pos:start="491:68" pos:end="491:70">[<expr pos:start="491:69" pos:end="491:69"><literal type="number" pos:start="491:69" pos:end="491:69">0</literal></expr>]</index></name></expr></argument>  , <argument pos:start="491:75" pos:end="491:83"><expr pos:start="491:75" pos:end="491:83"><name pos:start="491:75" pos:end="491:83"><name pos:start="491:75" pos:end="491:75">s</name><operator pos:start="491:76" pos:end="491:77">-&gt;</operator><name pos:start="491:78" pos:end="491:83">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="493:25" pos:end="493:85"><expr pos:start="493:25" pos:end="493:84"><name pos:start="493:25" pos:end="493:26">my</name> <operator pos:start="493:28" pos:end="493:28">=</operator> <call pos:start="493:30" pos:end="493:84"><name pos:start="493:30" pos:end="493:47">h263_decode_motion</name><argument_list pos:start="493:48" pos:end="493:84">(<argument pos:start="493:49" pos:end="493:49"><expr pos:start="493:49" pos:end="493:49"><name pos:start="493:49" pos:end="493:49">s</name></expr></argument>, <argument pos:start="493:52" pos:end="493:72"><expr pos:start="493:52" pos:end="493:72"><name pos:start="493:52" pos:end="493:70"><name pos:start="493:52" pos:end="493:52">s</name><operator pos:start="493:53" pos:end="493:54">-&gt;</operator><name pos:start="493:55" pos:end="493:61">last_mv</name><index pos:start="493:62" pos:end="493:64">[<expr pos:start="493:63" pos:end="493:63"><literal type="number" pos:start="493:63" pos:end="493:63">0</literal></expr>]</index><index pos:start="493:65" pos:end="493:67">[<expr pos:start="493:66" pos:end="493:66"><name pos:start="493:66" pos:end="493:66">i</name></expr>]</index><index pos:start="493:68" pos:end="493:70">[<expr pos:start="493:69" pos:end="493:69"><literal type="number" pos:start="493:69" pos:end="493:69">1</literal></expr>]</index></name><operator pos:start="493:71" pos:end="493:71">/</operator><literal type="number" pos:start="493:72" pos:end="493:72">2</literal></expr></argument>, <argument pos:start="493:75" pos:end="493:83"><expr pos:start="493:75" pos:end="493:83"><name pos:start="493:75" pos:end="493:83"><name pos:start="493:75" pos:end="493:75">s</name><operator pos:start="493:76" pos:end="493:77">-&gt;</operator><name pos:start="493:78" pos:end="493:83">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="495:25" pos:end="495:66"><expr pos:start="495:25" pos:end="495:65"><name pos:start="495:25" pos:end="495:43"><name pos:start="495:25" pos:end="495:25">s</name><operator pos:start="495:26" pos:end="495:27">-&gt;</operator><name pos:start="495:28" pos:end="495:34">last_mv</name><index pos:start="495:35" pos:end="495:37">[<expr pos:start="495:36" pos:end="495:36"><literal type="number" pos:start="495:36" pos:end="495:36">0</literal></expr>]</index><index pos:start="495:38" pos:end="495:40">[<expr pos:start="495:39" pos:end="495:39"><name pos:start="495:39" pos:end="495:39">i</name></expr>]</index><index pos:start="495:41" pos:end="495:43">[<expr pos:start="495:42" pos:end="495:42"><literal type="number" pos:start="495:42" pos:end="495:42">0</literal></expr>]</index></name><operator pos:start="495:44" pos:end="495:44">=</operator>  <name pos:start="495:47" pos:end="495:60"><name pos:start="495:47" pos:end="495:47">s</name><operator pos:start="495:48" pos:end="495:49">-&gt;</operator><name pos:start="495:50" pos:end="495:51">mv</name><index pos:start="495:52" pos:end="495:54">[<expr pos:start="495:53" pos:end="495:53"><literal type="number" pos:start="495:53" pos:end="495:53">0</literal></expr>]</index><index pos:start="495:55" pos:end="495:57">[<expr pos:start="495:56" pos:end="495:56"><name pos:start="495:56" pos:end="495:56">i</name></expr>]</index><index pos:start="495:58" pos:end="495:60">[<expr pos:start="495:59" pos:end="495:59"><literal type="number" pos:start="495:59" pos:end="495:59">0</literal></expr>]</index></name> <operator pos:start="495:62" pos:end="495:62">=</operator> <name pos:start="495:64" pos:end="495:65">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="497:25" pos:end="497:69"><expr pos:start="497:25" pos:end="497:68"><name pos:start="497:25" pos:end="497:43"><name pos:start="497:25" pos:end="497:25">s</name><operator pos:start="497:26" pos:end="497:27">-&gt;</operator><name pos:start="497:28" pos:end="497:34">last_mv</name><index pos:start="497:35" pos:end="497:37">[<expr pos:start="497:36" pos:end="497:36"><literal type="number" pos:start="497:36" pos:end="497:36">0</literal></expr>]</index><index pos:start="497:38" pos:end="497:40">[<expr pos:start="497:39" pos:end="497:39"><name pos:start="497:39" pos:end="497:39">i</name></expr>]</index><index pos:start="497:41" pos:end="497:43">[<expr pos:start="497:42" pos:end="497:42"><literal type="number" pos:start="497:42" pos:end="497:42">1</literal></expr>]</index></name><operator pos:start="497:44" pos:end="497:44">=</operator> <operator pos:start="497:46" pos:end="497:46">(</operator><name pos:start="497:47" pos:end="497:60"><name pos:start="497:47" pos:end="497:47">s</name><operator pos:start="497:48" pos:end="497:49">-&gt;</operator><name pos:start="497:50" pos:end="497:51">mv</name><index pos:start="497:52" pos:end="497:54">[<expr pos:start="497:53" pos:end="497:53"><literal type="number" pos:start="497:53" pos:end="497:53">0</literal></expr>]</index><index pos:start="497:55" pos:end="497:57">[<expr pos:start="497:56" pos:end="497:56"><name pos:start="497:56" pos:end="497:56">i</name></expr>]</index><index pos:start="497:58" pos:end="497:60">[<expr pos:start="497:59" pos:end="497:59"><literal type="number" pos:start="497:59" pos:end="497:59">1</literal></expr>]</index></name> <operator pos:start="497:62" pos:end="497:62">=</operator> <name pos:start="497:64" pos:end="497:65">my</name><operator pos:start="497:66" pos:end="497:66">)</operator><operator pos:start="497:67" pos:end="497:67">*</operator><literal type="number" pos:start="497:68" pos:end="497:68">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

    

                <if_stmt pos:start="505:17" pos:end="523:17"><if pos:start="505:17" pos:end="523:17">if<condition pos:start="505:19" pos:end="505:43">(<expr pos:start="505:20" pos:end="505:42"><name pos:start="505:20" pos:end="505:26">mb_type</name><operator pos:start="505:27" pos:end="505:28">!=</operator><name pos:start="505:29" pos:end="505:42">MB_TYPE_B_FORW</name></expr>)</condition><block pos:start="505:44" pos:end="523:17">{<block_content pos:start="507:21" pos:end="521:21">

                    <expr_stmt pos:start="507:21" pos:end="507:49"><expr pos:start="507:21" pos:end="507:48"><name pos:start="507:21" pos:end="507:29"><name pos:start="507:21" pos:end="507:21">s</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:29">mv_dir</name></name> <operator pos:start="507:31" pos:end="507:32">|=</operator> <name pos:start="507:34" pos:end="507:48">MV_DIR_BACKWARD</name></expr>;</expr_stmt>



                    <for pos:start="511:21" pos:end="521:21">for<control pos:start="511:24" pos:end="511:38">(<init pos:start="511:25" pos:end="511:28"><expr pos:start="511:25" pos:end="511:27"><name pos:start="511:25" pos:end="511:25">i</name><operator pos:start="511:26" pos:end="511:26">=</operator><literal type="number" pos:start="511:27" pos:end="511:27">0</literal></expr>;</init> <condition pos:start="511:30" pos:end="511:33"><expr pos:start="511:30" pos:end="511:32"><name pos:start="511:30" pos:end="511:30">i</name><operator pos:start="511:31" pos:end="511:31">&lt;</operator><literal type="number" pos:start="511:32" pos:end="511:32">2</literal></expr>;</condition> <incr pos:start="511:35" pos:end="511:37"><expr pos:start="511:35" pos:end="511:37"><name pos:start="511:35" pos:end="511:35">i</name><operator pos:start="511:36" pos:end="511:37">++</operator></expr></incr>)</control><block pos:start="511:39" pos:end="521:21">{<block_content pos:start="513:25" pos:end="519:69">

                        <expr_stmt pos:start="513:25" pos:end="513:85"><expr pos:start="513:25" pos:end="513:84"><name pos:start="513:25" pos:end="513:26">mx</name> <operator pos:start="513:28" pos:end="513:28">=</operator> <call pos:start="513:30" pos:end="513:84"><name pos:start="513:30" pos:end="513:47">h263_decode_motion</name><argument_list pos:start="513:48" pos:end="513:84">(<argument pos:start="513:49" pos:end="513:49"><expr pos:start="513:49" pos:end="513:49"><name pos:start="513:49" pos:end="513:49">s</name></expr></argument>, <argument pos:start="513:52" pos:end="513:70"><expr pos:start="513:52" pos:end="513:70"><name pos:start="513:52" pos:end="513:70"><name pos:start="513:52" pos:end="513:52">s</name><operator pos:start="513:53" pos:end="513:54">-&gt;</operator><name pos:start="513:55" pos:end="513:61">last_mv</name><index pos:start="513:62" pos:end="513:64">[<expr pos:start="513:63" pos:end="513:63"><literal type="number" pos:start="513:63" pos:end="513:63">1</literal></expr>]</index><index pos:start="513:65" pos:end="513:67">[<expr pos:start="513:66" pos:end="513:66"><name pos:start="513:66" pos:end="513:66">i</name></expr>]</index><index pos:start="513:68" pos:end="513:70">[<expr pos:start="513:69" pos:end="513:69"><literal type="number" pos:start="513:69" pos:end="513:69">0</literal></expr>]</index></name></expr></argument>  , <argument pos:start="513:75" pos:end="513:83"><expr pos:start="513:75" pos:end="513:83"><name pos:start="513:75" pos:end="513:83"><name pos:start="513:75" pos:end="513:75">s</name><operator pos:start="513:76" pos:end="513:77">-&gt;</operator><name pos:start="513:78" pos:end="513:83">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="515:25" pos:end="515:85"><expr pos:start="515:25" pos:end="515:84"><name pos:start="515:25" pos:end="515:26">my</name> <operator pos:start="515:28" pos:end="515:28">=</operator> <call pos:start="515:30" pos:end="515:84"><name pos:start="515:30" pos:end="515:47">h263_decode_motion</name><argument_list pos:start="515:48" pos:end="515:84">(<argument pos:start="515:49" pos:end="515:49"><expr pos:start="515:49" pos:end="515:49"><name pos:start="515:49" pos:end="515:49">s</name></expr></argument>, <argument pos:start="515:52" pos:end="515:72"><expr pos:start="515:52" pos:end="515:72"><name pos:start="515:52" pos:end="515:70"><name pos:start="515:52" pos:end="515:52">s</name><operator pos:start="515:53" pos:end="515:54">-&gt;</operator><name pos:start="515:55" pos:end="515:61">last_mv</name><index pos:start="515:62" pos:end="515:64">[<expr pos:start="515:63" pos:end="515:63"><literal type="number" pos:start="515:63" pos:end="515:63">1</literal></expr>]</index><index pos:start="515:65" pos:end="515:67">[<expr pos:start="515:66" pos:end="515:66"><name pos:start="515:66" pos:end="515:66">i</name></expr>]</index><index pos:start="515:68" pos:end="515:70">[<expr pos:start="515:69" pos:end="515:69"><literal type="number" pos:start="515:69" pos:end="515:69">1</literal></expr>]</index></name><operator pos:start="515:71" pos:end="515:71">/</operator><literal type="number" pos:start="515:72" pos:end="515:72">2</literal></expr></argument>, <argument pos:start="515:75" pos:end="515:83"><expr pos:start="515:75" pos:end="515:83"><name pos:start="515:75" pos:end="515:83"><name pos:start="515:75" pos:end="515:75">s</name><operator pos:start="515:76" pos:end="515:77">-&gt;</operator><name pos:start="515:78" pos:end="515:83">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="517:25" pos:end="517:66"><expr pos:start="517:25" pos:end="517:65"><name pos:start="517:25" pos:end="517:43"><name pos:start="517:25" pos:end="517:25">s</name><operator pos:start="517:26" pos:end="517:27">-&gt;</operator><name pos:start="517:28" pos:end="517:34">last_mv</name><index pos:start="517:35" pos:end="517:37">[<expr pos:start="517:36" pos:end="517:36"><literal type="number" pos:start="517:36" pos:end="517:36">1</literal></expr>]</index><index pos:start="517:38" pos:end="517:40">[<expr pos:start="517:39" pos:end="517:39"><name pos:start="517:39" pos:end="517:39">i</name></expr>]</index><index pos:start="517:41" pos:end="517:43">[<expr pos:start="517:42" pos:end="517:42"><literal type="number" pos:start="517:42" pos:end="517:42">0</literal></expr>]</index></name><operator pos:start="517:44" pos:end="517:44">=</operator>  <name pos:start="517:47" pos:end="517:60"><name pos:start="517:47" pos:end="517:47">s</name><operator pos:start="517:48" pos:end="517:49">-&gt;</operator><name pos:start="517:50" pos:end="517:51">mv</name><index pos:start="517:52" pos:end="517:54">[<expr pos:start="517:53" pos:end="517:53"><literal type="number" pos:start="517:53" pos:end="517:53">1</literal></expr>]</index><index pos:start="517:55" pos:end="517:57">[<expr pos:start="517:56" pos:end="517:56"><name pos:start="517:56" pos:end="517:56">i</name></expr>]</index><index pos:start="517:58" pos:end="517:60">[<expr pos:start="517:59" pos:end="517:59"><literal type="number" pos:start="517:59" pos:end="517:59">0</literal></expr>]</index></name> <operator pos:start="517:62" pos:end="517:62">=</operator> <name pos:start="517:64" pos:end="517:65">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="519:25" pos:end="519:69"><expr pos:start="519:25" pos:end="519:68"><name pos:start="519:25" pos:end="519:43"><name pos:start="519:25" pos:end="519:25">s</name><operator pos:start="519:26" pos:end="519:27">-&gt;</operator><name pos:start="519:28" pos:end="519:34">last_mv</name><index pos:start="519:35" pos:end="519:37">[<expr pos:start="519:36" pos:end="519:36"><literal type="number" pos:start="519:36" pos:end="519:36">1</literal></expr>]</index><index pos:start="519:38" pos:end="519:40">[<expr pos:start="519:39" pos:end="519:39"><name pos:start="519:39" pos:end="519:39">i</name></expr>]</index><index pos:start="519:41" pos:end="519:43">[<expr pos:start="519:42" pos:end="519:42"><literal type="number" pos:start="519:42" pos:end="519:42">1</literal></expr>]</index></name><operator pos:start="519:44" pos:end="519:44">=</operator> <operator pos:start="519:46" pos:end="519:46">(</operator><name pos:start="519:47" pos:end="519:60"><name pos:start="519:47" pos:end="519:47">s</name><operator pos:start="519:48" pos:end="519:49">-&gt;</operator><name pos:start="519:50" pos:end="519:51">mv</name><index pos:start="519:52" pos:end="519:54">[<expr pos:start="519:53" pos:end="519:53"><literal type="number" pos:start="519:53" pos:end="519:53">1</literal></expr>]</index><index pos:start="519:55" pos:end="519:57">[<expr pos:start="519:56" pos:end="519:56"><name pos:start="519:56" pos:end="519:56">i</name></expr>]</index><index pos:start="519:58" pos:end="519:60">[<expr pos:start="519:59" pos:end="519:59"><literal type="number" pos:start="519:59" pos:end="519:59">1</literal></expr>]</index></name> <operator pos:start="519:62" pos:end="519:62">=</operator> <name pos:start="519:64" pos:end="519:65">my</name><operator pos:start="519:66" pos:end="519:66">)</operator><operator pos:start="519:67" pos:end="519:67">*</operator><literal type="number" pos:start="519:68" pos:end="519:68">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="525:17" pos:end="527:106"><if pos:start="525:17" pos:end="527:106">if<condition pos:start="525:19" pos:end="525:45">(<expr pos:start="525:20" pos:end="525:44"><name pos:start="525:20" pos:end="525:26">mb_type</name><operator pos:start="525:27" pos:end="525:28">!=</operator><name pos:start="525:29" pos:end="525:44">MB_TYPE_B_DIRECT</name></expr>)</condition><block type="pseudo" pos:start="527:21" pos:end="527:106"><block_content pos:start="527:21" pos:end="527:106">

                    <expr_stmt pos:start="527:21" pos:end="527:106"><expr pos:start="527:21" pos:end="527:105"><call pos:start="527:21" pos:end="527:105"><name pos:start="527:21" pos:end="527:33">PRINT_MB_TYPE</name><argument_list pos:start="527:34" pos:end="527:105">(<argument pos:start="527:35" pos:end="527:104"><expr pos:start="527:35" pos:end="527:104"><ternary pos:start="527:35" pos:end="527:104"><condition pos:start="527:35" pos:end="527:59"><expr pos:start="527:35" pos:end="527:57"><name pos:start="527:35" pos:end="527:41">mb_type</name><operator pos:start="527:42" pos:end="527:43">==</operator><name pos:start="527:44" pos:end="527:57">MB_TYPE_B_FORW</name></expr> ?</condition><then pos:start="527:61" pos:end="527:63"> <expr pos:start="527:61" pos:end="527:63"><literal type="string" pos:start="527:61" pos:end="527:63">"f"</literal></expr> </then><else pos:start="527:65" pos:end="527:104">: <expr pos:start="527:67" pos:end="527:104"><operator pos:start="527:67" pos:end="527:67">(</operator><ternary pos:start="527:68" pos:end="527:103"><condition pos:start="527:68" pos:end="527:93"><expr pos:start="527:68" pos:end="527:91"><name pos:start="527:68" pos:end="527:74">mb_type</name><operator pos:start="527:75" pos:end="527:76">==</operator><name pos:start="527:77" pos:end="527:91">MB_TYPE_B_BACKW</name></expr> ?</condition><then pos:start="527:95" pos:end="527:97"> <expr pos:start="527:95" pos:end="527:97"><literal type="string" pos:start="527:95" pos:end="527:97">"b"</literal></expr> </then><else pos:start="527:99" pos:end="527:103">: <expr pos:start="527:101" pos:end="527:103"><literal type="string" pos:start="527:101" pos:end="527:103">"t"</literal></expr></else></ternary><operator pos:start="527:104" pos:end="527:104">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

          

        <if_stmt pos:start="535:9" pos:end="555:9"><if pos:start="535:9" pos:end="555:9">if<condition pos:start="535:11" pos:end="535:51">(<expr pos:start="535:12" pos:end="535:50"><name pos:start="535:12" pos:end="535:18">mb_type</name><operator pos:start="535:19" pos:end="535:20">==</operator><literal type="number" pos:start="535:21" pos:end="535:21">4</literal> <operator pos:start="535:23" pos:end="535:24">||</operator> <name pos:start="535:26" pos:end="535:32">mb_type</name><operator pos:start="535:33" pos:end="535:34">==</operator><name pos:start="535:35" pos:end="535:50">MB_TYPE_B_DIRECT</name></expr>)</condition><block pos:start="535:52" pos:end="555:9">{<block_content pos:start="537:13" pos:end="553:46">

            <if_stmt pos:start="537:13" pos:end="547:13"><if pos:start="537:13" pos:end="539:24">if<condition pos:start="537:15" pos:end="537:26">(<expr pos:start="537:16" pos:end="537:25"><name pos:start="537:16" pos:end="537:22">mb_type</name><operator pos:start="537:23" pos:end="537:24">==</operator><literal type="number" pos:start="537:25" pos:end="537:25">4</literal></expr>)</condition><block type="pseudo" pos:start="539:17" pos:end="539:24"><block_content pos:start="539:17" pos:end="539:24">

                <expr_stmt pos:start="539:17" pos:end="539:24"><expr pos:start="539:17" pos:end="539:23"><name pos:start="539:17" pos:end="539:18">mx</name><operator pos:start="539:19" pos:end="539:19">=</operator><name pos:start="539:20" pos:end="539:21">my</name><operator pos:start="539:22" pos:end="539:22">=</operator><literal type="number" pos:start="539:23" pos:end="539:23">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="541:13" pos:end="547:13">else<block pos:start="541:17" pos:end="547:13">{<block_content pos:start="543:17" pos:end="545:49">

                <expr_stmt pos:start="543:17" pos:end="543:49"><expr pos:start="543:17" pos:end="543:48"><name pos:start="543:17" pos:end="543:18">mx</name> <operator pos:start="543:20" pos:end="543:20">=</operator> <call pos:start="543:22" pos:end="543:48"><name pos:start="543:22" pos:end="543:39">h263_decode_motion</name><argument_list pos:start="543:40" pos:end="543:48">(<argument pos:start="543:41" pos:end="543:41"><expr pos:start="543:41" pos:end="543:41"><name pos:start="543:41" pos:end="543:41">s</name></expr></argument>, <argument pos:start="543:44" pos:end="543:44"><expr pos:start="543:44" pos:end="543:44"><literal type="number" pos:start="543:44" pos:end="543:44">0</literal></expr></argument>, <argument pos:start="543:47" pos:end="543:47"><expr pos:start="543:47" pos:end="543:47"><literal type="number" pos:start="543:47" pos:end="543:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="545:17" pos:end="545:49"><expr pos:start="545:17" pos:end="545:48"><name pos:start="545:17" pos:end="545:18">my</name> <operator pos:start="545:20" pos:end="545:20">=</operator> <call pos:start="545:22" pos:end="545:48"><name pos:start="545:22" pos:end="545:39">h263_decode_motion</name><argument_list pos:start="545:40" pos:end="545:48">(<argument pos:start="545:41" pos:end="545:41"><expr pos:start="545:41" pos:end="545:41"><name pos:start="545:41" pos:end="545:41">s</name></expr></argument>, <argument pos:start="545:44" pos:end="545:44"><expr pos:start="545:44" pos:end="545:44"><literal type="number" pos:start="545:44" pos:end="545:44">0</literal></expr></argument>, <argument pos:start="545:47" pos:end="545:47"><expr pos:start="545:47" pos:end="545:47"><literal type="number" pos:start="545:47" pos:end="545:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

 

            <expr_stmt pos:start="551:13" pos:end="551:69"><expr pos:start="551:13" pos:end="551:68"><name pos:start="551:13" pos:end="551:21"><name pos:start="551:13" pos:end="551:13">s</name><operator pos:start="551:14" pos:end="551:15">-&gt;</operator><name pos:start="551:16" pos:end="551:21">mv_dir</name></name> <operator pos:start="551:23" pos:end="551:23">=</operator> <name pos:start="551:25" pos:end="551:38">MV_DIR_FORWARD</name> <operator pos:start="551:40" pos:end="551:40">|</operator> <name pos:start="551:42" pos:end="551:56">MV_DIR_BACKWARD</name> <operator pos:start="551:58" pos:end="551:58">|</operator> <name pos:start="551:60" pos:end="551:68">MV_DIRECT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:46"><expr pos:start="553:13" pos:end="553:45"><call pos:start="553:13" pos:end="553:45"><name pos:start="553:13" pos:end="553:34">ff_mpeg4_set_direct_mv</name><argument_list pos:start="553:35" pos:end="553:45">(<argument pos:start="553:36" pos:end="553:36"><expr pos:start="553:36" pos:end="553:36"><name pos:start="553:36" pos:end="553:36">s</name></expr></argument>, <argument pos:start="553:39" pos:end="553:40"><expr pos:start="553:39" pos:end="553:40"><name pos:start="553:39" pos:end="553:40">mx</name></expr></argument>, <argument pos:start="553:43" pos:end="553:44"><expr pos:start="553:43" pos:end="553:44"><name pos:start="553:43" pos:end="553:44">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

        <if_stmt pos:start="559:9" pos:end="565:9"><if pos:start="559:9" pos:end="565:9">if<condition pos:start="559:11" pos:end="559:34">(<expr pos:start="559:12" pos:end="559:33"><name pos:start="559:12" pos:end="559:32"><name pos:start="559:12" pos:end="559:18">mb_type</name><argument_list type="generic" pos:start="559:19" pos:end="559:32">&lt;<argument pos:start="559:20" pos:end="559:31"><expr pos:start="559:20" pos:end="559:31"><literal type="number" pos:start="559:20" pos:end="559:20">0</literal> <operator pos:start="559:22" pos:end="559:23">||</operator> <name pos:start="559:25" pos:end="559:31">mb_type</name></expr></argument>&gt;</argument_list></name><literal type="number" pos:start="559:33" pos:end="559:33">4</literal></expr>)</condition><block pos:start="559:35" pos:end="565:9">{<block_content pos:start="561:13" pos:end="563:22">

            <expr_stmt pos:start="561:13" pos:end="561:40"><expr pos:start="561:13" pos:end="561:39"><call pos:start="561:13" pos:end="561:39"><name pos:start="561:13" pos:end="561:18">printf</name><argument_list pos:start="561:19" pos:end="561:39">(<argument pos:start="561:20" pos:end="561:38"><expr pos:start="561:20" pos:end="561:38"><literal type="string" pos:start="561:20" pos:end="561:38">"illegal MB_type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="563:13" pos:end="563:22">return <expr pos:start="563:20" pos:end="563:21"><operator pos:start="563:20" pos:end="563:20">-</operator><literal type="number" pos:start="563:21" pos:end="563:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="567:7" pos:end="647:5">else <block pos:start="567:12" pos:end="647:5">{<block_content pos:start="569:9" pos:end="645:17"> <comment type="block" pos:start="567:14" pos:end="567:26">/* I-Frame */</comment>

        <expr_stmt pos:start="569:9" pos:end="569:80"><expr pos:start="569:9" pos:end="569:79"><name pos:start="569:9" pos:end="569:12">cbpc</name> <operator pos:start="569:14" pos:end="569:14">=</operator> <call pos:start="569:16" pos:end="569:79"><name pos:start="569:16" pos:end="569:23">get_vlc2</name><argument_list pos:start="569:24" pos:end="569:79">(<argument pos:start="569:25" pos:end="569:30"><expr pos:start="569:25" pos:end="569:30"><operator pos:start="569:25" pos:end="569:25">&amp;</operator><name pos:start="569:26" pos:end="569:30"><name pos:start="569:26" pos:end="569:26">s</name><operator pos:start="569:27" pos:end="569:28">-&gt;</operator><name pos:start="569:29" pos:end="569:30">gb</name></name></expr></argument>, <argument pos:start="569:33" pos:end="569:53"><expr pos:start="569:33" pos:end="569:53"><name pos:start="569:33" pos:end="569:53"><name pos:start="569:33" pos:end="569:47">intra_MCBPC_vlc</name><operator pos:start="569:48" pos:end="569:48">.</operator><name pos:start="569:49" pos:end="569:53">table</name></name></expr></argument>, <argument pos:start="569:56" pos:end="569:75"><expr pos:start="569:56" pos:end="569:75"><name pos:start="569:56" pos:end="569:75">INTRA_MCBPC_VLC_BITS</name></expr></argument>, <argument pos:start="569:78" pos:end="569:78"><expr pos:start="569:78" pos:end="569:78"><literal type="number" pos:start="569:78" pos:end="569:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="571:9" pos:end="573:22"><if pos:start="571:9" pos:end="573:22">if <condition pos:start="571:12" pos:end="571:21">(<expr pos:start="571:13" pos:end="571:20"><name pos:start="571:13" pos:end="571:16">cbpc</name> <operator pos:start="571:18" pos:end="571:18">&lt;</operator> <literal type="number" pos:start="571:20" pos:end="571:20">0</literal></expr>)</condition><block type="pseudo" pos:start="573:13" pos:end="573:22"><block_content pos:start="573:13" pos:end="573:22">

            <return pos:start="573:13" pos:end="573:22">return <expr pos:start="573:20" pos:end="573:21"><operator pos:start="573:20" pos:end="573:20">-</operator><literal type="number" pos:start="573:21" pos:end="573:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:26"><expr pos:start="575:9" pos:end="575:25"><name pos:start="575:9" pos:end="575:14">dquant</name> <operator pos:start="575:16" pos:end="575:16">=</operator> <name pos:start="575:18" pos:end="575:21">cbpc</name> <operator pos:start="575:23" pos:end="575:23">&amp;</operator> <literal type="number" pos:start="575:25" pos:end="575:25">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="577:9" pos:end="577:24"><expr pos:start="577:9" pos:end="577:23"><name pos:start="577:9" pos:end="577:19"><name pos:start="577:9" pos:end="577:9">s</name><operator pos:start="577:10" pos:end="577:11">-&gt;</operator><name pos:start="577:12" pos:end="577:19">mb_intra</name></name> <operator pos:start="577:21" pos:end="577:21">=</operator> <literal type="number" pos:start="577:23" pos:end="577:23">1</literal></expr>;</expr_stmt>

<label pos:start="579:1" pos:end="579:6"><name pos:start="579:1" pos:end="579:5">intra</name>:</label>

        <expr_stmt pos:start="581:9" pos:end="581:23"><expr pos:start="581:9" pos:end="581:22"><name pos:start="581:9" pos:end="581:18"><name pos:start="581:9" pos:end="581:9">s</name><operator pos:start="581:10" pos:end="581:11">-&gt;</operator><name pos:start="581:12" pos:end="581:18">ac_pred</name></name> <operator pos:start="581:20" pos:end="581:20">=</operator> <literal type="number" pos:start="581:22" pos:end="581:22">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="583:9" pos:end="591:9"><if pos:start="583:9" pos:end="591:9">if <condition pos:start="583:12" pos:end="583:40">(<expr pos:start="583:13" pos:end="583:39"><name pos:start="583:13" pos:end="583:24"><name pos:start="583:13" pos:end="583:13">s</name><operator pos:start="583:14" pos:end="583:15">-&gt;</operator><name pos:start="583:16" pos:end="583:24">h263_pred</name></name> <operator pos:start="583:26" pos:end="583:27">||</operator> <name pos:start="583:29" pos:end="583:39"><name pos:start="583:29" pos:end="583:29">s</name><operator pos:start="583:30" pos:end="583:31">-&gt;</operator><name pos:start="583:32" pos:end="583:39">h263_aic</name></name></expr>)</condition> <block pos:start="583:42" pos:end="591:9">{<block_content pos:start="585:13" pos:end="589:52">

            <expr_stmt pos:start="585:13" pos:end="585:43"><expr pos:start="585:13" pos:end="585:42"><name pos:start="585:13" pos:end="585:22"><name pos:start="585:13" pos:end="585:13">s</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:22">ac_pred</name></name> <operator pos:start="585:24" pos:end="585:24">=</operator> <call pos:start="585:26" pos:end="585:42"><name pos:start="585:26" pos:end="585:34">get_bits1</name><argument_list pos:start="585:35" pos:end="585:42">(<argument pos:start="585:36" pos:end="585:41"><expr pos:start="585:36" pos:end="585:41"><operator pos:start="585:36" pos:end="585:36">&amp;</operator><name pos:start="585:37" pos:end="585:41"><name pos:start="585:37" pos:end="585:37">s</name><operator pos:start="585:38" pos:end="585:39">-&gt;</operator><name pos:start="585:40" pos:end="585:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="587:13" pos:end="589:52"><if pos:start="587:13" pos:end="589:52">if <condition pos:start="587:16" pos:end="587:42">(<expr pos:start="587:17" pos:end="587:41"><name pos:start="587:17" pos:end="587:26"><name pos:start="587:17" pos:end="587:17">s</name><operator pos:start="587:18" pos:end="587:19">-&gt;</operator><name pos:start="587:20" pos:end="587:26">ac_pred</name></name> <operator pos:start="587:28" pos:end="587:29">&amp;&amp;</operator> <name pos:start="587:31" pos:end="587:41"><name pos:start="587:31" pos:end="587:31">s</name><operator pos:start="587:32" pos:end="587:33">-&gt;</operator><name pos:start="587:34" pos:end="587:41">h263_aic</name></name></expr>)</condition><block type="pseudo" pos:start="589:17" pos:end="589:52"><block_content pos:start="589:17" pos:end="589:52">

                <expr_stmt pos:start="589:17" pos:end="589:52"><expr pos:start="589:17" pos:end="589:51"><name pos:start="589:17" pos:end="589:31"><name pos:start="589:17" pos:end="589:17">s</name><operator pos:start="589:18" pos:end="589:19">-&gt;</operator><name pos:start="589:20" pos:end="589:31">h263_aic_dir</name></name> <operator pos:start="589:33" pos:end="589:33">=</operator> <call pos:start="589:35" pos:end="589:51"><name pos:start="589:35" pos:end="589:43">get_bits1</name><argument_list pos:start="589:44" pos:end="589:51">(<argument pos:start="589:45" pos:end="589:50"><expr pos:start="589:45" pos:end="589:50"><operator pos:start="589:45" pos:end="589:45">&amp;</operator><name pos:start="589:46" pos:end="589:50"><name pos:start="589:46" pos:end="589:46">s</name><operator pos:start="589:47" pos:end="589:48">-&gt;</operator><name pos:start="589:49" pos:end="589:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="593:9" pos:end="593:46"><expr pos:start="593:9" pos:end="593:45"><call pos:start="593:9" pos:end="593:45"><name pos:start="593:9" pos:end="593:21">PRINT_MB_TYPE</name><argument_list pos:start="593:22" pos:end="593:45">(<argument pos:start="593:23" pos:end="593:44"><expr pos:start="593:23" pos:end="593:44"><ternary pos:start="593:23" pos:end="593:44"><condition pos:start="593:23" pos:end="593:34"><expr pos:start="593:23" pos:end="593:32"><name pos:start="593:23" pos:end="593:32"><name pos:start="593:23" pos:end="593:23">s</name><operator pos:start="593:24" pos:end="593:25">-&gt;</operator><name pos:start="593:26" pos:end="593:32">ac_pred</name></name></expr> ?</condition><then pos:start="593:36" pos:end="593:38"> <expr pos:start="593:36" pos:end="593:38"><literal type="string" pos:start="593:36" pos:end="593:38">"A"</literal></expr> </then><else pos:start="593:40" pos:end="593:44">: <expr pos:start="593:42" pos:end="593:44"><literal type="string" pos:start="593:42" pos:end="593:44">"I"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <expr_stmt pos:start="597:9" pos:end="597:66"><expr pos:start="597:9" pos:end="597:65"><name pos:start="597:9" pos:end="597:12">cbpy</name> <operator pos:start="597:14" pos:end="597:14">=</operator> <call pos:start="597:16" pos:end="597:65"><name pos:start="597:16" pos:end="597:23">get_vlc2</name><argument_list pos:start="597:24" pos:end="597:65">(<argument pos:start="597:25" pos:end="597:30"><expr pos:start="597:25" pos:end="597:30"><operator pos:start="597:25" pos:end="597:25">&amp;</operator><name pos:start="597:26" pos:end="597:30"><name pos:start="597:26" pos:end="597:26">s</name><operator pos:start="597:27" pos:end="597:28">-&gt;</operator><name pos:start="597:29" pos:end="597:30">gb</name></name></expr></argument>, <argument pos:start="597:33" pos:end="597:46"><expr pos:start="597:33" pos:end="597:46"><name pos:start="597:33" pos:end="597:46"><name pos:start="597:33" pos:end="597:40">cbpy_vlc</name><operator pos:start="597:41" pos:end="597:41">.</operator><name pos:start="597:42" pos:end="597:46">table</name></name></expr></argument>, <argument pos:start="597:49" pos:end="597:61"><expr pos:start="597:49" pos:end="597:61"><name pos:start="597:49" pos:end="597:61">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="597:64" pos:end="597:64"><expr pos:start="597:64" pos:end="597:64"><literal type="number" pos:start="597:64" pos:end="597:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="599:9" pos:end="599:29"><if pos:start="599:9" pos:end="599:29">if<condition pos:start="599:11" pos:end="599:18">(<expr pos:start="599:12" pos:end="599:17"><name pos:start="599:12" pos:end="599:15">cbpy</name><operator pos:start="599:16" pos:end="599:16">&lt;</operator><literal type="number" pos:start="599:17" pos:end="599:17">0</literal></expr>)</condition><block type="pseudo" pos:start="599:20" pos:end="599:29"><block_content pos:start="599:20" pos:end="599:29"> <return pos:start="599:20" pos:end="599:29">return <expr pos:start="599:27" pos:end="599:28"><operator pos:start="599:27" pos:end="599:27">-</operator><literal type="number" pos:start="599:28" pos:end="599:28">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="601:9" pos:end="601:39"><expr pos:start="601:9" pos:end="601:38"><name pos:start="601:9" pos:end="601:11">cbp</name> <operator pos:start="601:13" pos:end="601:13">=</operator> <operator pos:start="601:15" pos:end="601:15">(</operator><name pos:start="601:16" pos:end="601:19">cbpc</name> <operator pos:start="601:21" pos:end="601:21">&amp;</operator> <literal type="number" pos:start="601:23" pos:end="601:23">3</literal><operator pos:start="601:24" pos:end="601:24">)</operator> <operator pos:start="601:26" pos:end="601:26">|</operator> <operator pos:start="601:28" pos:end="601:28">(</operator><name pos:start="601:29" pos:end="601:32">cbpy</name> <operator pos:start="601:34" pos:end="601:35">&lt;&lt;</operator> <literal type="number" pos:start="601:37" pos:end="601:37">2</literal><operator pos:start="601:38" pos:end="601:38">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="603:9" pos:end="607:9"><if pos:start="603:9" pos:end="607:9">if <condition pos:start="603:12" pos:end="603:19">(<expr pos:start="603:13" pos:end="603:18"><name pos:start="603:13" pos:end="603:18">dquant</name></expr>)</condition> <block pos:start="603:21" pos:end="607:9">{<block_content pos:start="605:13" pos:end="605:61">

            <expr_stmt pos:start="605:13" pos:end="605:61"><expr pos:start="605:13" pos:end="605:60"><call pos:start="605:13" pos:end="605:60"><name pos:start="605:13" pos:end="605:25">change_qscale</name><argument_list pos:start="605:26" pos:end="605:60">(<argument pos:start="605:27" pos:end="605:27"><expr pos:start="605:27" pos:end="605:27"><name pos:start="605:27" pos:end="605:27">s</name></expr></argument>, <argument pos:start="605:30" pos:end="605:59"><expr pos:start="605:30" pos:end="605:59"><name pos:start="605:30" pos:end="605:59"><name pos:start="605:30" pos:end="605:38">quant_tab</name><index pos:start="605:39" pos:end="605:59">[<expr pos:start="605:40" pos:end="605:58"><call pos:start="605:40" pos:end="605:58"><name pos:start="605:40" pos:end="605:47">get_bits</name><argument_list pos:start="605:48" pos:end="605:58">(<argument pos:start="605:49" pos:end="605:54"><expr pos:start="605:49" pos:end="605:54"><operator pos:start="605:49" pos:end="605:49">&amp;</operator><name pos:start="605:50" pos:end="605:54"><name pos:start="605:50" pos:end="605:50">s</name><operator pos:start="605:51" pos:end="605:52">-&gt;</operator><name pos:start="605:53" pos:end="605:54">gb</name></name></expr></argument>, <argument pos:start="605:57" pos:end="605:57"><expr pos:start="605:57" pos:end="605:57"><literal type="number" pos:start="605:57" pos:end="605:57">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

        <if_stmt pos:start="611:9" pos:end="613:49"><if pos:start="611:9" pos:end="613:49">if<condition pos:start="611:11" pos:end="611:36">(<expr pos:start="611:12" pos:end="611:35"><operator pos:start="611:12" pos:end="611:12">!</operator><name pos:start="611:13" pos:end="611:35"><name pos:start="611:13" pos:end="611:13">s</name><operator pos:start="611:14" pos:end="611:15">-&gt;</operator><name pos:start="611:16" pos:end="611:35">progressive_sequence</name></name></expr>)</condition><block type="pseudo" pos:start="613:13" pos:end="613:49"><block_content pos:start="613:13" pos:end="613:49">

            <expr_stmt pos:start="613:13" pos:end="613:49"><expr pos:start="613:13" pos:end="613:48"><name pos:start="613:13" pos:end="613:29"><name pos:start="613:13" pos:end="613:13">s</name><operator pos:start="613:14" pos:end="613:15">-&gt;</operator><name pos:start="613:16" pos:end="613:29">interlaced_dct</name></name><operator pos:start="613:30" pos:end="613:30">=</operator> <call pos:start="613:32" pos:end="613:48"><name pos:start="613:32" pos:end="613:40">get_bits1</name><argument_list pos:start="613:41" pos:end="613:48">(<argument pos:start="613:42" pos:end="613:47"><expr pos:start="613:42" pos:end="613:47"><operator pos:start="613:42" pos:end="613:42">&amp;</operator><name pos:start="613:43" pos:end="613:47"><name pos:start="613:43" pos:end="613:43">s</name><operator pos:start="613:44" pos:end="613:45">-&gt;</operator><name pos:start="613:46" pos:end="613:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="617:9" pos:end="617:31">/* decode each block */</comment>

        <if_stmt pos:start="619:9" pos:end="643:9"><if pos:start="619:9" pos:end="631:9">if <condition pos:start="619:12" pos:end="619:25">(<expr pos:start="619:13" pos:end="619:24"><name pos:start="619:13" pos:end="619:24"><name pos:start="619:13" pos:end="619:13">s</name><operator pos:start="619:14" pos:end="619:15">-&gt;</operator><name pos:start="619:16" pos:end="619:24">h263_pred</name></name></expr>)</condition> <block pos:start="619:27" pos:end="631:9">{<block_content pos:start="621:13" pos:end="629:13">

            <for pos:start="621:13" pos:end="629:13">for <control pos:start="621:17" pos:end="621:35">(<init pos:start="621:18" pos:end="621:23"><expr pos:start="621:18" pos:end="621:22"><name pos:start="621:18" pos:end="621:18">i</name> <operator pos:start="621:20" pos:end="621:20">=</operator> <literal type="number" pos:start="621:22" pos:end="621:22">0</literal></expr>;</init> <condition pos:start="621:25" pos:end="621:30"><expr pos:start="621:25" pos:end="621:29"><name pos:start="621:25" pos:end="621:25">i</name> <operator pos:start="621:27" pos:end="621:27">&lt;</operator> <literal type="number" pos:start="621:29" pos:end="621:29">6</literal></expr>;</condition> <incr pos:start="621:32" pos:end="621:34"><expr pos:start="621:32" pos:end="621:34"><name pos:start="621:32" pos:end="621:32">i</name><operator pos:start="621:33" pos:end="621:34">++</operator></expr></incr>)</control> <block pos:start="621:37" pos:end="629:13">{<block_content pos:start="623:17" pos:end="627:25">

                <if_stmt pos:start="623:17" pos:end="625:30"><if pos:start="623:17" pos:end="625:30">if <condition pos:start="623:20" pos:end="623:70">(<expr pos:start="623:21" pos:end="623:69"><call pos:start="623:21" pos:end="623:65"><name pos:start="623:21" pos:end="623:38">mpeg4_decode_block</name><argument_list pos:start="623:39" pos:end="623:65">(<argument pos:start="623:40" pos:end="623:40"><expr pos:start="623:40" pos:end="623:40"><name pos:start="623:40" pos:end="623:40">s</name></expr></argument>, <argument pos:start="623:43" pos:end="623:50"><expr pos:start="623:43" pos:end="623:50"><name pos:start="623:43" pos:end="623:50"><name pos:start="623:43" pos:end="623:47">block</name><index pos:start="623:48" pos:end="623:50">[<expr pos:start="623:49" pos:end="623:49"><name pos:start="623:49" pos:end="623:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="623:53" pos:end="623:53"><expr pos:start="623:53" pos:end="623:53"><name pos:start="623:53" pos:end="623:53">i</name></expr></argument>, <argument pos:start="623:56" pos:end="623:61"><expr pos:start="623:56" pos:end="623:61"><name pos:start="623:56" pos:end="623:58">cbp</name><operator pos:start="623:59" pos:end="623:59">&amp;</operator><literal type="number" pos:start="623:60" pos:end="623:61">32</literal></expr></argument>, <argument pos:start="623:64" pos:end="623:64"><expr pos:start="623:64" pos:end="623:64"><literal type="number" pos:start="623:64" pos:end="623:64">1</literal></expr></argument>)</argument_list></call> <operator pos:start="623:67" pos:end="623:67">&lt;</operator> <literal type="number" pos:start="623:69" pos:end="623:69">0</literal></expr>)</condition><block type="pseudo" pos:start="625:21" pos:end="625:30"><block_content pos:start="625:21" pos:end="625:30">

                    <return pos:start="625:21" pos:end="625:30">return <expr pos:start="625:28" pos:end="625:29"><operator pos:start="625:28" pos:end="625:28">-</operator><literal type="number" pos:start="625:29" pos:end="625:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="627:17" pos:end="627:25"><expr pos:start="627:17" pos:end="627:24"><name pos:start="627:17" pos:end="627:19">cbp</name><operator pos:start="627:20" pos:end="627:21">+=</operator><name pos:start="627:22" pos:end="627:24">cbp</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="631:11" pos:end="643:9">else <block pos:start="631:16" pos:end="643:9">{<block_content pos:start="633:13" pos:end="641:13">

            <for pos:start="633:13" pos:end="641:13">for <control pos:start="633:17" pos:end="633:35">(<init pos:start="633:18" pos:end="633:23"><expr pos:start="633:18" pos:end="633:22"><name pos:start="633:18" pos:end="633:18">i</name> <operator pos:start="633:20" pos:end="633:20">=</operator> <literal type="number" pos:start="633:22" pos:end="633:22">0</literal></expr>;</init> <condition pos:start="633:25" pos:end="633:30"><expr pos:start="633:25" pos:end="633:29"><name pos:start="633:25" pos:end="633:25">i</name> <operator pos:start="633:27" pos:end="633:27">&lt;</operator> <literal type="number" pos:start="633:29" pos:end="633:29">6</literal></expr>;</condition> <incr pos:start="633:32" pos:end="633:34"><expr pos:start="633:32" pos:end="633:34"><name pos:start="633:32" pos:end="633:32">i</name><operator pos:start="633:33" pos:end="633:34">++</operator></expr></incr>)</control> <block pos:start="633:37" pos:end="641:13">{<block_content pos:start="635:17" pos:end="639:25">

                <if_stmt pos:start="635:17" pos:end="637:30"><if pos:start="635:17" pos:end="637:30">if <condition pos:start="635:20" pos:end="635:66">(<expr pos:start="635:21" pos:end="635:65"><call pos:start="635:21" pos:end="635:61"><name pos:start="635:21" pos:end="635:37">h263_decode_block</name><argument_list pos:start="635:38" pos:end="635:61">(<argument pos:start="635:39" pos:end="635:39"><expr pos:start="635:39" pos:end="635:39"><name pos:start="635:39" pos:end="635:39">s</name></expr></argument>, <argument pos:start="635:42" pos:end="635:49"><expr pos:start="635:42" pos:end="635:49"><name pos:start="635:42" pos:end="635:49"><name pos:start="635:42" pos:end="635:46">block</name><index pos:start="635:47" pos:end="635:49">[<expr pos:start="635:48" pos:end="635:48"><name pos:start="635:48" pos:end="635:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="635:52" pos:end="635:52"><expr pos:start="635:52" pos:end="635:52"><name pos:start="635:52" pos:end="635:52">i</name></expr></argument>, <argument pos:start="635:55" pos:end="635:60"><expr pos:start="635:55" pos:end="635:60"><name pos:start="635:55" pos:end="635:57">cbp</name><operator pos:start="635:58" pos:end="635:58">&amp;</operator><literal type="number" pos:start="635:59" pos:end="635:60">32</literal></expr></argument>)</argument_list></call> <operator pos:start="635:63" pos:end="635:63">&lt;</operator> <literal type="number" pos:start="635:65" pos:end="635:65">0</literal></expr>)</condition><block type="pseudo" pos:start="637:21" pos:end="637:30"><block_content pos:start="637:21" pos:end="637:30">

                    <return pos:start="637:21" pos:end="637:30">return <expr pos:start="637:28" pos:end="637:29"><operator pos:start="637:28" pos:end="637:28">-</operator><literal type="number" pos:start="637:29" pos:end="637:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="639:17" pos:end="639:25"><expr pos:start="639:17" pos:end="639:24"><name pos:start="639:17" pos:end="639:19">cbp</name><operator pos:start="639:20" pos:end="639:21">+=</operator><name pos:start="639:22" pos:end="639:24">cbp</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="645:9" pos:end="645:17">goto <name pos:start="645:14" pos:end="645:16">end</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="651:5" pos:end="651:27">/* decode each block */</comment>

    <if_stmt pos:start="653:5" pos:end="677:5"><if pos:start="653:5" pos:end="665:5">if <condition pos:start="653:8" pos:end="653:21">(<expr pos:start="653:9" pos:end="653:20"><name pos:start="653:9" pos:end="653:20"><name pos:start="653:9" pos:end="653:9">s</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:20">h263_pred</name></name></expr>)</condition> <block pos:start="653:23" pos:end="665:5">{<block_content pos:start="655:9" pos:end="663:9">

        <for pos:start="655:9" pos:end="663:9">for <control pos:start="655:13" pos:end="655:31">(<init pos:start="655:14" pos:end="655:19"><expr pos:start="655:14" pos:end="655:18"><name pos:start="655:14" pos:end="655:14">i</name> <operator pos:start="655:16" pos:end="655:16">=</operator> <literal type="number" pos:start="655:18" pos:end="655:18">0</literal></expr>;</init> <condition pos:start="655:21" pos:end="655:26"><expr pos:start="655:21" pos:end="655:25"><name pos:start="655:21" pos:end="655:21">i</name> <operator pos:start="655:23" pos:end="655:23">&lt;</operator> <literal type="number" pos:start="655:25" pos:end="655:25">6</literal></expr>;</condition> <incr pos:start="655:28" pos:end="655:30"><expr pos:start="655:28" pos:end="655:30"><name pos:start="655:28" pos:end="655:28">i</name><operator pos:start="655:29" pos:end="655:30">++</operator></expr></incr>)</control> <block pos:start="655:33" pos:end="663:9">{<block_content pos:start="657:13" pos:end="661:21">

            <if_stmt pos:start="657:13" pos:end="659:26"><if pos:start="657:13" pos:end="659:26">if <condition pos:start="657:16" pos:end="657:66">(<expr pos:start="657:17" pos:end="657:65"><call pos:start="657:17" pos:end="657:61"><name pos:start="657:17" pos:end="657:34">mpeg4_decode_block</name><argument_list pos:start="657:35" pos:end="657:61">(<argument pos:start="657:36" pos:end="657:36"><expr pos:start="657:36" pos:end="657:36"><name pos:start="657:36" pos:end="657:36">s</name></expr></argument>, <argument pos:start="657:39" pos:end="657:46"><expr pos:start="657:39" pos:end="657:46"><name pos:start="657:39" pos:end="657:46"><name pos:start="657:39" pos:end="657:43">block</name><index pos:start="657:44" pos:end="657:46">[<expr pos:start="657:45" pos:end="657:45"><name pos:start="657:45" pos:end="657:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="657:49" pos:end="657:49"><expr pos:start="657:49" pos:end="657:49"><name pos:start="657:49" pos:end="657:49">i</name></expr></argument>, <argument pos:start="657:52" pos:end="657:57"><expr pos:start="657:52" pos:end="657:57"><name pos:start="657:52" pos:end="657:54">cbp</name><operator pos:start="657:55" pos:end="657:55">&amp;</operator><literal type="number" pos:start="657:56" pos:end="657:57">32</literal></expr></argument>, <argument pos:start="657:60" pos:end="657:60"><expr pos:start="657:60" pos:end="657:60"><literal type="number" pos:start="657:60" pos:end="657:60">0</literal></expr></argument>)</argument_list></call> <operator pos:start="657:63" pos:end="657:63">&lt;</operator> <literal type="number" pos:start="657:65" pos:end="657:65">0</literal></expr>)</condition><block type="pseudo" pos:start="659:17" pos:end="659:26"><block_content pos:start="659:17" pos:end="659:26">

                <return pos:start="659:17" pos:end="659:26">return <expr pos:start="659:24" pos:end="659:25"><operator pos:start="659:24" pos:end="659:24">-</operator><literal type="number" pos:start="659:25" pos:end="659:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="661:13" pos:end="661:21"><expr pos:start="661:13" pos:end="661:20"><name pos:start="661:13" pos:end="661:15">cbp</name><operator pos:start="661:16" pos:end="661:17">+=</operator><name pos:start="661:18" pos:end="661:20">cbp</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="665:7" pos:end="677:5">else <block pos:start="665:12" pos:end="677:5">{<block_content pos:start="667:9" pos:end="675:9">

        <for pos:start="667:9" pos:end="675:9">for <control pos:start="667:13" pos:end="667:31">(<init pos:start="667:14" pos:end="667:19"><expr pos:start="667:14" pos:end="667:18"><name pos:start="667:14" pos:end="667:14">i</name> <operator pos:start="667:16" pos:end="667:16">=</operator> <literal type="number" pos:start="667:18" pos:end="667:18">0</literal></expr>;</init> <condition pos:start="667:21" pos:end="667:26"><expr pos:start="667:21" pos:end="667:25"><name pos:start="667:21" pos:end="667:21">i</name> <operator pos:start="667:23" pos:end="667:23">&lt;</operator> <literal type="number" pos:start="667:25" pos:end="667:25">6</literal></expr>;</condition> <incr pos:start="667:28" pos:end="667:30"><expr pos:start="667:28" pos:end="667:30"><name pos:start="667:28" pos:end="667:28">i</name><operator pos:start="667:29" pos:end="667:30">++</operator></expr></incr>)</control> <block pos:start="667:33" pos:end="675:9">{<block_content pos:start="669:13" pos:end="673:21">

            <if_stmt pos:start="669:13" pos:end="671:26"><if pos:start="669:13" pos:end="671:26">if <condition pos:start="669:16" pos:end="669:62">(<expr pos:start="669:17" pos:end="669:61"><call pos:start="669:17" pos:end="669:57"><name pos:start="669:17" pos:end="669:33">h263_decode_block</name><argument_list pos:start="669:34" pos:end="669:57">(<argument pos:start="669:35" pos:end="669:35"><expr pos:start="669:35" pos:end="669:35"><name pos:start="669:35" pos:end="669:35">s</name></expr></argument>, <argument pos:start="669:38" pos:end="669:45"><expr pos:start="669:38" pos:end="669:45"><name pos:start="669:38" pos:end="669:45"><name pos:start="669:38" pos:end="669:42">block</name><index pos:start="669:43" pos:end="669:45">[<expr pos:start="669:44" pos:end="669:44"><name pos:start="669:44" pos:end="669:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="669:48" pos:end="669:48"><expr pos:start="669:48" pos:end="669:48"><name pos:start="669:48" pos:end="669:48">i</name></expr></argument>, <argument pos:start="669:51" pos:end="669:56"><expr pos:start="669:51" pos:end="669:56"><name pos:start="669:51" pos:end="669:53">cbp</name><operator pos:start="669:54" pos:end="669:54">&amp;</operator><literal type="number" pos:start="669:55" pos:end="669:56">32</literal></expr></argument>)</argument_list></call> <operator pos:start="669:59" pos:end="669:59">&lt;</operator> <literal type="number" pos:start="669:61" pos:end="669:61">0</literal></expr>)</condition><block type="pseudo" pos:start="671:17" pos:end="671:26"><block_content pos:start="671:17" pos:end="671:26">

                <return pos:start="671:17" pos:end="671:26">return <expr pos:start="671:24" pos:end="671:25"><operator pos:start="671:24" pos:end="671:24">-</operator><literal type="number" pos:start="671:25" pos:end="671:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="673:13" pos:end="673:21"><expr pos:start="673:13" pos:end="673:20"><name pos:start="673:13" pos:end="673:15">cbp</name><operator pos:start="673:16" pos:end="673:17">+=</operator><name pos:start="673:18" pos:end="673:20">cbp</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

<label pos:start="679:1" pos:end="679:4"><name pos:start="679:1" pos:end="679:3">end</name>:</label>



        <comment type="block" pos:start="683:9" pos:end="683:39">/* per-MB end of slice check */</comment>

    <if_stmt pos:start="685:5" pos:end="715:5"><if pos:start="685:5" pos:end="697:5">if<condition pos:start="685:7" pos:end="685:35">(<expr pos:start="685:8" pos:end="685:34"><name pos:start="685:8" pos:end="685:18"><name pos:start="685:8" pos:end="685:8">s</name><operator pos:start="685:9" pos:end="685:10">-&gt;</operator><name pos:start="685:11" pos:end="685:18">codec_id</name></name><operator pos:start="685:19" pos:end="685:20">==</operator><name pos:start="685:21" pos:end="685:34">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="685:36" pos:end="697:5">{<block_content pos:start="687:9" pos:end="695:9">

        <if_stmt pos:start="687:9" pos:end="695:9"><if pos:start="687:9" pos:end="695:9">if<condition pos:start="687:11" pos:end="687:30">(<expr pos:start="687:12" pos:end="687:29"><call pos:start="687:12" pos:end="687:29"><name pos:start="687:12" pos:end="687:26">mpeg4_is_resync</name><argument_list pos:start="687:27" pos:end="687:29">(<argument pos:start="687:28" pos:end="687:28"><expr pos:start="687:28" pos:end="687:28"><name pos:start="687:28" pos:end="687:28">s</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="687:31" pos:end="695:9">{<block_content pos:start="689:13" pos:end="693:29">

            <if_stmt pos:start="689:13" pos:end="691:32"><if pos:start="689:13" pos:end="691:32">if<condition pos:start="689:15" pos:end="689:103">(<expr pos:start="689:16" pos:end="689:102"><name pos:start="689:16" pos:end="689:27"><name pos:start="689:16" pos:end="689:16">s</name><operator pos:start="689:17" pos:end="689:18">-&gt;</operator><name pos:start="689:19" pos:end="689:27">pict_type</name></name><operator pos:start="689:28" pos:end="689:29">==</operator><name pos:start="689:30" pos:end="689:35">B_TYPE</name> <operator pos:start="689:37" pos:end="689:38">&amp;&amp;</operator> <name pos:start="689:40" pos:end="689:102"><name pos:start="689:40" pos:end="689:40">s</name><operator pos:start="689:41" pos:end="689:42">-&gt;</operator><name pos:start="689:43" pos:end="689:54">next_picture</name><operator pos:start="689:55" pos:end="689:55">.</operator><name pos:start="689:56" pos:end="689:67">mbskip_table</name><index pos:start="689:68" pos:end="689:102">[<expr pos:start="689:69" pos:end="689:101"><name pos:start="689:69" pos:end="689:75"><name pos:start="689:69" pos:end="689:69">s</name><operator pos:start="689:70" pos:end="689:71">-&gt;</operator><name pos:start="689:72" pos:end="689:75">mb_y</name></name> <operator pos:start="689:77" pos:end="689:77">*</operator> <name pos:start="689:79" pos:end="689:89"><name pos:start="689:79" pos:end="689:79">s</name><operator pos:start="689:80" pos:end="689:81">-&gt;</operator><name pos:start="689:82" pos:end="689:89">mb_width</name></name> <operator pos:start="689:91" pos:end="689:91">+</operator> <name pos:start="689:93" pos:end="689:99"><name pos:start="689:93" pos:end="689:93">s</name><operator pos:start="689:94" pos:end="689:95">-&gt;</operator><name pos:start="689:96" pos:end="689:99">mb_x</name></name><operator pos:start="689:100" pos:end="689:100">+</operator><literal type="number" pos:start="689:101" pos:end="689:101">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="691:17" pos:end="691:32"><block_content pos:start="691:17" pos:end="691:32">

                <return pos:start="691:17" pos:end="691:32">return <expr pos:start="691:24" pos:end="691:31"><name pos:start="691:24" pos:end="691:31">SLICE_OK</name></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="693:13" pos:end="693:29">return <expr pos:start="693:20" pos:end="693:28"><name pos:start="693:20" pos:end="693:28">SLICE_END</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="697:6" pos:end="715:5">else<block pos:start="697:10" pos:end="715:5">{<block_content pos:start="699:9" pos:end="713:29">

        <decl_stmt pos:start="699:9" pos:end="699:37"><decl pos:start="699:9" pos:end="699:36"><type pos:start="699:9" pos:end="699:11"><name pos:start="699:9" pos:end="699:11">int</name></type> <name pos:start="699:13" pos:end="699:13">v</name><init pos:start="699:14" pos:end="699:36">= <expr pos:start="699:16" pos:end="699:36"><call pos:start="699:16" pos:end="699:36"><name pos:start="699:16" pos:end="699:24">show_bits</name><argument_list pos:start="699:25" pos:end="699:36">(<argument pos:start="699:26" pos:end="699:31"><expr pos:start="699:26" pos:end="699:31"><operator pos:start="699:26" pos:end="699:26">&amp;</operator><name pos:start="699:27" pos:end="699:31"><name pos:start="699:27" pos:end="699:27">s</name><operator pos:start="699:28" pos:end="699:29">-&gt;</operator><name pos:start="699:30" pos:end="699:31">gb</name></name></expr></argument>, <argument pos:start="699:34" pos:end="699:35"><expr pos:start="699:34" pos:end="699:35"><literal type="number" pos:start="699:34" pos:end="699:35">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    

        <if_stmt pos:start="703:9" pos:end="707:9"><if pos:start="703:9" pos:end="707:9">if<condition pos:start="703:11" pos:end="703:54">(<expr pos:start="703:12" pos:end="703:53"><call pos:start="703:12" pos:end="703:33"><name pos:start="703:12" pos:end="703:25">get_bits_count</name><argument_list pos:start="703:26" pos:end="703:33">(<argument pos:start="703:27" pos:end="703:32"><expr pos:start="703:27" pos:end="703:32"><operator pos:start="703:27" pos:end="703:27">&amp;</operator><name pos:start="703:28" pos:end="703:32"><name pos:start="703:28" pos:end="703:28">s</name><operator pos:start="703:29" pos:end="703:30">-&gt;</operator><name pos:start="703:31" pos:end="703:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="703:35" pos:end="703:35">+</operator> <literal type="number" pos:start="703:37" pos:end="703:38">16</literal> <operator pos:start="703:40" pos:end="703:40">&gt;</operator> <name pos:start="703:42" pos:end="703:51"><name pos:start="703:42" pos:end="703:42">s</name><operator pos:start="703:43" pos:end="703:44">-&gt;</operator><name pos:start="703:45" pos:end="703:46">gb</name><operator pos:start="703:47" pos:end="703:47">.</operator><name pos:start="703:48" pos:end="703:51">size</name></name><operator pos:start="703:52" pos:end="703:52">*</operator><literal type="number" pos:start="703:53" pos:end="703:53">8</literal></expr>)</condition><block pos:start="703:55" pos:end="707:9">{<block_content pos:start="705:13" pos:end="705:60">

            <expr_stmt pos:start="705:13" pos:end="705:60"><expr pos:start="705:13" pos:end="705:59"><name pos:start="705:13" pos:end="705:13">v</name><operator pos:start="705:14" pos:end="705:16">&gt;&gt;=</operator> <call pos:start="705:18" pos:end="705:39"><name pos:start="705:18" pos:end="705:31">get_bits_count</name><argument_list pos:start="705:32" pos:end="705:39">(<argument pos:start="705:33" pos:end="705:38"><expr pos:start="705:33" pos:end="705:38"><operator pos:start="705:33" pos:end="705:33">&amp;</operator><name pos:start="705:34" pos:end="705:38"><name pos:start="705:34" pos:end="705:34">s</name><operator pos:start="705:35" pos:end="705:36">-&gt;</operator><name pos:start="705:37" pos:end="705:38">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="705:41" pos:end="705:41">+</operator> <literal type="number" pos:start="705:43" pos:end="705:46">16</literal> <operator pos:start="705:46" pos:end="705:46">-</operator> <name pos:start="705:48" pos:end="705:57"><name pos:start="705:48" pos:end="705:48">s</name><operator pos:start="705:49" pos:end="705:50">-&gt;</operator><name pos:start="705:51" pos:end="705:52">gb</name><operator pos:start="705:53" pos:end="705:53">.</operator><name pos:start="705:54" pos:end="705:57">size</name></name><operator pos:start="705:58" pos:end="705:58">*</operator><literal type="number" pos:start="705:59" pos:end="705:59">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="711:9" pos:end="713:29"><if pos:start="711:9" pos:end="713:29">if<condition pos:start="711:11" pos:end="711:16">(<expr pos:start="711:12" pos:end="711:15"><name pos:start="711:12" pos:end="711:12">v</name><operator pos:start="711:13" pos:end="711:14">==</operator><literal type="number" pos:start="711:15" pos:end="711:15">0</literal></expr>)</condition><block type="pseudo" pos:start="713:13" pos:end="713:29"><block_content pos:start="713:13" pos:end="713:29">

            <return pos:start="713:13" pos:end="713:29">return <expr pos:start="713:20" pos:end="713:28"><name pos:start="713:20" pos:end="713:28">SLICE_END</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="719:5" pos:end="719:20">return <expr pos:start="719:12" pos:end="719:19"><name pos:start="719:12" pos:end="719:19">SLICE_OK</name></expr>;</return>     

</block_content>}</block></function>
</unit>
