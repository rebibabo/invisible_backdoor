<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9422.c" pos:tabs="8"><function pos:start="1:1" pos:end="1701:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">transcode</name><parameter_list pos:start="1:21" pos:end="9:66">(<parameter pos:start="1:22" pos:end="1:51"><decl pos:start="1:22" pos:end="1:51"><type pos:start="1:22" pos:end="1:51"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:51">output_files</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:40"><decl pos:start="3:22" pos:end="3:40"><type pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:40">nb_output_files</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:50"><decl pos:start="5:22" pos:end="5:50"><type pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:36">AVFormatContext</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier><modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:50">input_files</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><name pos:start="7:22" pos:end="7:24">int</name></type> <name pos:start="7:26" pos:end="7:39">nb_input_files</name></decl></parameter>,

                     <parameter pos:start="9:22" pos:end="9:45"><decl pos:start="9:22" pos:end="9:45"><type pos:start="9:22" pos:end="9:45"><name pos:start="9:22" pos:end="9:32">AVStreamMap</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:45">stream_maps</name></decl></parameter>, <parameter pos:start="9:48" pos:end="9:65"><decl pos:start="9:48" pos:end="9:65"><type pos:start="9:48" pos:end="9:65"><name pos:start="9:48" pos:end="9:50">int</name></type> <name pos:start="9:52" pos:end="9:65">nb_stream_maps</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="1701:1">{<block_content pos:start="13:5" pos:end="1699:15">

    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">i</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">j</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">k</name></decl>, <decl pos:start="13:27" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:27">n</name></decl>, <decl pos:start="13:30" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:40">nb_istreams</name> <init pos:start="13:42" pos:end="13:44">= <expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></init></decl>, <decl pos:start="13:47" pos:end="13:61"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:47" pos:end="13:57">nb_ostreams</name> <init pos:start="13:59" pos:end="13:61">= <expr pos:start="13:61" pos:end="13:61"><literal type="number" pos:start="13:61" pos:end="13:61">0</literal></expr></init></decl>, <decl pos:start="13:64" pos:end="13:67"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:64" pos:end="13:67">step</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">AVFormatContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:23">is</name></decl>, <decl pos:start="15:26" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:21"><modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:28">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:25">codec</name></decl>, <decl pos:start="17:28" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:20"><modifier pos:start="17:28" pos:end="17:28">*</modifier></type><name pos:start="17:29" pos:end="17:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVOutputStream</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">ost</name></decl>, <decl pos:start="19:26" pos:end="19:43"><type ref="prev" pos:start="19:5" pos:end="19:20"><modifier pos:start="19:26" pos:end="19:26">*</modifier><modifier pos:start="19:27" pos:end="19:27">*</modifier></type><name pos:start="19:28" pos:end="19:36">ost_table</name> <init pos:start="19:38" pos:end="19:43">= <expr pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:43">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:43"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:17">AVInputStream</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:22">ist</name></decl>, <decl pos:start="21:25" pos:end="21:42"><type ref="prev" pos:start="21:5" pos:end="21:19"><modifier pos:start="21:25" pos:end="21:25">*</modifier><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:35">ist_table</name> <init pos:start="21:37" pos:end="21:42">= <expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">AVInputFile</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:27">file_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">char</name></type> <name pos:start="25:10" pos:end="25:20"><name pos:start="25:10" pos:end="25:14">error</name><index pos:start="25:15" pos:end="25:20">[<expr pos:start="25:16" pos:end="25:19"><literal type="number" pos:start="25:16" pos:end="25:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">key</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16">want_sdp</name> <init pos:start="29:18" pos:end="29:20">= <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:37"><decl pos:start="31:5" pos:end="31:36"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">uint8_t</name></type> <name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:21">no_packet</name><index pos:start="31:22" pos:end="31:32">[<expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">MAX_FILES</name></expr>]</index></name><init pos:start="31:33" pos:end="31:36">=<expr pos:start="31:34" pos:end="31:36"><block pos:start="31:34" pos:end="31:36">{<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:26"><decl pos:start="33:5" pos:end="33:25"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:23">no_packet_count</name><init pos:start="33:24" pos:end="33:25">=<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:48"><decl pos:start="35:5" pos:end="35:47"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:26">nb_frame_threshold</name><index pos:start="35:27" pos:end="35:43">[<expr pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:42">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="35:44" pos:end="35:47">=<expr pos:start="35:45" pos:end="35:47"><block pos:start="35:45" pos:end="35:47">{<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:40"><decl pos:start="37:5" pos:end="37:39"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:18">nb_streams</name><index pos:start="37:19" pos:end="37:35">[<expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:34">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="37:36" pos:end="37:39">=<expr pos:start="37:37" pos:end="37:39"><block pos:start="37:37" pos:end="37:39">{<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:65"><expr pos:start="41:5" pos:end="41:64"><name pos:start="41:5" pos:end="41:14">file_table</name><operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:64"><name pos:start="41:17" pos:end="41:26">av_mallocz</name><argument_list pos:start="41:27" pos:end="41:64">(<argument pos:start="41:28" pos:end="41:63"><expr pos:start="41:28" pos:end="41:63"><name pos:start="41:28" pos:end="41:41">nb_input_files</name> <operator pos:start="41:43" pos:end="41:43">*</operator> <sizeof pos:start="41:45" pos:end="41:63">sizeof<argument_list pos:start="41:51" pos:end="41:63">(<argument pos:start="41:52" pos:end="41:62"><expr pos:start="41:52" pos:end="41:62"><name pos:start="41:52" pos:end="41:62">AVInputFile</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:18"><if pos:start="43:5" pos:end="45:18">if <condition pos:start="43:8" pos:end="43:20">(<expr pos:start="43:9" pos:end="43:19"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:19">file_table</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:27">/* input stream init */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:10"><expr pos:start="51:5" pos:end="51:9"><name pos:start="51:5" pos:end="51:5">j</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <literal type="number" pos:start="51:9" pos:end="51:9">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="63:5">for<control pos:start="53:8" pos:end="53:33">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init><condition pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">&lt;</operator><name pos:start="53:15" pos:end="53:28">nb_input_files</name></expr>;</condition><incr pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:30">i</name><operator pos:start="53:31" pos:end="53:32">++</operator></expr></incr>)</control> <block pos:start="53:35" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:28">

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:10">is</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:24">input_files</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:18">file_table</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">i</name></expr>]</index></name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:31">ist_index</name> <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:35">j</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:18">file_table</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">i</name></expr>]</index></name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:32">nb_streams</name> <operator pos:start="59:34" pos:end="59:34">=</operator> <name pos:start="59:36" pos:end="59:49"><name pos:start="59:36" pos:end="59:37">is</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:49">nb_streams</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:9">j</name> <operator pos:start="61:11" pos:end="61:12">+=</operator> <name pos:start="61:14" pos:end="61:27"><name pos:start="61:14" pos:end="61:15">is</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15">nb_istreams</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:19">j</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:66"><expr pos:start="69:5" pos:end="69:65"><name pos:start="69:5" pos:end="69:13">ist_table</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:65"><name pos:start="69:17" pos:end="69:26">av_mallocz</name><argument_list pos:start="69:27" pos:end="69:65">(<argument pos:start="69:28" pos:end="69:64"><expr pos:start="69:28" pos:end="69:64"><name pos:start="69:28" pos:end="69:38">nb_istreams</name> <operator pos:start="69:40" pos:end="69:40">*</operator> <sizeof pos:start="69:42" pos:end="69:64">sizeof<argument_list pos:start="69:48" pos:end="69:64">(<argument pos:start="69:49" pos:end="69:63"><expr pos:start="69:49" pos:end="69:63"><name pos:start="69:49" pos:end="69:61">AVInputStream</name> <operator pos:start="69:63" pos:end="69:63">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:19">(<expr pos:start="71:9" pos:end="71:18"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:18">ist_table</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <goto pos:start="73:9" pos:end="73:18">goto <name pos:start="73:14" pos:end="73:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="77:5" pos:end="87:5">for<control pos:start="77:8" pos:end="77:30">(<init pos:start="77:9" pos:end="77:12"><expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:9">i</name><operator pos:start="77:10" pos:end="77:10">=</operator><literal type="number" pos:start="77:11" pos:end="77:11">0</literal></expr>;</init><condition pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:13">i</name><operator pos:start="77:14" pos:end="77:14">&lt;</operator><name pos:start="77:15" pos:end="77:25">nb_istreams</name></expr>;</condition><incr pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:27">i</name><operator pos:start="77:28" pos:end="77:29">++</operator></expr></incr>)</control> <block pos:start="77:32" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:27">

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:11">ist</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:47"><name pos:start="79:15" pos:end="79:24">av_mallocz</name><argument_list pos:start="79:25" pos:end="79:47">(<argument pos:start="79:26" pos:end="79:46"><expr pos:start="79:26" pos:end="79:46"><sizeof pos:start="79:26" pos:end="79:46">sizeof<argument_list pos:start="79:32" pos:end="79:46">(<argument pos:start="79:33" pos:end="79:45"><expr pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:45">AVInputStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:22"><if pos:start="81:9" pos:end="83:22">if <condition pos:start="81:12" pos:end="81:17">(<expr pos:start="81:13" pos:end="81:16"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:16">ist</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:22"><block_content pos:start="83:13" pos:end="83:22">

            <goto pos:start="83:13" pos:end="83:22">goto <name pos:start="83:18" pos:end="83:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:17">ist_table</name><index pos:start="85:18" pos:end="85:20">[<expr pos:start="85:19" pos:end="85:19"><name pos:start="85:19" pos:end="85:19">i</name></expr>]</index></name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:26">ist</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="89:5" pos:end="89:10"><expr pos:start="89:5" pos:end="89:9"><name pos:start="89:5" pos:end="89:5">j</name> <operator pos:start="89:7" pos:end="89:7">=</operator> <literal type="number" pos:start="89:9" pos:end="89:9">0</literal></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="119:5">for<control pos:start="91:8" pos:end="91:33">(<init pos:start="91:9" pos:end="91:12"><expr pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:9">i</name><operator pos:start="91:10" pos:end="91:10">=</operator><literal type="number" pos:start="91:11" pos:end="91:11">0</literal></expr>;</init><condition pos:start="91:13" pos:end="91:29"><expr pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:13">i</name><operator pos:start="91:14" pos:end="91:14">&lt;</operator><name pos:start="91:15" pos:end="91:28">nb_input_files</name></expr>;</condition><incr pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><name pos:start="91:30" pos:end="91:30">i</name><operator pos:start="91:31" pos:end="91:32">++</operator></expr></incr>)</control> <block pos:start="91:35" pos:end="119:5">{<block_content pos:start="93:9" pos:end="117:9">

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:10">is</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <name pos:start="93:14" pos:end="93:27"><name pos:start="93:14" pos:end="93:24">input_files</name><index pos:start="93:25" pos:end="93:27">[<expr pos:start="93:26" pos:end="93:26"><name pos:start="93:26" pos:end="93:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="95:9" pos:end="117:9">for<control pos:start="95:12" pos:end="95:37">(<init pos:start="95:13" pos:end="95:16"><expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:13">k</name><operator pos:start="95:14" pos:end="95:14">=</operator><literal type="number" pos:start="95:15" pos:end="95:15">0</literal></expr>;</init><condition pos:start="95:17" pos:end="95:33"><expr pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:17">k</name><operator pos:start="95:18" pos:end="95:18">&lt;</operator><name pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:20">is</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:32">nb_streams</name></name></expr>;</condition><incr pos:start="95:34" pos:end="95:36"><expr pos:start="95:34" pos:end="95:36"><name pos:start="95:34" pos:end="95:34">k</name><operator pos:start="95:35" pos:end="95:36">++</operator></expr></incr>)</control> <block pos:start="95:39" pos:end="117:9">{<block_content pos:start="97:13" pos:end="115:13">

            <expr_stmt pos:start="97:13" pos:end="97:33"><expr pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:15">ist</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:32"><name pos:start="97:19" pos:end="97:27">ist_table</name><index pos:start="97:28" pos:end="97:32">[<expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:29">j</name><operator pos:start="97:30" pos:end="97:31">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ist</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:19">st</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:36"><name pos:start="99:23" pos:end="99:24">is</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:33">streams</name><index pos:start="99:34" pos:end="99:36">[<expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:15">ist</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:27">file_index</name></name> <operator pos:start="101:29" pos:end="101:29">=</operator> <name pos:start="101:31" pos:end="101:31">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:27"><expr pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:15">ist</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">index</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <name pos:start="103:26" pos:end="103:26">k</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:29"><expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:15">ist</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:24">discard</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="105:31" pos:end="107:51">/* the stream is discarded by default

                                 (changed later) */</comment>



            <if_stmt pos:start="111:13" pos:end="115:13"><if pos:start="111:13" pos:end="115:13">if <condition pos:start="111:16" pos:end="111:25">(<expr pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:24">rate_emu</name></expr>)</condition> <block pos:start="111:27" pos:end="115:13">{<block_content pos:start="113:17" pos:end="113:42">

                <expr_stmt pos:start="113:17" pos:end="113:42"><expr pos:start="113:17" pos:end="113:41"><name pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:19">ist</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:26">start</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <call pos:start="113:30" pos:end="113:41"><name pos:start="113:30" pos:end="113:39">av_gettime</name><argument_list pos:start="113:40" pos:end="113:41">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="123:5" pos:end="123:28">/* output stream init */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:20"><expr pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:15">nb_ostreams</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>;</expr_stmt>

    <for pos:start="127:5" pos:end="145:5">for<control pos:start="127:8" pos:end="127:34">(<init pos:start="127:9" pos:end="127:12"><expr pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:9">i</name><operator pos:start="127:10" pos:end="127:10">=</operator><literal type="number" pos:start="127:11" pos:end="127:11">0</literal></expr>;</init><condition pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:13">i</name><operator pos:start="127:14" pos:end="127:14">&lt;</operator><name pos:start="127:15" pos:end="127:29">nb_output_files</name></expr>;</condition><incr pos:start="127:31" pos:end="127:33"><expr pos:start="127:31" pos:end="127:33"><name pos:start="127:31" pos:end="127:31">i</name><operator pos:start="127:32" pos:end="127:33">++</operator></expr></incr>)</control> <block pos:start="127:36" pos:end="145:5">{<block_content pos:start="129:9" pos:end="143:38">

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:10">os</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <name pos:start="129:14" pos:end="129:28"><name pos:start="129:14" pos:end="129:25">output_files</name><index pos:start="129:26" pos:end="129:28">[<expr pos:start="129:27" pos:end="129:27"><name pos:start="129:27" pos:end="129:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="141:9"><if pos:start="131:9" pos:end="141:9">if <condition pos:start="131:12" pos:end="131:71">(<expr pos:start="131:13" pos:end="131:70"><operator pos:start="131:13" pos:end="131:13">!</operator><name pos:start="131:14" pos:end="131:27"><name pos:start="131:14" pos:end="131:15">os</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:27">nb_streams</name></name> <operator pos:start="131:29" pos:end="131:30">&amp;&amp;</operator> <operator pos:start="131:32" pos:end="131:32">!</operator><operator pos:start="131:33" pos:end="131:33">(</operator><name pos:start="131:34" pos:end="131:51"><name pos:start="131:34" pos:end="131:35">os</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:44">oformat</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:51">flags</name></name> <operator pos:start="131:53" pos:end="131:53">&amp;</operator> <name pos:start="131:55" pos:end="131:69">AVFMT_NOSTREAMS</name><operator pos:start="131:70" pos:end="131:70">)</operator></expr>)</condition> <block pos:start="131:73" pos:end="141:9">{<block_content pos:start="133:13" pos:end="139:22">

            <expr_stmt pos:start="133:13" pos:end="133:77"><expr pos:start="133:13" pos:end="133:76"><call pos:start="133:13" pos:end="133:76"><name pos:start="133:13" pos:end="133:26">av_dump_format</name><argument_list pos:start="133:27" pos:end="133:76">(<argument pos:start="133:28" pos:end="133:42"><expr pos:start="133:28" pos:end="133:42"><name pos:start="133:28" pos:end="133:42"><name pos:start="133:28" pos:end="133:39">output_files</name><index pos:start="133:40" pos:end="133:42">[<expr pos:start="133:41" pos:end="133:41"><name pos:start="133:41" pos:end="133:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="133:45" pos:end="133:45"><expr pos:start="133:45" pos:end="133:45"><name pos:start="133:45" pos:end="133:45">i</name></expr></argument>, <argument pos:start="133:48" pos:end="133:72"><expr pos:start="133:48" pos:end="133:72"><name pos:start="133:48" pos:end="133:62"><name pos:start="133:48" pos:end="133:59">output_files</name><index pos:start="133:60" pos:end="133:62">[<expr pos:start="133:61" pos:end="133:61"><name pos:start="133:61" pos:end="133:61">i</name></expr>]</index></name><operator pos:start="133:63" pos:end="133:64">-&gt;</operator><name pos:start="133:65" pos:end="133:72">filename</name></expr></argument>, <argument pos:start="133:75" pos:end="133:75"><expr pos:start="133:75" pos:end="133:75"><literal type="number" pos:start="133:75" pos:end="133:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:80"><expr pos:start="135:13" pos:end="135:79"><call pos:start="135:13" pos:end="135:79"><name pos:start="135:13" pos:end="135:19">fprintf</name><argument_list pos:start="135:20" pos:end="135:79">(<argument pos:start="135:21" pos:end="135:26"><expr pos:start="135:21" pos:end="135:26"><name pos:start="135:21" pos:end="135:26">stderr</name></expr></argument>, <argument pos:start="135:29" pos:end="135:75"><expr pos:start="135:29" pos:end="135:75"><literal type="string" pos:start="135:29" pos:end="135:75">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="135:78" pos:end="135:78"><expr pos:start="135:78" pos:end="135:78"><name pos:start="135:78" pos:end="135:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:25">AVERROR</name><argument_list pos:start="137:26" pos:end="137:33">(<argument pos:start="137:27" pos:end="137:32"><expr pos:start="137:27" pos:end="137:32"><name pos:start="137:27" pos:end="137:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:38"><expr pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:19">nb_ostreams</name> <operator pos:start="143:21" pos:end="143:22">+=</operator> <name pos:start="143:24" pos:end="143:37"><name pos:start="143:24" pos:end="143:25">os</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:37">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="155:5">if <condition pos:start="147:8" pos:end="147:60">(<expr pos:start="147:9" pos:end="147:59"><name pos:start="147:9" pos:end="147:22">nb_stream_maps</name> <operator pos:start="147:24" pos:end="147:24">&gt;</operator> <literal type="number" pos:start="147:26" pos:end="147:26">0</literal> <operator pos:start="147:28" pos:end="147:29">&amp;&amp;</operator> <name pos:start="147:31" pos:end="147:44">nb_stream_maps</name> <operator pos:start="147:46" pos:end="147:47">!=</operator> <name pos:start="147:49" pos:end="147:59">nb_ostreams</name></expr>)</condition> <block pos:start="147:62" pos:end="155:5">{<block_content pos:start="149:9" pos:end="153:18">

        <expr_stmt pos:start="149:9" pos:end="149:87"><expr pos:start="149:9" pos:end="149:86"><call pos:start="149:9" pos:end="149:86"><name pos:start="149:9" pos:end="149:15">fprintf</name><argument_list pos:start="149:16" pos:end="149:86">(<argument pos:start="149:17" pos:end="149:22"><expr pos:start="149:17" pos:end="149:22"><name pos:start="149:17" pos:end="149:22">stderr</name></expr></argument>, <argument pos:start="149:25" pos:end="149:85"><expr pos:start="149:25" pos:end="149:85"><literal type="string" pos:start="149:25" pos:end="149:85">"Number of stream maps must match number of output streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:30"><expr pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <call pos:start="151:15" pos:end="151:29"><name pos:start="151:15" pos:end="151:21">AVERROR</name><argument_list pos:start="151:22" pos:end="151:29">(<argument pos:start="151:23" pos:end="151:28"><expr pos:start="151:23" pos:end="151:28"><name pos:start="151:23" pos:end="151:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:18">goto <name pos:start="153:14" pos:end="153:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:78">/* Sanity check the mapping args -- do the input files &amp; streams exist? */</comment>

    <for pos:start="161:5" pos:end="197:5">for<control pos:start="161:8" pos:end="161:33">(<init pos:start="161:9" pos:end="161:12"><expr pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:9">i</name><operator pos:start="161:10" pos:end="161:10">=</operator><literal type="number" pos:start="161:11" pos:end="161:11">0</literal></expr>;</init><condition pos:start="161:13" pos:end="161:29"><expr pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:13">i</name><operator pos:start="161:14" pos:end="161:14">&lt;</operator><name pos:start="161:15" pos:end="161:28">nb_stream_maps</name></expr>;</condition><incr pos:start="161:30" pos:end="161:32"><expr pos:start="161:30" pos:end="161:32"><name pos:start="161:30" pos:end="161:30">i</name><operator pos:start="161:31" pos:end="161:32">++</operator></expr></incr>)</control> <block pos:start="161:35" pos:end="197:5">{<block_content pos:start="163:9" pos:end="195:9">

        <decl_stmt pos:start="163:9" pos:end="163:43"><decl pos:start="163:9" pos:end="163:42"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:14">fi</name> <init pos:start="163:16" pos:end="163:42">= <expr pos:start="163:18" pos:end="163:42"><name pos:start="163:18" pos:end="163:31"><name pos:start="163:18" pos:end="163:28">stream_maps</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><name pos:start="163:30" pos:end="163:30">i</name></expr>]</index></name><operator pos:start="163:32" pos:end="163:32">.</operator><name pos:start="163:33" pos:end="163:42">file_index</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="165:9" pos:end="165:45"><decl pos:start="165:9" pos:end="165:44"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:14">si</name> <init pos:start="165:16" pos:end="165:44">= <expr pos:start="165:18" pos:end="165:44"><name pos:start="165:18" pos:end="165:31"><name pos:start="165:18" pos:end="165:28">stream_maps</name><index pos:start="165:29" pos:end="165:31">[<expr pos:start="165:30" pos:end="165:30"><name pos:start="165:30" pos:end="165:30">i</name></expr>]</index></name><operator pos:start="165:32" pos:end="165:32">.</operator><name pos:start="165:33" pos:end="165:44">stream_index</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="169:9" pos:end="179:9"><if pos:start="169:9" pos:end="179:9">if <condition pos:start="169:12" pos:end="171:57">(<expr pos:start="169:13" pos:end="171:56"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:14">fi</name> <argument_list type="generic" pos:start="169:16" pos:end="169:26">&lt; <argument pos:start="169:18" pos:end="169:24"><expr pos:start="169:18" pos:end="169:24"><literal type="number" pos:start="169:18" pos:end="169:18">0</literal> <operator pos:start="169:20" pos:end="169:21">||</operator> <name pos:start="169:23" pos:end="169:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="169:28" pos:end="169:41">nb_input_files</name> <operator pos:start="169:43" pos:end="169:43">-</operator> <literal type="number" pos:start="169:45" pos:end="169:45">1</literal> <operator pos:start="169:47" pos:end="169:48">||</operator>

            <name pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:14">si</name> <argument_list type="generic" pos:start="171:16" pos:end="171:26">&lt; <argument pos:start="171:18" pos:end="171:24"><expr pos:start="171:18" pos:end="171:24"><literal type="number" pos:start="171:18" pos:end="171:18">0</literal> <operator pos:start="171:20" pos:end="171:21">||</operator> <name pos:start="171:23" pos:end="171:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="171:28" pos:end="171:41"><name pos:start="171:28" pos:end="171:37">file_table</name><index pos:start="171:38" pos:end="171:41">[<expr pos:start="171:39" pos:end="171:40"><name pos:start="171:39" pos:end="171:40">fi</name></expr>]</index></name><operator pos:start="171:42" pos:end="171:42">.</operator><name pos:start="171:43" pos:end="171:52">nb_streams</name> <operator pos:start="171:54" pos:end="171:54">-</operator> <literal type="number" pos:start="171:56" pos:end="171:56">1</literal></expr>)</condition> <block pos:start="171:59" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:22">

            <expr_stmt pos:start="173:13" pos:end="173:75"><expr pos:start="173:13" pos:end="173:74"><call pos:start="173:13" pos:end="173:74"><name pos:start="173:13" pos:end="173:19">fprintf</name><argument_list pos:start="173:20" pos:end="173:74">(<argument pos:start="173:21" pos:end="173:26"><expr pos:start="173:21" pos:end="173:26"><name pos:start="173:21" pos:end="173:26">stderr</name></expr></argument>,<argument pos:start="173:28" pos:end="173:65"><expr pos:start="173:28" pos:end="173:65"><literal type="string" pos:start="173:28" pos:end="173:65">"Could not find input stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="173:68" pos:end="173:69"><expr pos:start="173:68" pos:end="173:69"><name pos:start="173:68" pos:end="173:69">fi</name></expr></argument>, <argument pos:start="173:72" pos:end="173:73"><expr pos:start="173:72" pos:end="173:73"><name pos:start="173:72" pos:end="173:73">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:34"><expr pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:33"><name pos:start="175:19" pos:end="175:25">AVERROR</name><argument_list pos:start="175:26" pos:end="175:33">(<argument pos:start="175:27" pos:end="175:32"><expr pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="177:13" pos:end="177:22">goto <name pos:start="177:18" pos:end="177:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:44"><expr pos:start="181:9" pos:end="181:43"><name pos:start="181:9" pos:end="181:10">fi</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <name pos:start="181:14" pos:end="181:27"><name pos:start="181:14" pos:end="181:24">stream_maps</name><index pos:start="181:25" pos:end="181:27">[<expr pos:start="181:26" pos:end="181:26"><name pos:start="181:26" pos:end="181:26">i</name></expr>]</index></name><operator pos:start="181:28" pos:end="181:28">.</operator><name pos:start="181:29" pos:end="181:43">sync_file_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:46"><expr pos:start="183:9" pos:end="183:45"><name pos:start="183:9" pos:end="183:10">si</name> <operator pos:start="183:12" pos:end="183:12">=</operator> <name pos:start="183:14" pos:end="183:27"><name pos:start="183:14" pos:end="183:24">stream_maps</name><index pos:start="183:25" pos:end="183:27">[<expr pos:start="183:26" pos:end="183:26"><name pos:start="183:26" pos:end="183:26">i</name></expr>]</index></name><operator pos:start="183:28" pos:end="183:28">.</operator><name pos:start="183:29" pos:end="183:45">sync_stream_index</name></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="195:9"><if pos:start="185:9" pos:end="195:9">if <condition pos:start="185:12" pos:end="187:57">(<expr pos:start="185:13" pos:end="187:56"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:14">fi</name> <argument_list type="generic" pos:start="185:16" pos:end="185:26">&lt; <argument pos:start="185:18" pos:end="185:24"><expr pos:start="185:18" pos:end="185:24"><literal type="number" pos:start="185:18" pos:end="185:18">0</literal> <operator pos:start="185:20" pos:end="185:21">||</operator> <name pos:start="185:23" pos:end="185:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="185:28" pos:end="185:41">nb_input_files</name> <operator pos:start="185:43" pos:end="185:43">-</operator> <literal type="number" pos:start="185:45" pos:end="185:45">1</literal> <operator pos:start="185:47" pos:end="185:48">||</operator>

            <name pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:14">si</name> <argument_list type="generic" pos:start="187:16" pos:end="187:26">&lt; <argument pos:start="187:18" pos:end="187:24"><expr pos:start="187:18" pos:end="187:24"><literal type="number" pos:start="187:18" pos:end="187:18">0</literal> <operator pos:start="187:20" pos:end="187:21">||</operator> <name pos:start="187:23" pos:end="187:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="187:28" pos:end="187:41"><name pos:start="187:28" pos:end="187:37">file_table</name><index pos:start="187:38" pos:end="187:41">[<expr pos:start="187:39" pos:end="187:40"><name pos:start="187:39" pos:end="187:40">fi</name></expr>]</index></name><operator pos:start="187:42" pos:end="187:42">.</operator><name pos:start="187:43" pos:end="187:52">nb_streams</name> <operator pos:start="187:54" pos:end="187:54">-</operator> <literal type="number" pos:start="187:56" pos:end="187:56">1</literal></expr>)</condition> <block pos:start="187:59" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:22">

            <expr_stmt pos:start="189:13" pos:end="189:74"><expr pos:start="189:13" pos:end="189:73"><call pos:start="189:13" pos:end="189:73"><name pos:start="189:13" pos:end="189:19">fprintf</name><argument_list pos:start="189:20" pos:end="189:73">(<argument pos:start="189:21" pos:end="189:26"><expr pos:start="189:21" pos:end="189:26"><name pos:start="189:21" pos:end="189:26">stderr</name></expr></argument>,<argument pos:start="189:28" pos:end="189:64"><expr pos:start="189:28" pos:end="189:64"><literal type="string" pos:start="189:28" pos:end="189:64">"Could not find sync stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="189:67" pos:end="189:68"><expr pos:start="189:67" pos:end="189:68"><name pos:start="189:67" pos:end="189:68">fi</name></expr></argument>, <argument pos:start="189:71" pos:end="189:72"><expr pos:start="189:71" pos:end="189:72"><name pos:start="189:71" pos:end="189:72">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:34"><expr pos:start="191:13" pos:end="191:33"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:33"><name pos:start="191:19" pos:end="191:25">AVERROR</name><argument_list pos:start="191:26" pos:end="191:33">(<argument pos:start="191:27" pos:end="191:32"><expr pos:start="191:27" pos:end="191:32"><name pos:start="191:27" pos:end="191:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="193:13" pos:end="193:22">goto <name pos:start="193:18" pos:end="193:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="201:5" pos:end="201:67"><expr pos:start="201:5" pos:end="201:66"><name pos:start="201:5" pos:end="201:13">ost_table</name> <operator pos:start="201:15" pos:end="201:15">=</operator> <call pos:start="201:17" pos:end="201:66"><name pos:start="201:17" pos:end="201:26">av_mallocz</name><argument_list pos:start="201:27" pos:end="201:66">(<argument pos:start="201:28" pos:end="201:65"><expr pos:start="201:28" pos:end="201:65"><sizeof pos:start="201:28" pos:end="201:51">sizeof<argument_list pos:start="201:34" pos:end="201:51">(<argument pos:start="201:35" pos:end="201:50"><expr pos:start="201:35" pos:end="201:50"><name pos:start="201:35" pos:end="201:48">AVOutputStream</name> <operator pos:start="201:50" pos:end="201:50">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="201:53" pos:end="201:53">*</operator> <name pos:start="201:55" pos:end="201:65">nb_ostreams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="205:18"><if pos:start="203:5" pos:end="205:18">if <condition pos:start="203:8" pos:end="203:19">(<expr pos:start="203:9" pos:end="203:18"><operator pos:start="203:9" pos:end="203:9">!</operator><name pos:start="203:10" pos:end="203:18">ost_table</name></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:18"><block_content pos:start="205:9" pos:end="205:18">

        <goto pos:start="205:9" pos:end="205:18">goto <name pos:start="205:14" pos:end="205:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="209:5" pos:end="219:5">for<control pos:start="209:8" pos:end="209:34">(<init pos:start="209:9" pos:end="209:12"><expr pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:9">k</name><operator pos:start="209:10" pos:end="209:10">=</operator><literal type="number" pos:start="209:11" pos:end="209:11">0</literal></expr>;</init><condition pos:start="209:13" pos:end="209:30"><expr pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:13">k</name><operator pos:start="209:14" pos:end="209:14">&lt;</operator><name pos:start="209:15" pos:end="209:29">nb_output_files</name></expr>;</condition><incr pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:31">k</name><operator pos:start="209:32" pos:end="209:33">++</operator></expr></incr>)</control> <block pos:start="209:36" pos:end="219:5">{<block_content pos:start="211:9" pos:end="217:9">

        <expr_stmt pos:start="211:9" pos:end="211:29"><expr pos:start="211:9" pos:end="211:28"><name pos:start="211:9" pos:end="211:10">os</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <name pos:start="211:14" pos:end="211:28"><name pos:start="211:14" pos:end="211:25">output_files</name><index pos:start="211:26" pos:end="211:28">[<expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="213:9" pos:end="217:9">for<control pos:start="213:12" pos:end="213:41">(<init pos:start="213:13" pos:end="213:16"><expr pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:13">i</name><operator pos:start="213:14" pos:end="213:14">=</operator><literal type="number" pos:start="213:15" pos:end="213:15">0</literal></expr>;</init><condition pos:start="213:17" pos:end="213:33"><expr pos:start="213:17" pos:end="213:32"><name pos:start="213:17" pos:end="213:17">i</name><operator pos:start="213:18" pos:end="213:18">&lt;</operator><name pos:start="213:19" pos:end="213:32"><name pos:start="213:19" pos:end="213:20">os</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:32">nb_streams</name></name></expr>;</condition><incr pos:start="213:34" pos:end="213:40"><expr pos:start="213:34" pos:end="213:36"><name pos:start="213:34" pos:end="213:34">i</name><operator pos:start="213:35" pos:end="213:36">++</operator></expr><operator pos:start="213:37" pos:end="213:37">,</operator><expr pos:start="213:38" pos:end="213:40"><name pos:start="213:38" pos:end="213:38">n</name><operator pos:start="213:39" pos:end="213:40">++</operator></expr></incr>)</control> <block pos:start="213:43" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:60">

            <expr_stmt pos:start="215:13" pos:end="215:60"><expr pos:start="215:13" pos:end="215:59"><name pos:start="215:13" pos:end="215:57"><name pos:start="215:13" pos:end="215:22">nb_streams</name><index pos:start="215:23" pos:end="215:57">[<expr pos:start="215:24" pos:end="215:56"><name pos:start="215:24" pos:end="215:37"><name pos:start="215:24" pos:end="215:25">os</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:34">streams</name><index pos:start="215:35" pos:end="215:37">[<expr pos:start="215:36" pos:end="215:36"><name pos:start="215:36" pos:end="215:36">i</name></expr>]</index></name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:56"><name pos:start="215:40" pos:end="215:44">codec</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:56">codec_type</name></name></expr>]</index></name><operator pos:start="215:58" pos:end="215:59">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="221:5" pos:end="279:5">for<control pos:start="221:8" pos:end="221:35">(<init pos:start="221:9" pos:end="221:19"><expr pos:start="221:9" pos:end="221:18"><name pos:start="221:9" pos:end="221:12">step</name><operator pos:start="221:13" pos:end="221:13">=</operator><literal type="number" pos:start="221:14" pos:end="221:14">1</literal><operator pos:start="221:15" pos:end="221:16">&lt;&lt;</operator><literal type="number" pos:start="221:17" pos:end="221:18">30</literal></expr>;</init> <condition pos:start="221:21" pos:end="221:25"><expr pos:start="221:21" pos:end="221:24"><name pos:start="221:21" pos:end="221:24">step</name></expr>;</condition> <incr pos:start="221:27" pos:end="221:34"><expr pos:start="221:27" pos:end="221:34"><name pos:start="221:27" pos:end="221:30">step</name><operator pos:start="221:31" pos:end="221:33">&gt;&gt;=</operator><literal type="number" pos:start="221:34" pos:end="221:34">1</literal></expr></incr>)</control><block pos:start="221:36" pos:end="279:5">{<block_content pos:start="223:9" pos:end="277:46">

        <decl_stmt pos:start="223:9" pos:end="223:47"><decl pos:start="223:9" pos:end="223:46"><type pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:11">int</name></type> <name pos:start="223:13" pos:end="223:42"><name pos:start="223:13" pos:end="223:25">found_streams</name><index pos:start="223:26" pos:end="223:42">[<expr pos:start="223:27" pos:end="223:41"><name pos:start="223:27" pos:end="223:41">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="223:43" pos:end="223:46">=<expr pos:start="223:44" pos:end="223:46"><block pos:start="223:44" pos:end="223:46">{<expr pos:start="223:45" pos:end="223:45"><literal type="number" pos:start="223:45" pos:end="223:45">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <for pos:start="225:9" pos:end="227:42">for<control pos:start="225:12" pos:end="225:40">(<init pos:start="225:13" pos:end="225:16"><expr pos:start="225:13" pos:end="225:15"><name pos:start="225:13" pos:end="225:13">j</name><operator pos:start="225:14" pos:end="225:14">=</operator><literal type="number" pos:start="225:15" pos:end="225:15">0</literal></expr>;</init> <condition pos:start="225:18" pos:end="225:35"><expr pos:start="225:18" pos:end="225:34"><name pos:start="225:18" pos:end="225:18">j</name><operator pos:start="225:19" pos:end="225:19">&lt;</operator><name pos:start="225:20" pos:end="225:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="225:37" pos:end="225:39"><expr pos:start="225:37" pos:end="225:39"><name pos:start="225:37" pos:end="225:37">j</name><operator pos:start="225:38" pos:end="225:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:13" pos:end="227:42"><block_content pos:start="227:13" pos:end="227:42">

            <expr_stmt pos:start="227:13" pos:end="227:42"><expr pos:start="227:13" pos:end="227:41"><name pos:start="227:13" pos:end="227:33"><name pos:start="227:13" pos:end="227:30">nb_frame_threshold</name><index pos:start="227:31" pos:end="227:33">[<expr pos:start="227:32" pos:end="227:32"><name pos:start="227:32" pos:end="227:32">j</name></expr>]</index></name> <operator pos:start="227:35" pos:end="227:36">+=</operator> <name pos:start="227:38" pos:end="227:41">step</name></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="231:9" pos:end="271:9">for<control pos:start="231:12" pos:end="231:36">(<init pos:start="231:13" pos:end="231:16"><expr pos:start="231:13" pos:end="231:15"><name pos:start="231:13" pos:end="231:13">j</name><operator pos:start="231:14" pos:end="231:14">=</operator><literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>;</init> <condition pos:start="231:18" pos:end="231:31"><expr pos:start="231:18" pos:end="231:30"><name pos:start="231:18" pos:end="231:18">j</name><operator pos:start="231:19" pos:end="231:19">&lt;</operator><name pos:start="231:20" pos:end="231:30">nb_istreams</name></expr>;</condition> <incr pos:start="231:33" pos:end="231:35"><expr pos:start="231:33" pos:end="231:35"><name pos:start="231:33" pos:end="231:33">j</name><operator pos:start="231:34" pos:end="231:35">++</operator></expr></incr>)</control> <block pos:start="231:38" pos:end="271:9">{<block_content pos:start="233:13" pos:end="269:13">

            <decl_stmt pos:start="233:13" pos:end="233:23"><decl pos:start="233:13" pos:end="233:22"><type pos:start="233:13" pos:end="233:15"><name pos:start="233:13" pos:end="233:15">int</name></type> <name pos:start="233:17" pos:end="233:20">skip</name><init pos:start="233:21" pos:end="233:22">=<expr pos:start="233:22" pos:end="233:22"><literal type="number" pos:start="233:22" pos:end="233:22">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:31"><expr pos:start="235:13" pos:end="235:30"><name pos:start="235:13" pos:end="235:15">ist</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <name pos:start="235:19" pos:end="235:30"><name pos:start="235:19" pos:end="235:27">ist_table</name><index pos:start="235:28" pos:end="235:30">[<expr pos:start="235:29" pos:end="235:29"><name pos:start="235:29" pos:end="235:29">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="237:13" pos:end="261:13"><if pos:start="237:13" pos:end="261:13">if<condition pos:start="237:15" pos:end="237:29">(<expr pos:start="237:16" pos:end="237:28"><name pos:start="237:16" pos:end="237:28">opt_programid</name></expr>)</condition><block pos:start="237:30" pos:end="261:13">{<block_content pos:start="239:17" pos:end="259:17">

                <decl_stmt pos:start="239:17" pos:end="239:26"><decl pos:start="239:17" pos:end="239:22"><type pos:start="239:17" pos:end="239:19"><name pos:start="239:17" pos:end="239:19">int</name></type> <name pos:start="239:21" pos:end="239:22">pi</name></decl>,<decl pos:start="239:24" pos:end="239:25"><type ref="prev" pos:start="239:17" pos:end="239:19"/><name pos:start="239:24" pos:end="239:25">si</name></decl>;</decl_stmt>

                <decl_stmt pos:start="241:17" pos:end="241:67"><decl pos:start="241:17" pos:end="241:66"><type pos:start="241:17" pos:end="241:33"><name pos:start="241:17" pos:end="241:31">AVFormatContext</name> <modifier pos:start="241:33" pos:end="241:33">*</modifier></type><name pos:start="241:34" pos:end="241:34">f</name><init pos:start="241:35" pos:end="241:66">= <expr pos:start="241:37" pos:end="241:66"><name pos:start="241:37" pos:end="241:66"><name pos:start="241:37" pos:end="241:47">input_files</name><index pos:start="241:48" pos:end="241:66">[ <expr pos:start="241:50" pos:end="241:64"><name pos:start="241:50" pos:end="241:64"><name pos:start="241:50" pos:end="241:52">ist</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:64">file_index</name></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:23"><expr pos:start="243:17" pos:end="243:22"><name pos:start="243:17" pos:end="243:20">skip</name><operator pos:start="243:21" pos:end="243:21">=</operator><literal type="number" pos:start="243:22" pos:end="243:22">1</literal></expr>;</expr_stmt>

                <for pos:start="245:17" pos:end="259:17">for<control pos:start="245:20" pos:end="245:50">(<init pos:start="245:21" pos:end="245:25"><expr pos:start="245:21" pos:end="245:24"><name pos:start="245:21" pos:end="245:22">pi</name><operator pos:start="245:23" pos:end="245:23">=</operator><literal type="number" pos:start="245:24" pos:end="245:24">0</literal></expr>;</init> <condition pos:start="245:27" pos:end="245:44"><expr pos:start="245:27" pos:end="245:43"><name pos:start="245:27" pos:end="245:28">pi</name><operator pos:start="245:29" pos:end="245:29">&lt;</operator><name pos:start="245:30" pos:end="245:43"><name pos:start="245:30" pos:end="245:30">f</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:43">nb_programs</name></name></expr>;</condition> <incr pos:start="245:46" pos:end="245:49"><expr pos:start="245:46" pos:end="245:49"><name pos:start="245:46" pos:end="245:47">pi</name><operator pos:start="245:48" pos:end="245:49">++</operator></expr></incr>)</control><block pos:start="245:51" pos:end="259:17">{<block_content pos:start="247:21" pos:end="257:25">

                    <decl_stmt pos:start="247:21" pos:end="247:50"><decl pos:start="247:21" pos:end="247:49"><type pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:29">AVProgram</name> <modifier pos:start="247:31" pos:end="247:31">*</modifier></type><name pos:start="247:32" pos:end="247:32">p</name><init pos:start="247:33" pos:end="247:49">= <expr pos:start="247:35" pos:end="247:49"><name pos:start="247:35" pos:end="247:49"><name pos:start="247:35" pos:end="247:35">f</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:45">programs</name><index pos:start="247:46" pos:end="247:49">[<expr pos:start="247:47" pos:end="247:48"><name pos:start="247:47" pos:end="247:48">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="249:21" pos:end="257:25"><if pos:start="249:21" pos:end="257:25">if<condition pos:start="249:23" pos:end="249:46">(<expr pos:start="249:24" pos:end="249:45"><name pos:start="249:24" pos:end="249:28"><name pos:start="249:24" pos:end="249:24">p</name><operator pos:start="249:25" pos:end="249:26">-&gt;</operator><name pos:start="249:27" pos:end="249:28">id</name></name> <operator pos:start="249:30" pos:end="249:31">==</operator> <name pos:start="249:33" pos:end="249:45">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="251:25" pos:end="257:25"><block_content pos:start="251:25" pos:end="257:25">

                        <for pos:start="251:25" pos:end="257:25">for<control pos:start="251:28" pos:end="251:64">(<init pos:start="251:29" pos:end="251:33"><expr pos:start="251:29" pos:end="251:32"><name pos:start="251:29" pos:end="251:30">si</name><operator pos:start="251:31" pos:end="251:31">=</operator><literal type="number" pos:start="251:32" pos:end="251:32">0</literal></expr>;</init> <condition pos:start="251:35" pos:end="251:58"><expr pos:start="251:35" pos:end="251:57"><name pos:start="251:35" pos:end="251:36">si</name><operator pos:start="251:37" pos:end="251:37">&lt;</operator><name pos:start="251:38" pos:end="251:57"><name pos:start="251:38" pos:end="251:38">p</name><operator pos:start="251:39" pos:end="251:40">-&gt;</operator><name pos:start="251:41" pos:end="251:57">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="251:60" pos:end="251:63"><expr pos:start="251:60" pos:end="251:63"><name pos:start="251:60" pos:end="251:61">si</name><operator pos:start="251:62" pos:end="251:63">++</operator></expr></incr>)</control><block pos:start="251:65" pos:end="257:25">{<block_content pos:start="253:29" pos:end="255:39">

                            <if_stmt pos:start="253:29" pos:end="255:39"><if pos:start="253:29" pos:end="255:39">if<condition pos:start="253:31" pos:end="253:76">(<expr pos:start="253:32" pos:end="253:75"><name pos:start="253:32" pos:end="253:64"><name pos:start="253:32" pos:end="253:32">f</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:41">streams</name><index pos:start="253:42" pos:end="253:64">[ <expr pos:start="253:44" pos:end="253:62"><name pos:start="253:44" pos:end="253:62"><name pos:start="253:44" pos:end="253:44">p</name><operator pos:start="253:45" pos:end="253:46">-&gt;</operator><name pos:start="253:47" pos:end="253:58">stream_index</name><index pos:start="253:59" pos:end="253:62">[<expr pos:start="253:60" pos:end="253:61"><name pos:start="253:60" pos:end="253:61">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="253:66" pos:end="253:67">==</operator> <name pos:start="253:69" pos:end="253:75"><name pos:start="253:69" pos:end="253:71">ist</name><operator pos:start="253:72" pos:end="253:73">-&gt;</operator><name pos:start="253:74" pos:end="253:75">st</name></name></expr>)</condition><block type="pseudo" pos:start="255:33" pos:end="255:39"><block_content pos:start="255:33" pos:end="255:39">

                                <expr_stmt pos:start="255:33" pos:end="255:39"><expr pos:start="255:33" pos:end="255:38"><name pos:start="255:33" pos:end="255:36">skip</name><operator pos:start="255:37" pos:end="255:37">=</operator><literal type="number" pos:start="255:38" pos:end="255:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></for></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="263:13" pos:end="269:13"><if pos:start="263:13" pos:end="269:13">if <condition pos:start="263:16" pos:end="265:99">(<expr pos:start="263:17" pos:end="265:98"><name pos:start="263:17" pos:end="263:28"><name pos:start="263:17" pos:end="263:19">ist</name><operator pos:start="263:20" pos:end="263:21">-&gt;</operator><name pos:start="263:22" pos:end="263:28">discard</name></name> <operator pos:start="263:30" pos:end="263:31">&amp;&amp;</operator> <name pos:start="263:33" pos:end="263:48"><name pos:start="263:33" pos:end="263:35">ist</name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:39">st</name><operator pos:start="263:40" pos:end="263:41">-&gt;</operator><name pos:start="263:42" pos:end="263:48">discard</name></name> <operator pos:start="263:50" pos:end="263:51">!=</operator> <name pos:start="263:53" pos:end="263:65">AVDISCARD_ALL</name> <operator pos:start="263:67" pos:end="263:68">&amp;&amp;</operator> <operator pos:start="263:70" pos:end="263:70">!</operator><name pos:start="263:71" pos:end="263:74">skip</name>

                <operator pos:start="265:17" pos:end="265:18">&amp;&amp;</operator> <name pos:start="265:20" pos:end="265:65"><name pos:start="265:20" pos:end="265:37">nb_frame_threshold</name><index pos:start="265:38" pos:end="265:65">[<expr pos:start="265:39" pos:end="265:64"><name pos:start="265:39" pos:end="265:64"><name pos:start="265:39" pos:end="265:41">ist</name><operator pos:start="265:42" pos:end="265:43">-&gt;</operator><name pos:start="265:44" pos:end="265:45">st</name><operator pos:start="265:46" pos:end="265:47">-&gt;</operator><name pos:start="265:48" pos:end="265:52">codec</name><operator pos:start="265:53" pos:end="265:54">-&gt;</operator><name pos:start="265:55" pos:end="265:64">codec_type</name></name></expr>]</index></name> <operator pos:start="265:67" pos:end="265:68">&lt;=</operator> <name pos:start="265:70" pos:end="265:98"><name pos:start="265:70" pos:end="265:72">ist</name><operator pos:start="265:73" pos:end="265:74">-&gt;</operator><name pos:start="265:75" pos:end="265:76">st</name><operator pos:start="265:77" pos:end="265:78">-&gt;</operator><name pos:start="265:79" pos:end="265:98">codec_info_nb_frames</name></name></expr>)</condition><block pos:start="265:100" pos:end="269:13">{<block_content pos:start="267:17" pos:end="267:60">

                <expr_stmt pos:start="267:17" pos:end="267:60"><expr pos:start="267:17" pos:end="267:59"><name pos:start="267:17" pos:end="267:57"><name pos:start="267:17" pos:end="267:29">found_streams</name><index pos:start="267:30" pos:end="267:57">[<expr pos:start="267:31" pos:end="267:56"><name pos:start="267:31" pos:end="267:56"><name pos:start="267:31" pos:end="267:33">ist</name><operator pos:start="267:34" pos:end="267:35">-&gt;</operator><name pos:start="267:36" pos:end="267:37">st</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:44">codec</name><operator pos:start="267:45" pos:end="267:46">-&gt;</operator><name pos:start="267:47" pos:end="267:56">codec_type</name></name></expr>]</index></name><operator pos:start="267:58" pos:end="267:59">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <for pos:start="273:9" pos:end="277:46">for<control pos:start="273:12" pos:end="273:40">(<init pos:start="273:13" pos:end="273:16"><expr pos:start="273:13" pos:end="273:15"><name pos:start="273:13" pos:end="273:13">j</name><operator pos:start="273:14" pos:end="273:14">=</operator><literal type="number" pos:start="273:15" pos:end="273:15">0</literal></expr>;</init> <condition pos:start="273:18" pos:end="273:35"><expr pos:start="273:18" pos:end="273:34"><name pos:start="273:18" pos:end="273:18">j</name><operator pos:start="273:19" pos:end="273:19">&lt;</operator><name pos:start="273:20" pos:end="273:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="273:37" pos:end="273:39"><expr pos:start="273:37" pos:end="273:39"><name pos:start="273:37" pos:end="273:37">j</name><operator pos:start="273:38" pos:end="273:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="275:13" pos:end="277:46"><block_content pos:start="275:13" pos:end="277:46">

            <if_stmt pos:start="275:13" pos:end="277:46"><if pos:start="275:13" pos:end="277:46">if<condition pos:start="275:15" pos:end="275:48">(<expr pos:start="275:16" pos:end="275:47"><name pos:start="275:16" pos:end="275:31"><name pos:start="275:16" pos:end="275:28">found_streams</name><index pos:start="275:29" pos:end="275:31">[<expr pos:start="275:30" pos:end="275:30"><name pos:start="275:30" pos:end="275:30">j</name></expr>]</index></name> <operator pos:start="275:33" pos:end="275:33">&lt;</operator> <name pos:start="275:35" pos:end="275:47"><name pos:start="275:35" pos:end="275:44">nb_streams</name><index pos:start="275:45" pos:end="275:47">[<expr pos:start="275:46" pos:end="275:46"><name pos:start="275:46" pos:end="275:46">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:46"><block_content pos:start="277:17" pos:end="277:46">

                <expr_stmt pos:start="277:17" pos:end="277:46"><expr pos:start="277:17" pos:end="277:45"><name pos:start="277:17" pos:end="277:37"><name pos:start="277:17" pos:end="277:34">nb_frame_threshold</name><index pos:start="277:35" pos:end="277:37">[<expr pos:start="277:36" pos:end="277:36"><name pos:start="277:36" pos:end="277:36">j</name></expr>]</index></name> <operator pos:start="277:39" pos:end="277:40">-=</operator> <name pos:start="277:42" pos:end="277:45">step</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="281:5" pos:end="281:10"><expr pos:start="281:5" pos:end="281:9"><name pos:start="281:5" pos:end="281:5">n</name> <operator pos:start="281:7" pos:end="281:7">=</operator> <literal type="number" pos:start="281:9" pos:end="281:9">0</literal></expr>;</expr_stmt>

    <for pos:start="283:5" pos:end="433:5">for<control pos:start="283:8" pos:end="283:34">(<init pos:start="283:9" pos:end="283:12"><expr pos:start="283:9" pos:end="283:11"><name pos:start="283:9" pos:end="283:9">k</name><operator pos:start="283:10" pos:end="283:10">=</operator><literal type="number" pos:start="283:11" pos:end="283:11">0</literal></expr>;</init><condition pos:start="283:13" pos:end="283:30"><expr pos:start="283:13" pos:end="283:29"><name pos:start="283:13" pos:end="283:13">k</name><operator pos:start="283:14" pos:end="283:14">&lt;</operator><name pos:start="283:15" pos:end="283:29">nb_output_files</name></expr>;</condition><incr pos:start="283:31" pos:end="283:33"><expr pos:start="283:31" pos:end="283:33"><name pos:start="283:31" pos:end="283:31">k</name><operator pos:start="283:32" pos:end="283:33">++</operator></expr></incr>)</control> <block pos:start="283:36" pos:end="433:5">{<block_content pos:start="285:9" pos:end="431:9">

        <expr_stmt pos:start="285:9" pos:end="285:29"><expr pos:start="285:9" pos:end="285:28"><name pos:start="285:9" pos:end="285:10">os</name> <operator pos:start="285:12" pos:end="285:12">=</operator> <name pos:start="285:14" pos:end="285:28"><name pos:start="285:14" pos:end="285:25">output_files</name><index pos:start="285:26" pos:end="285:28">[<expr pos:start="285:27" pos:end="285:27"><name pos:start="285:27" pos:end="285:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="287:9" pos:end="431:9">for<control pos:start="287:12" pos:end="287:41">(<init pos:start="287:13" pos:end="287:16"><expr pos:start="287:13" pos:end="287:15"><name pos:start="287:13" pos:end="287:13">i</name><operator pos:start="287:14" pos:end="287:14">=</operator><literal type="number" pos:start="287:15" pos:end="287:15">0</literal></expr>;</init><condition pos:start="287:17" pos:end="287:33"><expr pos:start="287:17" pos:end="287:32"><name pos:start="287:17" pos:end="287:17">i</name><operator pos:start="287:18" pos:end="287:18">&lt;</operator><name pos:start="287:19" pos:end="287:32"><name pos:start="287:19" pos:end="287:20">os</name><operator pos:start="287:21" pos:end="287:22">-&gt;</operator><name pos:start="287:23" pos:end="287:32">nb_streams</name></name></expr>;</condition><incr pos:start="287:34" pos:end="287:40"><expr pos:start="287:34" pos:end="287:36"><name pos:start="287:34" pos:end="287:34">i</name><operator pos:start="287:35" pos:end="287:36">++</operator></expr><operator pos:start="287:37" pos:end="287:37">,</operator><expr pos:start="287:38" pos:end="287:40"><name pos:start="287:38" pos:end="287:38">n</name><operator pos:start="287:39" pos:end="287:40">++</operator></expr></incr>)</control> <block pos:start="287:43" pos:end="431:9">{<block_content pos:start="289:13" pos:end="429:65">

            <decl_stmt pos:start="289:13" pos:end="289:22"><decl pos:start="289:13" pos:end="289:21"><type pos:start="289:13" pos:end="289:15"><name pos:start="289:13" pos:end="289:15">int</name></type> <name pos:start="289:17" pos:end="289:21">found</name></decl>;</decl_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:63"><expr pos:start="291:13" pos:end="291:62"><name pos:start="291:13" pos:end="291:15">ost</name> <operator pos:start="291:17" pos:end="291:17">=</operator> <name pos:start="291:19" pos:end="291:30"><name pos:start="291:19" pos:end="291:27">ost_table</name><index pos:start="291:28" pos:end="291:30">[<expr pos:start="291:29" pos:end="291:29"><name pos:start="291:29" pos:end="291:29">n</name></expr>]</index></name> <operator pos:start="291:32" pos:end="291:32">=</operator> <name pos:start="291:34" pos:end="291:62"><name pos:start="291:34" pos:end="291:56">output_streams_for_file</name><index pos:start="291:57" pos:end="291:59">[<expr pos:start="291:58" pos:end="291:58"><name pos:start="291:58" pos:end="291:58">k</name></expr>]</index><index pos:start="291:60" pos:end="291:62">[<expr pos:start="291:61" pos:end="291:61"><name pos:start="291:61" pos:end="291:61">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:37"><expr pos:start="293:13" pos:end="293:36"><name pos:start="293:13" pos:end="293:19"><name pos:start="293:13" pos:end="293:15">ost</name><operator pos:start="293:16" pos:end="293:17">-&gt;</operator><name pos:start="293:18" pos:end="293:19">st</name></name> <operator pos:start="293:21" pos:end="293:21">=</operator> <name pos:start="293:23" pos:end="293:36"><name pos:start="293:23" pos:end="293:24">os</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:33">streams</name><index pos:start="293:34" pos:end="293:36">[<expr pos:start="293:35" pos:end="293:35"><name pos:start="293:35" pos:end="293:35">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="295:13" pos:end="419:13"><if pos:start="295:13" pos:end="323:13">if <condition pos:start="295:16" pos:end="295:35">(<expr pos:start="295:17" pos:end="295:34"><name pos:start="295:17" pos:end="295:30">nb_stream_maps</name> <operator pos:start="295:32" pos:end="295:32">&gt;</operator> <literal type="number" pos:start="295:34" pos:end="295:34">0</literal></expr>)</condition> <block pos:start="295:37" pos:end="323:13">{<block_content pos:start="297:17" pos:end="319:17">

                <expr_stmt pos:start="297:17" pos:end="299:48"><expr pos:start="297:17" pos:end="299:47"><name pos:start="297:17" pos:end="297:33"><name pos:start="297:17" pos:end="297:19">ost</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:33">source_index</name></name> <operator pos:start="297:35" pos:end="297:35">=</operator> <name pos:start="297:37" pos:end="297:73"><name pos:start="297:37" pos:end="297:46">file_table</name><index pos:start="297:47" pos:end="297:73">[<expr pos:start="297:48" pos:end="297:72"><name pos:start="297:48" pos:end="297:61"><name pos:start="297:48" pos:end="297:58">stream_maps</name><index pos:start="297:59" pos:end="297:61">[<expr pos:start="297:60" pos:end="297:60"><name pos:start="297:60" pos:end="297:60">n</name></expr>]</index></name><operator pos:start="297:62" pos:end="297:62">.</operator><name pos:start="297:63" pos:end="297:72">file_index</name></expr>]</index></name><operator pos:start="297:74" pos:end="297:74">.</operator><name pos:start="297:75" pos:end="297:83">ist_index</name> <operator pos:start="297:85" pos:end="297:85">+</operator>

                    <name pos:start="299:21" pos:end="299:34"><name pos:start="299:21" pos:end="299:31">stream_maps</name><index pos:start="299:32" pos:end="299:34">[<expr pos:start="299:33" pos:end="299:33"><name pos:start="299:33" pos:end="299:33">n</name></expr>]</index></name><operator pos:start="299:35" pos:end="299:35">.</operator><name pos:start="299:36" pos:end="299:47">stream_index</name></expr>;</expr_stmt>



                <comment type="block" pos:start="303:17" pos:end="303:62">/* Sanity check that the stream types match */</comment>

                <if_stmt pos:start="305:17" pos:end="319:17"><if pos:start="305:17" pos:end="319:17">if <condition pos:start="305:20" pos:end="305:102">(<expr pos:start="305:21" pos:end="305:101"><name pos:start="305:21" pos:end="305:48"><name pos:start="305:21" pos:end="305:29">ist_table</name><index pos:start="305:30" pos:end="305:48">[<expr pos:start="305:31" pos:end="305:47"><name pos:start="305:31" pos:end="305:47"><name pos:start="305:31" pos:end="305:33">ost</name><operator pos:start="305:34" pos:end="305:35">-&gt;</operator><name pos:start="305:36" pos:end="305:47">source_index</name></name></expr>]</index></name><operator pos:start="305:49" pos:end="305:50">-&gt;</operator><name pos:start="305:51" pos:end="305:71"><name pos:start="305:51" pos:end="305:52">st</name><operator pos:start="305:53" pos:end="305:54">-&gt;</operator><name pos:start="305:55" pos:end="305:59">codec</name><operator pos:start="305:60" pos:end="305:61">-&gt;</operator><name pos:start="305:62" pos:end="305:71">codec_type</name></name> <operator pos:start="305:73" pos:end="305:74">!=</operator> <name pos:start="305:76" pos:end="305:101"><name pos:start="305:76" pos:end="305:78">ost</name><operator pos:start="305:79" pos:end="305:80">-&gt;</operator><name pos:start="305:81" pos:end="305:82">st</name><operator pos:start="305:83" pos:end="305:84">-&gt;</operator><name pos:start="305:85" pos:end="305:89">codec</name><operator pos:start="305:90" pos:end="305:91">-&gt;</operator><name pos:start="305:92" pos:end="305:101">codec_type</name></name></expr>)</condition> <block pos:start="305:104" pos:end="319:17">{<block_content pos:start="307:21" pos:end="317:35">

                    <decl_stmt pos:start="307:21" pos:end="307:43"><decl pos:start="307:21" pos:end="307:42"><type pos:start="307:21" pos:end="307:23"><name pos:start="307:21" pos:end="307:23">int</name></type> <name pos:start="307:25" pos:end="307:25">i</name><init pos:start="307:26" pos:end="307:42">= <expr pos:start="307:28" pos:end="307:42"><name pos:start="307:28" pos:end="307:42"><name pos:start="307:28" pos:end="307:30">ost</name><operator pos:start="307:31" pos:end="307:32">-&gt;</operator><name pos:start="307:33" pos:end="307:42">file_index</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:85"><expr pos:start="309:21" pos:end="309:84"><call pos:start="309:21" pos:end="309:84"><name pos:start="309:21" pos:end="309:34">av_dump_format</name><argument_list pos:start="309:35" pos:end="309:84">(<argument pos:start="309:36" pos:end="309:50"><expr pos:start="309:36" pos:end="309:50"><name pos:start="309:36" pos:end="309:50"><name pos:start="309:36" pos:end="309:47">output_files</name><index pos:start="309:48" pos:end="309:50">[<expr pos:start="309:49" pos:end="309:49"><name pos:start="309:49" pos:end="309:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="309:53" pos:end="309:53"><expr pos:start="309:53" pos:end="309:53"><name pos:start="309:53" pos:end="309:53">i</name></expr></argument>, <argument pos:start="309:56" pos:end="309:80"><expr pos:start="309:56" pos:end="309:80"><name pos:start="309:56" pos:end="309:70"><name pos:start="309:56" pos:end="309:67">output_files</name><index pos:start="309:68" pos:end="309:70">[<expr pos:start="309:69" pos:end="309:69"><name pos:start="309:69" pos:end="309:69">i</name></expr>]</index></name><operator pos:start="309:71" pos:end="309:72">-&gt;</operator><name pos:start="309:73" pos:end="309:80">filename</name></expr></argument>, <argument pos:start="309:83" pos:end="309:83"><expr pos:start="309:83" pos:end="309:83"><literal type="number" pos:start="309:83" pos:end="309:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="315:53"><expr pos:start="311:21" pos:end="315:52"><call pos:start="311:21" pos:end="315:52"><name pos:start="311:21" pos:end="311:27">fprintf</name><argument_list pos:start="311:28" pos:end="315:52">(<argument pos:start="311:29" pos:end="311:34"><expr pos:start="311:29" pos:end="311:34"><name pos:start="311:29" pos:end="311:34">stderr</name></expr></argument>, <argument pos:start="311:37" pos:end="311:88"><expr pos:start="311:37" pos:end="311:88"><literal type="string" pos:start="311:37" pos:end="311:88">"Codec type mismatch for mapping #%d.%d -&gt; #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="313:25" pos:end="313:49"><expr pos:start="313:25" pos:end="313:49"><name pos:start="313:25" pos:end="313:38"><name pos:start="313:25" pos:end="313:35">stream_maps</name><index pos:start="313:36" pos:end="313:38">[<expr pos:start="313:37" pos:end="313:37"><name pos:start="313:37" pos:end="313:37">n</name></expr>]</index></name><operator pos:start="313:39" pos:end="313:39">.</operator><name pos:start="313:40" pos:end="313:49">file_index</name></expr></argument>, <argument pos:start="313:52" pos:end="313:78"><expr pos:start="313:52" pos:end="313:78"><name pos:start="313:52" pos:end="313:65"><name pos:start="313:52" pos:end="313:62">stream_maps</name><index pos:start="313:63" pos:end="313:65">[<expr pos:start="313:64" pos:end="313:64"><name pos:start="313:64" pos:end="313:64">n</name></expr>]</index></name><operator pos:start="313:66" pos:end="313:66">.</operator><name pos:start="313:67" pos:end="313:78">stream_index</name></expr></argument>,

                        <argument pos:start="315:25" pos:end="315:39"><expr pos:start="315:25" pos:end="315:39"><name pos:start="315:25" pos:end="315:39"><name pos:start="315:25" pos:end="315:27">ost</name><operator pos:start="315:28" pos:end="315:29">-&gt;</operator><name pos:start="315:30" pos:end="315:39">file_index</name></name></expr></argument>, <argument pos:start="315:42" pos:end="315:51"><expr pos:start="315:42" pos:end="315:51"><name pos:start="315:42" pos:end="315:51"><name pos:start="315:42" pos:end="315:44">ost</name><operator pos:start="315:45" pos:end="315:46">-&gt;</operator><name pos:start="315:47" pos:end="315:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:35"><expr pos:start="317:21" pos:end="317:34"><call pos:start="317:21" pos:end="317:34"><name pos:start="317:21" pos:end="317:31">ffmpeg_exit</name><argument_list pos:start="317:32" pos:end="317:34">(<argument pos:start="317:33" pos:end="317:33"><expr pos:start="317:33" pos:end="317:33"><literal type="number" pos:start="317:33" pos:end="317:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



            </block_content>}</block></if> <else pos:start="323:15" pos:end="419:13">else <block pos:start="323:20" pos:end="419:13">{<block_content pos:start="327:17" pos:end="417:17">

                <comment type="block" pos:start="325:17" pos:end="325:104">/* get corresponding input stream index : we select the first one with the right type */</comment>

                <expr_stmt pos:start="327:17" pos:end="327:26"><expr pos:start="327:17" pos:end="327:25"><name pos:start="327:17" pos:end="327:21">found</name> <operator pos:start="327:23" pos:end="327:23">=</operator> <literal type="number" pos:start="327:25" pos:end="327:25">0</literal></expr>;</expr_stmt>

                <for pos:start="329:17" pos:end="375:17">for<control pos:start="329:20" pos:end="329:42">(<init pos:start="329:21" pos:end="329:24"><expr pos:start="329:21" pos:end="329:23"><name pos:start="329:21" pos:end="329:21">j</name><operator pos:start="329:22" pos:end="329:22">=</operator><literal type="number" pos:start="329:23" pos:end="329:23">0</literal></expr>;</init><condition pos:start="329:25" pos:end="329:38"><expr pos:start="329:25" pos:end="329:37"><name pos:start="329:25" pos:end="329:25">j</name><operator pos:start="329:26" pos:end="329:26">&lt;</operator><name pos:start="329:27" pos:end="329:37">nb_istreams</name></expr>;</condition><incr pos:start="329:39" pos:end="329:41"><expr pos:start="329:39" pos:end="329:41"><name pos:start="329:39" pos:end="329:39">j</name><operator pos:start="329:40" pos:end="329:41">++</operator></expr></incr>)</control> <block pos:start="329:44" pos:end="375:17">{<block_content pos:start="331:21" pos:end="373:21">

                    <decl_stmt pos:start="331:21" pos:end="331:31"><decl pos:start="331:21" pos:end="331:30"><type pos:start="331:21" pos:end="331:23"><name pos:start="331:21" pos:end="331:23">int</name></type> <name pos:start="331:25" pos:end="331:28">skip</name><init pos:start="331:29" pos:end="331:30">=<expr pos:start="331:30" pos:end="331:30"><literal type="number" pos:start="331:30" pos:end="331:30">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:39"><expr pos:start="333:21" pos:end="333:38"><name pos:start="333:21" pos:end="333:23">ist</name> <operator pos:start="333:25" pos:end="333:25">=</operator> <name pos:start="333:27" pos:end="333:38"><name pos:start="333:27" pos:end="333:35">ist_table</name><index pos:start="333:36" pos:end="333:38">[<expr pos:start="333:37" pos:end="333:37"><name pos:start="333:37" pos:end="333:37">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="335:21" pos:end="359:21"><if pos:start="335:21" pos:end="359:21">if<condition pos:start="335:23" pos:end="335:37">(<expr pos:start="335:24" pos:end="335:36"><name pos:start="335:24" pos:end="335:36">opt_programid</name></expr>)</condition><block pos:start="335:38" pos:end="359:21">{<block_content pos:start="337:25" pos:end="357:25">

                        <decl_stmt pos:start="337:25" pos:end="337:34"><decl pos:start="337:25" pos:end="337:30"><type pos:start="337:25" pos:end="337:27"><name pos:start="337:25" pos:end="337:27">int</name></type> <name pos:start="337:29" pos:end="337:30">pi</name></decl>,<decl pos:start="337:32" pos:end="337:33"><type ref="prev" pos:start="337:25" pos:end="337:27"/><name pos:start="337:32" pos:end="337:33">si</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="339:25" pos:end="339:75"><decl pos:start="339:25" pos:end="339:74"><type pos:start="339:25" pos:end="339:41"><name pos:start="339:25" pos:end="339:39">AVFormatContext</name> <modifier pos:start="339:41" pos:end="339:41">*</modifier></type><name pos:start="339:42" pos:end="339:42">f</name><init pos:start="339:43" pos:end="339:74">= <expr pos:start="339:45" pos:end="339:74"><name pos:start="339:45" pos:end="339:74"><name pos:start="339:45" pos:end="339:55">input_files</name><index pos:start="339:56" pos:end="339:74">[ <expr pos:start="339:58" pos:end="339:72"><name pos:start="339:58" pos:end="339:72"><name pos:start="339:58" pos:end="339:60">ist</name><operator pos:start="339:61" pos:end="339:62">-&gt;</operator><name pos:start="339:63" pos:end="339:72">file_index</name></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="341:25" pos:end="341:31"><expr pos:start="341:25" pos:end="341:30"><name pos:start="341:25" pos:end="341:28">skip</name><operator pos:start="341:29" pos:end="341:29">=</operator><literal type="number" pos:start="341:30" pos:end="341:30">1</literal></expr>;</expr_stmt>

                        <for pos:start="343:25" pos:end="357:25">for<control pos:start="343:28" pos:end="343:58">(<init pos:start="343:29" pos:end="343:33"><expr pos:start="343:29" pos:end="343:32"><name pos:start="343:29" pos:end="343:30">pi</name><operator pos:start="343:31" pos:end="343:31">=</operator><literal type="number" pos:start="343:32" pos:end="343:32">0</literal></expr>;</init> <condition pos:start="343:35" pos:end="343:52"><expr pos:start="343:35" pos:end="343:51"><name pos:start="343:35" pos:end="343:36">pi</name><operator pos:start="343:37" pos:end="343:37">&lt;</operator><name pos:start="343:38" pos:end="343:51"><name pos:start="343:38" pos:end="343:38">f</name><operator pos:start="343:39" pos:end="343:40">-&gt;</operator><name pos:start="343:41" pos:end="343:51">nb_programs</name></name></expr>;</condition> <incr pos:start="343:54" pos:end="343:57"><expr pos:start="343:54" pos:end="343:57"><name pos:start="343:54" pos:end="343:55">pi</name><operator pos:start="343:56" pos:end="343:57">++</operator></expr></incr>)</control><block pos:start="343:59" pos:end="357:25">{<block_content pos:start="345:29" pos:end="355:33">

                            <decl_stmt pos:start="345:29" pos:end="345:58"><decl pos:start="345:29" pos:end="345:57"><type pos:start="345:29" pos:end="345:39"><name pos:start="345:29" pos:end="345:37">AVProgram</name> <modifier pos:start="345:39" pos:end="345:39">*</modifier></type><name pos:start="345:40" pos:end="345:40">p</name><init pos:start="345:41" pos:end="345:57">= <expr pos:start="345:43" pos:end="345:57"><name pos:start="345:43" pos:end="345:57"><name pos:start="345:43" pos:end="345:43">f</name><operator pos:start="345:44" pos:end="345:45">-&gt;</operator><name pos:start="345:46" pos:end="345:53">programs</name><index pos:start="345:54" pos:end="345:57">[<expr pos:start="345:55" pos:end="345:56"><name pos:start="345:55" pos:end="345:56">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="347:29" pos:end="355:33"><if pos:start="347:29" pos:end="355:33">if<condition pos:start="347:31" pos:end="347:54">(<expr pos:start="347:32" pos:end="347:53"><name pos:start="347:32" pos:end="347:36"><name pos:start="347:32" pos:end="347:32">p</name><operator pos:start="347:33" pos:end="347:34">-&gt;</operator><name pos:start="347:35" pos:end="347:36">id</name></name> <operator pos:start="347:38" pos:end="347:39">==</operator> <name pos:start="347:41" pos:end="347:53">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="349:33" pos:end="355:33"><block_content pos:start="349:33" pos:end="355:33">

                                <for pos:start="349:33" pos:end="355:33">for<control pos:start="349:36" pos:end="349:72">(<init pos:start="349:37" pos:end="349:41"><expr pos:start="349:37" pos:end="349:40"><name pos:start="349:37" pos:end="349:38">si</name><operator pos:start="349:39" pos:end="349:39">=</operator><literal type="number" pos:start="349:40" pos:end="349:40">0</literal></expr>;</init> <condition pos:start="349:43" pos:end="349:66"><expr pos:start="349:43" pos:end="349:65"><name pos:start="349:43" pos:end="349:44">si</name><operator pos:start="349:45" pos:end="349:45">&lt;</operator><name pos:start="349:46" pos:end="349:65"><name pos:start="349:46" pos:end="349:46">p</name><operator pos:start="349:47" pos:end="349:48">-&gt;</operator><name pos:start="349:49" pos:end="349:65">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="349:68" pos:end="349:71"><expr pos:start="349:68" pos:end="349:71"><name pos:start="349:68" pos:end="349:69">si</name><operator pos:start="349:70" pos:end="349:71">++</operator></expr></incr>)</control><block pos:start="349:73" pos:end="355:33">{<block_content pos:start="351:37" pos:end="353:47">

                                    <if_stmt pos:start="351:37" pos:end="353:47"><if pos:start="351:37" pos:end="353:47">if<condition pos:start="351:39" pos:end="351:84">(<expr pos:start="351:40" pos:end="351:83"><name pos:start="351:40" pos:end="351:72"><name pos:start="351:40" pos:end="351:40">f</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:49">streams</name><index pos:start="351:50" pos:end="351:72">[ <expr pos:start="351:52" pos:end="351:70"><name pos:start="351:52" pos:end="351:70"><name pos:start="351:52" pos:end="351:52">p</name><operator pos:start="351:53" pos:end="351:54">-&gt;</operator><name pos:start="351:55" pos:end="351:66">stream_index</name><index pos:start="351:67" pos:end="351:70">[<expr pos:start="351:68" pos:end="351:69"><name pos:start="351:68" pos:end="351:69">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="351:74" pos:end="351:75">==</operator> <name pos:start="351:77" pos:end="351:83"><name pos:start="351:77" pos:end="351:79">ist</name><operator pos:start="351:80" pos:end="351:81">-&gt;</operator><name pos:start="351:82" pos:end="351:83">st</name></name></expr>)</condition><block type="pseudo" pos:start="353:41" pos:end="353:47"><block_content pos:start="353:41" pos:end="353:47">

                                        <expr_stmt pos:start="353:41" pos:end="353:47"><expr pos:start="353:41" pos:end="353:46"><name pos:start="353:41" pos:end="353:44">skip</name><operator pos:start="353:45" pos:end="353:45">=</operator><literal type="number" pos:start="353:46" pos:end="353:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                </block_content>}</block></for></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="361:21" pos:end="373:21"><if pos:start="361:21" pos:end="373:21">if <condition pos:start="361:24" pos:end="365:104">(<expr pos:start="361:25" pos:end="365:103"><name pos:start="361:25" pos:end="361:36"><name pos:start="361:25" pos:end="361:27">ist</name><operator pos:start="361:28" pos:end="361:29">-&gt;</operator><name pos:start="361:30" pos:end="361:36">discard</name></name> <operator pos:start="361:38" pos:end="361:39">&amp;&amp;</operator> <name pos:start="361:41" pos:end="361:56"><name pos:start="361:41" pos:end="361:43">ist</name><operator pos:start="361:44" pos:end="361:45">-&gt;</operator><name pos:start="361:46" pos:end="361:47">st</name><operator pos:start="361:48" pos:end="361:49">-&gt;</operator><name pos:start="361:50" pos:end="361:56">discard</name></name> <operator pos:start="361:58" pos:end="361:59">!=</operator> <name pos:start="361:61" pos:end="361:73">AVDISCARD_ALL</name> <operator pos:start="361:75" pos:end="361:76">&amp;&amp;</operator> <operator pos:start="361:78" pos:end="361:78">!</operator><name pos:start="361:79" pos:end="361:82">skip</name> <operator pos:start="361:84" pos:end="361:85">&amp;&amp;</operator>

                        <name pos:start="363:25" pos:end="363:50"><name pos:start="363:25" pos:end="363:27">ist</name><operator pos:start="363:28" pos:end="363:29">-&gt;</operator><name pos:start="363:30" pos:end="363:31">st</name><operator pos:start="363:32" pos:end="363:33">-&gt;</operator><name pos:start="363:34" pos:end="363:38">codec</name><operator pos:start="363:39" pos:end="363:40">-&gt;</operator><name pos:start="363:41" pos:end="363:50">codec_type</name></name> <operator pos:start="363:52" pos:end="363:53">==</operator> <name pos:start="363:55" pos:end="363:80"><name pos:start="363:55" pos:end="363:57">ost</name><operator pos:start="363:58" pos:end="363:59">-&gt;</operator><name pos:start="363:60" pos:end="363:61">st</name><operator pos:start="363:62" pos:end="363:63">-&gt;</operator><name pos:start="363:64" pos:end="363:68">codec</name><operator pos:start="363:69" pos:end="363:70">-&gt;</operator><name pos:start="363:71" pos:end="363:80">codec_type</name></name> <operator pos:start="363:82" pos:end="363:83">&amp;&amp;</operator>

                        <name pos:start="365:25" pos:end="365:70"><name pos:start="365:25" pos:end="365:42">nb_frame_threshold</name><index pos:start="365:43" pos:end="365:70">[<expr pos:start="365:44" pos:end="365:69"><name pos:start="365:44" pos:end="365:69"><name pos:start="365:44" pos:end="365:46">ist</name><operator pos:start="365:47" pos:end="365:48">-&gt;</operator><name pos:start="365:49" pos:end="365:50">st</name><operator pos:start="365:51" pos:end="365:52">-&gt;</operator><name pos:start="365:53" pos:end="365:57">codec</name><operator pos:start="365:58" pos:end="365:59">-&gt;</operator><name pos:start="365:60" pos:end="365:69">codec_type</name></name></expr>]</index></name> <operator pos:start="365:72" pos:end="365:73">&lt;=</operator> <name pos:start="365:75" pos:end="365:103"><name pos:start="365:75" pos:end="365:77">ist</name><operator pos:start="365:78" pos:end="365:79">-&gt;</operator><name pos:start="365:80" pos:end="365:81">st</name><operator pos:start="365:82" pos:end="365:83">-&gt;</operator><name pos:start="365:84" pos:end="365:103">codec_info_nb_frames</name></name></expr>)</condition> <block pos:start="365:106" pos:end="373:21">{<block_content pos:start="367:29" pos:end="371:34">

                            <expr_stmt pos:start="367:29" pos:end="367:50"><expr pos:start="367:29" pos:end="367:49"><name pos:start="367:29" pos:end="367:45"><name pos:start="367:29" pos:end="367:31">ost</name><operator pos:start="367:32" pos:end="367:33">-&gt;</operator><name pos:start="367:34" pos:end="367:45">source_index</name></name> <operator pos:start="367:47" pos:end="367:47">=</operator> <name pos:start="367:49" pos:end="367:49">j</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="369:29" pos:end="369:38"><expr pos:start="369:29" pos:end="369:37"><name pos:start="369:29" pos:end="369:33">found</name> <operator pos:start="369:35" pos:end="369:35">=</operator> <literal type="number" pos:start="369:37" pos:end="369:37">1</literal></expr>;</expr_stmt>

                            <break pos:start="371:29" pos:end="371:34">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="379:17" pos:end="417:17"><if pos:start="379:17" pos:end="417:17">if <condition pos:start="379:20" pos:end="379:27">(<expr pos:start="379:21" pos:end="379:26"><operator pos:start="379:21" pos:end="379:21">!</operator><name pos:start="379:22" pos:end="379:26">found</name></expr>)</condition> <block pos:start="379:29" pos:end="417:17">{<block_content pos:start="381:21" pos:end="415:21">

                    <if_stmt pos:start="381:21" pos:end="401:21"><if pos:start="381:21" pos:end="401:21">if<condition pos:start="381:23" pos:end="381:39">(<expr pos:start="381:24" pos:end="381:38"><operator pos:start="381:24" pos:end="381:24">!</operator> <name pos:start="381:26" pos:end="381:38">opt_programid</name></expr>)</condition> <block pos:start="381:41" pos:end="401:21">{<block_content pos:start="385:25" pos:end="399:25">

                        <comment type="block" pos:start="383:25" pos:end="383:65">/* try again and reuse existing stream */</comment>

                        <for pos:start="385:25" pos:end="399:25">for<control pos:start="385:28" pos:end="385:50">(<init pos:start="385:29" pos:end="385:32"><expr pos:start="385:29" pos:end="385:31"><name pos:start="385:29" pos:end="385:29">j</name><operator pos:start="385:30" pos:end="385:30">=</operator><literal type="number" pos:start="385:31" pos:end="385:31">0</literal></expr>;</init><condition pos:start="385:33" pos:end="385:46"><expr pos:start="385:33" pos:end="385:45"><name pos:start="385:33" pos:end="385:33">j</name><operator pos:start="385:34" pos:end="385:34">&lt;</operator><name pos:start="385:35" pos:end="385:45">nb_istreams</name></expr>;</condition><incr pos:start="385:47" pos:end="385:49"><expr pos:start="385:47" pos:end="385:49"><name pos:start="385:47" pos:end="385:47">j</name><operator pos:start="385:48" pos:end="385:49">++</operator></expr></incr>)</control> <block pos:start="385:52" pos:end="399:25">{<block_content pos:start="387:29" pos:end="397:29">

                            <expr_stmt pos:start="387:29" pos:end="387:47"><expr pos:start="387:29" pos:end="387:46"><name pos:start="387:29" pos:end="387:31">ist</name> <operator pos:start="387:33" pos:end="387:33">=</operator> <name pos:start="387:35" pos:end="387:46"><name pos:start="387:35" pos:end="387:43">ist_table</name><index pos:start="387:44" pos:end="387:46">[<expr pos:start="387:45" pos:end="387:45"><name pos:start="387:45" pos:end="387:45">j</name></expr>]</index></name></expr>;</expr_stmt>

                            <if_stmt pos:start="389:29" pos:end="397:29"><if pos:start="389:29" pos:end="397:29">if <condition pos:start="389:32" pos:end="391:69">(   <expr pos:start="389:36" pos:end="391:68"><name pos:start="389:36" pos:end="389:61"><name pos:start="389:36" pos:end="389:38">ist</name><operator pos:start="389:39" pos:end="389:40">-&gt;</operator><name pos:start="389:41" pos:end="389:42">st</name><operator pos:start="389:43" pos:end="389:44">-&gt;</operator><name pos:start="389:45" pos:end="389:49">codec</name><operator pos:start="389:50" pos:end="389:51">-&gt;</operator><name pos:start="389:52" pos:end="389:61">codec_type</name></name> <operator pos:start="389:63" pos:end="389:64">==</operator> <name pos:start="389:66" pos:end="389:91"><name pos:start="389:66" pos:end="389:68">ost</name><operator pos:start="389:69" pos:end="389:70">-&gt;</operator><name pos:start="389:71" pos:end="389:72">st</name><operator pos:start="389:73" pos:end="389:74">-&gt;</operator><name pos:start="389:75" pos:end="389:79">codec</name><operator pos:start="389:80" pos:end="389:81">-&gt;</operator><name pos:start="389:82" pos:end="389:91">codec_type</name></name>

                                <operator pos:start="391:33" pos:end="391:34">&amp;&amp;</operator> <name pos:start="391:36" pos:end="391:51"><name pos:start="391:36" pos:end="391:38">ist</name><operator pos:start="391:39" pos:end="391:40">-&gt;</operator><name pos:start="391:41" pos:end="391:42">st</name><operator pos:start="391:43" pos:end="391:44">-&gt;</operator><name pos:start="391:45" pos:end="391:51">discard</name></name> <operator pos:start="391:53" pos:end="391:54">!=</operator> <name pos:start="391:56" pos:end="391:68">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="391:71" pos:end="397:29">{<block_content pos:start="393:33" pos:end="395:42">

                                <expr_stmt pos:start="393:33" pos:end="393:54"><expr pos:start="393:33" pos:end="393:53"><name pos:start="393:33" pos:end="393:49"><name pos:start="393:33" pos:end="393:35">ost</name><operator pos:start="393:36" pos:end="393:37">-&gt;</operator><name pos:start="393:38" pos:end="393:49">source_index</name></name> <operator pos:start="393:51" pos:end="393:51">=</operator> <name pos:start="393:53" pos:end="393:53">j</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="395:33" pos:end="395:42"><expr pos:start="395:33" pos:end="395:41"><name pos:start="395:33" pos:end="395:37">found</name> <operator pos:start="395:39" pos:end="395:39">=</operator> <literal type="number" pos:start="395:41" pos:end="395:41">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="403:21" pos:end="415:21"><if pos:start="403:21" pos:end="415:21">if <condition pos:start="403:24" pos:end="403:31">(<expr pos:start="403:25" pos:end="403:30"><operator pos:start="403:25" pos:end="403:25">!</operator><name pos:start="403:26" pos:end="403:30">found</name></expr>)</condition> <block pos:start="403:33" pos:end="415:21">{<block_content pos:start="405:25" pos:end="413:39">

                        <decl_stmt pos:start="405:25" pos:end="405:47"><decl pos:start="405:25" pos:end="405:46"><type pos:start="405:25" pos:end="405:27"><name pos:start="405:25" pos:end="405:27">int</name></type> <name pos:start="405:29" pos:end="405:29">i</name><init pos:start="405:30" pos:end="405:46">= <expr pos:start="405:32" pos:end="405:46"><name pos:start="405:32" pos:end="405:46"><name pos:start="405:32" pos:end="405:34">ost</name><operator pos:start="405:35" pos:end="405:36">-&gt;</operator><name pos:start="405:37" pos:end="405:46">file_index</name></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="407:25" pos:end="407:89"><expr pos:start="407:25" pos:end="407:88"><call pos:start="407:25" pos:end="407:88"><name pos:start="407:25" pos:end="407:38">av_dump_format</name><argument_list pos:start="407:39" pos:end="407:88">(<argument pos:start="407:40" pos:end="407:54"><expr pos:start="407:40" pos:end="407:54"><name pos:start="407:40" pos:end="407:54"><name pos:start="407:40" pos:end="407:51">output_files</name><index pos:start="407:52" pos:end="407:54">[<expr pos:start="407:53" pos:end="407:53"><name pos:start="407:53" pos:end="407:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="407:57" pos:end="407:57"><expr pos:start="407:57" pos:end="407:57"><name pos:start="407:57" pos:end="407:57">i</name></expr></argument>, <argument pos:start="407:60" pos:end="407:84"><expr pos:start="407:60" pos:end="407:84"><name pos:start="407:60" pos:end="407:74"><name pos:start="407:60" pos:end="407:71">output_files</name><index pos:start="407:72" pos:end="407:74">[<expr pos:start="407:73" pos:end="407:73"><name pos:start="407:73" pos:end="407:73">i</name></expr>]</index></name><operator pos:start="407:75" pos:end="407:76">-&gt;</operator><name pos:start="407:77" pos:end="407:84">filename</name></expr></argument>, <argument pos:start="407:87" pos:end="407:87"><expr pos:start="407:87" pos:end="407:87"><literal type="number" pos:start="407:87" pos:end="407:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="409:25" pos:end="411:61"><expr pos:start="409:25" pos:end="411:60"><call pos:start="409:25" pos:end="411:60"><name pos:start="409:25" pos:end="409:31">fprintf</name><argument_list pos:start="409:32" pos:end="411:60">(<argument pos:start="409:33" pos:end="409:38"><expr pos:start="409:33" pos:end="409:38"><name pos:start="409:33" pos:end="409:38">stderr</name></expr></argument>, <argument pos:start="409:41" pos:end="409:101"><expr pos:start="409:41" pos:end="409:101"><literal type="string" pos:start="409:41" pos:end="409:101">"Could not find input stream matching output stream #%d.%d\n"</literal></expr></argument>,

                                <argument pos:start="411:33" pos:end="411:47"><expr pos:start="411:33" pos:end="411:47"><name pos:start="411:33" pos:end="411:47"><name pos:start="411:33" pos:end="411:35">ost</name><operator pos:start="411:36" pos:end="411:37">-&gt;</operator><name pos:start="411:38" pos:end="411:47">file_index</name></name></expr></argument>, <argument pos:start="411:50" pos:end="411:59"><expr pos:start="411:50" pos:end="411:59"><name pos:start="411:50" pos:end="411:59"><name pos:start="411:50" pos:end="411:52">ost</name><operator pos:start="411:53" pos:end="411:54">-&gt;</operator><name pos:start="411:55" pos:end="411:59">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="413:25" pos:end="413:39"><expr pos:start="413:25" pos:end="413:38"><call pos:start="413:25" pos:end="413:38"><name pos:start="413:25" pos:end="413:35">ffmpeg_exit</name><argument_list pos:start="413:36" pos:end="413:38">(<argument pos:start="413:37" pos:end="413:37"><expr pos:start="413:37" pos:end="413:37"><literal type="number" pos:start="413:37" pos:end="413:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:47"><expr pos:start="421:13" pos:end="421:46"><name pos:start="421:13" pos:end="421:15">ist</name> <operator pos:start="421:17" pos:end="421:17">=</operator> <name pos:start="421:19" pos:end="421:46"><name pos:start="421:19" pos:end="421:27">ist_table</name><index pos:start="421:28" pos:end="421:46">[<expr pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:31">ost</name><operator pos:start="421:32" pos:end="421:33">-&gt;</operator><name pos:start="421:34" pos:end="421:45">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:29"><expr pos:start="423:13" pos:end="423:28"><name pos:start="423:13" pos:end="423:24"><name pos:start="423:13" pos:end="423:15">ist</name><operator pos:start="423:16" pos:end="423:17">-&gt;</operator><name pos:start="423:18" pos:end="423:24">discard</name></name> <operator pos:start="423:26" pos:end="423:26">=</operator> <literal type="number" pos:start="423:28" pos:end="423:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="429:65"><expr pos:start="425:13" pos:end="429:64"><name pos:start="425:13" pos:end="425:25"><name pos:start="425:13" pos:end="425:15">ost</name><operator pos:start="425:16" pos:end="425:17">-&gt;</operator><name pos:start="425:18" pos:end="425:25">sync_ist</name></name> <operator pos:start="425:27" pos:end="425:27">=</operator> <ternary pos:start="425:29" pos:end="429:64"><condition pos:start="425:29" pos:end="425:50"><expr pos:start="425:29" pos:end="425:48"><operator pos:start="425:29" pos:end="425:29">(</operator><name pos:start="425:30" pos:end="425:43">nb_stream_maps</name> <operator pos:start="425:45" pos:end="425:45">&gt;</operator> <literal type="number" pos:start="425:47" pos:end="425:47">0</literal><operator pos:start="425:48" pos:end="425:48">)</operator></expr> ?</condition><then pos:start="427:17" pos:end="429:58">

                <expr pos:start="427:17" pos:end="429:58"><name pos:start="427:17" pos:end="429:58"><name pos:start="427:17" pos:end="427:25">ist_table</name><index pos:start="427:26" pos:end="429:58">[<expr pos:start="427:27" pos:end="429:57"><name pos:start="427:27" pos:end="427:68"><name pos:start="427:27" pos:end="427:36">file_table</name><index pos:start="427:37" pos:end="427:68">[<expr pos:start="427:38" pos:end="427:67"><name pos:start="427:38" pos:end="427:51"><name pos:start="427:38" pos:end="427:48">stream_maps</name><index pos:start="427:49" pos:end="427:51">[<expr pos:start="427:50" pos:end="427:50"><name pos:start="427:50" pos:end="427:50">n</name></expr>]</index></name><operator pos:start="427:52" pos:end="427:52">.</operator><name pos:start="427:53" pos:end="427:67">sync_file_index</name></expr>]</index></name><operator pos:start="427:69" pos:end="427:69">.</operator><name pos:start="427:70" pos:end="427:78">ist_index</name> <operator pos:start="427:80" pos:end="427:80">+</operator>

                         <name pos:start="429:26" pos:end="429:39"><name pos:start="429:26" pos:end="429:36">stream_maps</name><index pos:start="429:37" pos:end="429:39">[<expr pos:start="429:38" pos:end="429:38"><name pos:start="429:38" pos:end="429:38">n</name></expr>]</index></name><operator pos:start="429:40" pos:end="429:40">.</operator><name pos:start="429:41" pos:end="429:57">sync_stream_index</name></expr>]</index></name></expr> </then><else pos:start="429:60" pos:end="429:64">: <expr pos:start="429:62" pos:end="429:64"><name pos:start="429:62" pos:end="429:64">ist</name></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="437:5" pos:end="437:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="439:5" pos:end="801:5">for<control pos:start="439:8" pos:end="439:30">(<init pos:start="439:9" pos:end="439:12"><expr pos:start="439:9" pos:end="439:11"><name pos:start="439:9" pos:end="439:9">i</name><operator pos:start="439:10" pos:end="439:10">=</operator><literal type="number" pos:start="439:11" pos:end="439:11">0</literal></expr>;</init><condition pos:start="439:13" pos:end="439:26"><expr pos:start="439:13" pos:end="439:25"><name pos:start="439:13" pos:end="439:13">i</name><operator pos:start="439:14" pos:end="439:14">&lt;</operator><name pos:start="439:15" pos:end="439:25">nb_ostreams</name></expr>;</condition><incr pos:start="439:27" pos:end="439:29"><expr pos:start="439:27" pos:end="439:29"><name pos:start="439:27" pos:end="439:27">i</name><operator pos:start="439:28" pos:end="439:29">++</operator></expr></incr>)</control> <block pos:start="439:32" pos:end="801:5">{<block_content pos:start="441:9" pos:end="799:9">

        <expr_stmt pos:start="441:9" pos:end="441:27"><expr pos:start="441:9" pos:end="441:26"><name pos:start="441:9" pos:end="441:11">ost</name> <operator pos:start="441:13" pos:end="441:13">=</operator> <name pos:start="441:15" pos:end="441:26"><name pos:start="441:15" pos:end="441:23">ost_table</name><index pos:start="441:24" pos:end="441:26">[<expr pos:start="441:25" pos:end="441:25"><name pos:start="441:25" pos:end="441:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:43"><expr pos:start="443:9" pos:end="443:42"><name pos:start="443:9" pos:end="443:10">os</name> <operator pos:start="443:12" pos:end="443:12">=</operator> <name pos:start="443:14" pos:end="443:42"><name pos:start="443:14" pos:end="443:25">output_files</name><index pos:start="443:26" pos:end="443:42">[<expr pos:start="443:27" pos:end="443:41"><name pos:start="443:27" pos:end="443:41"><name pos:start="443:27" pos:end="443:29">ost</name><operator pos:start="443:30" pos:end="443:31">-&gt;</operator><name pos:start="443:32" pos:end="443:41">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:43"><expr pos:start="445:9" pos:end="445:42"><name pos:start="445:9" pos:end="445:11">ist</name> <operator pos:start="445:13" pos:end="445:13">=</operator> <name pos:start="445:15" pos:end="445:42"><name pos:start="445:15" pos:end="445:23">ist_table</name><index pos:start="445:24" pos:end="445:42">[<expr pos:start="445:25" pos:end="445:41"><name pos:start="445:25" pos:end="445:41"><name pos:start="445:25" pos:end="445:27">ost</name><operator pos:start="445:28" pos:end="445:29">-&gt;</operator><name pos:start="445:30" pos:end="445:41">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="449:9" pos:end="449:31"><expr pos:start="449:9" pos:end="449:30"><name pos:start="449:9" pos:end="449:13">codec</name> <operator pos:start="449:15" pos:end="449:15">=</operator> <name pos:start="449:17" pos:end="449:30"><name pos:start="449:17" pos:end="449:19">ost</name><operator pos:start="449:20" pos:end="449:21">-&gt;</operator><name pos:start="449:22" pos:end="449:23">st</name><operator pos:start="449:24" pos:end="449:25">-&gt;</operator><name pos:start="449:26" pos:end="449:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:32"><expr pos:start="451:9" pos:end="451:31"><name pos:start="451:9" pos:end="451:14">icodec</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <name pos:start="451:18" pos:end="451:31"><name pos:start="451:18" pos:end="451:20">ist</name><operator pos:start="451:21" pos:end="451:22">-&gt;</operator><name pos:start="451:23" pos:end="451:24">st</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:31">codec</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="455:9" pos:end="459:57"><if pos:start="455:9" pos:end="459:57">if <condition pos:start="455:12" pos:end="455:38">(<expr pos:start="455:13" pos:end="455:37"><name pos:start="455:13" pos:end="455:37">metadata_streams_autocopy</name></expr>)</condition><block type="pseudo" pos:start="457:13" pos:end="459:57"><block_content pos:start="457:13" pos:end="459:57">

            <expr_stmt pos:start="457:13" pos:end="459:57"><expr pos:start="457:13" pos:end="459:56"><call pos:start="457:13" pos:end="459:56"><name pos:start="457:13" pos:end="457:28">av_metadata_copy</name><argument_list pos:start="457:29" pos:end="459:56">(<argument pos:start="457:30" pos:end="457:47"><expr pos:start="457:30" pos:end="457:47"><operator pos:start="457:30" pos:end="457:30">&amp;</operator><name pos:start="457:31" pos:end="457:47"><name pos:start="457:31" pos:end="457:33">ost</name><operator pos:start="457:34" pos:end="457:35">-&gt;</operator><name pos:start="457:36" pos:end="457:37">st</name><operator pos:start="457:38" pos:end="457:39">-&gt;</operator><name pos:start="457:40" pos:end="457:47">metadata</name></name></expr></argument>, <argument pos:start="457:50" pos:end="457:66"><expr pos:start="457:50" pos:end="457:66"><name pos:start="457:50" pos:end="457:66"><name pos:start="457:50" pos:end="457:52">ist</name><operator pos:start="457:53" pos:end="457:54">-&gt;</operator><name pos:start="457:55" pos:end="457:56">st</name><operator pos:start="457:57" pos:end="457:58">-&gt;</operator><name pos:start="457:59" pos:end="457:66">metadata</name></name></expr></argument>,

                             <argument pos:start="459:30" pos:end="459:55"><expr pos:start="459:30" pos:end="459:55"><name pos:start="459:30" pos:end="459:55">AV_METADATA_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="463:9" pos:end="463:52"><expr pos:start="463:9" pos:end="463:51"><name pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:11">ost</name><operator pos:start="463:12" pos:end="463:13">-&gt;</operator><name pos:start="463:14" pos:end="463:15">st</name><operator pos:start="463:16" pos:end="463:17">-&gt;</operator><name pos:start="463:18" pos:end="463:28">disposition</name></name> <operator pos:start="463:30" pos:end="463:30">=</operator> <name pos:start="463:32" pos:end="463:51"><name pos:start="463:32" pos:end="463:34">ist</name><operator pos:start="463:35" pos:end="463:36">-&gt;</operator><name pos:start="463:37" pos:end="463:38">st</name><operator pos:start="463:39" pos:end="463:40">-&gt;</operator><name pos:start="463:41" pos:end="463:51">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:64"><expr pos:start="465:9" pos:end="465:63"><name pos:start="465:9" pos:end="465:34"><name pos:start="465:9" pos:end="465:13">codec</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:34">bits_per_raw_sample</name></name><operator pos:start="465:35" pos:end="465:35">=</operator> <name pos:start="465:37" pos:end="465:63"><name pos:start="465:37" pos:end="465:42">icodec</name><operator pos:start="465:43" pos:end="465:44">-&gt;</operator><name pos:start="465:45" pos:end="465:63">bits_per_raw_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:71"><expr pos:start="467:9" pos:end="467:70"><name pos:start="467:9" pos:end="467:37"><name pos:start="467:9" pos:end="467:13">codec</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:37">chroma_sample_location</name></name> <operator pos:start="467:39" pos:end="467:39">=</operator> <name pos:start="467:41" pos:end="467:70"><name pos:start="467:41" pos:end="467:46">icodec</name><operator pos:start="467:47" pos:end="467:48">-&gt;</operator><name pos:start="467:49" pos:end="467:70">chroma_sample_location</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="471:9" pos:end="789:9"><if pos:start="471:9" pos:end="595:9">if <condition pos:start="471:12" pos:end="471:33">(<expr pos:start="471:13" pos:end="471:32"><name pos:start="471:13" pos:end="471:32"><name pos:start="471:13" pos:end="471:15">ost</name><operator pos:start="471:16" pos:end="471:17">-&gt;</operator><name pos:start="471:18" pos:end="471:19">st</name><operator pos:start="471:20" pos:end="471:21">-&gt;</operator><name pos:start="471:22" pos:end="471:32">stream_copy</name></name></expr>)</condition> <block pos:start="471:35" pos:end="595:9">{<block_content pos:start="473:13" pos:end="593:13">

            <decl_stmt pos:start="473:13" pos:end="473:98"><decl pos:start="473:13" pos:end="473:97"><type pos:start="473:13" pos:end="473:20"><name pos:start="473:13" pos:end="473:20">uint64_t</name></type> <name pos:start="473:22" pos:end="473:31">extra_size</name> <init pos:start="473:33" pos:end="473:97">= <expr pos:start="473:35" pos:end="473:97"><operator pos:start="473:35" pos:end="473:35">(</operator><name pos:start="473:36" pos:end="473:43">uint64_t</name><operator pos:start="473:44" pos:end="473:44">)</operator><name pos:start="473:45" pos:end="473:66"><name pos:start="473:45" pos:end="473:50">icodec</name><operator pos:start="473:51" pos:end="473:52">-&gt;</operator><name pos:start="473:53" pos:end="473:66">extradata_size</name></name> <operator pos:start="473:68" pos:end="473:68">+</operator> <name pos:start="473:70" pos:end="473:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="477:13" pos:end="479:26"><if pos:start="477:13" pos:end="479:26">if <condition pos:start="477:16" pos:end="477:37">(<expr pos:start="477:17" pos:end="477:36"><name pos:start="477:17" pos:end="477:26">extra_size</name> <operator pos:start="477:28" pos:end="477:28">&gt;</operator> <name pos:start="477:30" pos:end="477:36">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="479:17" pos:end="479:26"><block_content pos:start="479:17" pos:end="479:26">

                <goto pos:start="479:17" pos:end="479:26">goto <name pos:start="479:22" pos:end="479:25">fail</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="483:13" pos:end="483:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="485:13" pos:end="485:47"><expr pos:start="485:13" pos:end="485:46"><name pos:start="485:13" pos:end="485:27"><name pos:start="485:13" pos:end="485:17">codec</name><operator pos:start="485:18" pos:end="485:19">-&gt;</operator><name pos:start="485:20" pos:end="485:27">codec_id</name></name> <operator pos:start="485:29" pos:end="485:29">=</operator> <name pos:start="485:31" pos:end="485:46"><name pos:start="485:31" pos:end="485:36">icodec</name><operator pos:start="485:37" pos:end="485:38">-&gt;</operator><name pos:start="485:39" pos:end="485:46">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:51"><expr pos:start="487:13" pos:end="487:50"><name pos:start="487:13" pos:end="487:29"><name pos:start="487:13" pos:end="487:17">codec</name><operator pos:start="487:18" pos:end="487:19">-&gt;</operator><name pos:start="487:20" pos:end="487:29">codec_type</name></name> <operator pos:start="487:31" pos:end="487:31">=</operator> <name pos:start="487:33" pos:end="487:50"><name pos:start="487:33" pos:end="487:38">icodec</name><operator pos:start="487:39" pos:end="487:40">-&gt;</operator><name pos:start="487:41" pos:end="487:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="491:13" pos:end="501:13"><if pos:start="491:13" pos:end="501:13">if<condition pos:start="491:15" pos:end="491:33">(<expr pos:start="491:16" pos:end="491:32"><operator pos:start="491:16" pos:end="491:16">!</operator><name pos:start="491:17" pos:end="491:32"><name pos:start="491:17" pos:end="491:21">codec</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:32">codec_tag</name></name></expr>)</condition><block pos:start="491:34" pos:end="501:13">{<block_content pos:start="493:17" pos:end="499:57">

                <if_stmt pos:start="493:17" pos:end="499:57"><if pos:start="493:17" pos:end="499:57">if<condition pos:start="493:19" pos:end="497:86">(   <expr pos:start="493:23" pos:end="497:85"><operator pos:start="493:23" pos:end="493:23">!</operator><name pos:start="493:24" pos:end="493:45"><name pos:start="493:24" pos:end="493:25">os</name><operator pos:start="493:26" pos:end="493:27">-&gt;</operator><name pos:start="493:28" pos:end="493:34">oformat</name><operator pos:start="493:35" pos:end="493:36">-&gt;</operator><name pos:start="493:37" pos:end="493:45">codec_tag</name></name>

                   <operator pos:start="495:20" pos:end="495:21">||</operator> <call pos:start="495:23" pos:end="495:81"><name pos:start="495:23" pos:end="495:37">av_codec_get_id</name> <argument_list pos:start="495:39" pos:end="495:81">(<argument pos:start="495:40" pos:end="495:61"><expr pos:start="495:40" pos:end="495:61"><name pos:start="495:40" pos:end="495:61"><name pos:start="495:40" pos:end="495:41">os</name><operator pos:start="495:42" pos:end="495:43">-&gt;</operator><name pos:start="495:44" pos:end="495:50">oformat</name><operator pos:start="495:51" pos:end="495:52">-&gt;</operator><name pos:start="495:53" pos:end="495:61">codec_tag</name></name></expr></argument>, <argument pos:start="495:64" pos:end="495:80"><expr pos:start="495:64" pos:end="495:80"><name pos:start="495:64" pos:end="495:80"><name pos:start="495:64" pos:end="495:69">icodec</name><operator pos:start="495:70" pos:end="495:71">-&gt;</operator><name pos:start="495:72" pos:end="495:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="495:83" pos:end="495:84">==</operator> <name pos:start="495:86" pos:end="495:100"><name pos:start="495:86" pos:end="495:90">codec</name><operator pos:start="495:91" pos:end="495:92">-&gt;</operator><name pos:start="495:93" pos:end="495:100">codec_id</name></name>

                   <operator pos:start="497:20" pos:end="497:21">||</operator> <call pos:start="497:23" pos:end="497:80"><name pos:start="497:23" pos:end="497:38">av_codec_get_tag</name><argument_list pos:start="497:39" pos:end="497:80">(<argument pos:start="497:40" pos:end="497:61"><expr pos:start="497:40" pos:end="497:61"><name pos:start="497:40" pos:end="497:61"><name pos:start="497:40" pos:end="497:41">os</name><operator pos:start="497:42" pos:end="497:43">-&gt;</operator><name pos:start="497:44" pos:end="497:50">oformat</name><operator pos:start="497:51" pos:end="497:52">-&gt;</operator><name pos:start="497:53" pos:end="497:61">codec_tag</name></name></expr></argument>, <argument pos:start="497:64" pos:end="497:79"><expr pos:start="497:64" pos:end="497:79"><name pos:start="497:64" pos:end="497:79"><name pos:start="497:64" pos:end="497:69">icodec</name><operator pos:start="497:70" pos:end="497:71">-&gt;</operator><name pos:start="497:72" pos:end="497:79">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="497:82" pos:end="497:83">&lt;=</operator> <literal type="number" pos:start="497:85" pos:end="497:85">0</literal></expr>)</condition><block type="pseudo" pos:start="499:21" pos:end="499:57"><block_content pos:start="499:21" pos:end="499:57">

                    <expr_stmt pos:start="499:21" pos:end="499:57"><expr pos:start="499:21" pos:end="499:56"><name pos:start="499:21" pos:end="499:36"><name pos:start="499:21" pos:end="499:25">codec</name><operator pos:start="499:26" pos:end="499:27">-&gt;</operator><name pos:start="499:28" pos:end="499:36">codec_tag</name></name> <operator pos:start="499:38" pos:end="499:38">=</operator> <name pos:start="499:40" pos:end="499:56"><name pos:start="499:40" pos:end="499:45">icodec</name><operator pos:start="499:46" pos:end="499:47">-&gt;</operator><name pos:start="499:48" pos:end="499:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="505:13" pos:end="505:47"><expr pos:start="505:13" pos:end="505:46"><name pos:start="505:13" pos:end="505:27"><name pos:start="505:13" pos:end="505:17">codec</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:27">bit_rate</name></name> <operator pos:start="505:29" pos:end="505:29">=</operator> <name pos:start="505:31" pos:end="505:46"><name pos:start="505:31" pos:end="505:36">icodec</name><operator pos:start="505:37" pos:end="505:38">-&gt;</operator><name pos:start="505:39" pos:end="505:46">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:56"><expr pos:start="507:13" pos:end="507:55"><name pos:start="507:13" pos:end="507:30"><name pos:start="507:13" pos:end="507:17">codec</name><operator pos:start="507:18" pos:end="507:19">-&gt;</operator><name pos:start="507:20" pos:end="507:30">rc_max_rate</name></name>    <operator pos:start="507:35" pos:end="507:35">=</operator> <name pos:start="507:37" pos:end="507:55"><name pos:start="507:37" pos:end="507:42">icodec</name><operator pos:start="507:43" pos:end="507:44">-&gt;</operator><name pos:start="507:45" pos:end="507:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:59"><expr pos:start="509:13" pos:end="509:58"><name pos:start="509:13" pos:end="509:33"><name pos:start="509:13" pos:end="509:17">codec</name><operator pos:start="509:18" pos:end="509:19">-&gt;</operator><name pos:start="509:20" pos:end="509:33">rc_buffer_size</name></name> <operator pos:start="509:35" pos:end="509:35">=</operator> <name pos:start="509:37" pos:end="509:58"><name pos:start="509:37" pos:end="509:42">icodec</name><operator pos:start="509:43" pos:end="509:44">-&gt;</operator><name pos:start="509:45" pos:end="509:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:53"><expr pos:start="511:13" pos:end="511:52"><name pos:start="511:13" pos:end="511:28"><name pos:start="511:13" pos:end="511:17">codec</name><operator pos:start="511:18" pos:end="511:19">-&gt;</operator><name pos:start="511:20" pos:end="511:28">extradata</name></name><operator pos:start="511:29" pos:end="511:29">=</operator> <call pos:start="511:31" pos:end="511:52"><name pos:start="511:31" pos:end="511:40">av_mallocz</name><argument_list pos:start="511:41" pos:end="511:52">(<argument pos:start="511:42" pos:end="511:51"><expr pos:start="511:42" pos:end="511:51"><name pos:start="511:42" pos:end="511:51">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="513:13" pos:end="515:26"><if pos:start="513:13" pos:end="515:26">if <condition pos:start="513:16" pos:end="513:34">(<expr pos:start="513:17" pos:end="513:33"><operator pos:start="513:17" pos:end="513:17">!</operator><name pos:start="513:18" pos:end="513:33"><name pos:start="513:18" pos:end="513:22">codec</name><operator pos:start="513:23" pos:end="513:24">-&gt;</operator><name pos:start="513:25" pos:end="513:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="515:17" pos:end="515:26"><block_content pos:start="515:17" pos:end="515:26">

                <goto pos:start="515:17" pos:end="515:26">goto <name pos:start="515:22" pos:end="515:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:80"><expr pos:start="517:13" pos:end="517:79"><call pos:start="517:13" pos:end="517:79"><name pos:start="517:13" pos:end="517:18">memcpy</name><argument_list pos:start="517:19" pos:end="517:79">(<argument pos:start="517:20" pos:end="517:35"><expr pos:start="517:20" pos:end="517:35"><name pos:start="517:20" pos:end="517:35"><name pos:start="517:20" pos:end="517:24">codec</name><operator pos:start="517:25" pos:end="517:26">-&gt;</operator><name pos:start="517:27" pos:end="517:35">extradata</name></name></expr></argument>, <argument pos:start="517:38" pos:end="517:54"><expr pos:start="517:38" pos:end="517:54"><name pos:start="517:38" pos:end="517:54"><name pos:start="517:38" pos:end="517:43">icodec</name><operator pos:start="517:44" pos:end="517:45">-&gt;</operator><name pos:start="517:46" pos:end="517:54">extradata</name></name></expr></argument>, <argument pos:start="517:57" pos:end="517:78"><expr pos:start="517:57" pos:end="517:78"><name pos:start="517:57" pos:end="517:78"><name pos:start="517:57" pos:end="517:62">icodec</name><operator pos:start="517:63" pos:end="517:64">-&gt;</operator><name pos:start="517:65" pos:end="517:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="519:13" pos:end="519:58"><expr pos:start="519:13" pos:end="519:57"><name pos:start="519:13" pos:end="519:33"><name pos:start="519:13" pos:end="519:17">codec</name><operator pos:start="519:18" pos:end="519:19">-&gt;</operator><name pos:start="519:20" pos:end="519:33">extradata_size</name></name><operator pos:start="519:34" pos:end="519:34">=</operator> <name pos:start="519:36" pos:end="519:57"><name pos:start="519:36" pos:end="519:41">icodec</name><operator pos:start="519:42" pos:end="519:43">-&gt;</operator><name pos:start="519:44" pos:end="519:57">extradata_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="521:13" pos:end="533:54"><if pos:start="521:13" pos:end="531:13">if<condition pos:start="521:15" pos:end="521:146">(<expr pos:start="521:16" pos:end="521:145"><operator pos:start="521:16" pos:end="521:16">!</operator><name pos:start="521:17" pos:end="521:23">copy_tb</name> <operator pos:start="521:25" pos:end="521:26">&amp;&amp;</operator> <call pos:start="521:28" pos:end="521:52"><name pos:start="521:28" pos:end="521:33">av_q2d</name><argument_list pos:start="521:34" pos:end="521:52">(<argument pos:start="521:35" pos:end="521:51"><expr pos:start="521:35" pos:end="521:51"><name pos:start="521:35" pos:end="521:51"><name pos:start="521:35" pos:end="521:40">icodec</name><operator pos:start="521:41" pos:end="521:42">-&gt;</operator><name pos:start="521:43" pos:end="521:51">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="521:53" pos:end="521:53">*</operator><name pos:start="521:54" pos:end="521:76"><name pos:start="521:54" pos:end="521:59">icodec</name><operator pos:start="521:60" pos:end="521:61">-&gt;</operator><name pos:start="521:62" pos:end="521:76">ticks_per_frame</name></name> <operator pos:start="521:78" pos:end="521:78">&gt;</operator> <call pos:start="521:80" pos:end="521:105"><name pos:start="521:80" pos:end="521:85">av_q2d</name><argument_list pos:start="521:86" pos:end="521:105">(<argument pos:start="521:87" pos:end="521:104"><expr pos:start="521:87" pos:end="521:104"><name pos:start="521:87" pos:end="521:104"><name pos:start="521:87" pos:end="521:89">ist</name><operator pos:start="521:90" pos:end="521:91">-&gt;</operator><name pos:start="521:92" pos:end="521:93">st</name><operator pos:start="521:94" pos:end="521:95">-&gt;</operator><name pos:start="521:96" pos:end="521:104">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="521:107" pos:end="521:108">&amp;&amp;</operator> <call pos:start="521:110" pos:end="521:135"><name pos:start="521:110" pos:end="521:115">av_q2d</name><argument_list pos:start="521:116" pos:end="521:135">(<argument pos:start="521:117" pos:end="521:134"><expr pos:start="521:117" pos:end="521:134"><name pos:start="521:117" pos:end="521:134"><name pos:start="521:117" pos:end="521:119">ist</name><operator pos:start="521:120" pos:end="521:121">-&gt;</operator><name pos:start="521:122" pos:end="521:123">st</name><operator pos:start="521:124" pos:end="521:125">-&gt;</operator><name pos:start="521:126" pos:end="521:134">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="521:137" pos:end="521:137">&lt;</operator> <literal type="number" pos:start="521:139" pos:end="521:141">1.0</literal><operator pos:start="521:142" pos:end="521:142">/</operator><literal type="number" pos:start="521:143" pos:end="521:145">500</literal></expr>)</condition><block pos:start="521:147" pos:end="531:13">{<block_content pos:start="523:17" pos:end="529:79">

                <expr_stmt pos:start="523:17" pos:end="523:53"><expr pos:start="523:17" pos:end="523:52"><name pos:start="523:17" pos:end="523:32"><name pos:start="523:17" pos:end="523:21">codec</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:32">time_base</name></name> <operator pos:start="523:34" pos:end="523:34">=</operator> <name pos:start="523:36" pos:end="523:52"><name pos:start="523:36" pos:end="523:41">icodec</name><operator pos:start="523:42" pos:end="523:43">-&gt;</operator><name pos:start="523:44" pos:end="523:52">time_base</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="525:17" pos:end="525:64"><expr pos:start="525:17" pos:end="525:63"><name pos:start="525:17" pos:end="525:36"><name pos:start="525:17" pos:end="525:21">codec</name><operator pos:start="525:22" pos:end="525:23">-&gt;</operator><name pos:start="525:24" pos:end="525:32">time_base</name><operator pos:start="525:33" pos:end="525:33">.</operator><name pos:start="525:34" pos:end="525:36">num</name></name> <operator pos:start="525:38" pos:end="525:39">*=</operator> <name pos:start="525:41" pos:end="525:63"><name pos:start="525:41" pos:end="525:46">icodec</name><operator pos:start="525:47" pos:end="525:48">-&gt;</operator><name pos:start="525:49" pos:end="525:63">ticks_per_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="527:17" pos:end="529:79"><expr pos:start="527:17" pos:end="529:78"><call pos:start="527:17" pos:end="529:78"><name pos:start="527:17" pos:end="527:25">av_reduce</name><argument_list pos:start="527:26" pos:end="529:78">(<argument pos:start="527:27" pos:end="527:47"><expr pos:start="527:27" pos:end="527:47"><operator pos:start="527:27" pos:end="527:27">&amp;</operator><name pos:start="527:28" pos:end="527:47"><name pos:start="527:28" pos:end="527:32">codec</name><operator pos:start="527:33" pos:end="527:34">-&gt;</operator><name pos:start="527:35" pos:end="527:43">time_base</name><operator pos:start="527:44" pos:end="527:44">.</operator><name pos:start="527:45" pos:end="527:47">num</name></name></expr></argument>, <argument pos:start="527:50" pos:end="527:70"><expr pos:start="527:50" pos:end="527:70"><operator pos:start="527:50" pos:end="527:50">&amp;</operator><name pos:start="527:51" pos:end="527:70"><name pos:start="527:51" pos:end="527:55">codec</name><operator pos:start="527:56" pos:end="527:57">-&gt;</operator><name pos:start="527:58" pos:end="527:66">time_base</name><operator pos:start="527:67" pos:end="527:67">.</operator><name pos:start="527:68" pos:end="527:70">den</name></name></expr></argument>,

                          <argument pos:start="529:27" pos:end="529:46"><expr pos:start="529:27" pos:end="529:46"><name pos:start="529:27" pos:end="529:46"><name pos:start="529:27" pos:end="529:31">codec</name><operator pos:start="529:32" pos:end="529:33">-&gt;</operator><name pos:start="529:34" pos:end="529:42">time_base</name><operator pos:start="529:43" pos:end="529:43">.</operator><name pos:start="529:44" pos:end="529:46">num</name></name></expr></argument>, <argument pos:start="529:49" pos:end="529:68"><expr pos:start="529:49" pos:end="529:68"><name pos:start="529:49" pos:end="529:68"><name pos:start="529:49" pos:end="529:53">codec</name><operator pos:start="529:54" pos:end="529:55">-&gt;</operator><name pos:start="529:56" pos:end="529:64">time_base</name><operator pos:start="529:65" pos:end="529:65">.</operator><name pos:start="529:66" pos:end="529:68">den</name></name></expr></argument>, <argument pos:start="529:71" pos:end="529:77"><expr pos:start="529:71" pos:end="529:77"><name pos:start="529:71" pos:end="529:77">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="531:14" pos:end="533:54">else<block type="pseudo" pos:start="533:17" pos:end="533:54"><block_content pos:start="533:17" pos:end="533:54">

                <expr_stmt pos:start="533:17" pos:end="533:54"><expr pos:start="533:17" pos:end="533:53"><name pos:start="533:17" pos:end="533:32"><name pos:start="533:17" pos:end="533:21">codec</name><operator pos:start="533:22" pos:end="533:23">-&gt;</operator><name pos:start="533:24" pos:end="533:32">time_base</name></name> <operator pos:start="533:34" pos:end="533:34">=</operator> <name pos:start="533:36" pos:end="533:53"><name pos:start="533:36" pos:end="533:38">ist</name><operator pos:start="533:39" pos:end="533:40">-&gt;</operator><name pos:start="533:41" pos:end="533:42">st</name><operator pos:start="533:43" pos:end="533:44">-&gt;</operator><name pos:start="533:45" pos:end="533:53">time_base</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="535:13" pos:end="593:13">switch<condition pos:start="535:19" pos:end="535:37">(<expr pos:start="535:20" pos:end="535:36"><name pos:start="535:20" pos:end="535:36"><name pos:start="535:20" pos:end="535:24">codec</name><operator pos:start="535:25" pos:end="535:26">-&gt;</operator><name pos:start="535:27" pos:end="535:36">codec_type</name></name></expr>)</condition> <block pos:start="535:39" pos:end="593:13">{<block_content pos:start="537:13" pos:end="591:24">

            <case pos:start="537:13" pos:end="537:36">case <expr pos:start="537:18" pos:end="537:35"><name pos:start="537:18" pos:end="537:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="539:17" pos:end="545:17"><if pos:start="539:17" pos:end="545:17">if<condition pos:start="539:19" pos:end="539:39">(<expr pos:start="539:20" pos:end="539:38"><name pos:start="539:20" pos:end="539:31">audio_volume</name> <operator pos:start="539:33" pos:end="539:34">!=</operator> <literal type="number" pos:start="539:36" pos:end="539:38">256</literal></expr>)</condition> <block pos:start="539:41" pos:end="545:17">{<block_content pos:start="541:21" pos:end="543:35">

                    <expr_stmt pos:start="541:21" pos:end="541:104"><expr pos:start="541:21" pos:end="541:103"><call pos:start="541:21" pos:end="541:103"><name pos:start="541:21" pos:end="541:27">fprintf</name><argument_list pos:start="541:28" pos:end="541:103">(<argument pos:start="541:29" pos:end="541:34"><expr pos:start="541:29" pos:end="541:34"><name pos:start="541:29" pos:end="541:34">stderr</name></expr></argument>,<argument pos:start="541:36" pos:end="541:102"><expr pos:start="541:36" pos:end="541:102"><literal type="string" pos:start="541:36" pos:end="541:102">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="543:21" pos:end="543:35"><expr pos:start="543:21" pos:end="543:34"><call pos:start="543:21" pos:end="543:34"><name pos:start="543:21" pos:end="543:31">ffmpeg_exit</name><argument_list pos:start="543:32" pos:end="543:34">(<argument pos:start="543:33" pos:end="543:33"><expr pos:start="543:33" pos:end="543:33"><literal type="number" pos:start="543:33" pos:end="543:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="547:17" pos:end="547:63"><expr pos:start="547:17" pos:end="547:62"><name pos:start="547:17" pos:end="547:37"><name pos:start="547:17" pos:end="547:21">codec</name><operator pos:start="547:22" pos:end="547:23">-&gt;</operator><name pos:start="547:24" pos:end="547:37">channel_layout</name></name> <operator pos:start="547:39" pos:end="547:39">=</operator> <name pos:start="547:41" pos:end="547:62"><name pos:start="547:41" pos:end="547:46">icodec</name><operator pos:start="547:47" pos:end="547:48">-&gt;</operator><name pos:start="547:49" pos:end="547:62">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:57"><expr pos:start="549:17" pos:end="549:56"><name pos:start="549:17" pos:end="549:34"><name pos:start="549:17" pos:end="549:21">codec</name><operator pos:start="549:22" pos:end="549:23">-&gt;</operator><name pos:start="549:24" pos:end="549:34">sample_rate</name></name> <operator pos:start="549:36" pos:end="549:36">=</operator> <name pos:start="549:38" pos:end="549:56"><name pos:start="549:38" pos:end="549:43">icodec</name><operator pos:start="549:44" pos:end="549:45">-&gt;</operator><name pos:start="549:46" pos:end="549:56">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="551:17" pos:end="551:51"><expr pos:start="551:17" pos:end="551:50"><name pos:start="551:17" pos:end="551:31"><name pos:start="551:17" pos:end="551:21">codec</name><operator pos:start="551:22" pos:end="551:23">-&gt;</operator><name pos:start="551:24" pos:end="551:31">channels</name></name> <operator pos:start="551:33" pos:end="551:33">=</operator> <name pos:start="551:35" pos:end="551:50"><name pos:start="551:35" pos:end="551:40">icodec</name><operator pos:start="551:41" pos:end="551:42">-&gt;</operator><name pos:start="551:43" pos:end="551:50">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="553:17" pos:end="553:55"><expr pos:start="553:17" pos:end="553:54"><name pos:start="553:17" pos:end="553:33"><name pos:start="553:17" pos:end="553:21">codec</name><operator pos:start="553:22" pos:end="553:23">-&gt;</operator><name pos:start="553:24" pos:end="553:33">frame_size</name></name> <operator pos:start="553:35" pos:end="553:35">=</operator> <name pos:start="553:37" pos:end="553:54"><name pos:start="553:37" pos:end="553:42">icodec</name><operator pos:start="553:43" pos:end="553:44">-&gt;</operator><name pos:start="553:45" pos:end="553:54">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="555:17" pos:end="555:71"><expr pos:start="555:17" pos:end="555:70"><name pos:start="555:17" pos:end="555:41"><name pos:start="555:17" pos:end="555:21">codec</name><operator pos:start="555:22" pos:end="555:23">-&gt;</operator><name pos:start="555:24" pos:end="555:41">audio_service_type</name></name> <operator pos:start="555:43" pos:end="555:43">=</operator> <name pos:start="555:45" pos:end="555:70"><name pos:start="555:45" pos:end="555:50">icodec</name><operator pos:start="555:51" pos:end="555:52">-&gt;</operator><name pos:start="555:53" pos:end="555:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="557:17" pos:end="557:56"><expr pos:start="557:17" pos:end="557:55"><name pos:start="557:17" pos:end="557:34"><name pos:start="557:17" pos:end="557:21">codec</name><operator pos:start="557:22" pos:end="557:23">-&gt;</operator><name pos:start="557:24" pos:end="557:34">block_align</name></name><operator pos:start="557:35" pos:end="557:35">=</operator> <name pos:start="557:37" pos:end="557:55"><name pos:start="557:37" pos:end="557:42">icodec</name><operator pos:start="557:43" pos:end="557:44">-&gt;</operator><name pos:start="557:45" pos:end="557:55">block_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="559:17" pos:end="561:42"><if pos:start="559:17" pos:end="561:42">if<condition pos:start="559:19" pos:end="559:78">(<expr pos:start="559:20" pos:end="559:77"><name pos:start="559:20" pos:end="559:37"><name pos:start="559:20" pos:end="559:24">codec</name><operator pos:start="559:25" pos:end="559:26">-&gt;</operator><name pos:start="559:27" pos:end="559:37">block_align</name></name> <operator pos:start="559:39" pos:end="559:40">==</operator> <literal type="number" pos:start="559:42" pos:end="559:42">1</literal> <operator pos:start="559:44" pos:end="559:45">&amp;&amp;</operator> <name pos:start="559:47" pos:end="559:61"><name pos:start="559:47" pos:end="559:51">codec</name><operator pos:start="559:52" pos:end="559:53">-&gt;</operator><name pos:start="559:54" pos:end="559:61">codec_id</name></name> <operator pos:start="559:63" pos:end="559:64">==</operator> <name pos:start="559:66" pos:end="559:77">CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="561:21" pos:end="561:42"><block_content pos:start="561:21" pos:end="561:42">

                    <expr_stmt pos:start="561:21" pos:end="561:42"><expr pos:start="561:21" pos:end="561:41"><name pos:start="561:21" pos:end="561:38"><name pos:start="561:21" pos:end="561:25">codec</name><operator pos:start="561:26" pos:end="561:27">-&gt;</operator><name pos:start="561:28" pos:end="561:38">block_align</name></name><operator pos:start="561:39" pos:end="561:39">=</operator> <literal type="number" pos:start="561:41" pos:end="561:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="563:17" pos:end="565:42"><if pos:start="563:17" pos:end="565:42">if<condition pos:start="563:19" pos:end="563:51">(<expr pos:start="563:20" pos:end="563:50"><name pos:start="563:20" pos:end="563:34"><name pos:start="563:20" pos:end="563:24">codec</name><operator pos:start="563:25" pos:end="563:26">-&gt;</operator><name pos:start="563:27" pos:end="563:34">codec_id</name></name> <operator pos:start="563:36" pos:end="563:37">==</operator> <name pos:start="563:39" pos:end="563:50">CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="565:21" pos:end="565:42"><block_content pos:start="565:21" pos:end="565:42">

                    <expr_stmt pos:start="565:21" pos:end="565:42"><expr pos:start="565:21" pos:end="565:41"><name pos:start="565:21" pos:end="565:38"><name pos:start="565:21" pos:end="565:25">codec</name><operator pos:start="565:26" pos:end="565:27">-&gt;</operator><name pos:start="565:28" pos:end="565:38">block_align</name></name><operator pos:start="565:39" pos:end="565:39">=</operator> <literal type="number" pos:start="565:41" pos:end="565:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="567:17" pos:end="567:22">break;</break>

            <case pos:start="569:13" pos:end="569:36">case <expr pos:start="569:18" pos:end="569:35"><name pos:start="569:18" pos:end="569:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="571:17" pos:end="571:49"><expr pos:start="571:17" pos:end="571:48"><name pos:start="571:17" pos:end="571:30"><name pos:start="571:17" pos:end="571:21">codec</name><operator pos:start="571:22" pos:end="571:23">-&gt;</operator><name pos:start="571:24" pos:end="571:30">pix_fmt</name></name> <operator pos:start="571:32" pos:end="571:32">=</operator> <name pos:start="571:34" pos:end="571:48"><name pos:start="571:34" pos:end="571:39">icodec</name><operator pos:start="571:40" pos:end="571:41">-&gt;</operator><name pos:start="571:42" pos:end="571:48">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:45"><expr pos:start="573:17" pos:end="573:44"><name pos:start="573:17" pos:end="573:28"><name pos:start="573:17" pos:end="573:21">codec</name><operator pos:start="573:22" pos:end="573:23">-&gt;</operator><name pos:start="573:24" pos:end="573:28">width</name></name> <operator pos:start="573:30" pos:end="573:30">=</operator> <name pos:start="573:32" pos:end="573:44"><name pos:start="573:32" pos:end="573:37">icodec</name><operator pos:start="573:38" pos:end="573:39">-&gt;</operator><name pos:start="573:40" pos:end="573:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="575:17" pos:end="575:47"><expr pos:start="575:17" pos:end="575:46"><name pos:start="575:17" pos:end="575:29"><name pos:start="575:17" pos:end="575:21">codec</name><operator pos:start="575:22" pos:end="575:23">-&gt;</operator><name pos:start="575:24" pos:end="575:29">height</name></name> <operator pos:start="575:31" pos:end="575:31">=</operator> <name pos:start="575:33" pos:end="575:46"><name pos:start="575:33" pos:end="575:38">icodec</name><operator pos:start="575:39" pos:end="575:40">-&gt;</operator><name pos:start="575:41" pos:end="575:46">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="577:17" pos:end="577:59"><expr pos:start="577:17" pos:end="577:58"><name pos:start="577:17" pos:end="577:35"><name pos:start="577:17" pos:end="577:21">codec</name><operator pos:start="577:22" pos:end="577:23">-&gt;</operator><name pos:start="577:24" pos:end="577:35">has_b_frames</name></name> <operator pos:start="577:37" pos:end="577:37">=</operator> <name pos:start="577:39" pos:end="577:58"><name pos:start="577:39" pos:end="577:44">icodec</name><operator pos:start="577:45" pos:end="577:46">-&gt;</operator><name pos:start="577:47" pos:end="577:58">has_b_frames</name></name></expr>;</expr_stmt>

                <break pos:start="579:17" pos:end="579:22">break;</break>

            <case pos:start="581:13" pos:end="581:39">case <expr pos:start="581:18" pos:end="581:38"><name pos:start="581:18" pos:end="581:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="583:17" pos:end="583:45"><expr pos:start="583:17" pos:end="583:44"><name pos:start="583:17" pos:end="583:28"><name pos:start="583:17" pos:end="583:21">codec</name><operator pos:start="583:22" pos:end="583:23">-&gt;</operator><name pos:start="583:24" pos:end="583:28">width</name></name> <operator pos:start="583:30" pos:end="583:30">=</operator> <name pos:start="583:32" pos:end="583:44"><name pos:start="583:32" pos:end="583:37">icodec</name><operator pos:start="583:38" pos:end="583:39">-&gt;</operator><name pos:start="583:40" pos:end="583:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="585:17" pos:end="585:47"><expr pos:start="585:17" pos:end="585:46"><name pos:start="585:17" pos:end="585:29"><name pos:start="585:17" pos:end="585:21">codec</name><operator pos:start="585:22" pos:end="585:23">-&gt;</operator><name pos:start="585:24" pos:end="585:29">height</name></name> <operator pos:start="585:31" pos:end="585:31">=</operator> <name pos:start="585:33" pos:end="585:46"><name pos:start="585:33" pos:end="585:38">icodec</name><operator pos:start="585:39" pos:end="585:40">-&gt;</operator><name pos:start="585:41" pos:end="585:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="587:17" pos:end="587:22">break;</break>

            <default pos:start="589:13" pos:end="589:20">default:</default>

                <expr_stmt pos:start="591:17" pos:end="591:24"><expr pos:start="591:17" pos:end="591:23"><call pos:start="591:17" pos:end="591:23"><name pos:start="591:17" pos:end="591:21">abort</name><argument_list pos:start="591:22" pos:end="591:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="595:11" pos:end="789:9">else <block pos:start="595:16" pos:end="789:9">{<block_content pos:start="597:13" pos:end="787:13">

            <switch pos:start="597:13" pos:end="735:13">switch<condition pos:start="597:19" pos:end="597:37">(<expr pos:start="597:20" pos:end="597:36"><name pos:start="597:20" pos:end="597:36"><name pos:start="597:20" pos:end="597:24">codec</name><operator pos:start="597:25" pos:end="597:26">-&gt;</operator><name pos:start="597:27" pos:end="597:36">codec_type</name></name></expr>)</condition> <block pos:start="597:39" pos:end="735:13">{<block_content pos:start="599:13" pos:end="733:22">

            <case pos:start="599:13" pos:end="599:36">case <expr pos:start="599:18" pos:end="599:35"><name pos:start="599:18" pos:end="599:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="601:17" pos:end="601:47"><expr pos:start="601:17" pos:end="601:46"><name pos:start="601:17" pos:end="601:25"><name pos:start="601:17" pos:end="601:19">ost</name><operator pos:start="601:20" pos:end="601:21">-&gt;</operator><name pos:start="601:22" pos:end="601:25">fifo</name></name><operator pos:start="601:26" pos:end="601:26">=</operator> <call pos:start="601:28" pos:end="601:46"><name pos:start="601:28" pos:end="601:40">av_fifo_alloc</name><argument_list pos:start="601:41" pos:end="601:46">(<argument pos:start="601:42" pos:end="601:45"><expr pos:start="601:42" pos:end="601:45"><literal type="number" pos:start="601:42" pos:end="601:45">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="603:17" pos:end="605:30"><if pos:start="603:17" pos:end="605:30">if<condition pos:start="603:19" pos:end="603:30">(<expr pos:start="603:20" pos:end="603:29"><operator pos:start="603:20" pos:end="603:20">!</operator><name pos:start="603:21" pos:end="603:29"><name pos:start="603:21" pos:end="603:23">ost</name><operator pos:start="603:24" pos:end="603:25">-&gt;</operator><name pos:start="603:26" pos:end="603:29">fifo</name></name></expr>)</condition><block type="pseudo" pos:start="605:21" pos:end="605:30"><block_content pos:start="605:21" pos:end="605:30">

                    <goto pos:start="605:21" pos:end="605:30">goto <name pos:start="605:26" pos:end="605:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:91"><expr pos:start="607:17" pos:end="607:90"><name pos:start="607:17" pos:end="607:34"><name pos:start="607:17" pos:end="607:19">ost</name><operator pos:start="607:20" pos:end="607:21">-&gt;</operator><name pos:start="607:22" pos:end="607:34">reformat_pair</name></name> <operator pos:start="607:36" pos:end="607:36">=</operator> <call pos:start="607:38" pos:end="607:90"><name pos:start="607:38" pos:end="607:51">MAKE_SFMT_PAIR</name><argument_list pos:start="607:52" pos:end="607:90">(<argument pos:start="607:53" pos:end="607:70"><expr pos:start="607:53" pos:end="607:70"><name pos:start="607:53" pos:end="607:70">AV_SAMPLE_FMT_NONE</name></expr></argument>,<argument pos:start="607:72" pos:end="607:89"><expr pos:start="607:72" pos:end="607:89"><name pos:start="607:72" pos:end="607:89">AV_SAMPLE_FMT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:105"><expr pos:start="609:17" pos:end="609:104"><name pos:start="609:17" pos:end="609:35"><name pos:start="609:17" pos:end="609:19">ost</name><operator pos:start="609:20" pos:end="609:21">-&gt;</operator><name pos:start="609:22" pos:end="609:35">audio_resample</name></name> <operator pos:start="609:37" pos:end="609:37">=</operator> <name pos:start="609:39" pos:end="609:56"><name pos:start="609:39" pos:end="609:43">codec</name><operator pos:start="609:44" pos:end="609:45">-&gt;</operator><name pos:start="609:46" pos:end="609:56">sample_rate</name></name> <operator pos:start="609:58" pos:end="609:59">!=</operator> <name pos:start="609:61" pos:end="609:79"><name pos:start="609:61" pos:end="609:66">icodec</name><operator pos:start="609:67" pos:end="609:68">-&gt;</operator><name pos:start="609:69" pos:end="609:79">sample_rate</name></name> <operator pos:start="609:81" pos:end="609:82">||</operator> <name pos:start="609:84" pos:end="609:100">audio_sync_method</name> <operator pos:start="609:102" pos:end="609:102">&gt;</operator> <literal type="number" pos:start="609:104" pos:end="609:104">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="611:17" pos:end="611:59"><expr pos:start="611:17" pos:end="611:58"><name pos:start="611:17" pos:end="611:40"><name pos:start="611:17" pos:end="611:22">icodec</name><operator pos:start="611:23" pos:end="611:24">-&gt;</operator><name pos:start="611:25" pos:end="611:40">request_channels</name></name> <operator pos:start="611:42" pos:end="611:42">=</operator> <name pos:start="611:44" pos:end="611:58"><name pos:start="611:44" pos:end="611:48">codec</name><operator pos:start="611:49" pos:end="611:50">-&gt;</operator><name pos:start="611:51" pos:end="611:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="613:17" pos:end="613:41"><expr pos:start="613:17" pos:end="613:40"><name pos:start="613:17" pos:end="613:36"><name pos:start="613:17" pos:end="613:19">ist</name><operator pos:start="613:20" pos:end="613:21">-&gt;</operator><name pos:start="613:22" pos:end="613:36">decoding_needed</name></name> <operator pos:start="613:38" pos:end="613:38">=</operator> <literal type="number" pos:start="613:40" pos:end="613:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="615:17" pos:end="615:41"><expr pos:start="615:17" pos:end="615:40"><name pos:start="615:17" pos:end="615:36"><name pos:start="615:17" pos:end="615:19">ost</name><operator pos:start="615:20" pos:end="615:21">-&gt;</operator><name pos:start="615:22" pos:end="615:36">encoding_needed</name></name> <operator pos:start="615:38" pos:end="615:38">=</operator> <literal type="number" pos:start="615:40" pos:end="615:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="617:17" pos:end="617:63"><expr pos:start="617:17" pos:end="617:62"><name pos:start="617:17" pos:end="617:40"><name pos:start="617:17" pos:end="617:19">ost</name><operator pos:start="617:20" pos:end="617:21">-&gt;</operator><name pos:start="617:22" pos:end="617:40">resample_sample_fmt</name></name>  <operator pos:start="617:43" pos:end="617:43">=</operator> <name pos:start="617:45" pos:end="617:62"><name pos:start="617:45" pos:end="617:50">icodec</name><operator pos:start="617:51" pos:end="617:52">-&gt;</operator><name pos:start="617:53" pos:end="617:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="619:17" pos:end="619:64"><expr pos:start="619:17" pos:end="619:63"><name pos:start="619:17" pos:end="619:41"><name pos:start="619:17" pos:end="619:19">ost</name><operator pos:start="619:20" pos:end="619:21">-&gt;</operator><name pos:start="619:22" pos:end="619:41">resample_sample_rate</name></name> <operator pos:start="619:43" pos:end="619:43">=</operator> <name pos:start="619:45" pos:end="619:63"><name pos:start="619:45" pos:end="619:50">icodec</name><operator pos:start="619:51" pos:end="619:52">-&gt;</operator><name pos:start="619:53" pos:end="619:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="621:17" pos:end="621:61"><expr pos:start="621:17" pos:end="621:60"><name pos:start="621:17" pos:end="621:38"><name pos:start="621:17" pos:end="621:19">ost</name><operator pos:start="621:20" pos:end="621:21">-&gt;</operator><name pos:start="621:22" pos:end="621:38">resample_channels</name></name>    <operator pos:start="621:43" pos:end="621:43">=</operator> <name pos:start="621:45" pos:end="621:60"><name pos:start="621:45" pos:end="621:50">icodec</name><operator pos:start="621:51" pos:end="621:52">-&gt;</operator><name pos:start="621:53" pos:end="621:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="623:17" pos:end="623:22">break;</break>

            <case pos:start="625:13" pos:end="625:36">case <expr pos:start="625:18" pos:end="625:35"><name pos:start="625:18" pos:end="625:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="627:17" pos:end="633:17"><if pos:start="627:17" pos:end="633:17">if <condition pos:start="627:20" pos:end="627:60">(<expr pos:start="627:21" pos:end="627:59"><name pos:start="627:21" pos:end="627:43"><name pos:start="627:21" pos:end="627:23">ost</name><operator pos:start="627:24" pos:end="627:25">-&gt;</operator><name pos:start="627:26" pos:end="627:27">st</name><operator pos:start="627:28" pos:end="627:29">-&gt;</operator><name pos:start="627:30" pos:end="627:34">codec</name><operator pos:start="627:35" pos:end="627:36">-&gt;</operator><name pos:start="627:37" pos:end="627:43">pix_fmt</name></name> <operator pos:start="627:45" pos:end="627:46">==</operator> <name pos:start="627:48" pos:end="627:59">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="627:62" pos:end="633:17">{<block_content pos:start="629:21" pos:end="631:35">

                    <expr_stmt pos:start="629:21" pos:end="629:97"><expr pos:start="629:21" pos:end="629:96"><call pos:start="629:21" pos:end="629:96"><name pos:start="629:21" pos:end="629:27">fprintf</name><argument_list pos:start="629:28" pos:end="629:96">(<argument pos:start="629:29" pos:end="629:34"><expr pos:start="629:29" pos:end="629:34"><name pos:start="629:29" pos:end="629:34">stderr</name></expr></argument>, <argument pos:start="629:37" pos:end="629:95"><expr pos:start="629:37" pos:end="629:95"><literal type="string" pos:start="629:37" pos:end="629:95">"Video pixel format is unknown, stream cannot be encoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="631:21" pos:end="631:35"><expr pos:start="631:21" pos:end="631:34"><call pos:start="631:21" pos:end="631:34"><name pos:start="631:21" pos:end="631:31">ffmpeg_exit</name><argument_list pos:start="631:32" pos:end="631:34">(<argument pos:start="631:33" pos:end="631:33"><expr pos:start="631:33" pos:end="631:33"><literal type="number" pos:start="631:33" pos:end="631:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="635:17" pos:end="639:61"><expr pos:start="635:17" pos:end="639:60"><name pos:start="635:17" pos:end="635:35"><name pos:start="635:17" pos:end="635:19">ost</name><operator pos:start="635:20" pos:end="635:21">-&gt;</operator><name pos:start="635:22" pos:end="635:35">video_resample</name></name> <operator pos:start="635:37" pos:end="635:37">=</operator> <operator pos:start="635:39" pos:end="635:39">(</operator><name pos:start="635:40" pos:end="635:51"><name pos:start="635:40" pos:end="635:44">codec</name><operator pos:start="635:45" pos:end="635:46">-&gt;</operator><name pos:start="635:47" pos:end="635:51">width</name></name> <operator pos:start="635:53" pos:end="635:54">!=</operator> <name pos:start="635:56" pos:end="635:68"><name pos:start="635:56" pos:end="635:61">icodec</name><operator pos:start="635:62" pos:end="635:63">-&gt;</operator><name pos:start="635:64" pos:end="635:68">width</name></name>   <operator pos:start="635:72" pos:end="635:73">||</operator>

                                       <name pos:start="637:40" pos:end="637:52"><name pos:start="637:40" pos:end="637:44">codec</name><operator pos:start="637:45" pos:end="637:46">-&gt;</operator><name pos:start="637:47" pos:end="637:52">height</name></name> <operator pos:start="637:54" pos:end="637:55">!=</operator> <name pos:start="637:57" pos:end="637:70"><name pos:start="637:57" pos:end="637:62">icodec</name><operator pos:start="637:63" pos:end="637:64">-&gt;</operator><name pos:start="637:65" pos:end="637:70">height</name></name> <operator pos:start="637:72" pos:end="637:73">||</operator>

                        <operator pos:start="639:25" pos:end="639:25">(</operator><name pos:start="639:26" pos:end="639:39"><name pos:start="639:26" pos:end="639:30">codec</name><operator pos:start="639:31" pos:end="639:32">-&gt;</operator><name pos:start="639:33" pos:end="639:39">pix_fmt</name></name> <operator pos:start="639:41" pos:end="639:42">!=</operator> <name pos:start="639:44" pos:end="639:58"><name pos:start="639:44" pos:end="639:49">icodec</name><operator pos:start="639:50" pos:end="639:51">-&gt;</operator><name pos:start="639:52" pos:end="639:58">pix_fmt</name></name><operator pos:start="639:59" pos:end="639:59">)</operator><operator pos:start="639:60" pos:end="639:60">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="641:17" pos:end="693:17"><if pos:start="641:17" pos:end="693:17">if <condition pos:start="641:20" pos:end="641:40">(<expr pos:start="641:21" pos:end="641:39"><name pos:start="641:21" pos:end="641:39"><name pos:start="641:21" pos:end="641:23">ost</name><operator pos:start="641:24" pos:end="641:25">-&gt;</operator><name pos:start="641:26" pos:end="641:39">video_resample</name></name></expr>)</condition> <block pos:start="641:42" pos:end="693:17">{<block_content pos:start="645:21" pos:end="691:50">

<cpp:if pos:start="643:1" pos:end="643:20">#<cpp:directive pos:start="643:2" pos:end="643:3">if</cpp:directive> <expr pos:start="643:5" pos:end="643:20"><operator pos:start="643:5" pos:end="643:5">!</operator><name pos:start="643:6" pos:end="643:20">CONFIG_AVFILTER</name></expr></cpp:if>

                    <expr_stmt pos:start="645:21" pos:end="645:63"><expr pos:start="645:21" pos:end="645:62"><call pos:start="645:21" pos:end="645:62"><name pos:start="645:21" pos:end="645:46">avcodec_get_frame_defaults</name><argument_list pos:start="645:47" pos:end="645:62">(<argument pos:start="645:48" pos:end="645:61"><expr pos:start="645:48" pos:end="645:61"><operator pos:start="645:48" pos:end="645:48">&amp;</operator><name pos:start="645:49" pos:end="645:61"><name pos:start="645:49" pos:end="645:51">ost</name><operator pos:start="645:52" pos:end="645:53">-&gt;</operator><name pos:start="645:54" pos:end="645:61">pict_tmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="647:21" pos:end="655:21"><if pos:start="647:21" pos:end="655:21">if<condition pos:start="647:23" pos:end="649:70">(<expr pos:start="647:24" pos:end="649:69"><call pos:start="647:24" pos:end="649:69"><name pos:start="647:24" pos:end="647:38">avpicture_alloc</name><argument_list pos:start="647:39" pos:end="649:69">(<argument pos:start="647:40" pos:end="647:65"><expr pos:start="647:40" pos:end="647:65"><operator pos:start="647:40" pos:end="647:40">(</operator><name pos:start="647:41" pos:end="647:49">AVPicture</name><operator pos:start="647:50" pos:end="647:50">*</operator><operator pos:start="647:51" pos:end="647:51">)</operator><operator pos:start="647:52" pos:end="647:52">&amp;</operator><name pos:start="647:53" pos:end="647:65"><name pos:start="647:53" pos:end="647:55">ost</name><operator pos:start="647:56" pos:end="647:57">-&gt;</operator><name pos:start="647:58" pos:end="647:65">pict_tmp</name></name></expr></argument>, <argument pos:start="647:68" pos:end="647:81"><expr pos:start="647:68" pos:end="647:81"><name pos:start="647:68" pos:end="647:81"><name pos:start="647:68" pos:end="647:72">codec</name><operator pos:start="647:73" pos:end="647:74">-&gt;</operator><name pos:start="647:75" pos:end="647:81">pix_fmt</name></name></expr></argument>,

                                         <argument pos:start="649:42" pos:end="649:53"><expr pos:start="649:42" pos:end="649:53"><name pos:start="649:42" pos:end="649:53"><name pos:start="649:42" pos:end="649:46">codec</name><operator pos:start="649:47" pos:end="649:48">-&gt;</operator><name pos:start="649:49" pos:end="649:53">width</name></name></expr></argument>, <argument pos:start="649:56" pos:end="649:68"><expr pos:start="649:56" pos:end="649:68"><name pos:start="649:56" pos:end="649:68"><name pos:start="649:56" pos:end="649:60">codec</name><operator pos:start="649:61" pos:end="649:62">-&gt;</operator><name pos:start="649:63" pos:end="649:68">height</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="649:72" pos:end="655:21">{<block_content pos:start="651:25" pos:end="653:39">

                        <expr_stmt pos:start="651:25" pos:end="651:89"><expr pos:start="651:25" pos:end="651:88"><call pos:start="651:25" pos:end="651:88"><name pos:start="651:25" pos:end="651:31">fprintf</name><argument_list pos:start="651:32" pos:end="651:88">(<argument pos:start="651:33" pos:end="651:38"><expr pos:start="651:33" pos:end="651:38"><name pos:start="651:33" pos:end="651:38">stderr</name></expr></argument>, <argument pos:start="651:41" pos:end="651:87"><expr pos:start="651:41" pos:end="651:87"><literal type="string" pos:start="651:41" pos:end="651:87">"Cannot allocate temp picture, check pix fmt\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="653:25" pos:end="653:39"><expr pos:start="653:25" pos:end="653:38"><call pos:start="653:25" pos:end="653:38"><name pos:start="653:25" pos:end="653:35">ffmpeg_exit</name><argument_list pos:start="653:36" pos:end="653:38">(<argument pos:start="653:37" pos:end="653:37"><expr pos:start="653:37" pos:end="653:37"><literal type="number" pos:start="653:37" pos:end="653:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="657:21" pos:end="657:72"><expr pos:start="657:21" pos:end="657:71"><name pos:start="657:21" pos:end="657:29">sws_flags</name> <operator pos:start="657:31" pos:end="657:31">=</operator> <call pos:start="657:33" pos:end="657:71"><name pos:start="657:33" pos:end="657:42">av_get_int</name><argument_list pos:start="657:43" pos:end="657:71">(<argument pos:start="657:44" pos:end="657:51"><expr pos:start="657:44" pos:end="657:51"><name pos:start="657:44" pos:end="657:51">sws_opts</name></expr></argument>, <argument pos:start="657:54" pos:end="657:64"><expr pos:start="657:54" pos:end="657:64"><literal type="string" pos:start="657:54" pos:end="657:64">"sws_flags"</literal></expr></argument>, <argument pos:start="657:67" pos:end="657:70"><expr pos:start="657:67" pos:end="657:70"><name pos:start="657:67" pos:end="657:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="659:21" pos:end="673:57"><expr pos:start="659:21" pos:end="673:56"><name pos:start="659:21" pos:end="659:41"><name pos:start="659:21" pos:end="659:23">ost</name><operator pos:start="659:24" pos:end="659:25">-&gt;</operator><name pos:start="659:26" pos:end="659:41">img_resample_ctx</name></name> <operator pos:start="659:43" pos:end="659:43">=</operator> <call pos:start="659:45" pos:end="673:56"><name pos:start="659:45" pos:end="659:58">sws_getContext</name><argument_list pos:start="659:59" pos:end="673:56">(

                        <argument pos:start="661:25" pos:end="661:37"><expr pos:start="661:25" pos:end="661:37"><name pos:start="661:25" pos:end="661:37"><name pos:start="661:25" pos:end="661:30">icodec</name><operator pos:start="661:31" pos:end="661:32">-&gt;</operator><name pos:start="661:33" pos:end="661:37">width</name></name></expr></argument>,

                        <argument pos:start="663:25" pos:end="663:38"><expr pos:start="663:25" pos:end="663:38"><name pos:start="663:25" pos:end="663:38"><name pos:start="663:25" pos:end="663:30">icodec</name><operator pos:start="663:31" pos:end="663:32">-&gt;</operator><name pos:start="663:33" pos:end="663:38">height</name></name></expr></argument>,

                            <argument pos:start="665:29" pos:end="665:43"><expr pos:start="665:29" pos:end="665:43"><name pos:start="665:29" pos:end="665:43"><name pos:start="665:29" pos:end="665:34">icodec</name><operator pos:start="665:35" pos:end="665:36">-&gt;</operator><name pos:start="665:37" pos:end="665:43">pix_fmt</name></name></expr></argument>,

                            <argument pos:start="667:29" pos:end="667:40"><expr pos:start="667:29" pos:end="667:40"><name pos:start="667:29" pos:end="667:40"><name pos:start="667:29" pos:end="667:33">codec</name><operator pos:start="667:34" pos:end="667:35">-&gt;</operator><name pos:start="667:36" pos:end="667:40">width</name></name></expr></argument>,

                            <argument pos:start="669:29" pos:end="669:41"><expr pos:start="669:29" pos:end="669:41"><name pos:start="669:29" pos:end="669:41"><name pos:start="669:29" pos:end="669:33">codec</name><operator pos:start="669:34" pos:end="669:35">-&gt;</operator><name pos:start="669:36" pos:end="669:41">height</name></name></expr></argument>,

                            <argument pos:start="671:29" pos:end="671:42"><expr pos:start="671:29" pos:end="671:42"><name pos:start="671:29" pos:end="671:42"><name pos:start="671:29" pos:end="671:33">codec</name><operator pos:start="671:34" pos:end="671:35">-&gt;</operator><name pos:start="671:36" pos:end="671:42">pix_fmt</name></name></expr></argument>,

                            <argument pos:start="673:29" pos:end="673:37"><expr pos:start="673:29" pos:end="673:37"><name pos:start="673:29" pos:end="673:37">sws_flags</name></expr></argument>, <argument pos:start="673:40" pos:end="673:43"><expr pos:start="673:40" pos:end="673:43"><name pos:start="673:40" pos:end="673:43">NULL</name></expr></argument>, <argument pos:start="673:46" pos:end="673:49"><expr pos:start="673:46" pos:end="673:49"><name pos:start="673:46" pos:end="673:49">NULL</name></expr></argument>, <argument pos:start="673:52" pos:end="673:55"><expr pos:start="673:52" pos:end="673:55"><name pos:start="673:52" pos:end="673:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="675:21" pos:end="681:21"><if pos:start="675:21" pos:end="681:21">if <condition pos:start="675:24" pos:end="675:54">(<expr pos:start="675:25" pos:end="675:53"><name pos:start="675:25" pos:end="675:45"><name pos:start="675:25" pos:end="675:27">ost</name><operator pos:start="675:28" pos:end="675:29">-&gt;</operator><name pos:start="675:30" pos:end="675:45">img_resample_ctx</name></name> <operator pos:start="675:47" pos:end="675:48">==</operator> <name pos:start="675:50" pos:end="675:53">NULL</name></expr>)</condition> <block pos:start="675:56" pos:end="681:21">{<block_content pos:start="677:25" pos:end="679:39">

                        <expr_stmt pos:start="677:25" pos:end="677:75"><expr pos:start="677:25" pos:end="677:74"><call pos:start="677:25" pos:end="677:74"><name pos:start="677:25" pos:end="677:31">fprintf</name><argument_list pos:start="677:32" pos:end="677:74">(<argument pos:start="677:33" pos:end="677:38"><expr pos:start="677:33" pos:end="677:38"><name pos:start="677:33" pos:end="677:38">stderr</name></expr></argument>, <argument pos:start="677:41" pos:end="677:73"><expr pos:start="677:41" pos:end="677:73"><literal type="string" pos:start="677:41" pos:end="677:73">"Cannot get resampling context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="679:25" pos:end="679:39"><expr pos:start="679:25" pos:end="679:38"><call pos:start="679:25" pos:end="679:38"><name pos:start="679:25" pos:end="679:35">ffmpeg_exit</name><argument_list pos:start="679:36" pos:end="679:38">(<argument pos:start="679:37" pos:end="679:37"><expr pos:start="679:37" pos:end="679:37"><literal type="number" pos:start="679:37" pos:end="679:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="685:21" pos:end="685:58"><expr pos:start="685:21" pos:end="685:57"><name pos:start="685:21" pos:end="685:40"><name pos:start="685:21" pos:end="685:23">ost</name><operator pos:start="685:24" pos:end="685:25">-&gt;</operator><name pos:start="685:26" pos:end="685:40">original_height</name></name> <operator pos:start="685:42" pos:end="685:42">=</operator> <name pos:start="685:44" pos:end="685:57"><name pos:start="685:44" pos:end="685:49">icodec</name><operator pos:start="685:50" pos:end="685:51">-&gt;</operator><name pos:start="685:52" pos:end="685:57">height</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="687:21" pos:end="690:0"><expr pos:start="687:21" pos:end="687:56"><name pos:start="687:21" pos:end="687:39"><name pos:start="687:21" pos:end="687:23">ost</name><operator pos:start="687:24" pos:end="687:25">-&gt;</operator><name pos:start="687:26" pos:end="687:39">original_width</name></name>  <operator pos:start="687:42" pos:end="687:42">=</operator> <name pos:start="687:44" pos:end="687:56"><name pos:start="687:44" pos:end="687:49">icodec</name><operator pos:start="687:50" pos:end="687:51">-&gt;</operator><name pos:start="687:52" pos:end="687:56">width</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="689:1" pos:end="689:6">#<cpp:directive pos:start="689:2" pos:end="689:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="691:21" pos:end="691:50"><expr pos:start="691:21" pos:end="691:49"><name pos:start="691:21" pos:end="691:46"><name pos:start="691:21" pos:end="691:25">codec</name><operator pos:start="691:26" pos:end="691:27">-&gt;</operator><name pos:start="691:28" pos:end="691:46">bits_per_raw_sample</name></name><operator pos:start="691:47" pos:end="691:47">=</operator> <literal type="number" pos:start="691:49" pos:end="691:49">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="695:17" pos:end="695:54"><expr pos:start="695:17" pos:end="695:53"><name pos:start="695:17" pos:end="695:36"><name pos:start="695:17" pos:end="695:19">ost</name><operator pos:start="695:20" pos:end="695:21">-&gt;</operator><name pos:start="695:22" pos:end="695:36">resample_height</name></name> <operator pos:start="695:38" pos:end="695:38">=</operator> <name pos:start="695:40" pos:end="695:53"><name pos:start="695:40" pos:end="695:45">icodec</name><operator pos:start="695:46" pos:end="695:47">-&gt;</operator><name pos:start="695:48" pos:end="695:53">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="697:17" pos:end="697:53"><expr pos:start="697:17" pos:end="697:52"><name pos:start="697:17" pos:end="697:35"><name pos:start="697:17" pos:end="697:19">ost</name><operator pos:start="697:20" pos:end="697:21">-&gt;</operator><name pos:start="697:22" pos:end="697:35">resample_width</name></name>  <operator pos:start="697:38" pos:end="697:38">=</operator> <name pos:start="697:40" pos:end="697:52"><name pos:start="697:40" pos:end="697:45">icodec</name><operator pos:start="697:46" pos:end="697:47">-&gt;</operator><name pos:start="697:48" pos:end="697:52">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="699:17" pos:end="699:55"><expr pos:start="699:17" pos:end="699:54"><name pos:start="699:17" pos:end="699:37"><name pos:start="699:17" pos:end="699:19">ost</name><operator pos:start="699:20" pos:end="699:21">-&gt;</operator><name pos:start="699:22" pos:end="699:37">resample_pix_fmt</name></name><operator pos:start="699:38" pos:end="699:38">=</operator> <name pos:start="699:40" pos:end="699:54"><name pos:start="699:40" pos:end="699:45">icodec</name><operator pos:start="699:46" pos:end="699:47">-&gt;</operator><name pos:start="699:48" pos:end="699:54">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="701:17" pos:end="701:41"><expr pos:start="701:17" pos:end="701:40"><name pos:start="701:17" pos:end="701:36"><name pos:start="701:17" pos:end="701:19">ost</name><operator pos:start="701:20" pos:end="701:21">-&gt;</operator><name pos:start="701:22" pos:end="701:36">encoding_needed</name></name> <operator pos:start="701:38" pos:end="701:38">=</operator> <literal type="number" pos:start="701:40" pos:end="701:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="703:17" pos:end="708:0"><expr pos:start="703:17" pos:end="703:40"><name pos:start="703:17" pos:end="703:36"><name pos:start="703:17" pos:end="703:19">ist</name><operator pos:start="703:20" pos:end="703:21">-&gt;</operator><name pos:start="703:22" pos:end="703:36">decoding_needed</name></name> <operator pos:start="703:38" pos:end="703:38">=</operator> <literal type="number" pos:start="703:40" pos:end="703:40">1</literal></expr>;</expr_stmt>



<cpp:if pos:start="707:1" pos:end="707:19">#<cpp:directive pos:start="707:2" pos:end="707:3">if</cpp:directive> <expr pos:start="707:5" pos:end="707:19"><name pos:start="707:5" pos:end="707:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <if_stmt pos:start="709:17" pos:end="718:0"><if pos:start="709:17" pos:end="718:0">if <condition pos:start="709:20" pos:end="709:48">(<expr pos:start="709:21" pos:end="709:47"><call pos:start="709:21" pos:end="709:47"><name pos:start="709:21" pos:end="709:37">configure_filters</name><argument_list pos:start="709:38" pos:end="709:47">(<argument pos:start="709:39" pos:end="709:41"><expr pos:start="709:39" pos:end="709:41"><name pos:start="709:39" pos:end="709:41">ist</name></expr></argument>, <argument pos:start="709:44" pos:end="709:46"><expr pos:start="709:44" pos:end="709:46"><name pos:start="709:44" pos:end="709:46">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="709:50" pos:end="718:0">{<block_content pos:start="711:21" pos:end="713:28">

                    <expr_stmt pos:start="711:21" pos:end="711:64"><expr pos:start="711:21" pos:end="711:63"><call pos:start="711:21" pos:end="711:63"><name pos:start="711:21" pos:end="711:27">fprintf</name><argument_list pos:start="711:28" pos:end="711:63">(<argument pos:start="711:29" pos:end="711:34"><expr pos:start="711:29" pos:end="711:34"><name pos:start="711:29" pos:end="711:34">stderr</name></expr></argument>, <argument pos:start="711:37" pos:end="711:62"><expr pos:start="711:37" pos:end="711:62"><literal type="string" pos:start="711:37" pos:end="711:62">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="713:21" pos:end="713:28"><expr pos:start="713:21" pos:end="713:27"><call pos:start="713:21" pos:end="713:27"><name pos:start="713:21" pos:end="713:24">exit</name><argument_list pos:start="713:25" pos:end="713:27">(<argument pos:start="713:26" pos:end="713:26"><expr pos:start="713:26" pos:end="713:26"><literal type="number" pos:start="713:26" pos:end="713:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="717:1" pos:end="717:6">#<cpp:directive pos:start="717:2" pos:end="717:6">endif</cpp:directive></cpp:endif>

                <break pos:start="719:17" pos:end="719:22">break;</break>

            <case pos:start="721:13" pos:end="721:39">case <expr pos:start="721:18" pos:end="721:38"><name pos:start="721:18" pos:end="721:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="723:17" pos:end="723:41"><expr pos:start="723:17" pos:end="723:40"><name pos:start="723:17" pos:end="723:36"><name pos:start="723:17" pos:end="723:19">ost</name><operator pos:start="723:20" pos:end="723:21">-&gt;</operator><name pos:start="723:22" pos:end="723:36">encoding_needed</name></name> <operator pos:start="723:38" pos:end="723:38">=</operator> <literal type="number" pos:start="723:40" pos:end="723:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="725:17" pos:end="725:41"><expr pos:start="725:17" pos:end="725:40"><name pos:start="725:17" pos:end="725:36"><name pos:start="725:17" pos:end="725:19">ist</name><operator pos:start="725:20" pos:end="725:21">-&gt;</operator><name pos:start="725:22" pos:end="725:36">decoding_needed</name></name> <operator pos:start="725:38" pos:end="725:38">=</operator> <literal type="number" pos:start="725:40" pos:end="725:40">1</literal></expr>;</expr_stmt>

                <break pos:start="727:17" pos:end="727:22">break;</break>

            <default pos:start="729:13" pos:end="729:20">default:</default>

                <expr_stmt pos:start="731:17" pos:end="731:24"><expr pos:start="731:17" pos:end="731:23"><call pos:start="731:17" pos:end="731:23"><name pos:start="731:17" pos:end="731:21">abort</name><argument_list pos:start="731:22" pos:end="731:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="733:17" pos:end="733:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="737:13" pos:end="737:31">/* two pass mode */</comment>

            <if_stmt pos:start="739:13" pos:end="787:13"><if pos:start="739:13" pos:end="787:13">if <condition pos:start="739:16" pos:end="741:71">(<expr pos:start="739:17" pos:end="741:70"><name pos:start="739:17" pos:end="739:36"><name pos:start="739:17" pos:end="739:19">ost</name><operator pos:start="739:20" pos:end="739:21">-&gt;</operator><name pos:start="739:22" pos:end="739:36">encoding_needed</name></name> <operator pos:start="739:38" pos:end="739:39">&amp;&amp;</operator>

                <operator pos:start="741:17" pos:end="741:17">(</operator><name pos:start="741:18" pos:end="741:29"><name pos:start="741:18" pos:end="741:22">codec</name><operator pos:start="741:23" pos:end="741:24">-&gt;</operator><name pos:start="741:25" pos:end="741:29">flags</name></name> <operator pos:start="741:31" pos:end="741:31">&amp;</operator> <operator pos:start="741:33" pos:end="741:33">(</operator><name pos:start="741:34" pos:end="741:49">CODEC_FLAG_PASS1</name> <operator pos:start="741:51" pos:end="741:51">|</operator> <name pos:start="741:53" pos:end="741:68">CODEC_FLAG_PASS2</name><operator pos:start="741:69" pos:end="741:69">)</operator><operator pos:start="741:70" pos:end="741:70">)</operator></expr>)</condition> <block pos:start="741:73" pos:end="787:13">{<block_content pos:start="743:17" pos:end="785:17">

                <decl_stmt pos:start="743:17" pos:end="743:39"><decl pos:start="743:17" pos:end="743:38"><type pos:start="743:17" pos:end="743:20"><name pos:start="743:17" pos:end="743:20">char</name></type> <name pos:start="743:22" pos:end="743:38"><name pos:start="743:22" pos:end="743:32">logfilename</name><index pos:start="743:33" pos:end="743:38">[<expr pos:start="743:34" pos:end="743:37"><literal type="number" pos:start="743:34" pos:end="743:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="745:17" pos:end="745:24"><decl pos:start="745:17" pos:end="745:23"><type pos:start="745:17" pos:end="745:22"><name pos:start="745:17" pos:end="745:20">FILE</name> <modifier pos:start="745:22" pos:end="745:22">*</modifier></type><name pos:start="745:23" pos:end="745:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="749:17" pos:end="753:28"><expr pos:start="749:17" pos:end="753:27"><call pos:start="749:17" pos:end="753:27"><name pos:start="749:17" pos:end="749:24">snprintf</name><argument_list pos:start="749:25" pos:end="753:27">(<argument pos:start="749:26" pos:end="749:36"><expr pos:start="749:26" pos:end="749:36"><name pos:start="749:26" pos:end="749:36">logfilename</name></expr></argument>, <argument pos:start="749:39" pos:end="749:57"><expr pos:start="749:39" pos:end="749:57"><sizeof pos:start="749:39" pos:end="749:57">sizeof<argument_list pos:start="749:45" pos:end="749:57">(<argument pos:start="749:46" pos:end="749:56"><expr pos:start="749:46" pos:end="749:56"><name pos:start="749:46" pos:end="749:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="749:60" pos:end="749:70"><expr pos:start="749:60" pos:end="749:70"><literal type="string" pos:start="749:60" pos:end="749:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="751:26" pos:end="751:108"><expr pos:start="751:26" pos:end="751:108"><ternary pos:start="751:26" pos:end="751:108"><condition pos:start="751:26" pos:end="751:50"><expr pos:start="751:26" pos:end="751:48"><name pos:start="751:26" pos:end="751:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="751:52" pos:end="751:74"> <expr pos:start="751:52" pos:end="751:74"><name pos:start="751:52" pos:end="751:74">pass_logfilename_prefix</name></expr> </then><else pos:start="751:76" pos:end="751:108">: <expr pos:start="751:78" pos:end="751:108"><name pos:start="751:78" pos:end="751:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="753:26" pos:end="753:26"><expr pos:start="753:26" pos:end="753:26"><name pos:start="753:26" pos:end="753:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="755:17" pos:end="785:17"><if pos:start="755:17" pos:end="769:17">if <condition pos:start="755:20" pos:end="755:52">(<expr pos:start="755:21" pos:end="755:51"><name pos:start="755:21" pos:end="755:32"><name pos:start="755:21" pos:end="755:25">codec</name><operator pos:start="755:26" pos:end="755:27">-&gt;</operator><name pos:start="755:28" pos:end="755:32">flags</name></name> <operator pos:start="755:34" pos:end="755:34">&amp;</operator> <name pos:start="755:36" pos:end="755:51">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="755:54" pos:end="769:17">{<block_content pos:start="757:21" pos:end="767:37">

                    <expr_stmt pos:start="757:21" pos:end="757:49"><expr pos:start="757:21" pos:end="757:48"><name pos:start="757:21" pos:end="757:21">f</name> <operator pos:start="757:23" pos:end="757:23">=</operator> <call pos:start="757:25" pos:end="757:48"><name pos:start="757:25" pos:end="757:29">fopen</name><argument_list pos:start="757:30" pos:end="757:48">(<argument pos:start="757:31" pos:end="757:41"><expr pos:start="757:31" pos:end="757:41"><name pos:start="757:31" pos:end="757:41">logfilename</name></expr></argument>, <argument pos:start="757:44" pos:end="757:47"><expr pos:start="757:44" pos:end="757:47"><literal type="string" pos:start="757:44" pos:end="757:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="759:21" pos:end="765:21"><if pos:start="759:21" pos:end="765:21">if <condition pos:start="759:24" pos:end="759:27">(<expr pos:start="759:25" pos:end="759:26"><operator pos:start="759:25" pos:end="759:25">!</operator><name pos:start="759:26" pos:end="759:26">f</name></expr>)</condition> <block pos:start="759:29" pos:end="765:21">{<block_content pos:start="761:25" pos:end="763:39">

                        <expr_stmt pos:start="761:25" pos:end="761:126"><expr pos:start="761:25" pos:end="761:125"><call pos:start="761:25" pos:end="761:125"><name pos:start="761:25" pos:end="761:31">fprintf</name><argument_list pos:start="761:32" pos:end="761:125">(<argument pos:start="761:33" pos:end="761:38"><expr pos:start="761:33" pos:end="761:38"><name pos:start="761:33" pos:end="761:38">stderr</name></expr></argument>, <argument pos:start="761:41" pos:end="761:94"><expr pos:start="761:41" pos:end="761:94"><literal type="string" pos:start="761:41" pos:end="761:94">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>, <argument pos:start="761:97" pos:end="761:107"><expr pos:start="761:97" pos:end="761:107"><name pos:start="761:97" pos:end="761:107">logfilename</name></expr></argument>, <argument pos:start="761:110" pos:end="761:124"><expr pos:start="761:110" pos:end="761:124"><call pos:start="761:110" pos:end="761:124"><name pos:start="761:110" pos:end="761:117">strerror</name><argument_list pos:start="761:118" pos:end="761:124">(<argument pos:start="761:119" pos:end="761:123"><expr pos:start="761:119" pos:end="761:123"><name pos:start="761:119" pos:end="761:123">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="763:25" pos:end="763:39"><expr pos:start="763:25" pos:end="763:38"><call pos:start="763:25" pos:end="763:38"><name pos:start="763:25" pos:end="763:35">ffmpeg_exit</name><argument_list pos:start="763:36" pos:end="763:38">(<argument pos:start="763:37" pos:end="763:37"><expr pos:start="763:37" pos:end="763:37"><literal type="number" pos:start="763:37" pos:end="763:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="767:21" pos:end="767:37"><expr pos:start="767:21" pos:end="767:36"><name pos:start="767:21" pos:end="767:32"><name pos:start="767:21" pos:end="767:23">ost</name><operator pos:start="767:24" pos:end="767:25">-&gt;</operator><name pos:start="767:26" pos:end="767:32">logfile</name></name> <operator pos:start="767:34" pos:end="767:34">=</operator> <name pos:start="767:36" pos:end="767:36">f</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="769:19" pos:end="785:17">else <block pos:start="769:24" pos:end="785:17">{<block_content pos:start="771:21" pos:end="783:48">

                    <decl_stmt pos:start="771:21" pos:end="771:37"><decl pos:start="771:21" pos:end="771:36"><type pos:start="771:21" pos:end="771:27"><name pos:start="771:21" pos:end="771:24">char</name>  <modifier pos:start="771:27" pos:end="771:27">*</modifier></type><name pos:start="771:28" pos:end="771:36">logbuffer</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="773:21" pos:end="773:42"><decl pos:start="773:21" pos:end="773:41"><type pos:start="773:21" pos:end="773:26"><name pos:start="773:21" pos:end="773:26">size_t</name></type> <name pos:start="773:28" pos:end="773:41">logbuffer_size</name></decl>;</decl_stmt>

                    <if_stmt pos:start="775:21" pos:end="781:21"><if pos:start="775:21" pos:end="781:21">if <condition pos:start="775:24" pos:end="775:80">(<expr pos:start="775:25" pos:end="775:79"><call pos:start="775:25" pos:end="775:75"><name pos:start="775:25" pos:end="775:33">read_file</name><argument_list pos:start="775:34" pos:end="775:75">(<argument pos:start="775:35" pos:end="775:45"><expr pos:start="775:35" pos:end="775:45"><name pos:start="775:35" pos:end="775:45">logfilename</name></expr></argument>, <argument pos:start="775:48" pos:end="775:57"><expr pos:start="775:48" pos:end="775:57"><operator pos:start="775:48" pos:end="775:48">&amp;</operator><name pos:start="775:49" pos:end="775:57">logbuffer</name></expr></argument>, <argument pos:start="775:60" pos:end="775:74"><expr pos:start="775:60" pos:end="775:74"><operator pos:start="775:60" pos:end="775:60">&amp;</operator><name pos:start="775:61" pos:end="775:74">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="775:77" pos:end="775:77">&lt;</operator> <literal type="number" pos:start="775:79" pos:end="775:79">0</literal></expr>)</condition> <block pos:start="775:82" pos:end="781:21">{<block_content pos:start="777:25" pos:end="779:39">

                        <expr_stmt pos:start="777:25" pos:end="777:106"><expr pos:start="777:25" pos:end="777:105"><call pos:start="777:25" pos:end="777:105"><name pos:start="777:25" pos:end="777:31">fprintf</name><argument_list pos:start="777:32" pos:end="777:105">(<argument pos:start="777:33" pos:end="777:38"><expr pos:start="777:33" pos:end="777:38"><name pos:start="777:33" pos:end="777:38">stderr</name></expr></argument>, <argument pos:start="777:41" pos:end="777:91"><expr pos:start="777:41" pos:end="777:91"><literal type="string" pos:start="777:41" pos:end="777:91">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>, <argument pos:start="777:94" pos:end="777:104"><expr pos:start="777:94" pos:end="777:104"><name pos:start="777:94" pos:end="777:104">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="779:25" pos:end="779:39"><expr pos:start="779:25" pos:end="779:38"><call pos:start="779:25" pos:end="779:38"><name pos:start="779:25" pos:end="779:35">ffmpeg_exit</name><argument_list pos:start="779:36" pos:end="779:38">(<argument pos:start="779:37" pos:end="779:37"><expr pos:start="779:37" pos:end="779:37"><literal type="number" pos:start="779:37" pos:end="779:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="783:21" pos:end="783:48"><expr pos:start="783:21" pos:end="783:47"><name pos:start="783:21" pos:end="783:35"><name pos:start="783:21" pos:end="783:25">codec</name><operator pos:start="783:26" pos:end="783:27">-&gt;</operator><name pos:start="783:28" pos:end="783:35">stats_in</name></name> <operator pos:start="783:37" pos:end="783:37">=</operator> <name pos:start="783:39" pos:end="783:47">logbuffer</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="791:9" pos:end="799:9"><if pos:start="791:9" pos:end="799:9">if<condition pos:start="791:11" pos:end="791:51">(<expr pos:start="791:12" pos:end="791:50"><name pos:start="791:12" pos:end="791:28"><name pos:start="791:12" pos:end="791:16">codec</name><operator pos:start="791:17" pos:end="791:18">-&gt;</operator><name pos:start="791:19" pos:end="791:28">codec_type</name></name> <operator pos:start="791:30" pos:end="791:31">==</operator> <name pos:start="791:33" pos:end="791:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block pos:start="791:52" pos:end="799:9">{<block_content pos:start="795:13" pos:end="797:67">

            <comment type="block" pos:start="793:13" pos:end="793:86">/* maximum video buffer size is 6-bytes per pixel, plus DPX header size */</comment>

            <decl_stmt pos:start="795:13" pos:end="795:51"><decl pos:start="795:13" pos:end="795:50"><type pos:start="795:13" pos:end="795:15"><name pos:start="795:13" pos:end="795:15">int</name></type> <name pos:start="795:17" pos:end="795:20">size</name><init pos:start="795:21" pos:end="795:50">= <expr pos:start="795:23" pos:end="795:50"><name pos:start="795:23" pos:end="795:34"><name pos:start="795:23" pos:end="795:27">codec</name><operator pos:start="795:28" pos:end="795:29">-&gt;</operator><name pos:start="795:30" pos:end="795:34">width</name></name> <operator pos:start="795:36" pos:end="795:36">*</operator> <name pos:start="795:38" pos:end="795:50"><name pos:start="795:38" pos:end="795:42">codec</name><operator pos:start="795:43" pos:end="795:44">-&gt;</operator><name pos:start="795:45" pos:end="795:50">height</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="797:13" pos:end="797:67"><expr pos:start="797:13" pos:end="797:66"><name pos:start="797:13" pos:end="797:27">bit_buffer_size</name><operator pos:start="797:28" pos:end="797:28">=</operator> <call pos:start="797:30" pos:end="797:66"><name pos:start="797:30" pos:end="797:34">FFMAX</name><argument_list pos:start="797:35" pos:end="797:66">(<argument pos:start="797:36" pos:end="797:50"><expr pos:start="797:36" pos:end="797:50"><name pos:start="797:36" pos:end="797:50">bit_buffer_size</name></expr></argument>, <argument pos:start="797:53" pos:end="797:65"><expr pos:start="797:53" pos:end="797:65"><literal type="number" pos:start="797:53" pos:end="797:53">6</literal><operator pos:start="797:54" pos:end="797:54">*</operator><name pos:start="797:55" pos:end="797:58">size</name> <operator pos:start="797:60" pos:end="797:60">+</operator> <literal type="number" pos:start="797:62" pos:end="797:65">1664</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="805:5" pos:end="807:48"><if pos:start="805:5" pos:end="807:48">if <condition pos:start="805:8" pos:end="805:20">(<expr pos:start="805:9" pos:end="805:19"><operator pos:start="805:9" pos:end="805:9">!</operator><name pos:start="805:10" pos:end="805:19">bit_buffer</name></expr>)</condition><block type="pseudo" pos:start="807:9" pos:end="807:48"><block_content pos:start="807:9" pos:end="807:48">

        <expr_stmt pos:start="807:9" pos:end="807:48"><expr pos:start="807:9" pos:end="807:47"><name pos:start="807:9" pos:end="807:18">bit_buffer</name> <operator pos:start="807:20" pos:end="807:20">=</operator> <call pos:start="807:22" pos:end="807:47"><name pos:start="807:22" pos:end="807:30">av_malloc</name><argument_list pos:start="807:31" pos:end="807:47">(<argument pos:start="807:32" pos:end="807:46"><expr pos:start="807:32" pos:end="807:46"><name pos:start="807:32" pos:end="807:46">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="809:5" pos:end="819:5"><if pos:start="809:5" pos:end="819:5">if <condition pos:start="809:8" pos:end="809:20">(<expr pos:start="809:9" pos:end="809:19"><operator pos:start="809:9" pos:end="809:9">!</operator><name pos:start="809:10" pos:end="809:19">bit_buffer</name></expr>)</condition> <block pos:start="809:22" pos:end="819:5">{<block_content pos:start="811:9" pos:end="817:18">

        <expr_stmt pos:start="811:9" pos:end="813:33"><expr pos:start="811:9" pos:end="813:32"><call pos:start="811:9" pos:end="813:32"><name pos:start="811:9" pos:end="811:15">fprintf</name><argument_list pos:start="811:16" pos:end="813:32">(<argument pos:start="811:17" pos:end="811:22"><expr pos:start="811:17" pos:end="811:22"><name pos:start="811:17" pos:end="811:22">stderr</name></expr></argument>, <argument pos:start="811:25" pos:end="811:66"><expr pos:start="811:25" pos:end="811:66"><literal type="string" pos:start="811:25" pos:end="811:66">"Cannot allocate %d bytes output buffer\n"</literal></expr></argument>,

                <argument pos:start="813:17" pos:end="813:31"><expr pos:start="813:17" pos:end="813:31"><name pos:start="813:17" pos:end="813:31">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="815:9" pos:end="815:30"><expr pos:start="815:9" pos:end="815:29"><name pos:start="815:9" pos:end="815:11">ret</name> <operator pos:start="815:13" pos:end="815:13">=</operator> <call pos:start="815:15" pos:end="815:29"><name pos:start="815:15" pos:end="815:21">AVERROR</name><argument_list pos:start="815:22" pos:end="815:29">(<argument pos:start="815:23" pos:end="815:28"><expr pos:start="815:23" pos:end="815:28"><name pos:start="815:23" pos:end="815:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="817:9" pos:end="817:18">goto <name pos:start="817:14" pos:end="817:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="823:5" pos:end="823:27">/* open each encoder */</comment>

    <for pos:start="825:5" pos:end="885:5">for<control pos:start="825:8" pos:end="825:30">(<init pos:start="825:9" pos:end="825:12"><expr pos:start="825:9" pos:end="825:11"><name pos:start="825:9" pos:end="825:9">i</name><operator pos:start="825:10" pos:end="825:10">=</operator><literal type="number" pos:start="825:11" pos:end="825:11">0</literal></expr>;</init><condition pos:start="825:13" pos:end="825:26"><expr pos:start="825:13" pos:end="825:25"><name pos:start="825:13" pos:end="825:13">i</name><operator pos:start="825:14" pos:end="825:14">&lt;</operator><name pos:start="825:15" pos:end="825:25">nb_ostreams</name></expr>;</condition><incr pos:start="825:27" pos:end="825:29"><expr pos:start="825:27" pos:end="825:29"><name pos:start="825:27" pos:end="825:27">i</name><operator pos:start="825:28" pos:end="825:29">++</operator></expr></incr>)</control> <block pos:start="825:32" pos:end="885:5">{<block_content pos:start="827:9" pos:end="883:9">

        <expr_stmt pos:start="827:9" pos:end="827:27"><expr pos:start="827:9" pos:end="827:26"><name pos:start="827:9" pos:end="827:11">ost</name> <operator pos:start="827:13" pos:end="827:13">=</operator> <name pos:start="827:15" pos:end="827:26"><name pos:start="827:15" pos:end="827:23">ost_table</name><index pos:start="827:24" pos:end="827:26">[<expr pos:start="827:25" pos:end="827:25"><name pos:start="827:25" pos:end="827:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="829:9" pos:end="883:9"><if pos:start="829:9" pos:end="883:9">if <condition pos:start="829:12" pos:end="829:33">(<expr pos:start="829:13" pos:end="829:32"><name pos:start="829:13" pos:end="829:32"><name pos:start="829:13" pos:end="829:15">ost</name><operator pos:start="829:16" pos:end="829:17">-&gt;</operator><name pos:start="829:18" pos:end="829:32">encoding_needed</name></name></expr>)</condition> <block pos:start="829:35" pos:end="883:9">{<block_content pos:start="831:13" pos:end="881:57">

            <decl_stmt pos:start="831:13" pos:end="831:76"><decl pos:start="831:13" pos:end="831:75"><type pos:start="831:13" pos:end="831:21"><name pos:start="831:13" pos:end="831:19">AVCodec</name> <modifier pos:start="831:21" pos:end="831:21">*</modifier></type><name pos:start="831:22" pos:end="831:26">codec</name> <init pos:start="831:28" pos:end="831:75">= <expr pos:start="831:30" pos:end="831:75"><ternary pos:start="831:30" pos:end="831:75"><condition pos:start="831:30" pos:end="831:51"><expr pos:start="831:30" pos:end="831:49"><name pos:start="831:30" pos:end="831:30">i</name> <operator pos:start="831:32" pos:end="831:32">&lt;</operator> <name pos:start="831:34" pos:end="831:49">nb_output_codecs</name></expr> ?</condition><then pos:start="831:53" pos:end="831:68"> <expr pos:start="831:53" pos:end="831:68"><name pos:start="831:53" pos:end="831:68"><name pos:start="831:53" pos:end="831:65">output_codecs</name><index pos:start="831:66" pos:end="831:68">[<expr pos:start="831:67" pos:end="831:67"><name pos:start="831:67" pos:end="831:67">i</name></expr>]</index></name></expr> </then><else pos:start="831:70" pos:end="831:75">: <expr pos:start="831:72" pos:end="831:75"><name pos:start="831:72" pos:end="831:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="833:13" pos:end="833:74"><decl pos:start="833:13" pos:end="833:73"><type pos:start="833:13" pos:end="833:28"><name pos:start="833:13" pos:end="833:26">AVCodecContext</name> <modifier pos:start="833:28" pos:end="833:28">*</modifier></type><name pos:start="833:29" pos:end="833:31">dec</name> <init pos:start="833:33" pos:end="833:73">= <expr pos:start="833:35" pos:end="833:73"><name pos:start="833:35" pos:end="833:62"><name pos:start="833:35" pos:end="833:43">ist_table</name><index pos:start="833:44" pos:end="833:62">[<expr pos:start="833:45" pos:end="833:61"><name pos:start="833:45" pos:end="833:61"><name pos:start="833:45" pos:end="833:47">ost</name><operator pos:start="833:48" pos:end="833:49">-&gt;</operator><name pos:start="833:50" pos:end="833:61">source_index</name></name></expr>]</index></name><operator pos:start="833:63" pos:end="833:64">-&gt;</operator><name pos:start="833:65" pos:end="833:73"><name pos:start="833:65" pos:end="833:66">st</name><operator pos:start="833:67" pos:end="833:68">-&gt;</operator><name pos:start="833:69" pos:end="833:73">codec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="835:13" pos:end="837:71"><if pos:start="835:13" pos:end="837:71">if <condition pos:start="835:16" pos:end="835:23">(<expr pos:start="835:17" pos:end="835:22"><operator pos:start="835:17" pos:end="835:17">!</operator><name pos:start="835:18" pos:end="835:22">codec</name></expr>)</condition><block type="pseudo" pos:start="837:17" pos:end="837:71"><block_content pos:start="837:17" pos:end="837:71">

                <expr_stmt pos:start="837:17" pos:end="837:71"><expr pos:start="837:17" pos:end="837:70"><name pos:start="837:17" pos:end="837:21">codec</name> <operator pos:start="837:23" pos:end="837:23">=</operator> <call pos:start="837:25" pos:end="837:70"><name pos:start="837:25" pos:end="837:44">avcodec_find_encoder</name><argument_list pos:start="837:45" pos:end="837:70">(<argument pos:start="837:46" pos:end="837:69"><expr pos:start="837:46" pos:end="837:69"><name pos:start="837:46" pos:end="837:69"><name pos:start="837:46" pos:end="837:48">ost</name><operator pos:start="837:49" pos:end="837:50">-&gt;</operator><name pos:start="837:51" pos:end="837:52">st</name><operator pos:start="837:53" pos:end="837:54">-&gt;</operator><name pos:start="837:55" pos:end="837:59">codec</name><operator pos:start="837:60" pos:end="837:61">-&gt;</operator><name pos:start="837:62" pos:end="837:69">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="839:13" pos:end="849:13"><if pos:start="839:13" pos:end="849:13">if <condition pos:start="839:16" pos:end="839:23">(<expr pos:start="839:17" pos:end="839:22"><operator pos:start="839:17" pos:end="839:17">!</operator><name pos:start="839:18" pos:end="839:22">codec</name></expr>)</condition> <block pos:start="839:25" pos:end="849:13">{<block_content pos:start="841:17" pos:end="847:33">

                <expr_stmt pos:start="841:17" pos:end="843:80"><expr pos:start="841:17" pos:end="843:79"><call pos:start="841:17" pos:end="843:79"><name pos:start="841:17" pos:end="841:24">snprintf</name><argument_list pos:start="841:25" pos:end="843:79">(<argument pos:start="841:26" pos:end="841:30"><expr pos:start="841:26" pos:end="841:30"><name pos:start="841:26" pos:end="841:30">error</name></expr></argument>, <argument pos:start="841:33" pos:end="841:45"><expr pos:start="841:33" pos:end="841:45"><sizeof pos:start="841:33" pos:end="841:45">sizeof<argument_list pos:start="841:39" pos:end="841:45">(<argument pos:start="841:40" pos:end="841:44"><expr pos:start="841:40" pos:end="841:44"><name pos:start="841:40" pos:end="841:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="841:48" pos:end="841:105"><expr pos:start="841:48" pos:end="841:105"><literal type="string" pos:start="841:48" pos:end="841:105">"Encoder (codec id %d) not found for output stream #%d.%d"</literal></expr></argument>,

                         <argument pos:start="843:26" pos:end="843:49"><expr pos:start="843:26" pos:end="843:49"><name pos:start="843:26" pos:end="843:49"><name pos:start="843:26" pos:end="843:28">ost</name><operator pos:start="843:29" pos:end="843:30">-&gt;</operator><name pos:start="843:31" pos:end="843:32">st</name><operator pos:start="843:33" pos:end="843:34">-&gt;</operator><name pos:start="843:35" pos:end="843:39">codec</name><operator pos:start="843:40" pos:end="843:41">-&gt;</operator><name pos:start="843:42" pos:end="843:49">codec_id</name></name></expr></argument>, <argument pos:start="843:52" pos:end="843:66"><expr pos:start="843:52" pos:end="843:66"><name pos:start="843:52" pos:end="843:66"><name pos:start="843:52" pos:end="843:54">ost</name><operator pos:start="843:55" pos:end="843:56">-&gt;</operator><name pos:start="843:57" pos:end="843:66">file_index</name></name></expr></argument>, <argument pos:start="843:69" pos:end="843:78"><expr pos:start="843:69" pos:end="843:78"><name pos:start="843:69" pos:end="843:78"><name pos:start="843:69" pos:end="843:71">ost</name><operator pos:start="843:72" pos:end="843:73">-&gt;</operator><name pos:start="843:74" pos:end="843:78">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="845:17" pos:end="845:38"><expr pos:start="845:17" pos:end="845:37"><name pos:start="845:17" pos:end="845:19">ret</name> <operator pos:start="845:21" pos:end="845:21">=</operator> <call pos:start="845:23" pos:end="845:37"><name pos:start="845:23" pos:end="845:29">AVERROR</name><argument_list pos:start="845:30" pos:end="845:37">(<argument pos:start="845:31" pos:end="845:36"><expr pos:start="845:31" pos:end="845:36"><name pos:start="845:31" pos:end="845:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="847:17" pos:end="847:33">goto <name pos:start="847:22" pos:end="847:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="851:13" pos:end="867:13"><if pos:start="851:13" pos:end="867:13">if <condition pos:start="851:16" pos:end="851:37">(<expr pos:start="851:17" pos:end="851:36"><name pos:start="851:17" pos:end="851:36"><name pos:start="851:17" pos:end="851:19">dec</name><operator pos:start="851:20" pos:end="851:21">-&gt;</operator><name pos:start="851:22" pos:end="851:36">subtitle_header</name></name></expr>)</condition> <block pos:start="851:39" pos:end="867:13">{<block_content pos:start="853:17" pos:end="865:81">

                <expr_stmt pos:start="853:17" pos:end="853:87"><expr pos:start="853:17" pos:end="853:86"><name pos:start="853:17" pos:end="853:47"><name pos:start="853:17" pos:end="853:19">ost</name><operator pos:start="853:20" pos:end="853:21">-&gt;</operator><name pos:start="853:22" pos:end="853:23">st</name><operator pos:start="853:24" pos:end="853:25">-&gt;</operator><name pos:start="853:26" pos:end="853:30">codec</name><operator pos:start="853:31" pos:end="853:32">-&gt;</operator><name pos:start="853:33" pos:end="853:47">subtitle_header</name></name> <operator pos:start="853:49" pos:end="853:49">=</operator> <call pos:start="853:51" pos:end="853:86"><name pos:start="853:51" pos:end="853:59">av_malloc</name><argument_list pos:start="853:60" pos:end="853:86">(<argument pos:start="853:61" pos:end="853:85"><expr pos:start="853:61" pos:end="853:85"><name pos:start="853:61" pos:end="853:85"><name pos:start="853:61" pos:end="853:63">dec</name><operator pos:start="853:64" pos:end="853:65">-&gt;</operator><name pos:start="853:66" pos:end="853:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="855:17" pos:end="861:17"><if pos:start="855:17" pos:end="861:17">if <condition pos:start="855:20" pos:end="855:53">(<expr pos:start="855:21" pos:end="855:52"><operator pos:start="855:21" pos:end="855:21">!</operator><name pos:start="855:22" pos:end="855:52"><name pos:start="855:22" pos:end="855:24">ost</name><operator pos:start="855:25" pos:end="855:26">-&gt;</operator><name pos:start="855:27" pos:end="855:28">st</name><operator pos:start="855:29" pos:end="855:30">-&gt;</operator><name pos:start="855:31" pos:end="855:35">codec</name><operator pos:start="855:36" pos:end="855:37">-&gt;</operator><name pos:start="855:38" pos:end="855:52">subtitle_header</name></name></expr>)</condition> <block pos:start="855:55" pos:end="861:17">{<block_content pos:start="857:21" pos:end="859:37">

                    <expr_stmt pos:start="857:21" pos:end="857:42"><expr pos:start="857:21" pos:end="857:41"><name pos:start="857:21" pos:end="857:23">ret</name> <operator pos:start="857:25" pos:end="857:25">=</operator> <call pos:start="857:27" pos:end="857:41"><name pos:start="857:27" pos:end="857:33">AVERROR</name><argument_list pos:start="857:34" pos:end="857:41">(<argument pos:start="857:35" pos:end="857:40"><expr pos:start="857:35" pos:end="857:40"><name pos:start="857:35" pos:end="857:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="859:21" pos:end="859:37">goto <name pos:start="859:26" pos:end="859:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="863:17" pos:end="863:105"><expr pos:start="863:17" pos:end="863:104"><call pos:start="863:17" pos:end="863:104"><name pos:start="863:17" pos:end="863:22">memcpy</name><argument_list pos:start="863:23" pos:end="863:104">(<argument pos:start="863:24" pos:end="863:54"><expr pos:start="863:24" pos:end="863:54"><name pos:start="863:24" pos:end="863:54"><name pos:start="863:24" pos:end="863:26">ost</name><operator pos:start="863:27" pos:end="863:28">-&gt;</operator><name pos:start="863:29" pos:end="863:30">st</name><operator pos:start="863:31" pos:end="863:32">-&gt;</operator><name pos:start="863:33" pos:end="863:37">codec</name><operator pos:start="863:38" pos:end="863:39">-&gt;</operator><name pos:start="863:40" pos:end="863:54">subtitle_header</name></name></expr></argument>, <argument pos:start="863:57" pos:end="863:76"><expr pos:start="863:57" pos:end="863:76"><name pos:start="863:57" pos:end="863:76"><name pos:start="863:57" pos:end="863:59">dec</name><operator pos:start="863:60" pos:end="863:61">-&gt;</operator><name pos:start="863:62" pos:end="863:76">subtitle_header</name></name></expr></argument>, <argument pos:start="863:79" pos:end="863:103"><expr pos:start="863:79" pos:end="863:103"><name pos:start="863:79" pos:end="863:103"><name pos:start="863:79" pos:end="863:81">dec</name><operator pos:start="863:82" pos:end="863:83">-&gt;</operator><name pos:start="863:84" pos:end="863:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="865:17" pos:end="865:81"><expr pos:start="865:17" pos:end="865:80"><name pos:start="865:17" pos:end="865:52"><name pos:start="865:17" pos:end="865:19">ost</name><operator pos:start="865:20" pos:end="865:21">-&gt;</operator><name pos:start="865:22" pos:end="865:23">st</name><operator pos:start="865:24" pos:end="865:25">-&gt;</operator><name pos:start="865:26" pos:end="865:30">codec</name><operator pos:start="865:31" pos:end="865:32">-&gt;</operator><name pos:start="865:33" pos:end="865:52">subtitle_header_size</name></name> <operator pos:start="865:54" pos:end="865:54">=</operator> <name pos:start="865:56" pos:end="865:80"><name pos:start="865:56" pos:end="865:58">dec</name><operator pos:start="865:59" pos:end="865:60">-&gt;</operator><name pos:start="865:61" pos:end="865:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="869:13" pos:end="879:13"><if pos:start="869:13" pos:end="879:13">if <condition pos:start="869:16" pos:end="869:56">(<expr pos:start="869:17" pos:end="869:55"><call pos:start="869:17" pos:end="869:51"><name pos:start="869:17" pos:end="869:28">avcodec_open</name><argument_list pos:start="869:29" pos:end="869:51">(<argument pos:start="869:30" pos:end="869:43"><expr pos:start="869:30" pos:end="869:43"><name pos:start="869:30" pos:end="869:43"><name pos:start="869:30" pos:end="869:32">ost</name><operator pos:start="869:33" pos:end="869:34">-&gt;</operator><name pos:start="869:35" pos:end="869:36">st</name><operator pos:start="869:37" pos:end="869:38">-&gt;</operator><name pos:start="869:39" pos:end="869:43">codec</name></name></expr></argument>, <argument pos:start="869:46" pos:end="869:50"><expr pos:start="869:46" pos:end="869:50"><name pos:start="869:46" pos:end="869:50">codec</name></expr></argument>)</argument_list></call> <operator pos:start="869:53" pos:end="869:53">&lt;</operator> <literal type="number" pos:start="869:55" pos:end="869:55">0</literal></expr>)</condition> <block pos:start="869:58" pos:end="879:13">{<block_content pos:start="871:17" pos:end="877:33">

                <expr_stmt pos:start="871:17" pos:end="873:53"><expr pos:start="871:17" pos:end="873:52"><call pos:start="871:17" pos:end="873:52"><name pos:start="871:17" pos:end="871:24">snprintf</name><argument_list pos:start="871:25" pos:end="873:52">(<argument pos:start="871:26" pos:end="871:30"><expr pos:start="871:26" pos:end="871:30"><name pos:start="871:26" pos:end="871:30">error</name></expr></argument>, <argument pos:start="871:33" pos:end="871:45"><expr pos:start="871:33" pos:end="871:45"><sizeof pos:start="871:33" pos:end="871:45">sizeof<argument_list pos:start="871:39" pos:end="871:45">(<argument pos:start="871:40" pos:end="871:44"><expr pos:start="871:40" pos:end="871:44"><name pos:start="871:40" pos:end="871:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="871:48" pos:end="871:170"><expr pos:start="871:48" pos:end="871:170"><literal type="string" pos:start="871:48" pos:end="871:170">"Error while opening encoder for output stream #%d.%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="873:25" pos:end="873:39"><expr pos:start="873:25" pos:end="873:39"><name pos:start="873:25" pos:end="873:39"><name pos:start="873:25" pos:end="873:27">ost</name><operator pos:start="873:28" pos:end="873:29">-&gt;</operator><name pos:start="873:30" pos:end="873:39">file_index</name></name></expr></argument>, <argument pos:start="873:42" pos:end="873:51"><expr pos:start="873:42" pos:end="873:51"><name pos:start="873:42" pos:end="873:51"><name pos:start="873:42" pos:end="873:44">ost</name><operator pos:start="873:45" pos:end="873:46">-&gt;</operator><name pos:start="873:47" pos:end="873:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="875:17" pos:end="875:38"><expr pos:start="875:17" pos:end="875:37"><name pos:start="875:17" pos:end="875:19">ret</name> <operator pos:start="875:21" pos:end="875:21">=</operator> <call pos:start="875:23" pos:end="875:37"><name pos:start="875:23" pos:end="875:29">AVERROR</name><argument_list pos:start="875:30" pos:end="875:37">(<argument pos:start="875:31" pos:end="875:36"><expr pos:start="875:31" pos:end="875:36"><name pos:start="875:31" pos:end="875:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="877:17" pos:end="877:33">goto <name pos:start="877:22" pos:end="877:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="881:13" pos:end="881:57"><expr pos:start="881:13" pos:end="881:56"><name pos:start="881:13" pos:end="881:22">extra_size</name> <operator pos:start="881:24" pos:end="881:25">+=</operator> <name pos:start="881:27" pos:end="881:56"><name pos:start="881:27" pos:end="881:29">ost</name><operator pos:start="881:30" pos:end="881:31">-&gt;</operator><name pos:start="881:32" pos:end="881:33">st</name><operator pos:start="881:34" pos:end="881:35">-&gt;</operator><name pos:start="881:36" pos:end="881:40">codec</name><operator pos:start="881:41" pos:end="881:42">-&gt;</operator><name pos:start="881:43" pos:end="881:56">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="889:5" pos:end="889:27">/* open each decoder */</comment>

    <for pos:start="891:5" pos:end="933:5">for<control pos:start="891:8" pos:end="891:30">(<init pos:start="891:9" pos:end="891:12"><expr pos:start="891:9" pos:end="891:11"><name pos:start="891:9" pos:end="891:9">i</name><operator pos:start="891:10" pos:end="891:10">=</operator><literal type="number" pos:start="891:11" pos:end="891:11">0</literal></expr>;</init><condition pos:start="891:13" pos:end="891:26"><expr pos:start="891:13" pos:end="891:25"><name pos:start="891:13" pos:end="891:13">i</name><operator pos:start="891:14" pos:end="891:14">&lt;</operator><name pos:start="891:15" pos:end="891:25">nb_istreams</name></expr>;</condition><incr pos:start="891:27" pos:end="891:29"><expr pos:start="891:27" pos:end="891:29"><name pos:start="891:27" pos:end="891:27">i</name><operator pos:start="891:28" pos:end="891:29">++</operator></expr></incr>)</control> <block pos:start="891:32" pos:end="933:5">{<block_content pos:start="893:9" pos:end="931:9">

        <expr_stmt pos:start="893:9" pos:end="893:27"><expr pos:start="893:9" pos:end="893:26"><name pos:start="893:9" pos:end="893:11">ist</name> <operator pos:start="893:13" pos:end="893:13">=</operator> <name pos:start="893:15" pos:end="893:26"><name pos:start="893:15" pos:end="893:23">ist_table</name><index pos:start="893:24" pos:end="893:26">[<expr pos:start="893:25" pos:end="893:25"><name pos:start="893:25" pos:end="893:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="895:9" pos:end="931:9"><if pos:start="895:9" pos:end="931:9">if <condition pos:start="895:12" pos:end="895:33">(<expr pos:start="895:13" pos:end="895:32"><name pos:start="895:13" pos:end="895:32"><name pos:start="895:13" pos:end="895:15">ist</name><operator pos:start="895:16" pos:end="895:17">-&gt;</operator><name pos:start="895:18" pos:end="895:32">decoding_needed</name></name></expr>)</condition> <block pos:start="895:35" pos:end="931:9">{<block_content pos:start="897:13" pos:end="925:13">

            <decl_stmt pos:start="897:13" pos:end="897:74"><decl pos:start="897:13" pos:end="897:73"><type pos:start="897:13" pos:end="897:21"><name pos:start="897:13" pos:end="897:19">AVCodec</name> <modifier pos:start="897:21" pos:end="897:21">*</modifier></type><name pos:start="897:22" pos:end="897:26">codec</name> <init pos:start="897:28" pos:end="897:73">= <expr pos:start="897:30" pos:end="897:73"><ternary pos:start="897:30" pos:end="897:73"><condition pos:start="897:30" pos:end="897:50"><expr pos:start="897:30" pos:end="897:48"><name pos:start="897:30" pos:end="897:30">i</name> <operator pos:start="897:32" pos:end="897:32">&lt;</operator> <name pos:start="897:34" pos:end="897:48">nb_input_codecs</name></expr> ?</condition><then pos:start="897:52" pos:end="897:66"> <expr pos:start="897:52" pos:end="897:66"><name pos:start="897:52" pos:end="897:66"><name pos:start="897:52" pos:end="897:63">input_codecs</name><index pos:start="897:64" pos:end="897:66">[<expr pos:start="897:65" pos:end="897:65"><name pos:start="897:65" pos:end="897:65">i</name></expr>]</index></name></expr> </then><else pos:start="897:68" pos:end="897:73">: <expr pos:start="897:70" pos:end="897:73"><name pos:start="897:70" pos:end="897:73">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="899:13" pos:end="901:71"><if pos:start="899:13" pos:end="901:71">if <condition pos:start="899:16" pos:end="899:23">(<expr pos:start="899:17" pos:end="899:22"><operator pos:start="899:17" pos:end="899:17">!</operator><name pos:start="899:18" pos:end="899:22">codec</name></expr>)</condition><block type="pseudo" pos:start="901:17" pos:end="901:71"><block_content pos:start="901:17" pos:end="901:71">

                <expr_stmt pos:start="901:17" pos:end="901:71"><expr pos:start="901:17" pos:end="901:70"><name pos:start="901:17" pos:end="901:21">codec</name> <operator pos:start="901:23" pos:end="901:23">=</operator> <call pos:start="901:25" pos:end="901:70"><name pos:start="901:25" pos:end="901:44">avcodec_find_decoder</name><argument_list pos:start="901:45" pos:end="901:70">(<argument pos:start="901:46" pos:end="901:69"><expr pos:start="901:46" pos:end="901:69"><name pos:start="901:46" pos:end="901:69"><name pos:start="901:46" pos:end="901:48">ist</name><operator pos:start="901:49" pos:end="901:50">-&gt;</operator><name pos:start="901:51" pos:end="901:52">st</name><operator pos:start="901:53" pos:end="901:54">-&gt;</operator><name pos:start="901:55" pos:end="901:59">codec</name><operator pos:start="901:60" pos:end="901:61">-&gt;</operator><name pos:start="901:62" pos:end="901:69">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="903:13" pos:end="913:13"><if pos:start="903:13" pos:end="913:13">if <condition pos:start="903:16" pos:end="903:23">(<expr pos:start="903:17" pos:end="903:22"><operator pos:start="903:17" pos:end="903:17">!</operator><name pos:start="903:18" pos:end="903:22">codec</name></expr>)</condition> <block pos:start="903:25" pos:end="913:13">{<block_content pos:start="905:17" pos:end="911:33">

                <expr_stmt pos:start="905:17" pos:end="907:79"><expr pos:start="905:17" pos:end="907:78"><call pos:start="905:17" pos:end="907:78"><name pos:start="905:17" pos:end="905:24">snprintf</name><argument_list pos:start="905:25" pos:end="907:78">(<argument pos:start="905:26" pos:end="905:30"><expr pos:start="905:26" pos:end="905:30"><name pos:start="905:26" pos:end="905:30">error</name></expr></argument>, <argument pos:start="905:33" pos:end="905:45"><expr pos:start="905:33" pos:end="905:45"><sizeof pos:start="905:33" pos:end="905:45">sizeof<argument_list pos:start="905:39" pos:end="905:45">(<argument pos:start="905:40" pos:end="905:44"><expr pos:start="905:40" pos:end="905:44"><name pos:start="905:40" pos:end="905:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="905:48" pos:end="905:104"><expr pos:start="905:48" pos:end="905:104"><literal type="string" pos:start="905:48" pos:end="905:104">"Decoder (codec id %d) not found for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="907:25" pos:end="907:48"><expr pos:start="907:25" pos:end="907:48"><name pos:start="907:25" pos:end="907:48"><name pos:start="907:25" pos:end="907:27">ist</name><operator pos:start="907:28" pos:end="907:29">-&gt;</operator><name pos:start="907:30" pos:end="907:31">st</name><operator pos:start="907:32" pos:end="907:33">-&gt;</operator><name pos:start="907:34" pos:end="907:38">codec</name><operator pos:start="907:39" pos:end="907:40">-&gt;</operator><name pos:start="907:41" pos:end="907:48">codec_id</name></name></expr></argument>, <argument pos:start="907:51" pos:end="907:65"><expr pos:start="907:51" pos:end="907:65"><name pos:start="907:51" pos:end="907:65"><name pos:start="907:51" pos:end="907:53">ist</name><operator pos:start="907:54" pos:end="907:55">-&gt;</operator><name pos:start="907:56" pos:end="907:65">file_index</name></name></expr></argument>, <argument pos:start="907:68" pos:end="907:77"><expr pos:start="907:68" pos:end="907:77"><name pos:start="907:68" pos:end="907:77"><name pos:start="907:68" pos:end="907:70">ist</name><operator pos:start="907:71" pos:end="907:72">-&gt;</operator><name pos:start="907:73" pos:end="907:77">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="909:17" pos:end="909:38"><expr pos:start="909:17" pos:end="909:37"><name pos:start="909:17" pos:end="909:19">ret</name> <operator pos:start="909:21" pos:end="909:21">=</operator> <call pos:start="909:23" pos:end="909:37"><name pos:start="909:23" pos:end="909:29">AVERROR</name><argument_list pos:start="909:30" pos:end="909:37">(<argument pos:start="909:31" pos:end="909:36"><expr pos:start="909:31" pos:end="909:36"><name pos:start="909:31" pos:end="909:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="911:17" pos:end="911:33">goto <name pos:start="911:22" pos:end="911:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="915:13" pos:end="925:13"><if pos:start="915:13" pos:end="925:13">if <condition pos:start="915:16" pos:end="915:56">(<expr pos:start="915:17" pos:end="915:55"><call pos:start="915:17" pos:end="915:51"><name pos:start="915:17" pos:end="915:28">avcodec_open</name><argument_list pos:start="915:29" pos:end="915:51">(<argument pos:start="915:30" pos:end="915:43"><expr pos:start="915:30" pos:end="915:43"><name pos:start="915:30" pos:end="915:43"><name pos:start="915:30" pos:end="915:32">ist</name><operator pos:start="915:33" pos:end="915:34">-&gt;</operator><name pos:start="915:35" pos:end="915:36">st</name><operator pos:start="915:37" pos:end="915:38">-&gt;</operator><name pos:start="915:39" pos:end="915:43">codec</name></name></expr></argument>, <argument pos:start="915:46" pos:end="915:50"><expr pos:start="915:46" pos:end="915:50"><name pos:start="915:46" pos:end="915:50">codec</name></expr></argument>)</argument_list></call> <operator pos:start="915:53" pos:end="915:53">&lt;</operator> <literal type="number" pos:start="915:55" pos:end="915:55">0</literal></expr>)</condition> <block pos:start="915:58" pos:end="925:13">{<block_content pos:start="917:17" pos:end="923:33">

                <expr_stmt pos:start="917:17" pos:end="919:53"><expr pos:start="917:17" pos:end="919:52"><call pos:start="917:17" pos:end="919:52"><name pos:start="917:17" pos:end="917:24">snprintf</name><argument_list pos:start="917:25" pos:end="919:52">(<argument pos:start="917:26" pos:end="917:30"><expr pos:start="917:26" pos:end="917:30"><name pos:start="917:26" pos:end="917:30">error</name></expr></argument>, <argument pos:start="917:33" pos:end="917:45"><expr pos:start="917:33" pos:end="917:45"><sizeof pos:start="917:33" pos:end="917:45">sizeof<argument_list pos:start="917:39" pos:end="917:45">(<argument pos:start="917:40" pos:end="917:44"><expr pos:start="917:40" pos:end="917:44"><name pos:start="917:40" pos:end="917:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="917:48" pos:end="917:100"><expr pos:start="917:48" pos:end="917:100"><literal type="string" pos:start="917:48" pos:end="917:100">"Error while opening decoder for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="919:25" pos:end="919:39"><expr pos:start="919:25" pos:end="919:39"><name pos:start="919:25" pos:end="919:39"><name pos:start="919:25" pos:end="919:27">ist</name><operator pos:start="919:28" pos:end="919:29">-&gt;</operator><name pos:start="919:30" pos:end="919:39">file_index</name></name></expr></argument>, <argument pos:start="919:42" pos:end="919:51"><expr pos:start="919:42" pos:end="919:51"><name pos:start="919:42" pos:end="919:51"><name pos:start="919:42" pos:end="919:44">ist</name><operator pos:start="919:45" pos:end="919:46">-&gt;</operator><name pos:start="919:47" pos:end="919:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="921:17" pos:end="921:38"><expr pos:start="921:17" pos:end="921:37"><name pos:start="921:17" pos:end="921:19">ret</name> <operator pos:start="921:21" pos:end="921:21">=</operator> <call pos:start="921:23" pos:end="921:37"><name pos:start="921:23" pos:end="921:29">AVERROR</name><argument_list pos:start="921:30" pos:end="921:37">(<argument pos:start="921:31" pos:end="921:36"><expr pos:start="921:31" pos:end="921:36"><name pos:start="921:31" pos:end="921:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="923:17" pos:end="923:33">goto <name pos:start="923:22" pos:end="923:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="927:13" pos:end="927:67">//if (ist-&gt;st-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_VIDEO)</comment>

            <comment type="line" pos:start="929:13" pos:end="929:67">//    ist-&gt;st-&gt;codec-&gt;flags |= CODEC_FLAG_REPEAT_FIELD;</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="937:5" pos:end="937:18">/* init pts */</comment>

    <for pos:start="939:5" pos:end="953:5">for<control pos:start="939:8" pos:end="939:30">(<init pos:start="939:9" pos:end="939:12"><expr pos:start="939:9" pos:end="939:11"><name pos:start="939:9" pos:end="939:9">i</name><operator pos:start="939:10" pos:end="939:10">=</operator><literal type="number" pos:start="939:11" pos:end="939:11">0</literal></expr>;</init><condition pos:start="939:13" pos:end="939:26"><expr pos:start="939:13" pos:end="939:25"><name pos:start="939:13" pos:end="939:13">i</name><operator pos:start="939:14" pos:end="939:14">&lt;</operator><name pos:start="939:15" pos:end="939:25">nb_istreams</name></expr>;</condition><incr pos:start="939:27" pos:end="939:29"><expr pos:start="939:27" pos:end="939:29"><name pos:start="939:27" pos:end="939:27">i</name><operator pos:start="939:28" pos:end="939:29">++</operator></expr></incr>)</control> <block pos:start="939:32" pos:end="953:5">{<block_content pos:start="941:9" pos:end="951:26">

        <decl_stmt pos:start="941:9" pos:end="941:21"><decl pos:start="941:9" pos:end="941:20"><type pos:start="941:9" pos:end="941:18"><name pos:start="941:9" pos:end="941:16">AVStream</name> <modifier pos:start="941:18" pos:end="941:18">*</modifier></type><name pos:start="941:19" pos:end="941:20">st</name></decl>;</decl_stmt>

        <expr_stmt pos:start="943:9" pos:end="943:27"><expr pos:start="943:9" pos:end="943:26"><name pos:start="943:9" pos:end="943:11">ist</name> <operator pos:start="943:13" pos:end="943:13">=</operator> <name pos:start="943:15" pos:end="943:26"><name pos:start="943:15" pos:end="943:23">ist_table</name><index pos:start="943:24" pos:end="943:26">[<expr pos:start="943:25" pos:end="943:25"><name pos:start="943:25" pos:end="943:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="945:9" pos:end="945:20"><expr pos:start="945:9" pos:end="945:19"><name pos:start="945:9" pos:end="945:10">st</name><operator pos:start="945:11" pos:end="945:11">=</operator> <name pos:start="945:13" pos:end="945:19"><name pos:start="945:13" pos:end="945:15">ist</name><operator pos:start="945:16" pos:end="945:17">-&gt;</operator><name pos:start="945:18" pos:end="945:19">st</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="947:9" pos:end="947:116"><expr pos:start="947:9" pos:end="947:115"><name pos:start="947:9" pos:end="947:16"><name pos:start="947:9" pos:end="947:11">ist</name><operator pos:start="947:12" pos:end="947:13">-&gt;</operator><name pos:start="947:14" pos:end="947:16">pts</name></name> <operator pos:start="947:18" pos:end="947:18">=</operator> <ternary pos:start="947:20" pos:end="947:115"><condition pos:start="947:20" pos:end="947:43"><expr pos:start="947:20" pos:end="947:41"><name pos:start="947:20" pos:end="947:41"><name pos:start="947:20" pos:end="947:21">st</name><operator pos:start="947:22" pos:end="947:23">-&gt;</operator><name pos:start="947:24" pos:end="947:37">avg_frame_rate</name><operator pos:start="947:38" pos:end="947:38">.</operator><name pos:start="947:39" pos:end="947:41">num</name></name></expr> ?</condition><then pos:start="947:45" pos:end="947:111"> <expr pos:start="947:45" pos:end="947:111"><operator pos:start="947:45" pos:end="947:45">-</operator> <name pos:start="947:47" pos:end="947:69"><name pos:start="947:47" pos:end="947:48">st</name><operator pos:start="947:49" pos:end="947:50">-&gt;</operator><name pos:start="947:51" pos:end="947:55">codec</name><operator pos:start="947:56" pos:end="947:57">-&gt;</operator><name pos:start="947:58" pos:end="947:69">has_b_frames</name></name><operator pos:start="947:70" pos:end="947:70">*</operator><name pos:start="947:71" pos:end="947:82">AV_TIME_BASE</name> <operator pos:start="947:84" pos:end="947:84">/</operator> <call pos:start="947:86" pos:end="947:111"><name pos:start="947:86" pos:end="947:91">av_q2d</name><argument_list pos:start="947:92" pos:end="947:111">(<argument pos:start="947:93" pos:end="947:110"><expr pos:start="947:93" pos:end="947:110"><name pos:start="947:93" pos:end="947:110"><name pos:start="947:93" pos:end="947:94">st</name><operator pos:start="947:95" pos:end="947:96">-&gt;</operator><name pos:start="947:97" pos:end="947:110">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="947:113" pos:end="947:115">: <expr pos:start="947:115" pos:end="947:115"><literal type="number" pos:start="947:115" pos:end="947:115">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="949:9" pos:end="949:39"><expr pos:start="949:9" pos:end="949:38"><name pos:start="949:9" pos:end="949:21"><name pos:start="949:9" pos:end="949:11">ist</name><operator pos:start="949:12" pos:end="949:13">-&gt;</operator><name pos:start="949:14" pos:end="949:21">next_pts</name></name> <operator pos:start="949:23" pos:end="949:23">=</operator> <name pos:start="949:25" pos:end="949:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="951:9" pos:end="951:26"><expr pos:start="951:9" pos:end="951:25"><name pos:start="951:9" pos:end="951:21"><name pos:start="951:9" pos:end="951:11">ist</name><operator pos:start="951:12" pos:end="951:13">-&gt;</operator><name pos:start="951:14" pos:end="951:21">is_start</name></name> <operator pos:start="951:23" pos:end="951:23">=</operator> <literal type="number" pos:start="951:25" pos:end="951:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="957:5" pos:end="957:63">/* set meta data information from input file if required */</comment>

    <for pos:start="959:5" pos:end="1051:5">for <control pos:start="959:9" pos:end="959:37">(<init pos:start="959:10" pos:end="959:13"><expr pos:start="959:10" pos:end="959:12"><name pos:start="959:10" pos:end="959:10">i</name><operator pos:start="959:11" pos:end="959:11">=</operator><literal type="number" pos:start="959:12" pos:end="959:12">0</literal></expr>;</init><condition pos:start="959:14" pos:end="959:33"><expr pos:start="959:14" pos:end="959:32"><name pos:start="959:14" pos:end="959:14">i</name><operator pos:start="959:15" pos:end="959:15">&lt;</operator><name pos:start="959:16" pos:end="959:32">nb_meta_data_maps</name></expr>;</condition><incr pos:start="959:34" pos:end="959:36"><expr pos:start="959:34" pos:end="959:36"><name pos:start="959:34" pos:end="959:34">i</name><operator pos:start="959:35" pos:end="959:36">++</operator></expr></incr>)</control> <block pos:start="959:39" pos:end="1051:5">{<block_content pos:start="961:9" pos:end="1049:72">

        <decl_stmt pos:start="961:9" pos:end="961:34"><decl pos:start="961:9" pos:end="961:33"><type pos:start="961:9" pos:end="961:25"><name pos:start="961:9" pos:end="961:23">AVFormatContext</name> <modifier pos:start="961:25" pos:end="961:25">*</modifier></type><name pos:start="961:26" pos:end="961:33"><name pos:start="961:26" pos:end="961:30">files</name><index pos:start="961:31" pos:end="961:33">[<expr pos:start="961:32" pos:end="961:32"><literal type="number" pos:start="961:32" pos:end="961:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="963:9" pos:end="963:34"><decl pos:start="963:9" pos:end="963:33"><type pos:start="963:9" pos:end="963:26"><name pos:start="963:9" pos:end="963:18">AVMetadata</name>      <modifier pos:start="963:25" pos:end="963:25">*</modifier><modifier pos:start="963:26" pos:end="963:26">*</modifier></type><name pos:start="963:27" pos:end="963:33"><name pos:start="963:27" pos:end="963:30">meta</name><index pos:start="963:31" pos:end="963:33">[<expr pos:start="963:32" pos:end="963:32"><literal type="number" pos:start="963:32" pos:end="963:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="965:9" pos:end="982:0"><decl pos:start="965:9" pos:end="965:13"><type pos:start="965:9" pos:end="965:11"><name pos:start="965:9" pos:end="965:11">int</name></type> <name pos:start="965:13" pos:end="965:13">j</name></decl>;</decl_stmt>



<cpp:define pos:start="969:1" pos:end="981:9">#<cpp:directive pos:start="969:2" pos:end="969:7">define</cpp:directive> <cpp:macro pos:start="969:9" pos:end="969:51"><name pos:start="969:9" pos:end="969:28">METADATA_CHECK_INDEX</name><parameter_list pos:start="969:29" pos:end="969:51">(<parameter pos:start="969:30" pos:end="969:34"><type pos:start="969:30" pos:end="969:34"><name pos:start="969:30" pos:end="969:34">index</name></type></parameter>, <parameter pos:start="969:37" pos:end="969:44"><type pos:start="969:37" pos:end="969:44"><name pos:start="969:37" pos:end="969:44">nb_elems</name></type></parameter>, <parameter pos:start="969:47" pos:end="969:50"><type pos:start="969:47" pos:end="969:50"><name pos:start="969:47" pos:end="969:50">desc</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="971:9" pos:end="981:9">if ((index) &lt; 0 || (index) &gt;= (nb_elems)) {\

            snprintf(error, sizeof(error), "Invalid %s index %d while processing metadata maps\n",\

                     (desc), (index));\

            ret = AVERROR(EINVAL);\

            goto dump_format;\

        }</cpp:value></cpp:define>



        <decl_stmt pos:start="985:9" pos:end="985:55"><decl pos:start="985:9" pos:end="985:54"><type pos:start="985:9" pos:end="985:11"><name pos:start="985:9" pos:end="985:11">int</name></type> <name pos:start="985:13" pos:end="985:26">out_file_index</name> <init pos:start="985:28" pos:end="985:54">= <expr pos:start="985:30" pos:end="985:54"><name pos:start="985:30" pos:end="985:49"><name pos:start="985:30" pos:end="985:43">meta_data_maps</name><index pos:start="985:44" pos:end="985:46">[<expr pos:start="985:45" pos:end="985:45"><name pos:start="985:45" pos:end="985:45">i</name></expr>]</index><index pos:start="985:47" pos:end="985:49">[<expr pos:start="985:48" pos:end="985:48"><literal type="number" pos:start="985:48" pos:end="985:48">0</literal></expr>]</index></name><operator pos:start="985:50" pos:end="985:50">.</operator><name pos:start="985:51" pos:end="985:54">file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="987:9" pos:end="987:54"><decl pos:start="987:9" pos:end="987:53"><type pos:start="987:9" pos:end="987:11"><name pos:start="987:9" pos:end="987:11">int</name></type> <name pos:start="987:13" pos:end="987:25">in_file_index</name> <init pos:start="987:27" pos:end="987:53">= <expr pos:start="987:29" pos:end="987:53"><name pos:start="987:29" pos:end="987:48"><name pos:start="987:29" pos:end="987:42">meta_data_maps</name><index pos:start="987:43" pos:end="987:45">[<expr pos:start="987:44" pos:end="987:44"><name pos:start="987:44" pos:end="987:44">i</name></expr>]</index><index pos:start="987:46" pos:end="987:48">[<expr pos:start="987:47" pos:end="987:47"><literal type="number" pos:start="987:47" pos:end="987:47">1</literal></expr>]</index></name><operator pos:start="987:49" pos:end="987:49">.</operator><name pos:start="987:50" pos:end="987:53">file</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="989:9" pos:end="991:21"><if pos:start="989:9" pos:end="991:21">if <condition pos:start="989:12" pos:end="989:52">(<expr pos:start="989:13" pos:end="989:51"><name pos:start="989:13" pos:end="989:25">in_file_index</name> <operator pos:start="989:27" pos:end="989:27">&lt;</operator> <literal type="number" pos:start="989:29" pos:end="989:29">0</literal> <operator pos:start="989:31" pos:end="989:32">||</operator> <name pos:start="989:34" pos:end="989:47">out_file_index</name> <operator pos:start="989:49" pos:end="989:49">&lt;</operator> <literal type="number" pos:start="989:51" pos:end="989:51">0</literal></expr>)</condition><block type="pseudo" pos:start="991:13" pos:end="991:21"><block_content pos:start="991:13" pos:end="991:21">

            <continue pos:start="991:13" pos:end="991:21">continue;</continue></block_content></block></if></if_stmt>

        <macro pos:start="993:9" pos:end="993:76"><name pos:start="993:9" pos:end="993:28">METADATA_CHECK_INDEX</name><argument_list pos:start="993:29" pos:end="993:76">(<argument pos:start="993:30" pos:end="993:43">out_file_index</argument>, <argument pos:start="993:46" pos:end="993:60">nb_output_files</argument>, <argument pos:start="993:63" pos:end="993:75"><literal type="string" pos:start="993:63" pos:end="993:75">"output file"</literal></argument>)</argument_list></macro>

        <macro pos:start="995:9" pos:end="995:73"><name pos:start="995:9" pos:end="995:28">METADATA_CHECK_INDEX</name><argument_list pos:start="995:29" pos:end="995:73">(<argument pos:start="995:30" pos:end="995:42">in_file_index</argument>, <argument pos:start="995:45" pos:end="995:58">nb_input_files</argument>, <argument pos:start="995:61" pos:end="995:72"><literal type="string" pos:start="995:61" pos:end="995:72">"input file"</literal></argument>)</argument_list></macro>



        <expr_stmt pos:start="999:9" pos:end="999:48"><expr pos:start="999:9" pos:end="999:47"><name pos:start="999:9" pos:end="999:16"><name pos:start="999:9" pos:end="999:13">files</name><index pos:start="999:14" pos:end="999:16">[<expr pos:start="999:15" pos:end="999:15"><literal type="number" pos:start="999:15" pos:end="999:15">0</literal></expr>]</index></name> <operator pos:start="999:18" pos:end="999:18">=</operator> <name pos:start="999:20" pos:end="999:47"><name pos:start="999:20" pos:end="999:31">output_files</name><index pos:start="999:32" pos:end="999:47">[<expr pos:start="999:33" pos:end="999:46"><name pos:start="999:33" pos:end="999:46">out_file_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1001:9" pos:end="1001:46"><expr pos:start="1001:9" pos:end="1001:45"><name pos:start="1001:9" pos:end="1001:16"><name pos:start="1001:9" pos:end="1001:13">files</name><index pos:start="1001:14" pos:end="1001:16">[<expr pos:start="1001:15" pos:end="1001:15"><literal type="number" pos:start="1001:15" pos:end="1001:15">1</literal></expr>]</index></name> <operator pos:start="1001:18" pos:end="1001:18">=</operator> <name pos:start="1001:20" pos:end="1001:45"><name pos:start="1001:20" pos:end="1001:30">input_files</name><index pos:start="1001:31" pos:end="1001:45">[<expr pos:start="1001:32" pos:end="1001:44"><name pos:start="1001:32" pos:end="1001:44">in_file_index</name></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="1005:9" pos:end="1045:9">for <control pos:start="1005:13" pos:end="1005:31">(<init pos:start="1005:14" pos:end="1005:19"><expr pos:start="1005:14" pos:end="1005:18"><name pos:start="1005:14" pos:end="1005:14">j</name> <operator pos:start="1005:16" pos:end="1005:16">=</operator> <literal type="number" pos:start="1005:18" pos:end="1005:18">0</literal></expr>;</init> <condition pos:start="1005:21" pos:end="1005:26"><expr pos:start="1005:21" pos:end="1005:25"><name pos:start="1005:21" pos:end="1005:21">j</name> <operator pos:start="1005:23" pos:end="1005:23">&lt;</operator> <literal type="number" pos:start="1005:25" pos:end="1005:25">2</literal></expr>;</condition> <incr pos:start="1005:28" pos:end="1005:30"><expr pos:start="1005:28" pos:end="1005:30"><name pos:start="1005:28" pos:end="1005:28">j</name><operator pos:start="1005:29" pos:end="1005:30">++</operator></expr></incr>)</control> <block pos:start="1005:33" pos:end="1045:9">{<block_content pos:start="1007:13" pos:end="1043:13">

            <decl_stmt pos:start="1007:13" pos:end="1007:55"><decl pos:start="1007:13" pos:end="1007:54"><type pos:start="1007:13" pos:end="1007:27"><name pos:start="1007:13" pos:end="1007:25">AVMetaDataMap</name> <modifier pos:start="1007:27" pos:end="1007:27">*</modifier></type><name pos:start="1007:28" pos:end="1007:30">map</name> <init pos:start="1007:32" pos:end="1007:54">= <expr pos:start="1007:34" pos:end="1007:54"><operator pos:start="1007:34" pos:end="1007:34">&amp;</operator><name pos:start="1007:35" pos:end="1007:54"><name pos:start="1007:35" pos:end="1007:48">meta_data_maps</name><index pos:start="1007:49" pos:end="1007:51">[<expr pos:start="1007:50" pos:end="1007:50"><name pos:start="1007:50" pos:end="1007:50">i</name></expr>]</index><index pos:start="1007:52" pos:end="1007:54">[<expr pos:start="1007:53" pos:end="1007:53"><name pos:start="1007:53" pos:end="1007:53">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <switch pos:start="1011:13" pos:end="1043:13">switch <condition pos:start="1011:20" pos:end="1011:30">(<expr pos:start="1011:21" pos:end="1011:29"><name pos:start="1011:21" pos:end="1011:29"><name pos:start="1011:21" pos:end="1011:23">map</name><operator pos:start="1011:24" pos:end="1011:25">-&gt;</operator><name pos:start="1011:26" pos:end="1011:29">type</name></name></expr>)</condition> <block pos:start="1011:32" pos:end="1043:13">{<block_content pos:start="1013:13" pos:end="1041:22">

            <case pos:start="1013:13" pos:end="1013:21">case <expr pos:start="1013:18" pos:end="1013:20"><literal type="char" pos:start="1013:18" pos:end="1013:20">'g'</literal></expr>:</case>

                <expr_stmt pos:start="1015:17" pos:end="1015:46"><expr pos:start="1015:17" pos:end="1015:45"><name pos:start="1015:17" pos:end="1015:23"><name pos:start="1015:17" pos:end="1015:20">meta</name><index pos:start="1015:21" pos:end="1015:23">[<expr pos:start="1015:22" pos:end="1015:22"><name pos:start="1015:22" pos:end="1015:22">j</name></expr>]</index></name> <operator pos:start="1015:25" pos:end="1015:25">=</operator> <operator pos:start="1015:27" pos:end="1015:27">&amp;</operator><name pos:start="1015:28" pos:end="1015:35"><name pos:start="1015:28" pos:end="1015:32">files</name><index pos:start="1015:33" pos:end="1015:35">[<expr pos:start="1015:34" pos:end="1015:34"><name pos:start="1015:34" pos:end="1015:34">j</name></expr>]</index></name><operator pos:start="1015:36" pos:end="1015:37">-&gt;</operator><name pos:start="1015:38" pos:end="1015:45">metadata</name></expr>;</expr_stmt>

                <break pos:start="1017:17" pos:end="1017:22">break;</break>

            <case pos:start="1019:13" pos:end="1019:21">case <expr pos:start="1019:18" pos:end="1019:20"><literal type="char" pos:start="1019:18" pos:end="1019:20">'s'</literal></expr>:</case>

                <macro pos:start="1021:17" pos:end="1021:80"><name pos:start="1021:17" pos:end="1021:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1021:37" pos:end="1021:80">(<argument pos:start="1021:38" pos:end="1021:47">map-&gt;index</argument>, <argument pos:start="1021:50" pos:end="1021:69">files[j]-&gt;nb_streams</argument>, <argument pos:start="1021:72" pos:end="1021:79"><literal type="string" pos:start="1021:72" pos:end="1021:79">"stream"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1023:17" pos:end="1023:67"><expr pos:start="1023:17" pos:end="1023:66"><name pos:start="1023:17" pos:end="1023:23"><name pos:start="1023:17" pos:end="1023:20">meta</name><index pos:start="1023:21" pos:end="1023:23">[<expr pos:start="1023:22" pos:end="1023:22"><name pos:start="1023:22" pos:end="1023:22">j</name></expr>]</index></name> <operator pos:start="1023:25" pos:end="1023:25">=</operator> <operator pos:start="1023:27" pos:end="1023:27">&amp;</operator><name pos:start="1023:28" pos:end="1023:35"><name pos:start="1023:28" pos:end="1023:32">files</name><index pos:start="1023:33" pos:end="1023:35">[<expr pos:start="1023:34" pos:end="1023:34"><name pos:start="1023:34" pos:end="1023:34">j</name></expr>]</index></name><operator pos:start="1023:36" pos:end="1023:37">-&gt;</operator><name pos:start="1023:38" pos:end="1023:56"><name pos:start="1023:38" pos:end="1023:44">streams</name><index pos:start="1023:45" pos:end="1023:56">[<expr pos:start="1023:46" pos:end="1023:55"><name pos:start="1023:46" pos:end="1023:55"><name pos:start="1023:46" pos:end="1023:48">map</name><operator pos:start="1023:49" pos:end="1023:50">-&gt;</operator><name pos:start="1023:51" pos:end="1023:55">index</name></name></expr>]</index></name><operator pos:start="1023:57" pos:end="1023:58">-&gt;</operator><name pos:start="1023:59" pos:end="1023:66">metadata</name></expr>;</expr_stmt>

                <break pos:start="1025:17" pos:end="1025:22">break;</break>

            <case pos:start="1027:13" pos:end="1027:21">case <expr pos:start="1027:18" pos:end="1027:20"><literal type="char" pos:start="1027:18" pos:end="1027:20">'c'</literal></expr>:</case>

                <macro pos:start="1029:17" pos:end="1029:82"><name pos:start="1029:17" pos:end="1029:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1029:37" pos:end="1029:82">(<argument pos:start="1029:38" pos:end="1029:47">map-&gt;index</argument>, <argument pos:start="1029:50" pos:end="1029:70">files[j]-&gt;nb_chapters</argument>, <argument pos:start="1029:73" pos:end="1029:81"><literal type="string" pos:start="1029:73" pos:end="1029:81">"chapter"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1031:17" pos:end="1031:68"><expr pos:start="1031:17" pos:end="1031:67"><name pos:start="1031:17" pos:end="1031:23"><name pos:start="1031:17" pos:end="1031:20">meta</name><index pos:start="1031:21" pos:end="1031:23">[<expr pos:start="1031:22" pos:end="1031:22"><name pos:start="1031:22" pos:end="1031:22">j</name></expr>]</index></name> <operator pos:start="1031:25" pos:end="1031:25">=</operator> <operator pos:start="1031:27" pos:end="1031:27">&amp;</operator><name pos:start="1031:28" pos:end="1031:35"><name pos:start="1031:28" pos:end="1031:32">files</name><index pos:start="1031:33" pos:end="1031:35">[<expr pos:start="1031:34" pos:end="1031:34"><name pos:start="1031:34" pos:end="1031:34">j</name></expr>]</index></name><operator pos:start="1031:36" pos:end="1031:37">-&gt;</operator><name pos:start="1031:38" pos:end="1031:57"><name pos:start="1031:38" pos:end="1031:45">chapters</name><index pos:start="1031:46" pos:end="1031:57">[<expr pos:start="1031:47" pos:end="1031:56"><name pos:start="1031:47" pos:end="1031:56"><name pos:start="1031:47" pos:end="1031:49">map</name><operator pos:start="1031:50" pos:end="1031:51">-&gt;</operator><name pos:start="1031:52" pos:end="1031:56">index</name></name></expr>]</index></name><operator pos:start="1031:58" pos:end="1031:59">-&gt;</operator><name pos:start="1031:60" pos:end="1031:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1033:17" pos:end="1033:22">break;</break>

            <case pos:start="1035:13" pos:end="1035:21">case <expr pos:start="1035:18" pos:end="1035:20"><literal type="char" pos:start="1035:18" pos:end="1035:20">'p'</literal></expr>:</case>

                <macro pos:start="1037:17" pos:end="1037:82"><name pos:start="1037:17" pos:end="1037:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1037:37" pos:end="1037:82">(<argument pos:start="1037:38" pos:end="1037:47">map-&gt;index</argument>, <argument pos:start="1037:50" pos:end="1037:70">files[j]-&gt;nb_programs</argument>, <argument pos:start="1037:73" pos:end="1037:81"><literal type="string" pos:start="1037:73" pos:end="1037:81">"program"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1039:17" pos:end="1039:68"><expr pos:start="1039:17" pos:end="1039:67"><name pos:start="1039:17" pos:end="1039:23"><name pos:start="1039:17" pos:end="1039:20">meta</name><index pos:start="1039:21" pos:end="1039:23">[<expr pos:start="1039:22" pos:end="1039:22"><name pos:start="1039:22" pos:end="1039:22">j</name></expr>]</index></name> <operator pos:start="1039:25" pos:end="1039:25">=</operator> <operator pos:start="1039:27" pos:end="1039:27">&amp;</operator><name pos:start="1039:28" pos:end="1039:35"><name pos:start="1039:28" pos:end="1039:32">files</name><index pos:start="1039:33" pos:end="1039:35">[<expr pos:start="1039:34" pos:end="1039:34"><name pos:start="1039:34" pos:end="1039:34">j</name></expr>]</index></name><operator pos:start="1039:36" pos:end="1039:37">-&gt;</operator><name pos:start="1039:38" pos:end="1039:57"><name pos:start="1039:38" pos:end="1039:45">programs</name><index pos:start="1039:46" pos:end="1039:57">[<expr pos:start="1039:47" pos:end="1039:56"><name pos:start="1039:47" pos:end="1039:56"><name pos:start="1039:47" pos:end="1039:49">map</name><operator pos:start="1039:50" pos:end="1039:51">-&gt;</operator><name pos:start="1039:52" pos:end="1039:56">index</name></name></expr>]</index></name><operator pos:start="1039:58" pos:end="1039:59">-&gt;</operator><name pos:start="1039:60" pos:end="1039:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1041:17" pos:end="1041:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>



        <expr_stmt pos:start="1049:9" pos:end="1049:72"><expr pos:start="1049:9" pos:end="1049:71"><call pos:start="1049:9" pos:end="1049:71"><name pos:start="1049:9" pos:end="1049:24">av_metadata_copy</name><argument_list pos:start="1049:25" pos:end="1049:71">(<argument pos:start="1049:26" pos:end="1049:32"><expr pos:start="1049:26" pos:end="1049:32"><name pos:start="1049:26" pos:end="1049:32"><name pos:start="1049:26" pos:end="1049:29">meta</name><index pos:start="1049:30" pos:end="1049:32">[<expr pos:start="1049:31" pos:end="1049:31"><literal type="number" pos:start="1049:31" pos:end="1049:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1049:35" pos:end="1049:42"><expr pos:start="1049:35" pos:end="1049:42"><operator pos:start="1049:35" pos:end="1049:35">*</operator><name pos:start="1049:36" pos:end="1049:42"><name pos:start="1049:36" pos:end="1049:39">meta</name><index pos:start="1049:40" pos:end="1049:42">[<expr pos:start="1049:41" pos:end="1049:41"><literal type="number" pos:start="1049:41" pos:end="1049:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1049:45" pos:end="1049:70"><expr pos:start="1049:45" pos:end="1049:70"><name pos:start="1049:45" pos:end="1049:70">AV_METADATA_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1055:5" pos:end="1055:41">/* copy global metadata by default */</comment>

    <if_stmt pos:start="1057:5" pos:end="1067:5"><if pos:start="1057:5" pos:end="1067:5">if <condition pos:start="1057:8" pos:end="1057:33">(<expr pos:start="1057:9" pos:end="1057:32"><name pos:start="1057:9" pos:end="1057:32">metadata_global_autocopy</name></expr>)</condition> <block pos:start="1057:35" pos:end="1067:5">{<block_content pos:start="1061:9" pos:end="1065:57">



        <for pos:start="1061:9" pos:end="1065:57">for <control pos:start="1061:13" pos:end="1061:45">(<init pos:start="1061:14" pos:end="1061:19"><expr pos:start="1061:14" pos:end="1061:18"><name pos:start="1061:14" pos:end="1061:14">i</name> <operator pos:start="1061:16" pos:end="1061:16">=</operator> <literal type="number" pos:start="1061:18" pos:end="1061:18">0</literal></expr>;</init> <condition pos:start="1061:21" pos:end="1061:40"><expr pos:start="1061:21" pos:end="1061:39"><name pos:start="1061:21" pos:end="1061:21">i</name> <operator pos:start="1061:23" pos:end="1061:23">&lt;</operator> <name pos:start="1061:25" pos:end="1061:39">nb_output_files</name></expr>;</condition> <incr pos:start="1061:42" pos:end="1061:44"><expr pos:start="1061:42" pos:end="1061:44"><name pos:start="1061:42" pos:end="1061:42">i</name><operator pos:start="1061:43" pos:end="1061:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1063:13" pos:end="1065:57"><block_content pos:start="1063:13" pos:end="1065:57">

            <expr_stmt pos:start="1063:13" pos:end="1065:57"><expr pos:start="1063:13" pos:end="1065:56"><call pos:start="1063:13" pos:end="1065:56"><name pos:start="1063:13" pos:end="1063:28">av_metadata_copy</name><argument_list pos:start="1063:29" pos:end="1065:56">(<argument pos:start="1063:30" pos:end="1063:55"><expr pos:start="1063:30" pos:end="1063:55"><operator pos:start="1063:30" pos:end="1063:30">&amp;</operator><name pos:start="1063:31" pos:end="1063:45"><name pos:start="1063:31" pos:end="1063:42">output_files</name><index pos:start="1063:43" pos:end="1063:45">[<expr pos:start="1063:44" pos:end="1063:44"><name pos:start="1063:44" pos:end="1063:44">i</name></expr>]</index></name><operator pos:start="1063:46" pos:end="1063:47">-&gt;</operator><name pos:start="1063:48" pos:end="1063:55">metadata</name></expr></argument>, <argument pos:start="1063:58" pos:end="1063:81"><expr pos:start="1063:58" pos:end="1063:81"><name pos:start="1063:58" pos:end="1063:71"><name pos:start="1063:58" pos:end="1063:68">input_files</name><index pos:start="1063:69" pos:end="1063:71">[<expr pos:start="1063:70" pos:end="1063:70"><literal type="number" pos:start="1063:70" pos:end="1063:70">0</literal></expr>]</index></name><operator pos:start="1063:72" pos:end="1063:73">-&gt;</operator><name pos:start="1063:74" pos:end="1063:81">metadata</name></expr></argument>,

                             <argument pos:start="1065:30" pos:end="1065:55"><expr pos:start="1065:30" pos:end="1065:55"><name pos:start="1065:30" pos:end="1065:55">AV_METADATA_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="1071:5" pos:end="1071:49">/* copy chapters according to chapter maps */</comment>

    <for pos:start="1073:5" pos:end="1107:5">for <control pos:start="1073:9" pos:end="1073:41">(<init pos:start="1073:10" pos:end="1073:15"><expr pos:start="1073:10" pos:end="1073:14"><name pos:start="1073:10" pos:end="1073:10">i</name> <operator pos:start="1073:12" pos:end="1073:12">=</operator> <literal type="number" pos:start="1073:14" pos:end="1073:14">0</literal></expr>;</init> <condition pos:start="1073:17" pos:end="1073:36"><expr pos:start="1073:17" pos:end="1073:35"><name pos:start="1073:17" pos:end="1073:17">i</name> <operator pos:start="1073:19" pos:end="1073:19">&lt;</operator> <name pos:start="1073:21" pos:end="1073:35">nb_chapter_maps</name></expr>;</condition> <incr pos:start="1073:38" pos:end="1073:40"><expr pos:start="1073:38" pos:end="1073:40"><name pos:start="1073:38" pos:end="1073:38">i</name><operator pos:start="1073:39" pos:end="1073:40">++</operator></expr></incr>)</control> <block pos:start="1073:43" pos:end="1107:5">{<block_content pos:start="1075:9" pos:end="1105:39">

        <decl_stmt pos:start="1075:9" pos:end="1075:46"><decl pos:start="1075:9" pos:end="1075:45"><type pos:start="1075:9" pos:end="1075:11"><name pos:start="1075:9" pos:end="1075:11">int</name></type> <name pos:start="1075:13" pos:end="1075:18">infile</name>  <init pos:start="1075:21" pos:end="1075:45">= <expr pos:start="1075:23" pos:end="1075:45"><name pos:start="1075:23" pos:end="1075:37"><name pos:start="1075:23" pos:end="1075:34">chapter_maps</name><index pos:start="1075:35" pos:end="1075:37">[<expr pos:start="1075:36" pos:end="1075:36"><name pos:start="1075:36" pos:end="1075:36">i</name></expr>]</index></name><operator pos:start="1075:38" pos:end="1075:38">.</operator><name pos:start="1075:39" pos:end="1075:45">in_file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1077:9" pos:end="1077:47"><decl pos:start="1077:9" pos:end="1077:46"><type pos:start="1077:9" pos:end="1077:11"><name pos:start="1077:9" pos:end="1077:11">int</name></type> <name pos:start="1077:13" pos:end="1077:19">outfile</name> <init pos:start="1077:21" pos:end="1077:46">= <expr pos:start="1077:23" pos:end="1077:46"><name pos:start="1077:23" pos:end="1077:37"><name pos:start="1077:23" pos:end="1077:34">chapter_maps</name><index pos:start="1077:35" pos:end="1077:37">[<expr pos:start="1077:36" pos:end="1077:36"><name pos:start="1077:36" pos:end="1077:36">i</name></expr>]</index></name><operator pos:start="1077:38" pos:end="1077:38">.</operator><name pos:start="1077:39" pos:end="1077:46">out_file</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="1081:9" pos:end="1083:21"><if pos:start="1081:9" pos:end="1083:21">if <condition pos:start="1081:12" pos:end="1081:38">(<expr pos:start="1081:13" pos:end="1081:37"><name pos:start="1081:13" pos:end="1081:18">infile</name> <operator pos:start="1081:20" pos:end="1081:20">&lt;</operator> <literal type="number" pos:start="1081:22" pos:end="1081:22">0</literal> <operator pos:start="1081:24" pos:end="1081:25">||</operator> <name pos:start="1081:27" pos:end="1081:33">outfile</name> <operator pos:start="1081:35" pos:end="1081:35">&lt;</operator> <literal type="number" pos:start="1081:37" pos:end="1081:37">0</literal></expr>)</condition><block type="pseudo" pos:start="1083:13" pos:end="1083:21"><block_content pos:start="1083:13" pos:end="1083:21">

            <continue pos:start="1083:13" pos:end="1083:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="1085:9" pos:end="1093:9"><if pos:start="1085:9" pos:end="1093:9">if <condition pos:start="1085:12" pos:end="1085:37">(<expr pos:start="1085:13" pos:end="1085:36"><name pos:start="1085:13" pos:end="1085:18">infile</name> <operator pos:start="1085:20" pos:end="1085:21">&gt;=</operator> <name pos:start="1085:23" pos:end="1085:36">nb_input_files</name></expr>)</condition> <block pos:start="1085:39" pos:end="1093:9">{<block_content pos:start="1087:13" pos:end="1091:29">

            <expr_stmt pos:start="1087:13" pos:end="1087:104"><expr pos:start="1087:13" pos:end="1087:103"><call pos:start="1087:13" pos:end="1087:103"><name pos:start="1087:13" pos:end="1087:20">snprintf</name><argument_list pos:start="1087:21" pos:end="1087:103">(<argument pos:start="1087:22" pos:end="1087:26"><expr pos:start="1087:22" pos:end="1087:26"><name pos:start="1087:22" pos:end="1087:26">error</name></expr></argument>, <argument pos:start="1087:29" pos:end="1087:41"><expr pos:start="1087:29" pos:end="1087:41"><sizeof pos:start="1087:29" pos:end="1087:41">sizeof<argument_list pos:start="1087:35" pos:end="1087:41">(<argument pos:start="1087:36" pos:end="1087:40"><expr pos:start="1087:36" pos:end="1087:40"><name pos:start="1087:36" pos:end="1087:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1087:44" pos:end="1087:94"><expr pos:start="1087:44" pos:end="1087:94"><literal type="string" pos:start="1087:44" pos:end="1087:94">"Invalid input file index %d in chapter mapping.\n"</literal></expr></argument>, <argument pos:start="1087:97" pos:end="1087:102"><expr pos:start="1087:97" pos:end="1087:102"><name pos:start="1087:97" pos:end="1087:102">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1089:13" pos:end="1089:34"><expr pos:start="1089:13" pos:end="1089:33"><name pos:start="1089:13" pos:end="1089:15">ret</name> <operator pos:start="1089:17" pos:end="1089:17">=</operator> <call pos:start="1089:19" pos:end="1089:33"><name pos:start="1089:19" pos:end="1089:25">AVERROR</name><argument_list pos:start="1089:26" pos:end="1089:33">(<argument pos:start="1089:27" pos:end="1089:32"><expr pos:start="1089:27" pos:end="1089:32"><name pos:start="1089:27" pos:end="1089:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1091:13" pos:end="1091:29">goto <name pos:start="1091:18" pos:end="1091:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1095:9" pos:end="1103:9"><if pos:start="1095:9" pos:end="1103:9">if <condition pos:start="1095:12" pos:end="1095:39">(<expr pos:start="1095:13" pos:end="1095:38"><name pos:start="1095:13" pos:end="1095:19">outfile</name> <operator pos:start="1095:21" pos:end="1095:22">&gt;=</operator> <name pos:start="1095:24" pos:end="1095:38">nb_output_files</name></expr>)</condition> <block pos:start="1095:41" pos:end="1103:9">{<block_content pos:start="1097:13" pos:end="1101:29">

            <expr_stmt pos:start="1097:13" pos:end="1097:105"><expr pos:start="1097:13" pos:end="1097:104"><call pos:start="1097:13" pos:end="1097:104"><name pos:start="1097:13" pos:end="1097:20">snprintf</name><argument_list pos:start="1097:21" pos:end="1097:104">(<argument pos:start="1097:22" pos:end="1097:26"><expr pos:start="1097:22" pos:end="1097:26"><name pos:start="1097:22" pos:end="1097:26">error</name></expr></argument>, <argument pos:start="1097:29" pos:end="1097:41"><expr pos:start="1097:29" pos:end="1097:41"><sizeof pos:start="1097:29" pos:end="1097:41">sizeof<argument_list pos:start="1097:35" pos:end="1097:41">(<argument pos:start="1097:36" pos:end="1097:40"><expr pos:start="1097:36" pos:end="1097:40"><name pos:start="1097:36" pos:end="1097:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1097:44" pos:end="1097:95"><expr pos:start="1097:44" pos:end="1097:95"><literal type="string" pos:start="1097:44" pos:end="1097:95">"Invalid output file index %d in chapter mapping.\n"</literal></expr></argument>,<argument pos:start="1097:97" pos:end="1097:103"><expr pos:start="1097:97" pos:end="1097:103"><name pos:start="1097:97" pos:end="1097:103">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1099:13" pos:end="1099:34"><expr pos:start="1099:13" pos:end="1099:33"><name pos:start="1099:13" pos:end="1099:15">ret</name> <operator pos:start="1099:17" pos:end="1099:17">=</operator> <call pos:start="1099:19" pos:end="1099:33"><name pos:start="1099:19" pos:end="1099:25">AVERROR</name><argument_list pos:start="1099:26" pos:end="1099:33">(<argument pos:start="1099:27" pos:end="1099:32"><expr pos:start="1099:27" pos:end="1099:32"><name pos:start="1099:27" pos:end="1099:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1101:13" pos:end="1101:29">goto <name pos:start="1101:18" pos:end="1101:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1105:9" pos:end="1105:39"><expr pos:start="1105:9" pos:end="1105:38"><call pos:start="1105:9" pos:end="1105:38"><name pos:start="1105:9" pos:end="1105:21">copy_chapters</name><argument_list pos:start="1105:22" pos:end="1105:38">(<argument pos:start="1105:23" pos:end="1105:28"><expr pos:start="1105:23" pos:end="1105:28"><name pos:start="1105:23" pos:end="1105:28">infile</name></expr></argument>, <argument pos:start="1105:31" pos:end="1105:37"><expr pos:start="1105:31" pos:end="1105:37"><name pos:start="1105:31" pos:end="1105:37">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1111:5" pos:end="1111:62">/* copy chapters from the first input file that has them*/</comment>

    <if_stmt pos:start="1113:5" pos:end="1131:9"><if pos:start="1113:5" pos:end="1131:9">if <condition pos:start="1113:8" pos:end="1113:25">(<expr pos:start="1113:9" pos:end="1113:24"><operator pos:start="1113:9" pos:end="1113:9">!</operator><name pos:start="1113:10" pos:end="1113:24">nb_chapter_maps</name></expr>)</condition><block type="pseudo" pos:start="1115:9" pos:end="1131:9"><block_content pos:start="1115:9" pos:end="1131:9">

        <for pos:start="1115:9" pos:end="1131:9">for <control pos:start="1115:13" pos:end="1115:44">(<init pos:start="1115:14" pos:end="1115:19"><expr pos:start="1115:14" pos:end="1115:18"><name pos:start="1115:14" pos:end="1115:14">i</name> <operator pos:start="1115:16" pos:end="1115:16">=</operator> <literal type="number" pos:start="1115:18" pos:end="1115:18">0</literal></expr>;</init> <condition pos:start="1115:21" pos:end="1115:39"><expr pos:start="1115:21" pos:end="1115:38"><name pos:start="1115:21" pos:end="1115:21">i</name> <operator pos:start="1115:23" pos:end="1115:23">&lt;</operator> <name pos:start="1115:25" pos:end="1115:38">nb_input_files</name></expr>;</condition> <incr pos:start="1115:41" pos:end="1115:43"><expr pos:start="1115:41" pos:end="1115:43"><name pos:start="1115:41" pos:end="1115:41">i</name><operator pos:start="1115:42" pos:end="1115:43">++</operator></expr></incr>)</control> <block pos:start="1115:46" pos:end="1131:9">{<block_content pos:start="1117:13" pos:end="1129:18">

            <if_stmt pos:start="1117:13" pos:end="1119:25"><if pos:start="1117:13" pos:end="1119:25">if <condition pos:start="1117:16" pos:end="1117:45">(<expr pos:start="1117:17" pos:end="1117:44"><operator pos:start="1117:17" pos:end="1117:17">!</operator><name pos:start="1117:18" pos:end="1117:31"><name pos:start="1117:18" pos:end="1117:28">input_files</name><index pos:start="1117:29" pos:end="1117:31">[<expr pos:start="1117:30" pos:end="1117:30"><name pos:start="1117:30" pos:end="1117:30">i</name></expr>]</index></name><operator pos:start="1117:32" pos:end="1117:33">-&gt;</operator><name pos:start="1117:34" pos:end="1117:44">nb_chapters</name></expr>)</condition><block type="pseudo" pos:start="1119:17" pos:end="1119:25"><block_content pos:start="1119:17" pos:end="1119:25">

                <continue pos:start="1119:17" pos:end="1119:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="1123:13" pos:end="1127:37">for <control pos:start="1123:17" pos:end="1123:49">(<init pos:start="1123:18" pos:end="1123:23"><expr pos:start="1123:18" pos:end="1123:22"><name pos:start="1123:18" pos:end="1123:18">j</name> <operator pos:start="1123:20" pos:end="1123:20">=</operator> <literal type="number" pos:start="1123:22" pos:end="1123:22">0</literal></expr>;</init> <condition pos:start="1123:25" pos:end="1123:44"><expr pos:start="1123:25" pos:end="1123:43"><name pos:start="1123:25" pos:end="1123:25">j</name> <operator pos:start="1123:27" pos:end="1123:27">&lt;</operator> <name pos:start="1123:29" pos:end="1123:43">nb_output_files</name></expr>;</condition> <incr pos:start="1123:46" pos:end="1123:48"><expr pos:start="1123:46" pos:end="1123:48"><name pos:start="1123:46" pos:end="1123:46">j</name><operator pos:start="1123:47" pos:end="1123:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1125:17" pos:end="1127:37"><block_content pos:start="1125:17" pos:end="1127:37">

                <if_stmt pos:start="1125:17" pos:end="1127:37"><if pos:start="1125:17" pos:end="1127:37">if <condition pos:start="1125:20" pos:end="1125:52">(<expr pos:start="1125:21" pos:end="1125:51"><operator pos:start="1125:21" pos:end="1125:21">(</operator><name pos:start="1125:22" pos:end="1125:24">ret</name> <operator pos:start="1125:26" pos:end="1125:26">=</operator> <call pos:start="1125:28" pos:end="1125:46"><name pos:start="1125:28" pos:end="1125:40">copy_chapters</name><argument_list pos:start="1125:41" pos:end="1125:46">(<argument pos:start="1125:42" pos:end="1125:42"><expr pos:start="1125:42" pos:end="1125:42"><name pos:start="1125:42" pos:end="1125:42">i</name></expr></argument>, <argument pos:start="1125:45" pos:end="1125:45"><expr pos:start="1125:45" pos:end="1125:45"><name pos:start="1125:45" pos:end="1125:45">j</name></expr></argument>)</argument_list></call><operator pos:start="1125:47" pos:end="1125:47">)</operator> <operator pos:start="1125:49" pos:end="1125:49">&lt;</operator> <literal type="number" pos:start="1125:51" pos:end="1125:51">0</literal></expr>)</condition><block type="pseudo" pos:start="1127:21" pos:end="1127:37"><block_content pos:start="1127:21" pos:end="1127:37">

                    <goto pos:start="1127:21" pos:end="1127:37">goto <name pos:start="1127:26" pos:end="1127:36">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>

            <break pos:start="1129:13" pos:end="1129:18">break;</break>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1135:5" pos:end="1135:43">/* open files and write file headers */</comment>

    <for pos:start="1137:5" pos:end="1157:5">for<control pos:start="1137:8" pos:end="1137:34">(<init pos:start="1137:9" pos:end="1137:12"><expr pos:start="1137:9" pos:end="1137:11"><name pos:start="1137:9" pos:end="1137:9">i</name><operator pos:start="1137:10" pos:end="1137:10">=</operator><literal type="number" pos:start="1137:11" pos:end="1137:11">0</literal></expr>;</init><condition pos:start="1137:13" pos:end="1137:30"><expr pos:start="1137:13" pos:end="1137:29"><name pos:start="1137:13" pos:end="1137:13">i</name><operator pos:start="1137:14" pos:end="1137:14">&lt;</operator><name pos:start="1137:15" pos:end="1137:29">nb_output_files</name></expr>;</condition><incr pos:start="1137:31" pos:end="1137:33"><expr pos:start="1137:31" pos:end="1137:33"><name pos:start="1137:31" pos:end="1137:31">i</name><operator pos:start="1137:32" pos:end="1137:33">++</operator></expr></incr>)</control> <block pos:start="1137:36" pos:end="1157:5">{<block_content pos:start="1139:9" pos:end="1155:9">

        <expr_stmt pos:start="1139:9" pos:end="1139:29"><expr pos:start="1139:9" pos:end="1139:28"><name pos:start="1139:9" pos:end="1139:10">os</name> <operator pos:start="1139:12" pos:end="1139:12">=</operator> <name pos:start="1139:14" pos:end="1139:28"><name pos:start="1139:14" pos:end="1139:25">output_files</name><index pos:start="1139:26" pos:end="1139:28">[<expr pos:start="1139:27" pos:end="1139:27"><name pos:start="1139:27" pos:end="1139:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1141:9" pos:end="1149:9"><if pos:start="1141:9" pos:end="1149:9">if <condition pos:start="1141:12" pos:end="1141:36">(<expr pos:start="1141:13" pos:end="1141:35"><call pos:start="1141:13" pos:end="1141:31"><name pos:start="1141:13" pos:end="1141:27">av_write_header</name><argument_list pos:start="1141:28" pos:end="1141:31">(<argument pos:start="1141:29" pos:end="1141:30"><expr pos:start="1141:29" pos:end="1141:30"><name pos:start="1141:29" pos:end="1141:30">os</name></expr></argument>)</argument_list></call> <operator pos:start="1141:33" pos:end="1141:33">&lt;</operator> <literal type="number" pos:start="1141:35" pos:end="1141:35">0</literal></expr>)</condition> <block pos:start="1141:38" pos:end="1149:9">{<block_content pos:start="1143:13" pos:end="1147:29">

            <expr_stmt pos:start="1143:13" pos:end="1143:123"><expr pos:start="1143:13" pos:end="1143:122"><call pos:start="1143:13" pos:end="1143:122"><name pos:start="1143:13" pos:end="1143:20">snprintf</name><argument_list pos:start="1143:21" pos:end="1143:122">(<argument pos:start="1143:22" pos:end="1143:26"><expr pos:start="1143:22" pos:end="1143:26"><name pos:start="1143:22" pos:end="1143:26">error</name></expr></argument>, <argument pos:start="1143:29" pos:end="1143:41"><expr pos:start="1143:29" pos:end="1143:41"><sizeof pos:start="1143:29" pos:end="1143:41">sizeof<argument_list pos:start="1143:35" pos:end="1143:41">(<argument pos:start="1143:36" pos:end="1143:40"><expr pos:start="1143:36" pos:end="1143:40"><name pos:start="1143:36" pos:end="1143:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1143:44" pos:end="1143:118"><expr pos:start="1143:44" pos:end="1143:118"><literal type="string" pos:start="1143:44" pos:end="1143:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="1143:121" pos:end="1143:121"><expr pos:start="1143:121" pos:end="1143:121"><name pos:start="1143:121" pos:end="1143:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1145:13" pos:end="1145:34"><expr pos:start="1145:13" pos:end="1145:33"><name pos:start="1145:13" pos:end="1145:15">ret</name> <operator pos:start="1145:17" pos:end="1145:17">=</operator> <call pos:start="1145:19" pos:end="1145:33"><name pos:start="1145:19" pos:end="1145:25">AVERROR</name><argument_list pos:start="1145:26" pos:end="1145:33">(<argument pos:start="1145:27" pos:end="1145:32"><expr pos:start="1145:27" pos:end="1145:32"><name pos:start="1145:27" pos:end="1145:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1147:13" pos:end="1147:29">goto <name pos:start="1147:18" pos:end="1147:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1151:9" pos:end="1155:9"><if pos:start="1151:9" pos:end="1155:9">if <condition pos:start="1151:12" pos:end="1151:58">(<expr pos:start="1151:13" pos:end="1151:57"><call pos:start="1151:13" pos:end="1151:57"><name pos:start="1151:13" pos:end="1151:18">strcmp</name><argument_list pos:start="1151:19" pos:end="1151:57">(<argument pos:start="1151:20" pos:end="1151:49"><expr pos:start="1151:20" pos:end="1151:49"><name pos:start="1151:20" pos:end="1151:34"><name pos:start="1151:20" pos:end="1151:31">output_files</name><index pos:start="1151:32" pos:end="1151:34">[<expr pos:start="1151:33" pos:end="1151:33"><name pos:start="1151:33" pos:end="1151:33">i</name></expr>]</index></name><operator pos:start="1151:35" pos:end="1151:36">-&gt;</operator><name pos:start="1151:37" pos:end="1151:49"><name pos:start="1151:37" pos:end="1151:43">oformat</name><operator pos:start="1151:44" pos:end="1151:45">-&gt;</operator><name pos:start="1151:46" pos:end="1151:49">name</name></name></expr></argument>, <argument pos:start="1151:52" pos:end="1151:56"><expr pos:start="1151:52" pos:end="1151:56"><literal type="string" pos:start="1151:52" pos:end="1151:56">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1151:60" pos:end="1155:9">{<block_content pos:start="1153:13" pos:end="1153:25">

            <expr_stmt pos:start="1153:13" pos:end="1153:25"><expr pos:start="1153:13" pos:end="1153:24"><name pos:start="1153:13" pos:end="1153:20">want_sdp</name> <operator pos:start="1153:22" pos:end="1153:22">=</operator> <literal type="number" pos:start="1153:24" pos:end="1153:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="1161:2" pos:end="1161:13"><name pos:start="1161:2" pos:end="1161:12">dump_format</name>:</label>

    <comment type="block" pos:start="1163:5" pos:end="1165:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="1167:5" pos:end="1171:5">for<control pos:start="1167:8" pos:end="1167:34">(<init pos:start="1167:9" pos:end="1167:12"><expr pos:start="1167:9" pos:end="1167:11"><name pos:start="1167:9" pos:end="1167:9">i</name><operator pos:start="1167:10" pos:end="1167:10">=</operator><literal type="number" pos:start="1167:11" pos:end="1167:11">0</literal></expr>;</init><condition pos:start="1167:13" pos:end="1167:30"><expr pos:start="1167:13" pos:end="1167:29"><name pos:start="1167:13" pos:end="1167:13">i</name><operator pos:start="1167:14" pos:end="1167:14">&lt;</operator><name pos:start="1167:15" pos:end="1167:29">nb_output_files</name></expr>;</condition><incr pos:start="1167:31" pos:end="1167:33"><expr pos:start="1167:31" pos:end="1167:33"><name pos:start="1167:31" pos:end="1167:31">i</name><operator pos:start="1167:32" pos:end="1167:33">++</operator></expr></incr>)</control> <block pos:start="1167:36" pos:end="1171:5">{<block_content pos:start="1169:9" pos:end="1169:73">

        <expr_stmt pos:start="1169:9" pos:end="1169:73"><expr pos:start="1169:9" pos:end="1169:72"><call pos:start="1169:9" pos:end="1169:72"><name pos:start="1169:9" pos:end="1169:22">av_dump_format</name><argument_list pos:start="1169:23" pos:end="1169:72">(<argument pos:start="1169:24" pos:end="1169:38"><expr pos:start="1169:24" pos:end="1169:38"><name pos:start="1169:24" pos:end="1169:38"><name pos:start="1169:24" pos:end="1169:35">output_files</name><index pos:start="1169:36" pos:end="1169:38">[<expr pos:start="1169:37" pos:end="1169:37"><name pos:start="1169:37" pos:end="1169:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1169:41" pos:end="1169:41"><expr pos:start="1169:41" pos:end="1169:41"><name pos:start="1169:41" pos:end="1169:41">i</name></expr></argument>, <argument pos:start="1169:44" pos:end="1169:68"><expr pos:start="1169:44" pos:end="1169:68"><name pos:start="1169:44" pos:end="1169:58"><name pos:start="1169:44" pos:end="1169:55">output_files</name><index pos:start="1169:56" pos:end="1169:58">[<expr pos:start="1169:57" pos:end="1169:57"><name pos:start="1169:57" pos:end="1169:57">i</name></expr>]</index></name><operator pos:start="1169:59" pos:end="1169:60">-&gt;</operator><name pos:start="1169:61" pos:end="1169:68">filename</name></expr></argument>, <argument pos:start="1169:71" pos:end="1169:71"><expr pos:start="1169:71" pos:end="1169:71"><literal type="number" pos:start="1169:71" pos:end="1169:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1175:5" pos:end="1175:33">/* dump the stream mapping */</comment>

    <if_stmt pos:start="1177:5" pos:end="1207:5"><if pos:start="1177:5" pos:end="1207:5">if <condition pos:start="1177:8" pos:end="1177:21">(<expr pos:start="1177:9" pos:end="1177:20"><name pos:start="1177:9" pos:end="1177:15">verbose</name> <operator pos:start="1177:17" pos:end="1177:18">&gt;=</operator> <literal type="number" pos:start="1177:20" pos:end="1177:20">0</literal></expr>)</condition> <block pos:start="1177:23" pos:end="1207:5">{<block_content pos:start="1179:9" pos:end="1205:9">

        <expr_stmt pos:start="1179:9" pos:end="1179:45"><expr pos:start="1179:9" pos:end="1179:44"><call pos:start="1179:9" pos:end="1179:44"><name pos:start="1179:9" pos:end="1179:15">fprintf</name><argument_list pos:start="1179:16" pos:end="1179:44">(<argument pos:start="1179:17" pos:end="1179:22"><expr pos:start="1179:17" pos:end="1179:22"><name pos:start="1179:17" pos:end="1179:22">stderr</name></expr></argument>, <argument pos:start="1179:25" pos:end="1179:43"><expr pos:start="1179:25" pos:end="1179:43"><literal type="string" pos:start="1179:25" pos:end="1179:43">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="1181:9" pos:end="1205:9">for<control pos:start="1181:12" pos:end="1181:34">(<init pos:start="1181:13" pos:end="1181:16"><expr pos:start="1181:13" pos:end="1181:15"><name pos:start="1181:13" pos:end="1181:13">i</name><operator pos:start="1181:14" pos:end="1181:14">=</operator><literal type="number" pos:start="1181:15" pos:end="1181:15">0</literal></expr>;</init><condition pos:start="1181:17" pos:end="1181:30"><expr pos:start="1181:17" pos:end="1181:29"><name pos:start="1181:17" pos:end="1181:17">i</name><operator pos:start="1181:18" pos:end="1181:18">&lt;</operator><name pos:start="1181:19" pos:end="1181:29">nb_ostreams</name></expr>;</condition><incr pos:start="1181:31" pos:end="1181:33"><expr pos:start="1181:31" pos:end="1181:33"><name pos:start="1181:31" pos:end="1181:31">i</name><operator pos:start="1181:32" pos:end="1181:33">++</operator></expr></incr>)</control> <block pos:start="1181:36" pos:end="1205:9">{<block_content pos:start="1183:13" pos:end="1203:34">

            <expr_stmt pos:start="1183:13" pos:end="1183:31"><expr pos:start="1183:13" pos:end="1183:30"><name pos:start="1183:13" pos:end="1183:15">ost</name> <operator pos:start="1183:17" pos:end="1183:17">=</operator> <name pos:start="1183:19" pos:end="1183:30"><name pos:start="1183:19" pos:end="1183:27">ost_table</name><index pos:start="1183:28" pos:end="1183:30">[<expr pos:start="1183:29" pos:end="1183:29"><name pos:start="1183:29" pos:end="1183:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1185:13" pos:end="1193:32"><expr pos:start="1185:13" pos:end="1193:31"><call pos:start="1185:13" pos:end="1193:31"><name pos:start="1185:13" pos:end="1185:19">fprintf</name><argument_list pos:start="1185:20" pos:end="1193:31">(<argument pos:start="1185:21" pos:end="1185:26"><expr pos:start="1185:21" pos:end="1185:26"><name pos:start="1185:21" pos:end="1185:26">stderr</name></expr></argument>, <argument pos:start="1185:29" pos:end="1185:55"><expr pos:start="1185:29" pos:end="1185:55"><literal type="string" pos:start="1185:29" pos:end="1185:55">"  Stream #%d.%d -&gt; #%d.%d"</literal></expr></argument>,

                    <argument pos:start="1187:21" pos:end="1187:60"><expr pos:start="1187:21" pos:end="1187:60"><name pos:start="1187:21" pos:end="1187:48"><name pos:start="1187:21" pos:end="1187:29">ist_table</name><index pos:start="1187:30" pos:end="1187:48">[<expr pos:start="1187:31" pos:end="1187:47"><name pos:start="1187:31" pos:end="1187:47"><name pos:start="1187:31" pos:end="1187:33">ost</name><operator pos:start="1187:34" pos:end="1187:35">-&gt;</operator><name pos:start="1187:36" pos:end="1187:47">source_index</name></name></expr>]</index></name><operator pos:start="1187:49" pos:end="1187:50">-&gt;</operator><name pos:start="1187:51" pos:end="1187:60">file_index</name></expr></argument>,

                    <argument pos:start="1189:21" pos:end="1189:55"><expr pos:start="1189:21" pos:end="1189:55"><name pos:start="1189:21" pos:end="1189:48"><name pos:start="1189:21" pos:end="1189:29">ist_table</name><index pos:start="1189:30" pos:end="1189:48">[<expr pos:start="1189:31" pos:end="1189:47"><name pos:start="1189:31" pos:end="1189:47"><name pos:start="1189:31" pos:end="1189:33">ost</name><operator pos:start="1189:34" pos:end="1189:35">-&gt;</operator><name pos:start="1189:36" pos:end="1189:47">source_index</name></name></expr>]</index></name><operator pos:start="1189:49" pos:end="1189:50">-&gt;</operator><name pos:start="1189:51" pos:end="1189:55">index</name></expr></argument>,

                    <argument pos:start="1191:21" pos:end="1191:35"><expr pos:start="1191:21" pos:end="1191:35"><name pos:start="1191:21" pos:end="1191:35"><name pos:start="1191:21" pos:end="1191:23">ost</name><operator pos:start="1191:24" pos:end="1191:25">-&gt;</operator><name pos:start="1191:26" pos:end="1191:35">file_index</name></name></expr></argument>,

                    <argument pos:start="1193:21" pos:end="1193:30"><expr pos:start="1193:21" pos:end="1193:30"><name pos:start="1193:21" pos:end="1193:30"><name pos:start="1193:21" pos:end="1193:23">ost</name><operator pos:start="1193:24" pos:end="1193:25">-&gt;</operator><name pos:start="1193:26" pos:end="1193:30">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1195:13" pos:end="1201:46"><if pos:start="1195:13" pos:end="1201:46">if <condition pos:start="1195:16" pos:end="1195:62">(<expr pos:start="1195:17" pos:end="1195:61"><name pos:start="1195:17" pos:end="1195:29"><name pos:start="1195:17" pos:end="1195:19">ost</name><operator pos:start="1195:20" pos:end="1195:21">-&gt;</operator><name pos:start="1195:22" pos:end="1195:29">sync_ist</name></name> <operator pos:start="1195:31" pos:end="1195:32">!=</operator> <name pos:start="1195:34" pos:end="1195:61"><name pos:start="1195:34" pos:end="1195:42">ist_table</name><index pos:start="1195:43" pos:end="1195:61">[<expr pos:start="1195:44" pos:end="1195:60"><name pos:start="1195:44" pos:end="1195:60"><name pos:start="1195:44" pos:end="1195:46">ost</name><operator pos:start="1195:47" pos:end="1195:48">-&gt;</operator><name pos:start="1195:49" pos:end="1195:60">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1197:17" pos:end="1201:46"><block_content pos:start="1197:17" pos:end="1201:46">

                <expr_stmt pos:start="1197:17" pos:end="1201:46"><expr pos:start="1197:17" pos:end="1201:45"><call pos:start="1197:17" pos:end="1201:45"><name pos:start="1197:17" pos:end="1197:23">fprintf</name><argument_list pos:start="1197:24" pos:end="1201:45">(<argument pos:start="1197:25" pos:end="1197:30"><expr pos:start="1197:25" pos:end="1197:30"><name pos:start="1197:25" pos:end="1197:30">stderr</name></expr></argument>, <argument pos:start="1197:33" pos:end="1197:48"><expr pos:start="1197:33" pos:end="1197:48"><literal type="string" pos:start="1197:33" pos:end="1197:48">" [sync #%d.%d]"</literal></expr></argument>,

                        <argument pos:start="1199:25" pos:end="1199:49"><expr pos:start="1199:25" pos:end="1199:49"><name pos:start="1199:25" pos:end="1199:49"><name pos:start="1199:25" pos:end="1199:27">ost</name><operator pos:start="1199:28" pos:end="1199:29">-&gt;</operator><name pos:start="1199:30" pos:end="1199:37">sync_ist</name><operator pos:start="1199:38" pos:end="1199:39">-&gt;</operator><name pos:start="1199:40" pos:end="1199:49">file_index</name></name></expr></argument>,

                        <argument pos:start="1201:25" pos:end="1201:44"><expr pos:start="1201:25" pos:end="1201:44"><name pos:start="1201:25" pos:end="1201:44"><name pos:start="1201:25" pos:end="1201:27">ost</name><operator pos:start="1201:28" pos:end="1201:29">-&gt;</operator><name pos:start="1201:30" pos:end="1201:37">sync_ist</name><operator pos:start="1201:38" pos:end="1201:39">-&gt;</operator><name pos:start="1201:40" pos:end="1201:44">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1203:13" pos:end="1203:34"><expr pos:start="1203:13" pos:end="1203:33"><call pos:start="1203:13" pos:end="1203:33"><name pos:start="1203:13" pos:end="1203:19">fprintf</name><argument_list pos:start="1203:20" pos:end="1203:33">(<argument pos:start="1203:21" pos:end="1203:26"><expr pos:start="1203:21" pos:end="1203:26"><name pos:start="1203:21" pos:end="1203:26">stderr</name></expr></argument>, <argument pos:start="1203:29" pos:end="1203:32"><expr pos:start="1203:29" pos:end="1203:32"><literal type="string" pos:start="1203:29" pos:end="1203:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1211:5" pos:end="1217:5"><if pos:start="1211:5" pos:end="1217:5">if <condition pos:start="1211:8" pos:end="1211:12">(<expr pos:start="1211:9" pos:end="1211:11"><name pos:start="1211:9" pos:end="1211:11">ret</name></expr>)</condition> <block pos:start="1211:14" pos:end="1217:5">{<block_content pos:start="1213:9" pos:end="1215:18">

        <expr_stmt pos:start="1213:9" pos:end="1213:39"><expr pos:start="1213:9" pos:end="1213:38"><call pos:start="1213:9" pos:end="1213:38"><name pos:start="1213:9" pos:end="1213:15">fprintf</name><argument_list pos:start="1213:16" pos:end="1213:38">(<argument pos:start="1213:17" pos:end="1213:22"><expr pos:start="1213:17" pos:end="1213:22"><name pos:start="1213:17" pos:end="1213:22">stderr</name></expr></argument>, <argument pos:start="1213:25" pos:end="1213:30"><expr pos:start="1213:25" pos:end="1213:30"><literal type="string" pos:start="1213:25" pos:end="1213:30">"%s\n"</literal></expr></argument>, <argument pos:start="1213:33" pos:end="1213:37"><expr pos:start="1213:33" pos:end="1213:37"><name pos:start="1213:33" pos:end="1213:37">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1215:9" pos:end="1215:18">goto <name pos:start="1215:14" pos:end="1215:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1221:5" pos:end="1225:5"><if pos:start="1221:5" pos:end="1225:5">if <condition pos:start="1221:8" pos:end="1221:17">(<expr pos:start="1221:9" pos:end="1221:16"><name pos:start="1221:9" pos:end="1221:16">want_sdp</name></expr>)</condition> <block pos:start="1221:19" pos:end="1225:5">{<block_content pos:start="1223:9" pos:end="1223:49">

        <expr_stmt pos:start="1223:9" pos:end="1223:49"><expr pos:start="1223:9" pos:end="1223:48"><call pos:start="1223:9" pos:end="1223:48"><name pos:start="1223:9" pos:end="1223:17">print_sdp</name><argument_list pos:start="1223:18" pos:end="1223:48">(<argument pos:start="1223:19" pos:end="1223:30"><expr pos:start="1223:19" pos:end="1223:30"><name pos:start="1223:19" pos:end="1223:30">output_files</name></expr></argument>, <argument pos:start="1223:33" pos:end="1223:47"><expr pos:start="1223:33" pos:end="1223:47"><name pos:start="1223:33" pos:end="1223:47">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1229:5" pos:end="1237:5"><if pos:start="1229:5" pos:end="1237:5">if <condition pos:start="1229:8" pos:end="1229:21">(<expr pos:start="1229:9" pos:end="1229:20"><operator pos:start="1229:9" pos:end="1229:9">!</operator><name pos:start="1229:10" pos:end="1229:20">using_stdin</name></expr>)</condition> <block pos:start="1229:23" pos:end="1237:5">{<block_content pos:start="1231:9" pos:end="1235:50">

        <if_stmt pos:start="1231:9" pos:end="1233:60"><if pos:start="1231:9" pos:end="1233:60">if<condition pos:start="1231:11" pos:end="1231:24">(<expr pos:start="1231:12" pos:end="1231:23"><name pos:start="1231:12" pos:end="1231:18">verbose</name> <operator pos:start="1231:20" pos:end="1231:21">&gt;=</operator> <literal type="number" pos:start="1231:23" pos:end="1231:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1233:13" pos:end="1233:60"><block_content pos:start="1233:13" pos:end="1233:60">

            <expr_stmt pos:start="1233:13" pos:end="1233:60"><expr pos:start="1233:13" pos:end="1233:59"><call pos:start="1233:13" pos:end="1233:59"><name pos:start="1233:13" pos:end="1233:19">fprintf</name><argument_list pos:start="1233:20" pos:end="1233:59">(<argument pos:start="1233:21" pos:end="1233:26"><expr pos:start="1233:21" pos:end="1233:26"><name pos:start="1233:21" pos:end="1233:26">stderr</name></expr></argument>, <argument pos:start="1233:29" pos:end="1233:58"><expr pos:start="1233:29" pos:end="1233:58"><literal type="string" pos:start="1233:29" pos:end="1233:58">"Press [q] to stop encoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1235:9" pos:end="1235:50"><expr pos:start="1235:9" pos:end="1235:49"><call pos:start="1235:9" pos:end="1235:49"><name pos:start="1235:9" pos:end="1235:28">url_set_interrupt_cb</name><argument_list pos:start="1235:29" pos:end="1235:49">(<argument pos:start="1235:30" pos:end="1235:48"><expr pos:start="1235:30" pos:end="1235:48"><name pos:start="1235:30" pos:end="1235:48">decode_interrupt_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1239:5" pos:end="1239:16"><expr pos:start="1239:5" pos:end="1239:15"><call pos:start="1239:5" pos:end="1239:15"><name pos:start="1239:5" pos:end="1239:13">term_init</name><argument_list pos:start="1239:14" pos:end="1239:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="1243:5" pos:end="1243:31"><expr pos:start="1243:5" pos:end="1243:30"><name pos:start="1243:5" pos:end="1243:15">timer_start</name> <operator pos:start="1243:17" pos:end="1243:17">=</operator> <call pos:start="1243:19" pos:end="1243:30"><name pos:start="1243:19" pos:end="1243:28">av_gettime</name><argument_list pos:start="1243:29" pos:end="1243:30">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="1247:5" pos:end="1537:5">for<control pos:start="1247:8" pos:end="1247:33">(<init pos:start="1247:9" pos:end="1247:9">;</init> <condition pos:start="1247:11" pos:end="1247:32"><expr pos:start="1247:11" pos:end="1247:31"><name pos:start="1247:11" pos:end="1247:26">received_sigterm</name> <operator pos:start="1247:28" pos:end="1247:29">==</operator> <literal type="number" pos:start="1247:31" pos:end="1247:31">0</literal></expr>;</condition><incr/>)</control> <block pos:start="1247:35" pos:end="1537:5">{<block_content pos:start="1249:9" pos:end="1535:62">

        <decl_stmt pos:start="1249:9" pos:end="1249:34"><decl pos:start="1249:9" pos:end="1249:22"><type pos:start="1249:9" pos:end="1249:11"><name pos:start="1249:9" pos:end="1249:11">int</name></type> <name pos:start="1249:13" pos:end="1249:22">file_index</name></decl>, <decl pos:start="1249:25" pos:end="1249:33"><type ref="prev" pos:start="1249:9" pos:end="1249:11"/><name pos:start="1249:25" pos:end="1249:33">ist_index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1251:9" pos:end="1251:21"><decl pos:start="1251:9" pos:end="1251:20"><type pos:start="1251:9" pos:end="1251:16"><name pos:start="1251:9" pos:end="1251:16">AVPacket</name></type> <name pos:start="1251:18" pos:end="1251:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1253:9" pos:end="1253:24"><decl pos:start="1253:9" pos:end="1253:23"><type pos:start="1253:9" pos:end="1253:14"><name pos:start="1253:9" pos:end="1253:14">double</name></type> <name pos:start="1253:16" pos:end="1253:23">ipts_min</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1255:9" pos:end="1255:24"><decl pos:start="1255:9" pos:end="1255:23"><type pos:start="1255:9" pos:end="1255:14"><name pos:start="1255:9" pos:end="1255:14">double</name></type> <name pos:start="1255:16" pos:end="1255:23">opts_min</name></decl>;</decl_stmt>



    <label pos:start="1259:5" pos:end="1259:9"><name pos:start="1259:5" pos:end="1259:8">redo</name>:</label>

        <expr_stmt pos:start="1261:9" pos:end="1261:24"><expr pos:start="1261:9" pos:end="1261:23"><name pos:start="1261:9" pos:end="1261:16">ipts_min</name><operator pos:start="1261:17" pos:end="1261:17">=</operator> <literal type="number" pos:start="1261:19" pos:end="1261:23">1e100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1263:9" pos:end="1263:24"><expr pos:start="1263:9" pos:end="1263:23"><name pos:start="1263:9" pos:end="1263:16">opts_min</name><operator pos:start="1263:17" pos:end="1263:17">=</operator> <literal type="number" pos:start="1263:19" pos:end="1263:23">1e100</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="1265:9" pos:end="1265:35">/* if 'q' pressed, exits */</comment>

        <if_stmt pos:start="1267:9" pos:end="1281:9"><if pos:start="1267:9" pos:end="1281:9">if <condition pos:start="1267:12" pos:end="1267:25">(<expr pos:start="1267:13" pos:end="1267:24"><operator pos:start="1267:13" pos:end="1267:13">!</operator><name pos:start="1267:14" pos:end="1267:24">using_stdin</name></expr>)</condition> <block pos:start="1267:27" pos:end="1281:9">{<block_content pos:start="1269:13" pos:end="1279:22">

            <if_stmt pos:start="1269:13" pos:end="1271:22"><if pos:start="1269:13" pos:end="1271:22">if <condition pos:start="1269:16" pos:end="1269:26">(<expr pos:start="1269:17" pos:end="1269:25"><name pos:start="1269:17" pos:end="1269:25">q_pressed</name></expr>)</condition><block type="pseudo" pos:start="1271:17" pos:end="1271:22"><block_content pos:start="1271:17" pos:end="1271:22">

                <break pos:start="1271:17" pos:end="1271:22">break;</break></block_content></block></if></if_stmt>

            <comment type="block" pos:start="1273:13" pos:end="1273:45">/* read_key() returns 0 on EOF */</comment>

            <expr_stmt pos:start="1275:13" pos:end="1275:29"><expr pos:start="1275:13" pos:end="1275:28"><name pos:start="1275:13" pos:end="1275:15">key</name> <operator pos:start="1275:17" pos:end="1275:17">=</operator> <call pos:start="1275:19" pos:end="1275:28"><name pos:start="1275:19" pos:end="1275:26">read_key</name><argument_list pos:start="1275:27" pos:end="1275:28">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1277:13" pos:end="1279:22"><if pos:start="1277:13" pos:end="1279:22">if <condition pos:start="1277:16" pos:end="1277:27">(<expr pos:start="1277:17" pos:end="1277:26"><name pos:start="1277:17" pos:end="1277:19">key</name> <operator pos:start="1277:21" pos:end="1277:22">==</operator> <literal type="char" pos:start="1277:24" pos:end="1277:26">'q'</literal></expr>)</condition><block type="pseudo" pos:start="1279:17" pos:end="1279:22"><block_content pos:start="1279:17" pos:end="1279:22">

                <break pos:start="1279:17" pos:end="1279:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1285:9" pos:end="1287:33">/* select the stream that we must read now by looking at the

           smallest output pts */</comment>

        <expr_stmt pos:start="1289:9" pos:end="1289:24"><expr pos:start="1289:9" pos:end="1289:23"><name pos:start="1289:9" pos:end="1289:18">file_index</name> <operator pos:start="1289:20" pos:end="1289:20">=</operator> <operator pos:start="1289:22" pos:end="1289:22">-</operator><literal type="number" pos:start="1289:23" pos:end="1289:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1291:9" pos:end="1337:9">for<control pos:start="1291:12" pos:end="1291:34">(<init pos:start="1291:13" pos:end="1291:16"><expr pos:start="1291:13" pos:end="1291:15"><name pos:start="1291:13" pos:end="1291:13">i</name><operator pos:start="1291:14" pos:end="1291:14">=</operator><literal type="number" pos:start="1291:15" pos:end="1291:15">0</literal></expr>;</init><condition pos:start="1291:17" pos:end="1291:30"><expr pos:start="1291:17" pos:end="1291:29"><name pos:start="1291:17" pos:end="1291:17">i</name><operator pos:start="1291:18" pos:end="1291:18">&lt;</operator><name pos:start="1291:19" pos:end="1291:29">nb_ostreams</name></expr>;</condition><incr pos:start="1291:31" pos:end="1291:33"><expr pos:start="1291:31" pos:end="1291:33"><name pos:start="1291:31" pos:end="1291:31">i</name><operator pos:start="1291:32" pos:end="1291:33">++</operator></expr></incr>)</control> <block pos:start="1291:36" pos:end="1337:9">{<block_content pos:start="1293:13" pos:end="1335:13">

            <decl_stmt pos:start="1293:13" pos:end="1293:30"><decl pos:start="1293:13" pos:end="1293:23"><type pos:start="1293:13" pos:end="1293:18"><name pos:start="1293:13" pos:end="1293:18">double</name></type> <name pos:start="1293:20" pos:end="1293:23">ipts</name></decl>, <decl pos:start="1293:26" pos:end="1293:29"><type ref="prev" pos:start="1293:13" pos:end="1293:18"/><name pos:start="1293:26" pos:end="1293:29">opts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1295:13" pos:end="1295:31"><expr pos:start="1295:13" pos:end="1295:30"><name pos:start="1295:13" pos:end="1295:15">ost</name> <operator pos:start="1295:17" pos:end="1295:17">=</operator> <name pos:start="1295:19" pos:end="1295:30"><name pos:start="1295:19" pos:end="1295:27">ost_table</name><index pos:start="1295:28" pos:end="1295:30">[<expr pos:start="1295:29" pos:end="1295:29"><name pos:start="1295:29" pos:end="1295:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1297:13" pos:end="1297:47"><expr pos:start="1297:13" pos:end="1297:46"><name pos:start="1297:13" pos:end="1297:14">os</name> <operator pos:start="1297:16" pos:end="1297:16">=</operator> <name pos:start="1297:18" pos:end="1297:46"><name pos:start="1297:18" pos:end="1297:29">output_files</name><index pos:start="1297:30" pos:end="1297:46">[<expr pos:start="1297:31" pos:end="1297:45"><name pos:start="1297:31" pos:end="1297:45"><name pos:start="1297:31" pos:end="1297:33">ost</name><operator pos:start="1297:34" pos:end="1297:35">-&gt;</operator><name pos:start="1297:36" pos:end="1297:45">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1299:13" pos:end="1299:47"><expr pos:start="1299:13" pos:end="1299:46"><name pos:start="1299:13" pos:end="1299:15">ist</name> <operator pos:start="1299:17" pos:end="1299:17">=</operator> <name pos:start="1299:19" pos:end="1299:46"><name pos:start="1299:19" pos:end="1299:27">ist_table</name><index pos:start="1299:28" pos:end="1299:46">[<expr pos:start="1299:29" pos:end="1299:45"><name pos:start="1299:29" pos:end="1299:45"><name pos:start="1299:29" pos:end="1299:31">ost</name><operator pos:start="1299:32" pos:end="1299:33">-&gt;</operator><name pos:start="1299:34" pos:end="1299:45">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1301:13" pos:end="1303:25"><if pos:start="1301:13" pos:end="1303:25">if<condition pos:start="1301:15" pos:end="1301:73">(<expr pos:start="1301:16" pos:end="1301:72"><name pos:start="1301:16" pos:end="1301:42"><name pos:start="1301:16" pos:end="1301:18">ist</name><operator pos:start="1301:19" pos:end="1301:20">-&gt;</operator><name pos:start="1301:21" pos:end="1301:42">is_past_recording_time</name></name> <operator pos:start="1301:44" pos:end="1301:45">||</operator> <name pos:start="1301:47" pos:end="1301:72"><name pos:start="1301:47" pos:end="1301:55">no_packet</name><index pos:start="1301:56" pos:end="1301:72">[<expr pos:start="1301:57" pos:end="1301:71"><name pos:start="1301:57" pos:end="1301:71"><name pos:start="1301:57" pos:end="1301:59">ist</name><operator pos:start="1301:60" pos:end="1301:61">-&gt;</operator><name pos:start="1301:62" pos:end="1301:71">file_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1303:17" pos:end="1303:25"><block_content pos:start="1303:17" pos:end="1303:25">

                <continue pos:start="1303:17" pos:end="1303:25">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1305:17" pos:end="1305:69"><expr pos:start="1305:17" pos:end="1305:68"><name pos:start="1305:17" pos:end="1305:20">opts</name> <operator pos:start="1305:22" pos:end="1305:22">=</operator> <name pos:start="1305:24" pos:end="1305:39"><name pos:start="1305:24" pos:end="1305:26">ost</name><operator pos:start="1305:27" pos:end="1305:28">-&gt;</operator><name pos:start="1305:29" pos:end="1305:30">st</name><operator pos:start="1305:31" pos:end="1305:32">-&gt;</operator><name pos:start="1305:33" pos:end="1305:35">pts</name><operator pos:start="1305:36" pos:end="1305:36">.</operator><name pos:start="1305:37" pos:end="1305:39">val</name></name> <operator pos:start="1305:41" pos:end="1305:41">*</operator> <call pos:start="1305:43" pos:end="1305:68"><name pos:start="1305:43" pos:end="1305:48">av_q2d</name><argument_list pos:start="1305:49" pos:end="1305:68">(<argument pos:start="1305:50" pos:end="1305:67"><expr pos:start="1305:50" pos:end="1305:67"><name pos:start="1305:50" pos:end="1305:67"><name pos:start="1305:50" pos:end="1305:52">ost</name><operator pos:start="1305:53" pos:end="1305:54">-&gt;</operator><name pos:start="1305:55" pos:end="1305:56">st</name><operator pos:start="1305:57" pos:end="1305:58">-&gt;</operator><name pos:start="1305:59" pos:end="1305:67">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1307:13" pos:end="1307:36"><expr pos:start="1307:13" pos:end="1307:35"><name pos:start="1307:13" pos:end="1307:16">ipts</name> <operator pos:start="1307:18" pos:end="1307:18">=</operator> <operator pos:start="1307:20" pos:end="1307:20">(</operator><name pos:start="1307:21" pos:end="1307:26">double</name><operator pos:start="1307:27" pos:end="1307:27">)</operator><name pos:start="1307:28" pos:end="1307:35"><name pos:start="1307:28" pos:end="1307:30">ist</name><operator pos:start="1307:31" pos:end="1307:32">-&gt;</operator><name pos:start="1307:33" pos:end="1307:35">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="1309:13" pos:end="1327:13"><if pos:start="1309:13" pos:end="1327:13">if <condition pos:start="1309:16" pos:end="1309:57">(<expr pos:start="1309:17" pos:end="1309:56"><operator pos:start="1309:17" pos:end="1309:17">!</operator><name pos:start="1309:18" pos:end="1309:44"><name pos:start="1309:18" pos:end="1309:27">file_table</name><index pos:start="1309:28" pos:end="1309:44">[<expr pos:start="1309:29" pos:end="1309:43"><name pos:start="1309:29" pos:end="1309:43"><name pos:start="1309:29" pos:end="1309:31">ist</name><operator pos:start="1309:32" pos:end="1309:33">-&gt;</operator><name pos:start="1309:34" pos:end="1309:43">file_index</name></name></expr>]</index></name><operator pos:start="1309:45" pos:end="1309:45">.</operator><name pos:start="1309:46" pos:end="1309:56">eof_reached</name></expr>)</condition><block pos:start="1309:58" pos:end="1327:13">{<block_content pos:start="1311:17" pos:end="1325:17">

                <if_stmt pos:start="1311:17" pos:end="1317:17"><if pos:start="1311:17" pos:end="1317:17">if<condition pos:start="1311:19" pos:end="1311:35">(<expr pos:start="1311:20" pos:end="1311:34"><name pos:start="1311:20" pos:end="1311:23">ipts</name> <operator pos:start="1311:25" pos:end="1311:25">&lt;</operator> <name pos:start="1311:27" pos:end="1311:34">ipts_min</name></expr>)</condition> <block pos:start="1311:37" pos:end="1317:17">{<block_content pos:start="1313:21" pos:end="1315:65">

                    <expr_stmt pos:start="1313:21" pos:end="1313:36"><expr pos:start="1313:21" pos:end="1313:35"><name pos:start="1313:21" pos:end="1313:28">ipts_min</name> <operator pos:start="1313:30" pos:end="1313:30">=</operator> <name pos:start="1313:32" pos:end="1313:35">ipts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1315:21" pos:end="1315:65"><if pos:start="1315:21" pos:end="1315:65">if<condition pos:start="1315:23" pos:end="1315:35">(<expr pos:start="1315:24" pos:end="1315:33"><name pos:start="1315:24" pos:end="1315:33">input_sync</name></expr> )</condition><block type="pseudo" pos:start="1315:37" pos:end="1315:65"><block_content pos:start="1315:37" pos:end="1315:65"> <expr_stmt pos:start="1315:37" pos:end="1315:65"><expr pos:start="1315:37" pos:end="1315:64"><name pos:start="1315:37" pos:end="1315:46">file_index</name> <operator pos:start="1315:48" pos:end="1315:48">=</operator> <name pos:start="1315:50" pos:end="1315:64"><name pos:start="1315:50" pos:end="1315:52">ist</name><operator pos:start="1315:53" pos:end="1315:54">-&gt;</operator><name pos:start="1315:55" pos:end="1315:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1319:17" pos:end="1325:17"><if pos:start="1319:17" pos:end="1325:17">if<condition pos:start="1319:19" pos:end="1319:35">(<expr pos:start="1319:20" pos:end="1319:34"><name pos:start="1319:20" pos:end="1319:23">opts</name> <operator pos:start="1319:25" pos:end="1319:25">&lt;</operator> <name pos:start="1319:27" pos:end="1319:34">opts_min</name></expr>)</condition> <block pos:start="1319:37" pos:end="1325:17">{<block_content pos:start="1321:21" pos:end="1323:65">

                    <expr_stmt pos:start="1321:21" pos:end="1321:36"><expr pos:start="1321:21" pos:end="1321:35"><name pos:start="1321:21" pos:end="1321:28">opts_min</name> <operator pos:start="1321:30" pos:end="1321:30">=</operator> <name pos:start="1321:32" pos:end="1321:35">opts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1323:21" pos:end="1323:65"><if pos:start="1323:21" pos:end="1323:65">if<condition pos:start="1323:23" pos:end="1323:35">(<expr pos:start="1323:24" pos:end="1323:34"><operator pos:start="1323:24" pos:end="1323:24">!</operator><name pos:start="1323:25" pos:end="1323:34">input_sync</name></expr>)</condition><block type="pseudo" pos:start="1323:37" pos:end="1323:65"><block_content pos:start="1323:37" pos:end="1323:65"> <expr_stmt pos:start="1323:37" pos:end="1323:65"><expr pos:start="1323:37" pos:end="1323:64"><name pos:start="1323:37" pos:end="1323:46">file_index</name> <operator pos:start="1323:48" pos:end="1323:48">=</operator> <name pos:start="1323:50" pos:end="1323:64"><name pos:start="1323:50" pos:end="1323:52">ist</name><operator pos:start="1323:53" pos:end="1323:54">-&gt;</operator><name pos:start="1323:55" pos:end="1323:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1329:13" pos:end="1335:13"><if pos:start="1329:13" pos:end="1335:13">if<condition pos:start="1329:15" pos:end="1329:75">(<expr pos:start="1329:16" pos:end="1329:74"><name pos:start="1329:16" pos:end="1329:32"><name pos:start="1329:16" pos:end="1329:18">ost</name><operator pos:start="1329:19" pos:end="1329:20">-&gt;</operator><name pos:start="1329:21" pos:end="1329:32">frame_number</name></name> <operator pos:start="1329:34" pos:end="1329:35">&gt;=</operator> <name pos:start="1329:37" pos:end="1329:74"><name pos:start="1329:37" pos:end="1329:46">max_frames</name><index pos:start="1329:47" pos:end="1329:74">[<expr pos:start="1329:48" pos:end="1329:73"><name pos:start="1329:48" pos:end="1329:73"><name pos:start="1329:48" pos:end="1329:50">ost</name><operator pos:start="1329:51" pos:end="1329:52">-&gt;</operator><name pos:start="1329:53" pos:end="1329:54">st</name><operator pos:start="1329:55" pos:end="1329:56">-&gt;</operator><name pos:start="1329:57" pos:end="1329:61">codec</name><operator pos:start="1329:62" pos:end="1329:63">-&gt;</operator><name pos:start="1329:64" pos:end="1329:73">codec_type</name></name></expr>]</index></name></expr>)</condition><block pos:start="1329:76" pos:end="1335:13">{<block_content pos:start="1331:17" pos:end="1333:22">

                <expr_stmt pos:start="1331:17" pos:end="1331:31"><expr pos:start="1331:17" pos:end="1331:30"><name pos:start="1331:17" pos:end="1331:26">file_index</name><operator pos:start="1331:27" pos:end="1331:27">=</operator> <operator pos:start="1331:29" pos:end="1331:29">-</operator><literal type="number" pos:start="1331:30" pos:end="1331:30">1</literal></expr>;</expr_stmt>

                <break pos:start="1333:17" pos:end="1333:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="1339:9" pos:end="1339:37">/* if none, if is finished */</comment>

        <if_stmt pos:start="1341:9" pos:end="1357:9"><if pos:start="1341:9" pos:end="1357:9">if <condition pos:start="1341:12" pos:end="1341:27">(<expr pos:start="1341:13" pos:end="1341:26"><name pos:start="1341:13" pos:end="1341:22">file_index</name> <operator pos:start="1341:24" pos:end="1341:24">&lt;</operator> <literal type="number" pos:start="1341:26" pos:end="1341:26">0</literal></expr>)</condition> <block pos:start="1341:29" pos:end="1357:9">{<block_content pos:start="1343:13" pos:end="1355:18">

            <if_stmt pos:start="1343:13" pos:end="1353:13"><if pos:start="1343:13" pos:end="1353:13">if<condition pos:start="1343:15" pos:end="1343:31">(<expr pos:start="1343:16" pos:end="1343:30"><name pos:start="1343:16" pos:end="1343:30">no_packet_count</name></expr>)</condition><block pos:start="1343:32" pos:end="1353:13">{<block_content pos:start="1345:17" pos:end="1351:25">

                <expr_stmt pos:start="1345:17" pos:end="1345:34"><expr pos:start="1345:17" pos:end="1345:33"><name pos:start="1345:17" pos:end="1345:31">no_packet_count</name><operator pos:start="1345:32" pos:end="1345:32">=</operator><literal type="number" pos:start="1345:33" pos:end="1345:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1347:17" pos:end="1347:56"><expr pos:start="1347:17" pos:end="1347:55"><call pos:start="1347:17" pos:end="1347:55"><name pos:start="1347:17" pos:end="1347:22">memset</name><argument_list pos:start="1347:23" pos:end="1347:55">(<argument pos:start="1347:24" pos:end="1347:32"><expr pos:start="1347:24" pos:end="1347:32"><name pos:start="1347:24" pos:end="1347:32">no_packet</name></expr></argument>, <argument pos:start="1347:35" pos:end="1347:35"><expr pos:start="1347:35" pos:end="1347:35"><literal type="number" pos:start="1347:35" pos:end="1347:35">0</literal></expr></argument>, <argument pos:start="1347:38" pos:end="1347:54"><expr pos:start="1347:38" pos:end="1347:54"><sizeof pos:start="1347:38" pos:end="1347:54">sizeof<argument_list pos:start="1347:44" pos:end="1347:54">(<argument pos:start="1347:45" pos:end="1347:53"><expr pos:start="1347:45" pos:end="1347:53"><name pos:start="1347:45" pos:end="1347:53">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1349:17" pos:end="1349:30"><expr pos:start="1349:17" pos:end="1349:29"><call pos:start="1349:17" pos:end="1349:29"><name pos:start="1349:17" pos:end="1349:22">usleep</name><argument_list pos:start="1349:23" pos:end="1349:29">(<argument pos:start="1349:24" pos:end="1349:28"><expr pos:start="1349:24" pos:end="1349:28"><literal type="number" pos:start="1349:24" pos:end="1349:28">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="1351:17" pos:end="1351:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1355:13" pos:end="1355:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1361:9" pos:end="1361:44">/* finish if limit size exhausted */</comment>

        <if_stmt pos:start="1363:9" pos:end="1365:18"><if pos:start="1363:9" pos:end="1365:18">if <condition pos:start="1363:12" pos:end="1363:84">(<expr pos:start="1363:13" pos:end="1363:83"><name pos:start="1363:13" pos:end="1363:26">limit_filesize</name> <operator pos:start="1363:28" pos:end="1363:29">!=</operator> <literal type="number" pos:start="1363:31" pos:end="1363:31">0</literal> <operator pos:start="1363:33" pos:end="1363:34">&amp;&amp;</operator> <name pos:start="1363:36" pos:end="1363:49">limit_filesize</name> <operator pos:start="1363:51" pos:end="1363:52">&lt;=</operator> <call pos:start="1363:54" pos:end="1363:83"><name pos:start="1363:54" pos:end="1363:62">avio_tell</name><argument_list pos:start="1363:63" pos:end="1363:83">(<argument pos:start="1363:64" pos:end="1363:82"><expr pos:start="1363:64" pos:end="1363:82"><name pos:start="1363:64" pos:end="1363:78"><name pos:start="1363:64" pos:end="1363:75">output_files</name><index pos:start="1363:76" pos:end="1363:78">[<expr pos:start="1363:77" pos:end="1363:77"><literal type="number" pos:start="1363:77" pos:end="1363:77">0</literal></expr>]</index></name><operator pos:start="1363:79" pos:end="1363:80">-&gt;</operator><name pos:start="1363:81" pos:end="1363:82">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1365:13" pos:end="1365:18"><block_content pos:start="1365:13" pos:end="1365:18">

            <break pos:start="1365:13" pos:end="1365:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="1369:9" pos:end="1369:60">/* read a frame from it and output it in the fifo */</comment>

        <expr_stmt pos:start="1371:9" pos:end="1371:37"><expr pos:start="1371:9" pos:end="1371:36"><name pos:start="1371:9" pos:end="1371:10">is</name> <operator pos:start="1371:12" pos:end="1371:12">=</operator> <name pos:start="1371:14" pos:end="1371:36"><name pos:start="1371:14" pos:end="1371:24">input_files</name><index pos:start="1371:25" pos:end="1371:36">[<expr pos:start="1371:26" pos:end="1371:35"><name pos:start="1371:26" pos:end="1371:35">file_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1373:9" pos:end="1373:37"><expr pos:start="1373:9" pos:end="1373:36"><name pos:start="1373:9" pos:end="1373:11">ret</name><operator pos:start="1373:12" pos:end="1373:12">=</operator> <call pos:start="1373:14" pos:end="1373:36"><name pos:start="1373:14" pos:end="1373:26">av_read_frame</name><argument_list pos:start="1373:27" pos:end="1373:36">(<argument pos:start="1373:28" pos:end="1373:29"><expr pos:start="1373:28" pos:end="1373:29"><name pos:start="1373:28" pos:end="1373:29">is</name></expr></argument>, <argument pos:start="1373:32" pos:end="1373:35"><expr pos:start="1373:32" pos:end="1373:35"><operator pos:start="1373:32" pos:end="1373:32">&amp;</operator><name pos:start="1373:33" pos:end="1373:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1375:9" pos:end="1383:9"><if pos:start="1375:9" pos:end="1383:9">if<condition pos:start="1375:11" pos:end="1375:34">(<expr pos:start="1375:12" pos:end="1375:33"><name pos:start="1375:12" pos:end="1375:14">ret</name> <operator pos:start="1375:16" pos:end="1375:17">==</operator> <call pos:start="1375:19" pos:end="1375:33"><name pos:start="1375:19" pos:end="1375:25">AVERROR</name><argument_list pos:start="1375:26" pos:end="1375:33">(<argument pos:start="1375:27" pos:end="1375:32"><expr pos:start="1375:27" pos:end="1375:32"><name pos:start="1375:27" pos:end="1375:32">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="1375:35" pos:end="1383:9">{<block_content pos:start="1377:13" pos:end="1381:21">

            <expr_stmt pos:start="1377:13" pos:end="1377:36"><expr pos:start="1377:13" pos:end="1377:35"><name pos:start="1377:13" pos:end="1377:33"><name pos:start="1377:13" pos:end="1377:21">no_packet</name><index pos:start="1377:22" pos:end="1377:33">[<expr pos:start="1377:23" pos:end="1377:32"><name pos:start="1377:23" pos:end="1377:32">file_index</name></expr>]</index></name><operator pos:start="1377:34" pos:end="1377:34">=</operator><literal type="number" pos:start="1377:35" pos:end="1377:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1379:13" pos:end="1379:30"><expr pos:start="1379:13" pos:end="1379:29"><name pos:start="1379:13" pos:end="1379:27">no_packet_count</name><operator pos:start="1379:28" pos:end="1379:29">++</operator></expr>;</expr_stmt>

            <continue pos:start="1381:13" pos:end="1381:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1385:9" pos:end="1397:9"><if pos:start="1385:9" pos:end="1397:9">if <condition pos:start="1385:12" pos:end="1385:20">(<expr pos:start="1385:13" pos:end="1385:19"><name pos:start="1385:13" pos:end="1385:15">ret</name> <operator pos:start="1385:17" pos:end="1385:17">&lt;</operator> <literal type="number" pos:start="1385:19" pos:end="1385:19">0</literal></expr>)</condition> <block pos:start="1385:22" pos:end="1397:9">{<block_content pos:start="1387:13" pos:end="1395:25">

            <expr_stmt pos:start="1387:13" pos:end="1387:51"><expr pos:start="1387:13" pos:end="1387:50"><name pos:start="1387:13" pos:end="1387:34"><name pos:start="1387:13" pos:end="1387:22">file_table</name><index pos:start="1387:23" pos:end="1387:34">[<expr pos:start="1387:24" pos:end="1387:33"><name pos:start="1387:24" pos:end="1387:33">file_index</name></expr>]</index></name><operator pos:start="1387:35" pos:end="1387:35">.</operator><name pos:start="1387:36" pos:end="1387:46">eof_reached</name> <operator pos:start="1387:48" pos:end="1387:48">=</operator> <literal type="number" pos:start="1387:50" pos:end="1387:50">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1389:13" pos:end="1395:25"><if pos:start="1389:13" pos:end="1391:22">if <condition pos:start="1389:16" pos:end="1389:29">(<expr pos:start="1389:17" pos:end="1389:28"><name pos:start="1389:17" pos:end="1389:28">opt_shortest</name></expr>)</condition><block type="pseudo" pos:start="1391:17" pos:end="1391:22"><block_content pos:start="1391:17" pos:end="1391:22">

                <break pos:start="1391:17" pos:end="1391:22">break;</break></block_content></block></if>

            <else pos:start="1393:13" pos:end="1395:25">else<block type="pseudo" pos:start="1395:17" pos:end="1395:25"><block_content pos:start="1395:17" pos:end="1395:25">

                <continue pos:start="1395:17" pos:end="1395:25">continue;</continue></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1401:9" pos:end="1401:26"><expr pos:start="1401:9" pos:end="1401:25"><name pos:start="1401:9" pos:end="1401:23">no_packet_count</name><operator pos:start="1401:24" pos:end="1401:24">=</operator><literal type="number" pos:start="1401:25" pos:end="1401:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1403:9" pos:end="1403:48"><expr pos:start="1403:9" pos:end="1403:47"><call pos:start="1403:9" pos:end="1403:47"><name pos:start="1403:9" pos:end="1403:14">memset</name><argument_list pos:start="1403:15" pos:end="1403:47">(<argument pos:start="1403:16" pos:end="1403:24"><expr pos:start="1403:16" pos:end="1403:24"><name pos:start="1403:16" pos:end="1403:24">no_packet</name></expr></argument>, <argument pos:start="1403:27" pos:end="1403:27"><expr pos:start="1403:27" pos:end="1403:27"><literal type="number" pos:start="1403:27" pos:end="1403:27">0</literal></expr></argument>, <argument pos:start="1403:30" pos:end="1403:46"><expr pos:start="1403:30" pos:end="1403:46"><sizeof pos:start="1403:30" pos:end="1403:46">sizeof<argument_list pos:start="1403:36" pos:end="1403:46">(<argument pos:start="1403:37" pos:end="1403:45"><expr pos:start="1403:37" pos:end="1403:45"><name pos:start="1403:37" pos:end="1403:45">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1407:9" pos:end="1413:9"><if pos:start="1407:9" pos:end="1413:9">if <condition pos:start="1407:12" pos:end="1407:24">(<expr pos:start="1407:13" pos:end="1407:23"><name pos:start="1407:13" pos:end="1407:23">do_pkt_dump</name></expr>)</condition> <block pos:start="1407:26" pos:end="1413:9">{<block_content pos:start="1409:13" pos:end="1411:60">

            <expr_stmt pos:start="1409:13" pos:end="1411:60"><expr pos:start="1409:13" pos:end="1411:59"><call pos:start="1409:13" pos:end="1411:59"><name pos:start="1409:13" pos:end="1409:28">av_pkt_dump_log2</name><argument_list pos:start="1409:29" pos:end="1411:59">(<argument pos:start="1409:30" pos:end="1409:33"><expr pos:start="1409:30" pos:end="1409:33"><name pos:start="1409:30" pos:end="1409:33">NULL</name></expr></argument>, <argument pos:start="1409:36" pos:end="1409:47"><expr pos:start="1409:36" pos:end="1409:47"><name pos:start="1409:36" pos:end="1409:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1409:50" pos:end="1409:53"><expr pos:start="1409:50" pos:end="1409:53"><operator pos:start="1409:50" pos:end="1409:50">&amp;</operator><name pos:start="1409:51" pos:end="1409:53">pkt</name></expr></argument>, <argument pos:start="1409:56" pos:end="1409:66"><expr pos:start="1409:56" pos:end="1409:66"><name pos:start="1409:56" pos:end="1409:66">do_hex_dump</name></expr></argument>,

                             <argument pos:start="1411:30" pos:end="1411:58"><expr pos:start="1411:30" pos:end="1411:58"><name pos:start="1411:30" pos:end="1411:58"><name pos:start="1411:30" pos:end="1411:31">is</name><operator pos:start="1411:32" pos:end="1411:33">-&gt;</operator><name pos:start="1411:34" pos:end="1411:40">streams</name><index pos:start="1411:41" pos:end="1411:58">[<expr pos:start="1411:42" pos:end="1411:57"><name pos:start="1411:42" pos:end="1411:57"><name pos:start="1411:42" pos:end="1411:44">pkt</name><operator pos:start="1411:45" pos:end="1411:45">.</operator><name pos:start="1411:46" pos:end="1411:57">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="1415:9" pos:end="1417:52">/* the following test is needed in case new streams appear

           dynamically in stream : we ignore them */</comment>

        <if_stmt pos:start="1419:9" pos:end="1421:32"><if pos:start="1419:9" pos:end="1421:32">if <condition pos:start="1419:12" pos:end="1419:66">(<expr pos:start="1419:13" pos:end="1419:65"><name pos:start="1419:13" pos:end="1419:28"><name pos:start="1419:13" pos:end="1419:15">pkt</name><operator pos:start="1419:16" pos:end="1419:16">.</operator><name pos:start="1419:17" pos:end="1419:28">stream_index</name></name> <operator pos:start="1419:30" pos:end="1419:31">&gt;=</operator> <name pos:start="1419:33" pos:end="1419:54"><name pos:start="1419:33" pos:end="1419:42">file_table</name><index pos:start="1419:43" pos:end="1419:54">[<expr pos:start="1419:44" pos:end="1419:53"><name pos:start="1419:44" pos:end="1419:53">file_index</name></expr>]</index></name><operator pos:start="1419:55" pos:end="1419:55">.</operator><name pos:start="1419:56" pos:end="1419:65">nb_streams</name></expr>)</condition><block type="pseudo" pos:start="1421:13" pos:end="1421:32"><block_content pos:start="1421:13" pos:end="1421:32">

            <goto pos:start="1421:13" pos:end="1421:32">goto <name pos:start="1421:18" pos:end="1421:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1423:9" pos:end="1423:72"><expr pos:start="1423:9" pos:end="1423:71"><name pos:start="1423:9" pos:end="1423:17">ist_index</name> <operator pos:start="1423:19" pos:end="1423:19">=</operator> <name pos:start="1423:21" pos:end="1423:42"><name pos:start="1423:21" pos:end="1423:30">file_table</name><index pos:start="1423:31" pos:end="1423:42">[<expr pos:start="1423:32" pos:end="1423:41"><name pos:start="1423:32" pos:end="1423:41">file_index</name></expr>]</index></name><operator pos:start="1423:43" pos:end="1423:43">.</operator><name pos:start="1423:44" pos:end="1423:52">ist_index</name> <operator pos:start="1423:54" pos:end="1423:54">+</operator> <name pos:start="1423:56" pos:end="1423:71"><name pos:start="1423:56" pos:end="1423:58">pkt</name><operator pos:start="1423:59" pos:end="1423:59">.</operator><name pos:start="1423:60" pos:end="1423:71">stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1425:9" pos:end="1425:35"><expr pos:start="1425:9" pos:end="1425:34"><name pos:start="1425:9" pos:end="1425:11">ist</name> <operator pos:start="1425:13" pos:end="1425:13">=</operator> <name pos:start="1425:15" pos:end="1425:34"><name pos:start="1425:15" pos:end="1425:23">ist_table</name><index pos:start="1425:24" pos:end="1425:34">[<expr pos:start="1425:25" pos:end="1425:33"><name pos:start="1425:25" pos:end="1425:33">ist_index</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1427:9" pos:end="1429:32"><if pos:start="1427:9" pos:end="1429:32">if <condition pos:start="1427:12" pos:end="1427:25">(<expr pos:start="1427:13" pos:end="1427:24"><name pos:start="1427:13" pos:end="1427:24"><name pos:start="1427:13" pos:end="1427:15">ist</name><operator pos:start="1427:16" pos:end="1427:17">-&gt;</operator><name pos:start="1427:18" pos:end="1427:24">discard</name></name></expr>)</condition><block type="pseudo" pos:start="1429:13" pos:end="1429:32"><block_content pos:start="1429:13" pos:end="1429:32">

            <goto pos:start="1429:13" pos:end="1429:32">goto <name pos:start="1429:18" pos:end="1429:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="1433:9" pos:end="1435:112"><if pos:start="1433:9" pos:end="1435:112">if <condition pos:start="1433:12" pos:end="1433:38">(<expr pos:start="1433:13" pos:end="1433:37"><name pos:start="1433:13" pos:end="1433:19"><name pos:start="1433:13" pos:end="1433:15">pkt</name><operator pos:start="1433:16" pos:end="1433:16">.</operator><name pos:start="1433:17" pos:end="1433:19">dts</name></name> <operator pos:start="1433:21" pos:end="1433:22">!=</operator> <name pos:start="1433:24" pos:end="1433:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1435:13" pos:end="1435:112"><block_content pos:start="1435:13" pos:end="1435:112">

            <expr_stmt pos:start="1435:13" pos:end="1435:112"><expr pos:start="1435:13" pos:end="1435:111"><name pos:start="1435:13" pos:end="1435:19"><name pos:start="1435:13" pos:end="1435:15">pkt</name><operator pos:start="1435:16" pos:end="1435:16">.</operator><name pos:start="1435:17" pos:end="1435:19">dts</name></name> <operator pos:start="1435:21" pos:end="1435:22">+=</operator> <call pos:start="1435:24" pos:end="1435:111"><name pos:start="1435:24" pos:end="1435:35">av_rescale_q</name><argument_list pos:start="1435:36" pos:end="1435:111">(<argument pos:start="1435:37" pos:end="1435:74"><expr pos:start="1435:37" pos:end="1435:74"><name pos:start="1435:37" pos:end="1435:74"><name pos:start="1435:37" pos:end="1435:57">input_files_ts_offset</name><index pos:start="1435:58" pos:end="1435:74">[<expr pos:start="1435:59" pos:end="1435:73"><name pos:start="1435:59" pos:end="1435:73"><name pos:start="1435:59" pos:end="1435:61">ist</name><operator pos:start="1435:62" pos:end="1435:63">-&gt;</operator><name pos:start="1435:64" pos:end="1435:73">file_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="1435:77" pos:end="1435:90"><expr pos:start="1435:77" pos:end="1435:90"><name pos:start="1435:77" pos:end="1435:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1435:93" pos:end="1435:110"><expr pos:start="1435:93" pos:end="1435:110"><name pos:start="1435:93" pos:end="1435:110"><name pos:start="1435:93" pos:end="1435:95">ist</name><operator pos:start="1435:96" pos:end="1435:97">-&gt;</operator><name pos:start="1435:98" pos:end="1435:99">st</name><operator pos:start="1435:100" pos:end="1435:101">-&gt;</operator><name pos:start="1435:102" pos:end="1435:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1437:9" pos:end="1439:112"><if pos:start="1437:9" pos:end="1439:112">if <condition pos:start="1437:12" pos:end="1437:38">(<expr pos:start="1437:13" pos:end="1437:37"><name pos:start="1437:13" pos:end="1437:19"><name pos:start="1437:13" pos:end="1437:15">pkt</name><operator pos:start="1437:16" pos:end="1437:16">.</operator><name pos:start="1437:17" pos:end="1437:19">pts</name></name> <operator pos:start="1437:21" pos:end="1437:22">!=</operator> <name pos:start="1437:24" pos:end="1437:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1439:13" pos:end="1439:112"><block_content pos:start="1439:13" pos:end="1439:112">

            <expr_stmt pos:start="1439:13" pos:end="1439:112"><expr pos:start="1439:13" pos:end="1439:111"><name pos:start="1439:13" pos:end="1439:19"><name pos:start="1439:13" pos:end="1439:15">pkt</name><operator pos:start="1439:16" pos:end="1439:16">.</operator><name pos:start="1439:17" pos:end="1439:19">pts</name></name> <operator pos:start="1439:21" pos:end="1439:22">+=</operator> <call pos:start="1439:24" pos:end="1439:111"><name pos:start="1439:24" pos:end="1439:35">av_rescale_q</name><argument_list pos:start="1439:36" pos:end="1439:111">(<argument pos:start="1439:37" pos:end="1439:74"><expr pos:start="1439:37" pos:end="1439:74"><name pos:start="1439:37" pos:end="1439:74"><name pos:start="1439:37" pos:end="1439:57">input_files_ts_offset</name><index pos:start="1439:58" pos:end="1439:74">[<expr pos:start="1439:59" pos:end="1439:73"><name pos:start="1439:59" pos:end="1439:73"><name pos:start="1439:59" pos:end="1439:61">ist</name><operator pos:start="1439:62" pos:end="1439:63">-&gt;</operator><name pos:start="1439:64" pos:end="1439:73">file_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="1439:77" pos:end="1439:90"><expr pos:start="1439:77" pos:end="1439:90"><name pos:start="1439:77" pos:end="1439:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1439:93" pos:end="1439:110"><expr pos:start="1439:93" pos:end="1439:110"><name pos:start="1439:93" pos:end="1439:110"><name pos:start="1439:93" pos:end="1439:95">ist</name><operator pos:start="1439:96" pos:end="1439:97">-&gt;</operator><name pos:start="1439:98" pos:end="1439:99">st</name><operator pos:start="1439:100" pos:end="1439:101">-&gt;</operator><name pos:start="1439:102" pos:end="1439:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="1443:9" pos:end="1455:9"><if pos:start="1443:9" pos:end="1455:9">if <condition pos:start="1443:12" pos:end="1445:66">(<expr pos:start="1443:13" pos:end="1445:65"><name pos:start="1443:13" pos:end="1443:28"><name pos:start="1443:13" pos:end="1443:15">pkt</name><operator pos:start="1443:16" pos:end="1443:16">.</operator><name pos:start="1443:17" pos:end="1443:28">stream_index</name></name> <operator pos:start="1443:30" pos:end="1443:30">&lt;</operator> <name pos:start="1443:32" pos:end="1443:66"><name pos:start="1443:32" pos:end="1443:54">nb_input_files_ts_scale</name><index pos:start="1443:55" pos:end="1443:66">[<expr pos:start="1443:56" pos:end="1443:65"><name pos:start="1443:56" pos:end="1443:65">file_index</name></expr>]</index></name>

            <operator pos:start="1445:13" pos:end="1445:14">&amp;&amp;</operator> <name pos:start="1445:16" pos:end="1445:65"><name pos:start="1445:16" pos:end="1445:35">input_files_ts_scale</name><index pos:start="1445:36" pos:end="1445:47">[<expr pos:start="1445:37" pos:end="1445:46"><name pos:start="1445:37" pos:end="1445:46">file_index</name></expr>]</index><index pos:start="1445:48" pos:end="1445:65">[<expr pos:start="1445:49" pos:end="1445:64"><name pos:start="1445:49" pos:end="1445:64"><name pos:start="1445:49" pos:end="1445:51">pkt</name><operator pos:start="1445:52" pos:end="1445:52">.</operator><name pos:start="1445:53" pos:end="1445:64">stream_index</name></name></expr>]</index></name></expr>)</condition><block pos:start="1445:67" pos:end="1455:9">{<block_content pos:start="1447:13" pos:end="1453:78">

            <if_stmt pos:start="1447:13" pos:end="1449:78"><if pos:start="1447:13" pos:end="1449:78">if<condition pos:start="1447:15" pos:end="1447:41">(<expr pos:start="1447:16" pos:end="1447:40"><name pos:start="1447:16" pos:end="1447:22"><name pos:start="1447:16" pos:end="1447:18">pkt</name><operator pos:start="1447:19" pos:end="1447:19">.</operator><name pos:start="1447:20" pos:end="1447:22">pts</name></name> <operator pos:start="1447:24" pos:end="1447:25">!=</operator> <name pos:start="1447:27" pos:end="1447:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1449:17" pos:end="1449:78"><block_content pos:start="1449:17" pos:end="1449:78">

                <expr_stmt pos:start="1449:17" pos:end="1449:78"><expr pos:start="1449:17" pos:end="1449:77"><name pos:start="1449:17" pos:end="1449:23"><name pos:start="1449:17" pos:end="1449:19">pkt</name><operator pos:start="1449:20" pos:end="1449:20">.</operator><name pos:start="1449:21" pos:end="1449:23">pts</name></name> <operator pos:start="1449:25" pos:end="1449:26">*=</operator> <name pos:start="1449:28" pos:end="1449:77"><name pos:start="1449:28" pos:end="1449:47">input_files_ts_scale</name><index pos:start="1449:48" pos:end="1449:59">[<expr pos:start="1449:49" pos:end="1449:58"><name pos:start="1449:49" pos:end="1449:58">file_index</name></expr>]</index><index pos:start="1449:60" pos:end="1449:77">[<expr pos:start="1449:61" pos:end="1449:76"><name pos:start="1449:61" pos:end="1449:76"><name pos:start="1449:61" pos:end="1449:63">pkt</name><operator pos:start="1449:64" pos:end="1449:64">.</operator><name pos:start="1449:65" pos:end="1449:76">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1451:13" pos:end="1453:78"><if pos:start="1451:13" pos:end="1453:78">if<condition pos:start="1451:15" pos:end="1451:41">(<expr pos:start="1451:16" pos:end="1451:40"><name pos:start="1451:16" pos:end="1451:22"><name pos:start="1451:16" pos:end="1451:18">pkt</name><operator pos:start="1451:19" pos:end="1451:19">.</operator><name pos:start="1451:20" pos:end="1451:22">dts</name></name> <operator pos:start="1451:24" pos:end="1451:25">!=</operator> <name pos:start="1451:27" pos:end="1451:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1453:17" pos:end="1453:78"><block_content pos:start="1453:17" pos:end="1453:78">

                <expr_stmt pos:start="1453:17" pos:end="1453:78"><expr pos:start="1453:17" pos:end="1453:77"><name pos:start="1453:17" pos:end="1453:23"><name pos:start="1453:17" pos:end="1453:19">pkt</name><operator pos:start="1453:20" pos:end="1453:20">.</operator><name pos:start="1453:21" pos:end="1453:23">dts</name></name> <operator pos:start="1453:25" pos:end="1453:26">*=</operator> <name pos:start="1453:28" pos:end="1453:77"><name pos:start="1453:28" pos:end="1453:47">input_files_ts_scale</name><index pos:start="1453:48" pos:end="1453:59">[<expr pos:start="1453:49" pos:end="1453:58"><name pos:start="1453:49" pos:end="1453:58">file_index</name></expr>]</index><index pos:start="1453:60" pos:end="1453:77">[<expr pos:start="1453:61" pos:end="1453:76"><name pos:start="1453:61" pos:end="1453:76"><name pos:start="1453:61" pos:end="1453:63">pkt</name><operator pos:start="1453:64" pos:end="1453:64">.</operator><name pos:start="1453:65" pos:end="1453:76">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="1459:1" pos:end="1459:169">//        fprintf(stderr, "next:%"PRId64" dts:%"PRId64" off:%"PRId64" %d\n", ist-&gt;next_pts, pkt.dts, input_files_ts_offset[ist-&gt;file_index], ist-&gt;st-&gt;codec-&gt;codec_type);</comment>

        <if_stmt pos:start="1461:9" pos:end="1485:9"><if pos:start="1461:9" pos:end="1485:9">if <condition pos:start="1461:12" pos:end="1463:55">(<expr pos:start="1461:13" pos:end="1463:54"><name pos:start="1461:13" pos:end="1461:19"><name pos:start="1461:13" pos:end="1461:15">pkt</name><operator pos:start="1461:16" pos:end="1461:16">.</operator><name pos:start="1461:17" pos:end="1461:19">dts</name></name> <operator pos:start="1461:21" pos:end="1461:22">!=</operator> <name pos:start="1461:24" pos:end="1461:37">AV_NOPTS_VALUE</name> <operator pos:start="1461:39" pos:end="1461:40">&amp;&amp;</operator> <name pos:start="1461:42" pos:end="1461:54"><name pos:start="1461:42" pos:end="1461:44">ist</name><operator pos:start="1461:45" pos:end="1461:46">-&gt;</operator><name pos:start="1461:47" pos:end="1461:54">next_pts</name></name> <operator pos:start="1461:56" pos:end="1461:57">!=</operator> <name pos:start="1461:59" pos:end="1461:72">AV_NOPTS_VALUE</name>

            <operator pos:start="1463:13" pos:end="1463:14">&amp;&amp;</operator> <operator pos:start="1463:16" pos:end="1463:16">(</operator><name pos:start="1463:17" pos:end="1463:34"><name pos:start="1463:17" pos:end="1463:18">is</name><operator pos:start="1463:19" pos:end="1463:20">-&gt;</operator><name pos:start="1463:21" pos:end="1463:27">iformat</name><operator pos:start="1463:28" pos:end="1463:29">-&gt;</operator><name pos:start="1463:30" pos:end="1463:34">flags</name></name> <operator pos:start="1463:36" pos:end="1463:36">&amp;</operator> <name pos:start="1463:38" pos:end="1463:53">AVFMT_TS_DISCONT</name><operator pos:start="1463:54" pos:end="1463:54">)</operator></expr>)</condition> <block pos:start="1463:57" pos:end="1485:9">{<block_content pos:start="1465:13" pos:end="1483:13">

            <decl_stmt pos:start="1465:13" pos:end="1465:87"><decl pos:start="1465:13" pos:end="1465:86"><type pos:start="1465:13" pos:end="1465:19"><name pos:start="1465:13" pos:end="1465:19">int64_t</name></type> <name pos:start="1465:21" pos:end="1465:27">pkt_dts</name><init pos:start="1465:28" pos:end="1465:86">= <expr pos:start="1465:30" pos:end="1465:86"><call pos:start="1465:30" pos:end="1465:86"><name pos:start="1465:30" pos:end="1465:41">av_rescale_q</name><argument_list pos:start="1465:42" pos:end="1465:86">(<argument pos:start="1465:43" pos:end="1465:49"><expr pos:start="1465:43" pos:end="1465:49"><name pos:start="1465:43" pos:end="1465:49"><name pos:start="1465:43" pos:end="1465:45">pkt</name><operator pos:start="1465:46" pos:end="1465:46">.</operator><name pos:start="1465:47" pos:end="1465:49">dts</name></name></expr></argument>, <argument pos:start="1465:52" pos:end="1465:69"><expr pos:start="1465:52" pos:end="1465:69"><name pos:start="1465:52" pos:end="1465:69"><name pos:start="1465:52" pos:end="1465:54">ist</name><operator pos:start="1465:55" pos:end="1465:56">-&gt;</operator><name pos:start="1465:57" pos:end="1465:58">st</name><operator pos:start="1465:59" pos:end="1465:60">-&gt;</operator><name pos:start="1465:61" pos:end="1465:69">time_base</name></name></expr></argument>, <argument pos:start="1465:72" pos:end="1465:85"><expr pos:start="1465:72" pos:end="1465:85"><name pos:start="1465:72" pos:end="1465:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1467:13" pos:end="1467:51"><decl pos:start="1467:13" pos:end="1467:50"><type pos:start="1467:13" pos:end="1467:19"><name pos:start="1467:13" pos:end="1467:19">int64_t</name></type> <name pos:start="1467:21" pos:end="1467:25">delta</name><init pos:start="1467:26" pos:end="1467:50">= <expr pos:start="1467:28" pos:end="1467:50"><name pos:start="1467:28" pos:end="1467:34">pkt_dts</name> <operator pos:start="1467:36" pos:end="1467:36">-</operator> <name pos:start="1467:38" pos:end="1467:50"><name pos:start="1467:38" pos:end="1467:40">ist</name><operator pos:start="1467:41" pos:end="1467:42">-&gt;</operator><name pos:start="1467:43" pos:end="1467:50">next_pts</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="1469:13" pos:end="1483:13"><if pos:start="1469:13" pos:end="1483:13">if<condition pos:start="1469:15" pos:end="1469:102">(<expr pos:start="1469:16" pos:end="1469:101"><operator pos:start="1469:16" pos:end="1469:16">(</operator><call pos:start="1469:17" pos:end="1469:28"><name pos:start="1469:17" pos:end="1469:21">FFABS</name><argument_list pos:start="1469:22" pos:end="1469:28">(<argument pos:start="1469:23" pos:end="1469:27"><expr pos:start="1469:23" pos:end="1469:27"><name pos:start="1469:23" pos:end="1469:27">delta</name></expr></argument>)</argument_list></call> <operator pos:start="1469:30" pos:end="1469:30">&gt;</operator> <literal type="number" pos:start="1469:32" pos:end="1469:34">1LL</literal><operator pos:start="1469:35" pos:end="1469:35">*</operator><name pos:start="1469:36" pos:end="1469:54">dts_delta_threshold</name><operator pos:start="1469:55" pos:end="1469:55">*</operator><name pos:start="1469:56" pos:end="1469:67">AV_TIME_BASE</name> <operator pos:start="1469:69" pos:end="1469:70">||</operator> <name pos:start="1469:72" pos:end="1469:78">pkt_dts</name><operator pos:start="1469:79" pos:end="1469:79">+</operator><literal type="number" pos:start="1469:80" pos:end="1469:80">1</literal><operator pos:start="1469:81" pos:end="1469:81">&lt;</operator><name pos:start="1469:82" pos:end="1469:89"><name pos:start="1469:82" pos:end="1469:84">ist</name><operator pos:start="1469:85" pos:end="1469:86">-&gt;</operator><name pos:start="1469:87" pos:end="1469:89">pts</name></name><operator pos:start="1469:90" pos:end="1469:90">)</operator><operator pos:start="1469:91" pos:end="1469:92">&amp;&amp;</operator> <operator pos:start="1469:94" pos:end="1469:94">!</operator><name pos:start="1469:95" pos:end="1469:101">copy_ts</name></expr>)</condition><block pos:start="1469:103" pos:end="1483:13">{<block_content pos:start="1471:17" pos:end="1481:86">

                <expr_stmt pos:start="1471:17" pos:end="1471:63"><expr pos:start="1471:17" pos:end="1471:62"><name pos:start="1471:17" pos:end="1471:54"><name pos:start="1471:17" pos:end="1471:37">input_files_ts_offset</name><index pos:start="1471:38" pos:end="1471:54">[<expr pos:start="1471:39" pos:end="1471:53"><name pos:start="1471:39" pos:end="1471:53"><name pos:start="1471:39" pos:end="1471:41">ist</name><operator pos:start="1471:42" pos:end="1471:43">-&gt;</operator><name pos:start="1471:44" pos:end="1471:53">file_index</name></name></expr>]</index></name><operator pos:start="1471:55" pos:end="1471:56">-=</operator> <name pos:start="1471:58" pos:end="1471:62">delta</name></expr>;</expr_stmt>

                <if_stmt pos:start="1473:17" pos:end="1475:145"><if pos:start="1473:17" pos:end="1475:145">if <condition pos:start="1473:20" pos:end="1473:32">(<expr pos:start="1473:21" pos:end="1473:31"><name pos:start="1473:21" pos:end="1473:27">verbose</name> <operator pos:start="1473:29" pos:end="1473:29">&gt;</operator> <literal type="number" pos:start="1473:31" pos:end="1473:31">2</literal></expr>)</condition><block type="pseudo" pos:start="1475:21" pos:end="1475:145"><block_content pos:start="1475:21" pos:end="1475:145">

                    <expr_stmt pos:start="1475:21" pos:end="1475:145"><expr pos:start="1475:21" pos:end="1475:144"><call pos:start="1475:21" pos:end="1475:144"><name pos:start="1475:21" pos:end="1475:27">fprintf</name><argument_list pos:start="1475:28" pos:end="1475:144">(<argument pos:start="1475:29" pos:end="1475:34"><expr pos:start="1475:29" pos:end="1475:34"><name pos:start="1475:29" pos:end="1475:34">stderr</name></expr></argument>, <argument pos:start="1475:37" pos:end="1475:96"><expr pos:start="1475:37" pos:end="1475:96"><literal type="string" pos:start="1475:37" pos:end="1475:63">"timestamp discontinuity %"</literal><name pos:start="1475:64" pos:end="1475:69">PRId64</name><literal type="string" pos:start="1475:70" pos:end="1475:86">", new offset= %"</literal><name pos:start="1475:87" pos:end="1475:92">PRId64</name><literal type="string" pos:start="1475:93" pos:end="1475:96">"\n"</literal></expr></argument>, <argument pos:start="1475:99" pos:end="1475:103"><expr pos:start="1475:99" pos:end="1475:103"><name pos:start="1475:99" pos:end="1475:103">delta</name></expr></argument>, <argument pos:start="1475:106" pos:end="1475:143"><expr pos:start="1475:106" pos:end="1475:143"><name pos:start="1475:106" pos:end="1475:143"><name pos:start="1475:106" pos:end="1475:126">input_files_ts_offset</name><index pos:start="1475:127" pos:end="1475:143">[<expr pos:start="1475:128" pos:end="1475:142"><name pos:start="1475:128" pos:end="1475:142"><name pos:start="1475:128" pos:end="1475:130">ist</name><operator pos:start="1475:131" pos:end="1475:132">-&gt;</operator><name pos:start="1475:133" pos:end="1475:142">file_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1477:17" pos:end="1477:82"><expr pos:start="1477:17" pos:end="1477:81"><name pos:start="1477:17" pos:end="1477:23"><name pos:start="1477:17" pos:end="1477:19">pkt</name><operator pos:start="1477:20" pos:end="1477:20">.</operator><name pos:start="1477:21" pos:end="1477:23">dts</name></name><operator pos:start="1477:24" pos:end="1477:25">-=</operator> <call pos:start="1477:27" pos:end="1477:81"><name pos:start="1477:27" pos:end="1477:38">av_rescale_q</name><argument_list pos:start="1477:39" pos:end="1477:81">(<argument pos:start="1477:40" pos:end="1477:44"><expr pos:start="1477:40" pos:end="1477:44"><name pos:start="1477:40" pos:end="1477:44">delta</name></expr></argument>, <argument pos:start="1477:47" pos:end="1477:60"><expr pos:start="1477:47" pos:end="1477:60"><name pos:start="1477:47" pos:end="1477:60">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1477:63" pos:end="1477:80"><expr pos:start="1477:63" pos:end="1477:80"><name pos:start="1477:63" pos:end="1477:80"><name pos:start="1477:63" pos:end="1477:65">ist</name><operator pos:start="1477:66" pos:end="1477:67">-&gt;</operator><name pos:start="1477:68" pos:end="1477:69">st</name><operator pos:start="1477:70" pos:end="1477:71">-&gt;</operator><name pos:start="1477:72" pos:end="1477:80">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1479:17" pos:end="1481:86"><if pos:start="1479:17" pos:end="1481:86">if<condition pos:start="1479:19" pos:end="1479:45">(<expr pos:start="1479:20" pos:end="1479:44"><name pos:start="1479:20" pos:end="1479:26"><name pos:start="1479:20" pos:end="1479:22">pkt</name><operator pos:start="1479:23" pos:end="1479:23">.</operator><name pos:start="1479:24" pos:end="1479:26">pts</name></name> <operator pos:start="1479:28" pos:end="1479:29">!=</operator> <name pos:start="1479:31" pos:end="1479:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1481:21" pos:end="1481:86"><block_content pos:start="1481:21" pos:end="1481:86">

                    <expr_stmt pos:start="1481:21" pos:end="1481:86"><expr pos:start="1481:21" pos:end="1481:85"><name pos:start="1481:21" pos:end="1481:27"><name pos:start="1481:21" pos:end="1481:23">pkt</name><operator pos:start="1481:24" pos:end="1481:24">.</operator><name pos:start="1481:25" pos:end="1481:27">pts</name></name><operator pos:start="1481:28" pos:end="1481:29">-=</operator> <call pos:start="1481:31" pos:end="1481:85"><name pos:start="1481:31" pos:end="1481:42">av_rescale_q</name><argument_list pos:start="1481:43" pos:end="1481:85">(<argument pos:start="1481:44" pos:end="1481:48"><expr pos:start="1481:44" pos:end="1481:48"><name pos:start="1481:44" pos:end="1481:48">delta</name></expr></argument>, <argument pos:start="1481:51" pos:end="1481:64"><expr pos:start="1481:51" pos:end="1481:64"><name pos:start="1481:51" pos:end="1481:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1481:67" pos:end="1481:84"><expr pos:start="1481:67" pos:end="1481:84"><name pos:start="1481:67" pos:end="1481:84"><name pos:start="1481:67" pos:end="1481:69">ist</name><operator pos:start="1481:70" pos:end="1481:71">-&gt;</operator><name pos:start="1481:72" pos:end="1481:73">st</name><operator pos:start="1481:74" pos:end="1481:75">-&gt;</operator><name pos:start="1481:76" pos:end="1481:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1489:9" pos:end="1489:48">/* finish if recording time exhausted */</comment>

        <if_stmt pos:start="1491:9" pos:end="1499:9"><if pos:start="1491:9" pos:end="1499:9">if <condition pos:start="1491:12" pos:end="1493:115">(<expr pos:start="1491:13" pos:end="1493:114"><name pos:start="1491:13" pos:end="1491:26">recording_time</name> <operator pos:start="1491:28" pos:end="1491:29">!=</operator> <name pos:start="1491:31" pos:end="1491:39">INT64_MAX</name> <operator pos:start="1491:41" pos:end="1491:42">&amp;&amp;</operator>

            <macro pos:start="1493:13" pos:end="1493:109"><name pos:start="1493:13" pos:end="1493:25">av_compare_ts</name><argument_list pos:start="1493:26" pos:end="1493:109">(<argument pos:start="1493:27" pos:end="1493:33">pkt.pts</argument>, <argument pos:start="1493:36" pos:end="1493:53">ist-&gt;st-&gt;time_base</argument>, <argument pos:start="1493:56" pos:end="1493:82">recording_time + start_time</argument>, <argument pos:start="1493:85" pos:end="1493:98">(AVRational){<literal type="number" pos:start="1493:98" pos:end="1493:98">1</literal></argument>, <argument pos:start="1493:101" pos:end="1493:108"><literal type="number" pos:start="1493:101" pos:end="1493:107">1000000</literal>}</argument>)</argument_list></macro> <operator pos:start="1493:111" pos:end="1493:112">&gt;=</operator> <literal type="number" pos:start="1493:114" pos:end="1493:114">0</literal></expr>)</condition> <block pos:start="1493:117" pos:end="1499:9">{<block_content pos:start="1495:13" pos:end="1497:32">

            <expr_stmt pos:start="1495:13" pos:end="1495:44"><expr pos:start="1495:13" pos:end="1495:43"><name pos:start="1495:13" pos:end="1495:39"><name pos:start="1495:13" pos:end="1495:15">ist</name><operator pos:start="1495:16" pos:end="1495:17">-&gt;</operator><name pos:start="1495:18" pos:end="1495:39">is_past_recording_time</name></name> <operator pos:start="1495:41" pos:end="1495:41">=</operator> <literal type="number" pos:start="1495:43" pos:end="1495:43">1</literal></expr>;</expr_stmt>

            <goto pos:start="1497:13" pos:end="1497:32">goto <name pos:start="1497:18" pos:end="1497:31">discard_packet</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="1503:9" pos:end="1503:89">//fprintf(stderr,"read #%d.%d size=%d\n", ist-&gt;file_index, ist-&gt;index, pkt.size);</comment>

        <if_stmt pos:start="1505:9" pos:end="1523:9"><if pos:start="1505:9" pos:end="1523:9">if <condition pos:start="1505:12" pos:end="1505:76">(<expr pos:start="1505:13" pos:end="1505:75"><call pos:start="1505:13" pos:end="1505:71"><name pos:start="1505:13" pos:end="1505:25">output_packet</name><argument_list pos:start="1505:26" pos:end="1505:71">(<argument pos:start="1505:27" pos:end="1505:29"><expr pos:start="1505:27" pos:end="1505:29"><name pos:start="1505:27" pos:end="1505:29">ist</name></expr></argument>, <argument pos:start="1505:32" pos:end="1505:40"><expr pos:start="1505:32" pos:end="1505:40"><name pos:start="1505:32" pos:end="1505:40">ist_index</name></expr></argument>, <argument pos:start="1505:43" pos:end="1505:51"><expr pos:start="1505:43" pos:end="1505:51"><name pos:start="1505:43" pos:end="1505:51">ost_table</name></expr></argument>, <argument pos:start="1505:54" pos:end="1505:64"><expr pos:start="1505:54" pos:end="1505:64"><name pos:start="1505:54" pos:end="1505:64">nb_ostreams</name></expr></argument>, <argument pos:start="1505:67" pos:end="1505:70"><expr pos:start="1505:67" pos:end="1505:70"><operator pos:start="1505:67" pos:end="1505:67">&amp;</operator><name pos:start="1505:68" pos:end="1505:70">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="1505:73" pos:end="1505:73">&lt;</operator> <literal type="number" pos:start="1505:75" pos:end="1505:75">0</literal></expr>)</condition> <block pos:start="1505:78" pos:end="1523:9">{<block_content pos:start="1509:13" pos:end="1521:22">



            <if_stmt pos:start="1509:13" pos:end="1513:53"><if pos:start="1509:13" pos:end="1513:53">if <condition pos:start="1509:16" pos:end="1509:29">(<expr pos:start="1509:17" pos:end="1509:28"><name pos:start="1509:17" pos:end="1509:23">verbose</name> <operator pos:start="1509:25" pos:end="1509:26">&gt;=</operator> <literal type="number" pos:start="1509:28" pos:end="1509:28">0</literal></expr>)</condition><block type="pseudo" pos:start="1511:17" pos:end="1513:53"><block_content pos:start="1511:17" pos:end="1513:53">

                <expr_stmt pos:start="1511:17" pos:end="1513:53"><expr pos:start="1511:17" pos:end="1513:52"><call pos:start="1511:17" pos:end="1513:52"><name pos:start="1511:17" pos:end="1511:23">fprintf</name><argument_list pos:start="1511:24" pos:end="1513:52">(<argument pos:start="1511:25" pos:end="1511:30"><expr pos:start="1511:25" pos:end="1511:30"><name pos:start="1511:25" pos:end="1511:30">stderr</name></expr></argument>, <argument pos:start="1511:33" pos:end="1511:70"><expr pos:start="1511:33" pos:end="1511:70"><literal type="string" pos:start="1511:33" pos:end="1511:70">"Error while decoding stream #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="1513:25" pos:end="1513:39"><expr pos:start="1513:25" pos:end="1513:39"><name pos:start="1513:25" pos:end="1513:39"><name pos:start="1513:25" pos:end="1513:27">ist</name><operator pos:start="1513:28" pos:end="1513:29">-&gt;</operator><name pos:start="1513:30" pos:end="1513:39">file_index</name></name></expr></argument>, <argument pos:start="1513:42" pos:end="1513:51"><expr pos:start="1513:42" pos:end="1513:51"><name pos:start="1513:42" pos:end="1513:51"><name pos:start="1513:42" pos:end="1513:44">ist</name><operator pos:start="1513:45" pos:end="1513:46">-&gt;</operator><name pos:start="1513:47" pos:end="1513:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1515:13" pos:end="1517:31"><if pos:start="1515:13" pos:end="1517:31">if <condition pos:start="1515:16" pos:end="1515:30">(<expr pos:start="1515:17" pos:end="1515:29"><name pos:start="1515:17" pos:end="1515:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="1517:17" pos:end="1517:31"><block_content pos:start="1517:17" pos:end="1517:31">

                <expr_stmt pos:start="1517:17" pos:end="1517:31"><expr pos:start="1517:17" pos:end="1517:30"><call pos:start="1517:17" pos:end="1517:30"><name pos:start="1517:17" pos:end="1517:27">ffmpeg_exit</name><argument_list pos:start="1517:28" pos:end="1517:30">(<argument pos:start="1517:29" pos:end="1517:29"><expr pos:start="1517:29" pos:end="1517:29"><literal type="number" pos:start="1517:29" pos:end="1517:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1519:13" pos:end="1519:33"><expr pos:start="1519:13" pos:end="1519:32"><call pos:start="1519:13" pos:end="1519:32"><name pos:start="1519:13" pos:end="1519:26">av_free_packet</name><argument_list pos:start="1519:27" pos:end="1519:32">(<argument pos:start="1519:28" pos:end="1519:31"><expr pos:start="1519:28" pos:end="1519:31"><operator pos:start="1519:28" pos:end="1519:28">&amp;</operator><name pos:start="1519:29" pos:end="1519:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1521:13" pos:end="1521:22">goto <name pos:start="1521:18" pos:end="1521:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>



    <label pos:start="1527:5" pos:end="1527:19"><name pos:start="1527:5" pos:end="1527:18">discard_packet</name>:</label>

        <expr_stmt pos:start="1529:9" pos:end="1529:29"><expr pos:start="1529:9" pos:end="1529:28"><call pos:start="1529:9" pos:end="1529:28"><name pos:start="1529:9" pos:end="1529:22">av_free_packet</name><argument_list pos:start="1529:23" pos:end="1529:28">(<argument pos:start="1529:24" pos:end="1529:27"><expr pos:start="1529:24" pos:end="1529:27"><operator pos:start="1529:24" pos:end="1529:24">&amp;</operator><name pos:start="1529:25" pos:end="1529:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="1533:9" pos:end="1533:75">/* dump report by using the output first video and audio streams */</comment>

        <expr_stmt pos:start="1535:9" pos:end="1535:62"><expr pos:start="1535:9" pos:end="1535:61"><call pos:start="1535:9" pos:end="1535:61"><name pos:start="1535:9" pos:end="1535:20">print_report</name><argument_list pos:start="1535:21" pos:end="1535:61">(<argument pos:start="1535:22" pos:end="1535:33"><expr pos:start="1535:22" pos:end="1535:33"><name pos:start="1535:22" pos:end="1535:33">output_files</name></expr></argument>, <argument pos:start="1535:36" pos:end="1535:44"><expr pos:start="1535:36" pos:end="1535:44"><name pos:start="1535:36" pos:end="1535:44">ost_table</name></expr></argument>, <argument pos:start="1535:47" pos:end="1535:57"><expr pos:start="1535:47" pos:end="1535:57"><name pos:start="1535:47" pos:end="1535:57">nb_ostreams</name></expr></argument>, <argument pos:start="1535:60" pos:end="1535:60"><expr pos:start="1535:60" pos:end="1535:60"><literal type="number" pos:start="1535:60" pos:end="1535:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1541:5" pos:end="1541:65">/* at the end of stream, we must flush the decoder buffers */</comment>

    <for pos:start="1543:5" pos:end="1553:5">for<control pos:start="1543:8" pos:end="1543:30">(<init pos:start="1543:9" pos:end="1543:12"><expr pos:start="1543:9" pos:end="1543:11"><name pos:start="1543:9" pos:end="1543:9">i</name><operator pos:start="1543:10" pos:end="1543:10">=</operator><literal type="number" pos:start="1543:11" pos:end="1543:11">0</literal></expr>;</init><condition pos:start="1543:13" pos:end="1543:26"><expr pos:start="1543:13" pos:end="1543:25"><name pos:start="1543:13" pos:end="1543:13">i</name><operator pos:start="1543:14" pos:end="1543:14">&lt;</operator><name pos:start="1543:15" pos:end="1543:25">nb_istreams</name></expr>;</condition><incr pos:start="1543:27" pos:end="1543:29"><expr pos:start="1543:27" pos:end="1543:29"><name pos:start="1543:27" pos:end="1543:27">i</name><operator pos:start="1543:28" pos:end="1543:29">++</operator></expr></incr>)</control> <block pos:start="1543:32" pos:end="1553:5">{<block_content pos:start="1545:9" pos:end="1551:9">

        <expr_stmt pos:start="1545:9" pos:end="1545:27"><expr pos:start="1545:9" pos:end="1545:26"><name pos:start="1545:9" pos:end="1545:11">ist</name> <operator pos:start="1545:13" pos:end="1545:13">=</operator> <name pos:start="1545:15" pos:end="1545:26"><name pos:start="1545:15" pos:end="1545:23">ist_table</name><index pos:start="1545:24" pos:end="1545:26">[<expr pos:start="1545:25" pos:end="1545:25"><name pos:start="1545:25" pos:end="1545:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1547:9" pos:end="1551:9"><if pos:start="1547:9" pos:end="1551:9">if <condition pos:start="1547:12" pos:end="1547:33">(<expr pos:start="1547:13" pos:end="1547:32"><name pos:start="1547:13" pos:end="1547:32"><name pos:start="1547:13" pos:end="1547:15">ist</name><operator pos:start="1547:16" pos:end="1547:17">-&gt;</operator><name pos:start="1547:18" pos:end="1547:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1547:35" pos:end="1551:9">{<block_content pos:start="1549:13" pos:end="1549:64">

            <expr_stmt pos:start="1549:13" pos:end="1549:64"><expr pos:start="1549:13" pos:end="1549:63"><call pos:start="1549:13" pos:end="1549:63"><name pos:start="1549:13" pos:end="1549:25">output_packet</name><argument_list pos:start="1549:26" pos:end="1549:63">(<argument pos:start="1549:27" pos:end="1549:29"><expr pos:start="1549:27" pos:end="1549:29"><name pos:start="1549:27" pos:end="1549:29">ist</name></expr></argument>, <argument pos:start="1549:32" pos:end="1549:32"><expr pos:start="1549:32" pos:end="1549:32"><name pos:start="1549:32" pos:end="1549:32">i</name></expr></argument>, <argument pos:start="1549:35" pos:end="1549:43"><expr pos:start="1549:35" pos:end="1549:43"><name pos:start="1549:35" pos:end="1549:43">ost_table</name></expr></argument>, <argument pos:start="1549:46" pos:end="1549:56"><expr pos:start="1549:46" pos:end="1549:56"><name pos:start="1549:46" pos:end="1549:56">nb_ostreams</name></expr></argument>, <argument pos:start="1549:59" pos:end="1549:62"><expr pos:start="1549:59" pos:end="1549:62"><name pos:start="1549:59" pos:end="1549:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="1557:5" pos:end="1557:16"><expr pos:start="1557:5" pos:end="1557:15"><call pos:start="1557:5" pos:end="1557:15"><name pos:start="1557:5" pos:end="1557:13">term_exit</name><argument_list pos:start="1557:14" pos:end="1557:15">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1561:5" pos:end="1561:52">/* write the trailer if needed and close file */</comment>

    <for pos:start="1563:5" pos:end="1569:5">for<control pos:start="1563:8" pos:end="1563:34">(<init pos:start="1563:9" pos:end="1563:12"><expr pos:start="1563:9" pos:end="1563:11"><name pos:start="1563:9" pos:end="1563:9">i</name><operator pos:start="1563:10" pos:end="1563:10">=</operator><literal type="number" pos:start="1563:11" pos:end="1563:11">0</literal></expr>;</init><condition pos:start="1563:13" pos:end="1563:30"><expr pos:start="1563:13" pos:end="1563:29"><name pos:start="1563:13" pos:end="1563:13">i</name><operator pos:start="1563:14" pos:end="1563:14">&lt;</operator><name pos:start="1563:15" pos:end="1563:29">nb_output_files</name></expr>;</condition><incr pos:start="1563:31" pos:end="1563:33"><expr pos:start="1563:31" pos:end="1563:33"><name pos:start="1563:31" pos:end="1563:31">i</name><operator pos:start="1563:32" pos:end="1563:33">++</operator></expr></incr>)</control> <block pos:start="1563:36" pos:end="1569:5">{<block_content pos:start="1565:9" pos:end="1567:29">

        <expr_stmt pos:start="1565:9" pos:end="1565:29"><expr pos:start="1565:9" pos:end="1565:28"><name pos:start="1565:9" pos:end="1565:10">os</name> <operator pos:start="1565:12" pos:end="1565:12">=</operator> <name pos:start="1565:14" pos:end="1565:28"><name pos:start="1565:14" pos:end="1565:25">output_files</name><index pos:start="1565:26" pos:end="1565:28">[<expr pos:start="1565:27" pos:end="1565:27"><name pos:start="1565:27" pos:end="1565:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1567:9" pos:end="1567:29"><expr pos:start="1567:9" pos:end="1567:28"><call pos:start="1567:9" pos:end="1567:28"><name pos:start="1567:9" pos:end="1567:24">av_write_trailer</name><argument_list pos:start="1567:25" pos:end="1567:28">(<argument pos:start="1567:26" pos:end="1567:27"><expr pos:start="1567:26" pos:end="1567:27"><name pos:start="1567:26" pos:end="1567:27">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1573:5" pos:end="1573:64">/* dump report by using the first video and audio streams */</comment>

    <expr_stmt pos:start="1575:5" pos:end="1575:58"><expr pos:start="1575:5" pos:end="1575:57"><call pos:start="1575:5" pos:end="1575:57"><name pos:start="1575:5" pos:end="1575:16">print_report</name><argument_list pos:start="1575:17" pos:end="1575:57">(<argument pos:start="1575:18" pos:end="1575:29"><expr pos:start="1575:18" pos:end="1575:29"><name pos:start="1575:18" pos:end="1575:29">output_files</name></expr></argument>, <argument pos:start="1575:32" pos:end="1575:40"><expr pos:start="1575:32" pos:end="1575:40"><name pos:start="1575:32" pos:end="1575:40">ost_table</name></expr></argument>, <argument pos:start="1575:43" pos:end="1575:53"><expr pos:start="1575:43" pos:end="1575:53"><name pos:start="1575:43" pos:end="1575:53">nb_ostreams</name></expr></argument>, <argument pos:start="1575:56" pos:end="1575:56"><expr pos:start="1575:56" pos:end="1575:56"><literal type="number" pos:start="1575:56" pos:end="1575:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1579:5" pos:end="1579:28">/* close each encoder */</comment>

    <for pos:start="1581:5" pos:end="1599:5">for<control pos:start="1581:8" pos:end="1581:30">(<init pos:start="1581:9" pos:end="1581:12"><expr pos:start="1581:9" pos:end="1581:11"><name pos:start="1581:9" pos:end="1581:9">i</name><operator pos:start="1581:10" pos:end="1581:10">=</operator><literal type="number" pos:start="1581:11" pos:end="1581:11">0</literal></expr>;</init><condition pos:start="1581:13" pos:end="1581:26"><expr pos:start="1581:13" pos:end="1581:25"><name pos:start="1581:13" pos:end="1581:13">i</name><operator pos:start="1581:14" pos:end="1581:14">&lt;</operator><name pos:start="1581:15" pos:end="1581:25">nb_ostreams</name></expr>;</condition><incr pos:start="1581:27" pos:end="1581:29"><expr pos:start="1581:27" pos:end="1581:29"><name pos:start="1581:27" pos:end="1581:27">i</name><operator pos:start="1581:28" pos:end="1581:29">++</operator></expr></incr>)</control> <block pos:start="1581:32" pos:end="1599:5">{<block_content pos:start="1583:9" pos:end="1598:0">

        <expr_stmt pos:start="1583:9" pos:end="1583:27"><expr pos:start="1583:9" pos:end="1583:26"><name pos:start="1583:9" pos:end="1583:11">ost</name> <operator pos:start="1583:13" pos:end="1583:13">=</operator> <name pos:start="1583:15" pos:end="1583:26"><name pos:start="1583:15" pos:end="1583:23">ost_table</name><index pos:start="1583:24" pos:end="1583:26">[<expr pos:start="1583:25" pos:end="1583:25"><name pos:start="1583:25" pos:end="1583:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1585:9" pos:end="1594:0"><if pos:start="1585:9" pos:end="1594:0">if <condition pos:start="1585:12" pos:end="1585:33">(<expr pos:start="1585:13" pos:end="1585:32"><name pos:start="1585:13" pos:end="1585:32"><name pos:start="1585:13" pos:end="1585:15">ost</name><operator pos:start="1585:16" pos:end="1585:17">-&gt;</operator><name pos:start="1585:18" pos:end="1585:32">encoding_needed</name></name></expr>)</condition> <block pos:start="1585:35" pos:end="1594:0">{<block_content pos:start="1587:13" pos:end="1589:42">

            <expr_stmt pos:start="1587:13" pos:end="1587:48"><expr pos:start="1587:13" pos:end="1587:47"><call pos:start="1587:13" pos:end="1587:47"><name pos:start="1587:13" pos:end="1587:20">av_freep</name><argument_list pos:start="1587:21" pos:end="1587:47">(<argument pos:start="1587:22" pos:end="1587:46"><expr pos:start="1587:22" pos:end="1587:46"><operator pos:start="1587:22" pos:end="1587:22">&amp;</operator><name pos:start="1587:23" pos:end="1587:46"><name pos:start="1587:23" pos:end="1587:25">ost</name><operator pos:start="1587:26" pos:end="1587:27">-&gt;</operator><name pos:start="1587:28" pos:end="1587:29">st</name><operator pos:start="1587:30" pos:end="1587:31">-&gt;</operator><name pos:start="1587:32" pos:end="1587:36">codec</name><operator pos:start="1587:37" pos:end="1587:38">-&gt;</operator><name pos:start="1587:39" pos:end="1587:46">stats_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1589:13" pos:end="1589:42"><expr pos:start="1589:13" pos:end="1589:41"><call pos:start="1589:13" pos:end="1589:41"><name pos:start="1589:13" pos:end="1589:25">avcodec_close</name><argument_list pos:start="1589:26" pos:end="1589:41">(<argument pos:start="1589:27" pos:end="1589:40"><expr pos:start="1589:27" pos:end="1589:40"><name pos:start="1589:27" pos:end="1589:40"><name pos:start="1589:27" pos:end="1589:29">ost</name><operator pos:start="1589:30" pos:end="1589:31">-&gt;</operator><name pos:start="1589:32" pos:end="1589:33">st</name><operator pos:start="1589:34" pos:end="1589:35">-&gt;</operator><name pos:start="1589:36" pos:end="1589:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="1593:1" pos:end="1593:19">#<cpp:directive pos:start="1593:2" pos:end="1593:3">if</cpp:directive> <expr pos:start="1593:5" pos:end="1593:19"><name pos:start="1593:5" pos:end="1593:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="1595:9" pos:end="1598:0"><expr pos:start="1595:9" pos:end="1595:40"><call pos:start="1595:9" pos:end="1595:40"><name pos:start="1595:9" pos:end="1595:27">avfilter_graph_free</name><argument_list pos:start="1595:28" pos:end="1595:40">(<argument pos:start="1595:29" pos:end="1595:39"><expr pos:start="1595:29" pos:end="1595:39"><operator pos:start="1595:29" pos:end="1595:29">&amp;</operator><name pos:start="1595:30" pos:end="1595:39"><name pos:start="1595:30" pos:end="1595:32">ost</name><operator pos:start="1595:33" pos:end="1595:34">-&gt;</operator><name pos:start="1595:35" pos:end="1595:39">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1597:1" pos:end="1597:6">#<cpp:directive pos:start="1597:2" pos:end="1597:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <comment type="block" pos:start="1603:5" pos:end="1603:28">/* close each decoder */</comment>

    <for pos:start="1605:5" pos:end="1615:5">for<control pos:start="1605:8" pos:end="1605:30">(<init pos:start="1605:9" pos:end="1605:12"><expr pos:start="1605:9" pos:end="1605:11"><name pos:start="1605:9" pos:end="1605:9">i</name><operator pos:start="1605:10" pos:end="1605:10">=</operator><literal type="number" pos:start="1605:11" pos:end="1605:11">0</literal></expr>;</init><condition pos:start="1605:13" pos:end="1605:26"><expr pos:start="1605:13" pos:end="1605:25"><name pos:start="1605:13" pos:end="1605:13">i</name><operator pos:start="1605:14" pos:end="1605:14">&lt;</operator><name pos:start="1605:15" pos:end="1605:25">nb_istreams</name></expr>;</condition><incr pos:start="1605:27" pos:end="1605:29"><expr pos:start="1605:27" pos:end="1605:29"><name pos:start="1605:27" pos:end="1605:27">i</name><operator pos:start="1605:28" pos:end="1605:29">++</operator></expr></incr>)</control> <block pos:start="1605:32" pos:end="1615:5">{<block_content pos:start="1607:9" pos:end="1613:9">

        <expr_stmt pos:start="1607:9" pos:end="1607:27"><expr pos:start="1607:9" pos:end="1607:26"><name pos:start="1607:9" pos:end="1607:11">ist</name> <operator pos:start="1607:13" pos:end="1607:13">=</operator> <name pos:start="1607:15" pos:end="1607:26"><name pos:start="1607:15" pos:end="1607:23">ist_table</name><index pos:start="1607:24" pos:end="1607:26">[<expr pos:start="1607:25" pos:end="1607:25"><name pos:start="1607:25" pos:end="1607:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1609:9" pos:end="1613:9"><if pos:start="1609:9" pos:end="1613:9">if <condition pos:start="1609:12" pos:end="1609:33">(<expr pos:start="1609:13" pos:end="1609:32"><name pos:start="1609:13" pos:end="1609:32"><name pos:start="1609:13" pos:end="1609:15">ist</name><operator pos:start="1609:16" pos:end="1609:17">-&gt;</operator><name pos:start="1609:18" pos:end="1609:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1609:35" pos:end="1613:9">{<block_content pos:start="1611:13" pos:end="1611:42">

            <expr_stmt pos:start="1611:13" pos:end="1611:42"><expr pos:start="1611:13" pos:end="1611:41"><call pos:start="1611:13" pos:end="1611:41"><name pos:start="1611:13" pos:end="1611:25">avcodec_close</name><argument_list pos:start="1611:26" pos:end="1611:41">(<argument pos:start="1611:27" pos:end="1611:40"><expr pos:start="1611:27" pos:end="1611:40"><name pos:start="1611:27" pos:end="1611:40"><name pos:start="1611:27" pos:end="1611:29">ist</name><operator pos:start="1611:30" pos:end="1611:31">-&gt;</operator><name pos:start="1611:32" pos:end="1611:33">st</name><operator pos:start="1611:34" pos:end="1611:35">-&gt;</operator><name pos:start="1611:36" pos:end="1611:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1619:5" pos:end="1619:20">/* finished ! */</comment>

    <expr_stmt pos:start="1621:5" pos:end="1621:12"><expr pos:start="1621:5" pos:end="1621:11"><name pos:start="1621:5" pos:end="1621:7">ret</name> <operator pos:start="1621:9" pos:end="1621:9">=</operator> <literal type="number" pos:start="1621:11" pos:end="1621:11">0</literal></expr>;</expr_stmt>



 <label pos:start="1625:2" pos:end="1625:6"><name pos:start="1625:2" pos:end="1625:5">fail</name>:</label>

    <expr_stmt pos:start="1627:5" pos:end="1627:26"><expr pos:start="1627:5" pos:end="1627:25"><call pos:start="1627:5" pos:end="1627:25"><name pos:start="1627:5" pos:end="1627:12">av_freep</name><argument_list pos:start="1627:13" pos:end="1627:25">(<argument pos:start="1627:14" pos:end="1627:24"><expr pos:start="1627:14" pos:end="1627:24"><operator pos:start="1627:14" pos:end="1627:14">&amp;</operator><name pos:start="1627:15" pos:end="1627:24">bit_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1629:5" pos:end="1629:24"><expr pos:start="1629:5" pos:end="1629:23"><call pos:start="1629:5" pos:end="1629:23"><name pos:start="1629:5" pos:end="1629:11">av_free</name><argument_list pos:start="1629:12" pos:end="1629:23">(<argument pos:start="1629:13" pos:end="1629:22"><expr pos:start="1629:13" pos:end="1629:22"><name pos:start="1629:13" pos:end="1629:22">file_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1633:5" pos:end="1645:5"><if pos:start="1633:5" pos:end="1645:5">if <condition pos:start="1633:8" pos:end="1633:18">(<expr pos:start="1633:9" pos:end="1633:17"><name pos:start="1633:9" pos:end="1633:17">ist_table</name></expr>)</condition> <block pos:start="1633:20" pos:end="1645:5">{<block_content pos:start="1635:9" pos:end="1643:27">

        <for pos:start="1635:9" pos:end="1641:9">for<control pos:start="1635:12" pos:end="1635:34">(<init pos:start="1635:13" pos:end="1635:16"><expr pos:start="1635:13" pos:end="1635:15"><name pos:start="1635:13" pos:end="1635:13">i</name><operator pos:start="1635:14" pos:end="1635:14">=</operator><literal type="number" pos:start="1635:15" pos:end="1635:15">0</literal></expr>;</init><condition pos:start="1635:17" pos:end="1635:30"><expr pos:start="1635:17" pos:end="1635:29"><name pos:start="1635:17" pos:end="1635:17">i</name><operator pos:start="1635:18" pos:end="1635:18">&lt;</operator><name pos:start="1635:19" pos:end="1635:29">nb_istreams</name></expr>;</condition><incr pos:start="1635:31" pos:end="1635:33"><expr pos:start="1635:31" pos:end="1635:33"><name pos:start="1635:31" pos:end="1635:31">i</name><operator pos:start="1635:32" pos:end="1635:33">++</operator></expr></incr>)</control> <block pos:start="1635:36" pos:end="1641:9">{<block_content pos:start="1637:13" pos:end="1639:25">

            <expr_stmt pos:start="1637:13" pos:end="1637:31"><expr pos:start="1637:13" pos:end="1637:30"><name pos:start="1637:13" pos:end="1637:15">ist</name> <operator pos:start="1637:17" pos:end="1637:17">=</operator> <name pos:start="1637:19" pos:end="1637:30"><name pos:start="1637:19" pos:end="1637:27">ist_table</name><index pos:start="1637:28" pos:end="1637:30">[<expr pos:start="1637:29" pos:end="1637:29"><name pos:start="1637:29" pos:end="1637:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1639:13" pos:end="1639:25"><expr pos:start="1639:13" pos:end="1639:24"><call pos:start="1639:13" pos:end="1639:24"><name pos:start="1639:13" pos:end="1639:19">av_free</name><argument_list pos:start="1639:20" pos:end="1639:24">(<argument pos:start="1639:21" pos:end="1639:23"><expr pos:start="1639:21" pos:end="1639:23"><name pos:start="1639:21" pos:end="1639:23">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1643:9" pos:end="1643:27"><expr pos:start="1643:9" pos:end="1643:26"><call pos:start="1643:9" pos:end="1643:26"><name pos:start="1643:9" pos:end="1643:15">av_free</name><argument_list pos:start="1643:16" pos:end="1643:26">(<argument pos:start="1643:17" pos:end="1643:25"><expr pos:start="1643:17" pos:end="1643:25"><name pos:start="1643:17" pos:end="1643:25">ist_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="1647:5" pos:end="1697:5"><if pos:start="1647:5" pos:end="1697:5">if <condition pos:start="1647:8" pos:end="1647:18">(<expr pos:start="1647:9" pos:end="1647:17"><name pos:start="1647:9" pos:end="1647:17">ost_table</name></expr>)</condition> <block pos:start="1647:20" pos:end="1697:5">{<block_content pos:start="1649:9" pos:end="1695:27">

        <for pos:start="1649:9" pos:end="1693:9">for<control pos:start="1649:12" pos:end="1649:34">(<init pos:start="1649:13" pos:end="1649:16"><expr pos:start="1649:13" pos:end="1649:15"><name pos:start="1649:13" pos:end="1649:13">i</name><operator pos:start="1649:14" pos:end="1649:14">=</operator><literal type="number" pos:start="1649:15" pos:end="1649:15">0</literal></expr>;</init><condition pos:start="1649:17" pos:end="1649:30"><expr pos:start="1649:17" pos:end="1649:29"><name pos:start="1649:17" pos:end="1649:17">i</name><operator pos:start="1649:18" pos:end="1649:18">&lt;</operator><name pos:start="1649:19" pos:end="1649:29">nb_ostreams</name></expr>;</condition><incr pos:start="1649:31" pos:end="1649:33"><expr pos:start="1649:31" pos:end="1649:33"><name pos:start="1649:31" pos:end="1649:31">i</name><operator pos:start="1649:32" pos:end="1649:33">++</operator></expr></incr>)</control> <block pos:start="1649:36" pos:end="1693:9">{<block_content pos:start="1651:13" pos:end="1691:13">

            <expr_stmt pos:start="1651:13" pos:end="1651:31"><expr pos:start="1651:13" pos:end="1651:30"><name pos:start="1651:13" pos:end="1651:15">ost</name> <operator pos:start="1651:17" pos:end="1651:17">=</operator> <name pos:start="1651:19" pos:end="1651:30"><name pos:start="1651:19" pos:end="1651:27">ost_table</name><index pos:start="1651:28" pos:end="1651:30">[<expr pos:start="1651:29" pos:end="1651:29"><name pos:start="1651:29" pos:end="1651:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1653:13" pos:end="1691:13"><if pos:start="1653:13" pos:end="1691:13">if <condition pos:start="1653:16" pos:end="1653:20">(<expr pos:start="1653:17" pos:end="1653:19"><name pos:start="1653:17" pos:end="1653:19">ost</name></expr>)</condition> <block pos:start="1653:22" pos:end="1691:13">{<block_content pos:start="1655:17" pos:end="1689:29">

                <if_stmt pos:start="1655:17" pos:end="1657:57"><if pos:start="1655:17" pos:end="1657:57">if <condition pos:start="1655:20" pos:end="1655:41">(<expr pos:start="1655:21" pos:end="1655:40"><name pos:start="1655:21" pos:end="1655:40"><name pos:start="1655:21" pos:end="1655:23">ost</name><operator pos:start="1655:24" pos:end="1655:25">-&gt;</operator><name pos:start="1655:26" pos:end="1655:27">st</name><operator pos:start="1655:28" pos:end="1655:29">-&gt;</operator><name pos:start="1655:30" pos:end="1655:40">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="1657:21" pos:end="1657:57"><block_content pos:start="1657:21" pos:end="1657:57">

                    <expr_stmt pos:start="1657:21" pos:end="1657:57"><expr pos:start="1657:21" pos:end="1657:56"><call pos:start="1657:21" pos:end="1657:56"><name pos:start="1657:21" pos:end="1657:28">av_freep</name><argument_list pos:start="1657:29" pos:end="1657:56">(<argument pos:start="1657:30" pos:end="1657:55"><expr pos:start="1657:30" pos:end="1657:55"><operator pos:start="1657:30" pos:end="1657:30">&amp;</operator><name pos:start="1657:31" pos:end="1657:55"><name pos:start="1657:31" pos:end="1657:33">ost</name><operator pos:start="1657:34" pos:end="1657:35">-&gt;</operator><name pos:start="1657:36" pos:end="1657:37">st</name><operator pos:start="1657:38" pos:end="1657:39">-&gt;</operator><name pos:start="1657:40" pos:end="1657:44">codec</name><operator pos:start="1657:45" pos:end="1657:46">-&gt;</operator><name pos:start="1657:47" pos:end="1657:55">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1659:17" pos:end="1665:17"><if pos:start="1659:17" pos:end="1665:17">if <condition pos:start="1659:20" pos:end="1659:33">(<expr pos:start="1659:21" pos:end="1659:32"><name pos:start="1659:21" pos:end="1659:32"><name pos:start="1659:21" pos:end="1659:23">ost</name><operator pos:start="1659:24" pos:end="1659:25">-&gt;</operator><name pos:start="1659:26" pos:end="1659:32">logfile</name></name></expr>)</condition> <block pos:start="1659:35" pos:end="1665:17">{<block_content pos:start="1661:21" pos:end="1663:40">

                    <expr_stmt pos:start="1661:21" pos:end="1661:41"><expr pos:start="1661:21" pos:end="1661:40"><call pos:start="1661:21" pos:end="1661:40"><name pos:start="1661:21" pos:end="1661:26">fclose</name><argument_list pos:start="1661:27" pos:end="1661:40">(<argument pos:start="1661:28" pos:end="1661:39"><expr pos:start="1661:28" pos:end="1661:39"><name pos:start="1661:28" pos:end="1661:39"><name pos:start="1661:28" pos:end="1661:30">ost</name><operator pos:start="1661:31" pos:end="1661:32">-&gt;</operator><name pos:start="1661:33" pos:end="1661:39">logfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1663:21" pos:end="1663:40"><expr pos:start="1663:21" pos:end="1663:39"><name pos:start="1663:21" pos:end="1663:32"><name pos:start="1663:21" pos:end="1663:23">ost</name><operator pos:start="1663:24" pos:end="1663:25">-&gt;</operator><name pos:start="1663:26" pos:end="1663:32">logfile</name></name> <operator pos:start="1663:34" pos:end="1663:34">=</operator> <name pos:start="1663:36" pos:end="1663:39">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1667:17" pos:end="1667:40"><expr pos:start="1667:17" pos:end="1667:39"><call pos:start="1667:17" pos:end="1667:39"><name pos:start="1667:17" pos:end="1667:28">av_fifo_free</name><argument_list pos:start="1667:29" pos:end="1667:39">(<argument pos:start="1667:30" pos:end="1667:38"><expr pos:start="1667:30" pos:end="1667:38"><name pos:start="1667:30" pos:end="1667:38"><name pos:start="1667:30" pos:end="1667:32">ost</name><operator pos:start="1667:33" pos:end="1667:34">-&gt;</operator><name pos:start="1667:35" pos:end="1667:38">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1667:42" pos:end="1669:75">/* works even if fifo is not

                                             initialized but set to zero */</comment>

                <expr_stmt pos:start="1671:17" pos:end="1671:59"><expr pos:start="1671:17" pos:end="1671:58"><call pos:start="1671:17" pos:end="1671:58"><name pos:start="1671:17" pos:end="1671:24">av_freep</name><argument_list pos:start="1671:25" pos:end="1671:58">(<argument pos:start="1671:26" pos:end="1671:57"><expr pos:start="1671:26" pos:end="1671:57"><operator pos:start="1671:26" pos:end="1671:26">&amp;</operator><name pos:start="1671:27" pos:end="1671:57"><name pos:start="1671:27" pos:end="1671:29">ost</name><operator pos:start="1671:30" pos:end="1671:31">-&gt;</operator><name pos:start="1671:32" pos:end="1671:33">st</name><operator pos:start="1671:34" pos:end="1671:35">-&gt;</operator><name pos:start="1671:36" pos:end="1671:40">codec</name><operator pos:start="1671:41" pos:end="1671:42">-&gt;</operator><name pos:start="1671:43" pos:end="1671:57">subtitle_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1673:17" pos:end="1673:47"><expr pos:start="1673:17" pos:end="1673:46"><call pos:start="1673:17" pos:end="1673:46"><name pos:start="1673:17" pos:end="1673:23">av_free</name><argument_list pos:start="1673:24" pos:end="1673:46">(<argument pos:start="1673:25" pos:end="1673:45"><expr pos:start="1673:25" pos:end="1673:45"><name pos:start="1673:25" pos:end="1673:45"><name pos:start="1673:25" pos:end="1673:27">ost</name><operator pos:start="1673:28" pos:end="1673:29">-&gt;</operator><name pos:start="1673:30" pos:end="1673:37">pict_tmp</name><operator pos:start="1673:38" pos:end="1673:38">.</operator><name pos:start="1673:39" pos:end="1673:42">data</name><index pos:start="1673:43" pos:end="1673:45">[<expr pos:start="1673:44" pos:end="1673:44"><literal type="number" pos:start="1673:44" pos:end="1673:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1675:17" pos:end="1675:44"><expr pos:start="1675:17" pos:end="1675:43"><call pos:start="1675:17" pos:end="1675:43"><name pos:start="1675:17" pos:end="1675:23">av_free</name><argument_list pos:start="1675:24" pos:end="1675:43">(<argument pos:start="1675:25" pos:end="1675:42"><expr pos:start="1675:25" pos:end="1675:42"><name pos:start="1675:25" pos:end="1675:42"><name pos:start="1675:25" pos:end="1675:27">ost</name><operator pos:start="1675:28" pos:end="1675:29">-&gt;</operator><name pos:start="1675:30" pos:end="1675:42">forced_kf_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1677:17" pos:end="1679:59"><if pos:start="1677:17" pos:end="1679:59">if <condition pos:start="1677:20" pos:end="1677:40">(<expr pos:start="1677:21" pos:end="1677:39"><name pos:start="1677:21" pos:end="1677:39"><name pos:start="1677:21" pos:end="1677:23">ost</name><operator pos:start="1677:24" pos:end="1677:25">-&gt;</operator><name pos:start="1677:26" pos:end="1677:39">video_resample</name></name></expr>)</condition><block type="pseudo" pos:start="1679:21" pos:end="1679:59"><block_content pos:start="1679:21" pos:end="1679:59">

                    <expr_stmt pos:start="1679:21" pos:end="1679:59"><expr pos:start="1679:21" pos:end="1679:58"><call pos:start="1679:21" pos:end="1679:58"><name pos:start="1679:21" pos:end="1679:35">sws_freeContext</name><argument_list pos:start="1679:36" pos:end="1679:58">(<argument pos:start="1679:37" pos:end="1679:57"><expr pos:start="1679:37" pos:end="1679:57"><name pos:start="1679:37" pos:end="1679:57"><name pos:start="1679:37" pos:end="1679:39">ost</name><operator pos:start="1679:40" pos:end="1679:41">-&gt;</operator><name pos:start="1679:42" pos:end="1679:57">img_resample_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1681:17" pos:end="1683:56"><if pos:start="1681:17" pos:end="1683:56">if <condition pos:start="1681:20" pos:end="1681:34">(<expr pos:start="1681:21" pos:end="1681:33"><name pos:start="1681:21" pos:end="1681:33"><name pos:start="1681:21" pos:end="1681:23">ost</name><operator pos:start="1681:24" pos:end="1681:25">-&gt;</operator><name pos:start="1681:26" pos:end="1681:33">resample</name></name></expr>)</condition><block type="pseudo" pos:start="1683:21" pos:end="1683:56"><block_content pos:start="1683:21" pos:end="1683:56">

                    <expr_stmt pos:start="1683:21" pos:end="1683:56"><expr pos:start="1683:21" pos:end="1683:55"><call pos:start="1683:21" pos:end="1683:55"><name pos:start="1683:21" pos:end="1683:40">audio_resample_close</name><argument_list pos:start="1683:41" pos:end="1683:55">(<argument pos:start="1683:42" pos:end="1683:54"><expr pos:start="1683:42" pos:end="1683:54"><name pos:start="1683:42" pos:end="1683:54"><name pos:start="1683:42" pos:end="1683:44">ost</name><operator pos:start="1683:45" pos:end="1683:46">-&gt;</operator><name pos:start="1683:47" pos:end="1683:54">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1685:17" pos:end="1687:61"><if pos:start="1685:17" pos:end="1687:61">if <condition pos:start="1685:20" pos:end="1685:38">(<expr pos:start="1685:21" pos:end="1685:37"><name pos:start="1685:21" pos:end="1685:37"><name pos:start="1685:21" pos:end="1685:23">ost</name><operator pos:start="1685:24" pos:end="1685:25">-&gt;</operator><name pos:start="1685:26" pos:end="1685:37">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="1687:21" pos:end="1687:61"><block_content pos:start="1687:21" pos:end="1687:61">

                    <expr_stmt pos:start="1687:21" pos:end="1687:61"><expr pos:start="1687:21" pos:end="1687:60"><call pos:start="1687:21" pos:end="1687:60"><name pos:start="1687:21" pos:end="1687:41">av_audio_convert_free</name><argument_list pos:start="1687:42" pos:end="1687:60">(<argument pos:start="1687:43" pos:end="1687:59"><expr pos:start="1687:43" pos:end="1687:59"><name pos:start="1687:43" pos:end="1687:59"><name pos:start="1687:43" pos:end="1687:45">ost</name><operator pos:start="1687:46" pos:end="1687:47">-&gt;</operator><name pos:start="1687:48" pos:end="1687:59">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1689:17" pos:end="1689:29"><expr pos:start="1689:17" pos:end="1689:28"><call pos:start="1689:17" pos:end="1689:28"><name pos:start="1689:17" pos:end="1689:23">av_free</name><argument_list pos:start="1689:24" pos:end="1689:28">(<argument pos:start="1689:25" pos:end="1689:27"><expr pos:start="1689:25" pos:end="1689:27"><name pos:start="1689:25" pos:end="1689:27">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1695:9" pos:end="1695:27"><expr pos:start="1695:9" pos:end="1695:26"><call pos:start="1695:9" pos:end="1695:26"><name pos:start="1695:9" pos:end="1695:15">av_free</name><argument_list pos:start="1695:16" pos:end="1695:26">(<argument pos:start="1695:17" pos:end="1695:25"><expr pos:start="1695:17" pos:end="1695:25"><name pos:start="1695:17" pos:end="1695:25">ost_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1699:5" pos:end="1699:15">return <expr pos:start="1699:12" pos:end="1699:14"><name pos:start="1699:12" pos:end="1699:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
