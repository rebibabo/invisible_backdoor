<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17994.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:34">yuv2yuv1</name>)<parameter_list pos:start="1:36" pos:end="3:107">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:43">int16_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">lumSrc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:60">int16_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">chrSrc</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:43">uint8_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">dest</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:58">uint8_t</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">uDest</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:81"><decl pos:start="3:68" pos:end="3:81"><type pos:start="3:68" pos:end="3:81"><name pos:start="3:68" pos:end="3:74">uint8_t</name> <modifier pos:start="3:76" pos:end="3:76">*</modifier></type><name pos:start="3:77" pos:end="3:81">vDest</name></decl></parameter>, <parameter pos:start="3:84" pos:end="3:92"><decl pos:start="3:84" pos:end="3:92"><type pos:start="3:84" pos:end="3:92"><name pos:start="3:84" pos:end="3:87">long</name></type> <name pos:start="3:89" pos:end="3:92">dstW</name></decl></parameter>, <parameter pos:start="3:95" pos:end="3:106"><decl pos:start="3:95" pos:end="3:106"><type pos:start="3:95" pos:end="3:106"><name pos:start="3:95" pos:end="3:98">long</name></type> <name pos:start="3:100" pos:end="3:106">chrDstW</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="9:5" pos:end="116:0">

<cpp:ifdef pos:start="7:1" pos:end="7:15">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:15">HAVE_MMX</name></cpp:ifdef>

    <if_stmt pos:start="9:5" pos:end="39:5"><if pos:start="9:5" pos:end="39:5">if <condition pos:start="9:8" pos:end="9:14">(<expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:13">uDest</name></expr>)</condition>

    <block pos:start="11:5" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:10">

        <asm pos:start="13:9" pos:end="23:10">asm <specifier pos:start="13:13" pos:end="13:20">volatile</specifier>(

            YSCALEYUV2YV121

            :: "r" (chrSrc + chrDstW), "r" (uDest + chrDstW),

            "g" (-chrDstW)

            : "%"REG_a

        );</asm>



        <asm pos:start="27:9" pos:end="37:10">asm <specifier pos:start="27:13" pos:end="27:20">volatile</specifier>(

            YSCALEYUV2YV121

            :: "r" (chrSrc + 2048 + chrDstW), "r" (vDest + chrDstW),

            "g" (-chrDstW)

            : "%"REG_a

        );</asm>

    </block_content>}</block></if></if_stmt>



    <asm pos:start="43:5" pos:end="56:0">asm <specifier pos:start="43:9" pos:end="43:16">volatile</specifier>(

        YSCALEYUV2YV121

        :: "r" (lumSrc + dstW), "r" (dest + dstW),

        "g" (-dstW)

        : "%"REG_a

    );</asm>

<cpp:else pos:start="55:1" pos:end="55:5">#<cpp:directive pos:start="55:2" pos:end="55:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="57:5" pos:end="57:10"><decl pos:start="57:5" pos:end="57:9"><type pos:start="57:5" pos:end="57:7"><name pos:start="57:5" pos:end="57:7">int</name></type> <name pos:start="57:9" pos:end="57:9">i</name></decl>;</decl_stmt>

    <for pos:start="59:5" pos:end="79:5">for <control pos:start="59:9" pos:end="59:26">(<init pos:start="59:10" pos:end="59:13"><expr pos:start="59:10" pos:end="59:12"><name pos:start="59:10" pos:end="59:10">i</name><operator pos:start="59:11" pos:end="59:11">=</operator><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</init> <condition pos:start="59:15" pos:end="59:21"><expr pos:start="59:15" pos:end="59:20"><name pos:start="59:15" pos:end="59:15">i</name><operator pos:start="59:16" pos:end="59:16">&lt;</operator><name pos:start="59:17" pos:end="59:20">dstW</name></expr>;</condition> <incr pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><name pos:start="59:23" pos:end="59:23">i</name><operator pos:start="59:24" pos:end="59:25">++</operator></expr></incr>)</control>

    <block pos:start="61:5" pos:end="79:5">{<block_content pos:start="63:9" pos:end="77:21">

        <decl_stmt pos:start="63:9" pos:end="63:30"><decl pos:start="63:9" pos:end="63:29"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:15">val</name><init pos:start="63:16" pos:end="63:29">= <expr pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:26"><name pos:start="63:18" pos:end="63:23">lumSrc</name><index pos:start="63:24" pos:end="63:26">[<expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">i</name></expr>]</index></name><operator pos:start="63:27" pos:end="63:28">&gt;&gt;</operator><literal type="number" pos:start="63:29" pos:end="63:29">7</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:20">(<expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">val</name><operator pos:start="67:16" pos:end="67:16">&amp;</operator><literal type="number" pos:start="67:17" pos:end="67:19">256</literal></expr>)</condition><block pos:start="67:21" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:31">

            <if_stmt pos:start="69:13" pos:end="71:31"><if pos:start="69:13" pos:end="69:29">if <condition pos:start="69:16" pos:end="69:22">(<expr pos:start="69:17" pos:end="69:21"><name pos:start="69:17" pos:end="69:19">val</name><operator pos:start="69:20" pos:end="69:20">&lt;</operator><literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>)</condition><block type="pseudo" pos:start="69:24" pos:end="69:29"><block_content pos:start="69:24" pos:end="69:29"> <expr_stmt pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:26">val</name><operator pos:start="69:27" pos:end="69:27">=</operator><literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="71:13" pos:end="71:31">else<block type="pseudo" pos:start="71:24" pos:end="71:31"><block_content pos:start="71:24" pos:end="71:31">       <expr_stmt pos:start="71:24" pos:end="71:31"><expr pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:26">val</name><operator pos:start="71:27" pos:end="71:27">=</operator><literal type="number" pos:start="71:28" pos:end="71:30">255</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:12">dest</name><index pos:start="77:13" pos:end="77:15">[<expr pos:start="77:14" pos:end="77:14"><name pos:start="77:14" pos:end="77:14">i</name></expr>]</index></name><operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:20">val</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="83:5" pos:end="116:0"><if pos:start="83:5" pos:end="116:0">if <condition pos:start="83:8" pos:end="83:14">(<expr pos:start="83:9" pos:end="83:13"><name pos:start="83:9" pos:end="83:13">uDest</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="116:0"><block_content pos:start="85:9" pos:end="116:0">

        <for pos:start="85:9" pos:end="116:0">for <control pos:start="85:13" pos:end="85:33">(<init pos:start="85:14" pos:end="85:17"><expr pos:start="85:14" pos:end="85:16"><name pos:start="85:14" pos:end="85:14">i</name><operator pos:start="85:15" pos:end="85:15">=</operator><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>;</init> <condition pos:start="85:19" pos:end="85:28"><expr pos:start="85:19" pos:end="85:27"><name pos:start="85:19" pos:end="85:19">i</name><operator pos:start="85:20" pos:end="85:20">&lt;</operator><name pos:start="85:21" pos:end="85:27">chrDstW</name></expr>;</condition> <incr pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:30">i</name><operator pos:start="85:31" pos:end="85:32">++</operator></expr></incr>)</control>

        <block pos:start="87:9" pos:end="116:0">{<block_content pos:start="89:13" pos:end="111:24">

            <decl_stmt pos:start="89:13" pos:end="89:31"><decl pos:start="89:13" pos:end="89:30"><type pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">int</name></type> <name pos:start="89:17" pos:end="89:17">u</name><init pos:start="89:18" pos:end="89:30">=<expr pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:27"><name pos:start="89:19" pos:end="89:24">chrSrc</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">i</name></expr>]</index></name><operator pos:start="89:28" pos:end="89:29">&gt;&gt;</operator><literal type="number" pos:start="89:30" pos:end="89:30">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="91:13" pos:end="91:38"><decl pos:start="91:13" pos:end="91:37"><type pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">int</name></type> <name pos:start="91:17" pos:end="91:17">v</name><init pos:start="91:18" pos:end="91:37">=<expr pos:start="91:19" pos:end="91:37"><name pos:start="91:19" pos:end="91:34"><name pos:start="91:19" pos:end="91:24">chrSrc</name><index pos:start="91:25" pos:end="91:34">[<expr pos:start="91:26" pos:end="91:33"><name pos:start="91:26" pos:end="91:26">i</name> <operator pos:start="91:28" pos:end="91:28">+</operator> <literal type="number" pos:start="91:30" pos:end="91:33">2048</literal></expr>]</index></name><operator pos:start="91:35" pos:end="91:36">&gt;&gt;</operator><literal type="number" pos:start="91:37" pos:end="91:37">7</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="95:13" pos:end="105:13"><if pos:start="95:13" pos:end="105:13">if <condition pos:start="95:16" pos:end="95:26">(<expr pos:start="95:17" pos:end="95:25"><operator pos:start="95:17" pos:end="95:17">(</operator><name pos:start="95:18" pos:end="95:18">u</name><operator pos:start="95:19" pos:end="95:19">|</operator><name pos:start="95:20" pos:end="95:20">v</name><operator pos:start="95:21" pos:end="95:21">)</operator><operator pos:start="95:22" pos:end="95:22">&amp;</operator><literal type="number" pos:start="95:23" pos:end="95:25">256</literal></expr>)</condition><block pos:start="95:27" pos:end="105:13">{<block_content pos:start="97:17" pos:end="103:38">

                <if_stmt pos:start="97:17" pos:end="99:38"><if pos:start="97:17" pos:end="97:36">if <condition pos:start="97:20" pos:end="97:24">(<expr pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:21">u</name><operator pos:start="97:22" pos:end="97:22">&lt;</operator><literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>)</condition><block type="pseudo" pos:start="97:33" pos:end="97:36"><block_content pos:start="97:33" pos:end="97:36">        <expr_stmt pos:start="97:33" pos:end="97:36"><expr pos:start="97:33" pos:end="97:35"><name pos:start="97:33" pos:end="97:33">u</name><operator pos:start="97:34" pos:end="97:34">=</operator><literal type="number" pos:start="97:35" pos:end="97:35">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="99:17" pos:end="99:38">else if <condition pos:start="99:25" pos:end="99:31">(<expr pos:start="99:26" pos:end="99:30"><name pos:start="99:26" pos:end="99:26">u</name><operator pos:start="99:27" pos:end="99:27">&gt;</operator><literal type="number" pos:start="99:28" pos:end="99:30">255</literal></expr>)</condition><block type="pseudo" pos:start="99:33" pos:end="99:38"><block_content pos:start="99:33" pos:end="99:38"> <expr_stmt pos:start="99:33" pos:end="99:38"><expr pos:start="99:33" pos:end="99:37"><name pos:start="99:33" pos:end="99:33">u</name><operator pos:start="99:34" pos:end="99:34">=</operator><literal type="number" pos:start="99:35" pos:end="99:37">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="101:17" pos:end="103:38"><if pos:start="101:17" pos:end="101:36">if <condition pos:start="101:20" pos:end="101:24">(<expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:21">v</name><operator pos:start="101:22" pos:end="101:22">&lt;</operator><literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>)</condition><block type="pseudo" pos:start="101:33" pos:end="101:36"><block_content pos:start="101:33" pos:end="101:36">        <expr_stmt pos:start="101:33" pos:end="101:36"><expr pos:start="101:33" pos:end="101:35"><name pos:start="101:33" pos:end="101:33">v</name><operator pos:start="101:34" pos:end="101:34">=</operator><literal type="number" pos:start="101:35" pos:end="101:35">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="103:17" pos:end="103:38">else if <condition pos:start="103:25" pos:end="103:31">(<expr pos:start="103:26" pos:end="103:30"><name pos:start="103:26" pos:end="103:26">v</name><operator pos:start="103:27" pos:end="103:27">&gt;</operator><literal type="number" pos:start="103:28" pos:end="103:30">255</literal></expr>)</condition><block type="pseudo" pos:start="103:33" pos:end="103:38"><block_content pos:start="103:33" pos:end="103:38"> <expr_stmt pos:start="103:33" pos:end="103:38"><expr pos:start="103:33" pos:end="103:37"><name pos:start="103:33" pos:end="103:33">v</name><operator pos:start="103:34" pos:end="103:34">=</operator><literal type="number" pos:start="103:35" pos:end="103:37">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:24"><expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:17">uDest</name><index pos:start="109:18" pos:end="109:20">[<expr pos:start="109:19" pos:end="109:19"><name pos:start="109:19" pos:end="109:19">i</name></expr>]</index></name><operator pos:start="109:21" pos:end="109:21">=</operator> <name pos:start="109:23" pos:end="109:23">u</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:24"><expr pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:17">vDest</name><index pos:start="111:18" pos:end="111:20">[<expr pos:start="111:19" pos:end="111:19"><name pos:start="111:19" pos:end="111:19">i</name></expr>]</index></name><operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:23">v</name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
