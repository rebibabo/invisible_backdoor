<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3087.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stsd</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:20">entries</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:46"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:46">[<expr pos:start="17:25" pos:end="17:45"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name> <operator pos:start="17:43" pos:end="17:43">-</operator> <literal type="number" pos:start="17:45" pos:end="17:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><call pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11">avio_r8</name><argument_list pos:start="23:12" pos:end="23:15">(<argument pos:start="23:13" pos:end="23:14"><expr pos:start="23:13" pos:end="23:14"><name pos:start="23:13" pos:end="23:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:18" pos:end="23:30">/* version */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rb24</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:20" pos:end="25:30">/* flags */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:11">entries</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:23">avio_rb32</name><argument_list pos:start="27:24" pos:end="27:27">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:15">entries</name> <operator pos:start="31:17" pos:end="31:18">&lt;=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:35">

        <expr_stmt pos:start="33:9" pos:end="33:74"><expr pos:start="33:9" pos:end="33:73"><call pos:start="33:9" pos:end="33:73"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:73">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">c</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">fc</name></name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:63"><expr pos:start="33:37" pos:end="33:63"><literal type="string" pos:start="33:37" pos:end="33:63">"invalid STSD entries %d\n"</literal></expr></argument>, <argument pos:start="33:66" pos:end="33:72"><expr pos:start="33:66" pos:end="33:72"><name pos:start="33:66" pos:end="33:72">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:10">sc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:21">extradata</name></name></expr>)</condition> <block pos:start="41:24" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:35">

        <expr_stmt pos:start="43:9" pos:end="45:56"><expr pos:start="43:9" pos:end="45:55"><call pos:start="43:9" pos:end="45:55"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="45:55">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:16">c</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:20">fc</name></name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="45:16" pos:end="45:54"><expr pos:start="45:16" pos:end="45:54"><literal type="string" pos:start="45:16" pos:end="45:54">"Duplicate stsd found in this track.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:35">return <expr pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:55">/* Prepare space for hosting multiple extradata. */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:70"><expr pos:start="55:5" pos:end="55:69"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:6">sc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:17">extradata</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:69"><name pos:start="55:21" pos:end="55:36">av_mallocz_array</name><argument_list pos:start="55:37" pos:end="55:69">(<argument pos:start="55:38" pos:end="55:44"><expr pos:start="55:38" pos:end="55:44"><name pos:start="55:38" pos:end="55:44">entries</name></expr></argument>, <argument pos:start="55:47" pos:end="55:68"><expr pos:start="55:47" pos:end="55:68"><sizeof pos:start="55:47" pos:end="55:68">sizeof<argument_list pos:start="55:53" pos:end="55:68">(<argument pos:start="55:54" pos:end="55:67"><expr pos:start="55:54" pos:end="55:67"><operator pos:start="55:54" pos:end="55:54">*</operator><name pos:start="55:55" pos:end="55:67"><name pos:start="55:55" pos:end="55:56">sc</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:67">extradata</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:31"><if pos:start="57:5" pos:end="59:31">if <condition pos:start="57:8" pos:end="57:23">(<expr pos:start="57:9" pos:end="57:22"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:22"><name pos:start="57:10" pos:end="57:11">sc</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:22">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:31"><block_content pos:start="59:9" pos:end="59:31">

        <return pos:start="59:9" pos:end="59:31">return <expr pos:start="59:16" pos:end="59:30"><call pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:22">AVERROR</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:80"><expr pos:start="63:5" pos:end="63:79"><name pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:6">sc</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:22">extradata_size</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:79"><name pos:start="63:26" pos:end="63:41">av_mallocz_array</name><argument_list pos:start="63:42" pos:end="63:79">(<argument pos:start="63:43" pos:end="63:49"><expr pos:start="63:43" pos:end="63:49"><name pos:start="63:43" pos:end="63:49">entries</name></expr></argument>, <argument pos:start="63:52" pos:end="63:78"><expr pos:start="63:52" pos:end="63:78"><sizeof pos:start="63:52" pos:end="63:78">sizeof<argument_list pos:start="63:58" pos:end="63:78">(<argument pos:start="63:59" pos:end="63:77"><expr pos:start="63:59" pos:end="63:77"><operator pos:start="63:59" pos:end="63:59">*</operator><name pos:start="63:60" pos:end="63:77"><name pos:start="63:60" pos:end="63:61">sc</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:77">extradata_size</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:28">(<expr pos:start="65:9" pos:end="65:27"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:27"><name pos:start="65:10" pos:end="65:11">sc</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:27">extradata_size</name></name></expr>)</condition> <block pos:start="65:30" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:29"><name pos:start="67:15" pos:end="67:21">AVERROR</name><argument_list pos:start="67:22" pos:end="67:29">(<argument pos:start="67:23" pos:end="67:28"><expr pos:start="67:23" pos:end="67:28"><name pos:start="67:23" pos:end="67:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:51"><expr pos:start="75:5" pos:end="75:50"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:50"><name pos:start="75:11" pos:end="75:34">ff_mov_read_stsd_entries</name><argument_list pos:start="75:35" pos:end="75:50">(<argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><name pos:start="75:36" pos:end="75:36">c</name></expr></argument>, <argument pos:start="75:39" pos:end="75:40"><expr pos:start="75:39" pos:end="75:40"><name pos:start="75:39" pos:end="75:40">pb</name></expr></argument>, <argument pos:start="75:43" pos:end="75:49"><expr pos:start="75:43" pos:end="75:49"><name pos:start="75:43" pos:end="75:49">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:18"><if pos:start="77:5" pos:end="79:18">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:18"><block_content pos:start="79:9" pos:end="79:18">

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:6">sc</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:18">stsd_count</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:28">entries</name></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:45">/* Restore back the primary extradata. */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><call pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:38">(<argument pos:start="89:14" pos:end="89:37"><expr pos:start="89:14" pos:end="89:37"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:37"><name pos:start="89:15" pos:end="89:16">st</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:26">codecpar</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:37">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:57"><expr pos:start="91:5" pos:end="91:56"><name pos:start="91:5" pos:end="91:32"><name pos:start="91:5" pos:end="91:6">st</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:16">codecpar</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:32">extradata_size</name></name> <operator pos:start="91:34" pos:end="91:34">=</operator> <name pos:start="91:36" pos:end="91:56"><name pos:start="91:36" pos:end="91:37">sc</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:53">extradata_size</name><index pos:start="91:54" pos:end="91:56">[<expr pos:start="91:55" pos:end="91:55"><literal type="number" pos:start="91:55" pos:end="91:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="103:5">if <condition pos:start="93:8" pos:end="93:30">(<expr pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:10">sc</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:26">extradata_size</name><index pos:start="93:27" pos:end="93:29">[<expr pos:start="93:28" pos:end="93:28"><literal type="number" pos:start="93:28" pos:end="93:28">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="93:32" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:81">

        <expr_stmt pos:start="95:9" pos:end="95:99"><expr pos:start="95:9" pos:end="95:98"><name pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:10">st</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:20">codecpar</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:31">extradata</name></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <call pos:start="95:35" pos:end="95:98"><name pos:start="95:35" pos:end="95:44">av_mallocz</name><argument_list pos:start="95:45" pos:end="95:98">(<argument pos:start="95:46" pos:end="95:97"><expr pos:start="95:46" pos:end="95:97"><name pos:start="95:46" pos:end="95:66"><name pos:start="95:46" pos:end="95:47">sc</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:63">extradata_size</name><index pos:start="95:64" pos:end="95:66">[<expr pos:start="95:65" pos:end="95:65"><literal type="number" pos:start="95:65" pos:end="95:65">0</literal></expr>]</index></name> <operator pos:start="95:68" pos:end="95:68">+</operator> <name pos:start="95:70" pos:end="95:97">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:35"><if pos:start="97:9" pos:end="99:35">if <condition pos:start="97:12" pos:end="97:37">(<expr pos:start="97:13" pos:end="97:36"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:36"><name pos:start="97:14" pos:end="97:15">st</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:25">codecpar</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:36">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:35"><block_content pos:start="99:13" pos:end="99:35">

            <return pos:start="99:13" pos:end="99:35">return <expr pos:start="99:20" pos:end="99:34"><call pos:start="99:20" pos:end="99:34"><name pos:start="99:20" pos:end="99:26">AVERROR</name><argument_list pos:start="99:27" pos:end="99:34">(<argument pos:start="99:28" pos:end="99:33"><expr pos:start="99:28" pos:end="99:33"><name pos:start="99:28" pos:end="99:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:81"><expr pos:start="101:9" pos:end="101:80"><call pos:start="101:9" pos:end="101:80"><name pos:start="101:9" pos:end="101:14">memcpy</name><argument_list pos:start="101:15" pos:end="101:80">(<argument pos:start="101:16" pos:end="101:38"><expr pos:start="101:16" pos:end="101:38"><name pos:start="101:16" pos:end="101:38"><name pos:start="101:16" pos:end="101:17">st</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:27">codecpar</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:38">extradata</name></name></expr></argument>, <argument pos:start="101:41" pos:end="101:56"><expr pos:start="101:41" pos:end="101:56"><name pos:start="101:41" pos:end="101:56"><name pos:start="101:41" pos:end="101:42">sc</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:53">extradata</name><index pos:start="101:54" pos:end="101:56">[<expr pos:start="101:55" pos:end="101:55"><literal type="number" pos:start="101:55" pos:end="101:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:59" pos:end="101:79"><expr pos:start="101:59" pos:end="101:79"><name pos:start="101:59" pos:end="101:79"><name pos:start="101:59" pos:end="101:60">sc</name><operator pos:start="101:61" pos:end="101:62">-&gt;</operator><name pos:start="101:63" pos:end="101:76">extradata_size</name><index pos:start="101:77" pos:end="101:79">[<expr pos:start="101:78" pos:end="101:78"><literal type="number" pos:start="101:78" pos:end="101:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="107:5" pos:end="107:50">return <expr pos:start="107:12" pos:end="107:49"><call pos:start="107:12" pos:end="107:49"><name pos:start="107:12" pos:end="107:34">mov_finalize_stsd_codec</name><argument_list pos:start="107:35" pos:end="107:49">(<argument pos:start="107:36" pos:end="107:36"><expr pos:start="107:36" pos:end="107:36"><name pos:start="107:36" pos:end="107:36">c</name></expr></argument>, <argument pos:start="107:39" pos:end="107:40"><expr pos:start="107:39" pos:end="107:40"><name pos:start="107:39" pos:end="107:40">pb</name></expr></argument>, <argument pos:start="107:43" pos:end="107:44"><expr pos:start="107:43" pos:end="107:44"><name pos:start="107:43" pos:end="107:44">st</name></expr></argument>, <argument pos:start="107:47" pos:end="107:48"><expr pos:start="107:47" pos:end="107:48"><name pos:start="107:47" pos:end="107:48">sc</name></expr></argument>)</argument_list></call></expr>;</return>

<label pos:start="109:1" pos:end="109:5"><name pos:start="109:1" pos:end="109:4">fail</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:29"><expr pos:start="111:5" pos:end="111:28"><call pos:start="111:5" pos:end="111:28"><name pos:start="111:5" pos:end="111:12">av_freep</name><argument_list pos:start="111:13" pos:end="111:28">(<argument pos:start="111:14" pos:end="111:27"><expr pos:start="111:14" pos:end="111:27"><operator pos:start="111:14" pos:end="111:14">&amp;</operator><name pos:start="111:15" pos:end="111:27"><name pos:start="111:15" pos:end="111:16">sc</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:27">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:34"><expr pos:start="113:5" pos:end="113:33"><call pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:12">av_freep</name><argument_list pos:start="113:13" pos:end="113:33">(<argument pos:start="113:14" pos:end="113:32"><expr pos:start="113:14" pos:end="113:32"><operator pos:start="113:14" pos:end="113:14">&amp;</operator><name pos:start="113:15" pos:end="113:32"><name pos:start="113:15" pos:end="113:16">sc</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:32">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
