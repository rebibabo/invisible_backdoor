<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5318.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">rtl8139_io_writew</name><parameter_list pos:start="1:30" pos:end="1:71">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:70">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RTL8139State</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:17"><expr pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:8">addr</name> <operator pos:start="9:10" pos:end="9:11">&amp;=</operator> <literal type="number" pos:start="9:13" pos:end="9:16">0xfe</literal></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="115:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition>

    <block pos:start="15:5" pos:end="115:5">{<block_content pos:start="17:9" pos:end="113:18">

        <case pos:start="17:9" pos:end="17:22">case <expr pos:start="17:14" pos:end="17:21"><name pos:start="17:14" pos:end="17:21">IntrMask</name></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:43"><expr pos:start="19:13" pos:end="19:42"><call pos:start="19:13" pos:end="19:42"><name pos:start="19:13" pos:end="19:34">rtl8139_IntrMask_write</name><argument_list pos:start="19:35" pos:end="19:42">(<argument pos:start="19:36" pos:end="19:36"><expr pos:start="19:36" pos:end="19:36"><name pos:start="19:36" pos:end="19:36">s</name></expr></argument>, <argument pos:start="19:39" pos:end="19:41"><expr pos:start="19:39" pos:end="19:41"><name pos:start="19:39" pos:end="19:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>



        <case pos:start="25:9" pos:end="25:24">case <expr pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:23">IntrStatus</name></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:45"><expr pos:start="27:13" pos:end="27:44"><call pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:36">rtl8139_IntrStatus_write</name><argument_list pos:start="27:37" pos:end="27:44">(<argument pos:start="27:38" pos:end="27:38"><expr pos:start="27:38" pos:end="27:38"><name pos:start="27:38" pos:end="27:38">s</name></expr></argument>, <argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>



        <case pos:start="33:9" pos:end="33:23">case <expr pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:22">MultiIntr</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><call pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:35">rtl8139_MultiIntr_write</name><argument_list pos:start="35:36" pos:end="35:43">(<argument pos:start="35:37" pos:end="35:37"><expr pos:start="35:37" pos:end="35:37"><name pos:start="35:37" pos:end="35:37">s</name></expr></argument>, <argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:42">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>



        <case pos:start="41:9" pos:end="41:22">case <expr pos:start="41:14" pos:end="41:21"><name pos:start="41:14" pos:end="41:21">RxBufPtr</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><call pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:34">rtl8139_RxBufPtr_write</name><argument_list pos:start="43:35" pos:end="43:42">(<argument pos:start="43:36" pos:end="43:36"><expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">s</name></expr></argument>, <argument pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>



        <case pos:start="49:9" pos:end="49:27">case <expr pos:start="49:14" pos:end="49:26"><name pos:start="49:14" pos:end="49:26">BasicModeCtrl</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:39">rtl8139_BasicModeCtrl_write</name><argument_list pos:start="51:40" pos:end="51:47">(<argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">s</name></expr></argument>, <argument pos:start="51:44" pos:end="51:46"><expr pos:start="51:44" pos:end="51:46"><name pos:start="51:44" pos:end="51:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:29">case <expr pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:28">BasicModeStatus</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><call pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:41">rtl8139_BasicModeStatus_write</name><argument_list pos:start="57:42" pos:end="57:49">(<argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><name pos:start="57:43" pos:end="57:43">s</name></expr></argument>, <argument pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><name pos:start="57:46" pos:end="57:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:24">case <expr pos:start="61:14" pos:end="61:23"><name pos:start="61:14" pos:end="61:23">NWayAdvert</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:61"><expr pos:start="63:13" pos:end="63:60"><call pos:start="63:13" pos:end="63:60"><name pos:start="63:13" pos:end="63:19">DPRINTF</name><argument_list pos:start="63:20" pos:end="63:60">(<argument pos:start="63:21" pos:end="63:54"><expr pos:start="63:21" pos:end="63:54"><literal type="string" pos:start="63:21" pos:end="63:54">"NWayAdvert write(w) val=0x%04x\n"</literal></expr></argument>, <argument pos:start="63:57" pos:end="63:59"><expr pos:start="63:57" pos:end="63:59"><name pos:start="63:57" pos:end="63:59">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:25">NWayAdvert</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:31">val</name></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:22">case <expr pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:21">NWayLPAR</name></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:69"><expr pos:start="71:13" pos:end="71:68"><call pos:start="71:13" pos:end="71:68"><name pos:start="71:13" pos:end="71:19">DPRINTF</name><argument_list pos:start="71:20" pos:end="71:68">(<argument pos:start="71:21" pos:end="71:62"><expr pos:start="71:21" pos:end="71:62"><literal type="string" pos:start="71:21" pos:end="71:62">"forbidden NWayLPAR write(w) val=0x%04x\n"</literal></expr></argument>, <argument pos:start="71:65" pos:end="71:67"><expr pos:start="71:65" pos:end="71:67"><name pos:start="71:65" pos:end="71:67">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:27">case <expr pos:start="75:14" pos:end="75:26"><name pos:start="75:14" pos:end="75:26">NWayExpansion</name></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:64"><expr pos:start="77:13" pos:end="77:63"><call pos:start="77:13" pos:end="77:63"><name pos:start="77:13" pos:end="77:19">DPRINTF</name><argument_list pos:start="77:20" pos:end="77:63">(<argument pos:start="77:21" pos:end="77:57"><expr pos:start="77:21" pos:end="77:57"><literal type="string" pos:start="77:21" pos:end="77:57">"NWayExpansion write(w) val=0x%04x\n"</literal></expr></argument>, <argument pos:start="77:60" pos:end="77:62"><expr pos:start="77:60" pos:end="77:62"><name pos:start="77:60" pos:end="77:62">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:35"><expr pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:28">NWayExpansion</name></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <name pos:start="79:32" pos:end="79:34">val</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>



        <case pos:start="85:9" pos:end="85:19">case <expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:18">CpCmd</name></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:40"><expr pos:start="87:13" pos:end="87:39"><call pos:start="87:13" pos:end="87:39"><name pos:start="87:13" pos:end="87:31">rtl8139_CpCmd_write</name><argument_list pos:start="87:32" pos:end="87:39">(<argument pos:start="87:33" pos:end="87:33"><expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">s</name></expr></argument>, <argument pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>



        <case pos:start="93:9" pos:end="93:26">case <expr pos:start="93:14" pos:end="93:25"><name pos:start="93:14" pos:end="93:25">IntrMitigate</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:47"><expr pos:start="95:13" pos:end="95:46"><call pos:start="95:13" pos:end="95:46"><name pos:start="95:13" pos:end="95:38">rtl8139_IntrMitigate_write</name><argument_list pos:start="95:39" pos:end="95:46">(<argument pos:start="95:40" pos:end="95:40"><expr pos:start="95:40" pos:end="95:40"><name pos:start="95:40" pos:end="95:40">s</name></expr></argument>, <argument pos:start="95:43" pos:end="95:45"><expr pos:start="95:43" pos:end="95:45"><name pos:start="95:43" pos:end="95:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>



        <default pos:start="101:9" pos:end="101:16">default:</default>

            <expr_stmt pos:start="103:13" pos:end="105:27"><expr pos:start="103:13" pos:end="105:26"><call pos:start="103:13" pos:end="105:26"><name pos:start="103:13" pos:end="103:19">DPRINTF</name><argument_list pos:start="103:20" pos:end="105:26">(<argument pos:start="103:21" pos:end="103:73"><expr pos:start="103:21" pos:end="103:73"><literal type="string" pos:start="103:21" pos:end="103:73">"ioport write(w) addr=0x%x val=0x%04x via write(b)\n"</literal></expr></argument>,

                <argument pos:start="105:17" pos:end="105:20"><expr pos:start="105:17" pos:end="105:20"><name pos:start="105:17" pos:end="105:20">addr</name></expr></argument>, <argument pos:start="105:23" pos:end="105:25"><expr pos:start="105:23" pos:end="105:25"><name pos:start="105:23" pos:end="105:25">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:56"><expr pos:start="109:13" pos:end="109:55"><call pos:start="109:13" pos:end="109:55"><name pos:start="109:13" pos:end="109:29">rtl8139_io_writeb</name><argument_list pos:start="109:30" pos:end="109:55">(<argument pos:start="109:31" pos:end="109:36"><expr pos:start="109:31" pos:end="109:36"><name pos:start="109:31" pos:end="109:36">opaque</name></expr></argument>, <argument pos:start="109:39" pos:end="109:42"><expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:42">addr</name></expr></argument>, <argument pos:start="109:45" pos:end="109:54"><expr pos:start="109:45" pos:end="109:54"><name pos:start="109:45" pos:end="109:47">val</name> <operator pos:start="109:49" pos:end="109:49">&amp;</operator> <literal type="number" pos:start="109:51" pos:end="109:54">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:67"><expr pos:start="111:13" pos:end="111:66"><call pos:start="111:13" pos:end="111:66"><name pos:start="111:13" pos:end="111:29">rtl8139_io_writeb</name><argument_list pos:start="111:30" pos:end="111:66">(<argument pos:start="111:31" pos:end="111:36"><expr pos:start="111:31" pos:end="111:36"><name pos:start="111:31" pos:end="111:36">opaque</name></expr></argument>, <argument pos:start="111:39" pos:end="111:46"><expr pos:start="111:39" pos:end="111:46"><name pos:start="111:39" pos:end="111:42">addr</name> <operator pos:start="111:44" pos:end="111:44">+</operator> <literal type="number" pos:start="111:46" pos:end="111:46">1</literal></expr></argument>, <argument pos:start="111:49" pos:end="111:65"><expr pos:start="111:49" pos:end="111:65"><operator pos:start="111:49" pos:end="111:49">(</operator><name pos:start="111:50" pos:end="111:52">val</name> <operator pos:start="111:54" pos:end="111:55">&gt;&gt;</operator> <literal type="number" pos:start="111:57" pos:end="111:57">8</literal><operator pos:start="111:58" pos:end="111:58">)</operator> <operator pos:start="111:60" pos:end="111:60">&amp;</operator> <literal type="number" pos:start="111:62" pos:end="111:65">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
