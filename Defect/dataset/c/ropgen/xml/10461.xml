<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10461.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">chassis_control</name><parameter_list pos:start="1:28" pos:end="7:53">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">IPMIBmcSim</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ibs</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">cmd</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:62"><decl pos:start="3:43" pos:end="3:62"><type pos:start="3:43" pos:end="3:62"><name pos:start="3:43" pos:end="3:50">unsigned</name> <name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:62">cmd_len</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">rsp</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:63"><decl pos:start="5:43" pos:end="5:63"><type pos:start="5:43" pos:end="5:63"><name pos:start="5:43" pos:end="5:50">unsigned</name> <name pos:start="5:52" pos:end="5:54">int</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:63">rsp_len</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:52"><decl pos:start="7:29" pos:end="7:52"><type pos:start="7:29" pos:end="7:52"><name pos:start="7:29" pos:end="7:36">unsigned</name> <name pos:start="7:38" pos:end="7:40">int</name></type> <name pos:start="7:42" pos:end="7:52">max_rsp_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="67:1">{<block_content pos:start="11:5" pos:end="65:5">

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">IPMIInterface</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:39">= <expr pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:26">ibs</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">parent</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:39">intf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">IPMIInterfaceClass</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:25">k</name> <init pos:start="13:27" pos:end="13:55">= <expr pos:start="13:29" pos:end="13:55"><call pos:start="13:29" pos:end="13:55"><name pos:start="13:29" pos:end="13:52">IPMI_INTERFACE_GET_CLASS</name><argument_list pos:start="13:53" pos:end="13:55">(<argument pos:start="13:54" pos:end="13:54"><expr pos:start="13:54" pos:end="13:54"><name pos:start="13:54" pos:end="13:54">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:22">IPMI_CHECK_CMD_LEN</name><argument_list pos:start="17:23" pos:end="17:25">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="65:5">switch <condition pos:start="19:12" pos:end="19:25">(<expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:15">cmd</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">2</literal></expr>]</index></name> <operator pos:start="19:20" pos:end="19:20">&amp;</operator> <literal type="number" pos:start="19:22" pos:end="19:24">0xf</literal></expr>)</condition> <block pos:start="19:27" pos:end="65:5">{<block_content pos:start="21:5" pos:end="63:15">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case> <comment type="block" pos:start="21:13" pos:end="21:28">/* power down */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:11">rsp</name><index pos:start="23:12" pos:end="23:14">[<expr pos:start="23:13" pos:end="23:13"><literal type="number" pos:start="23:13" pos:end="23:13">2</literal></expr>]</index></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:57"><name pos:start="23:18" pos:end="23:28"><name pos:start="23:18" pos:end="23:18">k</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:28">do_hw_op</name></name><argument_list pos:start="23:29" pos:end="23:57">(<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">s</name></expr></argument>, <argument pos:start="23:33" pos:end="23:53"><expr pos:start="23:33" pos:end="23:53"><name pos:start="23:33" pos:end="23:53">IPMI_POWEROFF_CHASSIS</name></expr></argument>, <argument pos:start="23:56" pos:end="23:56"><expr pos:start="23:56" pos:end="23:56"><literal type="number" pos:start="23:56" pos:end="23:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">1</literal></expr>:</case> <comment type="block" pos:start="27:13" pos:end="27:26">/* power up */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:57"><expr pos:start="29:9" pos:end="29:56"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:11">rsp</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">2</literal></expr>]</index></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:56"><name pos:start="29:18" pos:end="29:28"><name pos:start="29:18" pos:end="29:18">k</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:28">do_hw_op</name></name><argument_list pos:start="29:29" pos:end="29:56">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">s</name></expr></argument>, <argument pos:start="29:33" pos:end="29:52"><expr pos:start="29:33" pos:end="29:52"><name pos:start="29:33" pos:end="29:52">IPMI_POWERON_CHASSIS</name></expr></argument>, <argument pos:start="29:55" pos:end="29:55"><expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case> <comment type="block" pos:start="33:13" pos:end="33:29">/* power cycle */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">rsp</name><index pos:start="35:12" pos:end="35:14">[<expr pos:start="35:13" pos:end="35:13"><literal type="number" pos:start="35:13" pos:end="35:13">2</literal></expr>]</index></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:59"><name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:18">k</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:28">do_hw_op</name></name><argument_list pos:start="35:29" pos:end="35:59">(<argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">s</name></expr></argument>, <argument pos:start="35:33" pos:end="35:55"><expr pos:start="35:33" pos:end="35:55"><name pos:start="35:33" pos:end="35:55">IPMI_POWERCYCLE_CHASSIS</name></expr></argument>, <argument pos:start="35:58" pos:end="35:58"><expr pos:start="35:58" pos:end="35:58"><literal type="number" pos:start="35:58" pos:end="35:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">3</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:28">/* hard reset */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:11">rsp</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><literal type="number" pos:start="41:13" pos:end="41:13">2</literal></expr>]</index></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:54"><name pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:18">k</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:28">do_hw_op</name></name><argument_list pos:start="41:29" pos:end="41:54">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">s</name></expr></argument>, <argument pos:start="41:33" pos:end="41:50"><expr pos:start="41:33" pos:end="41:50"><name pos:start="41:33" pos:end="41:50">IPMI_RESET_CHASSIS</name></expr></argument>, <argument pos:start="41:53" pos:end="41:53"><expr pos:start="41:53" pos:end="41:53"><literal type="number" pos:start="41:53" pos:end="41:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">4</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:44">/* pulse diagnostic interrupt */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:11">rsp</name><index pos:start="47:12" pos:end="47:14">[<expr pos:start="47:13" pos:end="47:13"><literal type="number" pos:start="47:13" pos:end="47:13">2</literal></expr>]</index></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:55"><name pos:start="47:18" pos:end="47:28"><name pos:start="47:18" pos:end="47:18">k</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:28">do_hw_op</name></name><argument_list pos:start="47:29" pos:end="47:55">(<argument pos:start="47:30" pos:end="47:30"><expr pos:start="47:30" pos:end="47:30"><name pos:start="47:30" pos:end="47:30">s</name></expr></argument>, <argument pos:start="47:33" pos:end="47:51"><expr pos:start="47:33" pos:end="47:51"><name pos:start="47:33" pos:end="47:51">IPMI_PULSE_DIAG_IRQ</name></expr></argument>, <argument pos:start="47:54" pos:end="47:54"><expr pos:start="47:54" pos:end="47:54"><literal type="number" pos:start="47:54" pos:end="47:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">5</literal></expr>:</case> <comment type="block" pos:start="51:13" pos:end="51:62">/* soft shutdown via ACPI by overtemp emulation */</comment>

        <expr_stmt pos:start="53:9" pos:end="55:65"><expr pos:start="53:9" pos:end="55:64"><name pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:11">rsp</name><index pos:start="53:12" pos:end="53:14">[<expr pos:start="53:13" pos:end="53:13"><literal type="number" pos:start="53:13" pos:end="53:13">2</literal></expr>]</index></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="55:64"><name pos:start="53:18" pos:end="53:28"><name pos:start="53:18" pos:end="53:18">k</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:28">do_hw_op</name></name><argument_list pos:start="53:29" pos:end="55:64">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">s</name></expr></argument>,

                             <argument pos:start="55:30" pos:end="55:60"><expr pos:start="55:30" pos:end="55:60"><name pos:start="55:30" pos:end="55:60">IPMI_SHUTDOWN_VIA_ACPI_OVERTEMP</name></expr></argument>, <argument pos:start="55:63" pos:end="55:63"><expr pos:start="55:63" pos:end="55:63"><literal type="number" pos:start="55:63" pos:end="55:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:11">rsp</name><index pos:start="61:12" pos:end="61:14">[<expr pos:start="61:13" pos:end="61:13"><literal type="number" pos:start="61:13" pos:end="61:13">2</literal></expr>]</index></name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:43">IPMI_CC_INVALID_DATA_FIELD</name></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
