<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8344.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:108">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">data_size</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:93"><decl pos:start="1:76" pos:end="1:93"><type pos:start="1:76" pos:end="1:93"><specifier pos:start="1:76" pos:end="1:80">const</specifier> <name pos:start="1:82" pos:end="1:88">uint8_t</name> <modifier pos:start="1:90" pos:end="1:90">*</modifier></type><name pos:start="1:91" pos:end="1:93">buf</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:107"><decl pos:start="1:96" pos:end="1:107"><type pos:start="1:96" pos:end="1:107"><name pos:start="1:96" pos:end="1:98">int</name></type> <name pos:start="1:100" pos:end="1:107">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="305:1">{<block_content pos:start="5:5" pos:end="303:20">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:17">SmackVContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier> <specifier pos:start="5:21" pos:end="5:25">const</specifier></type> <name pos:start="5:27" pos:end="5:29">smk</name> <init pos:start="5:31" pos:end="5:48">= <expr pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:37">avctx</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">GetBitContext</name></type> <name pos:start="11:19" pos:end="11:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">blocks</name></decl>, <decl pos:start="13:17" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:19">blk</name></decl>, <decl pos:start="13:22" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:23">bw</name></decl>, <decl pos:start="13:26" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:26" pos:end="13:27">bh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">stride</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if<condition pos:start="21:7" pos:end="21:23">(<expr pos:start="21:8" pos:end="21:22"><name pos:start="21:8" pos:end="21:15">buf_size</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <literal type="number" pos:start="21:20" pos:end="21:22">769</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:52"><if pos:start="25:5" pos:end="27:52">if<condition pos:start="25:7" pos:end="25:24">(<expr pos:start="25:8" pos:end="25:23"><name pos:start="25:8" pos:end="25:23"><name pos:start="25:8" pos:end="25:10">smk</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:15">pic</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:20">data</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:52"><block_content pos:start="27:13" pos:end="27:52">

            <expr_stmt pos:start="27:13" pos:end="27:52"><expr pos:start="27:13" pos:end="27:51"><call pos:start="27:13" pos:end="27:51"><name pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:33">release_buffer</name></name><argument_list pos:start="27:34" pos:end="27:51">(<argument pos:start="27:35" pos:end="27:39"><expr pos:start="27:35" pos:end="27:39"><name pos:start="27:35" pos:end="27:39">avctx</name></expr></argument>, <argument pos:start="27:42" pos:end="27:50"><expr pos:start="27:42" pos:end="27:50"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:50"><name pos:start="27:43" pos:end="27:45">smk</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:50">pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:7">smk</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">pic</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:22">reference</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <literal type="number" pos:start="31:26" pos:end="31:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:104"><expr pos:start="33:5" pos:end="33:103"><name pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:7">smk</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">pic</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:25">buffer_hints</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:49">FF_BUFFER_HINTS_VALID</name> <operator pos:start="33:51" pos:end="33:51">|</operator> <name pos:start="33:53" pos:end="33:76">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="33:78" pos:end="33:78">|</operator> <name pos:start="33:80" pos:end="33:103">FF_BUFFER_HINTS_REUSABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if<condition pos:start="35:7" pos:end="35:49">(<expr pos:start="35:8" pos:end="35:48"><call pos:start="35:8" pos:end="35:44"><name pos:start="35:8" pos:end="35:26"><name pos:start="35:8" pos:end="35:12">avctx</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:26">reget_buffer</name></name><argument_list pos:start="35:27" pos:end="35:44">(<argument pos:start="35:28" pos:end="35:32"><expr pos:start="35:28" pos:end="35:32"><name pos:start="35:28" pos:end="35:32">avctx</name></expr></argument>, <argument pos:start="35:35" pos:end="35:43"><expr pos:start="35:35" pos:end="35:43"><operator pos:start="35:35" pos:end="35:35">&amp;</operator><name pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:38">smk</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:43">pic</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:46" pos:end="35:46">&lt;</operator> <literal type="number" pos:start="35:48" pos:end="35:48">0</literal></expr>)</condition><block pos:start="35:50" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><call pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:60">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:59"><expr pos:start="37:37" pos:end="37:59"><literal type="string" pos:start="37:37" pos:end="37:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:51">/* make the palette available on the way out */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:7">pal</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <operator pos:start="47:11" pos:end="47:11">(</operator><name pos:start="47:12" pos:end="47:19">uint32_t</name><operator pos:start="47:20" pos:end="47:20">*</operator><operator pos:start="47:21" pos:end="47:21">)</operator><name pos:start="47:22" pos:end="47:37"><name pos:start="47:22" pos:end="47:24">smk</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:29">pic</name><operator pos:start="47:30" pos:end="47:30">.</operator><name pos:start="47:31" pos:end="47:34">data</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:7">smk</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:12">pic</name><operator pos:start="49:13" pos:end="49:13">.</operator><name pos:start="49:14" pos:end="49:32">palette_has_changed</name></name> <operator pos:start="49:34" pos:end="49:34">=</operator> <name pos:start="49:36" pos:end="49:41"><name pos:start="49:36" pos:end="49:38">buf</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><literal type="number" pos:start="49:40" pos:end="49:40">0</literal></expr>]</index></name> <operator pos:start="49:43" pos:end="49:43">&amp;</operator> <literal type="number" pos:start="49:45" pos:end="49:45">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:7">smk</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:12">pic</name><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:22">key_frame</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">!</operator><operator pos:start="51:27" pos:end="51:27">!</operator><operator pos:start="51:28" pos:end="51:28">(</operator><name pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:31">buf</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr>]</index></name> <operator pos:start="51:36" pos:end="51:36">&amp;</operator> <literal type="number" pos:start="51:38" pos:end="51:38">2</literal><operator pos:start="51:39" pos:end="51:39">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:39"><if pos:start="53:5" pos:end="55:39">if<condition pos:start="53:7" pos:end="53:26">(<expr pos:start="53:8" pos:end="53:25"><name pos:start="53:8" pos:end="53:25"><name pos:start="53:8" pos:end="53:10">smk</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:15">pic</name><operator pos:start="53:16" pos:end="53:16">.</operator><name pos:start="53:17" pos:end="53:25">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:39"><block_content pos:start="55:9" pos:end="55:39">

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:11">smk</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">pic</name><operator pos:start="55:17" pos:end="55:17">.</operator><name pos:start="55:18" pos:end="55:26">pict_type</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:38">FF_I_TYPE</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="59:39">else<block type="pseudo" pos:start="59:9" pos:end="59:39"><block_content pos:start="59:9" pos:end="59:39">

        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:11">smk</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:16">pic</name><operator pos:start="59:17" pos:end="59:17">.</operator><name pos:start="59:18" pos:end="59:26">pict_type</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:38">FF_P_TYPE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:10"><expr pos:start="63:5" pos:end="63:9"><name pos:start="63:5" pos:end="63:7">buf</name><operator pos:start="63:8" pos:end="63:9">++</operator></expr>;</expr_stmt>

    <for pos:start="65:5" pos:end="67:43">for<control pos:start="65:8" pos:end="65:28">(<init pos:start="65:9" pos:end="65:14"><expr pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">i</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <literal type="number" pos:start="65:13" pos:end="65:13">0</literal></expr>;</init> <condition pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:22"><name pos:start="65:16" pos:end="65:16">i</name> <operator pos:start="65:18" pos:end="65:18">&lt;</operator> <literal type="number" pos:start="65:20" pos:end="65:22">256</literal></expr>;</condition> <incr pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:25">i</name><operator pos:start="65:26" pos:end="65:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:9" pos:end="67:43"><block_content pos:start="67:9" pos:end="67:43">

        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:12">pal</name><operator pos:start="67:13" pos:end="67:14">++</operator> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="67:42"><name pos:start="67:18" pos:end="67:36">bytestream_get_be24</name><argument_list pos:start="67:37" pos:end="67:42">(<argument pos:start="67:38" pos:end="67:41"><expr pos:start="67:38" pos:end="67:41"><operator pos:start="67:38" pos:end="67:38">&amp;</operator><name pos:start="67:39" pos:end="67:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:12">buf_size</name> <operator pos:start="69:14" pos:end="69:15">-=</operator> <literal type="number" pos:start="69:17" pos:end="69:19">769</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:46"><expr pos:start="73:5" pos:end="73:45"><call pos:start="73:5" pos:end="73:45"><name pos:start="73:5" pos:end="73:14">last_reset</name><argument_list pos:start="73:15" pos:end="73:45">(<argument pos:start="73:16" pos:end="73:28"><expr pos:start="73:16" pos:end="73:28"><name pos:start="73:16" pos:end="73:28"><name pos:start="73:16" pos:end="73:18">smk</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:28">mmap_tbl</name></name></expr></argument>, <argument pos:start="73:31" pos:end="73:44"><expr pos:start="73:31" pos:end="73:44"><name pos:start="73:31" pos:end="73:44"><name pos:start="73:31" pos:end="73:33">smk</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:44">mmap_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:46"><expr pos:start="75:5" pos:end="75:45"><call pos:start="75:5" pos:end="75:45"><name pos:start="75:5" pos:end="75:14">last_reset</name><argument_list pos:start="75:15" pos:end="75:45">(<argument pos:start="75:16" pos:end="75:28"><expr pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:18">smk</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:28">mclr_tbl</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:44"><expr pos:start="75:31" pos:end="75:44"><name pos:start="75:31" pos:end="75:44"><name pos:start="75:31" pos:end="75:33">smk</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:44">mclr_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:46"><expr pos:start="77:5" pos:end="77:45"><call pos:start="77:5" pos:end="77:45"><name pos:start="77:5" pos:end="77:14">last_reset</name><argument_list pos:start="77:15" pos:end="77:45">(<argument pos:start="77:16" pos:end="77:28"><expr pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:18">smk</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:28">full_tbl</name></name></expr></argument>, <argument pos:start="77:31" pos:end="77:44"><expr pos:start="77:31" pos:end="77:44"><name pos:start="77:31" pos:end="77:44"><name pos:start="77:31" pos:end="77:33">smk</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:44">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:46"><expr pos:start="79:5" pos:end="79:45"><call pos:start="79:5" pos:end="79:45"><name pos:start="79:5" pos:end="79:14">last_reset</name><argument_list pos:start="79:15" pos:end="79:45">(<argument pos:start="79:16" pos:end="79:28"><expr pos:start="79:16" pos:end="79:28"><name pos:start="79:16" pos:end="79:28"><name pos:start="79:16" pos:end="79:18">smk</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:28">type_tbl</name></name></expr></argument>, <argument pos:start="79:31" pos:end="79:44"><expr pos:start="79:31" pos:end="79:44"><name pos:start="79:31" pos:end="79:44"><name pos:start="79:31" pos:end="79:33">smk</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:44">type_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><call pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:17">init_get_bits</name><argument_list pos:start="81:18" pos:end="81:41">(<argument pos:start="81:19" pos:end="81:21"><expr pos:start="81:19" pos:end="81:21"><operator pos:start="81:19" pos:end="81:19">&amp;</operator><name pos:start="81:20" pos:end="81:21">gb</name></expr></argument>, <argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">buf</name></expr></argument>, <argument pos:start="81:29" pos:end="81:40"><expr pos:start="81:29" pos:end="81:40"><name pos:start="81:29" pos:end="81:36">buf_size</name> <operator pos:start="81:38" pos:end="81:38">*</operator> <literal type="number" pos:start="81:40" pos:end="81:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:12"><expr pos:start="85:5" pos:end="85:11"><name pos:start="85:5" pos:end="85:7">blk</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <literal type="number" pos:start="85:11" pos:end="85:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:6">bw</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <name pos:start="87:10" pos:end="87:21"><name pos:start="87:10" pos:end="87:14">avctx</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:21">width</name></name> <operator pos:start="87:23" pos:end="87:24">&gt;&gt;</operator> <literal type="number" pos:start="87:26" pos:end="87:26">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:28"><expr pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:6">bh</name> <operator pos:start="89:8" pos:end="89:8">=</operator> <name pos:start="89:10" pos:end="89:22"><name pos:start="89:10" pos:end="89:14">avctx</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:22">height</name></name> <operator pos:start="89:24" pos:end="89:25">&gt;&gt;</operator> <literal type="number" pos:start="89:27" pos:end="89:27">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:21"><expr pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:10">blocks</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <name pos:start="91:14" pos:end="91:15">bw</name> <operator pos:start="91:17" pos:end="91:17">*</operator> <name pos:start="91:19" pos:end="91:20">bh</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:27"><expr pos:start="93:5" pos:end="93:26"><name pos:start="93:5" pos:end="93:7">out</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <name pos:start="93:11" pos:end="93:26"><name pos:start="93:11" pos:end="93:13">smk</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:18">pic</name><operator pos:start="93:19" pos:end="93:19">.</operator><name pos:start="93:20" pos:end="93:23">data</name><index pos:start="93:24" pos:end="93:26">[<expr pos:start="93:25" pos:end="93:25"><literal type="number" pos:start="93:25" pos:end="93:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:34"><expr pos:start="95:5" pos:end="95:33"><name pos:start="95:5" pos:end="95:10">stride</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <name pos:start="95:14" pos:end="95:33"><name pos:start="95:14" pos:end="95:16">smk</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:21">pic</name><operator pos:start="95:22" pos:end="95:22">.</operator><name pos:start="95:23" pos:end="95:30">linesize</name><index pos:start="95:31" pos:end="95:33">[<expr pos:start="95:32" pos:end="95:32"><literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="97:5" pos:end="291:5">while<condition pos:start="97:10" pos:end="97:23">(<expr pos:start="97:11" pos:end="97:22"><name pos:start="97:11" pos:end="97:13">blk</name> <operator pos:start="97:15" pos:end="97:15">&lt;</operator> <name pos:start="97:17" pos:end="97:22">blocks</name></expr>)</condition> <block pos:start="97:25" pos:end="291:5">{<block_content pos:start="99:9" pos:end="287:9">

        <decl_stmt pos:start="99:9" pos:end="99:28"><decl pos:start="99:9" pos:end="99:16"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:16">type</name></decl>, <decl pos:start="99:19" pos:end="99:21"><type ref="prev" pos:start="99:9" pos:end="99:11"/><name pos:start="99:19" pos:end="99:21">run</name></decl>, <decl pos:start="99:24" pos:end="99:27"><type ref="prev" pos:start="99:9" pos:end="99:11"/><name pos:start="99:24" pos:end="99:27">mode</name></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:21"><decl pos:start="101:9" pos:end="101:20"><type pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:16">uint16_t</name></type> <name pos:start="101:18" pos:end="101:20">pix</name></decl>;</decl_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:64"><expr pos:start="105:9" pos:end="105:63"><name pos:start="105:9" pos:end="105:12">type</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:63"><name pos:start="105:16" pos:end="105:27">smk_get_code</name><argument_list pos:start="105:28" pos:end="105:63">(<argument pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><operator pos:start="105:29" pos:end="105:29">&amp;</operator><name pos:start="105:30" pos:end="105:31">gb</name></expr></argument>, <argument pos:start="105:34" pos:end="105:46"><expr pos:start="105:34" pos:end="105:46"><name pos:start="105:34" pos:end="105:46"><name pos:start="105:34" pos:end="105:36">smk</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:46">type_tbl</name></name></expr></argument>, <argument pos:start="105:49" pos:end="105:62"><expr pos:start="105:49" pos:end="105:62"><name pos:start="105:49" pos:end="105:62"><name pos:start="105:49" pos:end="105:51">smk</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:62">type_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:45"><expr pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:11">run</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:44"><name pos:start="107:15" pos:end="107:24">block_runs</name><index pos:start="107:25" pos:end="107:44">[<expr pos:start="107:26" pos:end="107:43"><operator pos:start="107:26" pos:end="107:26">(</operator><name pos:start="107:27" pos:end="107:30">type</name> <operator pos:start="107:32" pos:end="107:33">&gt;&gt;</operator> <literal type="number" pos:start="107:35" pos:end="107:35">2</literal><operator pos:start="107:36" pos:end="107:36">)</operator> <operator pos:start="107:38" pos:end="107:38">&amp;</operator> <literal type="number" pos:start="107:40" pos:end="107:43">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

        <switch pos:start="109:9" pos:end="287:9">switch<condition pos:start="109:15" pos:end="109:24">(<expr pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:19">type</name> <operator pos:start="109:21" pos:end="109:21">&amp;</operator> <literal type="number" pos:start="109:23" pos:end="109:23">3</literal></expr>)</condition><block pos:start="109:25" pos:end="287:9">{<block_content pos:start="111:9" pos:end="285:18">

        <case pos:start="111:9" pos:end="111:26">case <expr pos:start="111:14" pos:end="111:25"><name pos:start="111:14" pos:end="111:25">SMK_BLK_MONO</name></expr>:</case>

            <while pos:start="113:13" pos:end="147:13">while<condition pos:start="113:18" pos:end="113:40">(<expr pos:start="113:19" pos:end="113:39"><name pos:start="113:19" pos:end="113:21">run</name><operator pos:start="113:22" pos:end="113:23">--</operator> <operator pos:start="113:25" pos:end="113:26">&amp;&amp;</operator> <name pos:start="113:28" pos:end="113:30">blk</name> <operator pos:start="113:32" pos:end="113:32">&lt;</operator> <name pos:start="113:34" pos:end="113:39">blocks</name></expr>)</condition><block pos:start="113:41" pos:end="147:13">{<block_content pos:start="115:17" pos:end="145:22">

                <decl_stmt pos:start="115:17" pos:end="115:29"><decl pos:start="115:17" pos:end="115:23"><type pos:start="115:17" pos:end="115:19"><name pos:start="115:17" pos:end="115:19">int</name></type> <name pos:start="115:21" pos:end="115:23">clr</name></decl>, <decl pos:start="115:26" pos:end="115:28"><type ref="prev" pos:start="115:17" pos:end="115:19"/><name pos:start="115:26" pos:end="115:28">map</name></decl>;</decl_stmt>

                <decl_stmt pos:start="117:17" pos:end="117:27"><decl pos:start="117:17" pos:end="117:22"><type pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">int</name></type> <name pos:start="117:21" pos:end="117:22">hi</name></decl>, <decl pos:start="117:25" pos:end="117:26"><type ref="prev" pos:start="117:17" pos:end="117:19"/><name pos:start="117:25" pos:end="117:26">lo</name></decl>;</decl_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:71"><expr pos:start="119:17" pos:end="119:70"><name pos:start="119:17" pos:end="119:19">clr</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="119:70"><name pos:start="119:23" pos:end="119:34">smk_get_code</name><argument_list pos:start="119:35" pos:end="119:70">(<argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><operator pos:start="119:36" pos:end="119:36">&amp;</operator><name pos:start="119:37" pos:end="119:38">gb</name></expr></argument>, <argument pos:start="119:41" pos:end="119:53"><expr pos:start="119:41" pos:end="119:53"><name pos:start="119:41" pos:end="119:53"><name pos:start="119:41" pos:end="119:43">smk</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:53">mclr_tbl</name></name></expr></argument>, <argument pos:start="119:56" pos:end="119:69"><expr pos:start="119:56" pos:end="119:69"><name pos:start="119:56" pos:end="119:69"><name pos:start="119:56" pos:end="119:58">smk</name><operator pos:start="119:59" pos:end="119:60">-&gt;</operator><name pos:start="119:61" pos:end="119:69">mclr_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:71"><expr pos:start="121:17" pos:end="121:70"><name pos:start="121:17" pos:end="121:19">map</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="121:70"><name pos:start="121:23" pos:end="121:34">smk_get_code</name><argument_list pos:start="121:35" pos:end="121:70">(<argument pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><operator pos:start="121:36" pos:end="121:36">&amp;</operator><name pos:start="121:37" pos:end="121:38">gb</name></expr></argument>, <argument pos:start="121:41" pos:end="121:53"><expr pos:start="121:41" pos:end="121:53"><name pos:start="121:41" pos:end="121:53"><name pos:start="121:41" pos:end="121:43">smk</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:53">mmap_tbl</name></name></expr></argument>, <argument pos:start="121:56" pos:end="121:69"><expr pos:start="121:56" pos:end="121:69"><name pos:start="121:56" pos:end="121:69"><name pos:start="121:56" pos:end="121:58">smk</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:69">mmap_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:84"><expr pos:start="123:17" pos:end="123:83"><name pos:start="123:17" pos:end="123:19">out</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:38"><name pos:start="123:23" pos:end="123:25">smk</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:30">pic</name><operator pos:start="123:31" pos:end="123:31">.</operator><name pos:start="123:32" pos:end="123:35">data</name><index pos:start="123:36" pos:end="123:38">[<expr pos:start="123:37" pos:end="123:37"><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>]</index></name> <operator pos:start="123:40" pos:end="123:40">+</operator> <operator pos:start="123:42" pos:end="123:42">(</operator><name pos:start="123:43" pos:end="123:45">blk</name> <operator pos:start="123:47" pos:end="123:47">/</operator> <name pos:start="123:49" pos:end="123:50">bw</name><operator pos:start="123:51" pos:end="123:51">)</operator> <operator pos:start="123:53" pos:end="123:53">*</operator> <operator pos:start="123:55" pos:end="123:55">(</operator><name pos:start="123:56" pos:end="123:61">stride</name> <operator pos:start="123:63" pos:end="123:63">*</operator> <literal type="number" pos:start="123:65" pos:end="123:65">4</literal><operator pos:start="123:66" pos:end="123:66">)</operator> <operator pos:start="123:68" pos:end="123:68">+</operator> <operator pos:start="123:70" pos:end="123:70">(</operator><name pos:start="123:71" pos:end="123:73">blk</name> <operator pos:start="123:75" pos:end="123:75">%</operator> <name pos:start="123:77" pos:end="123:78">bw</name><operator pos:start="123:79" pos:end="123:79">)</operator> <operator pos:start="123:81" pos:end="123:81">*</operator> <literal type="number" pos:start="123:83" pos:end="123:83">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:30"><expr pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:18">hi</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <name pos:start="125:22" pos:end="125:24">clr</name> <operator pos:start="125:26" pos:end="125:27">&gt;&gt;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:32"><expr pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:18">lo</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:24">clr</name> <operator pos:start="127:26" pos:end="127:26">&amp;</operator> <literal type="number" pos:start="127:28" pos:end="127:31">0xFF</literal></expr>;</expr_stmt>

                <for pos:start="129:17" pos:end="143:17">for<control pos:start="129:20" pos:end="129:38">(<init pos:start="129:21" pos:end="129:26"><expr pos:start="129:21" pos:end="129:25"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <literal type="number" pos:start="129:25" pos:end="129:25">0</literal></expr>;</init> <condition pos:start="129:28" pos:end="129:33"><expr pos:start="129:28" pos:end="129:32"><name pos:start="129:28" pos:end="129:28">i</name> <operator pos:start="129:30" pos:end="129:30">&lt;</operator> <literal type="number" pos:start="129:32" pos:end="129:32">4</literal></expr>;</condition> <incr pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><name pos:start="129:35" pos:end="129:35">i</name><operator pos:start="129:36" pos:end="129:37">++</operator></expr></incr>)</control> <block pos:start="129:40" pos:end="143:17">{<block_content pos:start="131:21" pos:end="141:34">

                    <if_stmt pos:start="131:21" pos:end="131:62"><if pos:start="131:21" pos:end="131:44">if<condition pos:start="131:23" pos:end="131:31">(<expr pos:start="131:24" pos:end="131:30"><name pos:start="131:24" pos:end="131:26">map</name> <operator pos:start="131:28" pos:end="131:28">&amp;</operator> <literal type="number" pos:start="131:30" pos:end="131:30">1</literal></expr>)</condition><block type="pseudo" pos:start="131:33" pos:end="131:44"><block_content pos:start="131:33" pos:end="131:44"> <expr_stmt pos:start="131:33" pos:end="131:44"><expr pos:start="131:33" pos:end="131:43"><name pos:start="131:33" pos:end="131:38"><name pos:start="131:33" pos:end="131:35">out</name><index pos:start="131:36" pos:end="131:38">[<expr pos:start="131:37" pos:end="131:37"><literal type="number" pos:start="131:37" pos:end="131:37">0</literal></expr>]</index></name> <operator pos:start="131:40" pos:end="131:40">=</operator> <name pos:start="131:42" pos:end="131:43">hi</name></expr>;</expr_stmt></block_content></block></if> <else pos:start="131:46" pos:end="131:62">else<block type="pseudo" pos:start="131:51" pos:end="131:62"><block_content pos:start="131:51" pos:end="131:62"> <expr_stmt pos:start="131:51" pos:end="131:62"><expr pos:start="131:51" pos:end="131:61"><name pos:start="131:51" pos:end="131:56"><name pos:start="131:51" pos:end="131:53">out</name><index pos:start="131:54" pos:end="131:56">[<expr pos:start="131:55" pos:end="131:55"><literal type="number" pos:start="131:55" pos:end="131:55">0</literal></expr>]</index></name> <operator pos:start="131:58" pos:end="131:58">=</operator> <name pos:start="131:60" pos:end="131:61">lo</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <if_stmt pos:start="133:21" pos:end="133:62"><if pos:start="133:21" pos:end="133:44">if<condition pos:start="133:23" pos:end="133:31">(<expr pos:start="133:24" pos:end="133:30"><name pos:start="133:24" pos:end="133:26">map</name> <operator pos:start="133:28" pos:end="133:28">&amp;</operator> <literal type="number" pos:start="133:30" pos:end="133:30">2</literal></expr>)</condition><block type="pseudo" pos:start="133:33" pos:end="133:44"><block_content pos:start="133:33" pos:end="133:44"> <expr_stmt pos:start="133:33" pos:end="133:44"><expr pos:start="133:33" pos:end="133:43"><name pos:start="133:33" pos:end="133:38"><name pos:start="133:33" pos:end="133:35">out</name><index pos:start="133:36" pos:end="133:38">[<expr pos:start="133:37" pos:end="133:37"><literal type="number" pos:start="133:37" pos:end="133:37">1</literal></expr>]</index></name> <operator pos:start="133:40" pos:end="133:40">=</operator> <name pos:start="133:42" pos:end="133:43">hi</name></expr>;</expr_stmt></block_content></block></if> <else pos:start="133:46" pos:end="133:62">else<block type="pseudo" pos:start="133:51" pos:end="133:62"><block_content pos:start="133:51" pos:end="133:62"> <expr_stmt pos:start="133:51" pos:end="133:62"><expr pos:start="133:51" pos:end="133:61"><name pos:start="133:51" pos:end="133:56"><name pos:start="133:51" pos:end="133:53">out</name><index pos:start="133:54" pos:end="133:56">[<expr pos:start="133:55" pos:end="133:55"><literal type="number" pos:start="133:55" pos:end="133:55">1</literal></expr>]</index></name> <operator pos:start="133:58" pos:end="133:58">=</operator> <name pos:start="133:60" pos:end="133:61">lo</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <if_stmt pos:start="135:21" pos:end="135:62"><if pos:start="135:21" pos:end="135:44">if<condition pos:start="135:23" pos:end="135:31">(<expr pos:start="135:24" pos:end="135:30"><name pos:start="135:24" pos:end="135:26">map</name> <operator pos:start="135:28" pos:end="135:28">&amp;</operator> <literal type="number" pos:start="135:30" pos:end="135:30">4</literal></expr>)</condition><block type="pseudo" pos:start="135:33" pos:end="135:44"><block_content pos:start="135:33" pos:end="135:44"> <expr_stmt pos:start="135:33" pos:end="135:44"><expr pos:start="135:33" pos:end="135:43"><name pos:start="135:33" pos:end="135:38"><name pos:start="135:33" pos:end="135:35">out</name><index pos:start="135:36" pos:end="135:38">[<expr pos:start="135:37" pos:end="135:37"><literal type="number" pos:start="135:37" pos:end="135:37">2</literal></expr>]</index></name> <operator pos:start="135:40" pos:end="135:40">=</operator> <name pos:start="135:42" pos:end="135:43">hi</name></expr>;</expr_stmt></block_content></block></if> <else pos:start="135:46" pos:end="135:62">else<block type="pseudo" pos:start="135:51" pos:end="135:62"><block_content pos:start="135:51" pos:end="135:62"> <expr_stmt pos:start="135:51" pos:end="135:62"><expr pos:start="135:51" pos:end="135:61"><name pos:start="135:51" pos:end="135:56"><name pos:start="135:51" pos:end="135:53">out</name><index pos:start="135:54" pos:end="135:56">[<expr pos:start="135:55" pos:end="135:55"><literal type="number" pos:start="135:55" pos:end="135:55">2</literal></expr>]</index></name> <operator pos:start="135:58" pos:end="135:58">=</operator> <name pos:start="135:60" pos:end="135:61">lo</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <if_stmt pos:start="137:21" pos:end="137:62"><if pos:start="137:21" pos:end="137:44">if<condition pos:start="137:23" pos:end="137:31">(<expr pos:start="137:24" pos:end="137:30"><name pos:start="137:24" pos:end="137:26">map</name> <operator pos:start="137:28" pos:end="137:28">&amp;</operator> <literal type="number" pos:start="137:30" pos:end="137:30">8</literal></expr>)</condition><block type="pseudo" pos:start="137:33" pos:end="137:44"><block_content pos:start="137:33" pos:end="137:44"> <expr_stmt pos:start="137:33" pos:end="137:44"><expr pos:start="137:33" pos:end="137:43"><name pos:start="137:33" pos:end="137:38"><name pos:start="137:33" pos:end="137:35">out</name><index pos:start="137:36" pos:end="137:38">[<expr pos:start="137:37" pos:end="137:37"><literal type="number" pos:start="137:37" pos:end="137:37">3</literal></expr>]</index></name> <operator pos:start="137:40" pos:end="137:40">=</operator> <name pos:start="137:42" pos:end="137:43">hi</name></expr>;</expr_stmt></block_content></block></if> <else pos:start="137:46" pos:end="137:62">else<block type="pseudo" pos:start="137:51" pos:end="137:62"><block_content pos:start="137:51" pos:end="137:62"> <expr_stmt pos:start="137:51" pos:end="137:62"><expr pos:start="137:51" pos:end="137:61"><name pos:start="137:51" pos:end="137:56"><name pos:start="137:51" pos:end="137:53">out</name><index pos:start="137:54" pos:end="137:56">[<expr pos:start="137:55" pos:end="137:55"><literal type="number" pos:start="137:55" pos:end="137:55">3</literal></expr>]</index></name> <operator pos:start="137:58" pos:end="137:58">=</operator> <name pos:start="137:60" pos:end="137:61">lo</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:30"><expr pos:start="139:21" pos:end="139:29"><name pos:start="139:21" pos:end="139:23">map</name> <operator pos:start="139:25" pos:end="139:27">&gt;&gt;=</operator> <literal type="number" pos:start="139:29" pos:end="139:29">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:34"><expr pos:start="141:21" pos:end="141:33"><name pos:start="141:21" pos:end="141:23">out</name> <operator pos:start="141:25" pos:end="141:26">+=</operator> <name pos:start="141:28" pos:end="141:33">stride</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="145:17" pos:end="145:22"><expr pos:start="145:17" pos:end="145:21"><name pos:start="145:17" pos:end="145:19">blk</name><operator pos:start="145:20" pos:end="145:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:26">case <expr pos:start="151:14" pos:end="151:25"><name pos:start="151:14" pos:end="151:25">SMK_BLK_FULL</name></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:21"><expr pos:start="153:13" pos:end="153:20"><name pos:start="153:13" pos:end="153:16">mode</name> <operator pos:start="153:18" pos:end="153:18">=</operator> <literal type="number" pos:start="153:20" pos:end="153:20">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if<condition pos:start="155:15" pos:end="155:61">(<expr pos:start="155:16" pos:end="155:60"><name pos:start="155:16" pos:end="155:31"><name pos:start="155:16" pos:end="155:20">avctx</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:31">codec_tag</name></name> <operator pos:start="155:33" pos:end="155:34">==</operator> <call pos:start="155:36" pos:end="155:60"><name pos:start="155:36" pos:end="155:40">MKTAG</name><argument_list pos:start="155:41" pos:end="155:60">(<argument pos:start="155:42" pos:end="155:44"><expr pos:start="155:42" pos:end="155:44"><literal type="char" pos:start="155:42" pos:end="155:44">'S'</literal></expr></argument>, <argument pos:start="155:47" pos:end="155:49"><expr pos:start="155:47" pos:end="155:49"><literal type="char" pos:start="155:47" pos:end="155:49">'M'</literal></expr></argument>, <argument pos:start="155:52" pos:end="155:54"><expr pos:start="155:52" pos:end="155:54"><literal type="char" pos:start="155:52" pos:end="155:54">'K'</literal></expr></argument>, <argument pos:start="155:57" pos:end="155:59"><expr pos:start="155:57" pos:end="155:59"><literal type="char" pos:start="155:57" pos:end="155:59">'4'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:63" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:49"> <comment type="line" pos:start="155:65" pos:end="155:108">// In case of Smacker v4 we have three modes</comment>

                <if_stmt pos:start="157:17" pos:end="159:49"><if pos:start="157:17" pos:end="157:44">if<condition pos:start="157:19" pos:end="157:34">(<expr pos:start="157:20" pos:end="157:33"><call pos:start="157:20" pos:end="157:33"><name pos:start="157:20" pos:end="157:28">get_bits1</name><argument_list pos:start="157:29" pos:end="157:33">(<argument pos:start="157:30" pos:end="157:32"><expr pos:start="157:30" pos:end="157:32"><operator pos:start="157:30" pos:end="157:30">&amp;</operator><name pos:start="157:31" pos:end="157:32">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="157:36" pos:end="157:44"><block_content pos:start="157:36" pos:end="157:44"> <expr_stmt pos:start="157:36" pos:end="157:44"><expr pos:start="157:36" pos:end="157:43"><name pos:start="157:36" pos:end="157:39">mode</name> <operator pos:start="157:41" pos:end="157:41">=</operator> <literal type="number" pos:start="157:43" pos:end="157:43">1</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="159:17" pos:end="159:49">else if<condition pos:start="159:24" pos:end="159:39">(<expr pos:start="159:25" pos:end="159:38"><call pos:start="159:25" pos:end="159:38"><name pos:start="159:25" pos:end="159:33">get_bits1</name><argument_list pos:start="159:34" pos:end="159:38">(<argument pos:start="159:35" pos:end="159:37"><expr pos:start="159:35" pos:end="159:37"><operator pos:start="159:35" pos:end="159:35">&amp;</operator><name pos:start="159:36" pos:end="159:37">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="159:41" pos:end="159:49"><block_content pos:start="159:41" pos:end="159:49"> <expr_stmt pos:start="159:41" pos:end="159:49"><expr pos:start="159:41" pos:end="159:48"><name pos:start="159:41" pos:end="159:44">mode</name> <operator pos:start="159:46" pos:end="159:46">=</operator> <literal type="number" pos:start="159:48" pos:end="159:48">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <while pos:start="163:13" pos:end="249:13">while<condition pos:start="163:18" pos:end="163:40">(<expr pos:start="163:19" pos:end="163:39"><name pos:start="163:19" pos:end="163:21">run</name><operator pos:start="163:22" pos:end="163:23">--</operator> <operator pos:start="163:25" pos:end="163:26">&amp;&amp;</operator> <name pos:start="163:28" pos:end="163:30">blk</name> <operator pos:start="163:32" pos:end="163:32">&lt;</operator> <name pos:start="163:34" pos:end="163:39">blocks</name></expr>)</condition><block pos:start="163:41" pos:end="249:13">{<block_content pos:start="165:17" pos:end="247:22">

                <expr_stmt pos:start="165:17" pos:end="165:84"><expr pos:start="165:17" pos:end="165:83"><name pos:start="165:17" pos:end="165:19">out</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:38"><name pos:start="165:23" pos:end="165:25">smk</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:30">pic</name><operator pos:start="165:31" pos:end="165:31">.</operator><name pos:start="165:32" pos:end="165:35">data</name><index pos:start="165:36" pos:end="165:38">[<expr pos:start="165:37" pos:end="165:37"><literal type="number" pos:start="165:37" pos:end="165:37">0</literal></expr>]</index></name> <operator pos:start="165:40" pos:end="165:40">+</operator> <operator pos:start="165:42" pos:end="165:42">(</operator><name pos:start="165:43" pos:end="165:45">blk</name> <operator pos:start="165:47" pos:end="165:47">/</operator> <name pos:start="165:49" pos:end="165:50">bw</name><operator pos:start="165:51" pos:end="165:51">)</operator> <operator pos:start="165:53" pos:end="165:53">*</operator> <operator pos:start="165:55" pos:end="165:55">(</operator><name pos:start="165:56" pos:end="165:61">stride</name> <operator pos:start="165:63" pos:end="165:63">*</operator> <literal type="number" pos:start="165:65" pos:end="165:65">4</literal><operator pos:start="165:66" pos:end="165:66">)</operator> <operator pos:start="165:68" pos:end="165:68">+</operator> <operator pos:start="165:70" pos:end="165:70">(</operator><name pos:start="165:71" pos:end="165:73">blk</name> <operator pos:start="165:75" pos:end="165:75">%</operator> <name pos:start="165:77" pos:end="165:78">bw</name><operator pos:start="165:79" pos:end="165:79">)</operator> <operator pos:start="165:81" pos:end="165:81">*</operator> <literal type="number" pos:start="165:83" pos:end="165:83">4</literal></expr>;</expr_stmt>

                <switch pos:start="167:17" pos:end="245:17">switch<condition pos:start="167:23" pos:end="167:28">(<expr pos:start="167:24" pos:end="167:27"><name pos:start="167:24" pos:end="167:27">mode</name></expr>)</condition><block pos:start="167:29" pos:end="245:17">{<block_content pos:start="169:17" pos:end="243:26">

                <case pos:start="169:17" pos:end="169:23">case <expr pos:start="169:22" pos:end="169:22"><literal type="number" pos:start="169:22" pos:end="169:22">0</literal></expr>:</case>

                    <for pos:start="171:21" pos:end="183:21">for<control pos:start="171:24" pos:end="171:42">(<init pos:start="171:25" pos:end="171:30"><expr pos:start="171:25" pos:end="171:29"><name pos:start="171:25" pos:end="171:25">i</name> <operator pos:start="171:27" pos:end="171:27">=</operator> <literal type="number" pos:start="171:29" pos:end="171:29">0</literal></expr>;</init> <condition pos:start="171:32" pos:end="171:37"><expr pos:start="171:32" pos:end="171:36"><name pos:start="171:32" pos:end="171:32">i</name> <operator pos:start="171:34" pos:end="171:34">&lt;</operator> <literal type="number" pos:start="171:36" pos:end="171:36">4</literal></expr>;</condition> <incr pos:start="171:39" pos:end="171:41"><expr pos:start="171:39" pos:end="171:41"><name pos:start="171:39" pos:end="171:39">i</name><operator pos:start="171:40" pos:end="171:41">++</operator></expr></incr>)</control> <block pos:start="171:44" pos:end="183:21">{<block_content pos:start="173:25" pos:end="181:38">

                        <expr_stmt pos:start="173:25" pos:end="173:79"><expr pos:start="173:25" pos:end="173:78"><name pos:start="173:25" pos:end="173:27">pix</name> <operator pos:start="173:29" pos:end="173:29">=</operator> <call pos:start="173:31" pos:end="173:78"><name pos:start="173:31" pos:end="173:42">smk_get_code</name><argument_list pos:start="173:43" pos:end="173:78">(<argument pos:start="173:44" pos:end="173:46"><expr pos:start="173:44" pos:end="173:46"><operator pos:start="173:44" pos:end="173:44">&amp;</operator><name pos:start="173:45" pos:end="173:46">gb</name></expr></argument>, <argument pos:start="173:49" pos:end="173:61"><expr pos:start="173:49" pos:end="173:61"><name pos:start="173:49" pos:end="173:61"><name pos:start="173:49" pos:end="173:51">smk</name><operator pos:start="173:52" pos:end="173:53">-&gt;</operator><name pos:start="173:54" pos:end="173:61">full_tbl</name></name></expr></argument>, <argument pos:start="173:64" pos:end="173:77"><expr pos:start="173:64" pos:end="173:77"><name pos:start="173:64" pos:end="173:77"><name pos:start="173:64" pos:end="173:66">smk</name><operator pos:start="173:67" pos:end="173:68">-&gt;</operator><name pos:start="173:69" pos:end="173:77">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="175:25" pos:end="175:43"><expr pos:start="175:25" pos:end="175:42"><call pos:start="175:25" pos:end="175:42"><name pos:start="175:25" pos:end="175:31">AV_WL16</name><argument_list pos:start="175:32" pos:end="175:42">(<argument pos:start="175:33" pos:end="175:37"><expr pos:start="175:33" pos:end="175:37"><name pos:start="175:33" pos:end="175:35">out</name><operator pos:start="175:36" pos:end="175:36">+</operator><literal type="number" pos:start="175:37" pos:end="175:37">2</literal></expr></argument>,<argument pos:start="175:39" pos:end="175:41"><expr pos:start="175:39" pos:end="175:41"><name pos:start="175:39" pos:end="175:41">pix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="177:25" pos:end="177:79"><expr pos:start="177:25" pos:end="177:78"><name pos:start="177:25" pos:end="177:27">pix</name> <operator pos:start="177:29" pos:end="177:29">=</operator> <call pos:start="177:31" pos:end="177:78"><name pos:start="177:31" pos:end="177:42">smk_get_code</name><argument_list pos:start="177:43" pos:end="177:78">(<argument pos:start="177:44" pos:end="177:46"><expr pos:start="177:44" pos:end="177:46"><operator pos:start="177:44" pos:end="177:44">&amp;</operator><name pos:start="177:45" pos:end="177:46">gb</name></expr></argument>, <argument pos:start="177:49" pos:end="177:61"><expr pos:start="177:49" pos:end="177:61"><name pos:start="177:49" pos:end="177:61"><name pos:start="177:49" pos:end="177:51">smk</name><operator pos:start="177:52" pos:end="177:53">-&gt;</operator><name pos:start="177:54" pos:end="177:61">full_tbl</name></name></expr></argument>, <argument pos:start="177:64" pos:end="177:77"><expr pos:start="177:64" pos:end="177:77"><name pos:start="177:64" pos:end="177:77"><name pos:start="177:64" pos:end="177:66">smk</name><operator pos:start="177:67" pos:end="177:68">-&gt;</operator><name pos:start="177:69" pos:end="177:77">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="179:25" pos:end="179:41"><expr pos:start="179:25" pos:end="179:40"><call pos:start="179:25" pos:end="179:40"><name pos:start="179:25" pos:end="179:31">AV_WL16</name><argument_list pos:start="179:32" pos:end="179:40">(<argument pos:start="179:33" pos:end="179:35"><expr pos:start="179:33" pos:end="179:35"><name pos:start="179:33" pos:end="179:35">out</name></expr></argument>,<argument pos:start="179:37" pos:end="179:39"><expr pos:start="179:37" pos:end="179:39"><name pos:start="179:37" pos:end="179:39">pix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="181:25" pos:end="181:38"><expr pos:start="181:25" pos:end="181:37"><name pos:start="181:25" pos:end="181:27">out</name> <operator pos:start="181:29" pos:end="181:30">+=</operator> <name pos:start="181:32" pos:end="181:37">stride</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <break pos:start="185:21" pos:end="185:26">break;</break>

                <case pos:start="187:17" pos:end="187:23">case <expr pos:start="187:22" pos:end="187:22"><literal type="number" pos:start="187:22" pos:end="187:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="189:21" pos:end="189:75"><expr pos:start="189:21" pos:end="189:74"><name pos:start="189:21" pos:end="189:23">pix</name> <operator pos:start="189:25" pos:end="189:25">=</operator> <call pos:start="189:27" pos:end="189:74"><name pos:start="189:27" pos:end="189:38">smk_get_code</name><argument_list pos:start="189:39" pos:end="189:74">(<argument pos:start="189:40" pos:end="189:42"><expr pos:start="189:40" pos:end="189:42"><operator pos:start="189:40" pos:end="189:40">&amp;</operator><name pos:start="189:41" pos:end="189:42">gb</name></expr></argument>, <argument pos:start="189:45" pos:end="189:57"><expr pos:start="189:45" pos:end="189:57"><name pos:start="189:45" pos:end="189:57"><name pos:start="189:45" pos:end="189:47">smk</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:57">full_tbl</name></name></expr></argument>, <argument pos:start="189:60" pos:end="189:73"><expr pos:start="189:60" pos:end="189:73"><name pos:start="189:60" pos:end="189:73"><name pos:start="189:60" pos:end="189:62">smk</name><operator pos:start="189:63" pos:end="189:64">-&gt;</operator><name pos:start="189:65" pos:end="189:73">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:49"><expr pos:start="191:21" pos:end="191:48"><name pos:start="191:21" pos:end="191:26"><name pos:start="191:21" pos:end="191:23">out</name><index pos:start="191:24" pos:end="191:26">[<expr pos:start="191:25" pos:end="191:25"><literal type="number" pos:start="191:25" pos:end="191:25">0</literal></expr>]</index></name> <operator pos:start="191:28" pos:end="191:28">=</operator> <name pos:start="191:30" pos:end="191:35"><name pos:start="191:30" pos:end="191:32">out</name><index pos:start="191:33" pos:end="191:35">[<expr pos:start="191:34" pos:end="191:34"><literal type="number" pos:start="191:34" pos:end="191:34">1</literal></expr>]</index></name> <operator pos:start="191:37" pos:end="191:37">=</operator> <name pos:start="191:39" pos:end="191:41">pix</name> <operator pos:start="191:43" pos:end="191:43">&amp;</operator> <literal type="number" pos:start="191:45" pos:end="191:48">0xFF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:47"><expr pos:start="193:21" pos:end="193:46"><name pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:23">out</name><index pos:start="193:24" pos:end="193:26">[<expr pos:start="193:25" pos:end="193:25"><literal type="number" pos:start="193:25" pos:end="193:25">2</literal></expr>]</index></name> <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:35"><name pos:start="193:30" pos:end="193:32">out</name><index pos:start="193:33" pos:end="193:35">[<expr pos:start="193:34" pos:end="193:34"><literal type="number" pos:start="193:34" pos:end="193:34">3</literal></expr>]</index></name> <operator pos:start="193:37" pos:end="193:37">=</operator> <name pos:start="193:39" pos:end="193:41">pix</name> <operator pos:start="193:43" pos:end="193:44">&gt;&gt;</operator> <literal type="number" pos:start="193:46" pos:end="193:46">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:34"><expr pos:start="195:21" pos:end="195:33"><name pos:start="195:21" pos:end="195:23">out</name> <operator pos:start="195:25" pos:end="195:26">+=</operator> <name pos:start="195:28" pos:end="195:33">stride</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:49"><expr pos:start="197:21" pos:end="197:48"><name pos:start="197:21" pos:end="197:26"><name pos:start="197:21" pos:end="197:23">out</name><index pos:start="197:24" pos:end="197:26">[<expr pos:start="197:25" pos:end="197:25"><literal type="number" pos:start="197:25" pos:end="197:25">0</literal></expr>]</index></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <name pos:start="197:30" pos:end="197:35"><name pos:start="197:30" pos:end="197:32">out</name><index pos:start="197:33" pos:end="197:35">[<expr pos:start="197:34" pos:end="197:34"><literal type="number" pos:start="197:34" pos:end="197:34">1</literal></expr>]</index></name> <operator pos:start="197:37" pos:end="197:37">=</operator> <name pos:start="197:39" pos:end="197:41">pix</name> <operator pos:start="197:43" pos:end="197:43">&amp;</operator> <literal type="number" pos:start="197:45" pos:end="197:48">0xFF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:47"><expr pos:start="199:21" pos:end="199:46"><name pos:start="199:21" pos:end="199:26"><name pos:start="199:21" pos:end="199:23">out</name><index pos:start="199:24" pos:end="199:26">[<expr pos:start="199:25" pos:end="199:25"><literal type="number" pos:start="199:25" pos:end="199:25">2</literal></expr>]</index></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <name pos:start="199:30" pos:end="199:35"><name pos:start="199:30" pos:end="199:32">out</name><index pos:start="199:33" pos:end="199:35">[<expr pos:start="199:34" pos:end="199:34"><literal type="number" pos:start="199:34" pos:end="199:34">3</literal></expr>]</index></name> <operator pos:start="199:37" pos:end="199:37">=</operator> <name pos:start="199:39" pos:end="199:41">pix</name> <operator pos:start="199:43" pos:end="199:44">&gt;&gt;</operator> <literal type="number" pos:start="199:46" pos:end="199:46">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:34"><expr pos:start="201:21" pos:end="201:33"><name pos:start="201:21" pos:end="201:23">out</name> <operator pos:start="201:25" pos:end="201:26">+=</operator> <name pos:start="201:28" pos:end="201:33">stride</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:75"><expr pos:start="203:21" pos:end="203:74"><name pos:start="203:21" pos:end="203:23">pix</name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:74"><name pos:start="203:27" pos:end="203:38">smk_get_code</name><argument_list pos:start="203:39" pos:end="203:74">(<argument pos:start="203:40" pos:end="203:42"><expr pos:start="203:40" pos:end="203:42"><operator pos:start="203:40" pos:end="203:40">&amp;</operator><name pos:start="203:41" pos:end="203:42">gb</name></expr></argument>, <argument pos:start="203:45" pos:end="203:57"><expr pos:start="203:45" pos:end="203:57"><name pos:start="203:45" pos:end="203:57"><name pos:start="203:45" pos:end="203:47">smk</name><operator pos:start="203:48" pos:end="203:49">-&gt;</operator><name pos:start="203:50" pos:end="203:57">full_tbl</name></name></expr></argument>, <argument pos:start="203:60" pos:end="203:73"><expr pos:start="203:60" pos:end="203:73"><name pos:start="203:60" pos:end="203:73"><name pos:start="203:60" pos:end="203:62">smk</name><operator pos:start="203:63" pos:end="203:64">-&gt;</operator><name pos:start="203:65" pos:end="203:73">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:49"><expr pos:start="205:21" pos:end="205:48"><name pos:start="205:21" pos:end="205:26"><name pos:start="205:21" pos:end="205:23">out</name><index pos:start="205:24" pos:end="205:26">[<expr pos:start="205:25" pos:end="205:25"><literal type="number" pos:start="205:25" pos:end="205:25">0</literal></expr>]</index></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <name pos:start="205:30" pos:end="205:35"><name pos:start="205:30" pos:end="205:32">out</name><index pos:start="205:33" pos:end="205:35">[<expr pos:start="205:34" pos:end="205:34"><literal type="number" pos:start="205:34" pos:end="205:34">1</literal></expr>]</index></name> <operator pos:start="205:37" pos:end="205:37">=</operator> <name pos:start="205:39" pos:end="205:41">pix</name> <operator pos:start="205:43" pos:end="205:43">&amp;</operator> <literal type="number" pos:start="205:45" pos:end="205:48">0xFF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="207:21" pos:end="207:47"><expr pos:start="207:21" pos:end="207:46"><name pos:start="207:21" pos:end="207:26"><name pos:start="207:21" pos:end="207:23">out</name><index pos:start="207:24" pos:end="207:26">[<expr pos:start="207:25" pos:end="207:25"><literal type="number" pos:start="207:25" pos:end="207:25">2</literal></expr>]</index></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <name pos:start="207:30" pos:end="207:35"><name pos:start="207:30" pos:end="207:32">out</name><index pos:start="207:33" pos:end="207:35">[<expr pos:start="207:34" pos:end="207:34"><literal type="number" pos:start="207:34" pos:end="207:34">3</literal></expr>]</index></name> <operator pos:start="207:37" pos:end="207:37">=</operator> <name pos:start="207:39" pos:end="207:41">pix</name> <operator pos:start="207:43" pos:end="207:44">&gt;&gt;</operator> <literal type="number" pos:start="207:46" pos:end="207:46">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:34"><expr pos:start="209:21" pos:end="209:33"><name pos:start="209:21" pos:end="209:23">out</name> <operator pos:start="209:25" pos:end="209:26">+=</operator> <name pos:start="209:28" pos:end="209:33">stride</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:49"><expr pos:start="211:21" pos:end="211:48"><name pos:start="211:21" pos:end="211:26"><name pos:start="211:21" pos:end="211:23">out</name><index pos:start="211:24" pos:end="211:26">[<expr pos:start="211:25" pos:end="211:25"><literal type="number" pos:start="211:25" pos:end="211:25">0</literal></expr>]</index></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <name pos:start="211:30" pos:end="211:35"><name pos:start="211:30" pos:end="211:32">out</name><index pos:start="211:33" pos:end="211:35">[<expr pos:start="211:34" pos:end="211:34"><literal type="number" pos:start="211:34" pos:end="211:34">1</literal></expr>]</index></name> <operator pos:start="211:37" pos:end="211:37">=</operator> <name pos:start="211:39" pos:end="211:41">pix</name> <operator pos:start="211:43" pos:end="211:43">&amp;</operator> <literal type="number" pos:start="211:45" pos:end="211:48">0xFF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:47"><expr pos:start="213:21" pos:end="213:46"><name pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:23">out</name><index pos:start="213:24" pos:end="213:26">[<expr pos:start="213:25" pos:end="213:25"><literal type="number" pos:start="213:25" pos:end="213:25">2</literal></expr>]</index></name> <operator pos:start="213:28" pos:end="213:28">=</operator> <name pos:start="213:30" pos:end="213:35"><name pos:start="213:30" pos:end="213:32">out</name><index pos:start="213:33" pos:end="213:35">[<expr pos:start="213:34" pos:end="213:34"><literal type="number" pos:start="213:34" pos:end="213:34">3</literal></expr>]</index></name> <operator pos:start="213:37" pos:end="213:37">=</operator> <name pos:start="213:39" pos:end="213:41">pix</name> <operator pos:start="213:43" pos:end="213:44">&gt;&gt;</operator> <literal type="number" pos:start="213:46" pos:end="213:46">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:34"><expr pos:start="215:21" pos:end="215:33"><name pos:start="215:21" pos:end="215:23">out</name> <operator pos:start="215:25" pos:end="215:26">+=</operator> <name pos:start="215:28" pos:end="215:33">stride</name></expr>;</expr_stmt>

                    <break pos:start="217:21" pos:end="217:26">break;</break>

                <case pos:start="219:17" pos:end="219:23">case <expr pos:start="219:22" pos:end="219:22"><literal type="number" pos:start="219:22" pos:end="219:22">2</literal></expr>:</case>

                    <for pos:start="221:21" pos:end="241:21">for<control pos:start="221:24" pos:end="221:42">(<init pos:start="221:25" pos:end="221:30"><expr pos:start="221:25" pos:end="221:29"><name pos:start="221:25" pos:end="221:25">i</name> <operator pos:start="221:27" pos:end="221:27">=</operator> <literal type="number" pos:start="221:29" pos:end="221:29">0</literal></expr>;</init> <condition pos:start="221:32" pos:end="221:37"><expr pos:start="221:32" pos:end="221:36"><name pos:start="221:32" pos:end="221:32">i</name> <operator pos:start="221:34" pos:end="221:34">&lt;</operator> <literal type="number" pos:start="221:36" pos:end="221:36">2</literal></expr>;</condition> <incr pos:start="221:39" pos:end="221:41"><expr pos:start="221:39" pos:end="221:41"><name pos:start="221:39" pos:end="221:39">i</name><operator pos:start="221:40" pos:end="221:41">++</operator></expr></incr>)</control> <block pos:start="221:44" pos:end="241:21">{<block_content pos:start="223:25" pos:end="239:38">

                        <decl_stmt pos:start="223:25" pos:end="223:44"><decl pos:start="223:25" pos:end="223:37"><type pos:start="223:25" pos:end="223:32"><name pos:start="223:25" pos:end="223:32">uint16_t</name></type> <name pos:start="223:34" pos:end="223:37">pix1</name></decl>, <decl pos:start="223:40" pos:end="223:43"><type ref="prev" pos:start="223:25" pos:end="223:32"/><name pos:start="223:40" pos:end="223:43">pix2</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="225:25" pos:end="225:80"><expr pos:start="225:25" pos:end="225:79"><name pos:start="225:25" pos:end="225:28">pix1</name> <operator pos:start="225:30" pos:end="225:30">=</operator> <call pos:start="225:32" pos:end="225:79"><name pos:start="225:32" pos:end="225:43">smk_get_code</name><argument_list pos:start="225:44" pos:end="225:79">(<argument pos:start="225:45" pos:end="225:47"><expr pos:start="225:45" pos:end="225:47"><operator pos:start="225:45" pos:end="225:45">&amp;</operator><name pos:start="225:46" pos:end="225:47">gb</name></expr></argument>, <argument pos:start="225:50" pos:end="225:62"><expr pos:start="225:50" pos:end="225:62"><name pos:start="225:50" pos:end="225:62"><name pos:start="225:50" pos:end="225:52">smk</name><operator pos:start="225:53" pos:end="225:54">-&gt;</operator><name pos:start="225:55" pos:end="225:62">full_tbl</name></name></expr></argument>, <argument pos:start="225:65" pos:end="225:78"><expr pos:start="225:65" pos:end="225:78"><name pos:start="225:65" pos:end="225:78"><name pos:start="225:65" pos:end="225:67">smk</name><operator pos:start="225:68" pos:end="225:69">-&gt;</operator><name pos:start="225:70" pos:end="225:78">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="227:25" pos:end="227:80"><expr pos:start="227:25" pos:end="227:79"><name pos:start="227:25" pos:end="227:28">pix2</name> <operator pos:start="227:30" pos:end="227:30">=</operator> <call pos:start="227:32" pos:end="227:79"><name pos:start="227:32" pos:end="227:43">smk_get_code</name><argument_list pos:start="227:44" pos:end="227:79">(<argument pos:start="227:45" pos:end="227:47"><expr pos:start="227:45" pos:end="227:47"><operator pos:start="227:45" pos:end="227:45">&amp;</operator><name pos:start="227:46" pos:end="227:47">gb</name></expr></argument>, <argument pos:start="227:50" pos:end="227:62"><expr pos:start="227:50" pos:end="227:62"><name pos:start="227:50" pos:end="227:62"><name pos:start="227:50" pos:end="227:52">smk</name><operator pos:start="227:53" pos:end="227:54">-&gt;</operator><name pos:start="227:55" pos:end="227:62">full_tbl</name></name></expr></argument>, <argument pos:start="227:65" pos:end="227:78"><expr pos:start="227:65" pos:end="227:78"><name pos:start="227:65" pos:end="227:78"><name pos:start="227:65" pos:end="227:67">smk</name><operator pos:start="227:68" pos:end="227:69">-&gt;</operator><name pos:start="227:70" pos:end="227:78">full_last</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="229:25" pos:end="229:42"><expr pos:start="229:25" pos:end="229:41"><call pos:start="229:25" pos:end="229:41"><name pos:start="229:25" pos:end="229:31">AV_WL16</name><argument_list pos:start="229:32" pos:end="229:41">(<argument pos:start="229:33" pos:end="229:35"><expr pos:start="229:33" pos:end="229:35"><name pos:start="229:33" pos:end="229:35">out</name></expr></argument>,<argument pos:start="229:37" pos:end="229:40"><expr pos:start="229:37" pos:end="229:40"><name pos:start="229:37" pos:end="229:40">pix1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="231:25" pos:end="231:44"><expr pos:start="231:25" pos:end="231:43"><call pos:start="231:25" pos:end="231:43"><name pos:start="231:25" pos:end="231:31">AV_WL16</name><argument_list pos:start="231:32" pos:end="231:43">(<argument pos:start="231:33" pos:end="231:37"><expr pos:start="231:33" pos:end="231:37"><name pos:start="231:33" pos:end="231:35">out</name><operator pos:start="231:36" pos:end="231:36">+</operator><literal type="number" pos:start="231:37" pos:end="231:37">2</literal></expr></argument>,<argument pos:start="231:39" pos:end="231:42"><expr pos:start="231:39" pos:end="231:42"><name pos:start="231:39" pos:end="231:42">pix2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="233:25" pos:end="233:38"><expr pos:start="233:25" pos:end="233:37"><name pos:start="233:25" pos:end="233:27">out</name> <operator pos:start="233:29" pos:end="233:30">+=</operator> <name pos:start="233:32" pos:end="233:37">stride</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="235:25" pos:end="235:42"><expr pos:start="235:25" pos:end="235:41"><call pos:start="235:25" pos:end="235:41"><name pos:start="235:25" pos:end="235:31">AV_WL16</name><argument_list pos:start="235:32" pos:end="235:41">(<argument pos:start="235:33" pos:end="235:35"><expr pos:start="235:33" pos:end="235:35"><name pos:start="235:33" pos:end="235:35">out</name></expr></argument>,<argument pos:start="235:37" pos:end="235:40"><expr pos:start="235:37" pos:end="235:40"><name pos:start="235:37" pos:end="235:40">pix1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="237:25" pos:end="237:44"><expr pos:start="237:25" pos:end="237:43"><call pos:start="237:25" pos:end="237:43"><name pos:start="237:25" pos:end="237:31">AV_WL16</name><argument_list pos:start="237:32" pos:end="237:43">(<argument pos:start="237:33" pos:end="237:37"><expr pos:start="237:33" pos:end="237:37"><name pos:start="237:33" pos:end="237:35">out</name><operator pos:start="237:36" pos:end="237:36">+</operator><literal type="number" pos:start="237:37" pos:end="237:37">2</literal></expr></argument>,<argument pos:start="237:39" pos:end="237:42"><expr pos:start="237:39" pos:end="237:42"><name pos:start="237:39" pos:end="237:42">pix2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="239:25" pos:end="239:38"><expr pos:start="239:25" pos:end="239:37"><name pos:start="239:25" pos:end="239:27">out</name> <operator pos:start="239:29" pos:end="239:30">+=</operator> <name pos:start="239:32" pos:end="239:37">stride</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <break pos:start="243:21" pos:end="243:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="247:17" pos:end="247:22"><expr pos:start="247:17" pos:end="247:21"><name pos:start="247:17" pos:end="247:19">blk</name><operator pos:start="247:20" pos:end="247:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="251:13" pos:end="251:18">break;</break>

        <case pos:start="253:9" pos:end="253:26">case <expr pos:start="253:14" pos:end="253:25"><name pos:start="253:14" pos:end="253:25">SMK_BLK_SKIP</name></expr>:</case>

            <while pos:start="255:13" pos:end="257:22">while<condition pos:start="255:18" pos:end="255:40">(<expr pos:start="255:19" pos:end="255:39"><name pos:start="255:19" pos:end="255:21">run</name><operator pos:start="255:22" pos:end="255:23">--</operator> <operator pos:start="255:25" pos:end="255:26">&amp;&amp;</operator> <name pos:start="255:28" pos:end="255:30">blk</name> <operator pos:start="255:32" pos:end="255:32">&lt;</operator> <name pos:start="255:34" pos:end="255:39">blocks</name></expr>)</condition><block type="pseudo" pos:start="257:17" pos:end="257:22"><block_content pos:start="257:17" pos:end="257:22">

                <expr_stmt pos:start="257:17" pos:end="257:22"><expr pos:start="257:17" pos:end="257:21"><name pos:start="257:17" pos:end="257:19">blk</name><operator pos:start="257:20" pos:end="257:21">++</operator></expr>;</expr_stmt></block_content></block></while>

            <break pos:start="259:13" pos:end="259:18">break;</break>

        <case pos:start="261:9" pos:end="261:26">case <expr pos:start="261:14" pos:end="261:25"><name pos:start="261:14" pos:end="261:25">SMK_BLK_FILL</name></expr>:</case>

            <expr_stmt pos:start="263:13" pos:end="263:29"><expr pos:start="263:13" pos:end="263:28"><name pos:start="263:13" pos:end="263:16">mode</name> <operator pos:start="263:18" pos:end="263:18">=</operator> <name pos:start="263:20" pos:end="263:23">type</name> <operator pos:start="263:25" pos:end="263:26">&gt;&gt;</operator> <literal type="number" pos:start="263:28" pos:end="263:28">8</literal></expr>;</expr_stmt>

            <while pos:start="265:13" pos:end="283:13">while<condition pos:start="265:18" pos:end="265:40">(<expr pos:start="265:19" pos:end="265:39"><name pos:start="265:19" pos:end="265:21">run</name><operator pos:start="265:22" pos:end="265:23">--</operator> <operator pos:start="265:25" pos:end="265:26">&amp;&amp;</operator> <name pos:start="265:28" pos:end="265:30">blk</name> <operator pos:start="265:32" pos:end="265:32">&lt;</operator> <name pos:start="265:34" pos:end="265:39">blocks</name></expr>)</condition><block pos:start="265:41" pos:end="283:13">{<block_content pos:start="267:17" pos:end="281:22">

                <decl_stmt pos:start="267:17" pos:end="267:29"><decl pos:start="267:17" pos:end="267:28"><type pos:start="267:17" pos:end="267:24"><name pos:start="267:17" pos:end="267:24">uint32_t</name></type> <name pos:start="267:26" pos:end="267:28">col</name></decl>;</decl_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:84"><expr pos:start="269:17" pos:end="269:83"><name pos:start="269:17" pos:end="269:19">out</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <name pos:start="269:23" pos:end="269:38"><name pos:start="269:23" pos:end="269:25">smk</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:30">pic</name><operator pos:start="269:31" pos:end="269:31">.</operator><name pos:start="269:32" pos:end="269:35">data</name><index pos:start="269:36" pos:end="269:38">[<expr pos:start="269:37" pos:end="269:37"><literal type="number" pos:start="269:37" pos:end="269:37">0</literal></expr>]</index></name> <operator pos:start="269:40" pos:end="269:40">+</operator> <operator pos:start="269:42" pos:end="269:42">(</operator><name pos:start="269:43" pos:end="269:45">blk</name> <operator pos:start="269:47" pos:end="269:47">/</operator> <name pos:start="269:49" pos:end="269:50">bw</name><operator pos:start="269:51" pos:end="269:51">)</operator> <operator pos:start="269:53" pos:end="269:53">*</operator> <operator pos:start="269:55" pos:end="269:55">(</operator><name pos:start="269:56" pos:end="269:61">stride</name> <operator pos:start="269:63" pos:end="269:63">*</operator> <literal type="number" pos:start="269:65" pos:end="269:65">4</literal><operator pos:start="269:66" pos:end="269:66">)</operator> <operator pos:start="269:68" pos:end="269:68">+</operator> <operator pos:start="269:70" pos:end="269:70">(</operator><name pos:start="269:71" pos:end="269:73">blk</name> <operator pos:start="269:75" pos:end="269:75">%</operator> <name pos:start="269:77" pos:end="269:78">bw</name><operator pos:start="269:79" pos:end="269:79">)</operator> <operator pos:start="269:81" pos:end="269:81">*</operator> <literal type="number" pos:start="269:83" pos:end="269:83">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:40"><expr pos:start="271:17" pos:end="271:39"><name pos:start="271:17" pos:end="271:19">col</name> <operator pos:start="271:21" pos:end="271:21">=</operator> <name pos:start="271:23" pos:end="271:26">mode</name> <operator pos:start="271:28" pos:end="271:28">*</operator> <literal type="number" pos:start="271:30" pos:end="271:39">0x01010101</literal></expr>;</expr_stmt>

                <for pos:start="273:17" pos:end="279:17">for<control pos:start="273:20" pos:end="273:38">(<init pos:start="273:21" pos:end="273:26"><expr pos:start="273:21" pos:end="273:25"><name pos:start="273:21" pos:end="273:21">i</name> <operator pos:start="273:23" pos:end="273:23">=</operator> <literal type="number" pos:start="273:25" pos:end="273:25">0</literal></expr>;</init> <condition pos:start="273:28" pos:end="273:33"><expr pos:start="273:28" pos:end="273:32"><name pos:start="273:28" pos:end="273:28">i</name> <operator pos:start="273:30" pos:end="273:30">&lt;</operator> <literal type="number" pos:start="273:32" pos:end="273:32">4</literal></expr>;</condition> <incr pos:start="273:35" pos:end="273:37"><expr pos:start="273:35" pos:end="273:37"><name pos:start="273:35" pos:end="273:35">i</name><operator pos:start="273:36" pos:end="273:37">++</operator></expr></incr>)</control> <block pos:start="273:40" pos:end="279:17">{<block_content pos:start="275:21" pos:end="277:34">

                    <expr_stmt pos:start="275:21" pos:end="275:44"><expr pos:start="275:21" pos:end="275:43"><operator pos:start="275:21" pos:end="275:21">*</operator><operator pos:start="275:22" pos:end="275:22">(</operator><operator pos:start="275:23" pos:end="275:23">(</operator><name pos:start="275:24" pos:end="275:31">uint32_t</name><operator pos:start="275:32" pos:end="275:32">*</operator><operator pos:start="275:33" pos:end="275:33">)</operator><name pos:start="275:34" pos:end="275:36">out</name><operator pos:start="275:37" pos:end="275:37">)</operator> <operator pos:start="275:39" pos:end="275:39">=</operator> <name pos:start="275:41" pos:end="275:43">col</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:34"><expr pos:start="277:21" pos:end="277:33"><name pos:start="277:21" pos:end="277:23">out</name> <operator pos:start="277:25" pos:end="277:26">+=</operator> <name pos:start="277:28" pos:end="277:33">stride</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="281:17" pos:end="281:22"><expr pos:start="281:17" pos:end="281:21"><name pos:start="281:17" pos:end="281:19">blk</name><operator pos:start="281:20" pos:end="281:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="285:13" pos:end="285:18">break;</break>

        </block_content>}</block></switch>



    </block_content>}</block></while>



    <expr_stmt pos:start="295:5" pos:end="295:33"><expr pos:start="295:5" pos:end="295:32"><operator pos:start="295:5" pos:end="295:5">*</operator><name pos:start="295:6" pos:end="295:14">data_size</name> <operator pos:start="295:16" pos:end="295:16">=</operator> <sizeof pos:start="295:18" pos:end="295:32">sizeof<argument_list pos:start="295:24" pos:end="295:32">(<argument pos:start="295:25" pos:end="295:31"><expr pos:start="295:25" pos:end="295:31"><name pos:start="295:25" pos:end="295:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:31"><expr pos:start="297:5" pos:end="297:30"><operator pos:start="297:5" pos:end="297:5">*</operator><operator pos:start="297:6" pos:end="297:6">(</operator><name pos:start="297:7" pos:end="297:13">AVFrame</name><operator pos:start="297:14" pos:end="297:14">*</operator><operator pos:start="297:15" pos:end="297:15">)</operator><name pos:start="297:16" pos:end="297:19">data</name> <operator pos:start="297:21" pos:end="297:21">=</operator> <name pos:start="297:23" pos:end="297:30"><name pos:start="297:23" pos:end="297:25">smk</name><operator pos:start="297:26" pos:end="297:27">-&gt;</operator><name pos:start="297:28" pos:end="297:30">pic</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="301:5" pos:end="301:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="303:5" pos:end="303:20">return <expr pos:start="303:12" pos:end="303:19"><name pos:start="303:12" pos:end="303:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
