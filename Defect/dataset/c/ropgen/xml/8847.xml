<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8847.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">powernv_create_core_node</name><parameter_list pos:start="1:37" pos:end="1:75">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:44">PnvChip</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">chip</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:59">PnvCore</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">pc</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">fdt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:61">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:43">= <expr pos:start="5:20" pos:end="5:43"><call pos:start="5:20" pos:end="5:43"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:43">(<argument pos:start="5:24" pos:end="5:42"><expr pos:start="5:24" pos:end="5:42"><call pos:start="5:24" pos:end="5:42"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:42">(<argument pos:start="5:31" pos:end="5:41"><expr pos:start="5:31" pos:end="5:41"><name pos:start="5:31" pos:end="5:41"><name pos:start="5:31" pos:end="5:32">pc</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:41">threads</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceClass</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">dc</name> <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><call pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:38">DEVICE_GET_CLASS</name><argument_list pos:start="7:39" pos:end="7:42">(<argument pos:start="7:40" pos:end="7:41"><expr pos:start="7:40" pos:end="7:41"><name pos:start="7:40" pos:end="7:41">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PowerPCCPU</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">cpu</name> <init pos:start="9:21" pos:end="9:37">= <expr pos:start="9:23" pos:end="9:37"><call pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:33">POWERPC_CPU</name><argument_list pos:start="9:34" pos:end="9:37">(<argument pos:start="9:35" pos:end="9:36"><expr pos:start="9:35" pos:end="9:36"><name pos:start="9:35" pos:end="9:36">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">smt_threads</name> <init pos:start="11:21" pos:end="11:46">= <expr pos:start="11:23" pos:end="11:46"><call pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:30">CPU_CORE</name><argument_list pos:start="11:31" pos:end="11:34">(<argument pos:start="11:32" pos:end="11:33"><expr pos:start="11:32" pos:end="11:33"><name pos:start="11:32" pos:end="11:33">pc</name></expr></argument>)</argument_list></call><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:46">nr_threads</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">CPUPPCState</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">env</name> <init pos:start="13:22" pos:end="13:32">= <expr pos:start="13:24" pos:end="13:32"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:27">cpu</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">PowerPCCPUClass</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:24">pcc</name> <init pos:start="15:26" pos:end="15:52">= <expr pos:start="15:28" pos:end="15:52"><call pos:start="15:28" pos:end="15:52"><name pos:start="15:28" pos:end="15:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="15:49" pos:end="15:52">(<argument pos:start="15:50" pos:end="15:51"><expr pos:start="15:50" pos:end="15:51"><name pos:start="15:50" pos:end="15:51">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:38"><name pos:start="17:14" pos:end="17:25">servers_prop</name><index pos:start="17:26" pos:end="17:38">[<expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">smt_threads</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="23:47"><decl pos:start="21:5" pos:end="23:46"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:19"><name pos:start="21:14" pos:end="21:17">segs</name><index pos:start="21:18" pos:end="21:19">[]</index></name> <init pos:start="21:21" pos:end="23:46">= <expr pos:start="21:23" pos:end="23:46"><block pos:start="21:23" pos:end="23:46">{<expr pos:start="21:24" pos:end="21:38"><call pos:start="21:24" pos:end="21:38"><name pos:start="21:24" pos:end="21:34">cpu_to_be32</name><argument_list pos:start="21:35" pos:end="21:38">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><literal type="number" pos:start="21:36" pos:end="21:37">28</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="21:41" pos:end="21:55"><call pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:51">cpu_to_be32</name><argument_list pos:start="21:52" pos:end="21:55">(<argument pos:start="21:53" pos:end="21:54"><expr pos:start="21:53" pos:end="21:54"><literal type="number" pos:start="21:53" pos:end="21:54">40</literal></expr></argument>)</argument_list></call></expr>,

                       <expr pos:start="23:24" pos:end="23:33"><literal type="number" pos:start="23:24" pos:end="23:33">0xffffffff</literal></expr>, <expr pos:start="23:36" pos:end="23:45"><literal type="number" pos:start="23:36" pos:end="23:45">0xffffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:40"><decl pos:start="25:5" pos:end="25:39"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:19">tbfreq</name> <init pos:start="25:21" pos:end="25:39">= <expr pos:start="25:23" pos:end="25:39"><name pos:start="25:23" pos:end="25:39">PNV_TIMEBASE_FREQ</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:34"><decl pos:start="27:5" pos:end="27:33"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:20">cpufreq</name> <init pos:start="27:22" pos:end="27:33">= <expr pos:start="27:24" pos:end="27:33"><literal type="number" pos:start="27:24" pos:end="27:33">1000000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:33"><decl pos:start="29:5" pos:end="29:32"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint32_t</name></type> <name pos:start="29:14" pos:end="29:32"><name pos:start="29:14" pos:end="29:28">page_sizes_prop</name><index pos:start="29:29" pos:end="29:32">[<expr pos:start="29:30" pos:end="29:31"><literal type="number" pos:start="29:30" pos:end="29:31">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:32"><decl pos:start="31:5" pos:end="31:31"><type pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:10">size_t</name></type> <name pos:start="31:12" pos:end="31:31">page_sizes_prop_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="41:73"><decl pos:start="33:5" pos:end="41:72"><type pos:start="33:5" pos:end="33:17"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:17">uint8_t</name></type> <name pos:start="33:19" pos:end="33:31"><name pos:start="33:19" pos:end="33:29">pa_features</name><index pos:start="33:30" pos:end="33:31">[]</index></name> <init pos:start="33:33" pos:end="41:72">= <expr pos:start="33:35" pos:end="41:72"><block pos:start="33:35" pos:end="41:72">{ <expr pos:start="33:37" pos:end="33:38"><literal type="number" pos:start="33:37" pos:end="33:38">24</literal></expr>, <expr pos:start="33:41" pos:end="33:41"><literal type="number" pos:start="33:41" pos:end="33:41">0</literal></expr>,

                                    <expr pos:start="35:37" pos:end="35:40"><literal type="number" pos:start="35:37" pos:end="35:40">0xf6</literal></expr>, <expr pos:start="35:43" pos:end="35:46"><literal type="number" pos:start="35:43" pos:end="35:46">0x3f</literal></expr>, <expr pos:start="35:49" pos:end="35:52"><literal type="number" pos:start="35:49" pos:end="35:52">0xc7</literal></expr>, <expr pos:start="35:55" pos:end="35:58"><literal type="number" pos:start="35:55" pos:end="35:58">0xc0</literal></expr>, <expr pos:start="35:61" pos:end="35:64"><literal type="number" pos:start="35:61" pos:end="35:64">0x80</literal></expr>, <expr pos:start="35:67" pos:end="35:70"><literal type="number" pos:start="35:67" pos:end="35:70">0xf0</literal></expr>,

                                    <expr pos:start="37:37" pos:end="37:40"><literal type="number" pos:start="37:37" pos:end="37:40">0x80</literal></expr>, <expr pos:start="37:43" pos:end="37:46"><literal type="number" pos:start="37:43" pos:end="37:46">0x00</literal></expr>, <expr pos:start="37:49" pos:end="37:52"><literal type="number" pos:start="37:49" pos:end="37:52">0x00</literal></expr>, <expr pos:start="37:55" pos:end="37:58"><literal type="number" pos:start="37:55" pos:end="37:58">0x00</literal></expr>, <expr pos:start="37:61" pos:end="37:64"><literal type="number" pos:start="37:61" pos:end="37:64">0x00</literal></expr>, <expr pos:start="37:67" pos:end="37:70"><literal type="number" pos:start="37:67" pos:end="37:70">0x00</literal></expr>,

                                    <expr pos:start="39:37" pos:end="39:40"><literal type="number" pos:start="39:37" pos:end="39:40">0x00</literal></expr>, <expr pos:start="39:43" pos:end="39:46"><literal type="number" pos:start="39:43" pos:end="39:46">0x00</literal></expr>, <expr pos:start="39:49" pos:end="39:52"><literal type="number" pos:start="39:49" pos:end="39:52">0x00</literal></expr>, <expr pos:start="39:55" pos:end="39:58"><literal type="number" pos:start="39:55" pos:end="39:58">0x00</literal></expr>, <expr pos:start="39:61" pos:end="39:64"><literal type="number" pos:start="39:61" pos:end="39:64">0x80</literal></expr>, <expr pos:start="39:67" pos:end="39:70"><literal type="number" pos:start="39:67" pos:end="39:70">0x00</literal></expr>,

                                    <expr pos:start="41:37" pos:end="41:40"><literal type="number" pos:start="41:37" pos:end="41:40">0x80</literal></expr>, <expr pos:start="41:43" pos:end="41:46"><literal type="number" pos:start="41:43" pos:end="41:46">0x00</literal></expr>, <expr pos:start="41:49" pos:end="41:52"><literal type="number" pos:start="41:49" pos:end="41:52">0x80</literal></expr>, <expr pos:start="41:55" pos:end="41:58"><literal type="number" pos:start="41:55" pos:end="41:58">0x00</literal></expr>, <expr pos:start="41:61" pos:end="41:64"><literal type="number" pos:start="41:61" pos:end="41:64">0x80</literal></expr>, <expr pos:start="41:67" pos:end="41:70"><literal type="number" pos:start="41:67" pos:end="41:70">0x00</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:15"><decl pos:start="43:5" pos:end="43:14"><type pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:7">int</name></type> <name pos:start="43:9" pos:end="43:14">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:19"><decl pos:start="45:5" pos:end="45:18"><type pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:8">char</name> <modifier pos:start="45:10" pos:end="45:10">*</modifier></type><name pos:start="45:11" pos:end="45:18">nodename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:41"><decl pos:start="47:5" pos:end="47:40"><type pos:start="47:5" pos:end="47:7"><name pos:start="47:5" pos:end="47:7">int</name></type> <name pos:start="47:9" pos:end="47:19">cpus_offset</name> <init pos:start="47:21" pos:end="47:40">= <expr pos:start="47:23" pos:end="47:40"><call pos:start="47:23" pos:end="47:40"><name pos:start="47:23" pos:end="47:35">get_cpus_node</name><argument_list pos:start="47:36" pos:end="47:40">(<argument pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:39">fdt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:12">nodename</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:61"><name pos:start="51:16" pos:end="51:30">g_strdup_printf</name><argument_list pos:start="51:31" pos:end="51:61">(<argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><literal type="string" pos:start="51:32" pos:end="51:38">"%s@%x"</literal></expr></argument>, <argument pos:start="51:41" pos:end="51:51"><expr pos:start="51:41" pos:end="51:51"><name pos:start="51:41" pos:end="51:51"><name pos:start="51:41" pos:end="51:42">dc</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:51">fw_name</name></name></expr></argument>, <argument pos:start="51:54" pos:end="51:60"><expr pos:start="51:54" pos:end="51:60"><name pos:start="51:54" pos:end="51:60"><name pos:start="51:54" pos:end="51:55">pc</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:60">pir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:57"><expr pos:start="53:5" pos:end="53:56"><name pos:start="53:5" pos:end="53:10">offset</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:56"><name pos:start="53:14" pos:end="53:28">fdt_add_subnode</name><argument_list pos:start="53:29" pos:end="53:56">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:32">fdt</name></expr></argument>, <argument pos:start="53:35" pos:end="53:45"><expr pos:start="53:35" pos:end="53:45"><name pos:start="53:35" pos:end="53:45">cpus_offset</name></expr></argument>, <argument pos:start="53:48" pos:end="53:55"><expr pos:start="53:48" pos:end="53:55"><name pos:start="53:48" pos:end="53:55">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><call pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:8">_FDT</name><argument_list pos:start="55:9" pos:end="55:16">(<argument pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:15"><name pos:start="55:10" pos:end="55:15">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:20">(<argument pos:start="57:12" pos:end="57:19"><expr pos:start="57:12" pos:end="57:19"><name pos:start="57:12" pos:end="57:19">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:72"><expr pos:start="61:5" pos:end="61:71"><call pos:start="61:5" pos:end="61:71"><name pos:start="61:5" pos:end="61:8">_FDT</name><argument_list pos:start="61:9" pos:end="61:71">(<argument pos:start="61:10" pos:end="61:70"><expr pos:start="61:10" pos:end="61:70"><operator pos:start="61:10" pos:end="61:10">(</operator><call pos:start="61:11" pos:end="61:69"><name pos:start="61:11" pos:end="61:26">fdt_setprop_cell</name><argument_list pos:start="61:27" pos:end="61:69">(<argument pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><name pos:start="61:28" pos:end="61:30">fdt</name></expr></argument>, <argument pos:start="61:33" pos:end="61:38"><expr pos:start="61:33" pos:end="61:38"><name pos:start="61:33" pos:end="61:38">offset</name></expr></argument>, <argument pos:start="61:41" pos:end="61:53"><expr pos:start="61:41" pos:end="61:53"><literal type="string" pos:start="61:41" pos:end="61:53">"ibm,chip-id"</literal></expr></argument>, <argument pos:start="61:56" pos:end="61:68"><expr pos:start="61:56" pos:end="61:68"><name pos:start="61:56" pos:end="61:68"><name pos:start="61:56" pos:end="61:59">chip</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:68">chip_id</name></name></expr></argument>)</argument_list></call><operator pos:start="61:70" pos:end="61:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:58"><expr pos:start="65:5" pos:end="65:57"><call pos:start="65:5" pos:end="65:57"><name pos:start="65:5" pos:end="65:8">_FDT</name><argument_list pos:start="65:9" pos:end="65:57">(<argument pos:start="65:10" pos:end="65:56"><expr pos:start="65:10" pos:end="65:56"><operator pos:start="65:10" pos:end="65:10">(</operator><call pos:start="65:11" pos:end="65:55"><name pos:start="65:11" pos:end="65:26">fdt_setprop_cell</name><argument_list pos:start="65:27" pos:end="65:55">(<argument pos:start="65:28" pos:end="65:30"><expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">fdt</name></expr></argument>, <argument pos:start="65:33" pos:end="65:38"><expr pos:start="65:33" pos:end="65:38"><name pos:start="65:33" pos:end="65:38">offset</name></expr></argument>, <argument pos:start="65:41" pos:end="65:45"><expr pos:start="65:41" pos:end="65:45"><literal type="string" pos:start="65:41" pos:end="65:45">"reg"</literal></expr></argument>, <argument pos:start="65:48" pos:end="65:54"><expr pos:start="65:48" pos:end="65:54"><name pos:start="65:48" pos:end="65:54"><name pos:start="65:48" pos:end="65:49">pc</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:54">pir</name></name></expr></argument>)</argument_list></call><operator pos:start="65:56" pos:end="65:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><call pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:8">_FDT</name><argument_list pos:start="67:9" pos:end="67:61">(<argument pos:start="67:10" pos:end="67:60"><expr pos:start="67:10" pos:end="67:60"><operator pos:start="67:10" pos:end="67:10">(</operator><call pos:start="67:11" pos:end="67:59"><name pos:start="67:11" pos:end="67:26">fdt_setprop_cell</name><argument_list pos:start="67:27" pos:end="67:59">(<argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">fdt</name></expr></argument>, <argument pos:start="67:33" pos:end="67:38"><expr pos:start="67:33" pos:end="67:38"><name pos:start="67:33" pos:end="67:38">offset</name></expr></argument>, <argument pos:start="67:41" pos:end="67:49"><expr pos:start="67:41" pos:end="67:49"><literal type="string" pos:start="67:41" pos:end="67:49">"ibm,pir"</literal></expr></argument>, <argument pos:start="67:52" pos:end="67:58"><expr pos:start="67:52" pos:end="67:58"><name pos:start="67:52" pos:end="67:58"><name pos:start="67:52" pos:end="67:53">pc</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:58">pir</name></name></expr></argument>)</argument_list></call><operator pos:start="67:60" pos:end="67:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:66"><expr pos:start="69:5" pos:end="69:65"><call pos:start="69:5" pos:end="69:65"><name pos:start="69:5" pos:end="69:8">_FDT</name><argument_list pos:start="69:9" pos:end="69:65">(<argument pos:start="69:10" pos:end="69:64"><expr pos:start="69:10" pos:end="69:64"><operator pos:start="69:10" pos:end="69:10">(</operator><call pos:start="69:11" pos:end="69:63"><name pos:start="69:11" pos:end="69:28">fdt_setprop_string</name><argument_list pos:start="69:29" pos:end="69:63">(<argument pos:start="69:30" pos:end="69:32"><expr pos:start="69:30" pos:end="69:32"><name pos:start="69:30" pos:end="69:32">fdt</name></expr></argument>, <argument pos:start="69:35" pos:end="69:40"><expr pos:start="69:35" pos:end="69:40"><name pos:start="69:35" pos:end="69:40">offset</name></expr></argument>, <argument pos:start="69:43" pos:end="69:55"><expr pos:start="69:43" pos:end="69:55"><literal type="string" pos:start="69:43" pos:end="69:55">"device_type"</literal></expr></argument>, <argument pos:start="69:58" pos:end="69:62"><expr pos:start="69:58" pos:end="69:62"><literal type="string" pos:start="69:58" pos:end="69:62">"cpu"</literal></expr></argument>)</argument_list></call><operator pos:start="69:64" pos:end="69:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:76"><expr pos:start="73:5" pos:end="73:75"><call pos:start="73:5" pos:end="73:75"><name pos:start="73:5" pos:end="73:8">_FDT</name><argument_list pos:start="73:9" pos:end="73:75">(<argument pos:start="73:10" pos:end="73:74"><expr pos:start="73:10" pos:end="73:74"><operator pos:start="73:10" pos:end="73:10">(</operator><call pos:start="73:11" pos:end="73:73"><name pos:start="73:11" pos:end="73:26">fdt_setprop_cell</name><argument_list pos:start="73:27" pos:end="73:73">(<argument pos:start="73:28" pos:end="73:30"><expr pos:start="73:28" pos:end="73:30"><name pos:start="73:28" pos:end="73:30">fdt</name></expr></argument>, <argument pos:start="73:33" pos:end="73:38"><expr pos:start="73:33" pos:end="73:38"><name pos:start="73:33" pos:end="73:38">offset</name></expr></argument>, <argument pos:start="73:41" pos:end="73:53"><expr pos:start="73:41" pos:end="73:53"><literal type="string" pos:start="73:41" pos:end="73:53">"cpu-version"</literal></expr></argument>, <argument pos:start="73:56" pos:end="73:72"><expr pos:start="73:56" pos:end="73:72"><name pos:start="73:56" pos:end="73:72"><name pos:start="73:56" pos:end="73:58">env</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:63">spr</name><index pos:start="73:64" pos:end="73:72">[<expr pos:start="73:65" pos:end="73:71"><name pos:start="73:65" pos:end="73:71">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="73:74" pos:end="73:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:53"><expr pos:start="75:5" pos:end="77:52"><call pos:start="75:5" pos:end="77:52"><name pos:start="75:5" pos:end="75:8">_FDT</name><argument_list pos:start="75:9" pos:end="77:52">(<argument pos:start="75:10" pos:end="77:51"><expr pos:start="75:10" pos:end="77:51"><operator pos:start="75:10" pos:end="75:10">(</operator><call pos:start="75:11" pos:end="77:50"><name pos:start="75:11" pos:end="75:26">fdt_setprop_cell</name><argument_list pos:start="75:27" pos:end="77:50">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">fdt</name></expr></argument>, <argument pos:start="75:33" pos:end="75:38"><expr pos:start="75:33" pos:end="75:38"><name pos:start="75:33" pos:end="75:38">offset</name></expr></argument>, <argument pos:start="75:41" pos:end="75:60"><expr pos:start="75:41" pos:end="75:60"><literal type="string" pos:start="75:41" pos:end="75:60">"d-cache-block-size"</literal></expr></argument>,

                            <argument pos:start="77:29" pos:end="77:49"><expr pos:start="77:29" pos:end="77:49"><name pos:start="77:29" pos:end="77:49"><name pos:start="77:29" pos:end="77:31">env</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:49">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="77:51" pos:end="77:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:53"><expr pos:start="79:5" pos:end="81:52"><call pos:start="79:5" pos:end="81:52"><name pos:start="79:5" pos:end="79:8">_FDT</name><argument_list pos:start="79:9" pos:end="81:52">(<argument pos:start="79:10" pos:end="81:51"><expr pos:start="79:10" pos:end="81:51"><operator pos:start="79:10" pos:end="79:10">(</operator><call pos:start="79:11" pos:end="81:50"><name pos:start="79:11" pos:end="79:26">fdt_setprop_cell</name><argument_list pos:start="79:27" pos:end="81:50">(<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><name pos:start="79:28" pos:end="79:30">fdt</name></expr></argument>, <argument pos:start="79:33" pos:end="79:38"><expr pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:38">offset</name></expr></argument>, <argument pos:start="79:41" pos:end="79:59"><expr pos:start="79:41" pos:end="79:59"><literal type="string" pos:start="79:41" pos:end="79:59">"d-cache-line-size"</literal></expr></argument>,

                            <argument pos:start="81:29" pos:end="81:49"><expr pos:start="81:29" pos:end="81:49"><name pos:start="81:29" pos:end="81:49"><name pos:start="81:29" pos:end="81:31">env</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:49">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="81:51" pos:end="81:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="85:53"><expr pos:start="83:5" pos:end="85:52"><call pos:start="83:5" pos:end="85:52"><name pos:start="83:5" pos:end="83:8">_FDT</name><argument_list pos:start="83:9" pos:end="85:52">(<argument pos:start="83:10" pos:end="85:51"><expr pos:start="83:10" pos:end="85:51"><operator pos:start="83:10" pos:end="83:10">(</operator><call pos:start="83:11" pos:end="85:50"><name pos:start="83:11" pos:end="83:26">fdt_setprop_cell</name><argument_list pos:start="83:27" pos:end="85:50">(<argument pos:start="83:28" pos:end="83:30"><expr pos:start="83:28" pos:end="83:30"><name pos:start="83:28" pos:end="83:30">fdt</name></expr></argument>, <argument pos:start="83:33" pos:end="83:38"><expr pos:start="83:33" pos:end="83:38"><name pos:start="83:33" pos:end="83:38">offset</name></expr></argument>, <argument pos:start="83:41" pos:end="83:60"><expr pos:start="83:41" pos:end="83:60"><literal type="string" pos:start="83:41" pos:end="83:60">"i-cache-block-size"</literal></expr></argument>,

                            <argument pos:start="85:29" pos:end="85:49"><expr pos:start="85:29" pos:end="85:49"><name pos:start="85:29" pos:end="85:49"><name pos:start="85:29" pos:end="85:31">env</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:49">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="85:51" pos:end="85:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:53"><expr pos:start="87:5" pos:end="89:52"><call pos:start="87:5" pos:end="89:52"><name pos:start="87:5" pos:end="87:8">_FDT</name><argument_list pos:start="87:9" pos:end="89:52">(<argument pos:start="87:10" pos:end="89:51"><expr pos:start="87:10" pos:end="89:51"><operator pos:start="87:10" pos:end="87:10">(</operator><call pos:start="87:11" pos:end="89:50"><name pos:start="87:11" pos:end="87:26">fdt_setprop_cell</name><argument_list pos:start="87:27" pos:end="89:50">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">fdt</name></expr></argument>, <argument pos:start="87:33" pos:end="87:38"><expr pos:start="87:33" pos:end="87:38"><name pos:start="87:33" pos:end="87:38">offset</name></expr></argument>, <argument pos:start="87:41" pos:end="87:59"><expr pos:start="87:41" pos:end="87:59"><literal type="string" pos:start="87:41" pos:end="87:59">"i-cache-line-size"</literal></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:49"><expr pos:start="89:29" pos:end="89:49"><name pos:start="89:29" pos:end="89:49"><name pos:start="89:29" pos:end="89:31">env</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:49">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="89:51" pos:end="89:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:28">(<expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:11">pcc</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:27">l1_dcache_size</name></name></expr>)</condition> <block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:54">

        <expr_stmt pos:start="95:9" pos:end="97:54"><expr pos:start="95:9" pos:end="97:53"><call pos:start="95:9" pos:end="97:53"><name pos:start="95:9" pos:end="95:12">_FDT</name><argument_list pos:start="95:13" pos:end="97:53">(<argument pos:start="95:14" pos:end="97:52"><expr pos:start="95:14" pos:end="97:52"><operator pos:start="95:14" pos:end="95:14">(</operator><call pos:start="95:15" pos:end="97:51"><name pos:start="95:15" pos:end="95:30">fdt_setprop_cell</name><argument_list pos:start="95:31" pos:end="97:51">(<argument pos:start="95:32" pos:end="95:34"><expr pos:start="95:32" pos:end="95:34"><name pos:start="95:32" pos:end="95:34">fdt</name></expr></argument>, <argument pos:start="95:37" pos:end="95:42"><expr pos:start="95:37" pos:end="95:42"><name pos:start="95:37" pos:end="95:42">offset</name></expr></argument>, <argument pos:start="95:45" pos:end="95:58"><expr pos:start="95:45" pos:end="95:58"><literal type="string" pos:start="95:45" pos:end="95:58">"d-cache-size"</literal></expr></argument>,

                               <argument pos:start="97:32" pos:end="97:50"><expr pos:start="97:32" pos:end="97:50"><name pos:start="97:32" pos:end="97:50"><name pos:start="97:32" pos:end="97:34">pcc</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:50">l1_dcache_size</name></name></expr></argument>)</argument_list></call><operator pos:start="97:52" pos:end="97:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="103:5">else <block pos:start="99:12" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:64">

        <expr_stmt pos:start="101:9" pos:end="101:64"><expr pos:start="101:9" pos:end="101:63"><call pos:start="101:9" pos:end="101:63"><name pos:start="101:9" pos:end="101:20">error_report</name><argument_list pos:start="101:21" pos:end="101:63">(<argument pos:start="101:22" pos:end="101:62"><expr pos:start="101:22" pos:end="101:62"><literal type="string" pos:start="101:22" pos:end="101:62">"Warning: Unknown L1 dcache size for cpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="105:5" pos:end="115:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:28">(<expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:11">pcc</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:27">l1_icache_size</name></name></expr>)</condition> <block pos:start="105:30" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:54">

        <expr_stmt pos:start="107:9" pos:end="109:54"><expr pos:start="107:9" pos:end="109:53"><call pos:start="107:9" pos:end="109:53"><name pos:start="107:9" pos:end="107:12">_FDT</name><argument_list pos:start="107:13" pos:end="109:53">(<argument pos:start="107:14" pos:end="109:52"><expr pos:start="107:14" pos:end="109:52"><operator pos:start="107:14" pos:end="107:14">(</operator><call pos:start="107:15" pos:end="109:51"><name pos:start="107:15" pos:end="107:30">fdt_setprop_cell</name><argument_list pos:start="107:31" pos:end="109:51">(<argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">fdt</name></expr></argument>, <argument pos:start="107:37" pos:end="107:42"><expr pos:start="107:37" pos:end="107:42"><name pos:start="107:37" pos:end="107:42">offset</name></expr></argument>, <argument pos:start="107:45" pos:end="107:58"><expr pos:start="107:45" pos:end="107:58"><literal type="string" pos:start="107:45" pos:end="107:58">"i-cache-size"</literal></expr></argument>,

                               <argument pos:start="109:32" pos:end="109:50"><expr pos:start="109:32" pos:end="109:50"><name pos:start="109:32" pos:end="109:50"><name pos:start="109:32" pos:end="109:34">pcc</name><operator pos:start="109:35" pos:end="109:36">-&gt;</operator><name pos:start="109:37" pos:end="109:50">l1_icache_size</name></name></expr></argument>)</argument_list></call><operator pos:start="109:52" pos:end="109:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="115:5">else <block pos:start="111:12" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:64">

        <expr_stmt pos:start="113:9" pos:end="113:64"><expr pos:start="113:9" pos:end="113:63"><call pos:start="113:9" pos:end="113:63"><name pos:start="113:9" pos:end="113:20">error_report</name><argument_list pos:start="113:21" pos:end="113:63">(<argument pos:start="113:22" pos:end="113:62"><expr pos:start="113:22" pos:end="113:62"><literal type="string" pos:start="113:22" pos:end="113:62">"Warning: Unknown L1 icache size for cpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:72"><expr pos:start="119:5" pos:end="119:71"><call pos:start="119:5" pos:end="119:71"><name pos:start="119:5" pos:end="119:8">_FDT</name><argument_list pos:start="119:9" pos:end="119:71">(<argument pos:start="119:10" pos:end="119:70"><expr pos:start="119:10" pos:end="119:70"><operator pos:start="119:10" pos:end="119:10">(</operator><call pos:start="119:11" pos:end="119:69"><name pos:start="119:11" pos:end="119:26">fdt_setprop_cell</name><argument_list pos:start="119:27" pos:end="119:69">(<argument pos:start="119:28" pos:end="119:30"><expr pos:start="119:28" pos:end="119:30"><name pos:start="119:28" pos:end="119:30">fdt</name></expr></argument>, <argument pos:start="119:33" pos:end="119:38"><expr pos:start="119:33" pos:end="119:38"><name pos:start="119:33" pos:end="119:38">offset</name></expr></argument>, <argument pos:start="119:41" pos:end="119:60"><expr pos:start="119:41" pos:end="119:60"><literal type="string" pos:start="119:41" pos:end="119:60">"timebase-frequency"</literal></expr></argument>, <argument pos:start="119:63" pos:end="119:68"><expr pos:start="119:63" pos:end="119:68"><name pos:start="119:63" pos:end="119:68">tbfreq</name></expr></argument>)</argument_list></call><operator pos:start="119:70" pos:end="119:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:70"><expr pos:start="121:5" pos:end="121:69"><call pos:start="121:5" pos:end="121:69"><name pos:start="121:5" pos:end="121:8">_FDT</name><argument_list pos:start="121:9" pos:end="121:69">(<argument pos:start="121:10" pos:end="121:68"><expr pos:start="121:10" pos:end="121:68"><operator pos:start="121:10" pos:end="121:10">(</operator><call pos:start="121:11" pos:end="121:67"><name pos:start="121:11" pos:end="121:26">fdt_setprop_cell</name><argument_list pos:start="121:27" pos:end="121:67">(<argument pos:start="121:28" pos:end="121:30"><expr pos:start="121:28" pos:end="121:30"><name pos:start="121:28" pos:end="121:30">fdt</name></expr></argument>, <argument pos:start="121:33" pos:end="121:38"><expr pos:start="121:33" pos:end="121:38"><name pos:start="121:33" pos:end="121:38">offset</name></expr></argument>, <argument pos:start="121:41" pos:end="121:57"><expr pos:start="121:41" pos:end="121:57"><literal type="string" pos:start="121:41" pos:end="121:57">"clock-frequency"</literal></expr></argument>, <argument pos:start="121:60" pos:end="121:66"><expr pos:start="121:60" pos:end="121:66"><name pos:start="121:60" pos:end="121:66">cpufreq</name></expr></argument>)</argument_list></call><operator pos:start="121:68" pos:end="121:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:71"><expr pos:start="123:5" pos:end="123:70"><call pos:start="123:5" pos:end="123:70"><name pos:start="123:5" pos:end="123:8">_FDT</name><argument_list pos:start="123:9" pos:end="123:70">(<argument pos:start="123:10" pos:end="123:69"><expr pos:start="123:10" pos:end="123:69"><operator pos:start="123:10" pos:end="123:10">(</operator><call pos:start="123:11" pos:end="123:68"><name pos:start="123:11" pos:end="123:26">fdt_setprop_cell</name><argument_list pos:start="123:27" pos:end="123:68">(<argument pos:start="123:28" pos:end="123:30"><expr pos:start="123:28" pos:end="123:30"><name pos:start="123:28" pos:end="123:30">fdt</name></expr></argument>, <argument pos:start="123:33" pos:end="123:38"><expr pos:start="123:33" pos:end="123:38"><name pos:start="123:33" pos:end="123:38">offset</name></expr></argument>, <argument pos:start="123:41" pos:end="123:54"><expr pos:start="123:41" pos:end="123:54"><literal type="string" pos:start="123:41" pos:end="123:54">"ibm,slb-size"</literal></expr></argument>, <argument pos:start="123:57" pos:end="123:67"><expr pos:start="123:57" pos:end="123:67"><name pos:start="123:57" pos:end="123:67"><name pos:start="123:57" pos:end="123:59">env</name><operator pos:start="123:60" pos:end="123:61">-&gt;</operator><name pos:start="123:62" pos:end="123:67">slb_nr</name></name></expr></argument>)</argument_list></call><operator pos:start="123:69" pos:end="123:69">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:62"><expr pos:start="125:5" pos:end="125:61"><call pos:start="125:5" pos:end="125:61"><name pos:start="125:5" pos:end="125:8">_FDT</name><argument_list pos:start="125:9" pos:end="125:61">(<argument pos:start="125:10" pos:end="125:60"><expr pos:start="125:10" pos:end="125:60"><operator pos:start="125:10" pos:end="125:10">(</operator><call pos:start="125:11" pos:end="125:59"><name pos:start="125:11" pos:end="125:28">fdt_setprop_string</name><argument_list pos:start="125:29" pos:end="125:59">(<argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">fdt</name></expr></argument>, <argument pos:start="125:35" pos:end="125:40"><expr pos:start="125:35" pos:end="125:40"><name pos:start="125:35" pos:end="125:40">offset</name></expr></argument>, <argument pos:start="125:43" pos:end="125:50"><expr pos:start="125:43" pos:end="125:50"><literal type="string" pos:start="125:43" pos:end="125:50">"status"</literal></expr></argument>, <argument pos:start="125:53" pos:end="125:58"><expr pos:start="125:53" pos:end="125:58"><literal type="string" pos:start="125:53" pos:end="125:58">"okay"</literal></expr></argument>)</argument_list></call><operator pos:start="125:60" pos:end="125:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:56"><expr pos:start="127:5" pos:end="127:55"><call pos:start="127:5" pos:end="127:55"><name pos:start="127:5" pos:end="127:8">_FDT</name><argument_list pos:start="127:9" pos:end="127:55">(<argument pos:start="127:10" pos:end="127:54"><expr pos:start="127:10" pos:end="127:54"><operator pos:start="127:10" pos:end="127:10">(</operator><call pos:start="127:11" pos:end="127:53"><name pos:start="127:11" pos:end="127:21">fdt_setprop</name><argument_list pos:start="127:22" pos:end="127:53">(<argument pos:start="127:23" pos:end="127:25"><expr pos:start="127:23" pos:end="127:25"><name pos:start="127:23" pos:end="127:25">fdt</name></expr></argument>, <argument pos:start="127:28" pos:end="127:33"><expr pos:start="127:28" pos:end="127:33"><name pos:start="127:28" pos:end="127:33">offset</name></expr></argument>, <argument pos:start="127:36" pos:end="127:43"><expr pos:start="127:36" pos:end="127:43"><literal type="string" pos:start="127:36" pos:end="127:43">"64-bit"</literal></expr></argument>, <argument pos:start="127:46" pos:end="127:49"><expr pos:start="127:46" pos:end="127:49"><name pos:start="127:46" pos:end="127:49">NULL</name></expr></argument>, <argument pos:start="127:52" pos:end="127:52"><expr pos:start="127:52" pos:end="127:52"><literal type="number" pos:start="127:52" pos:end="127:52">0</literal></expr></argument>)</argument_list></call><operator pos:start="127:54" pos:end="127:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:39">(<expr pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:29"><name pos:start="131:9" pos:end="131:11">env</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:19">spr_cb</name><index pos:start="131:20" pos:end="131:29">[<expr pos:start="131:21" pos:end="131:28"><name pos:start="131:21" pos:end="131:28">SPR_PURR</name></expr>]</index></name><operator pos:start="131:30" pos:end="131:30">.</operator><name pos:start="131:31" pos:end="131:38">oea_read</name></expr>)</condition> <block pos:start="131:41" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:62">

        <expr_stmt pos:start="133:9" pos:end="133:62"><expr pos:start="133:9" pos:end="133:61"><call pos:start="133:9" pos:end="133:61"><name pos:start="133:9" pos:end="133:12">_FDT</name><argument_list pos:start="133:13" pos:end="133:61">(<argument pos:start="133:14" pos:end="133:60"><expr pos:start="133:14" pos:end="133:60"><operator pos:start="133:14" pos:end="133:14">(</operator><call pos:start="133:15" pos:end="133:59"><name pos:start="133:15" pos:end="133:25">fdt_setprop</name><argument_list pos:start="133:26" pos:end="133:59">(<argument pos:start="133:27" pos:end="133:29"><expr pos:start="133:27" pos:end="133:29"><name pos:start="133:27" pos:end="133:29">fdt</name></expr></argument>, <argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><name pos:start="133:32" pos:end="133:37">offset</name></expr></argument>, <argument pos:start="133:40" pos:end="133:49"><expr pos:start="133:40" pos:end="133:49"><literal type="string" pos:start="133:40" pos:end="133:49">"ibm,purr"</literal></expr></argument>, <argument pos:start="133:52" pos:end="133:55"><expr pos:start="133:52" pos:end="133:55"><name pos:start="133:52" pos:end="133:55">NULL</name></expr></argument>, <argument pos:start="133:58" pos:end="133:58"><expr pos:start="133:58" pos:end="133:58"><literal type="number" pos:start="133:58" pos:end="133:58">0</literal></expr></argument>)</argument_list></call><operator pos:start="133:60" pos:end="133:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:43">(<expr pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:11">env</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:22">mmu_model</name></name> <operator pos:start="139:24" pos:end="139:24">&amp;</operator> <name pos:start="139:26" pos:end="139:42">POWERPC_MMU_1TSEG</name></expr>)</condition> <block pos:start="139:45" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:49">

        <expr_stmt pos:start="141:9" pos:end="143:49"><expr pos:start="141:9" pos:end="143:48"><call pos:start="141:9" pos:end="143:48"><name pos:start="141:9" pos:end="141:12">_FDT</name><argument_list pos:start="141:13" pos:end="143:48">(<argument pos:start="141:14" pos:end="143:47"><expr pos:start="141:14" pos:end="143:47"><operator pos:start="141:14" pos:end="141:14">(</operator><call pos:start="141:15" pos:end="143:46"><name pos:start="141:15" pos:end="141:25">fdt_setprop</name><argument_list pos:start="141:26" pos:end="143:46">(<argument pos:start="141:27" pos:end="141:29"><expr pos:start="141:27" pos:end="141:29"><name pos:start="141:27" pos:end="141:29">fdt</name></expr></argument>, <argument pos:start="141:32" pos:end="141:37"><expr pos:start="141:32" pos:end="141:37"><name pos:start="141:32" pos:end="141:37">offset</name></expr></argument>, <argument pos:start="141:40" pos:end="141:68"><expr pos:start="141:40" pos:end="141:68"><literal type="string" pos:start="141:40" pos:end="141:68">"ibm,processor-segment-sizes"</literal></expr></argument>,

                           <argument pos:start="143:28" pos:end="143:31"><expr pos:start="143:28" pos:end="143:31"><name pos:start="143:28" pos:end="143:31">segs</name></expr></argument>, <argument pos:start="143:34" pos:end="143:45"><expr pos:start="143:34" pos:end="143:45"><sizeof pos:start="143:34" pos:end="143:45">sizeof<argument_list pos:start="143:40" pos:end="143:45">(<argument pos:start="143:41" pos:end="143:44"><expr pos:start="143:41" pos:end="143:44"><name pos:start="143:41" pos:end="143:44">segs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="143:47" pos:end="143:47">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="155:44">/* Advertise VMX/VSX (vector extensions) if available

     *   0 / no property == no vector extensions

     *   1               == VMX / Altivec available

     *   2               == VSX available */</comment>

    <if_stmt pos:start="157:5" pos:end="165:5"><if pos:start="157:5" pos:end="165:5">if <condition pos:start="157:8" pos:end="157:39">(<expr pos:start="157:9" pos:end="157:38"><name pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:11">env</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:24">insns_flags</name></name> <operator pos:start="157:26" pos:end="157:26">&amp;</operator> <name pos:start="157:28" pos:end="157:38">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="157:41" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:62">

        <decl_stmt pos:start="159:9" pos:end="159:62"><decl pos:start="159:9" pos:end="159:61"><type pos:start="159:9" pos:end="159:16"><name pos:start="159:9" pos:end="159:16">uint32_t</name></type> <name pos:start="159:18" pos:end="159:20">vmx</name> <init pos:start="159:22" pos:end="159:61">= <expr pos:start="159:24" pos:end="159:61"><ternary pos:start="159:24" pos:end="159:61"><condition pos:start="159:24" pos:end="159:55"><expr pos:start="159:24" pos:end="159:53"><operator pos:start="159:24" pos:end="159:24">(</operator><name pos:start="159:25" pos:end="159:41"><name pos:start="159:25" pos:end="159:27">env</name><operator pos:start="159:28" pos:end="159:29">-&gt;</operator><name pos:start="159:30" pos:end="159:41">insns_flags2</name></name> <operator pos:start="159:43" pos:end="159:43">&amp;</operator> <name pos:start="159:45" pos:end="159:52">PPC2_VSX</name><operator pos:start="159:53" pos:end="159:53">)</operator></expr> ?</condition><then pos:start="159:57" pos:end="159:57"> <expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">2</literal></expr> </then><else pos:start="159:59" pos:end="159:61">: <expr pos:start="159:61" pos:end="159:61"><literal type="number" pos:start="159:61" pos:end="159:61">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:62"><expr pos:start="163:9" pos:end="163:61"><call pos:start="163:9" pos:end="163:61"><name pos:start="163:9" pos:end="163:12">_FDT</name><argument_list pos:start="163:13" pos:end="163:61">(<argument pos:start="163:14" pos:end="163:60"><expr pos:start="163:14" pos:end="163:60"><operator pos:start="163:14" pos:end="163:14">(</operator><call pos:start="163:15" pos:end="163:59"><name pos:start="163:15" pos:end="163:30">fdt_setprop_cell</name><argument_list pos:start="163:31" pos:end="163:59">(<argument pos:start="163:32" pos:end="163:34"><expr pos:start="163:32" pos:end="163:34"><name pos:start="163:32" pos:end="163:34">fdt</name></expr></argument>, <argument pos:start="163:37" pos:end="163:42"><expr pos:start="163:37" pos:end="163:42"><name pos:start="163:37" pos:end="163:42">offset</name></expr></argument>, <argument pos:start="163:45" pos:end="163:53"><expr pos:start="163:45" pos:end="163:53"><literal type="string" pos:start="163:45" pos:end="163:53">"ibm,vmx"</literal></expr></argument>, <argument pos:start="163:56" pos:end="163:58"><expr pos:start="163:56" pos:end="163:58"><name pos:start="163:56" pos:end="163:58">vmx</name></expr></argument>)</argument_list></call><operator pos:start="163:60" pos:end="163:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="169:5" pos:end="173:44">/* Advertise DFP (Decimal Floating Point) if available

     *   0 / no property == no DFP

     *   1               == DFP available */</comment>

    <if_stmt pos:start="175:5" pos:end="179:5"><if pos:start="175:5" pos:end="179:5">if <condition pos:start="175:8" pos:end="175:37">(<expr pos:start="175:9" pos:end="175:36"><name pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:11">env</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:25">insns_flags2</name></name> <operator pos:start="175:27" pos:end="175:27">&amp;</operator> <name pos:start="175:29" pos:end="175:36">PPC2_DFP</name></expr>)</condition> <block pos:start="175:39" pos:end="179:5">{<block_content pos:start="177:9" pos:end="177:60">

        <expr_stmt pos:start="177:9" pos:end="177:60"><expr pos:start="177:9" pos:end="177:59"><call pos:start="177:9" pos:end="177:59"><name pos:start="177:9" pos:end="177:12">_FDT</name><argument_list pos:start="177:13" pos:end="177:59">(<argument pos:start="177:14" pos:end="177:58"><expr pos:start="177:14" pos:end="177:58"><operator pos:start="177:14" pos:end="177:14">(</operator><call pos:start="177:15" pos:end="177:57"><name pos:start="177:15" pos:end="177:30">fdt_setprop_cell</name><argument_list pos:start="177:31" pos:end="177:57">(<argument pos:start="177:32" pos:end="177:34"><expr pos:start="177:32" pos:end="177:34"><name pos:start="177:32" pos:end="177:34">fdt</name></expr></argument>, <argument pos:start="177:37" pos:end="177:42"><expr pos:start="177:37" pos:end="177:42"><name pos:start="177:37" pos:end="177:42">offset</name></expr></argument>, <argument pos:start="177:45" pos:end="177:53"><expr pos:start="177:45" pos:end="177:53"><literal type="string" pos:start="177:45" pos:end="177:53">"ibm,dfp"</literal></expr></argument>, <argument pos:start="177:56" pos:end="177:56"><expr pos:start="177:56" pos:end="177:56"><literal type="number" pos:start="177:56" pos:end="177:56">1</literal></expr></argument>)</argument_list></call><operator pos:start="177:58" pos:end="177:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="185:75"><expr pos:start="183:5" pos:end="185:74"><name pos:start="183:5" pos:end="183:24">page_sizes_prop_size</name> <operator pos:start="183:26" pos:end="183:26">=</operator> <call pos:start="183:28" pos:end="185:74"><name pos:start="183:28" pos:end="183:53">ppc_create_page_sizes_prop</name><argument_list pos:start="183:54" pos:end="185:74">(<argument pos:start="183:55" pos:end="183:57"><expr pos:start="183:55" pos:end="183:57"><name pos:start="183:55" pos:end="183:57">env</name></expr></argument>, <argument pos:start="183:60" pos:end="183:74"><expr pos:start="183:60" pos:end="183:74"><name pos:start="183:60" pos:end="183:74">page_sizes_prop</name></expr></argument>,

                                                  <argument pos:start="185:51" pos:end="185:73"><expr pos:start="185:51" pos:end="185:73"><sizeof pos:start="185:51" pos:end="185:73">sizeof<argument_list pos:start="185:57" pos:end="185:73">(<argument pos:start="185:58" pos:end="185:72"><expr pos:start="185:58" pos:end="185:72"><name pos:start="185:58" pos:end="185:72">page_sizes_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if <condition pos:start="187:8" pos:end="187:29">(<expr pos:start="187:9" pos:end="187:28"><name pos:start="187:9" pos:end="187:28">page_sizes_prop_size</name></expr>)</condition> <block pos:start="187:31" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:68">

        <expr_stmt pos:start="189:9" pos:end="191:68"><expr pos:start="189:9" pos:end="191:67"><call pos:start="189:9" pos:end="191:67"><name pos:start="189:9" pos:end="189:12">_FDT</name><argument_list pos:start="189:13" pos:end="191:67">(<argument pos:start="189:14" pos:end="191:66"><expr pos:start="189:14" pos:end="191:66"><operator pos:start="189:14" pos:end="189:14">(</operator><call pos:start="189:15" pos:end="191:65"><name pos:start="189:15" pos:end="189:25">fdt_setprop</name><argument_list pos:start="189:26" pos:end="191:65">(<argument pos:start="189:27" pos:end="189:29"><expr pos:start="189:27" pos:end="189:29"><name pos:start="189:27" pos:end="189:29">fdt</name></expr></argument>, <argument pos:start="189:32" pos:end="189:37"><expr pos:start="189:32" pos:end="189:37"><name pos:start="189:32" pos:end="189:37">offset</name></expr></argument>, <argument pos:start="189:40" pos:end="189:63"><expr pos:start="189:40" pos:end="189:63"><literal type="string" pos:start="189:40" pos:end="189:63">"ibm,segment-page-sizes"</literal></expr></argument>,

                           <argument pos:start="191:28" pos:end="191:42"><expr pos:start="191:28" pos:end="191:42"><name pos:start="191:28" pos:end="191:42">page_sizes_prop</name></expr></argument>, <argument pos:start="191:45" pos:end="191:64"><expr pos:start="191:45" pos:end="191:64"><name pos:start="191:45" pos:end="191:64">page_sizes_prop_size</name></expr></argument>)</argument_list></call><operator pos:start="191:66" pos:end="191:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="199:59"><expr pos:start="197:5" pos:end="199:58"><call pos:start="197:5" pos:end="199:58"><name pos:start="197:5" pos:end="197:8">_FDT</name><argument_list pos:start="197:9" pos:end="199:58">(<argument pos:start="197:10" pos:end="199:57"><expr pos:start="197:10" pos:end="199:57"><operator pos:start="197:10" pos:end="197:10">(</operator><call pos:start="197:11" pos:end="199:56"><name pos:start="197:11" pos:end="197:21">fdt_setprop</name><argument_list pos:start="197:22" pos:end="199:56">(<argument pos:start="197:23" pos:end="197:25"><expr pos:start="197:23" pos:end="197:25"><name pos:start="197:23" pos:end="197:25">fdt</name></expr></argument>, <argument pos:start="197:28" pos:end="197:33"><expr pos:start="197:28" pos:end="197:33"><name pos:start="197:28" pos:end="197:33">offset</name></expr></argument>, <argument pos:start="197:36" pos:end="197:52"><expr pos:start="197:36" pos:end="197:52"><literal type="string" pos:start="197:36" pos:end="197:52">"ibm,pa-features"</literal></expr></argument>,

                       <argument pos:start="199:24" pos:end="199:34"><expr pos:start="199:24" pos:end="199:34"><name pos:start="199:24" pos:end="199:34">pa_features</name></expr></argument>, <argument pos:start="199:37" pos:end="199:55"><expr pos:start="199:37" pos:end="199:55"><sizeof pos:start="199:37" pos:end="199:55">sizeof<argument_list pos:start="199:43" pos:end="199:55">(<argument pos:start="199:44" pos:end="199:54"><expr pos:start="199:44" pos:end="199:54"><name pos:start="199:44" pos:end="199:54">pa_features</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="199:57" pos:end="199:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="203:5" pos:end="203:44">/* Build interrupt servers properties */</comment>

    <for pos:start="205:5" pos:end="209:5">for <control pos:start="205:9" pos:end="205:37">(<init pos:start="205:10" pos:end="205:15"><expr pos:start="205:10" pos:end="205:14"><name pos:start="205:10" pos:end="205:10">i</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <literal type="number" pos:start="205:14" pos:end="205:14">0</literal></expr>;</init> <condition pos:start="205:17" pos:end="205:32"><expr pos:start="205:17" pos:end="205:31"><name pos:start="205:17" pos:end="205:17">i</name> <operator pos:start="205:19" pos:end="205:19">&lt;</operator> <name pos:start="205:21" pos:end="205:31">smt_threads</name></expr>;</condition> <incr pos:start="205:34" pos:end="205:36"><expr pos:start="205:34" pos:end="205:36"><name pos:start="205:34" pos:end="205:34">i</name><operator pos:start="205:35" pos:end="205:36">++</operator></expr></incr>)</control> <block pos:start="205:39" pos:end="209:5">{<block_content pos:start="207:9" pos:end="207:51">

        <expr_stmt pos:start="207:9" pos:end="207:51"><expr pos:start="207:9" pos:end="207:50"><name pos:start="207:9" pos:end="207:23"><name pos:start="207:9" pos:end="207:20">servers_prop</name><index pos:start="207:21" pos:end="207:23">[<expr pos:start="207:22" pos:end="207:22"><name pos:start="207:22" pos:end="207:22">i</name></expr>]</index></name> <operator pos:start="207:25" pos:end="207:25">=</operator> <call pos:start="207:27" pos:end="207:50"><name pos:start="207:27" pos:end="207:37">cpu_to_be32</name><argument_list pos:start="207:38" pos:end="207:50">(<argument pos:start="207:39" pos:end="207:49"><expr pos:start="207:39" pos:end="207:49"><name pos:start="207:39" pos:end="207:45"><name pos:start="207:39" pos:end="207:40">pc</name><operator pos:start="207:41" pos:end="207:42">-&gt;</operator><name pos:start="207:43" pos:end="207:45">pir</name></name> <operator pos:start="207:47" pos:end="207:47">+</operator> <name pos:start="207:49" pos:end="207:49">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="211:5" pos:end="213:61"><expr pos:start="211:5" pos:end="213:60"><call pos:start="211:5" pos:end="213:60"><name pos:start="211:5" pos:end="211:8">_FDT</name><argument_list pos:start="211:9" pos:end="213:60">(<argument pos:start="211:10" pos:end="213:59"><expr pos:start="211:10" pos:end="213:59"><operator pos:start="211:10" pos:end="211:10">(</operator><call pos:start="211:11" pos:end="213:58"><name pos:start="211:11" pos:end="211:21">fdt_setprop</name><argument_list pos:start="211:22" pos:end="213:58">(<argument pos:start="211:23" pos:end="211:25"><expr pos:start="211:23" pos:end="211:25"><name pos:start="211:23" pos:end="211:25">fdt</name></expr></argument>, <argument pos:start="211:28" pos:end="211:33"><expr pos:start="211:28" pos:end="211:33"><name pos:start="211:28" pos:end="211:33">offset</name></expr></argument>, <argument pos:start="211:36" pos:end="211:63"><expr pos:start="211:36" pos:end="211:63"><literal type="string" pos:start="211:36" pos:end="211:63">"ibm,ppc-interrupt-server#s"</literal></expr></argument>,

                       <argument pos:start="213:24" pos:end="213:35"><expr pos:start="213:24" pos:end="213:35"><name pos:start="213:24" pos:end="213:35">servers_prop</name></expr></argument>, <argument pos:start="213:38" pos:end="213:57"><expr pos:start="213:38" pos:end="213:57"><sizeof pos:start="213:38" pos:end="213:57">sizeof<argument_list pos:start="213:44" pos:end="213:57">(<argument pos:start="213:45" pos:end="213:56"><expr pos:start="213:45" pos:end="213:56"><name pos:start="213:45" pos:end="213:56">servers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="213:59" pos:end="213:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
