<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3978.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">qio_channel_socket_dgram_worker</name><parameter_list pos:start="1:43" pos:end="5:59">(<parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:50">QIOTask</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">task</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:58"><decl pos:start="5:44" pos:end="5:58"><type pos:start="5:44" pos:end="5:58"><name pos:start="5:44" pos:end="5:51">gpointer</name></type> <name pos:start="5:53" pos:end="5:58">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:15">

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:73"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">QIOChannelSocket</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">ioc</name> <init pos:start="9:27" pos:end="9:73">= <expr pos:start="9:29" pos:end="9:73"><call pos:start="9:29" pos:end="9:73"><name pos:start="9:29" pos:end="9:46">QIO_CHANNEL_SOCKET</name><argument_list pos:start="9:47" pos:end="9:73">(<argument pos:start="9:48" pos:end="9:72"><expr pos:start="9:48" pos:end="9:72"><call pos:start="9:48" pos:end="9:72"><name pos:start="9:48" pos:end="9:66">qio_task_get_source</name><argument_list pos:start="9:67" pos:end="9:72">(<argument pos:start="9:68" pos:end="9:71"><expr pos:start="9:68" pos:end="9:71"><name pos:start="9:68" pos:end="9:71">task</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:42">QIOChannelSocketDGramWorkerData</name></name> <modifier pos:start="11:44" pos:end="11:44">*</modifier></type><name pos:start="11:45" pos:end="11:48">data</name> <init pos:start="11:50" pos:end="11:57">= <expr pos:start="11:52" pos:end="11:57"><name pos:start="11:52" pos:end="11:57">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:71">/* socket_dgram() blocks in DNS lookups, so we must use a thread */</comment>

    <expr_stmt pos:start="19:5" pos:end="25:46"><expr pos:start="19:5" pos:end="25:45"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="25:45"><name pos:start="19:11" pos:end="19:39">qio_channel_socket_dgram_sync</name><argument_list pos:start="19:40" pos:end="25:45">(<argument pos:start="19:41" pos:end="19:43"><expr pos:start="19:41" pos:end="19:43"><name pos:start="19:41" pos:end="19:43">ioc</name></expr></argument>,

                                        <argument pos:start="21:41" pos:end="21:55"><expr pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:44">data</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:55">localAddr</name></name></expr></argument>,

                                        <argument pos:start="23:41" pos:end="23:56"><expr pos:start="23:41" pos:end="23:56"><name pos:start="23:41" pos:end="23:56"><name pos:start="23:41" pos:end="23:44">data</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:56">remoteAddr</name></name></expr></argument>,

                                        <argument pos:start="25:41" pos:end="25:44"><expr pos:start="25:41" pos:end="25:44"><name pos:start="25:41" pos:end="25:44">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:16">object_unref</name><argument_list pos:start="29:17" pos:end="29:29">(<argument pos:start="29:18" pos:end="29:28"><expr pos:start="29:18" pos:end="29:28"><call pos:start="29:18" pos:end="29:28"><name pos:start="29:18" pos:end="29:23">OBJECT</name><argument_list pos:start="29:24" pos:end="29:28">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">ioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
