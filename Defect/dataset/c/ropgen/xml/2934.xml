<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2934.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:48">h264_loop_filter_luma_intra_c</name><parameter_list pos:start="1:49" pos:end="1:109">(<parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pix</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:74"><decl pos:start="1:64" pos:end="1:74"><type pos:start="1:64" pos:end="1:74"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:74">xstride</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:87"><decl pos:start="1:77" pos:end="1:87"><type pos:start="1:77" pos:end="1:87"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:87">ystride</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:98"><decl pos:start="1:90" pos:end="1:98"><type pos:start="1:90" pos:end="1:98"><name pos:start="1:90" pos:end="1:92">int</name></type> <name pos:start="1:94" pos:end="1:98">alpha</name></decl></parameter>, <parameter pos:start="1:101" pos:end="1:108"><decl pos:start="1:101" pos:end="1:108"><type pos:start="1:101" pos:end="1:108"><name pos:start="1:101" pos:end="1:103">int</name></type> <name pos:start="1:105" pos:end="1:108">beta</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">d</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="93:5">for<control pos:start="7:8" pos:end="7:29">( <init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">d</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:23"><expr pos:start="7:17" pos:end="7:22"><name pos:start="7:17" pos:end="7:17">d</name> <operator pos:start="7:19" pos:end="7:19">&lt;</operator> <literal type="number" pos:start="7:21" pos:end="7:22">16</literal></expr>;</condition> <incr pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">++</operator></expr></incr> )</control> <block pos:start="7:31" pos:end="93:5">{<block_content pos:start="9:9" pos:end="91:23">

        <decl_stmt pos:start="9:9" pos:end="9:39"><decl pos:start="9:9" pos:end="9:38"><type pos:start="9:9" pos:end="9:17"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:17">int</name></type> <name pos:start="9:19" pos:end="9:20">p2</name> <init pos:start="9:22" pos:end="9:38">= <expr pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:26">pix</name><index pos:start="9:27" pos:end="9:38">[<expr pos:start="9:28" pos:end="9:37"><operator pos:start="9:28" pos:end="9:28">-</operator><literal type="number" pos:start="9:29" pos:end="9:29">3</literal><operator pos:start="9:30" pos:end="9:30">*</operator><name pos:start="9:31" pos:end="9:37">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:39"><decl pos:start="11:9" pos:end="11:38"><type pos:start="11:9" pos:end="11:17"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:17">int</name></type> <name pos:start="11:19" pos:end="11:20">p1</name> <init pos:start="11:22" pos:end="11:38">= <expr pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:26">pix</name><index pos:start="11:27" pos:end="11:38">[<expr pos:start="11:28" pos:end="11:37"><operator pos:start="11:28" pos:end="11:28">-</operator><literal type="number" pos:start="11:29" pos:end="11:29">2</literal><operator pos:start="11:30" pos:end="11:30">*</operator><name pos:start="11:31" pos:end="11:37">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:39"><decl pos:start="13:9" pos:end="13:38"><type pos:start="13:9" pos:end="13:17"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:20">p0</name> <init pos:start="13:22" pos:end="13:38">= <expr pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:26">pix</name><index pos:start="13:27" pos:end="13:38">[<expr pos:start="13:28" pos:end="13:37"><operator pos:start="13:28" pos:end="13:28">-</operator><literal type="number" pos:start="13:29" pos:end="13:29">1</literal><operator pos:start="13:30" pos:end="13:30">*</operator><name pos:start="13:31" pos:end="13:37">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="17:9" pos:end="17:39"><decl pos:start="17:9" pos:end="17:38"><type pos:start="17:9" pos:end="17:17"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:17">int</name></type> <name pos:start="17:19" pos:end="17:20">q0</name> <init pos:start="17:22" pos:end="17:38">= <expr pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:26">pix</name><index pos:start="17:27" pos:end="17:38">[ <expr pos:start="17:29" pos:end="17:37"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal><operator pos:start="17:30" pos:end="17:30">*</operator><name pos:start="17:31" pos:end="17:37">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:39"><decl pos:start="19:9" pos:end="19:38"><type pos:start="19:9" pos:end="19:17"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:17">int</name></type> <name pos:start="19:19" pos:end="19:20">q1</name> <init pos:start="19:22" pos:end="19:38">= <expr pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:26">pix</name><index pos:start="19:27" pos:end="19:38">[ <expr pos:start="19:29" pos:end="19:37"><literal type="number" pos:start="19:29" pos:end="19:29">1</literal><operator pos:start="19:30" pos:end="19:30">*</operator><name pos:start="19:31" pos:end="19:37">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:39"><decl pos:start="21:9" pos:end="21:38"><type pos:start="21:9" pos:end="21:17"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:17">int</name></type> <name pos:start="21:19" pos:end="21:20">q2</name> <init pos:start="21:22" pos:end="21:38">= <expr pos:start="21:24" pos:end="21:38"><name pos:start="21:24" pos:end="21:38"><name pos:start="21:24" pos:end="21:26">pix</name><index pos:start="21:27" pos:end="21:38">[ <expr pos:start="21:29" pos:end="21:37"><literal type="number" pos:start="21:29" pos:end="21:29">2</literal><operator pos:start="21:30" pos:end="21:30">*</operator><name pos:start="21:31" pos:end="21:37">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="89:9"><if pos:start="25:9" pos:end="89:9">if<condition pos:start="25:11" pos:end="29:37">( <expr pos:start="25:13" pos:end="29:35"><call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:17">FFABS</name><argument_list pos:start="25:18" pos:end="25:28">( <argument pos:start="25:20" pos:end="25:26"><expr pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:21">p0</name> <operator pos:start="25:23" pos:end="25:23">-</operator> <name pos:start="25:25" pos:end="25:26">q0</name></expr></argument> )</argument_list></call> <operator pos:start="25:30" pos:end="25:30">&lt;</operator> <name pos:start="25:32" pos:end="25:36">alpha</name> <operator pos:start="25:38" pos:end="25:39">&amp;&amp;</operator>

            <call pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:17">FFABS</name><argument_list pos:start="27:18" pos:end="27:28">( <argument pos:start="27:20" pos:end="27:26"><expr pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:21">p1</name> <operator pos:start="27:23" pos:end="27:23">-</operator> <name pos:start="27:25" pos:end="27:26">p0</name></expr></argument> )</argument_list></call> <operator pos:start="27:30" pos:end="27:30">&lt;</operator> <name pos:start="27:32" pos:end="27:35">beta</name> <operator pos:start="27:37" pos:end="27:38">&amp;&amp;</operator>

            <call pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:17">FFABS</name><argument_list pos:start="29:18" pos:end="29:28">( <argument pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:21">q1</name> <operator pos:start="29:23" pos:end="29:23">-</operator> <name pos:start="29:25" pos:end="29:26">q0</name></expr></argument> )</argument_list></call> <operator pos:start="29:30" pos:end="29:30">&lt;</operator> <name pos:start="29:32" pos:end="29:35">beta</name></expr> )</condition> <block pos:start="29:39" pos:end="89:9">{<block_content pos:start="33:13" pos:end="87:13">



            <if_stmt pos:start="33:13" pos:end="87:13"><if pos:start="33:13" pos:end="79:13">if<condition pos:start="33:15" pos:end="33:56">(<expr pos:start="33:16" pos:end="33:55"><call pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:20">FFABS</name><argument_list pos:start="33:21" pos:end="33:31">( <argument pos:start="33:23" pos:end="33:29"><expr pos:start="33:23" pos:end="33:29"><name pos:start="33:23" pos:end="33:24">p0</name> <operator pos:start="33:26" pos:end="33:26">-</operator> <name pos:start="33:28" pos:end="33:29">q0</name></expr></argument> )</argument_list></call> <operator pos:start="33:33" pos:end="33:33">&lt;</operator> <operator pos:start="33:35" pos:end="33:35">(</operator><operator pos:start="33:36" pos:end="33:36">(</operator> <name pos:start="33:38" pos:end="33:42">alpha</name> <operator pos:start="33:44" pos:end="33:45">&gt;&gt;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">2</literal> <operator pos:start="33:49" pos:end="33:49">)</operator> <operator pos:start="33:51" pos:end="33:51">+</operator> <literal type="number" pos:start="33:53" pos:end="33:53">2</literal> <operator pos:start="33:55" pos:end="33:55">)</operator></expr>)</condition><block pos:start="33:57" pos:end="79:13">{<block_content pos:start="35:17" pos:end="77:17">

                <if_stmt pos:start="35:17" pos:end="55:17"><if pos:start="35:17" pos:end="49:17">if<condition pos:start="35:19" pos:end="35:44">( <expr pos:start="35:21" pos:end="35:43"><call pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:25">FFABS</name><argument_list pos:start="35:26" pos:end="35:36">( <argument pos:start="35:28" pos:end="35:34"><expr pos:start="35:28" pos:end="35:34"><name pos:start="35:28" pos:end="35:29">p2</name> <operator pos:start="35:31" pos:end="35:31">-</operator> <name pos:start="35:33" pos:end="35:34">p0</name></expr></argument> )</argument_list></call> <operator pos:start="35:38" pos:end="35:38">&lt;</operator> <name pos:start="35:40" pos:end="35:43">beta</name></expr>)</condition>

                <block pos:start="37:17" pos:end="49:17">{<block_content pos:start="39:21" pos:end="47:78">

                    <decl_stmt pos:start="39:21" pos:end="39:51"><decl pos:start="39:21" pos:end="39:50"><type pos:start="39:21" pos:end="39:29"><specifier pos:start="39:21" pos:end="39:25">const</specifier> <name pos:start="39:27" pos:end="39:29">int</name></type> <name pos:start="39:31" pos:end="39:32">p3</name> <init pos:start="39:34" pos:end="39:50">= <expr pos:start="39:36" pos:end="39:50"><name pos:start="39:36" pos:end="39:50"><name pos:start="39:36" pos:end="39:38">pix</name><index pos:start="39:39" pos:end="39:50">[<expr pos:start="39:40" pos:end="39:49"><operator pos:start="39:40" pos:end="39:40">-</operator><literal type="number" pos:start="39:41" pos:end="39:41">4</literal><operator pos:start="39:42" pos:end="39:42">*</operator><name pos:start="39:43" pos:end="39:49">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <comment type="block" pos:start="41:21" pos:end="41:39">/* p0', p1', p2' */</comment>

                    <expr_stmt pos:start="43:21" pos:end="43:80"><expr pos:start="43:21" pos:end="43:79"><name pos:start="43:21" pos:end="43:35"><name pos:start="43:21" pos:end="43:23">pix</name><index pos:start="43:24" pos:end="43:35">[<expr pos:start="43:25" pos:end="43:34"><operator pos:start="43:25" pos:end="43:25">-</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal><operator pos:start="43:27" pos:end="43:27">*</operator><name pos:start="43:28" pos:end="43:34">xstride</name></expr>]</index></name> <operator pos:start="43:37" pos:end="43:37">=</operator> <operator pos:start="43:39" pos:end="43:39">(</operator> <name pos:start="43:41" pos:end="43:42">p2</name> <operator pos:start="43:44" pos:end="43:44">+</operator> <literal type="number" pos:start="43:46" pos:end="43:46">2</literal><operator pos:start="43:47" pos:end="43:47">*</operator><name pos:start="43:48" pos:end="43:49">p1</name> <operator pos:start="43:51" pos:end="43:51">+</operator> <literal type="number" pos:start="43:53" pos:end="43:53">2</literal><operator pos:start="43:54" pos:end="43:54">*</operator><name pos:start="43:55" pos:end="43:56">p0</name> <operator pos:start="43:58" pos:end="43:58">+</operator> <literal type="number" pos:start="43:60" pos:end="43:60">2</literal><operator pos:start="43:61" pos:end="43:61">*</operator><name pos:start="43:62" pos:end="43:63">q0</name> <operator pos:start="43:65" pos:end="43:65">+</operator> <name pos:start="43:67" pos:end="43:68">q1</name> <operator pos:start="43:70" pos:end="43:70">+</operator> <literal type="number" pos:start="43:72" pos:end="43:72">4</literal> <operator pos:start="43:74" pos:end="43:74">)</operator> <operator pos:start="43:76" pos:end="43:77">&gt;&gt;</operator> <literal type="number" pos:start="43:79" pos:end="43:79">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:69"><expr pos:start="45:21" pos:end="45:68"><name pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:23">pix</name><index pos:start="45:24" pos:end="45:35">[<expr pos:start="45:25" pos:end="45:34"><operator pos:start="45:25" pos:end="45:25">-</operator><literal type="number" pos:start="45:26" pos:end="45:26">2</literal><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:34">xstride</name></expr>]</index></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <operator pos:start="45:39" pos:end="45:39">(</operator> <name pos:start="45:41" pos:end="45:42">p2</name> <operator pos:start="45:44" pos:end="45:44">+</operator> <name pos:start="45:46" pos:end="45:47">p1</name> <operator pos:start="45:49" pos:end="45:49">+</operator> <name pos:start="45:51" pos:end="45:52">p0</name> <operator pos:start="45:54" pos:end="45:54">+</operator> <name pos:start="45:56" pos:end="45:57">q0</name> <operator pos:start="45:59" pos:end="45:59">+</operator> <literal type="number" pos:start="45:61" pos:end="45:61">2</literal> <operator pos:start="45:63" pos:end="45:63">)</operator> <operator pos:start="45:65" pos:end="45:66">&gt;&gt;</operator> <literal type="number" pos:start="45:68" pos:end="45:68">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:78"><expr pos:start="47:21" pos:end="47:77"><name pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:23">pix</name><index pos:start="47:24" pos:end="47:35">[<expr pos:start="47:25" pos:end="47:34"><operator pos:start="47:25" pos:end="47:25">-</operator><literal type="number" pos:start="47:26" pos:end="47:26">3</literal><operator pos:start="47:27" pos:end="47:27">*</operator><name pos:start="47:28" pos:end="47:34">xstride</name></expr>]</index></name> <operator pos:start="47:37" pos:end="47:37">=</operator> <operator pos:start="47:39" pos:end="47:39">(</operator> <literal type="number" pos:start="47:41" pos:end="47:41">2</literal><operator pos:start="47:42" pos:end="47:42">*</operator><name pos:start="47:43" pos:end="47:44">p3</name> <operator pos:start="47:46" pos:end="47:46">+</operator> <literal type="number" pos:start="47:48" pos:end="47:48">3</literal><operator pos:start="47:49" pos:end="47:49">*</operator><name pos:start="47:50" pos:end="47:51">p2</name> <operator pos:start="47:53" pos:end="47:53">+</operator> <name pos:start="47:55" pos:end="47:56">p1</name> <operator pos:start="47:58" pos:end="47:58">+</operator> <name pos:start="47:60" pos:end="47:61">p0</name> <operator pos:start="47:63" pos:end="47:63">+</operator> <name pos:start="47:65" pos:end="47:66">q0</name> <operator pos:start="47:68" pos:end="47:68">+</operator> <literal type="number" pos:start="47:70" pos:end="47:70">4</literal> <operator pos:start="47:72" pos:end="47:72">)</operator> <operator pos:start="47:74" pos:end="47:75">&gt;&gt;</operator> <literal type="number" pos:start="47:77" pos:end="47:77">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="49:19" pos:end="55:17">else <block pos:start="49:24" pos:end="55:17">{<block_content pos:start="53:21" pos:end="53:66">

                    <comment type="block" pos:start="51:21" pos:end="51:29">/* p0' */</comment>

                    <expr_stmt pos:start="53:21" pos:end="53:66"><expr pos:start="53:21" pos:end="53:65"><name pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:23">pix</name><index pos:start="53:24" pos:end="53:35">[<expr pos:start="53:25" pos:end="53:34"><operator pos:start="53:25" pos:end="53:25">-</operator><literal type="number" pos:start="53:26" pos:end="53:26">1</literal><operator pos:start="53:27" pos:end="53:27">*</operator><name pos:start="53:28" pos:end="53:34">xstride</name></expr>]</index></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <operator pos:start="53:39" pos:end="53:39">(</operator> <literal type="number" pos:start="53:41" pos:end="53:41">2</literal><operator pos:start="53:42" pos:end="53:42">*</operator><name pos:start="53:43" pos:end="53:44">p1</name> <operator pos:start="53:46" pos:end="53:46">+</operator> <name pos:start="53:48" pos:end="53:49">p0</name> <operator pos:start="53:51" pos:end="53:51">+</operator> <name pos:start="53:53" pos:end="53:54">q1</name> <operator pos:start="53:56" pos:end="53:56">+</operator> <literal type="number" pos:start="53:58" pos:end="53:58">2</literal> <operator pos:start="53:60" pos:end="53:60">)</operator> <operator pos:start="53:62" pos:end="53:63">&gt;&gt;</operator> <literal type="number" pos:start="53:65" pos:end="53:65">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="57:17" pos:end="77:17"><if pos:start="57:17" pos:end="71:17">if<condition pos:start="57:19" pos:end="57:44">( <expr pos:start="57:21" pos:end="57:43"><call pos:start="57:21" pos:end="57:36"><name pos:start="57:21" pos:end="57:25">FFABS</name><argument_list pos:start="57:26" pos:end="57:36">( <argument pos:start="57:28" pos:end="57:34"><expr pos:start="57:28" pos:end="57:34"><name pos:start="57:28" pos:end="57:29">q2</name> <operator pos:start="57:31" pos:end="57:31">-</operator> <name pos:start="57:33" pos:end="57:34">q0</name></expr></argument> )</argument_list></call> <operator pos:start="57:38" pos:end="57:38">&lt;</operator> <name pos:start="57:40" pos:end="57:43">beta</name></expr>)</condition>

                <block pos:start="59:17" pos:end="71:17">{<block_content pos:start="61:21" pos:end="69:77">

                    <decl_stmt pos:start="61:21" pos:end="61:50"><decl pos:start="61:21" pos:end="61:49"><type pos:start="61:21" pos:end="61:29"><specifier pos:start="61:21" pos:end="61:25">const</specifier> <name pos:start="61:27" pos:end="61:29">int</name></type> <name pos:start="61:31" pos:end="61:32">q3</name> <init pos:start="61:34" pos:end="61:49">= <expr pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:38">pix</name><index pos:start="61:39" pos:end="61:49">[<expr pos:start="61:40" pos:end="61:48"><literal type="number" pos:start="61:40" pos:end="61:40">3</literal><operator pos:start="61:41" pos:end="61:41">*</operator><name pos:start="61:42" pos:end="61:48">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <comment type="block" pos:start="63:21" pos:end="63:39">/* q0', q1', q2' */</comment>

                    <expr_stmt pos:start="65:21" pos:end="65:79"><expr pos:start="65:21" pos:end="65:78"><name pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:23">pix</name><index pos:start="65:24" pos:end="65:34">[<expr pos:start="65:25" pos:end="65:33"><literal type="number" pos:start="65:25" pos:end="65:25">0</literal><operator pos:start="65:26" pos:end="65:26">*</operator><name pos:start="65:27" pos:end="65:33">xstride</name></expr>]</index></name> <operator pos:start="65:36" pos:end="65:36">=</operator> <operator pos:start="65:38" pos:end="65:38">(</operator> <name pos:start="65:40" pos:end="65:41">p1</name> <operator pos:start="65:43" pos:end="65:43">+</operator> <literal type="number" pos:start="65:45" pos:end="65:45">2</literal><operator pos:start="65:46" pos:end="65:46">*</operator><name pos:start="65:47" pos:end="65:48">p0</name> <operator pos:start="65:50" pos:end="65:50">+</operator> <literal type="number" pos:start="65:52" pos:end="65:52">2</literal><operator pos:start="65:53" pos:end="65:53">*</operator><name pos:start="65:54" pos:end="65:55">q0</name> <operator pos:start="65:57" pos:end="65:57">+</operator> <literal type="number" pos:start="65:59" pos:end="65:59">2</literal><operator pos:start="65:60" pos:end="65:60">*</operator><name pos:start="65:61" pos:end="65:62">q1</name> <operator pos:start="65:64" pos:end="65:64">+</operator> <name pos:start="65:66" pos:end="65:67">q2</name> <operator pos:start="65:69" pos:end="65:69">+</operator> <literal type="number" pos:start="65:71" pos:end="65:71">4</literal> <operator pos:start="65:73" pos:end="65:73">)</operator> <operator pos:start="65:75" pos:end="65:76">&gt;&gt;</operator> <literal type="number" pos:start="65:78" pos:end="65:78">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:68"><expr pos:start="67:21" pos:end="67:67"><name pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:23">pix</name><index pos:start="67:24" pos:end="67:34">[<expr pos:start="67:25" pos:end="67:33"><literal type="number" pos:start="67:25" pos:end="67:25">1</literal><operator pos:start="67:26" pos:end="67:26">*</operator><name pos:start="67:27" pos:end="67:33">xstride</name></expr>]</index></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <operator pos:start="67:38" pos:end="67:38">(</operator> <name pos:start="67:40" pos:end="67:41">p0</name> <operator pos:start="67:43" pos:end="67:43">+</operator> <name pos:start="67:45" pos:end="67:46">q0</name> <operator pos:start="67:48" pos:end="67:48">+</operator> <name pos:start="67:50" pos:end="67:51">q1</name> <operator pos:start="67:53" pos:end="67:53">+</operator> <name pos:start="67:55" pos:end="67:56">q2</name> <operator pos:start="67:58" pos:end="67:58">+</operator> <literal type="number" pos:start="67:60" pos:end="67:60">2</literal> <operator pos:start="67:62" pos:end="67:62">)</operator> <operator pos:start="67:64" pos:end="67:65">&gt;&gt;</operator> <literal type="number" pos:start="67:67" pos:end="67:67">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:77"><expr pos:start="69:21" pos:end="69:76"><name pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:23">pix</name><index pos:start="69:24" pos:end="69:34">[<expr pos:start="69:25" pos:end="69:33"><literal type="number" pos:start="69:25" pos:end="69:25">2</literal><operator pos:start="69:26" pos:end="69:26">*</operator><name pos:start="69:27" pos:end="69:33">xstride</name></expr>]</index></name> <operator pos:start="69:36" pos:end="69:36">=</operator> <operator pos:start="69:38" pos:end="69:38">(</operator> <literal type="number" pos:start="69:40" pos:end="69:40">2</literal><operator pos:start="69:41" pos:end="69:41">*</operator><name pos:start="69:42" pos:end="69:43">q3</name> <operator pos:start="69:45" pos:end="69:45">+</operator> <literal type="number" pos:start="69:47" pos:end="69:47">3</literal><operator pos:start="69:48" pos:end="69:48">*</operator><name pos:start="69:49" pos:end="69:50">q2</name> <operator pos:start="69:52" pos:end="69:52">+</operator> <name pos:start="69:54" pos:end="69:55">q1</name> <operator pos:start="69:57" pos:end="69:57">+</operator> <name pos:start="69:59" pos:end="69:60">q0</name> <operator pos:start="69:62" pos:end="69:62">+</operator> <name pos:start="69:64" pos:end="69:65">p0</name> <operator pos:start="69:67" pos:end="69:67">+</operator> <literal type="number" pos:start="69:69" pos:end="69:69">4</literal> <operator pos:start="69:71" pos:end="69:71">)</operator> <operator pos:start="69:73" pos:end="69:74">&gt;&gt;</operator> <literal type="number" pos:start="69:76" pos:end="69:76">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="77:17">else <block pos:start="71:24" pos:end="77:17">{<block_content pos:start="75:21" pos:end="75:65">

                    <comment type="block" pos:start="73:21" pos:end="73:29">/* q0' */</comment>

                    <expr_stmt pos:start="75:21" pos:end="75:65"><expr pos:start="75:21" pos:end="75:64"><name pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:23">pix</name><index pos:start="75:24" pos:end="75:34">[<expr pos:start="75:25" pos:end="75:33"><literal type="number" pos:start="75:25" pos:end="75:25">0</literal><operator pos:start="75:26" pos:end="75:26">*</operator><name pos:start="75:27" pos:end="75:33">xstride</name></expr>]</index></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <operator pos:start="75:38" pos:end="75:38">(</operator> <literal type="number" pos:start="75:40" pos:end="75:40">2</literal><operator pos:start="75:41" pos:end="75:41">*</operator><name pos:start="75:42" pos:end="75:43">q1</name> <operator pos:start="75:45" pos:end="75:45">+</operator> <name pos:start="75:47" pos:end="75:48">q0</name> <operator pos:start="75:50" pos:end="75:50">+</operator> <name pos:start="75:52" pos:end="75:53">p1</name> <operator pos:start="75:55" pos:end="75:55">+</operator> <literal type="number" pos:start="75:57" pos:end="75:57">2</literal> <operator pos:start="75:59" pos:end="75:59">)</operator> <operator pos:start="75:61" pos:end="75:62">&gt;&gt;</operator> <literal type="number" pos:start="75:64" pos:end="75:64">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if><else pos:start="79:14" pos:end="87:13">else<block pos:start="79:18" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:62">

                <comment type="block" pos:start="81:17" pos:end="81:30">/* p0', q0' */</comment>

                <expr_stmt pos:start="83:17" pos:end="83:62"><expr pos:start="83:17" pos:end="83:61"><name pos:start="83:17" pos:end="83:31"><name pos:start="83:17" pos:end="83:19">pix</name><index pos:start="83:20" pos:end="83:31">[<expr pos:start="83:21" pos:end="83:30"><operator pos:start="83:21" pos:end="83:21">-</operator><literal type="number" pos:start="83:22" pos:end="83:22">1</literal><operator pos:start="83:23" pos:end="83:23">*</operator><name pos:start="83:24" pos:end="83:30">xstride</name></expr>]</index></name> <operator pos:start="83:33" pos:end="83:33">=</operator> <operator pos:start="83:35" pos:end="83:35">(</operator> <literal type="number" pos:start="83:37" pos:end="83:37">2</literal><operator pos:start="83:38" pos:end="83:38">*</operator><name pos:start="83:39" pos:end="83:40">p1</name> <operator pos:start="83:42" pos:end="83:42">+</operator> <name pos:start="83:44" pos:end="83:45">p0</name> <operator pos:start="83:47" pos:end="83:47">+</operator> <name pos:start="83:49" pos:end="83:50">q1</name> <operator pos:start="83:52" pos:end="83:52">+</operator> <literal type="number" pos:start="83:54" pos:end="83:54">2</literal> <operator pos:start="83:56" pos:end="83:56">)</operator> <operator pos:start="83:58" pos:end="83:59">&gt;&gt;</operator> <literal type="number" pos:start="83:61" pos:end="83:61">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:62"><expr pos:start="85:17" pos:end="85:61"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:19">pix</name><index pos:start="85:20" pos:end="85:31">[ <expr pos:start="85:22" pos:end="85:30"><literal type="number" pos:start="85:22" pos:end="85:22">0</literal><operator pos:start="85:23" pos:end="85:23">*</operator><name pos:start="85:24" pos:end="85:30">xstride</name></expr>]</index></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <operator pos:start="85:35" pos:end="85:35">(</operator> <literal type="number" pos:start="85:37" pos:end="85:37">2</literal><operator pos:start="85:38" pos:end="85:38">*</operator><name pos:start="85:39" pos:end="85:40">q1</name> <operator pos:start="85:42" pos:end="85:42">+</operator> <name pos:start="85:44" pos:end="85:45">q0</name> <operator pos:start="85:47" pos:end="85:47">+</operator> <name pos:start="85:49" pos:end="85:50">p1</name> <operator pos:start="85:52" pos:end="85:52">+</operator> <literal type="number" pos:start="85:54" pos:end="85:54">2</literal> <operator pos:start="85:56" pos:end="85:56">)</operator> <operator pos:start="85:58" pos:end="85:59">&gt;&gt;</operator> <literal type="number" pos:start="85:61" pos:end="85:61">2</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:11">pix</name> <operator pos:start="91:13" pos:end="91:14">+=</operator> <name pos:start="91:16" pos:end="91:22">ystride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
