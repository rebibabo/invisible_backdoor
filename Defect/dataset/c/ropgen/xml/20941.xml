<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20941.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">CPUX86State</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:30">cpu_x86_init_user</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:43"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:52">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:21">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:16">error</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:50"><expr pos:start="11:5" pos:end="11:49"><name pos:start="11:5" pos:end="11:7">cpu</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:49"><name pos:start="11:11" pos:end="11:24">cpu_x86_create</name><argument_list pos:start="11:25" pos:end="11:49">(<argument pos:start="11:26" pos:end="11:34"><expr pos:start="11:26" pos:end="11:34"><name pos:start="11:26" pos:end="11:34">cpu_model</name></expr></argument>, <argument pos:start="11:37" pos:end="11:40"><expr pos:start="11:37" pos:end="11:40"><name pos:start="11:37" pos:end="11:40">NULL</name></expr></argument>, <argument pos:start="11:43" pos:end="11:48"><expr pos:start="11:43" pos:end="11:48"><operator pos:start="11:43" pos:end="11:43">&amp;</operator><name pos:start="11:44" pos:end="11:48">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:13">error</name></expr>)</condition> <block pos:start="13:16" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <goto pos:start="15:9" pos:end="15:17">goto <name pos:start="15:14" pos:end="15:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><call pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:28">object_property_set_bool</name><argument_list pos:start="21:29" pos:end="21:67">(<argument pos:start="21:30" pos:end="21:40"><expr pos:start="21:30" pos:end="21:40"><call pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:35">OBJECT</name><argument_list pos:start="21:36" pos:end="21:40">(<argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">true</name></expr></argument>, <argument pos:start="21:49" pos:end="21:58"><expr pos:start="21:49" pos:end="21:58"><literal type="string" pos:start="21:49" pos:end="21:58">"realized"</literal></expr></argument>, <argument pos:start="21:61" pos:end="21:66"><expr pos:start="21:61" pos:end="21:66"><operator pos:start="21:61" pos:end="21:61">&amp;</operator><name pos:start="21:62" pos:end="21:66">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="25:1" pos:end="25:4"><name pos:start="25:1" pos:end="25:3">out</name>:</label>

    <if_stmt pos:start="27:5" pos:end="41:5"><if pos:start="27:5" pos:end="41:5">if <condition pos:start="27:8" pos:end="27:14">(<expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:13">error</name></expr>)</condition> <block pos:start="27:16" pos:end="41:5">{<block_content pos:start="29:9" pos:end="39:20">

        <expr_stmt pos:start="29:9" pos:end="29:52"><expr pos:start="29:9" pos:end="29:51"><call pos:start="29:9" pos:end="29:51"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="29:51">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><literal type="string" pos:start="29:22" pos:end="29:25">"%s"</literal></expr></argument>, <argument pos:start="29:28" pos:end="29:50"><expr pos:start="29:28" pos:end="29:50"><call pos:start="29:28" pos:end="29:50"><name pos:start="29:28" pos:end="29:43">error_get_pretty</name><argument_list pos:start="29:44" pos:end="29:50">(<argument pos:start="29:45" pos:end="29:49"><expr pos:start="29:45" pos:end="29:49"><name pos:start="29:45" pos:end="29:49">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><call pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:18">error_free</name><argument_list pos:start="31:19" pos:end="31:25">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:15">cpu</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <name pos:start="33:20" pos:end="33:23">NULL</name></expr>)</condition> <block pos:start="33:26" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:38">

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><call pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:24">object_unref</name><argument_list pos:start="35:25" pos:end="35:37">(<argument pos:start="35:26" pos:end="35:36"><expr pos:start="35:26" pos:end="35:36"><call pos:start="35:26" pos:end="35:36"><name pos:start="35:26" pos:end="35:31">OBJECT</name><argument_list pos:start="35:32" pos:end="35:36">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:21">return <expr pos:start="43:12" pos:end="43:20"><operator pos:start="43:12" pos:end="43:12">&amp;</operator><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:15">cpu</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:20">env</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
