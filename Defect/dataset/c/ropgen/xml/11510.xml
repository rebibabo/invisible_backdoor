<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11510.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">vc1_decode_i_blocks_adv</name><parameter_list pos:start="1:36" pos:end="1:50">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:46">VC1Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="247:1">{<block_content pos:start="5:5" pos:end="245:99">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cbp</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">coded_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">mb_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mquant</name> <init pos:start="15:16" pos:end="15:22">= <expr pos:start="15:18" pos:end="15:22"><name pos:start="15:18" pos:end="15:22"><name pos:start="15:18" pos:end="15:18">v</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:22">pq</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">mqdiff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">GetBitContext</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:21">gb</name> <init pos:start="19:23" pos:end="19:30">= <expr pos:start="19:25" pos:end="19:30"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:30"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:30">gb</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:57">/* select codingmode used for VLC tables selection */</comment>

    <switch pos:start="25:5" pos:end="45:5">switch<condition pos:start="25:11" pos:end="25:31">(<expr pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:12">v</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:30">y_ac_table_index</name></name></expr>)</condition><block pos:start="25:32" pos:end="45:5">{<block_content pos:start="27:5" pos:end="43:14">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">0</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:81"><expr pos:start="29:9" pos:end="29:80"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">v</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">codingset</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <ternary pos:start="29:24" pos:end="29:80"><condition pos:start="29:24" pos:end="29:42"><expr pos:start="29:24" pos:end="29:40"><operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:25">v</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:34">pqindex</name></name> <operator pos:start="29:36" pos:end="29:37">&lt;=</operator> <literal type="number" pos:start="29:39" pos:end="29:39">8</literal><operator pos:start="29:40" pos:end="29:40">)</operator></expr> ?</condition><then pos:start="29:44" pos:end="29:61"> <expr pos:start="29:44" pos:end="29:61"><name pos:start="29:44" pos:end="29:61">CS_HIGH_RATE_INTRA</name></expr> </then><else pos:start="29:63" pos:end="29:80">: <expr pos:start="29:65" pos:end="29:80"><name pos:start="29:65" pos:end="29:80">CS_LOW_MOT_INTRA</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">1</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">v</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:20">codingset</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:40">CS_HIGH_MOT_INTRA</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">v</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">codingset</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:40">CS_MID_RATE_INTRA</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>



    <switch pos:start="49:5" pos:end="69:5">switch<condition pos:start="49:11" pos:end="49:31">(<expr pos:start="49:12" pos:end="49:30"><name pos:start="49:12" pos:end="49:30"><name pos:start="49:12" pos:end="49:12">v</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:30">c_ac_table_index</name></name></expr>)</condition><block pos:start="49:32" pos:end="69:5">{<block_content pos:start="51:5" pos:end="67:14">

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">0</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:82"><expr pos:start="53:9" pos:end="53:81"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">v</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">codingset2</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <ternary pos:start="53:25" pos:end="53:81"><condition pos:start="53:25" pos:end="53:43"><expr pos:start="53:25" pos:end="53:41"><operator pos:start="53:25" pos:end="53:25">(</operator><name pos:start="53:26" pos:end="53:35"><name pos:start="53:26" pos:end="53:26">v</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:35">pqindex</name></name> <operator pos:start="53:37" pos:end="53:38">&lt;=</operator> <literal type="number" pos:start="53:40" pos:end="53:40">8</literal><operator pos:start="53:41" pos:end="53:41">)</operator></expr> ?</condition><then pos:start="53:45" pos:end="53:62"> <expr pos:start="53:45" pos:end="53:62"><name pos:start="53:45" pos:end="53:62">CS_HIGH_RATE_INTER</name></expr> </then><else pos:start="53:64" pos:end="53:81">: <expr pos:start="53:66" pos:end="53:81"><name pos:start="53:66" pos:end="53:81">CS_LOW_MOT_INTER</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">1</literal></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:42"><expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:9">v</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">codingset2</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:41">CS_HIGH_MOT_INTER</name></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">2</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:42"><expr pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">v</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">codingset2</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:41">CS_MID_RATE_INTER</name></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    </block_content>}</block></switch>



    <comment type="line" pos:start="73:5" pos:end="73:21">//do frame decode</comment>

    <expr_stmt pos:start="75:5" pos:end="75:26"><expr pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:11"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:11">mb_x</name></name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:21"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">mb_y</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:20"><expr pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:15">mb_intra</name></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <literal type="number" pos:start="77:19" pos:end="77:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:23">first_slice_line</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <literal type="number" pos:start="79:27" pos:end="79:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:11"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:11">mb_y</name></name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:27"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:27">start_mb_y</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="93:5"><if pos:start="83:5" pos:end="93:5">if <condition pos:start="83:8" pos:end="83:22">(<expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">start_mb_y</name></name></expr>)</condition> <block pos:start="83:24" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:55">

        <expr_stmt pos:start="85:9" pos:end="85:20"><expr pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:15">mb_x</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:31"><expr pos:start="87:9" pos:end="87:30"><call pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:27">ff_init_block_index</name><argument_list pos:start="87:28" pos:end="87:30">(<argument pos:start="87:29" pos:end="87:29"><expr pos:start="87:29" pos:end="87:29"><name pos:start="87:29" pos:end="87:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="91:55"><expr pos:start="89:9" pos:end="91:54"><call pos:start="89:9" pos:end="91:54"><name pos:start="89:9" pos:end="89:14">memset</name><argument_list pos:start="89:15" pos:end="91:54">(<argument pos:start="89:16" pos:end="89:62"><expr pos:start="89:16" pos:end="89:62"><operator pos:start="89:16" pos:end="89:16">&amp;</operator><name pos:start="89:17" pos:end="89:62"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:30">coded_block</name><index pos:start="89:31" pos:end="89:62">[<expr pos:start="89:32" pos:end="89:61"><name pos:start="89:32" pos:end="89:48"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:45">block_index</name><index pos:start="89:46" pos:end="89:48">[<expr pos:start="89:47" pos:end="89:47"><literal type="number" pos:start="89:47" pos:end="89:47">0</literal></expr>]</index></name><operator pos:start="89:49" pos:end="89:49">-</operator><name pos:start="89:50" pos:end="89:61"><name pos:start="89:50" pos:end="89:50">s</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:61">b8_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="89:65" pos:end="89:65"><expr pos:start="89:65" pos:end="89:65"><literal type="number" pos:start="89:65" pos:end="89:65">0</literal></expr></argument>,

               <argument pos:start="91:16" pos:end="91:53"><expr pos:start="91:16" pos:end="91:53"><name pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:27">b8_stride</name></name> <operator pos:start="91:29" pos:end="91:29">*</operator> <sizeof pos:start="91:31" pos:end="91:53">sizeof<argument_list pos:start="91:37" pos:end="91:53">(<argument pos:start="91:38" pos:end="91:52"><expr pos:start="91:38" pos:end="91:52"><operator pos:start="91:38" pos:end="91:38">*</operator><name pos:start="91:39" pos:end="91:52"><name pos:start="91:39" pos:end="91:39">s</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:52">coded_block</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="95:5" pos:end="221:5">for<control pos:start="95:8" pos:end="95:43">(<init pos:start="95:9" pos:end="95:9">;</init> <condition pos:start="95:11" pos:end="95:32"><expr pos:start="95:11" pos:end="95:31"><name pos:start="95:11" pos:end="95:17"><name pos:start="95:11" pos:end="95:11">s</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:17">mb_y</name></name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:31"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:31">end_mb_y</name></name></expr>;</condition> <incr pos:start="95:34" pos:end="95:42"><expr pos:start="95:34" pos:end="95:42"><name pos:start="95:34" pos:end="95:40"><name pos:start="95:34" pos:end="95:34">s</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:40">mb_y</name></name><operator pos:start="95:41" pos:end="95:42">++</operator></expr></incr>)</control> <block pos:start="95:45" pos:end="221:5">{<block_content pos:start="97:9" pos:end="219:32">

        <expr_stmt pos:start="97:9" pos:end="97:20"><expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:15">mb_x</name></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><call pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:27">ff_init_block_index</name><argument_list pos:start="99:28" pos:end="99:30">(<argument pos:start="99:29" pos:end="99:29"><expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="101:9" pos:end="209:9">for<control pos:start="101:12" pos:end="101:46">(<init pos:start="101:13" pos:end="101:13">;</init><condition pos:start="101:14" pos:end="101:35"><expr pos:start="101:14" pos:end="101:34"><name pos:start="101:14" pos:end="101:20"><name pos:start="101:14" pos:end="101:14">s</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:20">mb_x</name></name> <operator pos:start="101:22" pos:end="101:22">&lt;</operator> <name pos:start="101:24" pos:end="101:34"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:34">mb_width</name></name></expr>;</condition> <incr pos:start="101:37" pos:end="101:45"><expr pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:43"><name pos:start="101:37" pos:end="101:37">s</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:43">mb_x</name></name><operator pos:start="101:44" pos:end="101:45">++</operator></expr></incr>)</control> <block pos:start="101:48" pos:end="209:9">{<block_content pos:start="103:13" pos:end="207:13">

            <expr_stmt pos:start="103:13" pos:end="103:60"><expr pos:start="103:13" pos:end="103:59"><call pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:19">DCTELEM</name> <argument_list pos:start="103:21" pos:end="103:28">(<argument pos:start="103:22" pos:end="103:27"><expr pos:start="103:22" pos:end="103:27"><operator pos:start="103:22" pos:end="103:22">*</operator><name pos:start="103:23" pos:end="103:27">block</name></expr></argument>)</argument_list></call><index pos:start="103:29" pos:end="103:32">[<expr pos:start="103:30" pos:end="103:31"><literal type="number" pos:start="103:30" pos:end="103:31">64</literal></expr>]</index> <operator pos:start="103:34" pos:end="103:34">=</operator> <name pos:start="103:36" pos:end="103:59"><name pos:start="103:36" pos:end="103:36">v</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:43">block</name><index pos:start="103:44" pos:end="103:59">[<expr pos:start="103:45" pos:end="103:58"><name pos:start="103:45" pos:end="103:58"><name pos:start="103:45" pos:end="103:45">v</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:58">cur_blk_idx</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:37"><expr pos:start="105:13" pos:end="105:36"><call pos:start="105:13" pos:end="105:36"><name pos:start="105:13" pos:end="105:33">ff_update_block_index</name><argument_list pos:start="105:34" pos:end="105:36">(<argument pos:start="105:35" pos:end="105:35"><expr pos:start="105:35" pos:end="105:35"><name pos:start="105:35" pos:end="105:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:42"><expr pos:start="107:13" pos:end="107:41"><call pos:start="107:13" pos:end="107:41"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:18">dsp</name><operator pos:start="107:19" pos:end="107:19">.</operator><name pos:start="107:20" pos:end="107:31">clear_blocks</name></name><argument_list pos:start="107:32" pos:end="107:41">(<argument pos:start="107:33" pos:end="107:40"><expr pos:start="107:33" pos:end="107:40"><name pos:start="107:33" pos:end="107:40"><name pos:start="107:33" pos:end="107:37">block</name><index pos:start="107:38" pos:end="107:40">[<expr pos:start="107:39" pos:end="107:39"><literal type="number" pos:start="107:39" pos:end="107:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:54"><expr pos:start="109:13" pos:end="109:53"><name pos:start="109:13" pos:end="109:18">mb_pos</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:28"><name pos:start="109:22" pos:end="109:22">s</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:28">mb_x</name></name> <operator pos:start="109:30" pos:end="109:30">+</operator> <name pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:32">s</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:38">mb_y</name></name> <operator pos:start="109:40" pos:end="109:40">*</operator> <name pos:start="109:42" pos:end="109:53"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:53">mb_stride</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:65"><expr pos:start="111:13" pos:end="111:64"><name pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">current_picture</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:32">f</name><operator pos:start="111:33" pos:end="111:33">.</operator><name pos:start="111:34" pos:end="111:40">mb_type</name><index pos:start="111:41" pos:end="111:48">[<expr pos:start="111:42" pos:end="111:47"><name pos:start="111:42" pos:end="111:47">mb_pos</name></expr>]</index></name> <operator pos:start="111:50" pos:end="111:50">=</operator> <name pos:start="111:52" pos:end="111:64">MB_TYPE_INTRA</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:73"><expr pos:start="113:13" pos:end="113:72"><name pos:start="113:13" pos:end="113:68"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:30">current_picture</name><operator pos:start="113:31" pos:end="113:31">.</operator><name pos:start="113:32" pos:end="113:32">f</name><operator pos:start="113:33" pos:end="113:33">.</operator><name pos:start="113:34" pos:end="113:43">motion_val</name><index pos:start="113:44" pos:end="113:46">[<expr pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">1</literal></expr>]</index><index pos:start="113:47" pos:end="113:65">[<expr pos:start="113:48" pos:end="113:64"><name pos:start="113:48" pos:end="113:64"><name pos:start="113:48" pos:end="113:48">s</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:61">block_index</name><index pos:start="113:62" pos:end="113:64">[<expr pos:start="113:63" pos:end="113:63"><literal type="number" pos:start="113:63" pos:end="113:63">0</literal></expr>]</index></name></expr>]</index><index pos:start="113:66" pos:end="113:68">[<expr pos:start="113:67" pos:end="113:67"><literal type="number" pos:start="113:67" pos:end="113:67">0</literal></expr>]</index></name> <operator pos:start="113:70" pos:end="113:70">=</operator> <literal type="number" pos:start="113:72" pos:end="113:72">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:73"><expr pos:start="115:13" pos:end="115:72"><name pos:start="115:13" pos:end="115:68"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:30">current_picture</name><operator pos:start="115:31" pos:end="115:31">.</operator><name pos:start="115:32" pos:end="115:32">f</name><operator pos:start="115:33" pos:end="115:33">.</operator><name pos:start="115:34" pos:end="115:43">motion_val</name><index pos:start="115:44" pos:end="115:46">[<expr pos:start="115:45" pos:end="115:45"><literal type="number" pos:start="115:45" pos:end="115:45">1</literal></expr>]</index><index pos:start="115:47" pos:end="115:65">[<expr pos:start="115:48" pos:end="115:64"><name pos:start="115:48" pos:end="115:64"><name pos:start="115:48" pos:end="115:48">s</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:61">block_index</name><index pos:start="115:62" pos:end="115:64">[<expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">0</literal></expr>]</index></name></expr>]</index><index pos:start="115:66" pos:end="115:68">[<expr pos:start="115:67" pos:end="115:67"><literal type="number" pos:start="115:67" pos:end="115:67">1</literal></expr>]</index></name> <operator pos:start="115:70" pos:end="115:70">=</operator> <literal type="number" pos:start="115:72" pos:end="115:72">0</literal></expr>;</expr_stmt>



            <comment type="line" pos:start="119:13" pos:end="119:51">// do actual MB decoding and displaying</comment>

            <expr_stmt pos:start="121:13" pos:end="121:84"><expr pos:start="121:13" pos:end="121:83"><name pos:start="121:13" pos:end="121:15">cbp</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:83"><name pos:start="121:19" pos:end="121:26">get_vlc2</name><argument_list pos:start="121:27" pos:end="121:83">(<argument pos:start="121:28" pos:end="121:35"><expr pos:start="121:28" pos:end="121:35"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:35"><name pos:start="121:29" pos:end="121:29">v</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:32">s</name><operator pos:start="121:33" pos:end="121:33">.</operator><name pos:start="121:34" pos:end="121:35">gb</name></name></expr></argument>, <argument pos:start="121:38" pos:end="121:60"><expr pos:start="121:38" pos:end="121:60"><name pos:start="121:38" pos:end="121:60"><name pos:start="121:38" pos:end="121:54">ff_msmp4_mb_i_vlc</name><operator pos:start="121:55" pos:end="121:55">.</operator><name pos:start="121:56" pos:end="121:60">table</name></name></expr></argument>, <argument pos:start="121:63" pos:end="121:79"><expr pos:start="121:63" pos:end="121:79"><name pos:start="121:63" pos:end="121:79">MB_INTRA_VLC_BITS</name></expr></argument>, <argument pos:start="121:82" pos:end="121:82"><expr pos:start="121:82" pos:end="121:82"><literal type="number" pos:start="121:82" pos:end="121:82">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="129:55"><if pos:start="123:13" pos:end="125:51">if<condition pos:start="123:15" pos:end="123:32">(<expr pos:start="123:16" pos:end="123:31"><name pos:start="123:16" pos:end="123:31"><name pos:start="123:16" pos:end="123:16">v</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:31">acpred_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:51"><block_content pos:start="125:17" pos:end="125:51">

                <expr_stmt pos:start="125:17" pos:end="125:51"><expr pos:start="125:17" pos:end="125:50"><name pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:17">v</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:20">s</name><operator pos:start="125:21" pos:end="125:21">.</operator><name pos:start="125:22" pos:end="125:28">ac_pred</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <call pos:start="125:32" pos:end="125:50"><name pos:start="125:32" pos:end="125:40">get_bits1</name><argument_list pos:start="125:41" pos:end="125:50">(<argument pos:start="125:42" pos:end="125:49"><expr pos:start="125:42" pos:end="125:49"><operator pos:start="125:42" pos:end="125:42">&amp;</operator><name pos:start="125:43" pos:end="125:49"><name pos:start="125:43" pos:end="125:43">v</name><operator pos:start="125:44" pos:end="125:45">-&gt;</operator><name pos:start="125:46" pos:end="125:46">s</name><operator pos:start="125:47" pos:end="125:47">.</operator><name pos:start="125:48" pos:end="125:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="127:13" pos:end="129:55">else<block type="pseudo" pos:start="129:17" pos:end="129:55"><block_content pos:start="129:17" pos:end="129:55">

                <expr_stmt pos:start="129:17" pos:end="129:55"><expr pos:start="129:17" pos:end="129:54"><name pos:start="129:17" pos:end="129:28"><name pos:start="129:17" pos:end="129:17">v</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:21">.</operator><name pos:start="129:22" pos:end="129:28">ac_pred</name></name> <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:54"><name pos:start="129:32" pos:end="129:32">v</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:46">acpred_plane</name><index pos:start="129:47" pos:end="129:54">[<expr pos:start="129:48" pos:end="129:53"><name pos:start="129:48" pos:end="129:53">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="133:13" pos:end="135:66"><if pos:start="133:13" pos:end="135:66">if <condition pos:start="133:16" pos:end="133:68">(<expr pos:start="133:17" pos:end="133:67"><name pos:start="133:17" pos:end="133:27"><name pos:start="133:17" pos:end="133:17">v</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:27">condover</name></name> <operator pos:start="133:29" pos:end="133:30">==</operator> <name pos:start="133:32" pos:end="133:46">CONDOVER_SELECT</name> <operator pos:start="133:48" pos:end="133:49">&amp;&amp;</operator> <name pos:start="133:51" pos:end="133:67"><name pos:start="133:51" pos:end="133:51">v</name><operator pos:start="133:52" pos:end="133:53">-&gt;</operator><name pos:start="133:54" pos:end="133:67">overflg_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:66"><block_content pos:start="135:17" pos:end="135:66">

                <expr_stmt pos:start="135:17" pos:end="135:66"><expr pos:start="135:17" pos:end="135:65"><name pos:start="135:17" pos:end="135:43"><name pos:start="135:17" pos:end="135:17">v</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:35">over_flags_plane</name><index pos:start="135:36" pos:end="135:43">[<expr pos:start="135:37" pos:end="135:42"><name pos:start="135:37" pos:end="135:42">mb_pos</name></expr>]</index></name> <operator pos:start="135:45" pos:end="135:45">=</operator> <call pos:start="135:47" pos:end="135:65"><name pos:start="135:47" pos:end="135:55">get_bits1</name><argument_list pos:start="135:56" pos:end="135:65">(<argument pos:start="135:57" pos:end="135:64"><expr pos:start="135:57" pos:end="135:64"><operator pos:start="135:57" pos:end="135:57">&amp;</operator><name pos:start="135:58" pos:end="135:64"><name pos:start="135:58" pos:end="135:58">v</name><operator pos:start="135:59" pos:end="135:60">-&gt;</operator><name pos:start="135:61" pos:end="135:61">s</name><operator pos:start="135:62" pos:end="135:62">.</operator><name pos:start="135:63" pos:end="135:64">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:25"><expr pos:start="139:13" pos:end="139:24"><call pos:start="139:13" pos:end="139:24"><name pos:start="139:13" pos:end="139:22">GET_MQUANT</name><argument_list pos:start="139:23" pos:end="139:24">()</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:63"><expr pos:start="143:13" pos:end="143:62"><name pos:start="143:13" pos:end="143:53"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:30">current_picture</name><operator pos:start="143:31" pos:end="143:31">.</operator><name pos:start="143:32" pos:end="143:32">f</name><operator pos:start="143:33" pos:end="143:33">.</operator><name pos:start="143:34" pos:end="143:45">qscale_table</name><index pos:start="143:46" pos:end="143:53">[<expr pos:start="143:47" pos:end="143:52"><name pos:start="143:47" pos:end="143:52">mb_pos</name></expr>]</index></name> <operator pos:start="143:55" pos:end="143:55">=</operator> <name pos:start="143:57" pos:end="143:62">mquant</name></expr>;</expr_stmt>

            <comment type="block" pos:start="145:13" pos:end="145:53">/* Set DC scale - y and c use the same */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:56"><expr pos:start="147:13" pos:end="147:55"><name pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:25">y_dc_scale</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:55"><name pos:start="147:29" pos:end="147:29">s</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:47">y_dc_scale_table</name><index pos:start="147:48" pos:end="147:55">[<expr pos:start="147:49" pos:end="147:54"><name pos:start="147:49" pos:end="147:54">mquant</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:25">c_dc_scale</name></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:55"><name pos:start="149:29" pos:end="149:29">s</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:47">c_dc_scale_table</name><index pos:start="149:48" pos:end="149:55">[<expr pos:start="149:49" pos:end="149:54"><name pos:start="149:49" pos:end="149:54">mquant</name></expr>]</index></name></expr>;</expr_stmt>



            <for pos:start="153:13" pos:end="187:13">for<control pos:start="153:16" pos:end="153:34">(<init pos:start="153:17" pos:end="153:22"><expr pos:start="153:17" pos:end="153:21"><name pos:start="153:17" pos:end="153:17">k</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <literal type="number" pos:start="153:21" pos:end="153:21">0</literal></expr>;</init> <condition pos:start="153:24" pos:end="153:29"><expr pos:start="153:24" pos:end="153:28"><name pos:start="153:24" pos:end="153:24">k</name> <operator pos:start="153:26" pos:end="153:26">&lt;</operator> <literal type="number" pos:start="153:28" pos:end="153:28">6</literal></expr>;</condition> <incr pos:start="153:31" pos:end="153:33"><expr pos:start="153:31" pos:end="153:33"><name pos:start="153:31" pos:end="153:31">k</name><operator pos:start="153:32" pos:end="153:33">++</operator></expr></incr>)</control> <block pos:start="153:36" pos:end="187:13">{<block_content pos:start="155:17" pos:end="185:54">

                <expr_stmt pos:start="155:17" pos:end="155:45"><expr pos:start="155:17" pos:end="155:44"><name pos:start="155:17" pos:end="155:19">val</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <operator pos:start="155:23" pos:end="155:23">(</operator><operator pos:start="155:24" pos:end="155:24">(</operator><name pos:start="155:25" pos:end="155:27">cbp</name> <operator pos:start="155:29" pos:end="155:30">&gt;&gt;</operator> <operator pos:start="155:32" pos:end="155:32">(</operator><literal type="number" pos:start="155:33" pos:end="155:35">5</literal> <operator pos:start="155:35" pos:end="155:35">-</operator> <name pos:start="155:37" pos:end="155:37">k</name><operator pos:start="155:38" pos:end="155:38">)</operator><operator pos:start="155:39" pos:end="155:39">)</operator> <operator pos:start="155:41" pos:end="155:41">&amp;</operator> <literal type="number" pos:start="155:43" pos:end="155:43">1</literal><operator pos:start="155:44" pos:end="155:44">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="159:17" pos:end="167:17"><if pos:start="159:17" pos:end="167:17">if <condition pos:start="159:20" pos:end="159:26">(<expr pos:start="159:21" pos:end="159:25"><name pos:start="159:21" pos:end="159:21">k</name> <operator pos:start="159:23" pos:end="159:23">&lt;</operator> <literal type="number" pos:start="159:25" pos:end="159:25">4</literal></expr>)</condition> <block pos:start="159:28" pos:end="167:17">{<block_content pos:start="161:21" pos:end="165:37">

                    <decl_stmt pos:start="161:21" pos:end="161:74"><decl pos:start="161:21" pos:end="161:73"><type pos:start="161:21" pos:end="161:23"><name pos:start="161:21" pos:end="161:23">int</name></type> <name pos:start="161:25" pos:end="161:28">pred</name> <init pos:start="161:30" pos:end="161:73">= <expr pos:start="161:32" pos:end="161:73"><call pos:start="161:32" pos:end="161:73"><name pos:start="161:32" pos:end="161:51">vc1_coded_block_pred</name><argument_list pos:start="161:52" pos:end="161:73">(<argument pos:start="161:53" pos:end="161:57"><expr pos:start="161:53" pos:end="161:57"><operator pos:start="161:53" pos:end="161:53">&amp;</operator><name pos:start="161:54" pos:end="161:57"><name pos:start="161:54" pos:end="161:54">v</name><operator pos:start="161:55" pos:end="161:56">-&gt;</operator><name pos:start="161:57" pos:end="161:57">s</name></name></expr></argument>, <argument pos:start="161:60" pos:end="161:60"><expr pos:start="161:60" pos:end="161:60"><name pos:start="161:60" pos:end="161:60">k</name></expr></argument>, <argument pos:start="161:63" pos:end="161:72"><expr pos:start="161:63" pos:end="161:72"><operator pos:start="161:63" pos:end="161:63">&amp;</operator><name pos:start="161:64" pos:end="161:72">coded_val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:37"><expr pos:start="163:21" pos:end="163:36"><name pos:start="163:21" pos:end="163:23">val</name> <operator pos:start="163:25" pos:end="163:25">=</operator> <name pos:start="163:27" pos:end="163:29">val</name> <operator pos:start="163:31" pos:end="163:31">^</operator> <name pos:start="163:33" pos:end="163:36">pred</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:37"><expr pos:start="165:21" pos:end="165:36"><operator pos:start="165:21" pos:end="165:21">*</operator><name pos:start="165:22" pos:end="165:30">coded_val</name> <operator pos:start="165:32" pos:end="165:32">=</operator> <name pos:start="165:34" pos:end="165:36">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:38"><expr pos:start="169:17" pos:end="169:37"><name pos:start="169:17" pos:end="169:19">cbp</name> <operator pos:start="169:21" pos:end="169:22">|=</operator> <name pos:start="169:24" pos:end="169:26">val</name> <operator pos:start="169:28" pos:end="169:29">&lt;&lt;</operator> <operator pos:start="169:31" pos:end="169:31">(</operator><literal type="number" pos:start="169:32" pos:end="169:34">5</literal> <operator pos:start="169:34" pos:end="169:34">-</operator> <name pos:start="169:36" pos:end="169:36">k</name><operator pos:start="169:37" pos:end="169:37">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="173:17" pos:end="173:68"><expr pos:start="173:17" pos:end="173:67"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:17">v</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:26">a_avail</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator> <operator pos:start="173:30" pos:end="173:30">!</operator><name pos:start="173:31" pos:end="173:49"><name pos:start="173:31" pos:end="173:31">s</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:49">first_slice_line</name></name> <operator pos:start="173:51" pos:end="173:52">||</operator> <operator pos:start="173:54" pos:end="173:54">(</operator><name pos:start="173:55" pos:end="173:55">k</name><operator pos:start="173:56" pos:end="173:57">==</operator><literal type="number" pos:start="173:58" pos:end="173:58">2</literal> <operator pos:start="173:60" pos:end="173:61">||</operator> <name pos:start="173:63" pos:end="173:63">k</name><operator pos:start="173:64" pos:end="173:65">==</operator><literal type="number" pos:start="173:66" pos:end="173:66">3</literal><operator pos:start="173:67" pos:end="173:67">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:57"><expr pos:start="175:17" pos:end="175:56"><name pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:17">v</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:26">c_avail</name></name> <operator pos:start="175:28" pos:end="175:28">=</operator> <operator pos:start="175:30" pos:end="175:30">!</operator><operator pos:start="175:31" pos:end="175:31">!</operator><name pos:start="175:32" pos:end="175:38"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:38">mb_x</name></name> <operator pos:start="175:40" pos:end="175:41">||</operator> <operator pos:start="175:43" pos:end="175:43">(</operator><name pos:start="175:44" pos:end="175:44">k</name><operator pos:start="175:45" pos:end="175:46">==</operator><literal type="number" pos:start="175:47" pos:end="175:47">1</literal> <operator pos:start="175:49" pos:end="175:50">||</operator> <name pos:start="175:52" pos:end="175:52">k</name><operator pos:start="175:53" pos:end="175:54">==</operator><literal type="number" pos:start="175:55" pos:end="175:55">3</literal><operator pos:start="175:56" pos:end="175:56">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="179:17" pos:end="179:105"><expr pos:start="179:17" pos:end="179:104"><call pos:start="179:17" pos:end="179:104"><name pos:start="179:17" pos:end="179:38">vc1_decode_i_block_adv</name><argument_list pos:start="179:39" pos:end="179:104">(<argument pos:start="179:40" pos:end="179:40"><expr pos:start="179:40" pos:end="179:40"><name pos:start="179:40" pos:end="179:40">v</name></expr></argument>, <argument pos:start="179:43" pos:end="179:50"><expr pos:start="179:43" pos:end="179:50"><name pos:start="179:43" pos:end="179:50"><name pos:start="179:43" pos:end="179:47">block</name><index pos:start="179:48" pos:end="179:50">[<expr pos:start="179:49" pos:end="179:49"><name pos:start="179:49" pos:end="179:49">k</name></expr>]</index></name></expr></argument>, <argument pos:start="179:53" pos:end="179:53"><expr pos:start="179:53" pos:end="179:53"><name pos:start="179:53" pos:end="179:53">k</name></expr></argument>, <argument pos:start="179:56" pos:end="179:58"><expr pos:start="179:56" pos:end="179:58"><name pos:start="179:56" pos:end="179:58">val</name></expr></argument>, <argument pos:start="179:61" pos:end="179:95"><expr pos:start="179:61" pos:end="179:95"><ternary pos:start="179:61" pos:end="179:95"><condition pos:start="179:61" pos:end="179:66"><expr pos:start="179:61" pos:end="179:65"><operator pos:start="179:61" pos:end="179:61">(</operator><name pos:start="179:62" pos:end="179:62">k</name><operator pos:start="179:63" pos:end="179:63">&lt;</operator><literal type="number" pos:start="179:64" pos:end="179:64">4</literal><operator pos:start="179:65" pos:end="179:65">)</operator></expr>?</condition><then pos:start="179:68" pos:end="179:79"> <expr pos:start="179:68" pos:end="179:79"><name pos:start="179:68" pos:end="179:79"><name pos:start="179:68" pos:end="179:68">v</name><operator pos:start="179:69" pos:end="179:70">-&gt;</operator><name pos:start="179:71" pos:end="179:79">codingset</name></name></expr> </then><else pos:start="179:81" pos:end="179:95">: <expr pos:start="179:83" pos:end="179:95"><name pos:start="179:83" pos:end="179:95"><name pos:start="179:83" pos:end="179:83">v</name><operator pos:start="179:84" pos:end="179:85">-&gt;</operator><name pos:start="179:86" pos:end="179:95">codingset2</name></name></expr></else></ternary></expr></argument>, <argument pos:start="179:98" pos:end="179:103"><expr pos:start="179:98" pos:end="179:103"><name pos:start="179:98" pos:end="179:103">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="183:17" pos:end="183:68"><if pos:start="183:17" pos:end="183:68">if <condition pos:start="183:20" pos:end="183:58">(<expr pos:start="183:21" pos:end="183:57"><name pos:start="183:21" pos:end="183:21">k</name> <operator pos:start="183:23" pos:end="183:23">&gt;</operator> <literal type="number" pos:start="183:25" pos:end="183:25">3</literal> <operator pos:start="183:27" pos:end="183:28">&amp;&amp;</operator> <operator pos:start="183:30" pos:end="183:30">(</operator><name pos:start="183:31" pos:end="183:38"><name pos:start="183:31" pos:end="183:31">s</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:38">flags</name></name> <operator pos:start="183:40" pos:end="183:40">&amp;</operator> <name pos:start="183:42" pos:end="183:56">CODEC_FLAG_GRAY</name><operator pos:start="183:57" pos:end="183:57">)</operator></expr>)</condition><block type="pseudo" pos:start="183:60" pos:end="183:68"><block_content pos:start="183:60" pos:end="183:68"> <continue pos:start="183:60" pos:end="183:68">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:54"><expr pos:start="185:17" pos:end="185:53"><call pos:start="185:17" pos:end="185:53"><name pos:start="185:17" pos:end="185:43"><name pos:start="185:17" pos:end="185:17">v</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:25">vc1dsp</name><operator pos:start="185:26" pos:end="185:26">.</operator><name pos:start="185:27" pos:end="185:43">vc1_inv_trans_8x8</name></name><argument_list pos:start="185:44" pos:end="185:53">(<argument pos:start="185:45" pos:end="185:52"><expr pos:start="185:45" pos:end="185:52"><name pos:start="185:45" pos:end="185:52"><name pos:start="185:45" pos:end="185:49">block</name><index pos:start="185:50" pos:end="185:52">[<expr pos:start="185:51" pos:end="185:51"><name pos:start="185:51" pos:end="185:51">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="191:13" pos:end="191:46"><expr pos:start="191:13" pos:end="191:45"><call pos:start="191:13" pos:end="191:45"><name pos:start="191:13" pos:end="191:42">vc1_smooth_overlap_filter_iblk</name><argument_list pos:start="191:43" pos:end="191:45">(<argument pos:start="191:44" pos:end="191:44"><expr pos:start="191:44" pos:end="191:44"><name pos:start="191:44" pos:end="191:44">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:45"><expr pos:start="193:13" pos:end="193:44"><call pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:41">vc1_put_signed_blocks_clamped</name><argument_list pos:start="193:42" pos:end="193:44">(<argument pos:start="193:43" pos:end="193:43"><expr pos:start="193:43" pos:end="193:43"><name pos:start="193:43" pos:end="193:43">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="195:72"><if pos:start="195:13" pos:end="195:72">if<condition pos:start="195:15" pos:end="195:32">(<expr pos:start="195:16" pos:end="195:31"><name pos:start="195:16" pos:end="195:31"><name pos:start="195:16" pos:end="195:16">v</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:19">s</name><operator pos:start="195:20" pos:end="195:20">.</operator><name pos:start="195:21" pos:end="195:31">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="195:34" pos:end="195:72"><block_content pos:start="195:34" pos:end="195:72"> <expr_stmt pos:start="195:34" pos:end="195:72"><expr pos:start="195:34" pos:end="195:71"><call pos:start="195:34" pos:end="195:71"><name pos:start="195:34" pos:end="195:61">vc1_loop_filter_iblk_delayed</name><argument_list pos:start="195:62" pos:end="195:71">(<argument pos:start="195:63" pos:end="195:63"><expr pos:start="195:63" pos:end="195:63"><name pos:start="195:63" pos:end="195:63">v</name></expr></argument>, <argument pos:start="195:66" pos:end="195:70"><expr pos:start="195:66" pos:end="195:70"><name pos:start="195:66" pos:end="195:70"><name pos:start="195:66" pos:end="195:66">v</name><operator pos:start="195:67" pos:end="195:68">-&gt;</operator><name pos:start="195:69" pos:end="195:70">pq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="199:13" pos:end="207:13"><if pos:start="199:13" pos:end="207:13">if<condition pos:start="199:15" pos:end="199:48">(<expr pos:start="199:16" pos:end="199:47"><call pos:start="199:16" pos:end="199:37"><name pos:start="199:16" pos:end="199:29">get_bits_count</name><argument_list pos:start="199:30" pos:end="199:37">(<argument pos:start="199:31" pos:end="199:36"><expr pos:start="199:31" pos:end="199:36"><operator pos:start="199:31" pos:end="199:31">&amp;</operator><name pos:start="199:32" pos:end="199:36"><name pos:start="199:32" pos:end="199:32">s</name><operator pos:start="199:33" pos:end="199:34">-&gt;</operator><name pos:start="199:35" pos:end="199:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="199:39" pos:end="199:39">&gt;</operator> <name pos:start="199:41" pos:end="199:47"><name pos:start="199:41" pos:end="199:41">v</name><operator pos:start="199:42" pos:end="199:43">-&gt;</operator><name pos:start="199:44" pos:end="199:47">bits</name></name></expr>)</condition> <block pos:start="199:50" pos:end="207:13">{<block_content pos:start="201:17" pos:end="205:23">

                <expr_stmt pos:start="201:17" pos:end="201:95"><expr pos:start="201:17" pos:end="201:94"><call pos:start="201:17" pos:end="201:94"><name pos:start="201:17" pos:end="201:31">ff_er_add_slice</name><argument_list pos:start="201:32" pos:end="201:94">(<argument pos:start="201:33" pos:end="201:33"><expr pos:start="201:33" pos:end="201:33"><name pos:start="201:33" pos:end="201:33">s</name></expr></argument>, <argument pos:start="201:36" pos:end="201:36"><expr pos:start="201:36" pos:end="201:36"><literal type="number" pos:start="201:36" pos:end="201:36">0</literal></expr></argument>, <argument pos:start="201:39" pos:end="201:51"><expr pos:start="201:39" pos:end="201:51"><name pos:start="201:39" pos:end="201:51"><name pos:start="201:39" pos:end="201:39">s</name><operator pos:start="201:40" pos:end="201:41">-&gt;</operator><name pos:start="201:42" pos:end="201:51">start_mb_y</name></name></expr></argument>, <argument pos:start="201:54" pos:end="201:60"><expr pos:start="201:54" pos:end="201:60"><name pos:start="201:54" pos:end="201:60"><name pos:start="201:54" pos:end="201:54">s</name><operator pos:start="201:55" pos:end="201:56">-&gt;</operator><name pos:start="201:57" pos:end="201:60">mb_x</name></name></expr></argument>, <argument pos:start="201:63" pos:end="201:69"><expr pos:start="201:63" pos:end="201:69"><name pos:start="201:63" pos:end="201:69"><name pos:start="201:63" pos:end="201:63">s</name><operator pos:start="201:64" pos:end="201:65">-&gt;</operator><name pos:start="201:66" pos:end="201:69">mb_y</name></name></expr></argument>, <argument pos:start="201:72" pos:end="201:93"><expr pos:start="201:72" pos:end="201:93"><operator pos:start="201:72" pos:end="201:72">(</operator><name pos:start="201:73" pos:end="201:78">AC_END</name><operator pos:start="201:79" pos:end="201:79">|</operator><name pos:start="201:80" pos:end="201:85">DC_END</name><operator pos:start="201:86" pos:end="201:86">|</operator><name pos:start="201:87" pos:end="201:92">MV_END</name><operator pos:start="201:93" pos:end="201:93">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:115"><expr pos:start="203:17" pos:end="203:114"><call pos:start="203:17" pos:end="203:114"><name pos:start="203:17" pos:end="203:22">av_log</name><argument_list pos:start="203:23" pos:end="203:114">(<argument pos:start="203:24" pos:end="203:31"><expr pos:start="203:24" pos:end="203:31"><name pos:start="203:24" pos:end="203:31"><name pos:start="203:24" pos:end="203:24">s</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:31">avctx</name></name></expr></argument>, <argument pos:start="203:34" pos:end="203:45"><expr pos:start="203:34" pos:end="203:45"><name pos:start="203:34" pos:end="203:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="203:48" pos:end="203:80"><expr pos:start="203:48" pos:end="203:80"><literal type="string" pos:start="203:48" pos:end="203:80">"Bits overconsumption: %i &gt; %i\n"</literal></expr></argument>, <argument pos:start="203:83" pos:end="203:104"><expr pos:start="203:83" pos:end="203:104"><call pos:start="203:83" pos:end="203:104"><name pos:start="203:83" pos:end="203:96">get_bits_count</name><argument_list pos:start="203:97" pos:end="203:104">(<argument pos:start="203:98" pos:end="203:103"><expr pos:start="203:98" pos:end="203:103"><operator pos:start="203:98" pos:end="203:98">&amp;</operator><name pos:start="203:99" pos:end="203:103"><name pos:start="203:99" pos:end="203:99">s</name><operator pos:start="203:100" pos:end="203:101">-&gt;</operator><name pos:start="203:102" pos:end="203:103">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:107" pos:end="203:113"><expr pos:start="203:107" pos:end="203:113"><name pos:start="203:107" pos:end="203:113"><name pos:start="203:107" pos:end="203:107">v</name><operator pos:start="203:108" pos:end="203:109">-&gt;</operator><name pos:start="203:110" pos:end="203:113">bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="205:17" pos:end="205:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="211:9" pos:end="217:56"><if pos:start="211:9" pos:end="213:52">if <condition pos:start="211:12" pos:end="211:30">(<expr pos:start="211:13" pos:end="211:29"><operator pos:start="211:13" pos:end="211:13">!</operator><name pos:start="211:14" pos:end="211:29"><name pos:start="211:14" pos:end="211:14">v</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:18">.</operator><name pos:start="211:19" pos:end="211:29">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:52"><block_content pos:start="213:13" pos:end="213:52">

            <expr_stmt pos:start="213:13" pos:end="213:52"><expr pos:start="213:13" pos:end="213:51"><call pos:start="213:13" pos:end="213:51"><name pos:start="213:13" pos:end="213:30">ff_draw_horiz_band</name><argument_list pos:start="213:31" pos:end="213:51">(<argument pos:start="213:32" pos:end="213:32"><expr pos:start="213:32" pos:end="213:32"><name pos:start="213:32" pos:end="213:32">s</name></expr></argument>, <argument pos:start="213:35" pos:end="213:46"><expr pos:start="213:35" pos:end="213:46"><name pos:start="213:35" pos:end="213:41"><name pos:start="213:35" pos:end="213:35">s</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:41">mb_y</name></name> <operator pos:start="213:43" pos:end="213:43">*</operator> <literal type="number" pos:start="213:45" pos:end="213:46">16</literal></expr></argument>, <argument pos:start="213:49" pos:end="213:50"><expr pos:start="213:49" pos:end="213:50"><literal type="number" pos:start="213:49" pos:end="213:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="215:9" pos:end="217:56">else if <condition pos:start="215:17" pos:end="215:25">(<expr pos:start="215:18" pos:end="215:24"><name pos:start="215:18" pos:end="215:24"><name pos:start="215:18" pos:end="215:18">s</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:24">mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:56"><block_content pos:start="217:13" pos:end="217:56">

            <expr_stmt pos:start="217:13" pos:end="217:56"><expr pos:start="217:13" pos:end="217:55"><call pos:start="217:13" pos:end="217:55"><name pos:start="217:13" pos:end="217:30">ff_draw_horiz_band</name><argument_list pos:start="217:31" pos:end="217:55">(<argument pos:start="217:32" pos:end="217:32"><expr pos:start="217:32" pos:end="217:32"><name pos:start="217:32" pos:end="217:32">s</name></expr></argument>, <argument pos:start="217:35" pos:end="217:50"><expr pos:start="217:35" pos:end="217:50"><operator pos:start="217:35" pos:end="217:35">(</operator><name pos:start="217:36" pos:end="217:42"><name pos:start="217:36" pos:end="217:36">s</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:42">mb_y</name></name><operator pos:start="217:43" pos:end="217:43">-</operator><literal type="number" pos:start="217:44" pos:end="217:44">1</literal><operator pos:start="217:45" pos:end="217:45">)</operator> <operator pos:start="217:47" pos:end="217:47">*</operator> <literal type="number" pos:start="217:49" pos:end="217:50">16</literal></expr></argument>, <argument pos:start="217:53" pos:end="217:54"><expr pos:start="217:53" pos:end="217:54"><literal type="number" pos:start="217:53" pos:end="217:54">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:32"><expr pos:start="219:9" pos:end="219:31"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:9">s</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:27">first_slice_line</name></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <literal type="number" pos:start="219:31" pos:end="219:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="225:5" pos:end="225:27">/* raw bottom MB row */</comment>

    <expr_stmt pos:start="227:5" pos:end="227:16"><expr pos:start="227:5" pos:end="227:15"><name pos:start="227:5" pos:end="227:11"><name pos:start="227:5" pos:end="227:5">s</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:11">mb_x</name></name> <operator pos:start="227:13" pos:end="227:13">=</operator> <literal type="number" pos:start="227:15" pos:end="227:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:27"><expr pos:start="229:5" pos:end="229:26"><call pos:start="229:5" pos:end="229:26"><name pos:start="229:5" pos:end="229:23">ff_init_block_index</name><argument_list pos:start="229:24" pos:end="229:26">(<argument pos:start="229:25" pos:end="229:25"><expr pos:start="229:25" pos:end="229:25"><name pos:start="229:25" pos:end="229:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="231:5" pos:end="239:5">for<control pos:start="231:8" pos:end="231:42">(<init pos:start="231:9" pos:end="231:9">;</init><condition pos:start="231:10" pos:end="231:31"><expr pos:start="231:10" pos:end="231:30"><name pos:start="231:10" pos:end="231:16"><name pos:start="231:10" pos:end="231:10">s</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:16">mb_x</name></name> <operator pos:start="231:18" pos:end="231:18">&lt;</operator> <name pos:start="231:20" pos:end="231:30"><name pos:start="231:20" pos:end="231:20">s</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:30">mb_width</name></name></expr>;</condition> <incr pos:start="231:33" pos:end="231:41"><expr pos:start="231:33" pos:end="231:41"><name pos:start="231:33" pos:end="231:39"><name pos:start="231:33" pos:end="231:33">s</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:39">mb_x</name></name><operator pos:start="231:40" pos:end="231:41">++</operator></expr></incr>)</control> <block pos:start="231:44" pos:end="239:5">{<block_content pos:start="233:9" pos:end="237:68">

        <expr_stmt pos:start="233:9" pos:end="233:33"><expr pos:start="233:9" pos:end="233:32"><call pos:start="233:9" pos:end="233:32"><name pos:start="233:9" pos:end="233:29">ff_update_block_index</name><argument_list pos:start="233:30" pos:end="233:32">(<argument pos:start="233:31" pos:end="233:31"><expr pos:start="233:31" pos:end="233:31"><name pos:start="233:31" pos:end="233:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:41"><expr pos:start="235:9" pos:end="235:40"><call pos:start="235:9" pos:end="235:40"><name pos:start="235:9" pos:end="235:37">vc1_put_signed_blocks_clamped</name><argument_list pos:start="235:38" pos:end="235:40">(<argument pos:start="235:39" pos:end="235:39"><expr pos:start="235:39" pos:end="235:39"><name pos:start="235:39" pos:end="235:39">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="237:68"><if pos:start="237:9" pos:end="237:68">if<condition pos:start="237:11" pos:end="237:28">(<expr pos:start="237:12" pos:end="237:27"><name pos:start="237:12" pos:end="237:27"><name pos:start="237:12" pos:end="237:12">v</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:15">s</name><operator pos:start="237:16" pos:end="237:16">.</operator><name pos:start="237:17" pos:end="237:27">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="237:30" pos:end="237:68"><block_content pos:start="237:30" pos:end="237:68"> <expr_stmt pos:start="237:30" pos:end="237:68"><expr pos:start="237:30" pos:end="237:67"><call pos:start="237:30" pos:end="237:67"><name pos:start="237:30" pos:end="237:57">vc1_loop_filter_iblk_delayed</name><argument_list pos:start="237:58" pos:end="237:67">(<argument pos:start="237:59" pos:end="237:59"><expr pos:start="237:59" pos:end="237:59"><name pos:start="237:59" pos:end="237:59">v</name></expr></argument>, <argument pos:start="237:62" pos:end="237:66"><expr pos:start="237:62" pos:end="237:66"><name pos:start="237:62" pos:end="237:66"><name pos:start="237:62" pos:end="237:62">v</name><operator pos:start="237:63" pos:end="237:64">-&gt;</operator><name pos:start="237:65" pos:end="237:66">pq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="241:5" pos:end="243:55"><if pos:start="241:5" pos:end="243:55">if <condition pos:start="241:8" pos:end="241:25">(<expr pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:9">v</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:12">s</name><operator pos:start="241:13" pos:end="241:13">.</operator><name pos:start="241:14" pos:end="241:24">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:55"><block_content pos:start="243:9" pos:end="243:55">

        <expr_stmt pos:start="243:9" pos:end="243:55"><expr pos:start="243:9" pos:end="243:54"><call pos:start="243:9" pos:end="243:54"><name pos:start="243:9" pos:end="243:26">ff_draw_horiz_band</name><argument_list pos:start="243:27" pos:end="243:54">(<argument pos:start="243:28" pos:end="243:28"><expr pos:start="243:28" pos:end="243:28"><name pos:start="243:28" pos:end="243:28">s</name></expr></argument>, <argument pos:start="243:31" pos:end="243:49"><expr pos:start="243:31" pos:end="243:49"><operator pos:start="243:31" pos:end="243:31">(</operator><name pos:start="243:32" pos:end="243:43"><name pos:start="243:32" pos:end="243:32">s</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:43">mb_height</name></name><operator pos:start="243:44" pos:end="243:44">-</operator><literal type="number" pos:start="243:45" pos:end="243:45">1</literal><operator pos:start="243:46" pos:end="243:46">)</operator><operator pos:start="243:47" pos:end="243:47">*</operator><literal type="number" pos:start="243:48" pos:end="243:49">16</literal></expr></argument>, <argument pos:start="243:52" pos:end="243:53"><expr pos:start="243:52" pos:end="243:53"><literal type="number" pos:start="243:52" pos:end="243:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:99"><expr pos:start="245:5" pos:end="245:98"><call pos:start="245:5" pos:end="245:98"><name pos:start="245:5" pos:end="245:19">ff_er_add_slice</name><argument_list pos:start="245:20" pos:end="245:98">(<argument pos:start="245:21" pos:end="245:21"><expr pos:start="245:21" pos:end="245:21"><name pos:start="245:21" pos:end="245:21">s</name></expr></argument>, <argument pos:start="245:24" pos:end="245:24"><expr pos:start="245:24" pos:end="245:24"><literal type="number" pos:start="245:24" pos:end="245:24">0</literal></expr></argument>, <argument pos:start="245:27" pos:end="245:39"><expr pos:start="245:27" pos:end="245:39"><name pos:start="245:27" pos:end="245:39"><name pos:start="245:27" pos:end="245:27">s</name><operator pos:start="245:28" pos:end="245:29">-&gt;</operator><name pos:start="245:30" pos:end="245:39">start_mb_y</name></name></expr></argument>, <argument pos:start="245:42" pos:end="245:56"><expr pos:start="245:42" pos:end="245:56"><name pos:start="245:42" pos:end="245:52"><name pos:start="245:42" pos:end="245:42">s</name><operator pos:start="245:43" pos:end="245:44">-&gt;</operator><name pos:start="245:45" pos:end="245:52">mb_width</name></name> <operator pos:start="245:54" pos:end="245:54">-</operator> <literal type="number" pos:start="245:56" pos:end="245:56">1</literal></expr></argument>, <argument pos:start="245:59" pos:end="245:73"><expr pos:start="245:59" pos:end="245:73"><name pos:start="245:59" pos:end="245:69"><name pos:start="245:59" pos:end="245:59">s</name><operator pos:start="245:60" pos:end="245:61">-&gt;</operator><name pos:start="245:62" pos:end="245:69">end_mb_y</name></name> <operator pos:start="245:71" pos:end="245:71">-</operator> <literal type="number" pos:start="245:73" pos:end="245:73">1</literal></expr></argument>, <argument pos:start="245:76" pos:end="245:97"><expr pos:start="245:76" pos:end="245:97"><operator pos:start="245:76" pos:end="245:76">(</operator><name pos:start="245:77" pos:end="245:82">AC_END</name><operator pos:start="245:83" pos:end="245:83">|</operator><name pos:start="245:84" pos:end="245:89">DC_END</name><operator pos:start="245:90" pos:end="245:90">|</operator><name pos:start="245:91" pos:end="245:96">MV_END</name><operator pos:start="245:97" pos:end="245:97">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
