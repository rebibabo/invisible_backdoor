<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3221.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">avformat_alloc_output_context2</name><parameter_list pos:start="1:35" pos:end="3:76">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier><modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:83"><decl pos:start="1:61" pos:end="1:83"><type pos:start="1:61" pos:end="1:83"><name pos:start="1:61" pos:end="1:74">AVOutputFormat</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:83">oformat</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">char</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:53">format</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:75"><decl pos:start="3:56" pos:end="3:75"><type pos:start="3:56" pos:end="3:75"><specifier pos:start="3:56" pos:end="3:60">const</specifier> <name pos:start="3:62" pos:end="3:65">char</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:75">filename</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:15">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:49">= <expr pos:start="7:26" pos:end="7:49"><call pos:start="7:26" pos:end="7:49"><name pos:start="7:26" pos:end="7:47">avformat_alloc_context</name><argument_list pos:start="7:48" pos:end="7:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:18"><expr pos:start="13:5" pos:end="13:17"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:10">avctx</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:17">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:19"><if pos:start="15:5" pos:end="17:19">if <condition pos:start="15:8" pos:end="15:11">(<expr pos:start="15:9" pos:end="15:10"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:10">s</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <goto pos:start="17:9" pos:end="17:19">goto <name pos:start="17:14" pos:end="17:18">nomem</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="55:5"><if pos:start="21:5" pos:end="55:5">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:16">oformat</name></expr>)</condition> <block pos:start="21:19" pos:end="55:5">{<block_content pos:start="23:9" pos:end="53:9">

        <if_stmt pos:start="23:9" pos:end="53:9"><if pos:start="23:9" pos:end="37:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:18">format</name></expr>)</condition> <block pos:start="23:21" pos:end="37:9">{<block_content pos:start="25:13" pos:end="35:13">

            <expr_stmt pos:start="25:13" pos:end="25:58"><expr pos:start="25:13" pos:end="25:57"><name pos:start="25:13" pos:end="25:19">oformat</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:57"><name pos:start="25:23" pos:end="25:37">av_guess_format</name><argument_list pos:start="25:38" pos:end="25:57">(<argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44">format</name></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">NULL</name></expr></argument>, <argument pos:start="25:53" pos:end="25:56"><expr pos:start="25:53" pos:end="25:56"><name pos:start="25:53" pos:end="25:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="35:13"><if pos:start="27:13" pos:end="35:13">if <condition pos:start="27:16" pos:end="27:25">(<expr pos:start="27:17" pos:end="27:24"><operator pos:start="27:17" pos:end="27:17">!</operator><name pos:start="27:18" pos:end="27:24">oformat</name></expr>)</condition> <block pos:start="27:27" pos:end="35:13">{<block_content pos:start="29:17" pos:end="33:27">

                <expr_stmt pos:start="29:17" pos:end="29:114"><expr pos:start="29:17" pos:end="29:113"><call pos:start="29:17" pos:end="29:113"><name pos:start="29:17" pos:end="29:22">av_log</name><argument_list pos:start="29:23" pos:end="29:113">(<argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">s</name></expr></argument>, <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:41" pos:end="29:104"><expr pos:start="29:41" pos:end="29:104"><literal type="string" pos:start="29:41" pos:end="29:104">"Requested output format '%s' is not a suitable output format\n"</literal></expr></argument>, <argument pos:start="29:107" pos:end="29:112"><expr pos:start="29:107" pos:end="29:112"><name pos:start="29:107" pos:end="29:112">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:38"><expr pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:29">AVERROR</name><argument_list pos:start="31:30" pos:end="31:37">(<argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="33:17" pos:end="33:27">goto <name pos:start="33:22" pos:end="33:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="53:9">else <block pos:start="37:16" pos:end="53:9">{<block_content pos:start="39:13" pos:end="51:13">

            <expr_stmt pos:start="39:13" pos:end="39:60"><expr pos:start="39:13" pos:end="39:59"><name pos:start="39:13" pos:end="39:19">oformat</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:59"><name pos:start="39:23" pos:end="39:37">av_guess_format</name><argument_list pos:start="39:38" pos:end="39:59">(<argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">NULL</name></expr></argument>, <argument pos:start="39:45" pos:end="39:52"><expr pos:start="39:45" pos:end="39:52"><name pos:start="39:45" pos:end="39:52">filename</name></expr></argument>, <argument pos:start="39:55" pos:end="39:58"><expr pos:start="39:55" pos:end="39:58"><name pos:start="39:55" pos:end="39:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="51:13"><if pos:start="41:13" pos:end="51:13">if <condition pos:start="41:16" pos:end="41:25">(<expr pos:start="41:17" pos:end="41:24"><operator pos:start="41:17" pos:end="41:17">!</operator><name pos:start="41:18" pos:end="41:24">oformat</name></expr>)</condition> <block pos:start="41:27" pos:end="51:13">{<block_content pos:start="43:17" pos:end="49:27">

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:19">ret</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:37"><name pos:start="43:23" pos:end="43:29">AVERROR</name><argument_list pos:start="43:30" pos:end="43:37">(<argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="47:33"><expr pos:start="45:17" pos:end="47:32"><call pos:start="45:17" pos:end="47:32"><name pos:start="45:17" pos:end="45:22">av_log</name><argument_list pos:start="45:23" pos:end="47:32">(<argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">s</name></expr></argument>, <argument pos:start="45:27" pos:end="45:38"><expr pos:start="45:27" pos:end="45:38"><name pos:start="45:27" pos:end="45:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:41" pos:end="45:92"><expr pos:start="45:41" pos:end="45:92"><literal type="string" pos:start="45:41" pos:end="45:92">"Unable to find a suitable output format for '%s'\n"</literal></expr></argument>,

                       <argument pos:start="47:24" pos:end="47:31"><expr pos:start="47:24" pos:end="47:31"><name pos:start="47:24" pos:end="47:31">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="49:17" pos:end="49:27">goto <name pos:start="49:22" pos:end="49:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:25"><expr pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:14">oformat</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:24">oformat</name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="79:28"><if pos:start="61:5" pos:end="77:5">if <condition pos:start="61:8" pos:end="61:39">(<expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">oformat</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:34">priv_data_size</name></name> <operator pos:start="61:36" pos:end="61:36">&gt;</operator> <literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr>)</condition> <block pos:start="61:41" pos:end="77:5">{<block_content pos:start="63:9" pos:end="75:9">

        <expr_stmt pos:start="63:9" pos:end="63:62"><expr pos:start="63:9" pos:end="63:61"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">priv_data</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <call pos:start="63:24" pos:end="63:61"><name pos:start="63:24" pos:end="63:33">av_mallocz</name><argument_list pos:start="63:34" pos:end="63:61">(<argument pos:start="63:35" pos:end="63:60"><expr pos:start="63:35" pos:end="63:60"><name pos:start="63:35" pos:end="63:60"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:44">oformat</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:60">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:23"><if pos:start="65:9" pos:end="67:23">if <condition pos:start="65:12" pos:end="65:26">(<expr pos:start="65:13" pos:end="65:25"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:25"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:25">priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <goto pos:start="67:13" pos:end="67:23">goto <name pos:start="67:18" pos:end="67:22">nomem</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:35">(<expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">oformat</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:34">priv_class</name></name></expr>)</condition> <block pos:start="69:37" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:46">

            <expr_stmt pos:start="71:13" pos:end="71:67"><expr pos:start="71:13" pos:end="71:66"><operator pos:start="71:13" pos:end="71:13">*</operator><operator pos:start="71:14" pos:end="71:14">(</operator><specifier pos:start="71:15" pos:end="71:19">const</specifier> <name pos:start="71:21" pos:end="71:27">AVClass</name><operator pos:start="71:28" pos:end="71:28">*</operator><operator pos:start="71:29" pos:end="71:29">*</operator><operator pos:start="71:30" pos:end="71:30">)</operator><name pos:start="71:31" pos:end="71:42"><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:42">priv_data</name></name><operator pos:start="71:43" pos:end="71:43">=</operator> <name pos:start="71:45" pos:end="71:66"><name pos:start="71:45" pos:end="71:45">s</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:54">oformat</name><operator pos:start="71:55" pos:end="71:56">-&gt;</operator><name pos:start="71:57" pos:end="71:66">priv_class</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:46"><expr pos:start="73:13" pos:end="73:45"><call pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:31">av_opt_set_defaults</name><argument_list pos:start="73:32" pos:end="73:45">(<argument pos:start="73:33" pos:end="73:44"><expr pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:33">s</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:44">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="79:28">else<block type="pseudo" pos:start="79:9" pos:end="79:28"><block_content pos:start="79:9" pos:end="79:28">

        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">priv_data</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:27">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="83:5" pos:end="85:63"><if pos:start="83:5" pos:end="85:63">if <condition pos:start="83:8" pos:end="83:17">(<expr pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">filename</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:63"><block_content pos:start="85:9" pos:end="85:63">

        <expr_stmt pos:start="85:9" pos:end="85:63"><expr pos:start="85:9" pos:end="85:62"><call pos:start="85:9" pos:end="85:62"><name pos:start="85:9" pos:end="85:18">av_strlcpy</name><argument_list pos:start="85:19" pos:end="85:62">(<argument pos:start="85:20" pos:end="85:30"><expr pos:start="85:20" pos:end="85:30"><name pos:start="85:20" pos:end="85:30"><name pos:start="85:20" pos:end="85:20">s</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:30">filename</name></name></expr></argument>, <argument pos:start="85:33" pos:end="85:40"><expr pos:start="85:33" pos:end="85:40"><name pos:start="85:33" pos:end="85:40">filename</name></expr></argument>, <argument pos:start="85:43" pos:end="85:61"><expr pos:start="85:43" pos:end="85:61"><sizeof pos:start="85:43" pos:end="85:61">sizeof<argument_list pos:start="85:49" pos:end="85:61">(<argument pos:start="85:50" pos:end="85:60"><expr pos:start="85:50" pos:end="85:60"><name pos:start="85:50" pos:end="85:60"><name pos:start="85:50" pos:end="85:50">s</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:60">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:15"><expr pos:start="87:5" pos:end="87:14"><operator pos:start="87:5" pos:end="87:5">*</operator><name pos:start="87:6" pos:end="87:10">avctx</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="87:14">s</name></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

<label pos:start="91:1" pos:end="91:6"><name pos:start="91:1" pos:end="91:5">nomem</name>:</label>

    <expr_stmt pos:start="93:5" pos:end="93:47"><expr pos:start="93:5" pos:end="93:46"><call pos:start="93:5" pos:end="93:46"><name pos:start="93:5" pos:end="93:10">av_log</name><argument_list pos:start="93:11" pos:end="93:46">(<argument pos:start="93:12" pos:end="93:12"><expr pos:start="93:12" pos:end="93:12"><name pos:start="93:12" pos:end="93:12">s</name></expr></argument>, <argument pos:start="93:15" pos:end="93:26"><expr pos:start="93:15" pos:end="93:26"><name pos:start="93:15" pos:end="93:26">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:29" pos:end="93:45"><expr pos:start="93:29" pos:end="93:45"><literal type="string" pos:start="93:29" pos:end="93:45">"Out of memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:26"><expr pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <call pos:start="95:11" pos:end="95:25"><name pos:start="95:11" pos:end="95:17">AVERROR</name><argument_list pos:start="95:18" pos:end="95:25">(<argument pos:start="95:19" pos:end="95:24"><expr pos:start="95:19" pos:end="95:24"><name pos:start="95:19" pos:end="95:24">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="97:1" pos:end="97:6"><name pos:start="97:1" pos:end="97:5">error</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><call pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:25">avformat_free_context</name><argument_list pos:start="99:26" pos:end="99:28">(<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:15">return <expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
