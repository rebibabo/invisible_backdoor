<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10677.c" pos:tabs="8"><function pos:start="1:1" pos:end="497:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">decode_thread</name><parameter_list pos:start="1:25" pos:end="1:35">(<parameter pos:start="1:26" pos:end="1:34"><decl pos:start="1:26" pos:end="1:34"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="497:1">{<block_content pos:start="5:5" pos:end="495:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:24">= <expr pos:start="5:22" pos:end="5:24"><name pos:start="5:22" pos:end="5:24">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">ic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:16">st_index</name><index pos:start="11:17" pos:end="11:33">[<expr pos:start="11:18" pos:end="11:32"><name pos:start="11:18" pos:end="11:32">AVMEDIA_TYPE_NB</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:17">pkt1</name></decl>, <decl pos:start="13:20" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:12"><modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">pkt</name> <init pos:start="13:25" pos:end="13:31">= <expr pos:start="13:27" pos:end="13:31"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22">AVFormatParameters</name></type> <name pos:start="15:24" pos:end="15:29">params</name></decl>, <decl pos:start="15:32" pos:end="15:44"><type ref="prev" pos:start="15:5" pos:end="15:22"><modifier pos:start="15:32" pos:end="15:32">*</modifier></type><name pos:start="15:33" pos:end="15:34">ap</name> <init pos:start="15:36" pos:end="15:44">= <expr pos:start="15:38" pos:end="15:44"><operator pos:start="15:38" pos:end="15:38">&amp;</operator><name pos:start="15:39" pos:end="15:44">params</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">eof</name><init pos:start="17:12" pos:end="17:13">=<expr pos:start="17:13" pos:end="17:13"><literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:25">pkt_in_play_range</name> <init pos:start="19:27" pos:end="19:29">= <expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:6">ic</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:33"><name pos:start="23:10" pos:end="23:31">avformat_alloc_context</name><argument_list pos:start="23:32" pos:end="23:33">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><call pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:42">(<argument pos:start="27:12" pos:end="27:19"><expr pos:start="27:12" pos:end="27:19"><name pos:start="27:12" pos:end="27:19">st_index</name></expr></argument>, <argument pos:start="27:22" pos:end="27:23"><expr pos:start="27:22" pos:end="27:23"><operator pos:start="27:22" pos:end="27:22">-</operator><literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr></argument>, <argument pos:start="27:26" pos:end="27:41"><expr pos:start="27:26" pos:end="27:41"><sizeof pos:start="27:26" pos:end="27:41">sizeof<argument_list pos:start="27:32" pos:end="27:41">(<argument pos:start="27:33" pos:end="27:40"><expr pos:start="27:33" pos:end="27:40"><name pos:start="27:33" pos:end="27:40">st_index</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:6">is</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:20">video_stream</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <operator pos:start="29:24" pos:end="29:24">-</operator><literal type="number" pos:start="29:25" pos:end="29:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:6">is</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:20">audio_stream</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <operator pos:start="31:24" pos:end="31:24">-</operator><literal type="number" pos:start="31:25" pos:end="31:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:6">is</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:23">subtitle_stream</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <operator pos:start="33:27" pos:end="33:27">-</operator><literal type="number" pos:start="33:28" pos:end="33:28">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:22">global_video_state</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:27">is</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><call pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:24">url_set_interrupt_cb</name><argument_list pos:start="39:25" pos:end="39:45">(<argument pos:start="39:26" pos:end="39:44"><expr pos:start="39:26" pos:end="39:44"><name pos:start="39:26" pos:end="39:44">decode_interrupt_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><call pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:10">memset</name><argument_list pos:start="43:11" pos:end="43:30">(<argument pos:start="43:12" pos:end="43:13"><expr pos:start="43:12" pos:end="43:13"><name pos:start="43:12" pos:end="43:13">ap</name></expr></argument>, <argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr></argument>, <argument pos:start="43:19" pos:end="43:29"><expr pos:start="43:19" pos:end="43:29"><sizeof pos:start="43:19" pos:end="43:29">sizeof<argument_list pos:start="43:25" pos:end="43:29">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><operator pos:start="43:26" pos:end="43:26">*</operator><name pos:start="43:27" pos:end="43:28">ap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:6">ap</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:26">prealloced_context</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:6">ap</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:13">width</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:27">frame_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:6">ap</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:14">height</name></name><operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:28">frame_height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:6">ap</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:17">time_base</name></name><operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:30">AVRational</name><operator pos:start="53:31" pos:end="53:31">)</operator><block pos:start="53:32" pos:end="53:38">{<expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">1</literal></expr>, <expr pos:start="53:36" pos:end="53:37"><literal type="number" pos:start="53:36" pos:end="53:37">25</literal></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:6">ap</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:15">pix_fmt</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:31">frame_pix_fmt</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:74"><expr pos:start="59:5" pos:end="59:73"><call pos:start="59:5" pos:end="59:73"><name pos:start="59:5" pos:end="59:20">set_context_opts</name><argument_list pos:start="59:21" pos:end="59:73">(<argument pos:start="59:22" pos:end="59:23"><expr pos:start="59:22" pos:end="59:23"><name pos:start="59:22" pos:end="59:23">ic</name></expr></argument>, <argument pos:start="59:26" pos:end="59:38"><expr pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:38">avformat_opts</name></expr></argument>, <argument pos:start="59:41" pos:end="59:66"><expr pos:start="59:41" pos:end="59:66"><name pos:start="59:41" pos:end="59:66">AV_OPT_FLAG_DECODING_PARAM</name></expr></argument>, <argument pos:start="59:69" pos:end="59:72"><expr pos:start="59:69" pos:end="59:72"><name pos:start="59:69" pos:end="59:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:68"><expr pos:start="63:5" pos:end="63:67"><name pos:start="63:5" pos:end="63:7">err</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:67"><name pos:start="63:11" pos:end="63:28">av_open_input_file</name><argument_list pos:start="63:29" pos:end="63:67">(<argument pos:start="63:30" pos:end="63:32"><expr pos:start="63:30" pos:end="63:32"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:32">ic</name></expr></argument>, <argument pos:start="63:35" pos:end="63:46"><expr pos:start="63:35" pos:end="63:46"><name pos:start="63:35" pos:end="63:46"><name pos:start="63:35" pos:end="63:36">is</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:46">filename</name></name></expr></argument>, <argument pos:start="63:49" pos:end="63:59"><expr pos:start="63:49" pos:end="63:59"><name pos:start="63:49" pos:end="63:59"><name pos:start="63:49" pos:end="63:50">is</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:59">iformat</name></name></expr></argument>, <argument pos:start="63:62" pos:end="63:62"><expr pos:start="63:62" pos:end="63:62"><literal type="number" pos:start="63:62" pos:end="63:62">0</literal></expr></argument>, <argument pos:start="63:65" pos:end="63:66"><expr pos:start="63:65" pos:end="63:66"><name pos:start="63:65" pos:end="63:66">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">err</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition> <block pos:start="65:18" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:18">

        <expr_stmt pos:start="67:9" pos:end="67:39"><expr pos:start="67:9" pos:end="67:38"><call pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:19">print_error</name><argument_list pos:start="67:20" pos:end="67:38">(<argument pos:start="67:21" pos:end="67:32"><expr pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:22">is</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:32">filename</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:37"><expr pos:start="67:35" pos:end="67:37"><name pos:start="67:35" pos:end="67:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:17"><expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">-</operator><literal type="number" pos:start="69:16" pos:end="69:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:16"><expr pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:10"><name pos:start="75:5" pos:end="75:6">is</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:10">ic</name></name> <operator pos:start="75:12" pos:end="75:12">=</operator> <name pos:start="75:14" pos:end="75:15">ic</name></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="81:39"><if pos:start="79:5" pos:end="81:39">if<condition pos:start="79:7" pos:end="79:14">(<expr pos:start="79:8" pos:end="79:13"><name pos:start="79:8" pos:end="79:13">genpts</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:39"><block_content pos:start="81:9" pos:end="81:39">

        <expr_stmt pos:start="81:9" pos:end="81:39"><expr pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:10">ic</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:17">flags</name></name> <operator pos:start="81:19" pos:end="81:20">|=</operator> <name pos:start="81:22" pos:end="81:38">AVFMT_FLAG_GENPTS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:7">err</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <call pos:start="85:11" pos:end="85:33"><name pos:start="85:11" pos:end="85:29">av_find_stream_info</name><argument_list pos:start="85:30" pos:end="85:33">(<argument pos:start="85:31" pos:end="85:32"><expr pos:start="85:31" pos:end="85:32"><name pos:start="85:31" pos:end="85:32">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:11">err</name> <operator pos:start="87:13" pos:end="87:13">&lt;</operator> <literal type="number" pos:start="87:15" pos:end="87:15">0</literal></expr>)</condition> <block pos:start="87:18" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:18">

        <expr_stmt pos:start="89:9" pos:end="89:79"><expr pos:start="89:9" pos:end="89:78"><call pos:start="89:9" pos:end="89:78"><name pos:start="89:9" pos:end="89:15">fprintf</name><argument_list pos:start="89:16" pos:end="89:78">(<argument pos:start="89:17" pos:end="89:22"><expr pos:start="89:17" pos:end="89:22"><name pos:start="89:17" pos:end="89:22">stderr</name></expr></argument>, <argument pos:start="89:25" pos:end="89:63"><expr pos:start="89:25" pos:end="89:63"><literal type="string" pos:start="89:25" pos:end="89:63">"%s: could not find codec parameters\n"</literal></expr></argument>, <argument pos:start="89:66" pos:end="89:77"><expr pos:start="89:66" pos:end="89:77"><name pos:start="89:66" pos:end="89:77"><name pos:start="89:66" pos:end="89:67">is</name><operator pos:start="89:68" pos:end="89:69">-&gt;</operator><name pos:start="89:70" pos:end="89:77">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:17"><expr pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <operator pos:start="91:15" pos:end="91:15">-</operator><literal type="number" pos:start="91:16" pos:end="91:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:18">goto <name pos:start="93:14" pos:end="93:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="99:31"><if pos:start="97:5" pos:end="99:31">if<condition pos:start="97:7" pos:end="97:14">(<expr pos:start="97:8" pos:end="97:13"><name pos:start="97:8" pos:end="97:13"><name pos:start="97:8" pos:end="97:9">ic</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:13">pb</name></name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:31"><block_content pos:start="99:9" pos:end="99:31">

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:10">ic</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:14">pb</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:27">eof_reached</name></name><operator pos:start="99:28" pos:end="99:28">=</operator> <literal type="number" pos:start="99:30" pos:end="99:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="99:33" pos:end="99:104">//FIXME hack, ffplay maybe should not use url_feof() to test for the end</comment>



    <if_stmt pos:start="103:5" pos:end="105:65"><if pos:start="103:5" pos:end="105:65">if<condition pos:start="103:7" pos:end="103:23">(<expr pos:start="103:8" pos:end="103:22"><name pos:start="103:8" pos:end="103:20">seek_by_bytes</name><operator pos:start="103:21" pos:end="103:21">&lt;</operator><literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:65"><block_content pos:start="105:9" pos:end="105:65">

        <expr_stmt pos:start="105:9" pos:end="105:65"><expr pos:start="105:9" pos:end="105:64"><name pos:start="105:9" pos:end="105:21">seek_by_bytes</name><operator pos:start="105:22" pos:end="105:22">=</operator> <operator pos:start="105:24" pos:end="105:24">!</operator><operator pos:start="105:25" pos:end="105:25">!</operator><operator pos:start="105:26" pos:end="105:26">(</operator><name pos:start="105:27" pos:end="105:44"><name pos:start="105:27" pos:end="105:28">ic</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:37">iformat</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:44">flags</name></name> <operator pos:start="105:46" pos:end="105:46">&amp;</operator> <name pos:start="105:48" pos:end="105:63">AVFMT_TS_DISCONT</name><operator pos:start="105:64" pos:end="105:64">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:45">/* if seeking requested, we execute it */</comment>

    <if_stmt pos:start="111:5" pos:end="135:5"><if pos:start="111:5" pos:end="135:5">if <condition pos:start="111:8" pos:end="111:37">(<expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:18">start_time</name> <operator pos:start="111:20" pos:end="111:21">!=</operator> <name pos:start="111:23" pos:end="111:36">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="111:39" pos:end="135:5">{<block_content pos:start="113:9" pos:end="133:9">

        <decl_stmt pos:start="113:9" pos:end="113:26"><decl pos:start="113:9" pos:end="113:25"><type pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:15">int64_t</name></type> <name pos:start="113:17" pos:end="113:25">timestamp</name></decl>;</decl_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:17">timestamp</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:30">start_time</name></expr>;</expr_stmt>

        <comment type="block" pos:start="119:9" pos:end="119:39">/* add the stream start time */</comment>

        <if_stmt pos:start="121:9" pos:end="123:40"><if pos:start="121:9" pos:end="123:40">if <condition pos:start="121:12" pos:end="121:45">(<expr pos:start="121:13" pos:end="121:44"><name pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:14">ic</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:26">start_time</name></name> <operator pos:start="121:28" pos:end="121:29">!=</operator> <name pos:start="121:31" pos:end="121:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:40"><block_content pos:start="123:13" pos:end="123:40">

            <expr_stmt pos:start="123:13" pos:end="123:40"><expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:21">timestamp</name> <operator pos:start="123:23" pos:end="123:24">+=</operator> <name pos:start="123:26" pos:end="123:39"><name pos:start="123:26" pos:end="123:27">ic</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:39">start_time</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:77"><expr pos:start="125:9" pos:end="125:76"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:76"><name pos:start="125:15" pos:end="125:32">avformat_seek_file</name><argument_list pos:start="125:33" pos:end="125:76">(<argument pos:start="125:34" pos:end="125:35"><expr pos:start="125:34" pos:end="125:35"><name pos:start="125:34" pos:end="125:35">ic</name></expr></argument>, <argument pos:start="125:38" pos:end="125:39"><expr pos:start="125:38" pos:end="125:39"><operator pos:start="125:38" pos:end="125:38">-</operator><literal type="number" pos:start="125:39" pos:end="125:39">1</literal></expr></argument>, <argument pos:start="125:42" pos:end="125:50"><expr pos:start="125:42" pos:end="125:50"><name pos:start="125:42" pos:end="125:50">INT64_MIN</name></expr></argument>, <argument pos:start="125:53" pos:end="125:61"><expr pos:start="125:53" pos:end="125:61"><name pos:start="125:53" pos:end="125:61">timestamp</name></expr></argument>, <argument pos:start="125:64" pos:end="125:72"><expr pos:start="125:64" pos:end="125:72"><name pos:start="125:64" pos:end="125:72">INT64_MAX</name></expr></argument>, <argument pos:start="125:75" pos:end="125:75"><expr pos:start="125:75" pos:end="125:75"><literal type="number" pos:start="125:75" pos:end="125:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:20">(<expr pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:15">ret</name> <operator pos:start="127:17" pos:end="127:17">&lt;</operator> <literal type="number" pos:start="127:19" pos:end="127:19">0</literal></expr>)</condition> <block pos:start="127:22" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:68">

            <expr_stmt pos:start="129:13" pos:end="131:68"><expr pos:start="129:13" pos:end="131:67"><call pos:start="129:13" pos:end="131:67"><name pos:start="129:13" pos:end="129:19">fprintf</name><argument_list pos:start="129:20" pos:end="131:67">(<argument pos:start="129:21" pos:end="129:26"><expr pos:start="129:21" pos:end="129:26"><name pos:start="129:21" pos:end="129:26">stderr</name></expr></argument>, <argument pos:start="129:29" pos:end="129:68"><expr pos:start="129:29" pos:end="129:68"><literal type="string" pos:start="129:29" pos:end="129:68">"%s: could not seek to position %0.3f\n"</literal></expr></argument>,

                    <argument pos:start="131:21" pos:end="131:32"><expr pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:22">is</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:32">filename</name></name></expr></argument>, <argument pos:start="131:35" pos:end="131:66"><expr pos:start="131:35" pos:end="131:66"><operator pos:start="131:35" pos:end="131:35">(</operator><name pos:start="131:36" pos:end="131:41">double</name><operator pos:start="131:42" pos:end="131:42">)</operator><name pos:start="131:43" pos:end="131:51">timestamp</name> <operator pos:start="131:53" pos:end="131:53">/</operator> <name pos:start="131:55" pos:end="131:66">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="139:5" pos:end="141:48">for <control pos:start="139:9" pos:end="139:40">(<init pos:start="139:10" pos:end="139:15"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">i</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</init> <condition pos:start="139:17" pos:end="139:35"><expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:17">i</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <name pos:start="139:21" pos:end="139:34"><name pos:start="139:21" pos:end="139:22">ic</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:34">nb_streams</name></name></expr>;</condition> <incr pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:37">i</name><operator pos:start="139:38" pos:end="139:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:9" pos:end="141:48"><block_content pos:start="141:9" pos:end="141:48">

        <expr_stmt pos:start="141:9" pos:end="141:48"><expr pos:start="141:9" pos:end="141:47"><name pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:10">ic</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:19">streams</name><index pos:start="141:20" pos:end="141:22">[<expr pos:start="141:21" pos:end="141:21"><name pos:start="141:21" pos:end="141:21">i</name></expr>]</index></name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:31">discard</name> <operator pos:start="141:33" pos:end="141:33">=</operator> <name pos:start="141:35" pos:end="141:47">AVDISCARD_ALL</name></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="143:5" pos:end="149:80"><if pos:start="143:5" pos:end="149:80">if <condition pos:start="143:8" pos:end="143:23">(<expr pos:start="143:9" pos:end="143:22"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:22">video_disable</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="149:80"><block_content pos:start="145:9" pos:end="149:80">

        <expr_stmt pos:start="145:9" pos:end="149:80"><expr pos:start="145:9" pos:end="149:79"><name pos:start="145:9" pos:end="145:36"><name pos:start="145:9" pos:end="145:16">st_index</name><index pos:start="145:17" pos:end="145:36">[<expr pos:start="145:18" pos:end="145:35"><name pos:start="145:18" pos:end="145:35">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name> <operator pos:start="145:38" pos:end="145:38">=</operator>

            <call pos:start="147:13" pos:end="149:79"><name pos:start="147:13" pos:end="147:31">av_find_best_stream</name><argument_list pos:start="147:32" pos:end="149:79">(<argument pos:start="147:33" pos:end="147:34"><expr pos:start="147:33" pos:end="147:34"><name pos:start="147:33" pos:end="147:34">ic</name></expr></argument>, <argument pos:start="147:37" pos:end="147:54"><expr pos:start="147:37" pos:end="147:54"><name pos:start="147:37" pos:end="147:54">AVMEDIA_TYPE_VIDEO</name></expr></argument>,

                                <argument pos:start="149:33" pos:end="149:65"><expr pos:start="149:33" pos:end="149:65"><name pos:start="149:33" pos:end="149:65"><name pos:start="149:33" pos:end="149:45">wanted_stream</name><index pos:start="149:46" pos:end="149:65">[<expr pos:start="149:47" pos:end="149:64"><name pos:start="149:47" pos:end="149:64">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>, <argument pos:start="149:68" pos:end="149:69"><expr pos:start="149:68" pos:end="149:69"><operator pos:start="149:68" pos:end="149:68">-</operator><literal type="number" pos:start="149:69" pos:end="149:69">1</literal></expr></argument>, <argument pos:start="149:72" pos:end="149:75"><expr pos:start="149:72" pos:end="149:75"><name pos:start="149:72" pos:end="149:75">NULL</name></expr></argument>, <argument pos:start="149:78" pos:end="149:78"><expr pos:start="149:78" pos:end="149:78"><literal type="number" pos:start="149:78" pos:end="149:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="161:41"><if pos:start="151:5" pos:end="161:41">if <condition pos:start="151:8" pos:end="151:23">(<expr pos:start="151:9" pos:end="151:22"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:22">audio_disable</name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="161:41"><block_content pos:start="153:9" pos:end="161:41">

        <expr_stmt pos:start="153:9" pos:end="161:41"><expr pos:start="153:9" pos:end="161:40"><name pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:16">st_index</name><index pos:start="153:17" pos:end="153:36">[<expr pos:start="153:18" pos:end="153:35"><name pos:start="153:18" pos:end="153:35">AVMEDIA_TYPE_AUDIO</name></expr>]</index></name> <operator pos:start="153:38" pos:end="153:38">=</operator>

            <call pos:start="155:13" pos:end="161:40"><name pos:start="155:13" pos:end="155:31">av_find_best_stream</name><argument_list pos:start="155:32" pos:end="161:40">(<argument pos:start="155:33" pos:end="155:34"><expr pos:start="155:33" pos:end="155:34"><name pos:start="155:33" pos:end="155:34">ic</name></expr></argument>, <argument pos:start="155:37" pos:end="155:54"><expr pos:start="155:37" pos:end="155:54"><name pos:start="155:37" pos:end="155:54">AVMEDIA_TYPE_AUDIO</name></expr></argument>,

                                <argument pos:start="157:33" pos:end="157:65"><expr pos:start="157:33" pos:end="157:65"><name pos:start="157:33" pos:end="157:65"><name pos:start="157:33" pos:end="157:45">wanted_stream</name><index pos:start="157:46" pos:end="157:65">[<expr pos:start="157:47" pos:end="157:64"><name pos:start="157:47" pos:end="157:64">AVMEDIA_TYPE_AUDIO</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="159:33" pos:end="159:60"><expr pos:start="159:33" pos:end="159:60"><name pos:start="159:33" pos:end="159:60"><name pos:start="159:33" pos:end="159:40">st_index</name><index pos:start="159:41" pos:end="159:60">[<expr pos:start="159:42" pos:end="159:59"><name pos:start="159:42" pos:end="159:59">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="161:33" pos:end="161:36"><expr pos:start="161:33" pos:end="161:36"><name pos:start="161:33" pos:end="161:36">NULL</name></expr></argument>, <argument pos:start="161:39" pos:end="161:39"><expr pos:start="161:39" pos:end="161:39"><literal type="number" pos:start="161:39" pos:end="161:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="163:5" pos:end="177:41"><if pos:start="163:5" pos:end="177:41">if <condition pos:start="163:8" pos:end="163:23">(<expr pos:start="163:9" pos:end="163:22"><operator pos:start="163:9" pos:end="163:9">!</operator><name pos:start="163:10" pos:end="163:22">video_disable</name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="177:41"><block_content pos:start="165:9" pos:end="177:41">

        <expr_stmt pos:start="165:9" pos:end="177:41"><expr pos:start="165:9" pos:end="177:40"><name pos:start="165:9" pos:end="165:39"><name pos:start="165:9" pos:end="165:16">st_index</name><index pos:start="165:17" pos:end="165:39">[<expr pos:start="165:18" pos:end="165:38"><name pos:start="165:18" pos:end="165:38">AVMEDIA_TYPE_SUBTITLE</name></expr>]</index></name> <operator pos:start="165:41" pos:end="165:41">=</operator>

            <call pos:start="167:13" pos:end="177:40"><name pos:start="167:13" pos:end="167:31">av_find_best_stream</name><argument_list pos:start="167:32" pos:end="177:40">(<argument pos:start="167:33" pos:end="167:34"><expr pos:start="167:33" pos:end="167:34"><name pos:start="167:33" pos:end="167:34">ic</name></expr></argument>, <argument pos:start="167:37" pos:end="167:57"><expr pos:start="167:37" pos:end="167:57"><name pos:start="167:37" pos:end="167:57">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>,

                                <argument pos:start="169:33" pos:end="169:68"><expr pos:start="169:33" pos:end="169:68"><name pos:start="169:33" pos:end="169:68"><name pos:start="169:33" pos:end="169:45">wanted_stream</name><index pos:start="169:46" pos:end="169:68">[<expr pos:start="169:47" pos:end="169:67"><name pos:start="169:47" pos:end="169:67">AVMEDIA_TYPE_SUBTITLE</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="171:33" pos:end="175:62"><expr pos:start="171:33" pos:end="175:62"><operator pos:start="171:33" pos:end="171:33">(</operator><ternary pos:start="171:34" pos:end="175:61"><condition pos:start="171:34" pos:end="171:68"><expr pos:start="171:34" pos:end="171:66"><name pos:start="171:34" pos:end="171:61"><name pos:start="171:34" pos:end="171:41">st_index</name><index pos:start="171:42" pos:end="171:61">[<expr pos:start="171:43" pos:end="171:60"><name pos:start="171:43" pos:end="171:60">AVMEDIA_TYPE_AUDIO</name></expr>]</index></name> <operator pos:start="171:63" pos:end="171:64">&gt;=</operator> <literal type="number" pos:start="171:66" pos:end="171:66">0</literal></expr> ?</condition><then pos:start="173:34" pos:end="173:61">

                                 <expr pos:start="173:34" pos:end="173:61"><name pos:start="173:34" pos:end="173:61"><name pos:start="173:34" pos:end="173:41">st_index</name><index pos:start="173:42" pos:end="173:61">[<expr pos:start="173:43" pos:end="173:60"><name pos:start="173:43" pos:end="173:60">AVMEDIA_TYPE_AUDIO</name></expr>]</index></name></expr> </then><else pos:start="173:63" pos:end="175:61">:

                                 <expr pos:start="175:34" pos:end="175:61"><name pos:start="175:34" pos:end="175:61"><name pos:start="175:34" pos:end="175:41">st_index</name><index pos:start="175:42" pos:end="175:61">[<expr pos:start="175:43" pos:end="175:60"><name pos:start="175:43" pos:end="175:60">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></else></ternary><operator pos:start="175:62" pos:end="175:62">)</operator></expr></argument>,

                                <argument pos:start="177:33" pos:end="177:36"><expr pos:start="177:33" pos:end="177:36"><name pos:start="177:33" pos:end="177:36">NULL</name></expr></argument>, <argument pos:start="177:39" pos:end="177:39"><expr pos:start="177:39" pos:end="177:39"><literal type="number" pos:start="177:39" pos:end="177:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="183:5"><if pos:start="179:5" pos:end="183:5">if <condition pos:start="179:8" pos:end="179:20">(<expr pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:19">show_status</name></expr>)</condition> <block pos:start="179:22" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:47">

        <expr_stmt pos:start="181:9" pos:end="181:47"><expr pos:start="181:9" pos:end="181:46"><call pos:start="181:9" pos:end="181:46"><name pos:start="181:9" pos:end="181:22">av_dump_format</name><argument_list pos:start="181:23" pos:end="181:46">(<argument pos:start="181:24" pos:end="181:25"><expr pos:start="181:24" pos:end="181:25"><name pos:start="181:24" pos:end="181:25">ic</name></expr></argument>, <argument pos:start="181:28" pos:end="181:28"><expr pos:start="181:28" pos:end="181:28"><literal type="number" pos:start="181:28" pos:end="181:28">0</literal></expr></argument>, <argument pos:start="181:31" pos:end="181:42"><expr pos:start="181:31" pos:end="181:42"><name pos:start="181:31" pos:end="181:42"><name pos:start="181:31" pos:end="181:32">is</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:42">filename</name></name></expr></argument>, <argument pos:start="181:45" pos:end="181:45"><expr pos:start="181:45" pos:end="181:45"><literal type="number" pos:start="181:45" pos:end="181:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="187:5" pos:end="187:26">/* open the streams */</comment>

    <if_stmt pos:start="189:5" pos:end="193:5"><if pos:start="189:5" pos:end="193:5">if <condition pos:start="189:8" pos:end="189:42">(<expr pos:start="189:9" pos:end="189:41"><name pos:start="189:9" pos:end="189:36"><name pos:start="189:9" pos:end="189:16">st_index</name><index pos:start="189:17" pos:end="189:36">[<expr pos:start="189:18" pos:end="189:35"><name pos:start="189:18" pos:end="189:35">AVMEDIA_TYPE_AUDIO</name></expr>]</index></name> <operator pos:start="189:38" pos:end="189:39">&gt;=</operator> <literal type="number" pos:start="189:41" pos:end="189:41">0</literal></expr>)</condition> <block pos:start="189:44" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:64">

        <expr_stmt pos:start="191:9" pos:end="191:64"><expr pos:start="191:9" pos:end="191:63"><call pos:start="191:9" pos:end="191:63"><name pos:start="191:9" pos:end="191:29">stream_component_open</name><argument_list pos:start="191:30" pos:end="191:63">(<argument pos:start="191:31" pos:end="191:32"><expr pos:start="191:31" pos:end="191:32"><name pos:start="191:31" pos:end="191:32">is</name></expr></argument>, <argument pos:start="191:35" pos:end="191:62"><expr pos:start="191:35" pos:end="191:62"><name pos:start="191:35" pos:end="191:62"><name pos:start="191:35" pos:end="191:42">st_index</name><index pos:start="191:43" pos:end="191:62">[<expr pos:start="191:44" pos:end="191:61"><name pos:start="191:44" pos:end="191:61">AVMEDIA_TYPE_AUDIO</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:11"><expr pos:start="197:5" pos:end="197:10"><name pos:start="197:5" pos:end="197:7">ret</name><operator pos:start="197:8" pos:end="197:8">=</operator><operator pos:start="197:9" pos:end="197:9">-</operator><literal type="number" pos:start="197:10" pos:end="197:10">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="203:5"><if pos:start="199:5" pos:end="203:5">if <condition pos:start="199:8" pos:end="199:42">(<expr pos:start="199:9" pos:end="199:41"><name pos:start="199:9" pos:end="199:36"><name pos:start="199:9" pos:end="199:16">st_index</name><index pos:start="199:17" pos:end="199:36">[<expr pos:start="199:18" pos:end="199:35"><name pos:start="199:18" pos:end="199:35">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name> <operator pos:start="199:38" pos:end="199:39">&gt;=</operator> <literal type="number" pos:start="199:41" pos:end="199:41">0</literal></expr>)</condition> <block pos:start="199:44" pos:end="203:5">{<block_content pos:start="201:9" pos:end="201:69">

        <expr_stmt pos:start="201:9" pos:end="201:69"><expr pos:start="201:9" pos:end="201:68"><name pos:start="201:9" pos:end="201:11">ret</name><operator pos:start="201:12" pos:end="201:12">=</operator> <call pos:start="201:14" pos:end="201:68"><name pos:start="201:14" pos:end="201:34">stream_component_open</name><argument_list pos:start="201:35" pos:end="201:68">(<argument pos:start="201:36" pos:end="201:37"><expr pos:start="201:36" pos:end="201:37"><name pos:start="201:36" pos:end="201:37">is</name></expr></argument>, <argument pos:start="201:40" pos:end="201:67"><expr pos:start="201:40" pos:end="201:67"><name pos:start="201:40" pos:end="201:67"><name pos:start="201:40" pos:end="201:47">st_index</name><index pos:start="201:48" pos:end="201:67">[<expr pos:start="201:49" pos:end="201:66"><name pos:start="201:49" pos:end="201:66">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:59"><expr pos:start="205:5" pos:end="205:58"><name pos:start="205:5" pos:end="205:19"><name pos:start="205:5" pos:end="205:6">is</name><operator pos:start="205:7" pos:end="205:8">-&gt;</operator><name pos:start="205:9" pos:end="205:19">refresh_tid</name></name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:58"><name pos:start="205:23" pos:end="205:38">SDL_CreateThread</name><argument_list pos:start="205:39" pos:end="205:58">(<argument pos:start="205:40" pos:end="205:53"><expr pos:start="205:40" pos:end="205:53"><name pos:start="205:40" pos:end="205:53">refresh_thread</name></expr></argument>, <argument pos:start="205:56" pos:end="205:57"><expr pos:start="205:56" pos:end="205:57"><name pos:start="205:56" pos:end="205:57">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="213:5"><if pos:start="207:5" pos:end="213:5">if<condition pos:start="207:7" pos:end="207:13">(<expr pos:start="207:8" pos:end="207:12"><name pos:start="207:8" pos:end="207:10">ret</name><operator pos:start="207:11" pos:end="207:11">&lt;</operator><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>)</condition> <block pos:start="207:15" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:31">

        <if_stmt pos:start="209:9" pos:end="211:31"><if pos:start="209:9" pos:end="211:31">if <condition pos:start="209:12" pos:end="209:29">(<expr pos:start="209:13" pos:end="209:28"><operator pos:start="209:13" pos:end="209:13">!</operator><name pos:start="209:14" pos:end="209:28">display_disable</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:31"><block_content pos:start="211:13" pos:end="211:31">

            <expr_stmt pos:start="211:13" pos:end="211:31"><expr pos:start="211:13" pos:end="211:30"><name pos:start="211:13" pos:end="211:26"><name pos:start="211:13" pos:end="211:14">is</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:26">show_audio</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <literal type="number" pos:start="211:30" pos:end="211:30">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="221:5"><if pos:start="217:5" pos:end="221:5">if <condition pos:start="217:8" pos:end="217:45">(<expr pos:start="217:9" pos:end="217:44"><name pos:start="217:9" pos:end="217:39"><name pos:start="217:9" pos:end="217:16">st_index</name><index pos:start="217:17" pos:end="217:39">[<expr pos:start="217:18" pos:end="217:38"><name pos:start="217:18" pos:end="217:38">AVMEDIA_TYPE_SUBTITLE</name></expr>]</index></name> <operator pos:start="217:41" pos:end="217:42">&gt;=</operator> <literal type="number" pos:start="217:44" pos:end="217:44">0</literal></expr>)</condition> <block pos:start="217:47" pos:end="221:5">{<block_content pos:start="219:9" pos:end="219:67">

        <expr_stmt pos:start="219:9" pos:end="219:67"><expr pos:start="219:9" pos:end="219:66"><call pos:start="219:9" pos:end="219:66"><name pos:start="219:9" pos:end="219:29">stream_component_open</name><argument_list pos:start="219:30" pos:end="219:66">(<argument pos:start="219:31" pos:end="219:32"><expr pos:start="219:31" pos:end="219:32"><name pos:start="219:31" pos:end="219:32">is</name></expr></argument>, <argument pos:start="219:35" pos:end="219:65"><expr pos:start="219:35" pos:end="219:65"><name pos:start="219:35" pos:end="219:65"><name pos:start="219:35" pos:end="219:42">st_index</name><index pos:start="219:43" pos:end="219:65">[<expr pos:start="219:44" pos:end="219:64"><name pos:start="219:44" pos:end="219:64">AVMEDIA_TYPE_SUBTITLE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="225:5" pos:end="233:5"><if pos:start="225:5" pos:end="233:5">if <condition pos:start="225:8" pos:end="225:53">(<expr pos:start="225:9" pos:end="225:52"><name pos:start="225:9" pos:end="225:24"><name pos:start="225:9" pos:end="225:10">is</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:24">video_stream</name></name> <operator pos:start="225:26" pos:end="225:26">&lt;</operator> <literal type="number" pos:start="225:28" pos:end="225:28">0</literal> <operator pos:start="225:30" pos:end="225:31">&amp;&amp;</operator> <name pos:start="225:33" pos:end="225:48"><name pos:start="225:33" pos:end="225:34">is</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:48">audio_stream</name></name> <operator pos:start="225:50" pos:end="225:50">&lt;</operator> <literal type="number" pos:start="225:52" pos:end="225:52">0</literal></expr>)</condition> <block pos:start="225:55" pos:end="233:5">{<block_content pos:start="227:9" pos:end="231:18">

        <expr_stmt pos:start="227:9" pos:end="227:69"><expr pos:start="227:9" pos:end="227:68"><call pos:start="227:9" pos:end="227:68"><name pos:start="227:9" pos:end="227:15">fprintf</name><argument_list pos:start="227:16" pos:end="227:68">(<argument pos:start="227:17" pos:end="227:22"><expr pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:22">stderr</name></expr></argument>, <argument pos:start="227:25" pos:end="227:53"><expr pos:start="227:25" pos:end="227:53"><literal type="string" pos:start="227:25" pos:end="227:53">"%s: could not open codecs\n"</literal></expr></argument>, <argument pos:start="227:56" pos:end="227:67"><expr pos:start="227:56" pos:end="227:67"><name pos:start="227:56" pos:end="227:67"><name pos:start="227:56" pos:end="227:57">is</name><operator pos:start="227:58" pos:end="227:59">-&gt;</operator><name pos:start="227:60" pos:end="227:67">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:17"><expr pos:start="229:9" pos:end="229:16"><name pos:start="229:9" pos:end="229:11">ret</name> <operator pos:start="229:13" pos:end="229:13">=</operator> <operator pos:start="229:15" pos:end="229:15">-</operator><literal type="number" pos:start="229:16" pos:end="229:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="231:9" pos:end="231:18">goto <name pos:start="231:14" pos:end="231:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="237:5" pos:end="433:5">for<control pos:start="237:8" pos:end="237:11">(<init pos:start="237:9" pos:end="237:9">;</init><condition pos:start="237:10" pos:end="237:10">;</condition><incr/>)</control> <block pos:start="237:13" pos:end="433:5">{<block_content pos:start="239:9" pos:end="431:9">

        <if_stmt pos:start="239:9" pos:end="241:18"><if pos:start="239:9" pos:end="241:18">if <condition pos:start="239:12" pos:end="239:30">(<expr pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:14">is</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:29">abort_request</name></name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:18"><block_content pos:start="241:13" pos:end="241:18">

            <break pos:start="241:13" pos:end="241:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="243:9" pos:end="258:0"><if pos:start="243:9" pos:end="258:0">if <condition pos:start="243:12" pos:end="243:42">(<expr pos:start="243:13" pos:end="243:41"><name pos:start="243:13" pos:end="243:22"><name pos:start="243:13" pos:end="243:14">is</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:22">paused</name></name> <operator pos:start="243:24" pos:end="243:25">!=</operator> <name pos:start="243:27" pos:end="243:41"><name pos:start="243:27" pos:end="243:28">is</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:41">last_paused</name></name></expr>)</condition> <block pos:start="243:44" pos:end="258:0">{<block_content pos:start="245:13" pos:end="253:33">

            <expr_stmt pos:start="245:13" pos:end="245:41"><expr pos:start="245:13" pos:end="245:40"><name pos:start="245:13" pos:end="245:27"><name pos:start="245:13" pos:end="245:14">is</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:27">last_paused</name></name> <operator pos:start="245:29" pos:end="245:29">=</operator> <name pos:start="245:31" pos:end="245:40"><name pos:start="245:31" pos:end="245:32">is</name><operator pos:start="245:33" pos:end="245:34">-&gt;</operator><name pos:start="245:35" pos:end="245:40">paused</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="247:13" pos:end="253:33"><if pos:start="247:13" pos:end="249:57">if <condition pos:start="247:16" pos:end="247:27">(<expr pos:start="247:17" pos:end="247:26"><name pos:start="247:17" pos:end="247:26"><name pos:start="247:17" pos:end="247:18">is</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:26">paused</name></name></expr>)</condition><block type="pseudo" pos:start="249:17" pos:end="249:57"><block_content pos:start="249:17" pos:end="249:57">

                <expr_stmt pos:start="249:17" pos:end="249:57"><expr pos:start="249:17" pos:end="249:56"><name pos:start="249:17" pos:end="249:37"><name pos:start="249:17" pos:end="249:18">is</name><operator pos:start="249:19" pos:end="249:20">-&gt;</operator><name pos:start="249:21" pos:end="249:37">read_pause_return</name></name><operator pos:start="249:38" pos:end="249:38">=</operator> <call pos:start="249:40" pos:end="249:56"><name pos:start="249:40" pos:end="249:52">av_read_pause</name><argument_list pos:start="249:53" pos:end="249:56">(<argument pos:start="249:54" pos:end="249:55"><expr pos:start="249:54" pos:end="249:55"><name pos:start="249:54" pos:end="249:55">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="251:13" pos:end="253:33">else<block type="pseudo" pos:start="253:17" pos:end="253:33"><block_content pos:start="253:17" pos:end="253:33">

                <expr_stmt pos:start="253:17" pos:end="253:33"><expr pos:start="253:17" pos:end="253:32"><call pos:start="253:17" pos:end="253:32"><name pos:start="253:17" pos:end="253:28">av_read_play</name><argument_list pos:start="253:29" pos:end="253:32">(<argument pos:start="253:30" pos:end="253:31"><expr pos:start="253:30" pos:end="253:31"><name pos:start="253:30" pos:end="253:31">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="257:1" pos:end="257:23">#<cpp:directive pos:start="257:2" pos:end="257:3">if</cpp:directive> <expr pos:start="257:5" pos:end="257:23"><name pos:start="257:5" pos:end="257:23">CONFIG_RTSP_DEMUXER</name></expr></cpp:if>

        <if_stmt pos:start="259:9" pos:end="272:0"><if pos:start="259:9" pos:end="272:0">if <condition pos:start="259:12" pos:end="259:61">(<expr pos:start="259:13" pos:end="259:60"><name pos:start="259:13" pos:end="259:22"><name pos:start="259:13" pos:end="259:14">is</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:22">paused</name></name> <operator pos:start="259:24" pos:end="259:25">&amp;&amp;</operator> <operator pos:start="259:27" pos:end="259:27">!</operator><call pos:start="259:28" pos:end="259:60"><name pos:start="259:28" pos:end="259:33">strcmp</name><argument_list pos:start="259:34" pos:end="259:60">(<argument pos:start="259:35" pos:end="259:51"><expr pos:start="259:35" pos:end="259:51"><name pos:start="259:35" pos:end="259:51"><name pos:start="259:35" pos:end="259:36">ic</name><operator pos:start="259:37" pos:end="259:38">-&gt;</operator><name pos:start="259:39" pos:end="259:45">iformat</name><operator pos:start="259:46" pos:end="259:47">-&gt;</operator><name pos:start="259:48" pos:end="259:51">name</name></name></expr></argument>, <argument pos:start="259:54" pos:end="259:59"><expr pos:start="259:54" pos:end="259:59"><literal type="string" pos:start="259:54" pos:end="259:59">"rtsp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="259:63" pos:end="272:0">{<block_content pos:start="265:13" pos:end="267:21">

            <comment type="block" pos:start="261:13" pos:end="261:66">/* wait 10 ms to avoid trying to get another packet */</comment>

            <comment type="block" pos:start="263:13" pos:end="263:31">/* XXX: horrible */</comment>

            <expr_stmt pos:start="265:13" pos:end="265:26"><expr pos:start="265:13" pos:end="265:25"><call pos:start="265:13" pos:end="265:25"><name pos:start="265:13" pos:end="265:21">SDL_Delay</name><argument_list pos:start="265:22" pos:end="265:25">(<argument pos:start="265:23" pos:end="265:24"><expr pos:start="265:23" pos:end="265:24"><literal type="number" pos:start="265:23" pos:end="265:24">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="267:13" pos:end="267:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="271:1" pos:end="271:6">#<cpp:directive pos:start="271:2" pos:end="271:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="273:9" pos:end="325:9"><if pos:start="273:9" pos:end="325:9">if <condition pos:start="273:12" pos:end="273:25">(<expr pos:start="273:13" pos:end="273:24"><name pos:start="273:13" pos:end="273:24"><name pos:start="273:13" pos:end="273:14">is</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:24">seek_req</name></name></expr>)</condition> <block pos:start="273:27" pos:end="325:9">{<block_content pos:start="275:13" pos:end="323:19">

            <decl_stmt pos:start="275:13" pos:end="275:46"><decl pos:start="275:13" pos:end="275:45"><type pos:start="275:13" pos:end="275:19"><name pos:start="275:13" pos:end="275:19">int64_t</name></type> <name pos:start="275:21" pos:end="275:31">seek_target</name><init pos:start="275:32" pos:end="275:45">= <expr pos:start="275:34" pos:end="275:45"><name pos:start="275:34" pos:end="275:45"><name pos:start="275:34" pos:end="275:35">is</name><operator pos:start="275:36" pos:end="275:37">-&gt;</operator><name pos:start="275:38" pos:end="275:45">seek_pos</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="277:13" pos:end="277:91"><decl pos:start="277:13" pos:end="277:90"><type pos:start="277:13" pos:end="277:19"><name pos:start="277:13" pos:end="277:19">int64_t</name></type> <name pos:start="277:21" pos:end="277:28">seek_min</name><init pos:start="277:29" pos:end="277:90">= <expr pos:start="277:31" pos:end="277:90"><ternary pos:start="277:31" pos:end="277:90"><condition pos:start="277:31" pos:end="277:48"><expr pos:start="277:31" pos:end="277:46"><name pos:start="277:31" pos:end="277:42"><name pos:start="277:31" pos:end="277:32">is</name><operator pos:start="277:33" pos:end="277:34">-&gt;</operator><name pos:start="277:35" pos:end="277:42">seek_rel</name></name> <operator pos:start="277:44" pos:end="277:44">&gt;</operator> <literal type="number" pos:start="277:46" pos:end="277:46">0</literal></expr> ?</condition><then pos:start="277:50" pos:end="277:79"> <expr pos:start="277:50" pos:end="277:79"><name pos:start="277:50" pos:end="277:60">seek_target</name> <operator pos:start="277:62" pos:end="277:62">-</operator> <name pos:start="277:64" pos:end="277:75"><name pos:start="277:64" pos:end="277:65">is</name><operator pos:start="277:66" pos:end="277:67">-&gt;</operator><name pos:start="277:68" pos:end="277:75">seek_rel</name></name> <operator pos:start="277:77" pos:end="277:77">+</operator> <literal type="number" pos:start="277:79" pos:end="277:79">2</literal></expr></then><else pos:start="277:80" pos:end="277:90">: <expr pos:start="277:82" pos:end="277:90"><name pos:start="277:82" pos:end="277:90">INT64_MIN</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="279:13" pos:end="279:91"><decl pos:start="279:13" pos:end="279:90"><type pos:start="279:13" pos:end="279:19"><name pos:start="279:13" pos:end="279:19">int64_t</name></type> <name pos:start="279:21" pos:end="279:28">seek_max</name><init pos:start="279:29" pos:end="279:90">= <expr pos:start="279:31" pos:end="279:90"><ternary pos:start="279:31" pos:end="279:90"><condition pos:start="279:31" pos:end="279:48"><expr pos:start="279:31" pos:end="279:46"><name pos:start="279:31" pos:end="279:42"><name pos:start="279:31" pos:end="279:32">is</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:42">seek_rel</name></name> <operator pos:start="279:44" pos:end="279:44">&lt;</operator> <literal type="number" pos:start="279:46" pos:end="279:46">0</literal></expr> ?</condition><then pos:start="279:50" pos:end="279:79"> <expr pos:start="279:50" pos:end="279:79"><name pos:start="279:50" pos:end="279:60">seek_target</name> <operator pos:start="279:62" pos:end="279:62">-</operator> <name pos:start="279:64" pos:end="279:75"><name pos:start="279:64" pos:end="279:65">is</name><operator pos:start="279:66" pos:end="279:67">-&gt;</operator><name pos:start="279:68" pos:end="279:75">seek_rel</name></name> <operator pos:start="279:77" pos:end="279:77">-</operator> <literal type="number" pos:start="279:79" pos:end="279:79">2</literal></expr></then><else pos:start="279:80" pos:end="279:90">: <expr pos:start="279:82" pos:end="279:90"><name pos:start="279:82" pos:end="279:90">INT64_MAX</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<comment type="line" pos:start="281:1" pos:end="281:88">//FIXME the +-2 is due to rounding being not done in the correct direction in generation</comment>

<comment type="line" pos:start="283:1" pos:end="283:42">//      of the seek_pos/seek_rel variables</comment>



            <expr_stmt pos:start="287:13" pos:end="287:98"><expr pos:start="287:13" pos:end="287:97"><name pos:start="287:13" pos:end="287:15">ret</name> <operator pos:start="287:17" pos:end="287:17">=</operator> <call pos:start="287:19" pos:end="287:97"><name pos:start="287:19" pos:end="287:36">avformat_seek_file</name><argument_list pos:start="287:37" pos:end="287:97">(<argument pos:start="287:38" pos:end="287:43"><expr pos:start="287:38" pos:end="287:43"><name pos:start="287:38" pos:end="287:43"><name pos:start="287:38" pos:end="287:39">is</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:43">ic</name></name></expr></argument>, <argument pos:start="287:46" pos:end="287:47"><expr pos:start="287:46" pos:end="287:47"><operator pos:start="287:46" pos:end="287:46">-</operator><literal type="number" pos:start="287:47" pos:end="287:47">1</literal></expr></argument>, <argument pos:start="287:50" pos:end="287:57"><expr pos:start="287:50" pos:end="287:57"><name pos:start="287:50" pos:end="287:57">seek_min</name></expr></argument>, <argument pos:start="287:60" pos:end="287:70"><expr pos:start="287:60" pos:end="287:70"><name pos:start="287:60" pos:end="287:70">seek_target</name></expr></argument>, <argument pos:start="287:73" pos:end="287:80"><expr pos:start="287:73" pos:end="287:80"><name pos:start="287:73" pos:end="287:80">seek_max</name></expr></argument>, <argument pos:start="287:83" pos:end="287:96"><expr pos:start="287:83" pos:end="287:96"><name pos:start="287:83" pos:end="287:96"><name pos:start="287:83" pos:end="287:84">is</name><operator pos:start="287:85" pos:end="287:86">-&gt;</operator><name pos:start="287:87" pos:end="287:96">seek_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="289:13" pos:end="319:13"><if pos:start="289:13" pos:end="293:13">if <condition pos:start="289:16" pos:end="289:24">(<expr pos:start="289:17" pos:end="289:23"><name pos:start="289:17" pos:end="289:19">ret</name> <operator pos:start="289:21" pos:end="289:21">&lt;</operator> <literal type="number" pos:start="289:23" pos:end="289:23">0</literal></expr>)</condition> <block pos:start="289:26" pos:end="293:13">{<block_content pos:start="291:17" pos:end="291:79">

                <expr_stmt pos:start="291:17" pos:end="291:79"><expr pos:start="291:17" pos:end="291:78"><call pos:start="291:17" pos:end="291:78"><name pos:start="291:17" pos:end="291:23">fprintf</name><argument_list pos:start="291:24" pos:end="291:78">(<argument pos:start="291:25" pos:end="291:30"><expr pos:start="291:25" pos:end="291:30"><name pos:start="291:25" pos:end="291:30">stderr</name></expr></argument>, <argument pos:start="291:33" pos:end="291:59"><expr pos:start="291:33" pos:end="291:59"><literal type="string" pos:start="291:33" pos:end="291:59">"%s: error while seeking\n"</literal></expr></argument>, <argument pos:start="291:62" pos:end="291:77"><expr pos:start="291:62" pos:end="291:77"><name pos:start="291:62" pos:end="291:77"><name pos:start="291:62" pos:end="291:63">is</name><operator pos:start="291:64" pos:end="291:65">-&gt;</operator><name pos:start="291:66" pos:end="291:67">ic</name><operator pos:start="291:68" pos:end="291:69">-&gt;</operator><name pos:start="291:70" pos:end="291:77">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="293:14" pos:end="319:13">else<block pos:start="293:18" pos:end="319:13">{<block_content pos:start="295:17" pos:end="317:17">

                <if_stmt pos:start="295:17" pos:end="301:17"><if pos:start="295:17" pos:end="301:17">if <condition pos:start="295:20" pos:end="295:42">(<expr pos:start="295:21" pos:end="295:41"><name pos:start="295:21" pos:end="295:36"><name pos:start="295:21" pos:end="295:22">is</name><operator pos:start="295:23" pos:end="295:24">-&gt;</operator><name pos:start="295:25" pos:end="295:36">audio_stream</name></name> <operator pos:start="295:38" pos:end="295:39">&gt;=</operator> <literal type="number" pos:start="295:41" pos:end="295:41">0</literal></expr>)</condition> <block pos:start="295:44" pos:end="301:17">{<block_content pos:start="297:21" pos:end="299:62">

                    <expr_stmt pos:start="297:21" pos:end="297:52"><expr pos:start="297:21" pos:end="297:51"><call pos:start="297:21" pos:end="297:51"><name pos:start="297:21" pos:end="297:38">packet_queue_flush</name><argument_list pos:start="297:39" pos:end="297:51">(<argument pos:start="297:40" pos:end="297:50"><expr pos:start="297:40" pos:end="297:50"><operator pos:start="297:40" pos:end="297:40">&amp;</operator><name pos:start="297:41" pos:end="297:50"><name pos:start="297:41" pos:end="297:42">is</name><operator pos:start="297:43" pos:end="297:44">-&gt;</operator><name pos:start="297:45" pos:end="297:50">audioq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="299:21" pos:end="299:62"><expr pos:start="299:21" pos:end="299:61"><call pos:start="299:21" pos:end="299:61"><name pos:start="299:21" pos:end="299:36">packet_queue_put</name><argument_list pos:start="299:37" pos:end="299:61">(<argument pos:start="299:38" pos:end="299:48"><expr pos:start="299:38" pos:end="299:48"><operator pos:start="299:38" pos:end="299:38">&amp;</operator><name pos:start="299:39" pos:end="299:48"><name pos:start="299:39" pos:end="299:40">is</name><operator pos:start="299:41" pos:end="299:42">-&gt;</operator><name pos:start="299:43" pos:end="299:48">audioq</name></name></expr></argument>, <argument pos:start="299:51" pos:end="299:60"><expr pos:start="299:51" pos:end="299:60"><operator pos:start="299:51" pos:end="299:51">&amp;</operator><name pos:start="299:52" pos:end="299:60">flush_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="303:17" pos:end="309:17"><if pos:start="303:17" pos:end="309:17">if <condition pos:start="303:20" pos:end="303:45">(<expr pos:start="303:21" pos:end="303:44"><name pos:start="303:21" pos:end="303:39"><name pos:start="303:21" pos:end="303:22">is</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:39">subtitle_stream</name></name> <operator pos:start="303:41" pos:end="303:42">&gt;=</operator> <literal type="number" pos:start="303:44" pos:end="303:44">0</literal></expr>)</condition> <block pos:start="303:47" pos:end="309:17">{<block_content pos:start="305:21" pos:end="307:65">

                    <expr_stmt pos:start="305:21" pos:end="305:55"><expr pos:start="305:21" pos:end="305:54"><call pos:start="305:21" pos:end="305:54"><name pos:start="305:21" pos:end="305:38">packet_queue_flush</name><argument_list pos:start="305:39" pos:end="305:54">(<argument pos:start="305:40" pos:end="305:53"><expr pos:start="305:40" pos:end="305:53"><operator pos:start="305:40" pos:end="305:40">&amp;</operator><name pos:start="305:41" pos:end="305:53"><name pos:start="305:41" pos:end="305:42">is</name><operator pos:start="305:43" pos:end="305:44">-&gt;</operator><name pos:start="305:45" pos:end="305:53">subtitleq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:65"><expr pos:start="307:21" pos:end="307:64"><call pos:start="307:21" pos:end="307:64"><name pos:start="307:21" pos:end="307:36">packet_queue_put</name><argument_list pos:start="307:37" pos:end="307:64">(<argument pos:start="307:38" pos:end="307:51"><expr pos:start="307:38" pos:end="307:51"><operator pos:start="307:38" pos:end="307:38">&amp;</operator><name pos:start="307:39" pos:end="307:51"><name pos:start="307:39" pos:end="307:40">is</name><operator pos:start="307:41" pos:end="307:42">-&gt;</operator><name pos:start="307:43" pos:end="307:51">subtitleq</name></name></expr></argument>, <argument pos:start="307:54" pos:end="307:63"><expr pos:start="307:54" pos:end="307:63"><operator pos:start="307:54" pos:end="307:54">&amp;</operator><name pos:start="307:55" pos:end="307:63">flush_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="311:17" pos:end="317:17"><if pos:start="311:17" pos:end="317:17">if <condition pos:start="311:20" pos:end="311:42">(<expr pos:start="311:21" pos:end="311:41"><name pos:start="311:21" pos:end="311:36"><name pos:start="311:21" pos:end="311:22">is</name><operator pos:start="311:23" pos:end="311:24">-&gt;</operator><name pos:start="311:25" pos:end="311:36">video_stream</name></name> <operator pos:start="311:38" pos:end="311:39">&gt;=</operator> <literal type="number" pos:start="311:41" pos:end="311:41">0</literal></expr>)</condition> <block pos:start="311:44" pos:end="317:17">{<block_content pos:start="313:21" pos:end="315:62">

                    <expr_stmt pos:start="313:21" pos:end="313:52"><expr pos:start="313:21" pos:end="313:51"><call pos:start="313:21" pos:end="313:51"><name pos:start="313:21" pos:end="313:38">packet_queue_flush</name><argument_list pos:start="313:39" pos:end="313:51">(<argument pos:start="313:40" pos:end="313:50"><expr pos:start="313:40" pos:end="313:50"><operator pos:start="313:40" pos:end="313:40">&amp;</operator><name pos:start="313:41" pos:end="313:50"><name pos:start="313:41" pos:end="313:42">is</name><operator pos:start="313:43" pos:end="313:44">-&gt;</operator><name pos:start="313:45" pos:end="313:50">videoq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="315:21" pos:end="315:62"><expr pos:start="315:21" pos:end="315:61"><call pos:start="315:21" pos:end="315:61"><name pos:start="315:21" pos:end="315:36">packet_queue_put</name><argument_list pos:start="315:37" pos:end="315:61">(<argument pos:start="315:38" pos:end="315:48"><expr pos:start="315:38" pos:end="315:48"><operator pos:start="315:38" pos:end="315:38">&amp;</operator><name pos:start="315:39" pos:end="315:48"><name pos:start="315:39" pos:end="315:40">is</name><operator pos:start="315:41" pos:end="315:42">-&gt;</operator><name pos:start="315:43" pos:end="315:48">videoq</name></name></expr></argument>, <argument pos:start="315:51" pos:end="315:60"><expr pos:start="315:51" pos:end="315:60"><operator pos:start="315:51" pos:end="315:51">&amp;</operator><name pos:start="315:52" pos:end="315:60">flush_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:29"><expr pos:start="321:13" pos:end="321:28"><name pos:start="321:13" pos:end="321:24"><name pos:start="321:13" pos:end="321:14">is</name><operator pos:start="321:15" pos:end="321:16">-&gt;</operator><name pos:start="321:17" pos:end="321:24">seek_req</name></name> <operator pos:start="321:26" pos:end="321:26">=</operator> <literal type="number" pos:start="321:28" pos:end="321:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:19"><expr pos:start="323:13" pos:end="323:18"><name pos:start="323:13" pos:end="323:15">eof</name><operator pos:start="323:16" pos:end="323:16">=</operator> <literal type="number" pos:start="323:18" pos:end="323:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="329:9" pos:end="329:57">/* if the queue are full, no need to read more */</comment>

        <if_stmt pos:start="331:9" pos:end="345:9"><if pos:start="331:9" pos:end="345:9">if <condition pos:start="331:12" pos:end="337:85">(   <expr pos:start="331:16" pos:end="337:84"><name pos:start="331:16" pos:end="331:30"><name pos:start="331:16" pos:end="331:17">is</name><operator pos:start="331:18" pos:end="331:19">-&gt;</operator><name pos:start="331:20" pos:end="331:25">audioq</name><operator pos:start="331:26" pos:end="331:26">.</operator><name pos:start="331:27" pos:end="331:30">size</name></name> <operator pos:start="331:32" pos:end="331:32">+</operator> <name pos:start="331:34" pos:end="331:48"><name pos:start="331:34" pos:end="331:35">is</name><operator pos:start="331:36" pos:end="331:37">-&gt;</operator><name pos:start="331:38" pos:end="331:43">videoq</name><operator pos:start="331:44" pos:end="331:44">.</operator><name pos:start="331:45" pos:end="331:48">size</name></name> <operator pos:start="331:50" pos:end="331:50">+</operator> <name pos:start="331:52" pos:end="331:69"><name pos:start="331:52" pos:end="331:53">is</name><operator pos:start="331:54" pos:end="331:55">-&gt;</operator><name pos:start="331:56" pos:end="331:64">subtitleq</name><operator pos:start="331:65" pos:end="331:65">.</operator><name pos:start="331:66" pos:end="331:69">size</name></name> <operator pos:start="331:71" pos:end="331:71">&gt;</operator> <name pos:start="331:73" pos:end="331:86">MAX_QUEUE_SIZE</name>

            <operator pos:start="333:13" pos:end="333:14">||</operator> <operator pos:start="333:16" pos:end="333:16">(</operator>   <operator pos:start="333:20" pos:end="333:20">(</operator><name pos:start="333:21" pos:end="333:38"><name pos:start="333:21" pos:end="333:22">is</name><operator pos:start="333:23" pos:end="333:24">-&gt;</operator><name pos:start="333:25" pos:end="333:30">audioq</name>   <operator pos:start="333:34" pos:end="333:34">.</operator><name pos:start="333:35" pos:end="333:38">size</name></name>  <operator pos:start="333:41" pos:end="333:41">&gt;</operator> <name pos:start="333:43" pos:end="333:57">MIN_AUDIOQ_SIZE</name> <operator pos:start="333:59" pos:end="333:60">||</operator> <name pos:start="333:62" pos:end="333:77"><name pos:start="333:62" pos:end="333:63">is</name><operator pos:start="333:64" pos:end="333:65">-&gt;</operator><name pos:start="333:66" pos:end="333:77">audio_stream</name></name><operator pos:start="333:78" pos:end="333:78">&lt;</operator><literal type="number" pos:start="333:79" pos:end="333:79">0</literal><operator pos:start="333:80" pos:end="333:80">)</operator>

                <operator pos:start="335:17" pos:end="335:18">&amp;&amp;</operator> <operator pos:start="335:20" pos:end="335:20">(</operator><name pos:start="335:21" pos:end="335:44"><name pos:start="335:21" pos:end="335:22">is</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:30">videoq</name>   <operator pos:start="335:34" pos:end="335:34">.</operator><name pos:start="335:35" pos:end="335:44">nb_packets</name></name> <operator pos:start="335:46" pos:end="335:46">&gt;</operator> <name pos:start="335:48" pos:end="335:57">MIN_FRAMES</name> <operator pos:start="335:59" pos:end="335:60">||</operator> <name pos:start="335:62" pos:end="335:77"><name pos:start="335:62" pos:end="335:63">is</name><operator pos:start="335:64" pos:end="335:65">-&gt;</operator><name pos:start="335:66" pos:end="335:77">video_stream</name></name><operator pos:start="335:78" pos:end="335:78">&lt;</operator><literal type="number" pos:start="335:79" pos:end="335:79">0</literal><operator pos:start="335:80" pos:end="335:80">)</operator>

                <operator pos:start="337:17" pos:end="337:18">&amp;&amp;</operator> <operator pos:start="337:20" pos:end="337:20">(</operator><name pos:start="337:21" pos:end="337:44"><name pos:start="337:21" pos:end="337:22">is</name><operator pos:start="337:23" pos:end="337:24">-&gt;</operator><name pos:start="337:25" pos:end="337:33">subtitleq</name><operator pos:start="337:34" pos:end="337:34">.</operator><name pos:start="337:35" pos:end="337:44">nb_packets</name></name> <operator pos:start="337:46" pos:end="337:46">&gt;</operator> <name pos:start="337:48" pos:end="337:57">MIN_FRAMES</name> <operator pos:start="337:59" pos:end="337:60">||</operator> <name pos:start="337:62" pos:end="337:80"><name pos:start="337:62" pos:end="337:63">is</name><operator pos:start="337:64" pos:end="337:65">-&gt;</operator><name pos:start="337:66" pos:end="337:80">subtitle_stream</name></name><operator pos:start="337:81" pos:end="337:81">&lt;</operator><literal type="number" pos:start="337:82" pos:end="337:82">0</literal><operator pos:start="337:83" pos:end="337:83">)</operator><operator pos:start="337:84" pos:end="337:84">)</operator></expr>)</condition> <block pos:start="337:87" pos:end="345:9">{<block_content pos:start="341:13" pos:end="343:21">

            <comment type="block" pos:start="339:13" pos:end="339:28">/* wait 10 ms */</comment>

            <expr_stmt pos:start="341:13" pos:end="341:26"><expr pos:start="341:13" pos:end="341:25"><call pos:start="341:13" pos:end="341:25"><name pos:start="341:13" pos:end="341:21">SDL_Delay</name><argument_list pos:start="341:22" pos:end="341:25">(<argument pos:start="341:23" pos:end="341:24"><expr pos:start="341:23" pos:end="341:24"><literal type="number" pos:start="341:23" pos:end="341:24">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="343:13" pos:end="343:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="347:9" pos:end="383:9"><if pos:start="347:9" pos:end="383:9">if<condition pos:start="347:11" pos:end="347:15">(<expr pos:start="347:12" pos:end="347:14"><name pos:start="347:12" pos:end="347:14">eof</name></expr>)</condition> <block pos:start="347:17" pos:end="383:9">{<block_content pos:start="349:13" pos:end="381:21">

            <if_stmt pos:start="349:13" pos:end="361:13"><if pos:start="349:13" pos:end="361:13">if<condition pos:start="349:15" pos:end="349:37">(<expr pos:start="349:16" pos:end="349:36"><name pos:start="349:16" pos:end="349:31"><name pos:start="349:16" pos:end="349:17">is</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:31">video_stream</name></name> <operator pos:start="349:33" pos:end="349:34">&gt;=</operator> <literal type="number" pos:start="349:36" pos:end="349:36">0</literal></expr>)</condition><block pos:start="349:38" pos:end="361:13">{<block_content pos:start="351:17" pos:end="359:51">

                <expr_stmt pos:start="351:17" pos:end="351:36"><expr pos:start="351:17" pos:end="351:35"><call pos:start="351:17" pos:end="351:35"><name pos:start="351:17" pos:end="351:30">av_init_packet</name><argument_list pos:start="351:31" pos:end="351:35">(<argument pos:start="351:32" pos:end="351:34"><expr pos:start="351:32" pos:end="351:34"><name pos:start="351:32" pos:end="351:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:31"><expr pos:start="353:17" pos:end="353:30"><name pos:start="353:17" pos:end="353:25"><name pos:start="353:17" pos:end="353:19">pkt</name><operator pos:start="353:20" pos:end="353:21">-&gt;</operator><name pos:start="353:22" pos:end="353:25">data</name></name><operator pos:start="353:26" pos:end="353:26">=</operator><name pos:start="353:27" pos:end="353:30">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:28"><expr pos:start="355:17" pos:end="355:27"><name pos:start="355:17" pos:end="355:25"><name pos:start="355:17" pos:end="355:19">pkt</name><operator pos:start="355:20" pos:end="355:21">-&gt;</operator><name pos:start="355:22" pos:end="355:25">size</name></name><operator pos:start="355:26" pos:end="355:26">=</operator><literal type="number" pos:start="355:27" pos:end="355:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:52"><expr pos:start="357:17" pos:end="357:51"><name pos:start="357:17" pos:end="357:33"><name pos:start="357:17" pos:end="357:19">pkt</name><operator pos:start="357:20" pos:end="357:21">-&gt;</operator><name pos:start="357:22" pos:end="357:33">stream_index</name></name><operator pos:start="357:34" pos:end="357:34">=</operator> <name pos:start="357:36" pos:end="357:51"><name pos:start="357:36" pos:end="357:37">is</name><operator pos:start="357:38" pos:end="357:39">-&gt;</operator><name pos:start="357:40" pos:end="357:51">video_stream</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:51"><expr pos:start="359:17" pos:end="359:50"><call pos:start="359:17" pos:end="359:50"><name pos:start="359:17" pos:end="359:32">packet_queue_put</name><argument_list pos:start="359:33" pos:end="359:50">(<argument pos:start="359:34" pos:end="359:44"><expr pos:start="359:34" pos:end="359:44"><operator pos:start="359:34" pos:end="359:34">&amp;</operator><name pos:start="359:35" pos:end="359:44"><name pos:start="359:35" pos:end="359:36">is</name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:44">videoq</name></name></expr></argument>, <argument pos:start="359:47" pos:end="359:49"><expr pos:start="359:47" pos:end="359:49"><name pos:start="359:47" pos:end="359:49">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:26"><expr pos:start="363:13" pos:end="363:25"><call pos:start="363:13" pos:end="363:25"><name pos:start="363:13" pos:end="363:21">SDL_Delay</name><argument_list pos:start="363:22" pos:end="363:25">(<argument pos:start="363:23" pos:end="363:24"><expr pos:start="363:23" pos:end="363:24"><literal type="number" pos:start="363:23" pos:end="363:24">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="365:13" pos:end="379:13"><if pos:start="365:13" pos:end="379:13">if<condition pos:start="365:15" pos:end="365:74">(<expr pos:start="365:16" pos:end="365:73"><name pos:start="365:16" pos:end="365:30"><name pos:start="365:16" pos:end="365:17">is</name><operator pos:start="365:18" pos:end="365:19">-&gt;</operator><name pos:start="365:20" pos:end="365:25">audioq</name><operator pos:start="365:26" pos:end="365:26">.</operator><name pos:start="365:27" pos:end="365:30">size</name></name> <operator pos:start="365:32" pos:end="365:32">+</operator> <name pos:start="365:34" pos:end="365:48"><name pos:start="365:34" pos:end="365:35">is</name><operator pos:start="365:36" pos:end="365:37">-&gt;</operator><name pos:start="365:38" pos:end="365:43">videoq</name><operator pos:start="365:44" pos:end="365:44">.</operator><name pos:start="365:45" pos:end="365:48">size</name></name> <operator pos:start="365:50" pos:end="365:50">+</operator> <name pos:start="365:52" pos:end="365:69"><name pos:start="365:52" pos:end="365:53">is</name><operator pos:start="365:54" pos:end="365:55">-&gt;</operator><name pos:start="365:56" pos:end="365:64">subtitleq</name><operator pos:start="365:65" pos:end="365:65">.</operator><name pos:start="365:66" pos:end="365:69">size</name></name> <operator pos:start="365:71" pos:end="365:72">==</operator><literal type="number" pos:start="365:73" pos:end="365:73">0</literal></expr>)</condition><block pos:start="365:75" pos:end="379:13">{<block_content pos:start="367:17" pos:end="377:17">

                <if_stmt pos:start="367:17" pos:end="377:17"><if pos:start="367:17" pos:end="371:17">if<condition pos:start="367:19" pos:end="367:48">(<expr pos:start="367:20" pos:end="367:47"><name pos:start="367:20" pos:end="367:23">loop</name><operator pos:start="367:24" pos:end="367:25">!=</operator><literal type="number" pos:start="367:26" pos:end="367:26">1</literal> <operator pos:start="367:28" pos:end="367:29">&amp;&amp;</operator> <operator pos:start="367:31" pos:end="367:31">(</operator><operator pos:start="367:32" pos:end="367:32">!</operator><name pos:start="367:33" pos:end="367:36">loop</name> <operator pos:start="367:38" pos:end="367:39">||</operator> <operator pos:start="367:41" pos:end="367:42">--</operator><name pos:start="367:43" pos:end="367:46">loop</name><operator pos:start="367:47" pos:end="367:47">)</operator></expr>)</condition><block pos:start="367:49" pos:end="371:17">{<block_content pos:start="369:21" pos:end="369:97">

                    <expr_stmt pos:start="369:21" pos:end="369:97"><expr pos:start="369:21" pos:end="369:96"><call pos:start="369:21" pos:end="369:96"><name pos:start="369:21" pos:end="369:31">stream_seek</name><argument_list pos:start="369:32" pos:end="369:96">(<argument pos:start="369:33" pos:end="369:42"><expr pos:start="369:33" pos:end="369:42"><name pos:start="369:33" pos:end="369:42">cur_stream</name></expr></argument>, <argument pos:start="369:45" pos:end="369:89"><expr pos:start="369:45" pos:end="369:89"><ternary pos:start="369:45" pos:end="369:89"><condition pos:start="369:45" pos:end="369:74"><expr pos:start="369:45" pos:end="369:72"><name pos:start="369:45" pos:end="369:54">start_time</name> <operator pos:start="369:56" pos:end="369:57">!=</operator> <name pos:start="369:59" pos:end="369:72">AV_NOPTS_VALUE</name></expr> ?</condition><then pos:start="369:76" pos:end="369:85"> <expr pos:start="369:76" pos:end="369:85"><name pos:start="369:76" pos:end="369:85">start_time</name></expr> </then><else pos:start="369:87" pos:end="369:89">: <expr pos:start="369:89" pos:end="369:89"><literal type="number" pos:start="369:89" pos:end="369:89">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="369:92" pos:end="369:92"><expr pos:start="369:92" pos:end="369:92"><literal type="number" pos:start="369:92" pos:end="369:92">0</literal></expr></argument>, <argument pos:start="369:95" pos:end="369:95"><expr pos:start="369:95" pos:end="369:95"><literal type="number" pos:start="369:95" pos:end="369:95">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><if type="elseif" pos:start="371:18" pos:end="377:17">else if<condition pos:start="371:25" pos:end="371:34">(<expr pos:start="371:26" pos:end="371:33"><name pos:start="371:26" pos:end="371:33">autoexit</name></expr>)</condition><block pos:start="371:35" pos:end="377:17">{<block_content pos:start="373:21" pos:end="375:30">

                    <expr_stmt pos:start="373:21" pos:end="373:36"><expr pos:start="373:21" pos:end="373:35"><name pos:start="373:21" pos:end="373:23">ret</name><operator pos:start="373:24" pos:end="373:24">=</operator><name pos:start="373:25" pos:end="373:35">AVERROR_EOF</name></expr>;</expr_stmt>

                    <goto pos:start="375:21" pos:end="375:30">goto <name pos:start="375:26" pos:end="375:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <continue pos:start="381:13" pos:end="381:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:37"><expr pos:start="385:9" pos:end="385:36"><name pos:start="385:9" pos:end="385:11">ret</name> <operator pos:start="385:13" pos:end="385:13">=</operator> <call pos:start="385:15" pos:end="385:36"><name pos:start="385:15" pos:end="385:27">av_read_frame</name><argument_list pos:start="385:28" pos:end="385:36">(<argument pos:start="385:29" pos:end="385:30"><expr pos:start="385:29" pos:end="385:30"><name pos:start="385:29" pos:end="385:30">ic</name></expr></argument>, <argument pos:start="385:33" pos:end="385:35"><expr pos:start="385:33" pos:end="385:35"><name pos:start="385:33" pos:end="385:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="387:9" pos:end="401:9"><if pos:start="387:9" pos:end="401:9">if <condition pos:start="387:12" pos:end="387:20">(<expr pos:start="387:13" pos:end="387:19"><name pos:start="387:13" pos:end="387:15">ret</name> <operator pos:start="387:17" pos:end="387:17">&lt;</operator> <literal type="number" pos:start="387:19" pos:end="387:19">0</literal></expr>)</condition> <block pos:start="387:22" pos:end="401:9">{<block_content pos:start="389:13" pos:end="399:21">

            <if_stmt pos:start="389:13" pos:end="391:22"><if pos:start="389:13" pos:end="391:22">if <condition pos:start="389:16" pos:end="389:58">(<expr pos:start="389:17" pos:end="389:57"><name pos:start="389:17" pos:end="389:19">ret</name> <operator pos:start="389:21" pos:end="389:22">==</operator> <name pos:start="389:24" pos:end="389:34">AVERROR_EOF</name> <operator pos:start="389:36" pos:end="389:37">||</operator> <name pos:start="389:39" pos:end="389:57"><name pos:start="389:39" pos:end="389:40">ic</name><operator pos:start="389:41" pos:end="389:42">-&gt;</operator><name pos:start="389:43" pos:end="389:44">pb</name><operator pos:start="389:45" pos:end="389:46">-&gt;</operator><name pos:start="389:47" pos:end="389:57">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="391:17" pos:end="391:22"><block_content pos:start="391:17" pos:end="391:22">

                <expr_stmt pos:start="391:17" pos:end="391:22"><expr pos:start="391:17" pos:end="391:21"><name pos:start="391:17" pos:end="391:19">eof</name><operator pos:start="391:20" pos:end="391:20">=</operator><literal type="number" pos:start="391:21" pos:end="391:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="393:13" pos:end="395:22"><if pos:start="393:13" pos:end="395:22">if <condition pos:start="393:16" pos:end="393:30">(<expr pos:start="393:17" pos:end="393:29"><name pos:start="393:17" pos:end="393:29"><name pos:start="393:17" pos:end="393:18">ic</name><operator pos:start="393:19" pos:end="393:20">-&gt;</operator><name pos:start="393:21" pos:end="393:22">pb</name><operator pos:start="393:23" pos:end="393:24">-&gt;</operator><name pos:start="393:25" pos:end="393:29">error</name></name></expr>)</condition><block type="pseudo" pos:start="395:17" pos:end="395:22"><block_content pos:start="395:17" pos:end="395:22">

                <break pos:start="395:17" pos:end="395:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:27"><expr pos:start="397:13" pos:end="397:26"><call pos:start="397:13" pos:end="397:26"><name pos:start="397:13" pos:end="397:21">SDL_Delay</name><argument_list pos:start="397:22" pos:end="397:26">(<argument pos:start="397:23" pos:end="397:25"><expr pos:start="397:23" pos:end="397:25"><literal type="number" pos:start="397:23" pos:end="397:25">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="397:29" pos:end="397:53">/* wait for user event */</comment>

            <continue pos:start="399:13" pos:end="399:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="403:9" pos:end="403:95">/* check if packet is in play range specified by user, then queue, otherwise discard */</comment>

        <expr_stmt pos:start="405:9" pos:end="413:46"><expr pos:start="405:9" pos:end="413:45"><name pos:start="405:9" pos:end="405:25">pkt_in_play_range</name> <operator pos:start="405:27" pos:end="405:27">=</operator> <name pos:start="405:29" pos:end="405:36">duration</name> <operator pos:start="405:38" pos:end="405:39">==</operator> <name pos:start="405:41" pos:end="405:54">AV_NOPTS_VALUE</name> <operator pos:start="405:56" pos:end="405:57">||</operator>

                <operator pos:start="407:17" pos:end="407:17">(</operator><name pos:start="407:18" pos:end="407:25"><name pos:start="407:18" pos:end="407:20">pkt</name><operator pos:start="407:21" pos:end="407:22">-&gt;</operator><name pos:start="407:23" pos:end="407:25">pts</name></name> <operator pos:start="407:27" pos:end="407:27">-</operator> <name pos:start="407:29" pos:end="407:58"><name pos:start="407:29" pos:end="407:30">ic</name><operator pos:start="407:31" pos:end="407:32">-&gt;</operator><name pos:start="407:33" pos:end="407:39">streams</name><index pos:start="407:40" pos:end="407:58">[<expr pos:start="407:41" pos:end="407:57"><name pos:start="407:41" pos:end="407:57"><name pos:start="407:41" pos:end="407:43">pkt</name><operator pos:start="407:44" pos:end="407:45">-&gt;</operator><name pos:start="407:46" pos:end="407:57">stream_index</name></name></expr>]</index></name><operator pos:start="407:59" pos:end="407:60">-&gt;</operator><name pos:start="407:61" pos:end="407:70">start_time</name><operator pos:start="407:71" pos:end="407:71">)</operator> <operator pos:start="407:73" pos:end="407:73">*</operator>

                <call pos:start="409:17" pos:end="409:65"><name pos:start="409:17" pos:end="409:22">av_q2d</name><argument_list pos:start="409:23" pos:end="409:65">(<argument pos:start="409:24" pos:end="409:64"><expr pos:start="409:24" pos:end="409:64"><name pos:start="409:24" pos:end="409:53"><name pos:start="409:24" pos:end="409:25">ic</name><operator pos:start="409:26" pos:end="409:27">-&gt;</operator><name pos:start="409:28" pos:end="409:34">streams</name><index pos:start="409:35" pos:end="409:53">[<expr pos:start="409:36" pos:end="409:52"><name pos:start="409:36" pos:end="409:52"><name pos:start="409:36" pos:end="409:38">pkt</name><operator pos:start="409:39" pos:end="409:40">-&gt;</operator><name pos:start="409:41" pos:end="409:52">stream_index</name></name></expr>]</index></name><operator pos:start="409:54" pos:end="409:55">-&gt;</operator><name pos:start="409:56" pos:end="409:64">time_base</name></expr></argument>)</argument_list></call> <operator pos:start="409:67" pos:end="409:67">-</operator>

                <operator pos:start="411:17" pos:end="411:17">(</operator><name pos:start="411:18" pos:end="411:23">double</name><operator pos:start="411:24" pos:end="411:24">)</operator><operator pos:start="411:25" pos:end="411:25">(</operator><ternary pos:start="411:26" pos:end="411:70"><condition pos:start="411:26" pos:end="411:55"><expr pos:start="411:26" pos:end="411:53"><name pos:start="411:26" pos:end="411:35">start_time</name> <operator pos:start="411:37" pos:end="411:38">!=</operator> <name pos:start="411:40" pos:end="411:53">AV_NOPTS_VALUE</name></expr> ?</condition><then pos:start="411:57" pos:end="411:66"> <expr pos:start="411:57" pos:end="411:66"><name pos:start="411:57" pos:end="411:66">start_time</name></expr> </then><else pos:start="411:68" pos:end="411:70">: <expr pos:start="411:70" pos:end="411:70"><literal type="number" pos:start="411:70" pos:end="411:70">0</literal></expr></else></ternary><operator pos:start="411:71" pos:end="411:71">)</operator><operator pos:start="411:72" pos:end="411:72">/</operator><literal type="number" pos:start="411:73" pos:end="411:79">1000000</literal>

                <operator pos:start="413:17" pos:end="413:18">&lt;=</operator> <operator pos:start="413:20" pos:end="413:20">(</operator><operator pos:start="413:21" pos:end="413:21">(</operator><name pos:start="413:22" pos:end="413:27">double</name><operator pos:start="413:28" pos:end="413:28">)</operator><name pos:start="413:29" pos:end="413:36">duration</name><operator pos:start="413:37" pos:end="413:37">/</operator><literal type="number" pos:start="413:38" pos:end="413:44">1000000</literal><operator pos:start="413:45" pos:end="413:45">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="415:9" pos:end="431:9"><if pos:start="415:9" pos:end="419:9">if <condition pos:start="415:12" pos:end="415:71">(<expr pos:start="415:13" pos:end="415:70"><name pos:start="415:13" pos:end="415:29"><name pos:start="415:13" pos:end="415:15">pkt</name><operator pos:start="415:16" pos:end="415:17">-&gt;</operator><name pos:start="415:18" pos:end="415:29">stream_index</name></name> <operator pos:start="415:31" pos:end="415:32">==</operator> <name pos:start="415:34" pos:end="415:49"><name pos:start="415:34" pos:end="415:35">is</name><operator pos:start="415:36" pos:end="415:37">-&gt;</operator><name pos:start="415:38" pos:end="415:49">audio_stream</name></name> <operator pos:start="415:51" pos:end="415:52">&amp;&amp;</operator> <name pos:start="415:54" pos:end="415:70">pkt_in_play_range</name></expr>)</condition> <block pos:start="415:73" pos:end="419:9">{<block_content pos:start="417:13" pos:end="417:47">

            <expr_stmt pos:start="417:13" pos:end="417:47"><expr pos:start="417:13" pos:end="417:46"><call pos:start="417:13" pos:end="417:46"><name pos:start="417:13" pos:end="417:28">packet_queue_put</name><argument_list pos:start="417:29" pos:end="417:46">(<argument pos:start="417:30" pos:end="417:40"><expr pos:start="417:30" pos:end="417:40"><operator pos:start="417:30" pos:end="417:30">&amp;</operator><name pos:start="417:31" pos:end="417:40"><name pos:start="417:31" pos:end="417:32">is</name><operator pos:start="417:33" pos:end="417:34">-&gt;</operator><name pos:start="417:35" pos:end="417:40">audioq</name></name></expr></argument>, <argument pos:start="417:43" pos:end="417:45"><expr pos:start="417:43" pos:end="417:45"><name pos:start="417:43" pos:end="417:45">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="419:11" pos:end="423:9">else if <condition pos:start="419:19" pos:end="419:78">(<expr pos:start="419:20" pos:end="419:77"><name pos:start="419:20" pos:end="419:36"><name pos:start="419:20" pos:end="419:22">pkt</name><operator pos:start="419:23" pos:end="419:24">-&gt;</operator><name pos:start="419:25" pos:end="419:36">stream_index</name></name> <operator pos:start="419:38" pos:end="419:39">==</operator> <name pos:start="419:41" pos:end="419:56"><name pos:start="419:41" pos:end="419:42">is</name><operator pos:start="419:43" pos:end="419:44">-&gt;</operator><name pos:start="419:45" pos:end="419:56">video_stream</name></name> <operator pos:start="419:58" pos:end="419:59">&amp;&amp;</operator> <name pos:start="419:61" pos:end="419:77">pkt_in_play_range</name></expr>)</condition> <block pos:start="419:80" pos:end="423:9">{<block_content pos:start="421:13" pos:end="421:47">

            <expr_stmt pos:start="421:13" pos:end="421:47"><expr pos:start="421:13" pos:end="421:46"><call pos:start="421:13" pos:end="421:46"><name pos:start="421:13" pos:end="421:28">packet_queue_put</name><argument_list pos:start="421:29" pos:end="421:46">(<argument pos:start="421:30" pos:end="421:40"><expr pos:start="421:30" pos:end="421:40"><operator pos:start="421:30" pos:end="421:30">&amp;</operator><name pos:start="421:31" pos:end="421:40"><name pos:start="421:31" pos:end="421:32">is</name><operator pos:start="421:33" pos:end="421:34">-&gt;</operator><name pos:start="421:35" pos:end="421:40">videoq</name></name></expr></argument>, <argument pos:start="421:43" pos:end="421:45"><expr pos:start="421:43" pos:end="421:45"><name pos:start="421:43" pos:end="421:45">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="423:11" pos:end="427:9">else if <condition pos:start="423:19" pos:end="423:81">(<expr pos:start="423:20" pos:end="423:80"><name pos:start="423:20" pos:end="423:36"><name pos:start="423:20" pos:end="423:22">pkt</name><operator pos:start="423:23" pos:end="423:24">-&gt;</operator><name pos:start="423:25" pos:end="423:36">stream_index</name></name> <operator pos:start="423:38" pos:end="423:39">==</operator> <name pos:start="423:41" pos:end="423:59"><name pos:start="423:41" pos:end="423:42">is</name><operator pos:start="423:43" pos:end="423:44">-&gt;</operator><name pos:start="423:45" pos:end="423:59">subtitle_stream</name></name> <operator pos:start="423:61" pos:end="423:62">&amp;&amp;</operator> <name pos:start="423:64" pos:end="423:80">pkt_in_play_range</name></expr>)</condition> <block pos:start="423:83" pos:end="427:9">{<block_content pos:start="425:13" pos:end="425:50">

            <expr_stmt pos:start="425:13" pos:end="425:50"><expr pos:start="425:13" pos:end="425:49"><call pos:start="425:13" pos:end="425:49"><name pos:start="425:13" pos:end="425:28">packet_queue_put</name><argument_list pos:start="425:29" pos:end="425:49">(<argument pos:start="425:30" pos:end="425:43"><expr pos:start="425:30" pos:end="425:43"><operator pos:start="425:30" pos:end="425:30">&amp;</operator><name pos:start="425:31" pos:end="425:43"><name pos:start="425:31" pos:end="425:32">is</name><operator pos:start="425:33" pos:end="425:34">-&gt;</operator><name pos:start="425:35" pos:end="425:43">subtitleq</name></name></expr></argument>, <argument pos:start="425:46" pos:end="425:48"><expr pos:start="425:46" pos:end="425:48"><name pos:start="425:46" pos:end="425:48">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="427:11" pos:end="431:9">else <block pos:start="427:16" pos:end="431:9">{<block_content pos:start="429:13" pos:end="429:32">

            <expr_stmt pos:start="429:13" pos:end="429:32"><expr pos:start="429:13" pos:end="429:31"><call pos:start="429:13" pos:end="429:31"><name pos:start="429:13" pos:end="429:26">av_free_packet</name><argument_list pos:start="429:27" pos:end="429:31">(<argument pos:start="429:28" pos:end="429:30"><expr pos:start="429:28" pos:end="429:30"><name pos:start="429:28" pos:end="429:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="435:5" pos:end="435:28">/* wait until the end */</comment>

    <while pos:start="437:5" pos:end="441:5">while <condition pos:start="437:11" pos:end="437:30">(<expr pos:start="437:12" pos:end="437:29"><operator pos:start="437:12" pos:end="437:12">!</operator><name pos:start="437:13" pos:end="437:29"><name pos:start="437:13" pos:end="437:14">is</name><operator pos:start="437:15" pos:end="437:16">-&gt;</operator><name pos:start="437:17" pos:end="437:29">abort_request</name></name></expr>)</condition> <block pos:start="437:32" pos:end="441:5">{<block_content pos:start="439:9" pos:end="439:23">

        <expr_stmt pos:start="439:9" pos:end="439:23"><expr pos:start="439:9" pos:end="439:22"><call pos:start="439:9" pos:end="439:22"><name pos:start="439:9" pos:end="439:17">SDL_Delay</name><argument_list pos:start="439:18" pos:end="439:22">(<argument pos:start="439:19" pos:end="439:21"><expr pos:start="439:19" pos:end="439:21"><literal type="number" pos:start="439:19" pos:end="439:21">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="445:5" pos:end="445:12"><expr pos:start="445:5" pos:end="445:11"><name pos:start="445:5" pos:end="445:7">ret</name> <operator pos:start="445:9" pos:end="445:9">=</operator> <literal type="number" pos:start="445:11" pos:end="445:11">0</literal></expr>;</expr_stmt>

 <label pos:start="447:2" pos:end="447:6"><name pos:start="447:2" pos:end="447:5">fail</name>:</label>

    <comment type="block" pos:start="449:5" pos:end="449:30">/* disable interrupting */</comment>

    <expr_stmt pos:start="451:5" pos:end="451:30"><expr pos:start="451:5" pos:end="451:29"><name pos:start="451:5" pos:end="451:22">global_video_state</name> <operator pos:start="451:24" pos:end="451:24">=</operator> <name pos:start="451:26" pos:end="451:29">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="455:5" pos:end="455:27">/* close each stream */</comment>

    <if_stmt pos:start="457:5" pos:end="459:53"><if pos:start="457:5" pos:end="459:53">if <condition pos:start="457:8" pos:end="457:30">(<expr pos:start="457:9" pos:end="457:29"><name pos:start="457:9" pos:end="457:24"><name pos:start="457:9" pos:end="457:10">is</name><operator pos:start="457:11" pos:end="457:12">-&gt;</operator><name pos:start="457:13" pos:end="457:24">audio_stream</name></name> <operator pos:start="457:26" pos:end="457:27">&gt;=</operator> <literal type="number" pos:start="457:29" pos:end="457:29">0</literal></expr>)</condition><block type="pseudo" pos:start="459:9" pos:end="459:53"><block_content pos:start="459:9" pos:end="459:53">

        <expr_stmt pos:start="459:9" pos:end="459:53"><expr pos:start="459:9" pos:end="459:52"><call pos:start="459:9" pos:end="459:52"><name pos:start="459:9" pos:end="459:30">stream_component_close</name><argument_list pos:start="459:31" pos:end="459:52">(<argument pos:start="459:32" pos:end="459:33"><expr pos:start="459:32" pos:end="459:33"><name pos:start="459:32" pos:end="459:33">is</name></expr></argument>, <argument pos:start="459:36" pos:end="459:51"><expr pos:start="459:36" pos:end="459:51"><name pos:start="459:36" pos:end="459:51"><name pos:start="459:36" pos:end="459:37">is</name><operator pos:start="459:38" pos:end="459:39">-&gt;</operator><name pos:start="459:40" pos:end="459:51">audio_stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="461:5" pos:end="463:53"><if pos:start="461:5" pos:end="463:53">if <condition pos:start="461:8" pos:end="461:30">(<expr pos:start="461:9" pos:end="461:29"><name pos:start="461:9" pos:end="461:24"><name pos:start="461:9" pos:end="461:10">is</name><operator pos:start="461:11" pos:end="461:12">-&gt;</operator><name pos:start="461:13" pos:end="461:24">video_stream</name></name> <operator pos:start="461:26" pos:end="461:27">&gt;=</operator> <literal type="number" pos:start="461:29" pos:end="461:29">0</literal></expr>)</condition><block type="pseudo" pos:start="463:9" pos:end="463:53"><block_content pos:start="463:9" pos:end="463:53">

        <expr_stmt pos:start="463:9" pos:end="463:53"><expr pos:start="463:9" pos:end="463:52"><call pos:start="463:9" pos:end="463:52"><name pos:start="463:9" pos:end="463:30">stream_component_close</name><argument_list pos:start="463:31" pos:end="463:52">(<argument pos:start="463:32" pos:end="463:33"><expr pos:start="463:32" pos:end="463:33"><name pos:start="463:32" pos:end="463:33">is</name></expr></argument>, <argument pos:start="463:36" pos:end="463:51"><expr pos:start="463:36" pos:end="463:51"><name pos:start="463:36" pos:end="463:51"><name pos:start="463:36" pos:end="463:37">is</name><operator pos:start="463:38" pos:end="463:39">-&gt;</operator><name pos:start="463:40" pos:end="463:51">video_stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="465:5" pos:end="467:56"><if pos:start="465:5" pos:end="467:56">if <condition pos:start="465:8" pos:end="465:33">(<expr pos:start="465:9" pos:end="465:32"><name pos:start="465:9" pos:end="465:27"><name pos:start="465:9" pos:end="465:10">is</name><operator pos:start="465:11" pos:end="465:12">-&gt;</operator><name pos:start="465:13" pos:end="465:27">subtitle_stream</name></name> <operator pos:start="465:29" pos:end="465:30">&gt;=</operator> <literal type="number" pos:start="465:32" pos:end="465:32">0</literal></expr>)</condition><block type="pseudo" pos:start="467:9" pos:end="467:56"><block_content pos:start="467:9" pos:end="467:56">

        <expr_stmt pos:start="467:9" pos:end="467:56"><expr pos:start="467:9" pos:end="467:55"><call pos:start="467:9" pos:end="467:55"><name pos:start="467:9" pos:end="467:30">stream_component_close</name><argument_list pos:start="467:31" pos:end="467:55">(<argument pos:start="467:32" pos:end="467:33"><expr pos:start="467:32" pos:end="467:33"><name pos:start="467:32" pos:end="467:33">is</name></expr></argument>, <argument pos:start="467:36" pos:end="467:54"><expr pos:start="467:36" pos:end="467:54"><name pos:start="467:36" pos:end="467:54"><name pos:start="467:36" pos:end="467:37">is</name><operator pos:start="467:38" pos:end="467:39">-&gt;</operator><name pos:start="467:40" pos:end="467:54">subtitle_stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="469:5" pos:end="475:5"><if pos:start="469:5" pos:end="475:5">if <condition pos:start="469:8" pos:end="469:15">(<expr pos:start="469:9" pos:end="469:14"><name pos:start="469:9" pos:end="469:14"><name pos:start="469:9" pos:end="469:10">is</name><operator pos:start="469:11" pos:end="469:12">-&gt;</operator><name pos:start="469:13" pos:end="469:14">ic</name></name></expr>)</condition> <block pos:start="469:17" pos:end="475:5">{<block_content pos:start="471:9" pos:end="473:22">

        <expr_stmt pos:start="471:9" pos:end="471:36"><expr pos:start="471:9" pos:end="471:35"><call pos:start="471:9" pos:end="471:35"><name pos:start="471:9" pos:end="471:27">av_close_input_file</name><argument_list pos:start="471:28" pos:end="471:35">(<argument pos:start="471:29" pos:end="471:34"><expr pos:start="471:29" pos:end="471:34"><name pos:start="471:29" pos:end="471:34"><name pos:start="471:29" pos:end="471:30">is</name><operator pos:start="471:31" pos:end="471:32">-&gt;</operator><name pos:start="471:33" pos:end="471:34">ic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:22"><expr pos:start="473:9" pos:end="473:21"><name pos:start="473:9" pos:end="473:14"><name pos:start="473:9" pos:end="473:10">is</name><operator pos:start="473:11" pos:end="473:12">-&gt;</operator><name pos:start="473:13" pos:end="473:14">ic</name></name> <operator pos:start="473:16" pos:end="473:16">=</operator> <name pos:start="473:18" pos:end="473:21">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="473:24" pos:end="473:35">/* safety */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:31"><expr pos:start="477:5" pos:end="477:30"><call pos:start="477:5" pos:end="477:30"><name pos:start="477:5" pos:end="477:24">url_set_interrupt_cb</name><argument_list pos:start="477:25" pos:end="477:30">(<argument pos:start="477:26" pos:end="477:29"><expr pos:start="477:26" pos:end="477:29"><name pos:start="477:26" pos:end="477:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="481:5" pos:end="493:5"><if pos:start="481:5" pos:end="493:5">if <condition pos:start="481:8" pos:end="481:17">(<expr pos:start="481:9" pos:end="481:16"><name pos:start="481:9" pos:end="481:11">ret</name> <operator pos:start="481:13" pos:end="481:14">!=</operator> <literal type="number" pos:start="481:16" pos:end="481:16">0</literal></expr>)</condition> <block pos:start="481:19" pos:end="493:5">{<block_content pos:start="483:9" pos:end="491:30">

        <decl_stmt pos:start="483:9" pos:end="483:24"><decl pos:start="483:9" pos:end="483:23"><type pos:start="483:9" pos:end="483:17"><name pos:start="483:9" pos:end="483:17">SDL_Event</name></type> <name pos:start="483:19" pos:end="483:23">event</name></decl>;</decl_stmt>



        <expr_stmt pos:start="487:9" pos:end="487:35"><expr pos:start="487:9" pos:end="487:34"><name pos:start="487:9" pos:end="487:18"><name pos:start="487:9" pos:end="487:13">event</name><operator pos:start="487:14" pos:end="487:14">.</operator><name pos:start="487:15" pos:end="487:18">type</name></name> <operator pos:start="487:20" pos:end="487:20">=</operator> <name pos:start="487:22" pos:end="487:34">FF_QUIT_EVENT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:30"><expr pos:start="489:9" pos:end="489:29"><name pos:start="489:9" pos:end="489:24"><name pos:start="489:9" pos:end="489:13">event</name><operator pos:start="489:14" pos:end="489:14">.</operator><name pos:start="489:15" pos:end="489:18">user</name><operator pos:start="489:19" pos:end="489:19">.</operator><name pos:start="489:20" pos:end="489:24">data1</name></name> <operator pos:start="489:26" pos:end="489:26">=</operator> <name pos:start="489:28" pos:end="489:29">is</name></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:30"><expr pos:start="491:9" pos:end="491:29"><call pos:start="491:9" pos:end="491:29"><name pos:start="491:9" pos:end="491:21">SDL_PushEvent</name><argument_list pos:start="491:22" pos:end="491:29">(<argument pos:start="491:23" pos:end="491:28"><expr pos:start="491:23" pos:end="491:28"><operator pos:start="491:23" pos:end="491:23">&amp;</operator><name pos:start="491:24" pos:end="491:28">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="495:5" pos:end="495:13">return <expr pos:start="495:12" pos:end="495:12"><literal type="number" pos:start="495:12" pos:end="495:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
