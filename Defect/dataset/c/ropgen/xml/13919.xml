<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13919.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">adlib_realizefn</name> <parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:73">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AdlibState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:30">= <expr pos:start="5:21" pos:end="5:30"><call pos:start="5:21" pos:end="5:30"><name pos:start="5:21" pos:end="5:25">ADLIB</name><argument_list pos:start="5:26" pos:end="5:30">(<argument pos:start="5:27" pos:end="5:29"><expr pos:start="5:27" pos:end="5:29"><name pos:start="5:27" pos:end="5:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PortioList</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">port_list</name> <init pos:start="7:27" pos:end="7:48">= <expr pos:start="7:29" pos:end="7:48"><call pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:33">g_new</name><argument_list pos:start="7:34" pos:end="7:48">(<argument pos:start="7:35" pos:end="7:44"><expr pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:44">PortioList</name></expr></argument>, <argument pos:start="7:47" pos:end="7:47"><expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:22">audsettings</name></name></type> <name pos:start="9:24" pos:end="9:25">as</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:19">(<expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:18">glob_adlib</name></expr>)</condition> <block pos:start="13:21" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:18">error_setg</name> <argument_list pos:start="15:20" pos:end="15:67">(<argument pos:start="15:21" pos:end="15:24"><expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">errp</name></expr></argument>, <argument pos:start="15:27" pos:end="15:66"><expr pos:start="15:27" pos:end="15:66"><literal type="string" pos:start="15:27" pos:end="15:66">"Cannot create more than 1 adlib device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="26:0"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:14">glob_adlib</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:18">s</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="25:1" pos:end="25:17">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:17">HAS_YMF262</name></cpp:ifdef>

    <if_stmt pos:start="27:5" pos:end="44:0"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:42">(<expr pos:start="27:9" pos:end="27:41"><call pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:18">YMF262Init</name> <argument_list pos:start="27:20" pos:end="27:41">(<argument pos:start="27:21" pos:end="27:21"><expr pos:start="27:21" pos:end="27:21"><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr></argument>, <argument pos:start="27:24" pos:end="27:31"><expr pos:start="27:24" pos:end="27:31"><literal type="number" pos:start="27:24" pos:end="27:31">14318180</literal></expr></argument>, <argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:40">freq</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:44" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:59"><expr pos:start="29:9" pos:end="29:58"><call pos:start="29:9" pos:end="29:58"><name pos:start="29:9" pos:end="29:18">error_setg</name> <argument_list pos:start="29:20" pos:end="29:58">(<argument pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:24"><name pos:start="29:21" pos:end="29:24">errp</name></expr></argument>, <argument pos:start="29:27" pos:end="29:48"><expr pos:start="29:27" pos:end="29:48"><literal type="string" pos:start="29:27" pos:end="29:48">"YMF262Init %d failed"</literal></expr></argument>, <argument pos:start="29:51" pos:end="29:57"><expr pos:start="29:51" pos:end="29:57"><name pos:start="29:51" pos:end="29:57"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:57">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if>

    <else pos:start="35:5" pos:end="44:0">else <block pos:start="35:10" pos:end="44:0">{<block_content pos:start="37:9" pos:end="39:23">

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><call pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:29">YMF262SetTimerHandler</name> <argument_list pos:start="37:31" pos:end="37:51">(<argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:47"><expr pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:47">timer_handler</name></expr></argument>, <argument pos:start="37:50" pos:end="37:50"><expr pos:start="37:50" pos:end="37:50"><literal type="number" pos:start="37:50" pos:end="37:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">enabled</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="45:5" pos:end="45:59"><expr pos:start="45:5" pos:end="45:58"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:10">opl</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:58"><name pos:start="45:14" pos:end="45:22">OPLCreate</name> <argument_list pos:start="45:24" pos:end="45:58">(<argument pos:start="45:25" pos:end="45:39"><expr pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:39">OPL_TYPE_YM3812</name></expr></argument>, <argument pos:start="45:42" pos:end="45:48"><expr pos:start="45:42" pos:end="45:48"><literal type="number" pos:start="45:42" pos:end="45:48">3579545</literal></expr></argument>, <argument pos:start="45:51" pos:end="45:57"><expr pos:start="45:51" pos:end="45:57"><name pos:start="45:51" pos:end="45:57"><name pos:start="45:51" pos:end="45:51">s</name><operator pos:start="45:52" pos:end="45:53">-&gt;</operator><name pos:start="45:54" pos:end="45:57">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="64:0"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:15"><name pos:start="47:10" pos:end="47:10">s</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:15">opl</name></name></expr>)</condition> <block pos:start="47:18" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:15">

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><call pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:18">error_setg</name> <argument_list pos:start="49:20" pos:end="49:57">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">errp</name></expr></argument>, <argument pos:start="49:27" pos:end="49:47"><expr pos:start="49:27" pos:end="49:47"><literal type="string" pos:start="49:27" pos:end="49:47">"OPLCreate %d failed"</literal></expr></argument>, <argument pos:start="49:50" pos:end="49:56"><expr pos:start="49:50" pos:end="49:56"><name pos:start="49:50" pos:end="49:56"><name pos:start="49:50" pos:end="49:50">s</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:56">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if>

    <else pos:start="55:5" pos:end="64:0">else <block pos:start="55:10" pos:end="64:0">{<block_content pos:start="57:9" pos:end="59:23">

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><call pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:26">OPLSetTimerHandler</name> <argument_list pos:start="57:28" pos:end="57:53">(<argument pos:start="57:29" pos:end="57:34"><expr pos:start="57:29" pos:end="57:34"><name pos:start="57:29" pos:end="57:34"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:34">opl</name></name></expr></argument>, <argument pos:start="57:37" pos:end="57:49"><expr pos:start="57:37" pos:end="57:49"><name pos:start="57:37" pos:end="57:49">timer_handler</name></expr></argument>, <argument pos:start="57:52" pos:end="57:52"><expr pos:start="57:52" pos:end="57:52"><literal type="number" pos:start="57:52" pos:end="57:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:18">enabled</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:6">as</name><operator pos:start="67:7" pos:end="67:7">.</operator><name pos:start="67:8" pos:end="67:11">freq</name></name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:21"><name pos:start="67:15" pos:end="67:15">s</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:21">freq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:6">as</name><operator pos:start="69:7" pos:end="69:7">.</operator><name pos:start="69:8" pos:end="69:16">nchannels</name></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:24">SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:25"><expr pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:10"><name pos:start="71:5" pos:end="71:6">as</name><operator pos:start="71:7" pos:end="71:7">.</operator><name pos:start="71:8" pos:end="71:10">fmt</name></name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:24">AUD_FMT_S16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:6">as</name><operator pos:start="73:7" pos:end="73:7">.</operator><name pos:start="73:8" pos:end="73:17">endianness</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:41">AUDIO_HOST_ENDIANNESS</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><call pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:21">AUD_register_card</name> <argument_list pos:start="77:23" pos:end="77:41">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><literal type="string" pos:start="77:24" pos:end="77:30">"adlib"</literal></expr></argument>, <argument pos:start="77:33" pos:end="77:40"><expr pos:start="77:33" pos:end="77:40"><operator pos:start="77:33" pos:end="77:33">&amp;</operator><name pos:start="77:34" pos:end="77:40"><name pos:start="77:34" pos:end="77:34">s</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:40">card</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="95:10"><expr pos:start="81:5" pos:end="95:9"><name pos:start="81:5" pos:end="81:12"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:12">voice</name></name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="95:9"><name pos:start="81:16" pos:end="81:27">AUD_open_out</name> <argument_list pos:start="81:29" pos:end="95:9">(

        <argument pos:start="83:9" pos:end="83:16"><expr pos:start="83:9" pos:end="83:16"><operator pos:start="83:9" pos:end="83:9">&amp;</operator><name pos:start="83:10" pos:end="83:16"><name pos:start="83:10" pos:end="83:10">s</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:16">card</name></name></expr></argument>,

        <argument pos:start="85:9" pos:end="85:16"><expr pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:16">voice</name></name></expr></argument>,

        <argument pos:start="87:9" pos:end="87:15"><expr pos:start="87:9" pos:end="87:15"><literal type="string" pos:start="87:9" pos:end="87:15">"adlib"</literal></expr></argument>,

        <argument pos:start="89:9" pos:end="89:9"><expr pos:start="89:9" pos:end="89:9"><name pos:start="89:9" pos:end="89:9">s</name></expr></argument>,

        <argument pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:22">adlib_callback</name></expr></argument>,

        <argument pos:start="93:9" pos:end="93:11"><expr pos:start="93:9" pos:end="93:11"><operator pos:start="93:9" pos:end="93:9">&amp;</operator><name pos:start="93:10" pos:end="93:11">as</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:18">(<expr pos:start="97:9" pos:end="97:17"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:17"><name pos:start="97:10" pos:end="97:10">s</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:17">voice</name></name></expr>)</condition> <block pos:start="97:20" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:15">

        <expr_stmt pos:start="99:9" pos:end="99:23"><expr pos:start="99:9" pos:end="99:22"><call pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:18">Adlib_fini</name> <argument_list pos:start="99:20" pos:end="99:22">(<argument pos:start="99:21" pos:end="99:21"><expr pos:start="99:21" pos:end="99:21"><name pos:start="99:21" pos:end="99:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><call pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:18">error_setg</name> <argument_list pos:start="101:20" pos:end="101:60">(<argument pos:start="101:21" pos:end="101:24"><expr pos:start="101:21" pos:end="101:24"><name pos:start="101:21" pos:end="101:24">errp</name></expr></argument>, <argument pos:start="101:27" pos:end="101:59"><expr pos:start="101:27" pos:end="101:59"><literal type="string" pos:start="101:27" pos:end="101:59">"Initializing audio voice failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:61"><expr pos:start="109:5" pos:end="109:60"><name pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:14">samples</name></name> <operator pos:start="109:16" pos:end="109:16">=</operator> <call pos:start="109:18" pos:end="109:51"><name pos:start="109:18" pos:end="109:40">AUD_get_buffer_size_out</name> <argument_list pos:start="109:42" pos:end="109:51">(<argument pos:start="109:43" pos:end="109:50"><expr pos:start="109:43" pos:end="109:50"><name pos:start="109:43" pos:end="109:50"><name pos:start="109:43" pos:end="109:43">s</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:50">voice</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:53" pos:end="109:54">&gt;&gt;</operator> <name pos:start="109:56" pos:end="109:60">SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:48"><expr pos:start="111:5" pos:end="111:47"><name pos:start="111:5" pos:end="111:13"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:13">mixbuf</name></name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:47"><name pos:start="111:17" pos:end="111:25">g_malloc0</name> <argument_list pos:start="111:27" pos:end="111:47">(<argument pos:start="111:28" pos:end="111:46"><expr pos:start="111:28" pos:end="111:46"><name pos:start="111:28" pos:end="111:37"><name pos:start="111:28" pos:end="111:28">s</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:37">samples</name></name> <operator pos:start="111:39" pos:end="111:40">&lt;&lt;</operator> <name pos:start="111:42" pos:end="111:46">SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:42"><expr pos:start="115:5" pos:end="115:41"><name pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:21">adlib_portio_list</name><index pos:start="115:22" pos:end="115:24">[<expr pos:start="115:23" pos:end="115:23"><literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>]</index></name><operator pos:start="115:25" pos:end="115:25">.</operator><name pos:start="115:26" pos:end="115:31">offset</name> <operator pos:start="115:33" pos:end="115:33">=</operator> <name pos:start="115:35" pos:end="115:41"><name pos:start="115:35" pos:end="115:35">s</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:41">port</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:46"><expr pos:start="117:5" pos:end="117:45"><name pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:21">adlib_portio_list</name><index pos:start="117:22" pos:end="117:24">[<expr pos:start="117:23" pos:end="117:23"><literal type="number" pos:start="117:23" pos:end="117:23">1</literal></expr>]</index></name><operator pos:start="117:25" pos:end="117:25">.</operator><name pos:start="117:26" pos:end="117:31">offset</name> <operator pos:start="117:33" pos:end="117:33">=</operator> <name pos:start="117:35" pos:end="117:41"><name pos:start="117:35" pos:end="117:35">s</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:41">port</name></name> <operator pos:start="117:43" pos:end="117:43">+</operator> <literal type="number" pos:start="117:45" pos:end="117:45">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:75"><expr pos:start="119:5" pos:end="119:74"><call pos:start="119:5" pos:end="119:74"><name pos:start="119:5" pos:end="119:20">portio_list_init</name> <argument_list pos:start="119:22" pos:end="119:74">(<argument pos:start="119:23" pos:end="119:31"><expr pos:start="119:23" pos:end="119:31"><name pos:start="119:23" pos:end="119:31">port_list</name></expr></argument>, <argument pos:start="119:34" pos:end="119:42"><expr pos:start="119:34" pos:end="119:42"><call pos:start="119:34" pos:end="119:42"><name pos:start="119:34" pos:end="119:39">OBJECT</name><argument_list pos:start="119:40" pos:end="119:42">(<argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><name pos:start="119:41" pos:end="119:41">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:45" pos:end="119:61"><expr pos:start="119:45" pos:end="119:61"><name pos:start="119:45" pos:end="119:61">adlib_portio_list</name></expr></argument>, <argument pos:start="119:64" pos:end="119:64"><expr pos:start="119:64" pos:end="119:64"><name pos:start="119:64" pos:end="119:64">s</name></expr></argument>, <argument pos:start="119:67" pos:end="119:73"><expr pos:start="119:67" pos:end="119:73"><literal type="string" pos:start="119:67" pos:end="119:73">"adlib"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:73"><expr pos:start="121:5" pos:end="121:72"><call pos:start="121:5" pos:end="121:72"><name pos:start="121:5" pos:end="121:19">portio_list_add</name> <argument_list pos:start="121:21" pos:end="121:72">(<argument pos:start="121:22" pos:end="121:30"><expr pos:start="121:22" pos:end="121:30"><name pos:start="121:22" pos:end="121:30">port_list</name></expr></argument>, <argument pos:start="121:33" pos:end="121:68"><expr pos:start="121:33" pos:end="121:68"><call pos:start="121:33" pos:end="121:68"><name pos:start="121:33" pos:end="121:52">isa_address_space_io</name><argument_list pos:start="121:53" pos:end="121:68">(<argument pos:start="121:54" pos:end="121:67"><expr pos:start="121:54" pos:end="121:67"><operator pos:start="121:54" pos:end="121:54">&amp;</operator><name pos:start="121:55" pos:end="121:67"><name pos:start="121:55" pos:end="121:55">s</name><operator pos:start="121:56" pos:end="121:57">-&gt;</operator><name pos:start="121:58" pos:end="121:67">parent_obj</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:71" pos:end="121:71"><expr pos:start="121:71" pos:end="121:71"><literal type="number" pos:start="121:71" pos:end="121:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
