<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25461.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">opt_loglevel</name><parameter_list pos:start="1:17" pos:end="1:64">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:29"><name pos:start="1:18" pos:end="1:21">void</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:29">optctx</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">opt</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <struct pos:start="5:5" pos:end="23:6"><specifier pos:start="5:5" pos:end="5:9">const</specifier> struct <block pos:start="5:18" pos:end="5:49">{ <decl_stmt pos:start="5:20" pos:end="5:36"><decl pos:start="5:20" pos:end="5:35"><type pos:start="5:20" pos:end="5:31"><specifier pos:start="5:20" pos:end="5:24">const</specifier> <name pos:start="5:26" pos:end="5:29">char</name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:35">name</name></decl>;</decl_stmt> <decl_stmt pos:start="5:38" pos:end="5:47"><decl pos:start="5:38" pos:end="5:46"><type pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:46">level</name></decl>;</decl_stmt> }</block> <decl pos:start="5:51" pos:end="23:5"><name pos:start="5:51" pos:end="5:62"><name pos:start="5:51" pos:end="5:60">log_levels</name><index pos:start="5:61" pos:end="5:62">[]</index></name> <init pos:start="5:64" pos:end="23:5">= <expr pos:start="5:66" pos:end="23:5"><block pos:start="5:66" pos:end="23:5">{

        <expr pos:start="7:9" pos:end="7:37"><block pos:start="7:9" pos:end="7:37">{ <expr pos:start="7:11" pos:end="7:17"><literal type="string" pos:start="7:11" pos:end="7:17">"quiet"</literal></expr>  , <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33">AV_LOG_QUIET</name></expr>   }</block></expr>,

        <expr pos:start="9:9" pos:end="9:37"><block pos:start="9:9" pos:end="9:37">{ <expr pos:start="9:11" pos:end="9:17"><literal type="string" pos:start="9:11" pos:end="9:17">"panic"</literal></expr>  , <expr pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:33">AV_LOG_PANIC</name></expr>   }</block></expr>,

        <expr pos:start="11:9" pos:end="11:37"><block pos:start="11:9" pos:end="11:37">{ <expr pos:start="11:11" pos:end="11:17"><literal type="string" pos:start="11:11" pos:end="11:17">"fatal"</literal></expr>  , <expr pos:start="11:22" pos:end="11:33"><name pos:start="11:22" pos:end="11:33">AV_LOG_FATAL</name></expr>   }</block></expr>,

        <expr pos:start="13:9" pos:end="13:37"><block pos:start="13:9" pos:end="13:37">{ <expr pos:start="13:11" pos:end="13:17"><literal type="string" pos:start="13:11" pos:end="13:17">"error"</literal></expr>  , <expr pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:33">AV_LOG_ERROR</name></expr>   }</block></expr>,

        <expr pos:start="15:9" pos:end="15:37"><block pos:start="15:9" pos:end="15:37">{ <expr pos:start="15:11" pos:end="15:19"><literal type="string" pos:start="15:11" pos:end="15:19">"warning"</literal></expr>, <expr pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:35">AV_LOG_WARNING</name></expr> }</block></expr>,

        <expr pos:start="17:9" pos:end="17:37"><block pos:start="17:9" pos:end="17:37">{ <expr pos:start="17:11" pos:end="17:16"><literal type="string" pos:start="17:11" pos:end="17:16">"info"</literal></expr>   , <expr pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:32">AV_LOG_INFO</name></expr>    }</block></expr>,

        <expr pos:start="19:9" pos:end="19:37"><block pos:start="19:9" pos:end="19:37">{ <expr pos:start="19:11" pos:end="19:19"><literal type="string" pos:start="19:11" pos:end="19:19">"verbose"</literal></expr>, <expr pos:start="19:22" pos:end="19:35"><name pos:start="19:22" pos:end="19:35">AV_LOG_VERBOSE</name></expr> }</block></expr>,

        <expr pos:start="21:9" pos:end="21:37"><block pos:start="21:9" pos:end="21:37">{ <expr pos:start="21:11" pos:end="21:17"><literal type="string" pos:start="21:11" pos:end="21:17">"debug"</literal></expr>  , <expr pos:start="21:22" pos:end="21:33"><name pos:start="21:22" pos:end="21:33">AV_LOG_DEBUG</name></expr>   }</block></expr>,

    }</block></expr></init></decl>;</struct>

    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:8">char</name> <modifier pos:start="25:10" pos:end="25:10">*</modifier></type><name pos:start="25:11" pos:end="25:14">tail</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>



    <for pos:start="33:5" pos:end="43:5">for <control pos:start="33:9" pos:end="33:52">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:47"><expr pos:start="33:17" pos:end="33:46"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <call pos:start="33:21" pos:end="33:46"><name pos:start="33:21" pos:end="33:34">FF_ARRAY_ELEMS</name><argument_list pos:start="33:35" pos:end="33:46">(<argument pos:start="33:36" pos:end="33:45"><expr pos:start="33:36" pos:end="33:45"><name pos:start="33:36" pos:end="33:45">log_levels</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:49">i</name><operator pos:start="33:50" pos:end="33:51">++</operator></expr></incr>)</control> <block pos:start="33:54" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:45">(<expr pos:start="35:13" pos:end="35:44"><operator pos:start="35:13" pos:end="35:13">!</operator><call pos:start="35:14" pos:end="35:44"><name pos:start="35:14" pos:end="35:19">strcmp</name><argument_list pos:start="35:20" pos:end="35:44">(<argument pos:start="35:21" pos:end="35:38"><expr pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:30">log_levels</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">i</name></expr>]</index></name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:38">name</name></expr></argument>, <argument pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:43">arg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:47" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:21">

            <expr_stmt pos:start="37:13" pos:end="37:50"><expr pos:start="37:13" pos:end="37:49"><call pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:28">av_log_set_level</name><argument_list pos:start="37:29" pos:end="37:49">(<argument pos:start="37:30" pos:end="37:48"><expr pos:start="37:30" pos:end="37:48"><name pos:start="37:30" pos:end="37:42"><name pos:start="37:30" pos:end="37:39">log_levels</name><index pos:start="37:40" pos:end="37:42">[<expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">i</name></expr>]</index></name><operator pos:start="37:43" pos:end="37:43">.</operator><name pos:start="37:44" pos:end="37:48">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:9">level</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:18">strtol</name><argument_list pos:start="47:19" pos:end="47:34">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">arg</name></expr></argument>, <argument pos:start="47:25" pos:end="47:29"><expr pos:start="47:25" pos:end="47:29"><operator pos:start="47:25" pos:end="47:25">&amp;</operator><name pos:start="47:26" pos:end="47:29">tail</name></expr></argument>, <argument pos:start="47:32" pos:end="47:33"><expr pos:start="47:32" pos:end="47:33"><literal type="number" pos:start="47:32" pos:end="47:33">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="49:14">(<expr pos:start="49:9" pos:end="49:13"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:13">tail</name></expr>)</condition> <block pos:start="49:16" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:16">

        <expr_stmt pos:start="51:9" pos:end="53:57"><expr pos:start="51:9" pos:end="53:56"><call pos:start="51:9" pos:end="53:56"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="53:56">(<argument pos:start="51:16" pos:end="51:19"><expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">NULL</name></expr></argument>, <argument pos:start="51:22" pos:end="51:33"><expr pos:start="51:22" pos:end="51:33"><name pos:start="51:22" pos:end="51:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="51:36" pos:end="53:50"><expr pos:start="51:36" pos:end="53:50"><literal type="string" pos:start="51:36" pos:end="51:62">"Invalid loglevel \"%s\". "</literal>

               <literal type="string" pos:start="53:16" pos:end="53:50">"Possible levels are numbers or:\n"</literal></expr></argument>, <argument pos:start="53:53" pos:end="53:55"><expr pos:start="53:53" pos:end="53:55"><name pos:start="53:53" pos:end="53:55">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="55:9" pos:end="57:71">for <control pos:start="55:13" pos:end="55:56">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:51"><expr pos:start="55:21" pos:end="55:50"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <call pos:start="55:25" pos:end="55:50"><name pos:start="55:25" pos:end="55:38">FF_ARRAY_ELEMS</name><argument_list pos:start="55:39" pos:end="55:50">(<argument pos:start="55:40" pos:end="55:49"><expr pos:start="55:40" pos:end="55:49"><name pos:start="55:40" pos:end="55:49">log_levels</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="55:53" pos:end="55:55"><expr pos:start="55:53" pos:end="55:55"><name pos:start="55:53" pos:end="55:53">i</name><operator pos:start="55:54" pos:end="55:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:71"><block_content pos:start="57:13" pos:end="57:71">

            <expr_stmt pos:start="57:13" pos:end="57:71"><expr pos:start="57:13" pos:end="57:70"><call pos:start="57:13" pos:end="57:70"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:70">(<argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">NULL</name></expr></argument>, <argument pos:start="57:26" pos:end="57:37"><expr pos:start="57:26" pos:end="57:37"><name pos:start="57:26" pos:end="57:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="57:40" pos:end="57:49"><expr pos:start="57:40" pos:end="57:49"><literal type="string" pos:start="57:40" pos:end="57:49">"\"%s\"\n"</literal></expr></argument>, <argument pos:start="57:52" pos:end="57:69"><expr pos:start="57:52" pos:end="57:69"><name pos:start="57:52" pos:end="57:64"><name pos:start="57:52" pos:end="57:61">log_levels</name><index pos:start="57:62" pos:end="57:64">[<expr pos:start="57:63" pos:end="57:63"><name pos:start="57:63" pos:end="57:63">i</name></expr>]</index></name><operator pos:start="57:65" pos:end="57:65">.</operator><name pos:start="57:66" pos:end="57:69">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="59:9" pos:end="59:16"><expr pos:start="59:9" pos:end="59:15"><call pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:12">exit</name><argument_list pos:start="59:13" pos:end="59:15">(<argument pos:start="59:14" pos:end="59:14"><expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><call pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:20">av_log_set_level</name><argument_list pos:start="63:21" pos:end="63:27">(<argument pos:start="63:22" pos:end="63:26"><expr pos:start="63:22" pos:end="63:26"><name pos:start="63:22" pos:end="63:26">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
