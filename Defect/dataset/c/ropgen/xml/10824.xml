<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10824.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">do_interrupt</name><parameter_list pos:start="1:18" pos:end="1:32">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:28"><name pos:start="1:19" pos:end="1:26">CPUState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:29">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">intno</name> <init pos:start="5:15" pos:end="5:36">= <expr pos:start="5:17" pos:end="5:36"><name pos:start="5:17" pos:end="5:36"><name pos:start="5:17" pos:end="5:19">env</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:36">exception_index</name></name></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="9:1" pos:end="9:18">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:18">DEBUG_PCALL</name></cpp:ifdef>

    <if_stmt pos:start="11:5" pos:end="92:0"><if pos:start="11:5" pos:end="92:0">if <condition pos:start="11:8" pos:end="11:40">(<expr pos:start="11:9" pos:end="11:39"><call pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:26">qemu_loglevel_mask</name><argument_list pos:start="11:27" pos:end="11:39">(<argument pos:start="11:28" pos:end="11:38"><expr pos:start="11:28" pos:end="11:38"><name pos:start="11:28" pos:end="11:38">CPU_LOG_INT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:42" pos:end="92:0">{<block_content pos:start="13:9" pos:end="85:16">

        <decl_stmt pos:start="13:9" pos:end="13:25"><decl pos:start="13:9" pos:end="13:24"><type pos:start="13:9" pos:end="13:18"><specifier pos:start="13:9" pos:end="13:14">static</specifier> <name pos:start="13:16" pos:end="13:18">int</name></type> <name pos:start="13:20" pos:end="13:24">count</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:20"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:18">char</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:24">name</name></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="43:9"><if pos:start="19:9" pos:end="21:29">if <condition pos:start="19:12" pos:end="19:40">(<expr pos:start="19:13" pos:end="19:39"><name pos:start="19:13" pos:end="19:17">intno</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal> <operator pos:start="19:23" pos:end="19:24">||</operator> <name pos:start="19:26" pos:end="19:30">intno</name> <operator pos:start="19:32" pos:end="19:33">&gt;=</operator> <literal type="number" pos:start="19:35" pos:end="19:39">0x180</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:29"><block_content pos:start="21:13" pos:end="21:29">

            <expr_stmt pos:start="21:13" pos:end="21:29"><expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:16">name</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="string" pos:start="21:20" pos:end="21:28">"Unknown"</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="23:9" pos:end="25:38">else if <condition pos:start="23:17" pos:end="23:32">(<expr pos:start="23:18" pos:end="23:31"><name pos:start="23:18" pos:end="23:22">intno</name> <operator pos:start="23:24" pos:end="23:25">&gt;=</operator> <literal type="number" pos:start="23:27" pos:end="23:31">0x100</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:38"><block_content pos:start="25:13" pos:end="25:38">

            <expr_stmt pos:start="25:13" pos:end="25:38"><expr pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:16">name</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <literal type="string" pos:start="25:20" pos:end="25:37">"Trap Instruction"</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="27:9" pos:end="29:33">else if <condition pos:start="27:17" pos:end="27:31">(<expr pos:start="27:18" pos:end="27:30"><name pos:start="27:18" pos:end="27:22">intno</name> <operator pos:start="27:24" pos:end="27:25">&gt;=</operator> <literal type="number" pos:start="27:27" pos:end="27:30">0xc0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:33"><block_content pos:start="29:13" pos:end="29:33">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:16">name</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="string" pos:start="29:20" pos:end="29:32">"Window Fill"</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="33:34">else if <condition pos:start="31:17" pos:end="31:31">(<expr pos:start="31:18" pos:end="31:30"><name pos:start="31:18" pos:end="31:22">intno</name> <operator pos:start="31:24" pos:end="31:25">&gt;=</operator> <literal type="number" pos:start="31:27" pos:end="31:30">0x80</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:34"><block_content pos:start="33:13" pos:end="33:34">

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:16">name</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <literal type="string" pos:start="33:20" pos:end="33:33">"Window Spill"</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="35:9" pos:end="43:9">else <block pos:start="35:14" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:33">

            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:16">name</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:36"><name pos:start="37:20" pos:end="37:29">excp_names</name><index pos:start="37:30" pos:end="37:36">[<expr pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:35">intno</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:33"><if pos:start="39:13" pos:end="41:33">if <condition pos:start="39:16" pos:end="39:22">(<expr pos:start="39:17" pos:end="39:21"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:21">name</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:33"><block_content pos:start="41:17" pos:end="41:33">

                <expr_stmt pos:start="41:17" pos:end="41:33"><expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:20">name</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <literal type="string" pos:start="41:24" pos:end="41:32">"Unknown"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="55:43"><expr pos:start="47:9" pos:end="55:42"><call pos:start="47:9" pos:end="55:42"><name pos:start="47:9" pos:end="47:16">qemu_log</name><argument_list pos:start="47:17" pos:end="55:42">(<argument pos:start="47:18" pos:end="49:38"><expr pos:start="47:18" pos:end="49:38"><literal type="string" pos:start="47:18" pos:end="47:43">"%6d: %s (v=%04x) pc=%016"</literal> <name pos:start="47:45" pos:end="47:50">PRIx64</name> <literal type="string" pos:start="47:52" pos:end="47:62">" npc=%016"</literal> <name pos:start="47:64" pos:end="47:69">PRIx64</name>

                <literal type="string" pos:start="49:17" pos:end="49:26">" SP=%016"</literal> <name pos:start="49:28" pos:end="49:33">PRIx64</name> <literal type="string" pos:start="49:35" pos:end="49:38">"\n"</literal></expr></argument>,

                <argument pos:start="51:17" pos:end="51:21"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:21">count</name></expr></argument>, <argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">name</name></expr></argument>, <argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:34">intno</name></expr></argument>,

                <argument pos:start="53:17" pos:end="53:23"><expr pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:19">env</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:23">pc</name></name></expr></argument>,

                <argument pos:start="55:17" pos:end="55:24"><expr pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:19">env</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:24">npc</name></name></expr></argument>, <argument pos:start="55:27" pos:end="55:41"><expr pos:start="55:27" pos:end="55:41"><name pos:start="55:27" pos:end="55:41"><name pos:start="55:27" pos:end="55:29">env</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:38">regwptr</name><index pos:start="55:39" pos:end="55:41">[<expr pos:start="55:40" pos:end="55:40"><literal type="number" pos:start="55:40" pos:end="55:40">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="84:0"><expr pos:start="57:9" pos:end="57:29"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:21">log_cpu_state</name><argument_list pos:start="57:22" pos:end="57:29">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">env</name></expr></argument>, <argument pos:start="57:28" pos:end="57:28"><expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:5"><literal type="number" pos:start="59:5" pos:end="59:5">0</literal></expr></cpp:if>

        {

            int i;

            uint8_t *ptr;



            qemu_log("       code=");

            ptr = (uint8_t *)env-&gt;pc;

            for(i = 0; i &lt; 16; i++) {

                qemu_log(" %02x", ldub(ptr + i));

            }

            qemu_log("\n");

        }

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="85:9" pos:end="85:16"><expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:13">count</name><operator pos:start="85:14" pos:end="85:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="91:1" pos:end="91:30">#<cpp:directive pos:start="91:2" pos:end="91:3">if</cpp:directive> <expr pos:start="91:5" pos:end="91:30"><operator pos:start="91:5" pos:end="91:5">!</operator><call pos:start="91:6" pos:end="91:30"><name pos:start="91:6" pos:end="91:12">defined</name><argument_list pos:start="91:13" pos:end="91:30">(<argument pos:start="91:14" pos:end="91:29"><expr pos:start="91:14" pos:end="91:29"><name pos:start="91:14" pos:end="91:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="93:5" pos:end="104:0"><if pos:start="93:5" pos:end="104:0">if <condition pos:start="93:8" pos:end="93:30">(<expr pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:11">env</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:15">tl</name></name> <operator pos:start="93:17" pos:end="93:18">&gt;=</operator> <name pos:start="93:20" pos:end="93:29"><name pos:start="93:20" pos:end="93:22">env</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:29">maxtl</name></name></expr>)</condition> <block pos:start="93:32" pos:end="104:0">{<block_content pos:start="95:9" pos:end="99:15">

        <expr_stmt pos:start="95:9" pos:end="97:77"><expr pos:start="95:9" pos:end="97:76"><call pos:start="95:9" pos:end="97:76"><name pos:start="95:9" pos:end="95:17">cpu_abort</name><argument_list pos:start="95:18" pos:end="97:76">(<argument pos:start="95:19" pos:end="95:21"><expr pos:start="95:19" pos:end="95:21"><name pos:start="95:19" pos:end="95:21">env</name></expr></argument>, <argument pos:start="95:24" pos:end="97:32"><expr pos:start="95:24" pos:end="97:32"><literal type="string" pos:start="95:24" pos:end="95:73">"Trap 0x%04x while trap level (%d) &gt;= MAXTL (%d),"</literal>

                  <literal type="string" pos:start="97:19" pos:end="97:32">" Error state"</literal></expr></argument>, <argument pos:start="97:35" pos:end="97:54"><expr pos:start="97:35" pos:end="97:54"><name pos:start="97:35" pos:end="97:54"><name pos:start="97:35" pos:end="97:37">env</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:54">exception_index</name></name></expr></argument>, <argument pos:start="97:57" pos:end="97:63"><expr pos:start="97:57" pos:end="97:63"><name pos:start="97:57" pos:end="97:63"><name pos:start="97:57" pos:end="97:59">env</name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:63">tl</name></name></expr></argument>, <argument pos:start="97:66" pos:end="97:75"><expr pos:start="97:66" pos:end="97:75"><name pos:start="97:66" pos:end="97:75"><name pos:start="97:66" pos:end="97:68">env</name><operator pos:start="97:69" pos:end="97:70">-&gt;</operator><name pos:start="97:71" pos:end="97:75">maxtl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="105:5" pos:end="117:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:33">(<expr pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:11">env</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:15">tl</name></name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <name pos:start="105:19" pos:end="105:28"><name pos:start="105:19" pos:end="105:21">env</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:28">maxtl</name></name> <operator pos:start="105:30" pos:end="105:30">-</operator> <literal type="number" pos:start="105:32" pos:end="105:32">1</literal></expr>)</condition> <block pos:start="105:35" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:18">

        <expr_stmt pos:start="107:9" pos:end="107:18"><expr pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">env</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:15">tl</name></name><operator pos:start="107:16" pos:end="107:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="117:5">else <block pos:start="109:12" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:22">

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:19">pstate</name></name> <operator pos:start="111:21" pos:end="111:22">|=</operator> <name pos:start="111:24" pos:end="111:29">PS_RED</name></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="115:22"><if pos:start="113:9" pos:end="115:22">if <condition pos:start="113:12" pos:end="113:33">(<expr pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:15">env</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:19">tl</name></name> <operator pos:start="113:21" pos:end="113:21">&lt;</operator> <name pos:start="113:23" pos:end="113:32"><name pos:start="113:23" pos:end="113:25">env</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:32">maxtl</name></name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:22"><block_content pos:start="115:13" pos:end="115:22">

            <expr_stmt pos:start="115:13" pos:end="115:22"><expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">env</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:19">tl</name></name><operator pos:start="115:20" pos:end="115:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:48"><expr pos:start="119:5" pos:end="119:47"><name pos:start="119:5" pos:end="119:14"><name pos:start="119:5" pos:end="119:7">env</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:14">tsptr</name></name> <operator pos:start="119:16" pos:end="119:16">=</operator> <operator pos:start="119:18" pos:end="119:18">&amp;</operator><name pos:start="119:19" pos:end="119:47"><name pos:start="119:19" pos:end="119:21">env</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:25">ts</name><index pos:start="119:26" pos:end="119:47">[<expr pos:start="119:27" pos:end="119:46"><name pos:start="119:27" pos:end="119:33"><name pos:start="119:27" pos:end="119:29">env</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:33">tl</name></name> <operator pos:start="119:35" pos:end="119:35">&amp;</operator> <name pos:start="119:37" pos:end="119:46">MAXTL_MASK</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="125:23"><expr pos:start="121:5" pos:end="125:22"><name pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:7">env</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:14">tsptr</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:22">tstate</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <operator pos:start="121:26" pos:end="121:26">(</operator><operator pos:start="121:27" pos:end="121:27">(</operator><name pos:start="121:28" pos:end="121:35">uint64_t</name><operator pos:start="121:36" pos:end="121:36">)</operator><call pos:start="121:37" pos:end="121:48"><name pos:start="121:37" pos:end="121:43">GET_CCR</name><argument_list pos:start="121:44" pos:end="121:48">(<argument pos:start="121:45" pos:end="121:47"><expr pos:start="121:45" pos:end="121:47"><name pos:start="121:45" pos:end="121:47">env</name></expr></argument>)</argument_list></call> <operator pos:start="121:50" pos:end="121:51">&lt;&lt;</operator> <literal type="number" pos:start="121:53" pos:end="121:54">32</literal><operator pos:start="121:55" pos:end="121:55">)</operator> <operator pos:start="121:57" pos:end="121:57">|</operator>

        <operator pos:start="123:9" pos:end="123:9">(</operator><operator pos:start="123:10" pos:end="123:10">(</operator><name pos:start="123:11" pos:end="123:18"><name pos:start="123:11" pos:end="123:13">env</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:18">asi</name></name> <operator pos:start="123:20" pos:end="123:20">&amp;</operator> <literal type="number" pos:start="123:22" pos:end="123:25">0xff</literal><operator pos:start="123:26" pos:end="123:26">)</operator> <operator pos:start="123:28" pos:end="123:29">&lt;&lt;</operator> <literal type="number" pos:start="123:31" pos:end="123:32">24</literal><operator pos:start="123:33" pos:end="123:33">)</operator> <operator pos:start="123:35" pos:end="123:35">|</operator> <operator pos:start="123:37" pos:end="123:37">(</operator><operator pos:start="123:38" pos:end="123:38">(</operator><name pos:start="123:39" pos:end="123:49"><name pos:start="123:39" pos:end="123:41">env</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:49">pstate</name></name> <operator pos:start="123:51" pos:end="123:51">&amp;</operator> <literal type="number" pos:start="123:53" pos:end="123:57">0xf3f</literal><operator pos:start="123:58" pos:end="123:58">)</operator> <operator pos:start="123:60" pos:end="123:61">&lt;&lt;</operator> <literal type="number" pos:start="123:63" pos:end="123:63">8</literal><operator pos:start="123:64" pos:end="123:64">)</operator> <operator pos:start="123:66" pos:end="123:66">|</operator>

        <call pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:17">GET_CWP64</name><argument_list pos:start="125:18" pos:end="125:22">(<argument pos:start="125:19" pos:end="125:21"><expr pos:start="125:19" pos:end="125:21"><name pos:start="125:19" pos:end="125:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:19"><name pos:start="127:5" pos:end="127:7">env</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:14">tsptr</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:19">tpc</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:29"><name pos:start="127:23" pos:end="127:25">env</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:29">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:32"><expr pos:start="129:5" pos:end="129:31"><name pos:start="129:5" pos:end="129:20"><name pos:start="129:5" pos:end="129:7">env</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:14">tsptr</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:20">tnpc</name></name> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:31"><name pos:start="129:24" pos:end="129:26">env</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:31">npc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:27"><expr pos:start="131:5" pos:end="131:26"><name pos:start="131:5" pos:end="131:18"><name pos:start="131:5" pos:end="131:7">env</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:14">tsptr</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:18">tt</name></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:26">intno</name></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="165:5"><if pos:start="133:5" pos:end="165:5">if <condition pos:start="133:8" pos:end="133:47">(<expr pos:start="133:9" pos:end="133:46"><operator pos:start="133:9" pos:end="133:9">!</operator><operator pos:start="133:10" pos:end="133:10">(</operator><name pos:start="133:11" pos:end="133:28"><name pos:start="133:11" pos:end="133:13">env</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:18">def</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:28">features</name></name> <operator pos:start="133:30" pos:end="133:30">&amp;</operator> <name pos:start="133:32" pos:end="133:45">CPU_FEATURE_GL</name><operator pos:start="133:46" pos:end="133:46">)</operator></expr>)</condition> <block pos:start="133:49" pos:end="165:5">{<block_content pos:start="135:9" pos:end="163:9">

        <switch pos:start="135:9" pos:end="163:9">switch <condition pos:start="135:16" pos:end="135:22">(<expr pos:start="135:17" pos:end="135:21"><name pos:start="135:17" pos:end="135:21">intno</name></expr>)</condition> <block pos:start="135:24" pos:end="163:9">{<block_content pos:start="137:9" pos:end="161:18">

        <case pos:start="137:9" pos:end="137:21">case <expr pos:start="137:14" pos:end="137:20"><name pos:start="137:14" pos:end="137:20">TT_IVEC</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:52"><expr pos:start="139:13" pos:end="139:51"><call pos:start="139:13" pos:end="139:51"><name pos:start="139:13" pos:end="139:25">change_pstate</name><argument_list pos:start="139:26" pos:end="139:51">(<argument pos:start="139:27" pos:end="139:50"><expr pos:start="139:27" pos:end="139:50"><name pos:start="139:27" pos:end="139:32">PS_PEF</name> <operator pos:start="139:34" pos:end="139:34">|</operator> <name pos:start="139:36" pos:end="139:42">PS_PRIV</name> <operator pos:start="139:44" pos:end="139:44">|</operator> <name pos:start="139:46" pos:end="139:50">PS_IG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:23">case <expr pos:start="143:14" pos:end="143:22"><name pos:start="143:14" pos:end="143:22">TT_TFAULT</name></expr>:</case>

        <case pos:start="145:9" pos:end="145:22">case <expr pos:start="145:14" pos:end="145:21"><name pos:start="145:14" pos:end="145:21">TT_TMISS</name></expr>:</case>

        <case pos:start="147:9" pos:end="147:23">case <expr pos:start="147:14" pos:end="147:22"><name pos:start="147:14" pos:end="147:22">TT_DFAULT</name></expr>:</case>

        <case pos:start="149:9" pos:end="149:22">case <expr pos:start="149:14" pos:end="149:21"><name pos:start="149:14" pos:end="149:21">TT_DMISS</name></expr>:</case>

        <case pos:start="151:9" pos:end="151:22">case <expr pos:start="151:14" pos:end="151:21"><name pos:start="151:14" pos:end="151:21">TT_DPROT</name></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:52"><expr pos:start="153:13" pos:end="153:51"><call pos:start="153:13" pos:end="153:51"><name pos:start="153:13" pos:end="153:25">change_pstate</name><argument_list pos:start="153:26" pos:end="153:51">(<argument pos:start="153:27" pos:end="153:50"><expr pos:start="153:27" pos:end="153:50"><name pos:start="153:27" pos:end="153:32">PS_PEF</name> <operator pos:start="153:34" pos:end="153:34">|</operator> <name pos:start="153:36" pos:end="153:42">PS_PRIV</name> <operator pos:start="153:44" pos:end="153:44">|</operator> <name pos:start="153:46" pos:end="153:50">PS_MG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <default pos:start="157:9" pos:end="157:16">default:</default>

            <expr_stmt pos:start="159:13" pos:end="159:52"><expr pos:start="159:13" pos:end="159:51"><call pos:start="159:13" pos:end="159:51"><name pos:start="159:13" pos:end="159:25">change_pstate</name><argument_list pos:start="159:26" pos:end="159:51">(<argument pos:start="159:27" pos:end="159:50"><expr pos:start="159:27" pos:end="159:50"><name pos:start="159:27" pos:end="159:32">PS_PEF</name> <operator pos:start="159:34" pos:end="159:34">|</operator> <name pos:start="159:36" pos:end="159:42">PS_PRIV</name> <operator pos:start="159:44" pos:end="159:44">|</operator> <name pos:start="159:46" pos:end="159:50">PS_AG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="167:5" pos:end="177:57"><if pos:start="167:5" pos:end="169:57">if <condition pos:start="167:8" pos:end="167:27">(<expr pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:13">intno</name> <operator pos:start="167:15" pos:end="167:16">==</operator> <name pos:start="167:18" pos:end="167:26">TT_CLRWIN</name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:57"><block_content pos:start="169:9" pos:end="169:57">

        <expr_stmt pos:start="169:9" pos:end="169:57"><expr pos:start="169:9" pos:end="169:56"><call pos:start="169:9" pos:end="169:56"><name pos:start="169:9" pos:end="169:19">cpu_set_cwp</name><argument_list pos:start="169:20" pos:end="169:56">(<argument pos:start="169:21" pos:end="169:23"><expr pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:23">env</name></expr></argument>, <argument pos:start="169:26" pos:end="169:55"><expr pos:start="169:26" pos:end="169:55"><call pos:start="169:26" pos:end="169:55"><name pos:start="169:26" pos:end="169:36">cpu_cwp_dec</name><argument_list pos:start="169:37" pos:end="169:55">(<argument pos:start="169:38" pos:end="169:40"><expr pos:start="169:38" pos:end="169:40"><name pos:start="169:38" pos:end="169:40">env</name></expr></argument>, <argument pos:start="169:43" pos:end="169:54"><expr pos:start="169:43" pos:end="169:54"><name pos:start="169:43" pos:end="169:50"><name pos:start="169:43" pos:end="169:45">env</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:50">cwp</name></name> <operator pos:start="169:52" pos:end="169:52">-</operator> <literal type="number" pos:start="169:54" pos:end="169:54">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="171:5" pos:end="173:72">else if <condition pos:start="171:13" pos:end="171:41">(<expr pos:start="171:14" pos:end="171:40"><operator pos:start="171:14" pos:end="171:14">(</operator><name pos:start="171:15" pos:end="171:19">intno</name> <operator pos:start="171:21" pos:end="171:21">&amp;</operator> <literal type="number" pos:start="171:23" pos:end="171:27">0x1c0</literal><operator pos:start="171:28" pos:end="171:28">)</operator> <operator pos:start="171:30" pos:end="171:31">==</operator> <name pos:start="171:33" pos:end="171:40">TT_SPILL</name></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:72"><block_content pos:start="173:9" pos:end="173:72">

        <expr_stmt pos:start="173:9" pos:end="173:72"><expr pos:start="173:9" pos:end="173:71"><call pos:start="173:9" pos:end="173:71"><name pos:start="173:9" pos:end="173:19">cpu_set_cwp</name><argument_list pos:start="173:20" pos:end="173:71">(<argument pos:start="173:21" pos:end="173:23"><expr pos:start="173:21" pos:end="173:23"><name pos:start="173:21" pos:end="173:23">env</name></expr></argument>, <argument pos:start="173:26" pos:end="173:70"><expr pos:start="173:26" pos:end="173:70"><call pos:start="173:26" pos:end="173:70"><name pos:start="173:26" pos:end="173:36">cpu_cwp_dec</name><argument_list pos:start="173:37" pos:end="173:70">(<argument pos:start="173:38" pos:end="173:40"><expr pos:start="173:38" pos:end="173:40"><name pos:start="173:38" pos:end="173:40">env</name></expr></argument>, <argument pos:start="173:43" pos:end="173:69"><expr pos:start="173:43" pos:end="173:69"><name pos:start="173:43" pos:end="173:50"><name pos:start="173:43" pos:end="173:45">env</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:50">cwp</name></name> <operator pos:start="173:52" pos:end="173:52">-</operator> <name pos:start="173:54" pos:end="173:65"><name pos:start="173:54" pos:end="173:56">env</name><operator pos:start="173:57" pos:end="173:58">-&gt;</operator><name pos:start="173:59" pos:end="173:65">cansave</name></name> <operator pos:start="173:67" pos:end="173:67">-</operator> <literal type="number" pos:start="173:69" pos:end="173:69">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="175:5" pos:end="177:57">else if <condition pos:start="175:13" pos:end="175:40">(<expr pos:start="175:14" pos:end="175:39"><operator pos:start="175:14" pos:end="175:14">(</operator><name pos:start="175:15" pos:end="175:19">intno</name> <operator pos:start="175:21" pos:end="175:21">&amp;</operator> <literal type="number" pos:start="175:23" pos:end="175:27">0x1c0</literal><operator pos:start="175:28" pos:end="175:28">)</operator> <operator pos:start="175:30" pos:end="175:31">==</operator> <name pos:start="175:33" pos:end="175:39">TT_FILL</name></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:57"><block_content pos:start="177:9" pos:end="177:57">

        <expr_stmt pos:start="177:9" pos:end="177:57"><expr pos:start="177:9" pos:end="177:56"><call pos:start="177:9" pos:end="177:56"><name pos:start="177:9" pos:end="177:19">cpu_set_cwp</name><argument_list pos:start="177:20" pos:end="177:56">(<argument pos:start="177:21" pos:end="177:23"><expr pos:start="177:21" pos:end="177:23"><name pos:start="177:21" pos:end="177:23">env</name></expr></argument>, <argument pos:start="177:26" pos:end="177:55"><expr pos:start="177:26" pos:end="177:55"><call pos:start="177:26" pos:end="177:55"><name pos:start="177:26" pos:end="177:36">cpu_cwp_inc</name><argument_list pos:start="177:37" pos:end="177:55">(<argument pos:start="177:38" pos:end="177:40"><expr pos:start="177:38" pos:end="177:40"><name pos:start="177:38" pos:end="177:40">env</name></expr></argument>, <argument pos:start="177:43" pos:end="177:54"><expr pos:start="177:43" pos:end="177:54"><name pos:start="177:43" pos:end="177:50"><name pos:start="177:43" pos:end="177:45">env</name><operator pos:start="177:46" pos:end="177:47">-&gt;</operator><name pos:start="177:48" pos:end="177:50">cwp</name></name> <operator pos:start="177:52" pos:end="177:52">+</operator> <literal type="number" pos:start="177:54" pos:end="177:54">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:27"><expr pos:start="179:5" pos:end="179:26"><name pos:start="179:5" pos:end="179:12"><name pos:start="179:5" pos:end="179:7">env</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:12">tbr</name></name> <operator pos:start="179:14" pos:end="179:15">&amp;=</operator> <operator pos:start="179:17" pos:end="179:17">~</operator><literal type="number" pos:start="179:18" pos:end="179:26">0x7fffULL</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:61"><expr pos:start="181:5" pos:end="181:60"><name pos:start="181:5" pos:end="181:12"><name pos:start="181:5" pos:end="181:7">env</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:12">tbr</name></name> <operator pos:start="181:14" pos:end="181:15">|=</operator> <operator pos:start="181:17" pos:end="181:17">(</operator><ternary pos:start="181:18" pos:end="181:44"><condition pos:start="181:18" pos:end="181:32"><expr pos:start="181:18" pos:end="181:30"><operator pos:start="181:18" pos:end="181:18">(</operator><name pos:start="181:19" pos:end="181:25"><name pos:start="181:19" pos:end="181:21">env</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:25">tl</name></name> <operator pos:start="181:27" pos:end="181:27">&gt;</operator> <literal type="number" pos:start="181:29" pos:end="181:29">1</literal><operator pos:start="181:30" pos:end="181:30">)</operator></expr> ?</condition><then pos:start="181:34" pos:end="181:40"> <expr pos:start="181:34" pos:end="181:40"><literal type="number" pos:start="181:34" pos:end="181:34">1</literal> <operator pos:start="181:36" pos:end="181:37">&lt;&lt;</operator> <literal type="number" pos:start="181:39" pos:end="181:40">14</literal></expr> </then><else pos:start="181:42" pos:end="181:44">: <expr pos:start="181:44" pos:end="181:44"><literal type="number" pos:start="181:44" pos:end="181:44">0</literal></expr></else></ternary><operator pos:start="181:45" pos:end="181:45">)</operator> <operator pos:start="181:47" pos:end="181:47">|</operator> <operator pos:start="181:49" pos:end="181:49">(</operator><name pos:start="181:50" pos:end="181:54">intno</name> <operator pos:start="181:56" pos:end="181:57">&lt;&lt;</operator> <literal type="number" pos:start="181:59" pos:end="181:59">5</literal><operator pos:start="181:60" pos:end="181:60">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:23"><expr pos:start="183:5" pos:end="183:22"><name pos:start="183:5" pos:end="183:11"><name pos:start="183:5" pos:end="183:7">env</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:11">pc</name></name> <operator pos:start="183:13" pos:end="183:13">=</operator> <name pos:start="183:15" pos:end="183:22"><name pos:start="183:15" pos:end="183:17">env</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:22">tbr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:27"><expr pos:start="185:5" pos:end="185:26"><name pos:start="185:5" pos:end="185:12"><name pos:start="185:5" pos:end="185:7">env</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:12">npc</name></name> <operator pos:start="185:14" pos:end="185:14">=</operator> <name pos:start="185:16" pos:end="185:22"><name pos:start="185:16" pos:end="185:18">env</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:22">pc</name></name> <operator pos:start="185:24" pos:end="185:24">+</operator> <literal type="number" pos:start="185:26" pos:end="185:26">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:29"><expr pos:start="187:5" pos:end="187:28"><name pos:start="187:5" pos:end="187:24"><name pos:start="187:5" pos:end="187:7">env</name><operator pos:start="187:8" pos:end="187:9">-&gt;</operator><name pos:start="187:10" pos:end="187:24">exception_index</name></name> <operator pos:start="187:26" pos:end="187:26">=</operator> <literal type="number" pos:start="187:28" pos:end="187:28">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
