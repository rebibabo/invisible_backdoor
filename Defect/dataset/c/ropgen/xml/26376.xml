<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26376.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">opt_input_file</name><parameter_list pos:start="1:20" pos:end="1:41">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:32"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:40">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:24">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">ic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">AVFormatParameters</name></type> <name pos:start="7:24" pos:end="7:29">params</name></decl>, <decl pos:start="7:32" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:34">ap</name> <init pos:start="7:36" pos:end="7:44">= <expr pos:start="7:38" pos:end="7:44"><operator pos:start="7:38" pos:end="7:38">&amp;</operator><name pos:start="7:39" pos:end="7:44">params</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">ret</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:25">rfps</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:50">/* get default parameters from command line */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:30">(<argument pos:start="15:12" pos:end="15:13"><expr pos:start="15:12" pos:end="15:13"><name pos:start="15:12" pos:end="15:13">ap</name></expr></argument>, <argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr></argument>, <argument pos:start="15:19" pos:end="15:29"><expr pos:start="15:19" pos:end="15:29"><sizeof pos:start="15:19" pos:end="15:29">sizeof<argument_list pos:start="15:25" pos:end="15:29">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><operator pos:start="15:26" pos:end="15:26">*</operator><name pos:start="15:27" pos:end="15:28">ap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:6">ap</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:19">sample_rate</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:39">audio_sample_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:6">ap</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:16">channels</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:33">audio_channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:6">ap</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:18">frame_rate</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:31">frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:6">ap</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:13">width</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:27">frame_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:6">ap</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:14">height</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:29">frame_height</name></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:57">/* open the input file with generic libav function */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:7">err</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:64"><name pos:start="31:11" pos:end="31:28">av_open_input_file</name><argument_list pos:start="31:29" pos:end="31:64">(<argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:32">ic</name></expr></argument>, <argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:42">filename</name></expr></argument>, <argument pos:start="31:45" pos:end="31:56"><expr pos:start="31:45" pos:end="31:56"><name pos:start="31:45" pos:end="31:56">file_iformat</name></expr></argument>, <argument pos:start="31:59" pos:end="31:59"><expr pos:start="31:59" pos:end="31:59"><literal type="number" pos:start="31:59" pos:end="31:59">0</literal></expr></argument>, <argument pos:start="31:62" pos:end="31:63"><expr pos:start="31:62" pos:end="31:63"><name pos:start="31:62" pos:end="31:63">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:16">

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:19">print_error</name><argument_list pos:start="35:20" pos:end="35:34">(<argument pos:start="35:21" pos:end="35:28"><expr pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:28">filename</name></expr></argument>, <argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><call pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:12">exit</name><argument_list pos:start="37:13" pos:end="37:15">(<argument pos:start="37:14" pos:end="37:14"><expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="43:5" pos:end="45:65">/* If not enough info to get the stream parameters, we decode the

       first frames to get it. (used in mpeg case for example) */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:33"><name pos:start="47:11" pos:end="47:29">av_find_stream_info</name><argument_list pos:start="47:30" pos:end="47:33">(<argument pos:start="47:31" pos:end="47:32"><expr pos:start="47:31" pos:end="47:32"><name pos:start="47:31" pos:end="47:32">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">&lt;</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>)</condition> <block pos:start="49:18" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:16">

        <expr_stmt pos:start="51:9" pos:end="51:75"><expr pos:start="51:9" pos:end="51:74"><call pos:start="51:9" pos:end="51:74"><name pos:start="51:9" pos:end="51:15">fprintf</name><argument_list pos:start="51:16" pos:end="51:74">(<argument pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:22">stderr</name></expr></argument>, <argument pos:start="51:25" pos:end="51:63"><expr pos:start="51:25" pos:end="51:63"><literal type="string" pos:start="51:25" pos:end="51:63">"%s: could not find codec parameters\n"</literal></expr></argument>, <argument pos:start="51:66" pos:end="51:73"><expr pos:start="51:66" pos:end="51:73"><name pos:start="51:66" pos:end="51:73">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:16"><expr pos:start="53:9" pos:end="53:15"><call pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:12">exit</name><argument_list pos:start="53:13" pos:end="53:15">(<argument pos:start="53:14" pos:end="53:14"><expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:86">/* update the current parameters so that they match the one of the input stream */</comment>

    <for pos:start="61:5" pos:end="107:5">for<control pos:start="61:8" pos:end="61:33">(<init pos:start="61:9" pos:end="61:12"><expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:9">i</name><operator pos:start="61:10" pos:end="61:10">=</operator><literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>;</init><condition pos:start="61:13" pos:end="61:29"><expr pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:13">i</name><operator pos:start="61:14" pos:end="61:14">&lt;</operator><name pos:start="61:15" pos:end="61:28"><name pos:start="61:15" pos:end="61:16">ic</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:28">nb_streams</name></name></expr>;</condition><incr pos:start="61:30" pos:end="61:32"><expr pos:start="61:30" pos:end="61:32"><name pos:start="61:30" pos:end="61:30">i</name><operator pos:start="61:31" pos:end="61:32">++</operator></expr></incr>)</control> <block pos:start="61:35" pos:end="107:5">{<block_content pos:start="63:9" pos:end="105:9">

        <decl_stmt pos:start="63:9" pos:end="63:53"><decl pos:start="63:9" pos:end="63:52"><type pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:22">AVCodecContext</name> <modifier pos:start="63:24" pos:end="63:24">*</modifier></type><name pos:start="63:25" pos:end="63:27">enc</name> <init pos:start="63:29" pos:end="63:52">= <expr pos:start="63:31" pos:end="63:52"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:45"><name pos:start="63:32" pos:end="63:33">ic</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:42">streams</name><index pos:start="63:43" pos:end="63:45">[<expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">i</name></expr>]</index></name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:52">codec</name></expr></init></decl>;</decl_stmt>

        <switch pos:start="65:9" pos:end="105:9">switch<condition pos:start="65:15" pos:end="65:31">(<expr pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:18">enc</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:30">codec_type</name></name></expr>)</condition> <block pos:start="65:33" pos:end="105:9">{<block_content pos:start="67:9" pos:end="103:20">

        <case pos:start="67:9" pos:end="67:30">case <expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <comment type="line" pos:start="69:13" pos:end="69:75">//fprintf(stderr, "\nInput Audio channels: %d", enc-&gt;channels);</comment>

            <expr_stmt pos:start="71:13" pos:end="71:43"><expr pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:26">audio_channels</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:42"><name pos:start="71:30" pos:end="71:32">enc</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:42">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:29">audio_sample_rate</name> <operator pos:start="73:31" pos:end="73:31">=</operator> <name pos:start="73:33" pos:end="73:48"><name pos:start="73:33" pos:end="73:35">enc</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:48">sample_rate</name></name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:30">case <expr pos:start="77:14" pos:end="77:29"><name pos:start="77:14" pos:end="77:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:39"><expr pos:start="79:13" pos:end="79:38"><name pos:start="79:13" pos:end="79:24">frame_height</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:38"><name pos:start="79:28" pos:end="79:30">enc</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:38">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:37"><expr pos:start="81:13" pos:end="81:36"><name pos:start="81:13" pos:end="81:23">frame_width</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:36"><name pos:start="81:27" pos:end="81:29">enc</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:36">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:16">rfps</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:33"><name pos:start="83:20" pos:end="83:21">ic</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:30">streams</name><index pos:start="83:31" pos:end="83:33">[<expr pos:start="83:32" pos:end="83:32"><name pos:start="83:32" pos:end="83:32">i</name></expr>]</index></name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:47">r_frame_rate</name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="93:13"><if pos:start="85:13" pos:end="93:13">if <condition pos:start="85:16" pos:end="85:40">(<expr pos:start="85:17" pos:end="85:39"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:19">enc</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:31">frame_rate</name></name> <operator pos:start="85:33" pos:end="85:34">!=</operator> <name pos:start="85:36" pos:end="85:39">rfps</name></expr>)</condition> <block pos:start="85:42" pos:end="93:13">{<block_content pos:start="87:17" pos:end="91:51">

                <expr_stmt pos:start="87:17" pos:end="91:51"><expr pos:start="87:17" pos:end="91:50"><call pos:start="87:17" pos:end="91:50"><name pos:start="87:17" pos:end="87:23">fprintf</name><argument_list pos:start="87:24" pos:end="91:50">(<argument pos:start="87:25" pos:end="87:30"><expr pos:start="87:25" pos:end="87:30"><name pos:start="87:25" pos:end="87:30">stderr</name></expr></argument>,<argument pos:start="87:32" pos:end="87:94"><expr pos:start="87:32" pos:end="87:94"><literal type="string" pos:start="87:32" pos:end="87:94">"\nSeems that stream %d comes from film source: %2.2f-&gt;%2.2f\n"</literal></expr></argument>,

                    <argument pos:start="89:21" pos:end="89:21"><expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">i</name></expr></argument>, <argument pos:start="89:24" pos:end="89:63"><expr pos:start="89:24" pos:end="89:63"><operator pos:start="89:24" pos:end="89:24">(</operator><name pos:start="89:25" pos:end="89:29">float</name><operator pos:start="89:30" pos:end="89:30">)</operator><name pos:start="89:31" pos:end="89:45"><name pos:start="89:31" pos:end="89:33">enc</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:45">frame_rate</name></name> <operator pos:start="89:47" pos:end="89:47">/</operator> <name pos:start="89:49" pos:end="89:63">FRAME_RATE_BASE</name></expr></argument>,

                    <argument pos:start="91:21" pos:end="91:49"><expr pos:start="91:21" pos:end="91:49"><operator pos:start="91:21" pos:end="91:21">(</operator><name pos:start="91:22" pos:end="91:26">float</name><operator pos:start="91:27" pos:end="91:27">)</operator><name pos:start="91:28" pos:end="91:31">rfps</name> <operator pos:start="91:33" pos:end="91:33">/</operator> <name pos:start="91:35" pos:end="91:49">FRAME_RATE_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="95:13" pos:end="95:78">/* update the current frame rate to match the stream frame rate */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:22">frame_rate</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:29">rfps</name></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <default pos:start="101:9" pos:end="101:16">default:</default>

            <expr_stmt pos:start="103:13" pos:end="103:20"><expr pos:start="103:13" pos:end="103:19"><call pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:17">abort</name><argument_list pos:start="103:18" pos:end="103:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    

    <expr_stmt pos:start="111:5" pos:end="111:37"><expr pos:start="111:5" pos:end="111:36"><name pos:start="111:5" pos:end="111:31"><name pos:start="111:5" pos:end="111:15">input_files</name><index pos:start="111:16" pos:end="111:31">[<expr pos:start="111:17" pos:end="111:30"><name pos:start="111:17" pos:end="111:30">nb_input_files</name></expr>]</index></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <name pos:start="111:35" pos:end="111:36">ic</name></expr>;</expr_stmt>

    <comment type="block" pos:start="113:5" pos:end="113:31">/* dump the file content */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:49"><expr pos:start="115:5" pos:end="115:48"><call pos:start="115:5" pos:end="115:48"><name pos:start="115:5" pos:end="115:15">dump_format</name><argument_list pos:start="115:16" pos:end="115:48">(<argument pos:start="115:17" pos:end="115:18"><expr pos:start="115:17" pos:end="115:18"><name pos:start="115:17" pos:end="115:18">ic</name></expr></argument>, <argument pos:start="115:21" pos:end="115:34"><expr pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:34">nb_input_files</name></expr></argument>, <argument pos:start="115:37" pos:end="115:44"><expr pos:start="115:37" pos:end="115:44"><name pos:start="115:37" pos:end="115:44">filename</name></expr></argument>, <argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:21"><expr pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:18">nb_input_files</name><operator pos:start="117:19" pos:end="117:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:24"><expr pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:16">file_iformat</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:24"><expr pos:start="121:5" pos:end="121:23"><name pos:start="121:5" pos:end="121:16">file_oformat</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:23">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
