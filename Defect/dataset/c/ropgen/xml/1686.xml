<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1686.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">tcg_out_jxx</name><parameter_list pos:start="1:24" pos:end="1:75">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">TCGContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">opc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:63">label_index</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">small</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">val</name></decl>, <decl pos:start="5:18" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:18" pos:end="5:21">val1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCGLabel</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">l</name> <init pos:start="7:17" pos:end="7:41">= <expr pos:start="7:19" pos:end="7:41"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:41"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:28">labels</name><index pos:start="7:29" pos:end="7:41">[<expr pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:40">label_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="87:5"><if pos:start="11:5" pos:end="55:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">l</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">has_value</name></name></expr>)</condition> <block pos:start="11:23" pos:end="55:5">{<block_content pos:start="13:9" pos:end="53:9">

        <expr_stmt pos:start="13:9" pos:end="13:48"><expr pos:start="13:9" pos:end="13:47"><name pos:start="13:9" pos:end="13:11">val</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:47"><name pos:start="13:15" pos:end="13:28">tcg_pcrel_diff</name><argument_list pos:start="13:29" pos:end="13:47">(<argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">s</name></expr></argument>, <argument pos:start="13:33" pos:end="13:46"><expr pos:start="13:33" pos:end="13:46"><name pos:start="13:33" pos:end="13:46"><name pos:start="13:33" pos:end="13:33">l</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:36">u</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:46">value_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:12">val1</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:18">val</name> <operator pos:start="15:20" pos:end="15:20">-</operator> <literal type="number" pos:start="15:22" pos:end="15:22">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="53:9"><if pos:start="17:9" pos:end="31:9">if <condition pos:start="17:12" pos:end="17:33">(<expr pos:start="17:13" pos:end="17:32"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:19">int8_t</name><operator pos:start="17:20" pos:end="17:20">)</operator><name pos:start="17:21" pos:end="17:24">val1</name> <operator pos:start="17:26" pos:end="17:27">==</operator> <name pos:start="17:29" pos:end="17:32">val1</name></expr>)</condition> <block pos:start="17:35" pos:end="31:9">{<block_content pos:start="19:13" pos:end="29:30">

            <if_stmt pos:start="19:13" pos:end="27:13"><if pos:start="19:13" pos:end="23:13">if <condition pos:start="19:16" pos:end="19:26">(<expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:19">opc</name> <operator pos:start="19:21" pos:end="19:22">==</operator> <operator pos:start="19:24" pos:end="19:24">-</operator><literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr>)</condition> <block pos:start="19:28" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:43">

                <expr_stmt pos:start="21:17" pos:end="21:43"><expr pos:start="21:17" pos:end="21:42"><call pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:24">tcg_out8</name><argument_list pos:start="21:25" pos:end="21:42">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">s</name></expr></argument>, <argument pos:start="21:29" pos:end="21:41"><expr pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:41">OPC_JMP_short</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="23:15" pos:end="27:13">else <block pos:start="23:20" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:49">

                <expr_stmt pos:start="25:17" pos:end="25:49"><expr pos:start="25:17" pos:end="25:48"><call pos:start="25:17" pos:end="25:48"><name pos:start="25:17" pos:end="25:24">tcg_out8</name><argument_list pos:start="25:25" pos:end="25:48">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">s</name></expr></argument>, <argument pos:start="25:29" pos:end="25:47"><expr pos:start="25:29" pos:end="25:47"><name pos:start="25:29" pos:end="25:41">OPC_JCC_short</name> <operator pos:start="25:43" pos:end="25:43">+</operator> <name pos:start="25:45" pos:end="25:47">opc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><call pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:20">tcg_out8</name><argument_list pos:start="29:21" pos:end="29:29">(<argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">s</name></expr></argument>, <argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">val1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="53:9">else <block pos:start="31:16" pos:end="53:9">{<block_content pos:start="33:13" pos:end="51:13">

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:22">(<expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">small</name></expr>)</condition> <block pos:start="33:24" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:28">

                <expr_stmt pos:start="35:17" pos:end="35:28"><expr pos:start="35:17" pos:end="35:27"><call pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:25">tcg_abort</name><argument_list pos:start="35:26" pos:end="35:27">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="51:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:26">(<expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:19">opc</name> <operator pos:start="39:21" pos:end="39:22">==</operator> <operator pos:start="39:24" pos:end="39:24">-</operator><literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr>)</condition> <block pos:start="39:28" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:38">

                <expr_stmt pos:start="41:17" pos:end="41:42"><expr pos:start="41:17" pos:end="41:41"><call pos:start="41:17" pos:end="41:41"><name pos:start="41:17" pos:end="41:24">tcg_out8</name><argument_list pos:start="41:25" pos:end="41:41">(<argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">s</name></expr></argument>, <argument pos:start="41:29" pos:end="41:40"><expr pos:start="41:29" pos:end="41:40"><name pos:start="41:29" pos:end="41:40">OPC_JMP_long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><call pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:25">tcg_out32</name><argument_list pos:start="43:26" pos:end="43:37">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>, <argument pos:start="43:30" pos:end="43:36"><expr pos:start="43:30" pos:end="43:36"><name pos:start="43:30" pos:end="43:32">val</name> <operator pos:start="43:34" pos:end="43:34">-</operator> <literal type="number" pos:start="43:36" pos:end="43:36">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="51:13">else <block pos:start="45:20" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:38">

                <expr_stmt pos:start="47:17" pos:end="47:60"><expr pos:start="47:17" pos:end="47:59"><call pos:start="47:17" pos:end="47:59"><name pos:start="47:17" pos:end="47:27">tcg_out_opc</name><argument_list pos:start="47:28" pos:end="47:59">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">s</name></expr></argument>, <argument pos:start="47:32" pos:end="47:49"><expr pos:start="47:32" pos:end="47:49"><name pos:start="47:32" pos:end="47:43">OPC_JCC_long</name> <operator pos:start="47:45" pos:end="47:45">+</operator> <name pos:start="47:47" pos:end="47:49">opc</name></expr></argument>, <argument pos:start="47:52" pos:end="47:52"><expr pos:start="47:52" pos:end="47:52"><literal type="number" pos:start="47:52" pos:end="47:52">0</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:55"><expr pos:start="47:55" pos:end="47:55"><literal type="number" pos:start="47:55" pos:end="47:55">0</literal></expr></argument>, <argument pos:start="47:58" pos:end="47:58"><expr pos:start="47:58" pos:end="47:58"><literal type="number" pos:start="47:58" pos:end="47:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:38"><expr pos:start="49:17" pos:end="49:37"><call pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:25">tcg_out32</name><argument_list pos:start="49:26" pos:end="49:37">(<argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">s</name></expr></argument>, <argument pos:start="49:30" pos:end="49:36"><expr pos:start="49:30" pos:end="49:36"><name pos:start="49:30" pos:end="49:32">val</name> <operator pos:start="49:34" pos:end="49:34">-</operator> <literal type="number" pos:start="49:36" pos:end="49:36">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="71:5">else if <condition pos:start="55:15" pos:end="55:21">(<expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">small</name></expr>)</condition> <block pos:start="55:23" pos:end="71:5">{<block_content pos:start="57:9" pos:end="69:25">

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:22">(<expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:15">opc</name> <operator pos:start="57:17" pos:end="57:18">==</operator> <operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>)</condition> <block pos:start="57:24" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:39">

            <expr_stmt pos:start="59:13" pos:end="59:39"><expr pos:start="59:13" pos:end="59:38"><call pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:20">tcg_out8</name><argument_list pos:start="59:21" pos:end="59:38">(<argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">s</name></expr></argument>, <argument pos:start="59:25" pos:end="59:37"><expr pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:37">OPC_JMP_short</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:45">

            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><call pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:20">tcg_out8</name><argument_list pos:start="63:21" pos:end="63:44">(<argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">s</name></expr></argument>, <argument pos:start="63:25" pos:end="63:43"><expr pos:start="63:25" pos:end="63:43"><name pos:start="63:25" pos:end="63:37">OPC_JCC_short</name> <operator pos:start="63:39" pos:end="63:39">+</operator> <name pos:start="63:41" pos:end="63:43">opc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><call pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:21">tcg_out_reloc</name><argument_list pos:start="67:22" pos:end="67:65">(<argument pos:start="67:23" pos:end="67:23"><expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">s</name></expr></argument>, <argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:36">code_ptr</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:47"><expr pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:47">R_386_PC8</name></expr></argument>, <argument pos:start="67:50" pos:end="67:60"><expr pos:start="67:50" pos:end="67:60"><name pos:start="67:50" pos:end="67:60">label_index</name></expr></argument>, <argument pos:start="67:63" pos:end="67:64"><expr pos:start="67:63" pos:end="67:64"><operator pos:start="67:63" pos:end="67:63">-</operator><literal type="number" pos:start="67:64" pos:end="67:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:25"><expr pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:19">code_ptr</name></name> <operator pos:start="69:21" pos:end="69:22">+=</operator> <literal type="number" pos:start="69:24" pos:end="69:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="87:5">else <block pos:start="71:12" pos:end="87:5">{<block_content pos:start="73:9" pos:end="85:25">

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:22">(<expr pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:15">opc</name> <operator pos:start="73:17" pos:end="73:18">==</operator> <operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>)</condition> <block pos:start="73:24" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:38">

            <expr_stmt pos:start="75:13" pos:end="75:38"><expr pos:start="75:13" pos:end="75:37"><call pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:20">tcg_out8</name><argument_list pos:start="75:21" pos:end="75:37">(<argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><name pos:start="75:22" pos:end="75:22">s</name></expr></argument>, <argument pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:36">OPC_JMP_long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:56">

            <expr_stmt pos:start="79:13" pos:end="79:56"><expr pos:start="79:13" pos:end="79:55"><call pos:start="79:13" pos:end="79:55"><name pos:start="79:13" pos:end="79:23">tcg_out_opc</name><argument_list pos:start="79:24" pos:end="79:55">(<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><name pos:start="79:25" pos:end="79:25">s</name></expr></argument>, <argument pos:start="79:28" pos:end="79:45"><expr pos:start="79:28" pos:end="79:45"><name pos:start="79:28" pos:end="79:39">OPC_JCC_long</name> <operator pos:start="79:41" pos:end="79:41">+</operator> <name pos:start="79:43" pos:end="79:45">opc</name></expr></argument>, <argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><literal type="number" pos:start="79:48" pos:end="79:48">0</literal></expr></argument>, <argument pos:start="79:51" pos:end="79:51"><expr pos:start="79:51" pos:end="79:51"><literal type="number" pos:start="79:51" pos:end="79:51">0</literal></expr></argument>, <argument pos:start="79:54" pos:end="79:54"><expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:67"><expr pos:start="83:9" pos:end="83:66"><call pos:start="83:9" pos:end="83:66"><name pos:start="83:9" pos:end="83:21">tcg_out_reloc</name><argument_list pos:start="83:22" pos:end="83:66">(<argument pos:start="83:23" pos:end="83:23"><expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">s</name></expr></argument>, <argument pos:start="83:26" pos:end="83:36"><expr pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:36">code_ptr</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:48"><expr pos:start="83:39" pos:end="83:48"><name pos:start="83:39" pos:end="83:48">R_386_PC32</name></expr></argument>, <argument pos:start="83:51" pos:end="83:61"><expr pos:start="83:51" pos:end="83:61"><name pos:start="83:51" pos:end="83:61">label_index</name></expr></argument>, <argument pos:start="83:64" pos:end="83:65"><expr pos:start="83:64" pos:end="83:65"><operator pos:start="83:64" pos:end="83:64">-</operator><literal type="number" pos:start="83:65" pos:end="83:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:25"><expr pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:19">code_ptr</name></name> <operator pos:start="85:21" pos:end="85:22">+=</operator> <literal type="number" pos:start="85:24" pos:end="85:24">4</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
