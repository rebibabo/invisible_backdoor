<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8408.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:14">VIOsPAPRDevice</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:37">spapr_vty_get_default</name><parameter_list pos:start="1:38" pos:end="1:55">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:49">VIOsPAPRBus</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">bus</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:20">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VIOsPAPRDevice</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">sdev</name></decl>, <decl pos:start="5:27" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:20"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:35">selected</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">iter</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="19:7">/*

     * To avoid the console bouncing around we want one VTY to be

     * the "default". We haven't really got anything to go on, so

     * arbitrarily choose the one with the lowest reg value.

     */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:12">selected</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</expr_stmt>

    <macro pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:18">QTAILQ_FOREACH</name><argument_list pos:start="25:19" pos:end="25:53">(<argument pos:start="25:20" pos:end="25:23">iter</argument>, <argument pos:start="25:26" pos:end="25:43">&amp;bus-&gt;bus.children</argument>, <argument pos:start="25:46" pos:end="25:52">sibling</argument>)</argument_list></macro> <block pos:start="25:55" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:9">

        <comment type="block" pos:start="27:9" pos:end="27:38">/* Only look at VTY devices */</comment>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:56">(<expr pos:start="29:13" pos:end="29:55"><call pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:25">qdev_get_info</name><argument_list pos:start="29:26" pos:end="29:31">(<argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">iter</name></expr></argument>)</argument_list></call> <operator pos:start="29:33" pos:end="29:34">!=</operator> <operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:55"><name pos:start="29:37" pos:end="29:50">spapr_vty_info</name><operator pos:start="29:51" pos:end="29:51">.</operator><name pos:start="29:52" pos:end="29:55">qdev</name></name></expr>)</condition> <block pos:start="29:58" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:21">

            <continue pos:start="31:13" pos:end="31:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:12">sdev</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:52"><name pos:start="37:16" pos:end="37:24">DO_UPCAST</name><argument_list pos:start="37:25" pos:end="37:52">(<argument pos:start="37:26" pos:end="37:39"><expr pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:39">VIOsPAPRDevice</name></expr></argument>, <argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">qdev</name></expr></argument>, <argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">iter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="41:9" pos:end="41:62">/* First VTY we've found, so it is selected for now */</comment>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:22">(<expr pos:start="43:13" pos:end="43:21"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:21">selected</name></expr>)</condition> <block pos:start="43:24" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:21">

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:20">selected</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:27">sdev</name></expr>;</expr_stmt>

            <continue pos:start="47:13" pos:end="47:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:46">/* Choose VTY with lowest reg value */</comment>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:38">(<expr pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:16">sdev</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:21">reg</name></name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:37"><name pos:start="55:25" pos:end="55:32">selected</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:37">reg</name></name></expr>)</condition> <block pos:start="55:40" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:28">

            <expr_stmt pos:start="57:13" pos:end="57:28"><expr pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:20">selected</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:27">sdev</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="65:5" pos:end="65:20">return <expr pos:start="65:12" pos:end="65:19"><name pos:start="65:12" pos:end="65:19">selected</name></expr>;</return>

</block_content>}</block></function>
</unit>
