<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20182.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">asf_read_single_payload</name><parameter_list pos:start="1:35" pos:end="3:50">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">AVPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">pkt</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:40">ASFPacket</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:49">asf_pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ASFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">asf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type>  <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:20">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="35:25"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:28">(<expr pos:start="21:9" pos:end="21:27"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:16">asf_pkt</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:27">data_size</name></name></expr>)</condition> <block pos:start="21:30" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:23">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:15">asf_pkt</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:26">data_size</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <name pos:start="23:30" pos:end="23:47"><name pos:start="23:30" pos:end="23:36">asf_pkt</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:47">size_left</name></name> <operator pos:start="23:49" pos:end="23:49">=</operator> <call pos:start="23:51" pos:end="23:63"><name pos:start="23:51" pos:end="23:59">avio_rl32</name><argument_list pos:start="23:60" pos:end="23:63">(<argument pos:start="23:61" pos:end="23:62"><expr pos:start="23:61" pos:end="23:62"><name pos:start="23:61" pos:end="23:62">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="23:66" pos:end="23:90">// read media object size</comment>

        <if_stmt pos:start="25:9" pos:end="27:31"><if pos:start="25:9" pos:end="27:31">if <condition pos:start="25:12" pos:end="25:36">(<expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:19">asf_pkt</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:30">data_size</name></name> <operator pos:start="25:32" pos:end="25:33">&lt;=</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:31"><block_content pos:start="27:13" pos:end="27:31">

            <return pos:start="27:13" pos:end="27:31">return <expr pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:75">(<expr pos:start="29:13" pos:end="29:74"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:16">ret</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:69"><name pos:start="29:20" pos:end="29:32">av_new_packet</name><argument_list pos:start="29:33" pos:end="29:69">(<argument pos:start="29:34" pos:end="29:48"><expr pos:start="29:34" pos:end="29:48"><operator pos:start="29:34" pos:end="29:34">&amp;</operator><name pos:start="29:35" pos:end="29:48"><name pos:start="29:35" pos:end="29:41">asf_pkt</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:48">avpkt</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:68"><expr pos:start="29:51" pos:end="29:68"><name pos:start="29:51" pos:end="29:68"><name pos:start="29:51" pos:end="29:57">asf_pkt</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:68">data_size</name></name></expr></argument>)</argument_list></call><operator pos:start="29:70" pos:end="29:70">)</operator> <operator pos:start="29:72" pos:end="29:72">&lt;</operator> <literal type="number" pos:start="29:74" pos:end="29:74">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="35:25">else<block type="pseudo" pos:start="35:9" pos:end="35:25"><block_content pos:start="35:9" pos:end="35:25">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><call pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:17">avio_skip</name><argument_list pos:start="35:18" pos:end="35:24">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="35:27" pos:end="35:51">// skip media object size</comment>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:11">asf_pkt</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">dts</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:28">avio_rl32</name><argument_list pos:start="37:29" pos:end="37:32">(<argument pos:start="37:30" pos:end="37:31"><expr pos:start="37:30" pos:end="37:31"><name pos:start="37:30" pos:end="37:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="37:35" pos:end="37:59">// read presentation time</comment>

    <if_stmt pos:start="39:5" pos:end="41:45"><if pos:start="39:5" pos:end="41:45">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:11">asf</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:25">rep_data_len</name></name> <operator pos:start="39:27" pos:end="39:28">&gt;=</operator> <literal type="number" pos:start="39:30" pos:end="39:30">8</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:45"><block_content pos:start="41:9" pos:end="41:45">

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:17">avio_skip</name><argument_list pos:start="41:18" pos:end="41:44">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">pb</name></expr></argument>, <argument pos:start="41:23" pos:end="41:43"><expr pos:start="41:23" pos:end="41:43"><name pos:start="41:23" pos:end="41:39"><name pos:start="41:23" pos:end="41:25">asf</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:39">rep_data_len</name></name> <operator pos:start="41:41" pos:end="41:41">-</operator> <literal type="number" pos:start="41:43" pos:end="41:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="41:47" pos:end="41:69">// skip replicated data</comment>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:10">offset</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:22">avio_tell</name><argument_list pos:start="43:23" pos:end="43:26">(<argument pos:start="43:24" pos:end="43:25"><expr pos:start="43:24" pos:end="43:25"><name pos:start="43:24" pos:end="43:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="47:5" pos:end="47:74">// size of the payload - size of the packet without header and padding</comment>

    <if_stmt pos:start="49:5" pos:end="55:77"><if pos:start="49:5" pos:end="51:86">if <condition pos:start="49:8" pos:end="49:34">(<expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:11">asf</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:33">packet_size_internal</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:86"><block_content pos:start="51:9" pos:end="51:86">

        <expr_stmt pos:start="51:9" pos:end="51:86"><expr pos:start="51:9" pos:end="51:85"><name pos:start="51:9" pos:end="51:12">size</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:40"><name pos:start="51:16" pos:end="51:18">asf</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:40">packet_size_internal</name></name> <operator pos:start="51:42" pos:end="51:42">-</operator> <name pos:start="51:44" pos:end="51:49">offset</name> <operator pos:start="51:51" pos:end="51:51">+</operator> <name pos:start="51:53" pos:end="51:70"><name pos:start="51:53" pos:end="51:55">asf</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:70">packet_offset</name></name> <operator pos:start="51:72" pos:end="51:72">-</operator> <name pos:start="51:74" pos:end="51:85"><name pos:start="51:74" pos:end="51:76">asf</name><operator pos:start="51:77" pos:end="51:78">-&gt;</operator><name pos:start="51:79" pos:end="51:85">pad_len</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="53:5" pos:end="55:77">else<block type="pseudo" pos:start="55:9" pos:end="55:77"><block_content pos:start="55:9" pos:end="55:77">

        <expr_stmt pos:start="55:9" pos:end="55:77"><expr pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:12">size</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:31"><name pos:start="55:16" pos:end="55:18">asf</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:31">packet_size</name></name> <operator pos:start="55:33" pos:end="55:33">-</operator> <name pos:start="55:35" pos:end="55:40">offset</name> <operator pos:start="55:42" pos:end="55:42">+</operator> <name pos:start="55:44" pos:end="55:61"><name pos:start="55:44" pos:end="55:46">asf</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:61">packet_offset</name></name> <operator pos:start="55:63" pos:end="55:63">-</operator> <name pos:start="55:65" pos:end="55:76"><name pos:start="55:65" pos:end="55:67">asf</name><operator pos:start="55:68" pos:end="55:69">-&gt;</operator><name pos:start="55:70" pos:end="55:76">pad_len</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:32">(<expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:12">size</name> <operator pos:start="57:14" pos:end="57:14">&gt;</operator> <name pos:start="57:16" pos:end="57:31"><name pos:start="57:16" pos:end="57:18">asf</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:31">packet_size</name></name></expr>)</condition> <block pos:start="57:34" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:35">

        <expr_stmt pos:start="59:9" pos:end="63:30"><expr pos:start="59:9" pos:end="63:29"><call pos:start="59:9" pos:end="63:29"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="63:29">(<argument pos:start="59:16" pos:end="59:16"><expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">s</name></expr></argument>, <argument pos:start="59:19" pos:end="59:30"><expr pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="61:16" pos:end="61:69"><expr pos:start="61:16" pos:end="61:69"><literal type="string" pos:start="61:16" pos:end="61:58">"Error: invalid data packet size, offset %"</literal><name pos:start="61:59" pos:end="61:64">PRId64</name><literal type="string" pos:start="61:65" pos:end="61:69">".\n"</literal></expr></argument>,

               <argument pos:start="63:16" pos:end="63:28"><expr pos:start="63:16" pos:end="63:28"><call pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:24">avio_tell</name><argument_list pos:start="63:25" pos:end="63:28">(<argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><name pos:start="63:26" pos:end="63:27">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:70"><expr pos:start="69:5" pos:end="69:69"><name pos:start="69:5" pos:end="69:5">p</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:15">asf_pkt</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:22">avpkt</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:27">data</name></name> <operator pos:start="69:29" pos:end="69:29">+</operator> <name pos:start="69:31" pos:end="69:48"><name pos:start="69:31" pos:end="69:37">asf_pkt</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:48">data_size</name></name> <operator pos:start="69:50" pos:end="69:50">-</operator> <name pos:start="69:52" pos:end="69:69"><name pos:start="69:52" pos:end="69:58">asf_pkt</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:69">size_left</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:35"><if pos:start="71:5" pos:end="73:35">if <condition pos:start="71:8" pos:end="71:61">(<expr pos:start="71:9" pos:end="71:60"><name pos:start="71:9" pos:end="71:12">size</name> <operator pos:start="71:14" pos:end="71:14">&gt;</operator> <name pos:start="71:16" pos:end="71:33"><name pos:start="71:16" pos:end="71:22">asf_pkt</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:33">size_left</name></name> <operator pos:start="71:35" pos:end="71:36">||</operator> <name pos:start="71:38" pos:end="71:55"><name pos:start="71:38" pos:end="71:44">asf_pkt</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:55">size_left</name></name> <operator pos:start="71:57" pos:end="71:58">&lt;=</operator> <literal type="number" pos:start="71:60" pos:end="71:60">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:35"><block_content pos:start="73:9" pos:end="73:35">

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="81:31"><if pos:start="75:5" pos:end="77:35">if <condition pos:start="75:8" pos:end="75:34">(<expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:15">asf_pkt</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:26">size_left</name></name> <operator pos:start="75:28" pos:end="75:28">&gt;</operator> <name pos:start="75:30" pos:end="75:33">size</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:35"><block_content pos:start="77:9" pos:end="77:35">

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:15">asf_pkt</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:26">size_left</name></name> <operator pos:start="77:28" pos:end="77:29">-=</operator> <name pos:start="77:31" pos:end="77:34">size</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="79:5" pos:end="81:31">else<block type="pseudo" pos:start="81:9" pos:end="81:31"><block_content pos:start="81:9" pos:end="81:31">

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:15">asf_pkt</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:26">size_left</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="83:5" pos:end="85:19"><if pos:start="83:5" pos:end="85:19">if <condition pos:start="83:8" pos:end="83:43">(<expr pos:start="83:9" pos:end="83:42"><operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:12">ret</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:37"><name pos:start="83:16" pos:end="83:24">avio_read</name><argument_list pos:start="83:25" pos:end="83:37">(<argument pos:start="83:26" pos:end="83:27"><expr pos:start="83:26" pos:end="83:27"><name pos:start="83:26" pos:end="83:27">pb</name></expr></argument>, <argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">p</name></expr></argument>, <argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><name pos:start="83:33" pos:end="83:36">size</name></expr></argument>)</argument_list></call><operator pos:start="83:38" pos:end="83:38">)</operator> <operator pos:start="83:40" pos:end="83:40">&lt;</operator> <literal type="number" pos:start="83:42" pos:end="83:42">0</literal></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:19"><block_content pos:start="85:9" pos:end="85:19">

        <return pos:start="85:9" pos:end="85:19">return <expr pos:start="85:16" pos:end="85:18"><name pos:start="85:16" pos:end="85:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:44"><if pos:start="87:5" pos:end="89:44">if <condition pos:start="87:8" pos:end="87:34">(<expr pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">key</name></name> <operator pos:start="87:16" pos:end="87:17">&amp;&amp;</operator> <name pos:start="87:19" pos:end="87:27"><name pos:start="87:19" pos:end="87:19">s</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:27">keylen</name></name> <operator pos:start="87:29" pos:end="87:30">==</operator> <literal type="number" pos:start="87:32" pos:end="87:33">20</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:44"><block_content pos:start="89:13" pos:end="89:44">

            <expr_stmt pos:start="89:13" pos:end="89:44"><expr pos:start="89:13" pos:end="89:43"><call pos:start="89:13" pos:end="89:43"><name pos:start="89:13" pos:end="89:27">ff_asfcrypt_dec</name><argument_list pos:start="89:28" pos:end="89:43">(<argument pos:start="89:29" pos:end="89:34"><expr pos:start="89:29" pos:end="89:34"><name pos:start="89:29" pos:end="89:34"><name pos:start="89:29" pos:end="89:29">s</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:34">key</name></name></expr></argument>, <argument pos:start="89:37" pos:end="89:37"><expr pos:start="89:37" pos:end="89:37"><name pos:start="89:37" pos:end="89:37">p</name></expr></argument>, <argument pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:42">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:68"><if pos:start="91:5" pos:end="93:68">if <condition pos:start="91:8" pos:end="91:34">(<expr pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:11">asf</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:33">packet_size_internal</name></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:68"><block_content pos:start="93:9" pos:end="93:68">

        <expr_stmt pos:start="93:9" pos:end="93:68"><expr pos:start="93:9" pos:end="93:67"><call pos:start="93:9" pos:end="93:67"><name pos:start="93:9" pos:end="93:17">avio_skip</name><argument_list pos:start="93:18" pos:end="93:67">(<argument pos:start="93:19" pos:end="93:20"><expr pos:start="93:19" pos:end="93:20"><name pos:start="93:19" pos:end="93:20">pb</name></expr></argument>, <argument pos:start="93:23" pos:end="93:66"><expr pos:start="93:23" pos:end="93:66"><name pos:start="93:23" pos:end="93:38"><name pos:start="93:23" pos:end="93:25">asf</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:38">packet_size</name></name> <operator pos:start="93:40" pos:end="93:40">-</operator> <name pos:start="93:42" pos:end="93:66"><name pos:start="93:42" pos:end="93:44">asf</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:66">packet_size_internal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:32"><expr pos:start="95:5" pos:end="95:31"><call pos:start="95:5" pos:end="95:31"><name pos:start="95:5" pos:end="95:13">avio_skip</name><argument_list pos:start="95:14" pos:end="95:31">(<argument pos:start="95:15" pos:end="95:16"><expr pos:start="95:15" pos:end="95:16"><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>, <argument pos:start="95:19" pos:end="95:30"><expr pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:21">asf</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:30">pad_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="95:34" pos:end="95:48">// skip padding</comment>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
