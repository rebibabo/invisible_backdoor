<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4338.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">qed_read_l2_table</name><parameter_list pos:start="1:22" pos:end="1:76">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:34">BDRVQEDState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><name pos:start="1:40" pos:end="1:49">QEDRequest</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:58">request</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:68">uint64_t</name></type> <name pos:start="1:70" pos:end="1:75">offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:48"><expr pos:start="9:5" pos:end="9:47"><call pos:start="9:5" pos:end="9:47"><name pos:start="9:5" pos:end="9:28">qed_unref_l2_cache_entry</name><argument_list pos:start="9:29" pos:end="9:47">(<argument pos:start="9:30" pos:end="9:46"><expr pos:start="9:30" pos:end="9:46"><name pos:start="9:30" pos:end="9:46"><name pos:start="9:30" pos:end="9:36">request</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:46">l2_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:35">/* Check for cached L2 entry */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:70"><expr pos:start="15:5" pos:end="15:69"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:11">request</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:21">l2_table</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <call pos:start="15:25" pos:end="15:69"><name pos:start="15:25" pos:end="15:47">qed_find_l2_cache_entry</name><argument_list pos:start="15:48" pos:end="15:69">(<argument pos:start="15:49" pos:end="15:60"><expr pos:start="15:49" pos:end="15:60"><operator pos:start="15:49" pos:end="15:49">&amp;</operator><name pos:start="15:50" pos:end="15:60"><name pos:start="15:50" pos:end="15:50">s</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:60">l2_cache</name></name></expr></argument>, <argument pos:start="15:63" pos:end="15:68"><expr pos:start="15:63" pos:end="15:68"><name pos:start="15:63" pos:end="15:68">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:15">request</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:25">l2_table</name></name></expr>)</condition> <block pos:start="17:28" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:11">request</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:21">l2_table</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <call pos:start="25:25" pos:end="25:62"><name pos:start="25:25" pos:end="25:48">qed_alloc_l2_cache_entry</name><argument_list pos:start="25:49" pos:end="25:62">(<argument pos:start="25:50" pos:end="25:61"><expr pos:start="25:50" pos:end="25:61"><operator pos:start="25:50" pos:end="25:50">&amp;</operator><name pos:start="25:51" pos:end="25:61"><name pos:start="25:51" pos:end="25:51">s</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:61">l2_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:11">request</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:21">l2_table</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:28">table</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <call pos:start="27:32" pos:end="27:49"><name pos:start="27:32" pos:end="27:46">qed_alloc_table</name><argument_list pos:start="27:47" pos:end="27:49">(<argument pos:start="27:48" pos:end="27:48"><expr pos:start="27:48" pos:end="27:48"><name pos:start="27:48" pos:end="27:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><call pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:16">BLKDBG_EVENT</name><argument_list pos:start="31:17" pos:end="31:45">(<argument pos:start="31:18" pos:end="31:28"><expr pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:22">bs</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:28">file</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:44"><expr pos:start="31:31" pos:end="31:44"><name pos:start="31:31" pos:end="31:44">BLKDBG_L2_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:61"><name pos:start="33:11" pos:end="33:24">qed_read_table</name><argument_list pos:start="33:25" pos:end="33:61">(<argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">s</name></expr></argument>, <argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:34">offset</name></expr></argument>, <argument pos:start="33:37" pos:end="33:60"><expr pos:start="33:37" pos:end="33:60"><name pos:start="33:37" pos:end="33:60"><name pos:start="33:37" pos:end="33:43">request</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:53">l2_table</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:60">table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><call pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:15">qed_acquire</name><argument_list pos:start="37:16" pos:end="37:18">(<argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="67:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">ret</name></expr>)</condition> <block pos:start="39:14" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:33">

        <comment type="block" pos:start="41:9" pos:end="41:49">/* can't trust loaded L2 table anymore */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:51"><name pos:start="43:9" pos:end="43:32">qed_unref_l2_cache_entry</name><argument_list pos:start="43:33" pos:end="43:51">(<argument pos:start="43:34" pos:end="43:50"><expr pos:start="43:34" pos:end="43:50"><name pos:start="43:34" pos:end="43:50"><name pos:start="43:34" pos:end="43:40">request</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:50">l2_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:15">request</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:25">l2_table</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="67:5">else <block pos:start="47:12" pos:end="67:5">{<block_content pos:start="49:9" pos:end="65:42">

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:15">request</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:25">l2_table</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:33">offset</name></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:42">offset</name></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:67"><expr pos:start="53:9" pos:end="53:66"><call pos:start="53:9" pos:end="53:66"><name pos:start="53:9" pos:end="53:33">qed_commit_l2_cache_entry</name><argument_list pos:start="53:34" pos:end="53:66">(<argument pos:start="53:35" pos:end="53:46"><expr pos:start="53:35" pos:end="53:46"><operator pos:start="53:35" pos:end="53:35">&amp;</operator><name pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:36">s</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:46">l2_cache</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:65"><expr pos:start="53:49" pos:end="53:65"><name pos:start="53:49" pos:end="53:65"><name pos:start="53:49" pos:end="53:55">request</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:65">l2_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="57:9" pos:end="61:11">/* This is guaranteed to succeed because we just committed the entry

         * to the cache.

         */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:74"><expr pos:start="63:9" pos:end="63:73"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:15">request</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:25">l2_table</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <call pos:start="63:29" pos:end="63:73"><name pos:start="63:29" pos:end="63:51">qed_find_l2_cache_entry</name><argument_list pos:start="63:52" pos:end="63:73">(<argument pos:start="63:53" pos:end="63:64"><expr pos:start="63:53" pos:end="63:64"><operator pos:start="63:53" pos:end="63:53">&amp;</operator><name pos:start="63:54" pos:end="63:64"><name pos:start="63:54" pos:end="63:54">s</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:64">l2_cache</name></name></expr></argument>, <argument pos:start="63:67" pos:end="63:72"><expr pos:start="63:67" pos:end="63:72"><name pos:start="63:67" pos:end="63:72">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:42"><expr pos:start="65:9" pos:end="65:41"><call pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:41">(<argument pos:start="65:16" pos:end="65:40"><expr pos:start="65:16" pos:end="65:40"><name pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:22">request</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:32">l2_table</name></name> <operator pos:start="65:34" pos:end="65:35">!=</operator> <name pos:start="65:37" pos:end="65:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:19"><expr pos:start="69:5" pos:end="69:18"><call pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:15">qed_release</name><argument_list pos:start="69:16" pos:end="69:18">(<argument pos:start="69:17" pos:end="69:17"><expr pos:start="69:17" pos:end="69:17"><name pos:start="69:17" pos:end="69:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
