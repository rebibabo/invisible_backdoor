<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/816.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:8">xmit_seg</name><argument_list pos:start="1:9" pos:end="1:23">(<argument pos:start="1:10" pos:end="1:22">E1000State *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:41">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">frames</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">tx</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:42">tso_frames</name></name></expr></init></decl>, <decl pos:start="7:45" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:45" pos:end="7:47">css</name></decl>, <decl pos:start="7:50" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:50" pos:end="7:54">sofar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">e1000_tx</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">tp</name> <init pos:start="9:25" pos:end="9:32">= <expr pos:start="9:27" pos:end="9:32"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">tx</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="81:5"><if pos:start="13:5" pos:end="81:5">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:10">tp</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">props</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:21">tse</name></name> <operator pos:start="13:23" pos:end="13:24">&amp;&amp;</operator> <name pos:start="13:26" pos:end="13:40"><name pos:start="13:26" pos:end="13:27">tp</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:34">props</name><operator pos:start="13:35" pos:end="13:35">.</operator><name pos:start="13:36" pos:end="13:40">cptse</name></name></expr>)</condition> <block pos:start="13:43" pos:end="81:5">{<block_content pos:start="15:9" pos:end="79:25">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:11">css</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:16">tp</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">props</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:29">ipcss</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="19:38"><expr pos:start="17:9" pos:end="19:37"><call pos:start="17:9" pos:end="19:37"><name pos:start="17:9" pos:end="17:14">DBGOUT</name><argument_list pos:start="17:15" pos:end="19:37">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">TXSUM</name></expr></argument>, <argument pos:start="17:23" pos:end="17:52"><expr pos:start="17:23" pos:end="17:52"><literal type="string" pos:start="17:23" pos:end="17:52">"frames %d size %d ipcss %d\n"</literal></expr></argument>,

               <argument pos:start="19:16" pos:end="19:21"><expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:21">frames</name></expr></argument>, <argument pos:start="19:24" pos:end="19:31"><expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:25">tp</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:31">size</name></name></expr></argument>, <argument pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:36">css</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="33:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:25">(<expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:14">tp</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">props</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:24">ip</name></name></expr>)</condition> <block pos:start="21:27" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:61">    <comment type="block" pos:start="21:32" pos:end="21:41">/* IPv4 */</comment>

            <expr_stmt pos:start="23:13" pos:end="23:53"><expr pos:start="23:13" pos:end="23:52"><call pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:20">stw_be_p</name><argument_list pos:start="23:21" pos:end="23:52">(<argument pos:start="23:22" pos:end="23:35"><expr pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:23">tp</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:29">data</name></name><operator pos:start="23:30" pos:end="23:30">+</operator><name pos:start="23:31" pos:end="23:33">css</name><operator pos:start="23:34" pos:end="23:34">+</operator><literal type="number" pos:start="23:35" pos:end="23:35">2</literal></expr></argument>, <argument pos:start="23:38" pos:end="23:51"><expr pos:start="23:38" pos:end="23:51"><name pos:start="23:38" pos:end="23:45"><name pos:start="23:38" pos:end="23:39">tp</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:45">size</name></name> <operator pos:start="23:47" pos:end="23:47">-</operator> <name pos:start="23:49" pos:end="23:51">css</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="27:61"><expr pos:start="25:13" pos:end="27:60"><call pos:start="25:13" pos:end="27:60"><name pos:start="25:13" pos:end="25:20">stw_be_p</name><argument_list pos:start="25:21" pos:end="27:60">(<argument pos:start="25:22" pos:end="25:35"><expr pos:start="25:22" pos:end="25:35"><name pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:23">tp</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">data</name></name><operator pos:start="25:30" pos:end="25:30">+</operator><name pos:start="25:31" pos:end="25:33">css</name><operator pos:start="25:34" pos:end="25:34">+</operator><literal type="number" pos:start="25:35" pos:end="25:35">4</literal></expr></argument>,

                     <argument pos:start="27:22" pos:end="27:59"><expr pos:start="27:22" pos:end="27:59"><call pos:start="27:22" pos:end="27:50"><name pos:start="27:22" pos:end="27:30">lduw_be_p</name><argument_list pos:start="27:31" pos:end="27:50">(<argument pos:start="27:32" pos:end="27:49"><expr pos:start="27:32" pos:end="27:49"><name pos:start="27:32" pos:end="27:39"><name pos:start="27:32" pos:end="27:33">tp</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:39">data</name></name> <operator pos:start="27:41" pos:end="27:41">+</operator> <name pos:start="27:43" pos:end="27:45">css</name> <operator pos:start="27:47" pos:end="27:47">+</operator> <literal type="number" pos:start="27:49" pos:end="27:49">4</literal></expr></argument>)</argument_list></call> <operator pos:start="27:52" pos:end="27:52">+</operator> <name pos:start="27:54" pos:end="27:59">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:53">         <comment type="block" pos:start="29:26" pos:end="29:35">/* IPv6 */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:53"><expr pos:start="31:13" pos:end="31:52"><call pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:20">stw_be_p</name><argument_list pos:start="31:21" pos:end="31:52">(<argument pos:start="31:22" pos:end="31:35"><expr pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:23">tp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">data</name></name><operator pos:start="31:30" pos:end="31:30">+</operator><name pos:start="31:31" pos:end="31:33">css</name><operator pos:start="31:34" pos:end="31:34">+</operator><literal type="number" pos:start="31:35" pos:end="31:35">4</literal></expr></argument>, <argument pos:start="31:38" pos:end="31:51"><expr pos:start="31:38" pos:end="31:51"><name pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:39">tp</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">size</name></name> <operator pos:start="31:47" pos:end="31:47">-</operator> <name pos:start="31:49" pos:end="31:51">css</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:11">css</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:29"><name pos:start="35:15" pos:end="35:16">tp</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">props</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:29">tucss</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:22"><name pos:start="37:15" pos:end="37:16">tp</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">size</name></name> <operator pos:start="37:24" pos:end="37:24">-</operator> <name pos:start="37:26" pos:end="37:28">css</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:14">DBGOUT</name><argument_list pos:start="39:15" pos:end="39:74">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">TXSUM</name></expr></argument>, <argument pos:start="39:23" pos:end="39:48"><expr pos:start="39:23" pos:end="39:48"><literal type="string" pos:start="39:23" pos:end="39:48">"tcp %d tucss %d len %d\n"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:63"><expr pos:start="39:51" pos:end="39:63"><name pos:start="39:51" pos:end="39:63"><name pos:start="39:51" pos:end="39:52">tp</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:59">props</name><operator pos:start="39:60" pos:end="39:60">.</operator><name pos:start="39:61" pos:end="39:63">tcp</name></name></expr></argument>, <argument pos:start="39:66" pos:end="39:68"><expr pos:start="39:66" pos:end="39:68"><name pos:start="39:66" pos:end="39:68">css</name></expr></argument>, <argument pos:start="39:71" pos:end="39:73"><expr pos:start="39:71" pos:end="39:73"><name pos:start="39:71" pos:end="39:73">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="59:42"><if pos:start="41:9" pos:end="57:9">if <condition pos:start="41:12" pos:end="41:26">(<expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:14">tp</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">props</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">tcp</name></name></expr>)</condition> <block pos:start="41:28" pos:end="57:9">{<block_content pos:start="43:13" pos:end="55:13">

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:17">sofar</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:26">frames</name> <operator pos:start="43:28" pos:end="43:28">*</operator> <name pos:start="43:30" pos:end="43:42"><name pos:start="43:30" pos:end="43:31">tp</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:38">props</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:42">mss</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:69"><expr pos:start="45:13" pos:end="45:68"><call pos:start="45:13" pos:end="45:68"><name pos:start="45:13" pos:end="45:20">stl_be_p</name><argument_list pos:start="45:21" pos:end="45:68">(<argument pos:start="45:22" pos:end="45:35"><expr pos:start="45:22" pos:end="45:35"><name pos:start="45:22" pos:end="45:29"><name pos:start="45:22" pos:end="45:23">tp</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">data</name></name><operator pos:start="45:30" pos:end="45:30">+</operator><name pos:start="45:31" pos:end="45:33">css</name><operator pos:start="45:34" pos:end="45:34">+</operator><literal type="number" pos:start="45:35" pos:end="45:35">4</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:67"><expr pos:start="45:38" pos:end="45:67"><call pos:start="45:38" pos:end="45:61"><name pos:start="45:38" pos:end="45:45">ldl_be_p</name><argument_list pos:start="45:46" pos:end="45:61">(<argument pos:start="45:47" pos:end="45:60"><expr pos:start="45:47" pos:end="45:60"><name pos:start="45:47" pos:end="45:54"><name pos:start="45:47" pos:end="45:48">tp</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:54">data</name></name><operator pos:start="45:55" pos:end="45:55">+</operator><name pos:start="45:56" pos:end="45:58">css</name><operator pos:start="45:59" pos:end="45:59">+</operator><literal type="number" pos:start="45:60" pos:end="45:60">4</literal></expr></argument>)</argument_list></call><operator pos:start="45:62" pos:end="45:62">+</operator><name pos:start="45:63" pos:end="45:67">sofar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:71" pos:end="45:79">/* seq */</comment>

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:57">(<expr pos:start="47:17" pos:end="47:56"><name pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:18">tp</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:25">props</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:32">paylen</name></name> <operator pos:start="47:34" pos:end="47:34">-</operator> <name pos:start="47:36" pos:end="47:40">sofar</name> <operator pos:start="47:42" pos:end="47:42">&gt;</operator> <name pos:start="47:44" pos:end="47:56"><name pos:start="47:44" pos:end="47:45">tp</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:52">props</name><operator pos:start="47:53" pos:end="47:53">.</operator><name pos:start="47:54" pos:end="47:56">mss</name></name></expr>)</condition> <block pos:start="47:59" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:41">

                <expr_stmt pos:start="49:17" pos:end="49:41"><expr pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:34"><name pos:start="49:17" pos:end="49:18">tp</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:24">data</name><index pos:start="49:25" pos:end="49:34">[<expr pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:28">css</name> <operator pos:start="49:30" pos:end="49:30">+</operator> <literal type="number" pos:start="49:32" pos:end="49:33">13</literal></expr>]</index></name> <operator pos:start="49:36" pos:end="49:37">&amp;=</operator> <operator pos:start="49:39" pos:end="49:39">~</operator><literal type="number" pos:start="49:40" pos:end="49:40">9</literal></expr>;</expr_stmt>    <comment type="block" pos:start="49:46" pos:end="49:59">/* PSH, FIN */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="51:15" pos:end="55:13">else if <condition pos:start="51:23" pos:end="51:30">(<expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:29">frames</name></expr>)</condition> <block pos:start="51:32" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:62">

                <expr_stmt pos:start="53:17" pos:end="53:62"><expr pos:start="53:17" pos:end="53:61"><call pos:start="53:17" pos:end="53:61"><name pos:start="53:17" pos:end="53:42">e1000x_inc_reg_if_not_full</name><argument_list pos:start="53:43" pos:end="53:61">(<argument pos:start="53:44" pos:end="53:53"><expr pos:start="53:44" pos:end="53:53"><name pos:start="53:44" pos:end="53:53"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:53">mac_reg</name></name></expr></argument>, <argument pos:start="53:56" pos:end="53:60"><expr pos:start="53:56" pos:end="53:60"><name pos:start="53:56" pos:end="53:60">TSCTC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="59:42">else<block type="pseudo" pos:start="59:13" pos:end="59:42"><block_content pos:start="59:13" pos:end="59:42">    <comment type="block" pos:start="57:19" pos:end="57:27">/* UDP */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:42"><expr pos:start="59:13" pos:end="59:41"><call pos:start="59:13" pos:end="59:41"><name pos:start="59:13" pos:end="59:20">stw_be_p</name><argument_list pos:start="59:21" pos:end="59:41">(<argument pos:start="59:22" pos:end="59:35"><expr pos:start="59:22" pos:end="59:35"><name pos:start="59:22" pos:end="59:29"><name pos:start="59:22" pos:end="59:23">tp</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:29">data</name></name><operator pos:start="59:30" pos:end="59:30">+</operator><name pos:start="59:31" pos:end="59:33">css</name><operator pos:start="59:34" pos:end="59:34">+</operator><literal type="number" pos:start="59:35" pos:end="59:35">4</literal></expr></argument>, <argument pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="61:9" pos:end="77:9"><if pos:start="61:9" pos:end="77:9">if <condition pos:start="61:12" pos:end="61:56">(<expr pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:14">tp</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:21">props</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:32">sum_needed</name></name> <operator pos:start="61:34" pos:end="61:34">&amp;</operator> <name pos:start="61:36" pos:end="61:55">E1000_TXD_POPTS_TXSM</name></expr>)</condition> <block pos:start="61:58" pos:end="77:9">{<block_content pos:start="63:13" pos:end="75:32">

            <decl_stmt pos:start="63:13" pos:end="63:31"><decl pos:start="63:13" pos:end="63:30"><type pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:20">unsigned</name> <name pos:start="63:22" pos:end="63:24">int</name></type> <name pos:start="63:26" pos:end="63:30">phsum</name></decl>;</decl_stmt>

            <comment type="line" pos:start="65:13" pos:end="65:67">// add pseudo-header length before checksum calculation</comment>

            <decl_stmt pos:start="67:13" pos:end="67:50"><decl pos:start="67:13" pos:end="67:49"><type pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:16">void</name> <modifier pos:start="67:18" pos:end="67:18">*</modifier></type><name pos:start="67:19" pos:end="67:20">sp</name> <init pos:start="67:22" pos:end="67:49">= <expr pos:start="67:24" pos:end="67:49"><name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:25">tp</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:31">data</name></name> <operator pos:start="67:33" pos:end="67:33">+</operator> <name pos:start="67:35" pos:end="67:49"><name pos:start="67:35" pos:end="67:36">tp</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:43">props</name><operator pos:start="67:44" pos:end="67:44">.</operator><name pos:start="67:45" pos:end="67:49">tucso</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:40"><expr pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:17">phsum</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:33"><name pos:start="71:21" pos:end="71:29">lduw_be_p</name><argument_list pos:start="71:30" pos:end="71:33">(<argument pos:start="71:31" pos:end="71:32"><expr pos:start="71:31" pos:end="71:32"><name pos:start="71:31" pos:end="71:32">sp</name></expr></argument>)</argument_list></call> <operator pos:start="71:35" pos:end="71:35">+</operator> <name pos:start="71:37" pos:end="71:39">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:53"><expr pos:start="73:13" pos:end="73:52"><name pos:start="73:13" pos:end="73:17">phsum</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:26">phsum</name> <operator pos:start="73:28" pos:end="73:29">&gt;&gt;</operator> <literal type="number" pos:start="73:31" pos:end="73:32">16</literal><operator pos:start="73:33" pos:end="73:33">)</operator> <operator pos:start="73:35" pos:end="73:35">+</operator> <operator pos:start="73:37" pos:end="73:37">(</operator><name pos:start="73:38" pos:end="73:42">phsum</name> <operator pos:start="73:44" pos:end="73:44">&amp;</operator> <literal type="number" pos:start="73:46" pos:end="73:51">0xffff</literal><operator pos:start="73:52" pos:end="73:52">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:20">stw_be_p</name><argument_list pos:start="75:21" pos:end="75:31">(<argument pos:start="75:22" pos:end="75:23"><expr pos:start="75:22" pos:end="75:23"><name pos:start="75:22" pos:end="75:23">sp</name></expr></argument>, <argument pos:start="75:26" pos:end="75:30"><expr pos:start="75:26" pos:end="75:30"><name pos:start="75:26" pos:end="75:30">phsum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:10">tp</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:22">tso_frames</name></name><operator pos:start="79:23" pos:end="79:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:52">(<expr pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:10">tp</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:17">props</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:28">sum_needed</name></name> <operator pos:start="85:30" pos:end="85:30">&amp;</operator> <name pos:start="85:32" pos:end="85:51">E1000_TXD_POPTS_TXSM</name></expr>)</condition> <block pos:start="85:54" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:49">

        <expr_stmt pos:start="87:9" pos:end="89:49"><expr pos:start="87:9" pos:end="89:48"><call pos:start="87:9" pos:end="89:48"><name pos:start="87:9" pos:end="87:14">putsum</name><argument_list pos:start="87:15" pos:end="89:48">(<argument pos:start="87:16" pos:end="87:23"><expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:17">tp</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:23">data</name></name></expr></argument>, <argument pos:start="87:26" pos:end="87:33"><expr pos:start="87:26" pos:end="87:33"><name pos:start="87:26" pos:end="87:33"><name pos:start="87:26" pos:end="87:27">tp</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:33">size</name></name></expr></argument>, <argument pos:start="87:36" pos:end="87:50"><expr pos:start="87:36" pos:end="87:50"><name pos:start="87:36" pos:end="87:50"><name pos:start="87:36" pos:end="87:37">tp</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:44">props</name><operator pos:start="87:45" pos:end="87:45">.</operator><name pos:start="87:46" pos:end="87:50">tucso</name></name></expr></argument>,

               <argument pos:start="89:16" pos:end="89:30"><expr pos:start="89:16" pos:end="89:30"><name pos:start="89:16" pos:end="89:30"><name pos:start="89:16" pos:end="89:17">tp</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:24">props</name><operator pos:start="89:25" pos:end="89:25">.</operator><name pos:start="89:26" pos:end="89:30">tucss</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:47"><expr pos:start="89:33" pos:end="89:47"><name pos:start="89:33" pos:end="89:47"><name pos:start="89:33" pos:end="89:34">tp</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:41">props</name><operator pos:start="89:42" pos:end="89:42">.</operator><name pos:start="89:43" pos:end="89:47">tucse</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:52">(<expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:10">tp</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:17">props</name><operator pos:start="93:18" pos:end="93:18">.</operator><name pos:start="93:19" pos:end="93:28">sum_needed</name></name> <operator pos:start="93:30" pos:end="93:30">&amp;</operator> <name pos:start="93:32" pos:end="93:51">E1000_TXD_POPTS_IXSM</name></expr>)</condition> <block pos:start="93:54" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:49">

        <expr_stmt pos:start="95:9" pos:end="97:49"><expr pos:start="95:9" pos:end="97:48"><call pos:start="95:9" pos:end="97:48"><name pos:start="95:9" pos:end="95:14">putsum</name><argument_list pos:start="95:15" pos:end="97:48">(<argument pos:start="95:16" pos:end="95:23"><expr pos:start="95:16" pos:end="95:23"><name pos:start="95:16" pos:end="95:23"><name pos:start="95:16" pos:end="95:17">tp</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:23">data</name></name></expr></argument>, <argument pos:start="95:26" pos:end="95:33"><expr pos:start="95:26" pos:end="95:33"><name pos:start="95:26" pos:end="95:33"><name pos:start="95:26" pos:end="95:27">tp</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:33">size</name></name></expr></argument>, <argument pos:start="95:36" pos:end="95:50"><expr pos:start="95:36" pos:end="95:50"><name pos:start="95:36" pos:end="95:50"><name pos:start="95:36" pos:end="95:37">tp</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:44">props</name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:50">ipcso</name></name></expr></argument>,

               <argument pos:start="97:16" pos:end="97:30"><expr pos:start="97:16" pos:end="97:30"><name pos:start="97:16" pos:end="97:30"><name pos:start="97:16" pos:end="97:17">tp</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">props</name><operator pos:start="97:25" pos:end="97:25">.</operator><name pos:start="97:26" pos:end="97:30">ipcss</name></name></expr></argument>, <argument pos:start="97:33" pos:end="97:47"><expr pos:start="97:33" pos:end="97:47"><name pos:start="97:33" pos:end="97:47"><name pos:start="97:33" pos:end="97:34">tp</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:41">props</name><operator pos:start="97:42" pos:end="97:42">.</operator><name pos:start="97:43" pos:end="97:47">ipcse</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="101:5" pos:end="115:5"><if pos:start="101:5" pos:end="111:5">if <condition pos:start="101:8" pos:end="101:24">(<expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:10">tp</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:23">vlan_needed</name></name></expr>)</condition> <block pos:start="101:26" pos:end="111:5">{<block_content pos:start="103:9" pos:end="109:53">

        <expr_stmt pos:start="103:9" pos:end="103:39"><expr pos:start="103:9" pos:end="103:38"><call pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:15">memmove</name><argument_list pos:start="103:16" pos:end="103:38">(<argument pos:start="103:17" pos:end="103:24"><expr pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:18">tp</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:24">vlan</name></name></expr></argument>, <argument pos:start="103:27" pos:end="103:34"><expr pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:28">tp</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:34">data</name></name></expr></argument>, <argument pos:start="103:37" pos:end="103:37"><expr pos:start="103:37" pos:end="103:37"><literal type="number" pos:start="103:37" pos:end="103:37">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><call pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:15">memmove</name><argument_list pos:start="105:16" pos:end="105:42">(<argument pos:start="105:17" pos:end="105:24"><expr pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:18">tp</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:24">data</name></name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:34"><name pos:start="105:27" pos:end="105:28">tp</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:34">data</name></name> <operator pos:start="105:36" pos:end="105:36">+</operator> <literal type="number" pos:start="105:38" pos:end="105:38">4</literal></expr></argument>, <argument pos:start="105:41" pos:end="105:41"><expr pos:start="105:41" pos:end="105:41"><literal type="number" pos:start="105:41" pos:end="105:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:49"><expr pos:start="107:9" pos:end="107:48"><call pos:start="107:9" pos:end="107:48"><name pos:start="107:9" pos:end="107:14">memcpy</name><argument_list pos:start="107:15" pos:end="107:48">(<argument pos:start="107:16" pos:end="107:27"><expr pos:start="107:16" pos:end="107:27"><name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:17">tp</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:23">data</name></name> <operator pos:start="107:25" pos:end="107:25">+</operator> <literal type="number" pos:start="107:27" pos:end="107:27">8</literal></expr></argument>, <argument pos:start="107:30" pos:end="107:44"><expr pos:start="107:30" pos:end="107:44"><name pos:start="107:30" pos:end="107:44"><name pos:start="107:30" pos:end="107:31">tp</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:44">vlan_header</name></name></expr></argument>, <argument pos:start="107:47" pos:end="107:47"><expr pos:start="107:47" pos:end="107:47"><literal type="number" pos:start="107:47" pos:end="107:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><call pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:25">e1000_send_packet</name><argument_list pos:start="109:26" pos:end="109:52">(<argument pos:start="109:27" pos:end="109:27"><expr pos:start="109:27" pos:end="109:27"><name pos:start="109:27" pos:end="109:27">s</name></expr></argument>, <argument pos:start="109:30" pos:end="109:37"><expr pos:start="109:30" pos:end="109:37"><name pos:start="109:30" pos:end="109:37"><name pos:start="109:30" pos:end="109:31">tp</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:37">vlan</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:51"><expr pos:start="109:40" pos:end="109:51"><name pos:start="109:40" pos:end="109:47"><name pos:start="109:40" pos:end="109:41">tp</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:47">size</name></name> <operator pos:start="109:49" pos:end="109:49">+</operator> <literal type="number" pos:start="109:51" pos:end="109:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="115:5">else <block pos:start="111:12" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:49">

        <expr_stmt pos:start="113:9" pos:end="113:49"><expr pos:start="113:9" pos:end="113:48"><call pos:start="113:9" pos:end="113:48"><name pos:start="113:9" pos:end="113:25">e1000_send_packet</name><argument_list pos:start="113:26" pos:end="113:48">(<argument pos:start="113:27" pos:end="113:27"><expr pos:start="113:27" pos:end="113:27"><name pos:start="113:27" pos:end="113:27">s</name></expr></argument>, <argument pos:start="113:30" pos:end="113:37"><expr pos:start="113:30" pos:end="113:37"><name pos:start="113:30" pos:end="113:37"><name pos:start="113:30" pos:end="113:31">tp</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:37">data</name></name></expr></argument>, <argument pos:start="113:40" pos:end="113:47"><expr pos:start="113:40" pos:end="113:47"><name pos:start="113:40" pos:end="113:47"><name pos:start="113:40" pos:end="113:41">tp</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:48"><expr pos:start="119:5" pos:end="119:47"><call pos:start="119:5" pos:end="119:47"><name pos:start="119:5" pos:end="119:30">e1000x_inc_reg_if_not_full</name><argument_list pos:start="119:31" pos:end="119:47">(<argument pos:start="119:32" pos:end="119:41"><expr pos:start="119:32" pos:end="119:41"><name pos:start="119:32" pos:end="119:41"><name pos:start="119:32" pos:end="119:32">s</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:41">mac_reg</name></name></expr></argument>, <argument pos:start="119:44" pos:end="119:46"><expr pos:start="119:44" pos:end="119:46"><name pos:start="119:44" pos:end="119:46">TPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:63"><expr pos:start="121:5" pos:end="121:62"><call pos:start="121:5" pos:end="121:62"><name pos:start="121:5" pos:end="121:32">e1000x_grow_8reg_if_not_full</name><argument_list pos:start="121:33" pos:end="121:62">(<argument pos:start="121:34" pos:end="121:43"><expr pos:start="121:34" pos:end="121:43"><name pos:start="121:34" pos:end="121:43"><name pos:start="121:34" pos:end="121:34">s</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:43">mac_reg</name></name></expr></argument>, <argument pos:start="121:46" pos:end="121:49"><expr pos:start="121:46" pos:end="121:49"><name pos:start="121:46" pos:end="121:49">TOTL</name></expr></argument>, <argument pos:start="121:52" pos:end="121:61"><expr pos:start="121:52" pos:end="121:61"><name pos:start="121:52" pos:end="121:61"><name pos:start="121:52" pos:end="121:52">s</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:56">tx</name><operator pos:start="121:57" pos:end="121:57">.</operator><name pos:start="121:58" pos:end="121:61">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:39"><expr pos:start="123:5" pos:end="123:38"><name pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:14">mac_reg</name><index pos:start="123:15" pos:end="123:20">[<expr pos:start="123:16" pos:end="123:19"><name pos:start="123:16" pos:end="123:19">GPTC</name></expr>]</index></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <name pos:start="123:24" pos:end="123:38"><name pos:start="123:24" pos:end="123:24">s</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:33">mac_reg</name><index pos:start="123:34" pos:end="123:38">[<expr pos:start="123:35" pos:end="123:37"><name pos:start="123:35" pos:end="123:37">TPT</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:41"><expr pos:start="125:5" pos:end="125:40"><name pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:14">mac_reg</name><index pos:start="125:15" pos:end="125:21">[<expr pos:start="125:16" pos:end="125:20"><name pos:start="125:16" pos:end="125:20">GOTCL</name></expr>]</index></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:40"><name pos:start="125:25" pos:end="125:25">s</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:34">mac_reg</name><index pos:start="125:35" pos:end="125:40">[<expr pos:start="125:36" pos:end="125:39"><name pos:start="125:36" pos:end="125:39">TOTL</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:41"><expr pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:14">mac_reg</name><index pos:start="127:15" pos:end="127:21">[<expr pos:start="127:16" pos:end="127:20"><name pos:start="127:16" pos:end="127:20">GOTCH</name></expr>]</index></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:40"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:34">mac_reg</name><index pos:start="127:35" pos:end="127:40">[<expr pos:start="127:36" pos:end="127:39"><name pos:start="127:36" pos:end="127:39">TOTH</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block>
</unit>
