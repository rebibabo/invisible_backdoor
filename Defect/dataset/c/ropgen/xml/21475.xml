<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21475.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:40">decode_residual_inter</name><parameter_list pos:start="1:41" pos:end="1:55">(<parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:51">AVSContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">h</name></decl></parameter>)</parameter_list> <block pos:start="1:57" pos:end="27:1">{<block_content pos:start="3:5" pos:end="25:30">

    <decl_stmt pos:start="3:5" pos:end="3:14"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">block</name></decl>;</decl_stmt>



    <comment type="block" pos:start="7:5" pos:end="7:33">/* get coded block pattern */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:49"><expr pos:start="9:5" pos:end="9:48"><name pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:5">h</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:10">cbp</name></name> <operator pos:start="9:12" pos:end="9:12">=</operator> <name pos:start="9:14" pos:end="9:48"><name pos:start="9:14" pos:end="9:20">cbp_tab</name><index pos:start="9:21" pos:end="9:45">[<expr pos:start="9:22" pos:end="9:44"><call pos:start="9:22" pos:end="9:44"><name pos:start="9:22" pos:end="9:34">get_ue_golomb</name><argument_list pos:start="9:35" pos:end="9:44">(<argument pos:start="9:36" pos:end="9:43"><expr pos:start="9:36" pos:end="9:43"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:43"><name pos:start="9:37" pos:end="9:37">h</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:40">s</name><operator pos:start="9:41" pos:end="9:41">.</operator><name pos:start="9:42" pos:end="9:43">gb</name></name></expr></argument>)</argument_list></call></expr>]</index><index pos:start="9:46" pos:end="9:48">[<expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <comment type="block" pos:start="11:5" pos:end="11:23">/* get quantizer */</comment>

    <if_stmt pos:start="13:5" pos:end="15:41"><if pos:start="13:5" pos:end="15:41">if<condition pos:start="13:7" pos:end="13:30">(<expr pos:start="13:8" pos:end="13:29"><name pos:start="13:8" pos:end="13:13"><name pos:start="13:8" pos:end="13:8">h</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:13">cbp</name></name> <operator pos:start="13:15" pos:end="13:16">&amp;&amp;</operator> <operator pos:start="13:18" pos:end="13:18">!</operator><name pos:start="13:19" pos:end="13:29"><name pos:start="13:19" pos:end="13:19">h</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:29">qp_fixed</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:41"><block_content pos:start="15:9" pos:end="15:41">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:9">h</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:13">qp</name></name> <operator pos:start="15:15" pos:end="15:16">+=</operator> <call pos:start="15:18" pos:end="15:40"><name pos:start="15:18" pos:end="15:30">get_se_golomb</name><argument_list pos:start="15:31" pos:end="15:40">(<argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><operator pos:start="15:32" pos:end="15:32">&amp;</operator><name pos:start="15:33" pos:end="15:39"><name pos:start="15:33" pos:end="15:33">h</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:36">s</name><operator pos:start="15:37" pos:end="15:37">.</operator><name pos:start="15:38" pos:end="15:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="17:5" pos:end="23:76">for<control pos:start="17:8" pos:end="17:32">(<init pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:13">block</name><operator pos:start="17:14" pos:end="17:14">=</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</init><condition pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:23"><name pos:start="17:17" pos:end="17:21">block</name><operator pos:start="17:22" pos:end="17:22">&lt;</operator><literal type="number" pos:start="17:23" pos:end="17:23">4</literal></expr>;</condition><incr pos:start="17:25" pos:end="17:31"><expr pos:start="17:25" pos:end="17:31"><name pos:start="17:25" pos:end="17:29">block</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="23:76"><block_content pos:start="19:9" pos:end="23:76">

        <if_stmt pos:start="19:9" pos:end="23:76"><if pos:start="19:9" pos:end="23:76">if<condition pos:start="19:11" pos:end="19:31">(<expr pos:start="19:12" pos:end="19:30"><name pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:12">h</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">cbp</name></name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal><operator pos:start="19:23" pos:end="19:24">&lt;&lt;</operator><name pos:start="19:25" pos:end="19:29">block</name><operator pos:start="19:30" pos:end="19:30">)</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="23:76"><block_content pos:start="21:13" pos:end="23:76">

            <expr_stmt pos:start="21:13" pos:end="23:76"><expr pos:start="21:13" pos:end="23:75"><call pos:start="21:13" pos:end="23:75"><name pos:start="21:13" pos:end="21:33">decode_residual_block</name><argument_list pos:start="21:34" pos:end="23:75">(<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">h</name></expr></argument>,<argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:38">h</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:41">s</name><operator pos:start="21:42" pos:end="21:42">.</operator><name pos:start="21:43" pos:end="21:44">gb</name></name></expr></argument>,<argument pos:start="21:46" pos:end="21:56"><expr pos:start="21:46" pos:end="21:56"><name pos:start="21:46" pos:end="21:56">inter_2dvlc</name></expr></argument>,<argument pos:start="21:58" pos:end="21:58"><expr pos:start="21:58" pos:end="21:58"><literal type="number" pos:start="21:58" pos:end="21:58">0</literal></expr></argument>,<argument pos:start="21:60" pos:end="21:64"><expr pos:start="21:60" pos:end="21:64"><name pos:start="21:60" pos:end="21:64"><name pos:start="21:60" pos:end="21:60">h</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:64">qp</name></name></expr></argument>,

                                  <argument pos:start="23:35" pos:end="23:61"><expr pos:start="23:35" pos:end="23:61"><name pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:35">h</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:39">cy</name></name> <operator pos:start="23:41" pos:end="23:41">+</operator> <name pos:start="23:43" pos:end="23:61"><name pos:start="23:43" pos:end="23:43">h</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:54">luma_scan</name><index pos:start="23:55" pos:end="23:61">[<expr pos:start="23:56" pos:end="23:60"><name pos:start="23:56" pos:end="23:60">block</name></expr>]</index></name></expr></argument>, <argument pos:start="23:64" pos:end="23:74"><expr pos:start="23:64" pos:end="23:74"><name pos:start="23:64" pos:end="23:74"><name pos:start="23:64" pos:end="23:64">h</name><operator pos:start="23:65" pos:end="23:66">-&gt;</operator><name pos:start="23:67" pos:end="23:74">l_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><call pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:26">decode_residual_chroma</name><argument_list pos:start="25:27" pos:end="25:29">(<argument pos:start="25:28" pos:end="25:28"><expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
