<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/477.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">img_open_password</name><parameter_list pos:start="1:29" pos:end="3:51">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:41">BlockBackend</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">blk</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">filename</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:38"><decl pos:start="3:30" pos:end="3:38"><type pos:start="3:30" pos:end="3:38"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">flags</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:50"><decl pos:start="3:41" pos:end="3:50"><type pos:start="3:41" pos:end="3:50"><name pos:start="3:41" pos:end="3:44">bool</name></type> <name pos:start="3:46" pos:end="3:50">quiet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:13">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:17">password</name><index pos:start="9:18" pos:end="9:22">[<expr pos:start="9:19" pos:end="9:21"><literal type="number" pos:start="9:19" pos:end="9:21">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:6">bs</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:15">blk_bs</name><argument_list pos:start="13:16" pos:end="13:20">(<argument pos:start="13:17" pos:end="13:19"><expr pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:19">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="35:5">if <condition pos:start="15:8" pos:end="15:57">(<expr pos:start="15:9" pos:end="15:56"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:25">bdrv_is_encrypted</name><argument_list pos:start="15:26" pos:end="15:29">(<argument pos:start="15:27" pos:end="15:28"><expr pos:start="15:27" pos:end="15:28"><name pos:start="15:27" pos:end="15:28">bs</name></expr></argument>)</argument_list></call> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator> <operator pos:start="15:34" pos:end="15:34">!</operator><operator pos:start="15:35" pos:end="15:35">(</operator><name pos:start="15:36" pos:end="15:40">flags</name> <operator pos:start="15:42" pos:end="15:42">&amp;</operator> <name pos:start="15:44" pos:end="15:55">BDRV_O_NO_IO</name><operator pos:start="15:56" pos:end="15:56">)</operator></expr>)</condition> <block pos:start="15:59" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:9">

        <expr_stmt pos:start="17:9" pos:end="17:68"><expr pos:start="17:9" pos:end="17:67"><call pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:15">qprintf</name><argument_list pos:start="17:16" pos:end="17:67">(<argument pos:start="17:17" pos:end="17:21"><expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:21">quiet</name></expr></argument>, <argument pos:start="17:24" pos:end="17:56"><expr pos:start="17:24" pos:end="17:56"><literal type="string" pos:start="17:24" pos:end="17:56">"Disk image '%s' is encrypted.\n"</literal></expr></argument>, <argument pos:start="17:59" pos:end="17:66"><expr pos:start="17:59" pos:end="17:66"><name pos:start="17:59" pos:end="17:66">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:63">(<expr pos:start="19:13" pos:end="19:62"><call pos:start="19:13" pos:end="19:58"><name pos:start="19:13" pos:end="19:30">qemu_read_password</name><argument_list pos:start="19:31" pos:end="19:58">(<argument pos:start="19:32" pos:end="19:39"><expr pos:start="19:32" pos:end="19:39"><name pos:start="19:32" pos:end="19:39">password</name></expr></argument>, <argument pos:start="19:42" pos:end="19:57"><expr pos:start="19:42" pos:end="19:57"><sizeof pos:start="19:42" pos:end="19:57">sizeof<argument_list pos:start="19:48" pos:end="19:57">(<argument pos:start="19:49" pos:end="19:56"><expr pos:start="19:49" pos:end="19:56"><name pos:start="19:49" pos:end="19:56">password</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="19:60" pos:end="19:60">&lt;</operator> <literal type="number" pos:start="19:62" pos:end="19:62">0</literal></expr>)</condition> <block pos:start="19:65" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:22">

            <expr_stmt pos:start="21:13" pos:end="21:46"><expr pos:start="21:13" pos:end="21:45"><call pos:start="21:13" pos:end="21:45"><name pos:start="21:13" pos:end="21:24">error_report</name><argument_list pos:start="21:25" pos:end="21:45">(<argument pos:start="21:26" pos:end="21:44"><expr pos:start="21:26" pos:end="21:44"><literal type="string" pos:start="21:26" pos:end="21:44">"No password given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:43">(<expr pos:start="27:13" pos:end="27:42"><call pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:24">bdrv_set_key</name><argument_list pos:start="27:25" pos:end="27:38">(<argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><name pos:start="27:26" pos:end="27:27">bs</name></expr></argument>, <argument pos:start="27:30" pos:end="27:37"><expr pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:37">password</name></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:40">&lt;</operator> <literal type="number" pos:start="27:42" pos:end="27:42">0</literal></expr>)</condition> <block pos:start="27:45" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:22">

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><call pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:24">error_report</name><argument_list pos:start="29:25" pos:end="29:44">(<argument pos:start="29:26" pos:end="29:43"><expr pos:start="29:26" pos:end="29:43"><literal type="string" pos:start="29:26" pos:end="29:43">"invalid password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
