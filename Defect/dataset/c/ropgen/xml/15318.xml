<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15318.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">decode_init_mp3on4</name><parameter_list pos:start="1:30" pos:end="1:53">(<parameter pos:start="1:31" pos:end="1:52"><decl pos:start="1:31" pos:end="1:52"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:27">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">MP3On4DecodeContext</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">MPEG4AudioConfig</name></type> <name pos:start="7:22" pos:end="7:24">cfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:66">(<expr pos:start="13:9" pos:end="13:65"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:30"><name pos:start="13:10" pos:end="13:14">avctx</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:30">extradata_size</name></name> <operator pos:start="13:32" pos:end="13:32">&lt;</operator> <literal type="number" pos:start="13:34" pos:end="13:34">2</literal><operator pos:start="13:35" pos:end="13:35">)</operator> <operator pos:start="13:37" pos:end="13:38">||</operator> <operator pos:start="13:40" pos:end="13:40">(</operator><name pos:start="13:41" pos:end="13:56"><name pos:start="13:41" pos:end="13:45">avctx</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:56">extradata</name></name> <operator pos:start="13:58" pos:end="13:59">==</operator> <name pos:start="13:61" pos:end="13:64">NULL</name><operator pos:start="13:65" pos:end="13:65">)</operator></expr>)</condition> <block pos:start="13:68" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:79"><expr pos:start="15:9" pos:end="15:78"><call pos:start="15:9" pos:end="15:78"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:78">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:77"><expr pos:start="15:37" pos:end="15:77"><literal type="string" pos:start="15:37" pos:end="15:77">"Codec extradata missing or too short.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:80"><expr pos:start="23:5" pos:end="23:79"><call pos:start="23:5" pos:end="23:79"><name pos:start="23:5" pos:end="23:32">avpriv_mpeg4audio_get_config</name><argument_list pos:start="23:33" pos:end="23:79">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><operator pos:start="23:34" pos:end="23:34">&amp;</operator><name pos:start="23:35" pos:end="23:37">cfg</name></expr></argument>, <argument pos:start="23:40" pos:end="23:55"><expr pos:start="23:40" pos:end="23:55"><name pos:start="23:40" pos:end="23:55"><name pos:start="23:40" pos:end="23:44">avctx</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:55">extradata</name></name></expr></argument>, <argument pos:start="23:58" pos:end="23:78"><expr pos:start="23:58" pos:end="23:78"><name pos:start="23:58" pos:end="23:78"><name pos:start="23:58" pos:end="23:62">avctx</name><operator pos:start="23:63" pos:end="23:64">-&gt;</operator><name pos:start="23:65" pos:end="23:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:48">(<expr pos:start="25:9" pos:end="25:47"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:24"><name pos:start="25:10" pos:end="25:12">cfg</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:24">chan_config</name></name> <operator pos:start="25:26" pos:end="25:27">||</operator> <name pos:start="25:29" pos:end="25:43"><name pos:start="25:29" pos:end="25:31">cfg</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:43">chan_config</name></name> <operator pos:start="25:45" pos:end="25:45">&gt;</operator> <literal type="number" pos:start="25:47" pos:end="25:47">7</literal></expr>)</condition> <block pos:start="25:50" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><call pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:71">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:70"><expr pos:start="27:37" pos:end="27:70"><literal type="string" pos:start="27:37" pos:end="27:70">"Invalid channel config number.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:13">frames</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:42"><name pos:start="33:17" pos:end="33:25">mp3Frames</name><index pos:start="33:26" pos:end="33:42">[<expr pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:29">cfg</name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:41">chan_config</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">coff</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:42"><name pos:start="35:15" pos:end="35:25">chan_offset</name><index pos:start="35:26" pos:end="35:42">[<expr pos:start="35:27" pos:end="35:41"><name pos:start="35:27" pos:end="35:41"><name pos:start="35:27" pos:end="35:29">cfg</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:41">chan_config</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:62"><expr pos:start="37:5" pos:end="37:61"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:9">avctx</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">channels</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:61"><name pos:start="37:23" pos:end="37:44">ff_mpeg4audio_channels</name><index pos:start="37:45" pos:end="37:61">[<expr pos:start="37:46" pos:end="37:60"><name pos:start="37:46" pos:end="37:60"><name pos:start="37:46" pos:end="37:48">cfg</name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:60">chan_config</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:9">avctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:25">channel_layout</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:56"><name pos:start="39:29" pos:end="39:39">chan_layout</name><index pos:start="39:40" pos:end="39:56">[<expr pos:start="39:41" pos:end="39:55"><name pos:start="39:41" pos:end="39:55"><name pos:start="39:41" pos:end="39:43">cfg</name><operator pos:start="39:44" pos:end="39:44">.</operator><name pos:start="39:45" pos:end="39:55">chan_config</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:33"><if pos:start="43:5" pos:end="45:33">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:11">cfg</name><operator pos:start="43:12" pos:end="43:12">.</operator><name pos:start="43:13" pos:end="43:23">sample_rate</name></name> <operator pos:start="43:25" pos:end="43:25">&lt;</operator> <literal type="number" pos:start="43:27" pos:end="43:31">16000</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:33"><block_content pos:start="45:9" pos:end="45:33">

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:19">syncword</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <literal type="number" pos:start="45:23" pos:end="45:32">0xffe00000</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="47:5" pos:end="49:33">else<block type="pseudo" pos:start="49:9" pos:end="49:33"><block_content pos:start="49:9" pos:end="49:33">

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">syncword</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:32">0xfff00000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="61:7">/* Init the first mp3 decoder in standard way, so that all tables get builded

     * We replace avctx-&gt;priv_data with the context of the first decoder so that

     * decode_init() does not have to be changed.

     * Other decoders will be initialized here copying data from the first context

     */</comment>

    <comment type="line" pos:start="63:5" pos:end="63:59">// Allocate zeroed memory for the first decoder context</comment>

    <expr_stmt pos:start="65:5" pos:end="65:59"><expr pos:start="65:5" pos:end="65:58"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:16">mp3decctx</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>]</index></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:58"><name pos:start="65:23" pos:end="65:32">av_mallocz</name><argument_list pos:start="65:33" pos:end="65:58">(<argument pos:start="65:34" pos:end="65:57"><expr pos:start="65:34" pos:end="65:57"><sizeof pos:start="65:34" pos:end="65:57">sizeof<argument_list pos:start="65:40" pos:end="65:57">(<argument pos:start="65:41" pos:end="65:56"><expr pos:start="65:41" pos:end="65:56"><name pos:start="65:41" pos:end="65:56">MPADecodeContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="69:5" pos:end="69:63">// Put decoder context in place to make init_decode() happy</comment>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:9">avctx</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:20">priv_data</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:38"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:35">mp3decctx</name><index pos:start="71:36" pos:end="71:38">[<expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><call pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:15">decode_init</name><argument_list pos:start="73:16" pos:end="73:22">(<argument pos:start="73:17" pos:end="73:21"><expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:21">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="75:5" pos:end="75:37">// Restore mp3on4 context pointer</comment>

    <expr_stmt pos:start="77:5" pos:end="77:25"><expr pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:9">avctx</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">priv_data</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:24">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:16">mp3decctx</name><index pos:start="79:17" pos:end="79:19">[<expr pos:start="79:18" pos:end="79:18"><literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>]</index></name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:29">adu_mode</name> <operator pos:start="79:31" pos:end="79:31">=</operator> <literal type="number" pos:start="79:33" pos:end="79:33">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="79:36" pos:end="79:50">// Set adu mode</comment>



    <comment type="block" pos:start="83:5" pos:end="87:7">/* Create a separate codec/context for each frame (first is already ok).

     * Each frame is 1 or 2 channels - up to 5 frames allowed

     */</comment>

    <for pos:start="89:5" pos:end="102:5">for <control pos:start="89:9" pos:end="89:35">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">1</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:30"><expr pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">frames</name></name></expr>;</condition> <incr pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:32">i</name><operator pos:start="89:33" pos:end="89:34">++</operator></expr></incr>)</control> <block pos:start="89:37" pos:end="102:5">{<block_content pos:start="91:9" pos:end="100:58">

        <expr_stmt pos:start="91:9" pos:end="91:63"><expr pos:start="91:9" pos:end="91:62"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">mp3decctx</name><index pos:start="91:21" pos:end="91:23">[<expr pos:start="91:22" pos:end="91:22"><name pos:start="91:22" pos:end="91:22">i</name></expr>]</index></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <call pos:start="91:27" pos:end="91:62"><name pos:start="91:27" pos:end="91:36">av_mallocz</name><argument_list pos:start="91:37" pos:end="91:62">(<argument pos:start="91:38" pos:end="91:61"><expr pos:start="91:38" pos:end="91:61"><sizeof pos:start="91:38" pos:end="91:61">sizeof<argument_list pos:start="91:44" pos:end="91:61">(<argument pos:start="91:45" pos:end="91:60"><expr pos:start="91:45" pos:end="91:60"><name pos:start="91:45" pos:end="91:60">MPADecodeContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="96:38"><if pos:start="93:9" pos:end="96:38">if <condition pos:start="93:12" pos:end="93:29">(<expr pos:start="93:13" pos:end="93:28"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:28"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">mp3decctx</name><index pos:start="93:26" pos:end="93:28">[<expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="96:9" pos:end="96:38"><block_content pos:start="96:9" pos:end="96:38">


        <expr_stmt pos:start="96:9" pos:end="96:38"><expr pos:start="96:9" pos:end="96:37"><name pos:start="96:9" pos:end="96:23"><name pos:start="96:9" pos:end="96:9">s</name><operator pos:start="96:10" pos:end="96:11">-&gt;</operator><name pos:start="96:12" pos:end="96:20">mp3decctx</name><index pos:start="96:21" pos:end="96:23">[<expr pos:start="96:22" pos:end="96:22"><name pos:start="96:22" pos:end="96:22">i</name></expr>]</index></name><operator pos:start="96:24" pos:end="96:25">-&gt;</operator><name pos:start="96:26" pos:end="96:33">adu_mode</name> <operator pos:start="96:35" pos:end="96:35">=</operator> <literal type="number" pos:start="96:37" pos:end="96:37">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="98:9" pos:end="98:39"><expr pos:start="98:9" pos:end="98:38"><name pos:start="98:9" pos:end="98:23"><name pos:start="98:9" pos:end="98:9">s</name><operator pos:start="98:10" pos:end="98:11">-&gt;</operator><name pos:start="98:12" pos:end="98:20">mp3decctx</name><index pos:start="98:21" pos:end="98:23">[<expr pos:start="98:22" pos:end="98:22"><name pos:start="98:22" pos:end="98:22">i</name></expr>]</index></name><operator pos:start="98:24" pos:end="98:25">-&gt;</operator><name pos:start="98:26" pos:end="98:30">avctx</name> <operator pos:start="98:32" pos:end="98:32">=</operator> <name pos:start="98:34" pos:end="98:38">avctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="100:9" pos:end="100:58"><expr pos:start="100:9" pos:end="100:57"><name pos:start="100:9" pos:end="100:23"><name pos:start="100:9" pos:end="100:9">s</name><operator pos:start="100:10" pos:end="100:11">-&gt;</operator><name pos:start="100:12" pos:end="100:20">mp3decctx</name><index pos:start="100:21" pos:end="100:23">[<expr pos:start="100:22" pos:end="100:22"><name pos:start="100:22" pos:end="100:22">i</name></expr>]</index></name><operator pos:start="100:24" pos:end="100:25">-&gt;</operator><name pos:start="100:26" pos:end="100:31">mpadsp</name> <operator pos:start="100:33" pos:end="100:33">=</operator> <name pos:start="100:35" pos:end="100:49"><name pos:start="100:35" pos:end="100:35">s</name><operator pos:start="100:36" pos:end="100:37">-&gt;</operator><name pos:start="100:38" pos:end="100:46">mp3decctx</name><index pos:start="100:47" pos:end="100:49">[<expr pos:start="100:48" pos:end="100:48"><literal type="number" pos:start="100:48" pos:end="100:48">0</literal></expr>]</index></name><operator pos:start="100:50" pos:end="100:51">-&gt;</operator><name pos:start="100:52" pos:end="100:57">mpadsp</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="106:5" pos:end="106:60">/* Allocate buffer for multi-channel output if needed */</comment>

    <if_stmt pos:start="108:5" pos:end="117:5"><if pos:start="108:5" pos:end="117:5">if <condition pos:start="108:8" pos:end="108:22">(<expr pos:start="108:9" pos:end="108:21"><name pos:start="108:9" pos:end="108:17"><name pos:start="108:9" pos:end="108:9">s</name><operator pos:start="108:10" pos:end="108:11">-&gt;</operator><name pos:start="108:12" pos:end="108:17">frames</name></name> <operator pos:start="108:19" pos:end="108:19">&gt;</operator> <literal type="number" pos:start="108:21" pos:end="108:21">1</literal></expr>)</condition> <block pos:start="108:24" pos:end="117:5">{<block_content pos:start="110:9" pos:end="114:28">

        <expr_stmt pos:start="110:9" pos:end="112:60"><expr pos:start="110:9" pos:end="112:59"><name pos:start="110:9" pos:end="110:22"><name pos:start="110:9" pos:end="110:9">s</name><operator pos:start="110:10" pos:end="110:11">-&gt;</operator><name pos:start="110:12" pos:end="110:22">decoded_buf</name></name> <operator pos:start="110:24" pos:end="110:24">=</operator> <call pos:start="110:26" pos:end="112:59"><name pos:start="110:26" pos:end="110:34">av_malloc</name><argument_list pos:start="110:35" pos:end="112:59">(<argument pos:start="110:36" pos:end="112:58"><expr pos:start="110:36" pos:end="112:58"><name pos:start="110:36" pos:end="110:49">MPA_FRAME_SIZE</name> <operator pos:start="110:51" pos:end="110:51">*</operator> <name pos:start="110:53" pos:end="110:68">MPA_MAX_CHANNELS</name> <operator pos:start="110:70" pos:end="110:70">*</operator>

                                   <sizeof pos:start="112:36" pos:end="112:58">sizeof<argument_list pos:start="112:42" pos:end="112:58">(<argument pos:start="112:43" pos:end="112:57"><expr pos:start="112:43" pos:end="112:57"><operator pos:start="112:43" pos:end="112:43">*</operator><name pos:start="112:44" pos:end="112:57"><name pos:start="112:44" pos:end="112:44">s</name><operator pos:start="112:45" pos:end="112:46">-&gt;</operator><name pos:start="112:47" pos:end="112:57">decoded_buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="114:9" pos:end="114:28"><if pos:start="114:9" pos:end="114:28">if <condition pos:start="114:12" pos:end="114:28">(<expr pos:start="114:13" pos:end="114:27"><operator pos:start="114:13" pos:end="114:13">!</operator><name pos:start="114:14" pos:end="114:27"><name pos:start="114:14" pos:end="114:14">s</name><operator pos:start="114:15" pos:end="114:16">-&gt;</operator><name pos:start="114:17" pos:end="114:27">decoded_buf</name></name></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>


    </block_content>}</block></if></if_stmt>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

<label pos:start="123:1" pos:end="123:11"><name pos:start="123:1" pos:end="123:10">alloc_fail</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="125:31"><expr pos:start="125:5" pos:end="125:30"><call pos:start="125:5" pos:end="125:30"><name pos:start="125:5" pos:end="125:23">decode_close_mp3on4</name><argument_list pos:start="125:24" pos:end="125:30">(<argument pos:start="125:25" pos:end="125:29"><expr pos:start="125:25" pos:end="125:29"><name pos:start="125:25" pos:end="125:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:27">return <expr pos:start="127:12" pos:end="127:26"><call pos:start="127:12" pos:end="127:26"><name pos:start="127:12" pos:end="127:18">AVERROR</name><argument_list pos:start="127:19" pos:end="127:26">(<argument pos:start="127:20" pos:end="127:25"><expr pos:start="127:20" pos:end="127:25"><name pos:start="127:20" pos:end="127:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
