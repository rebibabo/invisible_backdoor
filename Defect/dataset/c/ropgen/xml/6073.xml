<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6073.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">do_cont</name><parameter_list pos:start="1:19" pos:end="1:72">(<parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:31"><name pos:start="1:20" pos:end="1:26">Monitor</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">mon</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:44">QDict</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">qdict</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:60">QObject</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier><modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:31">bdrv_iterate_context</name></name></type> <name pos:start="5:33" pos:end="5:39">context</name> <init pos:start="5:41" pos:end="5:52">= <expr pos:start="5:43" pos:end="5:52"><block pos:start="5:43" pos:end="5:52">{ <expr pos:start="5:45" pos:end="5:47"><name pos:start="5:45" pos:end="5:47">mon</name></expr>, <expr pos:start="5:50" pos:end="5:50"><literal type="number" pos:start="5:50" pos:end="5:50">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:25">incoming_expected</name></expr>)</condition> <block pos:start="9:28" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:18">

        <expr_stmt pos:start="11:9" pos:end="11:47"><expr pos:start="11:9" pos:end="11:46"><call pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:21">qerror_report</name><argument_list pos:start="11:22" pos:end="11:46">(<argument pos:start="11:23" pos:end="11:45"><expr pos:start="11:23" pos:end="11:45"><name pos:start="11:23" pos:end="11:45">QERR_MIGRATION_EXPECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><call pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:16">bdrv_iterate</name><argument_list pos:start="17:17" pos:end="17:45">(<argument pos:start="17:18" pos:end="17:34"><expr pos:start="17:18" pos:end="17:34"><name pos:start="17:18" pos:end="17:34">encrypted_bdrv_it</name></expr></argument>, <argument pos:start="17:37" pos:end="17:44"><expr pos:start="17:37" pos:end="17:44"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:44">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:58">/* only resume the vm if all keys are set and valid */</comment>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:16">context</name><operator pos:start="21:17" pos:end="21:17">.</operator><name pos:start="21:18" pos:end="21:20">err</name></name></expr>)</condition> <block pos:start="21:23" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:17">

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><call pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">vm_start</name><argument_list pos:start="23:17" pos:end="23:18">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
