<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15300.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qsv_decode_init</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:60">QSVContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:30"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:28">AVPixFmtDescriptor</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">mfxSession</name></type> <name pos:start="7:16" pos:end="7:22">session</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">iopattern</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">mfxVideoParam</name></type> <name pos:start="11:19" pos:end="11:23">param</name> <init pos:start="11:25" pos:end="11:35">= <expr pos:start="11:27" pos:end="11:35"><block pos:start="11:27" pos:end="11:35">{ <expr pos:start="11:29" pos:end="11:33"><block pos:start="11:29" pos:end="11:33">{ <expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">frame_width</name>  <init pos:start="13:22" pos:end="13:41">= <expr pos:start="13:24" pos:end="13:41"><name pos:start="13:24" pos:end="13:41"><name pos:start="13:24" pos:end="13:28">avctx</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:41">coded_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">frame_height</name> <init pos:start="15:22" pos:end="15:42">= <expr pos:start="15:24" pos:end="15:42"><name pos:start="15:24" pos:end="15:42"><name pos:start="15:24" pos:end="15:28">avctx</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:42">coded_height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:8">desc</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:49"><name pos:start="21:12" pos:end="21:30">av_pix_fmt_desc_get</name><argument_list pos:start="21:31" pos:end="21:49">(<argument pos:start="21:32" pos:end="21:48"><expr pos:start="21:32" pos:end="21:48"><name pos:start="21:32" pos:end="21:48"><name pos:start="21:32" pos:end="21:36">avctx</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:48">sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:27"><if pos:start="23:5" pos:end="25:27">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">desc</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:27"><block_content pos:start="25:9" pos:end="25:27">

        <return pos:start="25:9" pos:end="25:27">return <expr pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:26">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:10">q</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:22">async_fifo</name></name></expr>)</condition> <block pos:start="29:25" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:35">

        <expr_stmt pos:start="31:9" pos:end="33:83"><expr pos:start="31:9" pos:end="33:82"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">q</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">async_fifo</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="33:82"><name pos:start="31:25" pos:end="31:37">av_fifo_alloc</name><argument_list pos:start="31:38" pos:end="33:82">(<argument pos:start="31:39" pos:end="33:81"><expr pos:start="31:39" pos:end="33:81"><operator pos:start="31:39" pos:end="31:39">(</operator><literal type="number" pos:start="31:40" pos:end="31:42">1</literal> <operator pos:start="31:42" pos:end="31:42">+</operator> <name pos:start="31:44" pos:end="31:57"><name pos:start="31:44" pos:end="31:44">q</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:57">async_depth</name></name><operator pos:start="31:58" pos:end="31:58">)</operator> <operator pos:start="31:60" pos:end="31:60">*</operator>

                                      <operator pos:start="33:39" pos:end="33:39">(</operator><sizeof pos:start="33:40" pos:end="33:60">sizeof<argument_list pos:start="33:46" pos:end="33:60">(<argument pos:start="33:47" pos:end="33:59"><expr pos:start="33:47" pos:end="33:59"><name pos:start="33:47" pos:end="33:58">mfxSyncPoint</name><operator pos:start="33:59" pos:end="33:59">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="33:62" pos:end="33:62">+</operator> <sizeof pos:start="33:64" pos:end="33:80">sizeof<argument_list pos:start="33:70" pos:end="33:80">(<argument pos:start="33:71" pos:end="33:79"><expr pos:start="33:71" pos:end="33:79"><name pos:start="33:71" pos:end="33:78">QSVFrame</name><operator pos:start="33:79" pos:end="33:79">*</operator></expr></argument>)</argument_list></sizeof><operator pos:start="33:81" pos:end="33:81">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:35"><if pos:start="35:9" pos:end="37:35">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:26"><name pos:start="35:14" pos:end="35:14">q</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:26">async_fifo</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:35"><block_content pos:start="37:13" pos:end="37:35">

            <return pos:start="37:13" pos:end="37:35">return <expr pos:start="37:20" pos:end="37:34"><call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:67">(<expr pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">pix_fmt</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:40">AV_PIX_FMT_QSV</name> <operator pos:start="43:42" pos:end="43:43">&amp;&amp;</operator> <name pos:start="43:45" pos:end="43:66"><name pos:start="43:45" pos:end="43:49">avctx</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:66">hwaccel_context</name></name></expr>)</condition> <block pos:start="43:69" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:53">

        <decl_stmt pos:start="45:9" pos:end="45:56"><decl pos:start="45:9" pos:end="45:55"><type pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:20">AVQSVContext</name> <modifier pos:start="45:22" pos:end="45:22">*</modifier></type><name pos:start="45:23" pos:end="45:30">user_ctx</name> <init pos:start="45:32" pos:end="45:55">= <expr pos:start="45:34" pos:end="45:55"><name pos:start="45:34" pos:end="45:55"><name pos:start="45:34" pos:end="45:38">avctx</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:55">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:15">session</name>           <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:45"><name pos:start="47:29" pos:end="47:36">user_ctx</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:45">session</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:48"><expr pos:start="49:9" pos:end="49:47"><name pos:start="49:9" pos:end="49:17">iopattern</name>         <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:47"><name pos:start="49:29" pos:end="49:36">user_ctx</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:47">iopattern</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:9">q</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">ext_buffers</name></name>    <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:49"><name pos:start="51:29" pos:end="51:36">user_ctx</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:49">ext_buffers</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">q</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">nb_ext_buffers</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:52"><name pos:start="53:29" pos:end="53:36">user_ctx</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:52">nb_ext_buffers</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="85:5"><if pos:start="59:5" pos:end="85:5">if <condition pos:start="59:8" pos:end="59:29">(<expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:13">avctx</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:28">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="59:31" pos:end="85:5">{<block_content pos:start="61:9" pos:end="83:61">

        <decl_stmt pos:start="61:9" pos:end="61:90"><decl pos:start="61:9" pos:end="61:89"><type pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:25">AVHWFramesContext</name>    <modifier pos:start="61:30" pos:end="61:30">*</modifier></type><name pos:start="61:31" pos:end="61:40">frames_ctx</name> <init pos:start="61:42" pos:end="61:89">= <expr pos:start="61:44" pos:end="61:89"><operator pos:start="61:44" pos:end="61:44">(</operator><name pos:start="61:45" pos:end="61:61">AVHWFramesContext</name><operator pos:start="61:62" pos:end="61:62">*</operator><operator pos:start="61:63" pos:end="61:63">)</operator><name pos:start="61:64" pos:end="61:89"><name pos:start="61:64" pos:end="61:68">avctx</name><operator pos:start="61:69" pos:end="61:70">-&gt;</operator><name pos:start="61:71" pos:end="61:83">hw_frames_ctx</name><operator pos:start="61:84" pos:end="61:85">-&gt;</operator><name pos:start="61:86" pos:end="61:89">data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:61"><decl pos:start="63:9" pos:end="63:60"><type pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:26">AVQSVFramesContext</name> <modifier pos:start="63:28" pos:end="63:28">*</modifier></type><name pos:start="63:29" pos:end="63:40">frames_hwctx</name> <init pos:start="63:42" pos:end="63:60">= <expr pos:start="63:44" pos:end="63:60"><name pos:start="63:44" pos:end="63:60"><name pos:start="63:44" pos:end="63:53">frames_ctx</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:60">hwctx</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:23">(<expr pos:start="67:13" pos:end="67:22"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:22">iopattern</name></expr>)</condition> <block pos:start="67:25" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:59">

            <if_stmt pos:start="69:13" pos:end="75:59"><if pos:start="69:13" pos:end="71:60">if <condition pos:start="69:16" pos:end="69:68">(<expr pos:start="69:17" pos:end="69:67"><name pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:28">frames_hwctx</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:40">frame_type</name></name> <operator pos:start="69:42" pos:end="69:42">&amp;</operator> <name pos:start="69:44" pos:end="69:67">MFX_MEMTYPE_OPAQUE_FRAME</name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:60"><block_content pos:start="71:17" pos:end="71:60">

                <expr_stmt pos:start="71:17" pos:end="71:60"><expr pos:start="71:17" pos:end="71:59"><name pos:start="71:17" pos:end="71:25">iopattern</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:59">MFX_IOPATTERN_OUT_OPAQUE_MEMORY</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="73:13" pos:end="75:59">else if <condition pos:start="73:21" pos:end="73:88">(<expr pos:start="73:22" pos:end="73:87"><name pos:start="73:22" pos:end="73:45"><name pos:start="73:22" pos:end="73:33">frames_hwctx</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:45">frame_type</name></name> <operator pos:start="73:47" pos:end="73:47">&amp;</operator> <name pos:start="73:49" pos:end="73:87">MFX_MEMTYPE_VIDEO_MEMORY_DECODER_TARGET</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:59"><block_content pos:start="75:17" pos:end="75:59">

                <expr_stmt pos:start="75:17" pos:end="75:59"><expr pos:start="75:17" pos:end="75:58"><name pos:start="75:17" pos:end="75:25">iopattern</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:58">MFX_IOPATTERN_OUT_VIDEO_MEMORY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:60"><expr pos:start="81:9" pos:end="81:59"><name pos:start="81:9" pos:end="81:19">frame_width</name>  <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:48"><name pos:start="81:24" pos:end="81:35">frames_hwctx</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:45">surfaces</name><index pos:start="81:46" pos:end="81:48">[<expr pos:start="81:47" pos:end="81:47"><literal type="number" pos:start="81:47" pos:end="81:47">0</literal></expr>]</index></name><operator pos:start="81:49" pos:end="81:49">.</operator><name pos:start="81:50" pos:end="81:59"><name pos:start="81:50" pos:end="81:53">Info</name><operator pos:start="81:54" pos:end="81:54">.</operator><name pos:start="81:55" pos:end="81:59">Width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:61"><expr pos:start="83:9" pos:end="83:60"><name pos:start="83:9" pos:end="83:20">frame_height</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:48"><name pos:start="83:24" pos:end="83:35">frames_hwctx</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:45">surfaces</name><index pos:start="83:46" pos:end="83:48">[<expr pos:start="83:47" pos:end="83:47"><literal type="number" pos:start="83:47" pos:end="83:47">0</literal></expr>]</index></name><operator pos:start="83:49" pos:end="83:49">.</operator><name pos:start="83:50" pos:end="83:60"><name pos:start="83:50" pos:end="83:53">Info</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:60">Height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:52"><if pos:start="89:5" pos:end="91:52">if <condition pos:start="89:8" pos:end="89:19">(<expr pos:start="89:9" pos:end="89:18"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:18">iopattern</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:52"><block_content pos:start="91:9" pos:end="91:52">

        <expr_stmt pos:start="91:9" pos:end="91:52"><expr pos:start="91:9" pos:end="91:51"><name pos:start="91:9" pos:end="91:17">iopattern</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:51">MFX_IOPATTERN_OUT_SYSTEM_MEMORY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:29"><expr pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:16"><name pos:start="93:5" pos:end="93:5">q</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:16">iopattern</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:28">iopattern</name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:68"><expr pos:start="97:5" pos:end="97:67"><name pos:start="97:5" pos:end="97:7">ret</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:67"><name pos:start="97:11" pos:end="97:26">qsv_init_session</name><argument_list pos:start="97:27" pos:end="97:67">(<argument pos:start="97:28" pos:end="97:32"><expr pos:start="97:28" pos:end="97:32"><name pos:start="97:28" pos:end="97:32">avctx</name></expr></argument>, <argument pos:start="97:35" pos:end="97:35"><expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">q</name></expr></argument>, <argument pos:start="97:38" pos:end="97:44"><expr pos:start="97:38" pos:end="97:44"><name pos:start="97:38" pos:end="97:44">session</name></expr></argument>, <argument pos:start="97:47" pos:end="97:66"><expr pos:start="97:47" pos:end="97:66"><name pos:start="97:47" pos:end="97:66"><name pos:start="97:47" pos:end="97:51">avctx</name><operator pos:start="97:52" pos:end="97:53">-&gt;</operator><name pos:start="97:54" pos:end="97:66">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">&lt;</operator> <literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>)</condition> <block pos:start="99:18" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:19">

        <expr_stmt pos:start="101:9" pos:end="101:75"><expr pos:start="101:9" pos:end="101:74"><call pos:start="101:9" pos:end="101:74"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:74">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20">avctx</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:37" pos:end="101:73"><expr pos:start="101:37" pos:end="101:73"><literal type="string" pos:start="101:37" pos:end="101:73">"Error initializing an MFX session\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:50"><expr pos:start="109:5" pos:end="109:49"><name pos:start="109:5" pos:end="109:7">ret</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:49"><name pos:start="109:11" pos:end="109:32">ff_qsv_codec_id_to_mfx</name><argument_list pos:start="109:33" pos:end="109:49">(<argument pos:start="109:34" pos:end="109:48"><expr pos:start="109:34" pos:end="109:48"><name pos:start="109:34" pos:end="109:48"><name pos:start="109:34" pos:end="109:38">avctx</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:48">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:19"><if pos:start="111:5" pos:end="113:19">if <condition pos:start="111:8" pos:end="111:16">(<expr pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">&lt;</operator> <literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:19"><block_content pos:start="113:9" pos:end="113:19">

        <return pos:start="113:9" pos:end="113:19">return <expr pos:start="113:16" pos:end="113:18"><name pos:start="113:16" pos:end="113:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:33"><expr pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:21"><name pos:start="117:5" pos:end="117:9">param</name><operator pos:start="117:10" pos:end="117:10">.</operator><name pos:start="117:11" pos:end="117:13">mfx</name><operator pos:start="117:14" pos:end="117:14">.</operator><name pos:start="117:15" pos:end="117:21">CodecId</name></name>      <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:32">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:84"><expr pos:start="119:5" pos:end="119:83"><name pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:9">param</name><operator pos:start="119:10" pos:end="119:10">.</operator><name pos:start="119:11" pos:end="119:13">mfx</name><operator pos:start="119:14" pos:end="119:14">.</operator><name pos:start="119:15" pos:end="119:26">CodecProfile</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <call pos:start="119:30" pos:end="119:83"><name pos:start="119:30" pos:end="119:50">ff_qsv_profile_to_mfx</name><argument_list pos:start="119:51" pos:end="119:83">(<argument pos:start="119:52" pos:end="119:66"><expr pos:start="119:52" pos:end="119:66"><name pos:start="119:52" pos:end="119:66"><name pos:start="119:52" pos:end="119:56">avctx</name><operator pos:start="119:57" pos:end="119:58">-&gt;</operator><name pos:start="119:59" pos:end="119:66">codec_id</name></name></expr></argument>, <argument pos:start="119:69" pos:end="119:82"><expr pos:start="119:69" pos:end="119:82"><name pos:start="119:69" pos:end="119:82"><name pos:start="119:69" pos:end="119:73">avctx</name><operator pos:start="119:74" pos:end="119:75">-&gt;</operator><name pos:start="119:76" pos:end="119:82">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:97"><expr pos:start="121:5" pos:end="121:96"><name pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:9">param</name><operator pos:start="121:10" pos:end="121:10">.</operator><name pos:start="121:11" pos:end="121:13">mfx</name><operator pos:start="121:14" pos:end="121:14">.</operator><name pos:start="121:15" pos:end="121:24">CodecLevel</name></name>   <operator pos:start="121:28" pos:end="121:28">=</operator> <ternary pos:start="121:30" pos:end="121:96"><condition pos:start="121:30" pos:end="121:63"><expr pos:start="121:30" pos:end="121:61"><name pos:start="121:30" pos:end="121:41"><name pos:start="121:30" pos:end="121:34">avctx</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:41">level</name></name> <operator pos:start="121:43" pos:end="121:44">==</operator> <name pos:start="121:46" pos:end="121:61">FF_LEVEL_UNKNOWN</name></expr> ?</condition><then pos:start="121:65" pos:end="121:81"> <expr pos:start="121:65" pos:end="121:81"><name pos:start="121:65" pos:end="121:81">MFX_LEVEL_UNKNOWN</name></expr> </then><else pos:start="121:83" pos:end="121:96">: <expr pos:start="121:85" pos:end="121:96"><name pos:start="121:85" pos:end="121:96"><name pos:start="121:85" pos:end="121:89">avctx</name><operator pos:start="121:90" pos:end="121:91">-&gt;</operator><name pos:start="121:92" pos:end="121:96">level</name></name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:61"><expr pos:start="125:5" pos:end="125:60"><name pos:start="125:5" pos:end="125:36"><name pos:start="125:5" pos:end="125:9">param</name><operator pos:start="125:10" pos:end="125:10">.</operator><name pos:start="125:11" pos:end="125:13">mfx</name><operator pos:start="125:14" pos:end="125:14">.</operator><name pos:start="125:15" pos:end="125:23">FrameInfo</name><operator pos:start="125:24" pos:end="125:24">.</operator><name pos:start="125:25" pos:end="125:36">BitDepthLuma</name></name>   <operator pos:start="125:40" pos:end="125:40">=</operator> <name pos:start="125:42" pos:end="125:54"><name pos:start="125:42" pos:end="125:45">desc</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:51">comp</name><index pos:start="125:52" pos:end="125:54">[<expr pos:start="125:53" pos:end="125:53"><literal type="number" pos:start="125:53" pos:end="125:53">0</literal></expr>]</index></name><operator pos:start="125:55" pos:end="125:55">.</operator><name pos:start="125:56" pos:end="125:60">depth</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:61"><expr pos:start="127:5" pos:end="127:60"><name pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:9">param</name><operator pos:start="127:10" pos:end="127:10">.</operator><name pos:start="127:11" pos:end="127:13">mfx</name><operator pos:start="127:14" pos:end="127:14">.</operator><name pos:start="127:15" pos:end="127:23">FrameInfo</name><operator pos:start="127:24" pos:end="127:24">.</operator><name pos:start="127:25" pos:end="127:38">BitDepthChroma</name></name> <operator pos:start="127:40" pos:end="127:40">=</operator> <name pos:start="127:42" pos:end="127:54"><name pos:start="127:42" pos:end="127:45">desc</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:51">comp</name><index pos:start="127:52" pos:end="127:54">[<expr pos:start="127:53" pos:end="127:53"><literal type="number" pos:start="127:53" pos:end="127:53">0</literal></expr>]</index></name><operator pos:start="127:55" pos:end="127:55">.</operator><name pos:start="127:56" pos:end="127:60">depth</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:65"><expr pos:start="129:5" pos:end="129:64"><name pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:9">param</name><operator pos:start="129:10" pos:end="129:10">.</operator><name pos:start="129:11" pos:end="129:13">mfx</name><operator pos:start="129:14" pos:end="129:14">.</operator><name pos:start="129:15" pos:end="129:23">FrameInfo</name><operator pos:start="129:24" pos:end="129:24">.</operator><name pos:start="129:25" pos:end="129:29">Shift</name></name>          <operator pos:start="129:40" pos:end="129:40">=</operator> <name pos:start="129:42" pos:end="129:54"><name pos:start="129:42" pos:end="129:45">desc</name><operator pos:start="129:46" pos:end="129:47">-&gt;</operator><name pos:start="129:48" pos:end="129:51">comp</name><index pos:start="129:52" pos:end="129:54">[<expr pos:start="129:53" pos:end="129:53"><literal type="number" pos:start="129:53" pos:end="129:53">0</literal></expr>]</index></name><operator pos:start="129:55" pos:end="129:55">.</operator><name pos:start="129:56" pos:end="129:60">depth</name> <operator pos:start="129:62" pos:end="129:62">&gt;</operator> <literal type="number" pos:start="129:64" pos:end="129:64">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:51"><expr pos:start="131:5" pos:end="131:50"><name pos:start="131:5" pos:end="131:30"><name pos:start="131:5" pos:end="131:9">param</name><operator pos:start="131:10" pos:end="131:10">.</operator><name pos:start="131:11" pos:end="131:13">mfx</name><operator pos:start="131:14" pos:end="131:14">.</operator><name pos:start="131:15" pos:end="131:23">FrameInfo</name><operator pos:start="131:24" pos:end="131:24">.</operator><name pos:start="131:25" pos:end="131:30">FourCC</name></name>         <operator pos:start="131:40" pos:end="131:40">=</operator> <name pos:start="131:42" pos:end="131:50"><name pos:start="131:42" pos:end="131:42">q</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:50">fourcc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:53"><expr pos:start="133:5" pos:end="133:52"><name pos:start="133:5" pos:end="133:29"><name pos:start="133:5" pos:end="133:9">param</name><operator pos:start="133:10" pos:end="133:10">.</operator><name pos:start="133:11" pos:end="133:13">mfx</name><operator pos:start="133:14" pos:end="133:14">.</operator><name pos:start="133:15" pos:end="133:23">FrameInfo</name><operator pos:start="133:24" pos:end="133:24">.</operator><name pos:start="133:25" pos:end="133:29">Width</name></name>          <operator pos:start="133:40" pos:end="133:40">=</operator> <name pos:start="133:42" pos:end="133:52">frame_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:54"><expr pos:start="135:5" pos:end="135:53"><name pos:start="135:5" pos:end="135:30"><name pos:start="135:5" pos:end="135:9">param</name><operator pos:start="135:10" pos:end="135:10">.</operator><name pos:start="135:11" pos:end="135:13">mfx</name><operator pos:start="135:14" pos:end="135:14">.</operator><name pos:start="135:15" pos:end="135:23">FrameInfo</name><operator pos:start="135:24" pos:end="135:24">.</operator><name pos:start="135:25" pos:end="135:30">Height</name></name>         <operator pos:start="135:40" pos:end="135:40">=</operator> <name pos:start="135:42" pos:end="135:53">frame_height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:65"><expr pos:start="137:5" pos:end="137:64"><name pos:start="137:5" pos:end="137:36"><name pos:start="137:5" pos:end="137:9">param</name><operator pos:start="137:10" pos:end="137:10">.</operator><name pos:start="137:11" pos:end="137:13">mfx</name><operator pos:start="137:14" pos:end="137:14">.</operator><name pos:start="137:15" pos:end="137:23">FrameInfo</name><operator pos:start="137:24" pos:end="137:24">.</operator><name pos:start="137:25" pos:end="137:36">ChromaFormat</name></name>   <operator pos:start="137:40" pos:end="137:40">=</operator> <name pos:start="137:42" pos:end="137:64">MFX_CHROMAFORMAT_YUV420</name></expr>;</expr_stmt>



    <switch pos:start="141:5" pos:end="167:5">switch <condition pos:start="141:12" pos:end="141:31">(<expr pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:17">avctx</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:30">field_order</name></name></expr>)</condition> <block pos:start="141:33" pos:end="167:5">{<block_content pos:start="143:5" pos:end="165:14">

    <case pos:start="143:5" pos:end="143:30">case <expr pos:start="143:10" pos:end="143:29"><name pos:start="143:10" pos:end="143:29">AV_FIELD_PROGRESSIVE</name></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:66"><expr pos:start="145:9" pos:end="145:65"><name pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:13">param</name><operator pos:start="145:14" pos:end="145:14">.</operator><name pos:start="145:15" pos:end="145:17">mfx</name><operator pos:start="145:18" pos:end="145:18">.</operator><name pos:start="145:19" pos:end="145:27">FrameInfo</name><operator pos:start="145:28" pos:end="145:28">.</operator><name pos:start="145:29" pos:end="145:37">PicStruct</name></name> <operator pos:start="145:39" pos:end="145:39">=</operator> <name pos:start="145:41" pos:end="145:65">MFX_PICSTRUCT_PROGRESSIVE</name></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:21">case <expr pos:start="149:10" pos:end="149:20"><name pos:start="149:10" pos:end="149:20">AV_FIELD_TT</name></expr>:</case>

        <expr_stmt pos:start="151:9" pos:end="151:64"><expr pos:start="151:9" pos:end="151:63"><name pos:start="151:9" pos:end="151:37"><name pos:start="151:9" pos:end="151:13">param</name><operator pos:start="151:14" pos:end="151:14">.</operator><name pos:start="151:15" pos:end="151:17">mfx</name><operator pos:start="151:18" pos:end="151:18">.</operator><name pos:start="151:19" pos:end="151:27">FrameInfo</name><operator pos:start="151:28" pos:end="151:28">.</operator><name pos:start="151:29" pos:end="151:37">PicStruct</name></name> <operator pos:start="151:39" pos:end="151:39">=</operator> <name pos:start="151:41" pos:end="151:63">MFX_PICSTRUCT_FIELD_TFF</name></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:21">case <expr pos:start="155:10" pos:end="155:20"><name pos:start="155:10" pos:end="155:20">AV_FIELD_BB</name></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:64"><expr pos:start="157:9" pos:end="157:63"><name pos:start="157:9" pos:end="157:37"><name pos:start="157:9" pos:end="157:13">param</name><operator pos:start="157:14" pos:end="157:14">.</operator><name pos:start="157:15" pos:end="157:17">mfx</name><operator pos:start="157:18" pos:end="157:18">.</operator><name pos:start="157:19" pos:end="157:27">FrameInfo</name><operator pos:start="157:28" pos:end="157:28">.</operator><name pos:start="157:29" pos:end="157:37">PicStruct</name></name> <operator pos:start="157:39" pos:end="157:39">=</operator> <name pos:start="157:41" pos:end="157:63">MFX_PICSTRUCT_FIELD_BFF</name></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <default pos:start="161:5" pos:end="161:12">default:</default>

        <expr_stmt pos:start="163:9" pos:end="163:62"><expr pos:start="163:9" pos:end="163:61"><name pos:start="163:9" pos:end="163:37"><name pos:start="163:9" pos:end="163:13">param</name><operator pos:start="163:14" pos:end="163:14">.</operator><name pos:start="163:15" pos:end="163:17">mfx</name><operator pos:start="163:18" pos:end="163:18">.</operator><name pos:start="163:19" pos:end="163:27">FrameInfo</name><operator pos:start="163:28" pos:end="163:28">.</operator><name pos:start="163:29" pos:end="163:37">PicStruct</name></name> <operator pos:start="163:39" pos:end="163:39">=</operator> <name pos:start="163:41" pos:end="163:61">MFX_PICSTRUCT_UNKNOWN</name></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="171:5" pos:end="171:37"><expr pos:start="171:5" pos:end="171:36"><name pos:start="171:5" pos:end="171:19"><name pos:start="171:5" pos:end="171:9">param</name><operator pos:start="171:10" pos:end="171:10">.</operator><name pos:start="171:11" pos:end="171:19">IOPattern</name></name>   <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:25">q</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:36">iopattern</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:39"><expr pos:start="173:5" pos:end="173:38"><name pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:9">param</name><operator pos:start="173:10" pos:end="173:10">.</operator><name pos:start="173:11" pos:end="173:20">AsyncDepth</name></name>  <operator pos:start="173:23" pos:end="173:23">=</operator> <name pos:start="173:25" pos:end="173:38"><name pos:start="173:25" pos:end="173:25">q</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:38">async_depth</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:39"><expr pos:start="175:5" pos:end="175:38"><name pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:9">param</name><operator pos:start="175:10" pos:end="175:10">.</operator><name pos:start="175:11" pos:end="175:18">ExtParam</name></name>    <operator pos:start="175:23" pos:end="175:23">=</operator> <name pos:start="175:25" pos:end="175:38"><name pos:start="175:25" pos:end="175:25">q</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:38">ext_buffers</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:42"><expr pos:start="177:5" pos:end="177:41"><name pos:start="177:5" pos:end="177:21"><name pos:start="177:5" pos:end="177:9">param</name><operator pos:start="177:10" pos:end="177:10">.</operator><name pos:start="177:11" pos:end="177:21">NumExtParam</name></name> <operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:41"><name pos:start="177:25" pos:end="177:25">q</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:41">nb_ext_buffers</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:50"><expr pos:start="181:5" pos:end="181:49"><name pos:start="181:5" pos:end="181:7">ret</name> <operator pos:start="181:9" pos:end="181:9">=</operator> <call pos:start="181:11" pos:end="181:49"><name pos:start="181:11" pos:end="181:29">MFXVideoDECODE_Init</name><argument_list pos:start="181:30" pos:end="181:49">(<argument pos:start="181:31" pos:end="181:40"><expr pos:start="181:31" pos:end="181:40"><name pos:start="181:31" pos:end="181:40"><name pos:start="181:31" pos:end="181:31">q</name><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:40">session</name></name></expr></argument>, <argument pos:start="181:43" pos:end="181:48"><expr pos:start="181:43" pos:end="181:48"><operator pos:start="181:43" pos:end="181:43">&amp;</operator><name pos:start="181:44" pos:end="181:48">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="187:78"><if pos:start="183:5" pos:end="187:78">if <condition pos:start="183:8" pos:end="183:16">(<expr pos:start="183:9" pos:end="183:15"><name pos:start="183:9" pos:end="183:11">ret</name> <operator pos:start="183:13" pos:end="183:13">&lt;</operator> <literal type="number" pos:start="183:15" pos:end="183:15">0</literal></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="187:78"><block_content pos:start="185:9" pos:end="187:78">

        <return pos:start="185:9" pos:end="187:78">return <expr pos:start="185:16" pos:end="187:77"><call pos:start="185:16" pos:end="187:77"><name pos:start="185:16" pos:end="185:33">ff_qsv_print_error</name><argument_list pos:start="185:34" pos:end="187:77">(<argument pos:start="185:35" pos:end="185:39"><expr pos:start="185:35" pos:end="185:39"><name pos:start="185:35" pos:end="185:39">avctx</name></expr></argument>, <argument pos:start="185:42" pos:end="185:44"><expr pos:start="185:42" pos:end="185:44"><name pos:start="185:42" pos:end="185:44">ret</name></expr></argument>,

                                  <argument pos:start="187:35" pos:end="187:76"><expr pos:start="187:35" pos:end="187:76"><literal type="string" pos:start="187:35" pos:end="187:76">"Error initializing the MFX video decoder"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:40"><expr pos:start="191:5" pos:end="191:39"><name pos:start="191:5" pos:end="191:17"><name pos:start="191:5" pos:end="191:5">q</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:17">frame_info</name></name> <operator pos:start="191:19" pos:end="191:19">=</operator> <name pos:start="191:21" pos:end="191:39"><name pos:start="191:21" pos:end="191:25">param</name><operator pos:start="191:26" pos:end="191:26">.</operator><name pos:start="191:27" pos:end="191:29">mfx</name><operator pos:start="191:30" pos:end="191:30">.</operator><name pos:start="191:31" pos:end="191:39">FrameInfo</name></name></expr>;</expr_stmt>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
