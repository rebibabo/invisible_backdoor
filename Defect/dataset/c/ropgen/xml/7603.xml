<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7603.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ga_install_service</name><parameter_list pos:start="1:23" pos:end="3:45">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">path</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60">logfile</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:44"><decl pos:start="3:24" pos:end="3:44"><type pos:start="3:24" pos:end="3:44"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:44">state_dir</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:15">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:26">= <expr pos:start="7:15" pos:end="7:26"><name pos:start="7:15" pos:end="7:26">EXIT_FAILURE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">SC_HANDLE</name></type> <name pos:start="9:15" pos:end="9:21">manager</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">SC_HANDLE</name></type> <name pos:start="11:15" pos:end="11:21">service</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">TCHAR</name></type> <name pos:start="13:11" pos:end="13:32"><name pos:start="13:11" pos:end="13:22">module_fname</name><index pos:start="13:23" pos:end="13:32">[<expr pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:31">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">GString</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">cmdline</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:67"><decl pos:start="17:5" pos:end="17:66"><type pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:23">SERVICE_DESCRIPTION</name></type> <name pos:start="17:25" pos:end="17:28">desc</name> <init pos:start="17:30" pos:end="17:66">= <expr pos:start="17:32" pos:end="17:66"><block pos:start="17:32" pos:end="17:66">{ <expr pos:start="17:34" pos:end="17:64"><operator pos:start="17:34" pos:end="17:34">(</operator><name pos:start="17:35" pos:end="17:38">char</name> <operator pos:start="17:40" pos:end="17:40">*</operator><operator pos:start="17:41" pos:end="17:41">)</operator><name pos:start="17:42" pos:end="17:64">QGA_SERVICE_DESCRIPTION</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:61">(<expr pos:start="21:9" pos:end="21:60"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:25">GetModuleFileName</name><argument_list pos:start="21:26" pos:end="21:55">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">NULL</name></expr></argument>, <argument pos:start="21:33" pos:end="21:44"><expr pos:start="21:33" pos:end="21:44"><name pos:start="21:33" pos:end="21:44">module_fname</name></expr></argument>, <argument pos:start="21:47" pos:end="21:54"><expr pos:start="21:47" pos:end="21:54"><name pos:start="21:47" pos:end="21:54">MAX_PATH</name></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:58">==</operator> <literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr>)</condition> <block pos:start="21:63" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:28">

        <expr_stmt pos:start="23:9" pos:end="23:65"><expr pos:start="23:9" pos:end="23:64"><call pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:24">printf_win_error</name><argument_list pos:start="23:25" pos:end="23:64">(<argument pos:start="23:26" pos:end="23:63"><expr pos:start="23:26" pos:end="23:63"><literal type="string" pos:start="23:26" pos:end="23:63">"No full path to service's executable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:28">return <expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:27">EXIT_FAILURE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:11">cmdline</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:40"><name pos:start="31:15" pos:end="31:26">g_string_new</name><argument_list pos:start="31:27" pos:end="31:40">(<argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:39">module_fname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:19">g_string_append</name><argument_list pos:start="33:20" pos:end="33:35">(<argument pos:start="33:21" pos:end="33:27"><expr pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:27">cmdline</name></expr></argument>, <argument pos:start="33:30" pos:end="33:34"><expr pos:start="33:30" pos:end="33:34"><literal type="string" pos:start="33:30" pos:end="33:34">" -d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:13">(<expr pos:start="37:9" pos:end="37:12"><name pos:start="37:9" pos:end="37:12">path</name></expr>)</condition> <block pos:start="37:15" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:56">

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:30">g_string_append_printf</name><argument_list pos:start="39:31" pos:end="39:55">(<argument pos:start="39:32" pos:end="39:38"><expr pos:start="39:32" pos:end="39:38"><name pos:start="39:32" pos:end="39:38">cmdline</name></expr></argument>, <argument pos:start="39:41" pos:end="39:48"><expr pos:start="39:41" pos:end="39:48"><literal type="string" pos:start="39:41" pos:end="39:48">" -p %s"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><name pos:start="39:51" pos:end="39:54">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:15">logfile</name></expr>)</condition> <block pos:start="43:18" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:62">

        <expr_stmt pos:start="45:9" pos:end="45:62"><expr pos:start="45:9" pos:end="45:61"><call pos:start="45:9" pos:end="45:61"><name pos:start="45:9" pos:end="45:30">g_string_append_printf</name><argument_list pos:start="45:31" pos:end="45:61">(<argument pos:start="45:32" pos:end="45:38"><expr pos:start="45:32" pos:end="45:38"><name pos:start="45:32" pos:end="45:38">cmdline</name></expr></argument>, <argument pos:start="45:41" pos:end="45:51"><expr pos:start="45:41" pos:end="45:51"><literal type="string" pos:start="45:41" pos:end="45:51">" -l %s -v"</literal></expr></argument>, <argument pos:start="45:54" pos:end="45:60"><expr pos:start="45:54" pos:end="45:60"><name pos:start="45:54" pos:end="45:60">logfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17">state_dir</name></expr>)</condition> <block pos:start="49:20" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:61">

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><call pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:30">g_string_append_printf</name><argument_list pos:start="51:31" pos:end="51:60">(<argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:38">cmdline</name></expr></argument>, <argument pos:start="51:41" pos:end="51:48"><expr pos:start="51:41" pos:end="51:48"><literal type="string" pos:start="51:41" pos:end="51:48">" -t %s"</literal></expr></argument>, <argument pos:start="51:51" pos:end="51:59"><expr pos:start="51:51" pos:end="51:59"><name pos:start="51:51" pos:end="51:59">state_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:51"><expr pos:start="57:5" pos:end="57:50"><call pos:start="57:5" pos:end="57:50"><name pos:start="57:5" pos:end="57:11">g_debug</name><argument_list pos:start="57:12" pos:end="57:50">(<argument pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:35"><literal type="string" pos:start="57:13" pos:end="57:35">"service's cmdline: %s"</literal></expr></argument>, <argument pos:start="57:38" pos:end="57:49"><expr pos:start="57:38" pos:end="57:49"><name pos:start="57:38" pos:end="57:49"><name pos:start="57:38" pos:end="57:44">cmdline</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:49">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:63"><expr pos:start="61:5" pos:end="61:62"><name pos:start="61:5" pos:end="61:11">manager</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:62"><name pos:start="61:15" pos:end="61:27">OpenSCManager</name><argument_list pos:start="61:28" pos:end="61:62">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">NULL</name></expr></argument>, <argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><name pos:start="61:35" pos:end="61:38">NULL</name></expr></argument>, <argument pos:start="61:41" pos:end="61:61"><expr pos:start="61:41" pos:end="61:61"><name pos:start="61:41" pos:end="61:61">SC_MANAGER_ALL_ACCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:24">(<expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:15">manager</name> <operator pos:start="63:17" pos:end="63:18">==</operator> <name pos:start="63:20" pos:end="63:23">NULL</name></expr>)</condition> <block pos:start="63:26" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:25">

        <expr_stmt pos:start="65:9" pos:end="65:65"><expr pos:start="65:9" pos:end="65:64"><call pos:start="65:9" pos:end="65:64"><name pos:start="65:9" pos:end="65:24">printf_win_error</name><argument_list pos:start="65:25" pos:end="65:64">(<argument pos:start="65:26" pos:end="65:63"><expr pos:start="65:26" pos:end="65:63"><literal type="string" pos:start="65:26" pos:end="65:63">"No handle to service control manager"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:25">goto <name pos:start="67:14" pos:end="67:24">out_strings</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="77:74"><expr pos:start="73:5" pos:end="77:73"><name pos:start="73:5" pos:end="73:11">service</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="77:73"><name pos:start="73:15" pos:end="73:27">CreateService</name><argument_list pos:start="73:28" pos:end="77:73">(<argument pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:35">manager</name></expr></argument>, <argument pos:start="73:38" pos:end="73:53"><expr pos:start="73:38" pos:end="73:53"><name pos:start="73:38" pos:end="73:53">QGA_SERVICE_NAME</name></expr></argument>, <argument pos:start="73:56" pos:end="73:79"><expr pos:start="73:56" pos:end="73:79"><name pos:start="73:56" pos:end="73:79">QGA_SERVICE_DISPLAY_NAME</name></expr></argument>,

        <argument pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:26">SERVICE_ALL_ACCESS</name></expr></argument>, <argument pos:start="75:29" pos:end="75:53"><expr pos:start="75:29" pos:end="75:53"><name pos:start="75:29" pos:end="75:53">SERVICE_WIN32_OWN_PROCESS</name></expr></argument>, <argument pos:start="75:56" pos:end="75:73"><expr pos:start="75:56" pos:end="75:73"><name pos:start="75:56" pos:end="75:73">SERVICE_AUTO_START</name></expr></argument>,

        <argument pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:28">SERVICE_ERROR_NORMAL</name></expr></argument>, <argument pos:start="77:31" pos:end="77:42"><expr pos:start="77:31" pos:end="77:42"><name pos:start="77:31" pos:end="77:42"><name pos:start="77:31" pos:end="77:37">cmdline</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:42">str</name></name></expr></argument>, <argument pos:start="77:45" pos:end="77:48"><expr pos:start="77:45" pos:end="77:48"><name pos:start="77:45" pos:end="77:48">NULL</name></expr></argument>, <argument pos:start="77:51" pos:end="77:54"><expr pos:start="77:51" pos:end="77:54"><name pos:start="77:51" pos:end="77:54">NULL</name></expr></argument>, <argument pos:start="77:57" pos:end="77:60"><expr pos:start="77:57" pos:end="77:60"><name pos:start="77:57" pos:end="77:60">NULL</name></expr></argument>, <argument pos:start="77:63" pos:end="77:66"><expr pos:start="77:63" pos:end="77:66"><name pos:start="77:63" pos:end="77:66">NULL</name></expr></argument>, <argument pos:start="77:69" pos:end="77:72"><expr pos:start="77:69" pos:end="77:72"><name pos:start="77:69" pos:end="77:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:24">(<expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:15">service</name> <operator pos:start="79:17" pos:end="79:18">==</operator> <name pos:start="79:20" pos:end="79:23">NULL</name></expr>)</condition> <block pos:start="79:26" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:25">

        <expr_stmt pos:start="81:9" pos:end="81:54"><expr pos:start="81:9" pos:end="81:53"><call pos:start="81:9" pos:end="81:53"><name pos:start="81:9" pos:end="81:24">printf_win_error</name><argument_list pos:start="81:25" pos:end="81:53">(<argument pos:start="81:26" pos:end="81:52"><expr pos:start="81:26" pos:end="81:52"><literal type="string" pos:start="81:26" pos:end="81:52">"Failed to install service"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:25">goto <name pos:start="83:14" pos:end="83:24">out_manager</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:69"><expr pos:start="89:5" pos:end="89:68"><call pos:start="89:5" pos:end="89:68"><name pos:start="89:5" pos:end="89:24">ChangeServiceConfig2</name><argument_list pos:start="89:25" pos:end="89:68">(<argument pos:start="89:26" pos:end="89:32"><expr pos:start="89:26" pos:end="89:32"><name pos:start="89:26" pos:end="89:32">service</name></expr></argument>, <argument pos:start="89:35" pos:end="89:60"><expr pos:start="89:35" pos:end="89:60"><name pos:start="89:35" pos:end="89:60">SERVICE_CONFIG_DESCRIPTION</name></expr></argument>, <argument pos:start="89:63" pos:end="89:67"><expr pos:start="89:63" pos:end="89:67"><operator pos:start="89:63" pos:end="89:63">&amp;</operator><name pos:start="89:64" pos:end="89:67">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:61"><expr pos:start="91:5" pos:end="91:60"><call pos:start="91:5" pos:end="91:60"><name pos:start="91:5" pos:end="91:11">fprintf</name><argument_list pos:start="91:12" pos:end="91:60">(<argument pos:start="91:13" pos:end="91:18"><expr pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:18">stderr</name></expr></argument>, <argument pos:start="91:21" pos:end="91:59"><expr pos:start="91:21" pos:end="91:59"><literal type="string" pos:start="91:21" pos:end="91:59">"Service was installed successfully.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:23"><expr pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:7">ret</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <name pos:start="93:11" pos:end="93:22">EXIT_SUCCESS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:32"><expr pos:start="95:5" pos:end="95:31"><call pos:start="95:5" pos:end="95:31"><name pos:start="95:5" pos:end="95:22">CloseServiceHandle</name><argument_list pos:start="95:23" pos:end="95:31">(<argument pos:start="95:24" pos:end="95:30"><expr pos:start="95:24" pos:end="95:30"><name pos:start="95:24" pos:end="95:30">service</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="99:1" pos:end="99:12"><name pos:start="99:1" pos:end="99:11">out_manager</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><call pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:22">CloseServiceHandle</name><argument_list pos:start="101:23" pos:end="101:31">(<argument pos:start="101:24" pos:end="101:30"><expr pos:start="101:24" pos:end="101:30"><name pos:start="101:24" pos:end="101:30">manager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="105:1" pos:end="105:12"><name pos:start="105:1" pos:end="105:11">out_strings</name>:</label>

    <expr_stmt pos:start="107:5" pos:end="107:33"><expr pos:start="107:5" pos:end="107:32"><call pos:start="107:5" pos:end="107:32"><name pos:start="107:5" pos:end="107:17">g_string_free</name><argument_list pos:start="107:18" pos:end="107:32">(<argument pos:start="107:19" pos:end="107:25"><expr pos:start="107:19" pos:end="107:25"><name pos:start="107:19" pos:end="107:25">cmdline</name></expr></argument>, <argument pos:start="107:28" pos:end="107:31"><expr pos:start="107:28" pos:end="107:31"><name pos:start="107:28" pos:end="107:31">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
