<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11715.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">tls_open</name><parameter_list pos:start="1:20" pos:end="1:86">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">URLContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">h</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">uri</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">flags</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:85"><decl pos:start="1:64" pos:end="1:85"><type pos:start="1:64" pos:end="1:85"><name pos:start="1:64" pos:end="1:75">AVDictionary</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier><modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">TLSShared</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:33">= <expr pos:start="7:20" pos:end="7:33"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:33"><name pos:start="7:21" pos:end="7:21">c</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:33">tls_shared</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:63">(<expr pos:start="13:9" pos:end="13:62"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:12">ret</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:57"><name pos:start="13:16" pos:end="13:37">ff_tls_open_underlying</name><argument_list pos:start="13:38" pos:end="13:57">(<argument pos:start="13:39" pos:end="13:39"><expr pos:start="13:39" pos:end="13:39"><name pos:start="13:39" pos:end="13:39">s</name></expr></argument>, <argument pos:start="13:42" pos:end="13:42"><expr pos:start="13:42" pos:end="13:42"><name pos:start="13:42" pos:end="13:42">h</name></expr></argument>, <argument pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><name pos:start="13:45" pos:end="13:47">uri</name></expr></argument>, <argument pos:start="13:50" pos:end="13:56"><expr pos:start="13:50" pos:end="13:56"><name pos:start="13:50" pos:end="13:56">options</name></expr></argument>)</argument_list></call><operator pos:start="13:58" pos:end="13:58">)</operator> <operator pos:start="13:60" pos:end="13:60">&lt;</operator> <literal type="number" pos:start="13:62" pos:end="13:62">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <goto pos:start="15:9" pos:end="15:18">goto <name pos:start="15:14" pos:end="15:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:105"><expr pos:start="19:5" pos:end="19:104"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:5">c</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:18">ssl_context</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:104"><name pos:start="19:22" pos:end="19:37">SSLCreateContext</name><argument_list pos:start="19:38" pos:end="19:104">(<argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">NULL</name></expr></argument>, <argument pos:start="19:45" pos:end="19:87"><expr pos:start="19:45" pos:end="19:87"><ternary pos:start="19:45" pos:end="19:87"><condition pos:start="19:45" pos:end="19:55"><expr pos:start="19:45" pos:end="19:53"><name pos:start="19:45" pos:end="19:53"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:53">listen</name></name></expr> ?</condition><then pos:start="19:57" pos:end="19:70"> <expr pos:start="19:57" pos:end="19:70"><name pos:start="19:57" pos:end="19:70">kSSLServerSide</name></expr> </then><else pos:start="19:72" pos:end="19:87">: <expr pos:start="19:74" pos:end="19:87"><name pos:start="19:74" pos:end="19:87">kSSLClientSide</name></expr></else></ternary></expr></argument>, <argument pos:start="19:90" pos:end="19:103"><expr pos:start="19:90" pos:end="19:103"><name pos:start="19:90" pos:end="19:103">kSSLStreamType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:23"><name pos:start="21:10" pos:end="21:10">c</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:23">ssl_context</name></name></expr>)</condition> <block pos:start="21:26" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:18">

        <expr_stmt pos:start="23:9" pos:end="23:66"><expr pos:start="23:9" pos:end="23:65"><call pos:start="23:9" pos:end="23:65"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:65">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">h</name></expr></argument>, <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:33" pos:end="23:64"><expr pos:start="23:33" pos:end="23:64"><literal type="string" pos:start="23:33" pos:end="23:64">"Unable to create SSL context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:29"><name pos:start="25:15" pos:end="25:21">AVERROR</name><argument_list pos:start="25:22" pos:end="25:29">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">ca_file</name></name></expr>)</condition> <block pos:start="31:21" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:99">

        <if_stmt pos:start="33:9" pos:end="35:22"><if pos:start="33:9" pos:end="35:22">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:16">ret</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:26">load_ca</name><argument_list pos:start="33:27" pos:end="33:29">(<argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">h</name></expr></argument>)</argument_list></call><operator pos:start="33:30" pos:end="33:30">)</operator> <operator pos:start="33:32" pos:end="33:32">&lt;</operator> <literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <goto pos:start="35:13" pos:end="35:22">goto <name pos:start="35:18" pos:end="35:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:99"><expr pos:start="37:9" pos:end="37:98"><call pos:start="37:9" pos:end="37:98"><name pos:start="37:9" pos:end="37:19">CHECK_ERROR</name><argument_list pos:start="37:20" pos:end="37:98">(<argument pos:start="37:21" pos:end="37:39"><expr pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:39">SSLSetSessionOption</name></expr></argument>, <argument pos:start="37:42" pos:end="37:55"><expr pos:start="37:42" pos:end="37:55"><name pos:start="37:42" pos:end="37:55"><name pos:start="37:42" pos:end="37:42">c</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:55">ssl_context</name></name></expr></argument>, <argument pos:start="37:58" pos:end="37:91"><expr pos:start="37:58" pos:end="37:91"><name pos:start="37:58" pos:end="37:91">kSSLSessionOptionBreakOnServerAuth</name></expr></argument>, <argument pos:start="37:94" pos:end="37:97"><expr pos:start="37:94" pos:end="37:97"><name pos:start="37:94" pos:end="37:97">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:22"><if pos:start="41:5" pos:end="45:22">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">cert_file</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="45:22"><block_content pos:start="43:9" pos:end="45:22">

        <if_stmt pos:start="43:9" pos:end="45:22"><if pos:start="43:9" pos:end="45:22">if <condition pos:start="43:12" pos:end="43:37">(<expr pos:start="43:13" pos:end="43:36"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:16">ret</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:28">load_cert</name><argument_list pos:start="43:29" pos:end="43:31">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">h</name></expr></argument>)</argument_list></call><operator pos:start="43:32" pos:end="43:32">)</operator> <operator pos:start="43:34" pos:end="43:34">&lt;</operator> <literal type="number" pos:start="43:36" pos:end="43:36">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:22"><block_content pos:start="45:13" pos:end="45:22">

            <goto pos:start="45:13" pos:end="45:22">goto <name pos:start="45:18" pos:end="45:21">fail</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="49:84"><if pos:start="47:5" pos:end="49:84">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:17">verify</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:84"><block_content pos:start="49:9" pos:end="49:84">

        <expr_stmt pos:start="49:9" pos:end="49:84"><expr pos:start="49:9" pos:end="49:83"><call pos:start="49:9" pos:end="49:83"><name pos:start="49:9" pos:end="49:19">CHECK_ERROR</name><argument_list pos:start="49:20" pos:end="49:83">(<argument pos:start="49:21" pos:end="49:40"><expr pos:start="49:21" pos:end="49:40"><name pos:start="49:21" pos:end="49:40">SSLSetPeerDomainName</name></expr></argument>, <argument pos:start="49:43" pos:end="49:56"><expr pos:start="49:43" pos:end="49:56"><name pos:start="49:43" pos:end="49:56"><name pos:start="49:43" pos:end="49:43">c</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:56">ssl_context</name></name></expr></argument>, <argument pos:start="49:59" pos:end="49:65"><expr pos:start="49:59" pos:end="49:65"><name pos:start="49:59" pos:end="49:65"><name pos:start="49:59" pos:end="49:59">s</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:65">host</name></name></expr></argument>, <argument pos:start="49:68" pos:end="49:82"><expr pos:start="49:68" pos:end="49:82"><call pos:start="49:68" pos:end="49:82"><name pos:start="49:68" pos:end="49:73">strlen</name><argument_list pos:start="49:74" pos:end="49:82">(<argument pos:start="49:75" pos:end="49:81"><expr pos:start="49:75" pos:end="49:81"><name pos:start="49:75" pos:end="49:81"><name pos:start="49:75" pos:end="49:75">s</name><operator pos:start="49:76" pos:end="49:77">-&gt;</operator><name pos:start="49:78" pos:end="49:81">host</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:74"><expr pos:start="51:5" pos:end="51:73"><call pos:start="51:5" pos:end="51:73"><name pos:start="51:5" pos:end="51:15">CHECK_ERROR</name><argument_list pos:start="51:16" pos:end="51:73">(<argument pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:29">SSLSetIOFuncs</name></expr></argument>, <argument pos:start="51:32" pos:end="51:45"><expr pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:32">c</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:45">ssl_context</name></name></expr></argument>, <argument pos:start="51:48" pos:end="51:58"><expr pos:start="51:48" pos:end="51:58"><name pos:start="51:48" pos:end="51:58">tls_read_cb</name></expr></argument>, <argument pos:start="51:61" pos:end="51:72"><expr pos:start="51:61" pos:end="51:72"><name pos:start="51:61" pos:end="51:72">tls_write_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:53"><expr pos:start="53:5" pos:end="53:52"><call pos:start="53:5" pos:end="53:52"><name pos:start="53:5" pos:end="53:15">CHECK_ERROR</name><argument_list pos:start="53:16" pos:end="53:52">(<argument pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:32">SSLSetConnection</name></expr></argument>, <argument pos:start="53:35" pos:end="53:48"><expr pos:start="53:35" pos:end="53:48"><name pos:start="53:35" pos:end="53:48"><name pos:start="53:35" pos:end="53:35">c</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:48">ssl_context</name></name></expr></argument>, <argument pos:start="53:51" pos:end="53:51"><expr pos:start="53:51" pos:end="53:51"><name pos:start="53:51" pos:end="53:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="55:5" pos:end="143:5">while <condition pos:start="55:11" pos:end="55:13">(<expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">1</literal></expr>)</condition> <block pos:start="55:15" pos:end="143:5">{<block_content pos:start="57:9" pos:end="141:18">

        <decl_stmt pos:start="57:9" pos:end="57:55"><decl pos:start="57:9" pos:end="57:54"><type pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16">OSStatus</name></type> <name pos:start="57:18" pos:end="57:23">status</name> <init pos:start="57:25" pos:end="57:54">= <expr pos:start="57:27" pos:end="57:54"><call pos:start="57:27" pos:end="57:54"><name pos:start="57:27" pos:end="57:38">SSLHandshake</name><argument_list pos:start="57:39" pos:end="57:54">(<argument pos:start="57:40" pos:end="57:53"><expr pos:start="57:40" pos:end="57:53"><name pos:start="57:40" pos:end="57:53"><name pos:start="57:40" pos:end="57:40">c</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:53">ssl_context</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="59:9" pos:end="129:9"><if pos:start="59:9" pos:end="129:9">if <condition pos:start="59:12" pos:end="59:48">(<expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:18">status</name> <operator pos:start="59:20" pos:end="59:21">==</operator> <name pos:start="59:23" pos:end="59:47">errSSLServerAuthCompleted</name></expr>)</condition> <block pos:start="59:50" pos:end="129:9">{<block_content pos:start="61:13" pos:end="127:37">

            <decl_stmt pos:start="61:13" pos:end="61:34"><decl pos:start="61:13" pos:end="61:33"><type pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:23">SecTrustRef</name></type> <name pos:start="61:25" pos:end="61:33">peerTrust</name></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:43"><decl pos:start="63:13" pos:end="63:42"><type pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:30">SecTrustResultType</name></type> <name pos:start="63:32" pos:end="63:42">trustResult</name></decl>;</decl_stmt>

            <if_stmt pos:start="65:13" pos:end="67:25"><if pos:start="65:13" pos:end="67:25">if <condition pos:start="65:16" pos:end="65:27">(<expr pos:start="65:17" pos:end="65:26"><operator pos:start="65:17" pos:end="65:17">!</operator><name pos:start="65:18" pos:end="65:26"><name pos:start="65:18" pos:end="65:18">s</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:26">verify</name></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:25"><block_content pos:start="67:17" pos:end="67:25">

                <continue pos:start="67:17" pos:end="67:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="71:13" pos:end="77:13"><if pos:start="71:13" pos:end="77:13">if <condition pos:start="71:16" pos:end="71:70">(<expr pos:start="71:17" pos:end="71:69"><call pos:start="71:17" pos:end="71:60"><name pos:start="71:17" pos:end="71:32">SSLCopyPeerTrust</name><argument_list pos:start="71:33" pos:end="71:60">(<argument pos:start="71:34" pos:end="71:47"><expr pos:start="71:34" pos:end="71:47"><name pos:start="71:34" pos:end="71:47"><name pos:start="71:34" pos:end="71:34">c</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:47">ssl_context</name></name></expr></argument>, <argument pos:start="71:50" pos:end="71:59"><expr pos:start="71:50" pos:end="71:59"><operator pos:start="71:50" pos:end="71:50">&amp;</operator><name pos:start="71:51" pos:end="71:59">peerTrust</name></expr></argument>)</argument_list></call> <operator pos:start="71:62" pos:end="71:63">!=</operator> <name pos:start="71:65" pos:end="71:69">noErr</name></expr>)</condition> <block pos:start="71:72" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:26">

                <expr_stmt pos:start="73:17" pos:end="73:38"><expr pos:start="73:17" pos:end="73:37"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:37"><name pos:start="73:23" pos:end="73:29">AVERROR</name><argument_list pos:start="73:30" pos:end="73:37">(<argument pos:start="73:31" pos:end="73:36"><expr pos:start="73:31" pos:end="73:36"><name pos:start="73:31" pos:end="73:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="75:17" pos:end="75:26">goto <name pos:start="75:22" pos:end="75:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:79">(<expr pos:start="81:17" pos:end="81:78"><call pos:start="81:17" pos:end="81:69"><name pos:start="81:17" pos:end="81:45">SecTrustSetAnchorCertificates</name><argument_list pos:start="81:46" pos:end="81:69">(<argument pos:start="81:47" pos:end="81:55"><expr pos:start="81:47" pos:end="81:55"><name pos:start="81:47" pos:end="81:55">peerTrust</name></expr></argument>, <argument pos:start="81:58" pos:end="81:68"><expr pos:start="81:58" pos:end="81:68"><name pos:start="81:58" pos:end="81:68"><name pos:start="81:58" pos:end="81:58">c</name><operator pos:start="81:59" pos:end="81:60">-&gt;</operator><name pos:start="81:61" pos:end="81:68">ca_array</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:71" pos:end="81:72">!=</operator> <name pos:start="81:74" pos:end="81:78">noErr</name></expr>)</condition> <block pos:start="81:81" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:26">

                <expr_stmt pos:start="83:17" pos:end="83:38"><expr pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:19">ret</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:37">AVERROR_UNKNOWN</name></expr>;</expr_stmt>

                <goto pos:start="85:17" pos:end="85:26">goto <name pos:start="85:22" pos:end="85:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:67">(<expr pos:start="91:17" pos:end="91:66"><call pos:start="91:17" pos:end="91:57"><name pos:start="91:17" pos:end="91:32">SecTrustEvaluate</name><argument_list pos:start="91:33" pos:end="91:57">(<argument pos:start="91:34" pos:end="91:42"><expr pos:start="91:34" pos:end="91:42"><name pos:start="91:34" pos:end="91:42">peerTrust</name></expr></argument>, <argument pos:start="91:45" pos:end="91:56"><expr pos:start="91:45" pos:end="91:56"><operator pos:start="91:45" pos:end="91:45">&amp;</operator><name pos:start="91:46" pos:end="91:56">trustResult</name></expr></argument>)</argument_list></call> <operator pos:start="91:59" pos:end="91:60">!=</operator> <name pos:start="91:62" pos:end="91:66">noErr</name></expr>)</condition> <block pos:start="91:69" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:26">

                <expr_stmt pos:start="93:17" pos:end="93:38"><expr pos:start="93:17" pos:end="93:37"><name pos:start="93:17" pos:end="93:19">ret</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <name pos:start="93:23" pos:end="93:37">AVERROR_UNKNOWN</name></expr>;</expr_stmt>

                <goto pos:start="95:17" pos:end="95:26">goto <name pos:start="95:22" pos:end="95:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="101:13" pos:end="121:13"><if pos:start="101:13" pos:end="109:13">if <condition pos:start="101:16" pos:end="103:58">(<expr pos:start="101:17" pos:end="103:57"><name pos:start="101:17" pos:end="101:27">trustResult</name> <operator pos:start="101:29" pos:end="101:30">==</operator> <name pos:start="101:32" pos:end="101:53">kSecTrustResultProceed</name> <operator pos:start="101:55" pos:end="101:56">||</operator>

                <name pos:start="103:17" pos:end="103:27">trustResult</name> <operator pos:start="103:29" pos:end="103:30">==</operator> <name pos:start="103:32" pos:end="103:57">kSecTrustResultUnspecified</name></expr>)</condition> <block pos:start="103:60" pos:end="109:13">{<block_content pos:start="107:17" pos:end="107:42">

                <comment type="line" pos:start="105:17" pos:end="105:41">// certificate is trusted</comment>

                <expr_stmt pos:start="107:17" pos:end="107:42"><expr pos:start="107:17" pos:end="107:41"><name pos:start="107:17" pos:end="107:22">status</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:41">errSSLWouldBlock</name></expr>;</expr_stmt> <comment type="line" pos:start="107:44" pos:end="107:75">// so we call SSLHandshake again</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="109:15" pos:end="115:13">else if <condition pos:start="109:23" pos:end="109:77">(<expr pos:start="109:24" pos:end="109:76"><name pos:start="109:24" pos:end="109:34">trustResult</name> <operator pos:start="109:36" pos:end="109:37">==</operator> <name pos:start="109:39" pos:end="109:76">kSecTrustResultRecoverableTrustFailure</name></expr>)</condition> <block pos:start="109:79" pos:end="115:13">{<block_content pos:start="113:17" pos:end="113:49">

                <comment type="line" pos:start="111:17" pos:end="111:72">// not trusted, for some reason other than being expired</comment>

                <expr_stmt pos:start="113:17" pos:end="113:49"><expr pos:start="113:17" pos:end="113:48"><name pos:start="113:17" pos:end="113:22">status</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <name pos:start="113:26" pos:end="113:48">errSSLXCertChainInvalid</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="121:13">else <block pos:start="115:20" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:39">

                <comment type="line" pos:start="117:17" pos:end="117:54">// cannot use this certificate (fatal)</comment>

                <expr_stmt pos:start="119:17" pos:end="119:39"><expr pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:22">status</name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:38">errSSLBadCert</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="125:13" pos:end="127:37"><if pos:start="125:13" pos:end="127:37">if <condition pos:start="125:16" pos:end="125:26">(<expr pos:start="125:17" pos:end="125:25"><name pos:start="125:17" pos:end="125:25">peerTrust</name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:37"><block_content pos:start="127:17" pos:end="127:37">

                <expr_stmt pos:start="127:17" pos:end="127:37"><expr pos:start="127:17" pos:end="127:36"><call pos:start="127:17" pos:end="127:36"><name pos:start="127:17" pos:end="127:25">CFRelease</name><argument_list pos:start="127:26" pos:end="127:36">(<argument pos:start="127:27" pos:end="127:35"><expr pos:start="127:27" pos:end="127:35"><name pos:start="127:27" pos:end="127:35">peerTrust</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="133:18"><if pos:start="131:9" pos:end="133:18">if <condition pos:start="131:12" pos:end="131:28">(<expr pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:18">status</name> <operator pos:start="131:20" pos:end="131:21">==</operator> <name pos:start="131:23" pos:end="131:27">noErr</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:18"><block_content pos:start="133:13" pos:end="133:18">

            <break pos:start="133:13" pos:end="133:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:90"><expr pos:start="137:9" pos:end="137:89"><call pos:start="137:9" pos:end="137:89"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:89">(<argument pos:start="137:16" pos:end="137:16"><expr pos:start="137:16" pos:end="137:16"><name pos:start="137:16" pos:end="137:16">h</name></expr></argument>, <argument pos:start="137:19" pos:end="137:30"><expr pos:start="137:19" pos:end="137:30"><name pos:start="137:19" pos:end="137:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:33" pos:end="137:75"><expr pos:start="137:33" pos:end="137:75"><literal type="string" pos:start="137:33" pos:end="137:75">"Unable to negotiate TLS/SSL session: %i\n"</literal></expr></argument>, <argument pos:start="137:78" pos:end="137:88"><expr pos:start="137:78" pos:end="137:88"><operator pos:start="137:78" pos:end="137:78">(</operator><name pos:start="137:79" pos:end="137:81">int</name><operator pos:start="137:82" pos:end="137:82">)</operator><name pos:start="137:83" pos:end="137:88">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:27"><expr pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <call pos:start="139:15" pos:end="139:26"><name pos:start="139:15" pos:end="139:21">AVERROR</name><argument_list pos:start="139:22" pos:end="139:26">(<argument pos:start="139:23" pos:end="139:25"><expr pos:start="139:23" pos:end="139:25"><name pos:start="139:23" pos:end="139:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="141:9" pos:end="141:18">goto <name pos:start="141:14" pos:end="141:17">fail</name>;</goto>

    </block_content>}</block></while>



    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>

<label pos:start="149:1" pos:end="149:5"><name pos:start="149:1" pos:end="149:4">fail</name>:</label>

    <expr_stmt pos:start="151:5" pos:end="151:17"><expr pos:start="151:5" pos:end="151:16"><call pos:start="151:5" pos:end="151:16"><name pos:start="151:5" pos:end="151:13">tls_close</name><argument_list pos:start="151:14" pos:end="151:16">(<argument pos:start="151:15" pos:end="151:15"><expr pos:start="151:15" pos:end="151:15"><name pos:start="151:15" pos:end="151:15">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:15">return <expr pos:start="153:12" pos:end="153:14"><name pos:start="153:12" pos:end="153:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
