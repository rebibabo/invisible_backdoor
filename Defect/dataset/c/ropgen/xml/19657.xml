<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19657.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_stream_header</name><parameter_list pos:start="1:32" pos:end="1:48">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:42">NUTContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">nut</name></decl></parameter>)</parameter_list><block pos:start="1:49" pos:end="169:1">{<block_content pos:start="3:5" pos:end="167:13">

    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:32"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">AVFormatContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:22">s</name><init pos:start="3:23" pos:end="3:32">= <expr pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:27">nut</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:32">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">bc</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">StreamContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">stc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">class</name></decl>, <decl pos:start="9:16" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:18">nom</name></decl>, <decl pos:start="9:21" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:25">denom</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:36">stream_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:16">tmp</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:19" pos:end="11:21">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:7">end</name><operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:37"><name pos:start="17:10" pos:end="17:25">get_packetheader</name><argument_list pos:start="17:26" pos:end="17:37">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">nut</name></expr></argument>, <argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">bc</name></expr></argument>, <argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:7">end</name> <operator pos:start="19:9" pos:end="19:10">+=</operator> <call pos:start="19:12" pos:end="19:24"><name pos:start="19:12" pos:end="19:20">url_ftell</name><argument_list pos:start="19:21" pos:end="19:24">(<argument pos:start="19:22" pos:end="19:23"><expr pos:start="19:22" pos:end="19:23"><name pos:start="19:22" pos:end="19:23">bc</name></expr></argument>)</argument_list></call> <operator pos:start="19:26" pos:end="19:26">-</operator> <literal type="number" pos:start="19:28" pos:end="19:28">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:77"><expr pos:start="23:5" pos:end="23:76"><call pos:start="23:5" pos:end="23:76"><name pos:start="23:5" pos:end="23:9">GET_V</name><argument_list pos:start="23:10" pos:end="23:76">(<argument pos:start="23:11" pos:end="23:19"><expr pos:start="23:11" pos:end="23:19"><name pos:start="23:11" pos:end="23:19">stream_id</name></expr></argument>, <argument pos:start="23:22" pos:end="23:75"><expr pos:start="23:22" pos:end="23:75"><name pos:start="23:22" pos:end="23:24">tmp</name> <operator pos:start="23:26" pos:end="23:26">&lt;</operator> <name pos:start="23:28" pos:end="23:40"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:40">nb_streams</name></name> <operator pos:start="23:42" pos:end="23:43">&amp;&amp;</operator> <operator pos:start="23:45" pos:end="23:45">!</operator><name pos:start="23:46" pos:end="23:61"><name pos:start="23:46" pos:end="23:48">nut</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:56">stream</name><index pos:start="23:57" pos:end="23:61">[<expr pos:start="23:58" pos:end="23:60"><name pos:start="23:58" pos:end="23:60">tmp</name></expr>]</index></name><operator pos:start="23:62" pos:end="23:62">.</operator><name pos:start="23:63" pos:end="23:75"><name pos:start="23:63" pos:end="23:71">time_base</name><operator pos:start="23:72" pos:end="23:72">.</operator><name pos:start="23:73" pos:end="23:75">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:7">stc</name><operator pos:start="25:8" pos:end="25:8">=</operator> <operator pos:start="25:10" pos:end="25:10">&amp;</operator><name pos:start="25:11" pos:end="25:32"><name pos:start="25:11" pos:end="25:13">nut</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">stream</name><index pos:start="25:22" pos:end="25:32">[<expr pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:31">stream_id</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:6">st</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:10">s</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:19">streams</name><index pos:start="29:20" pos:end="29:30">[<expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:29">stream_id</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:29"><if pos:start="31:5" pos:end="33:29">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:11">st</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:29"><block_content pos:start="33:9" pos:end="33:29">

        <return pos:start="33:9" pos:end="33:29">return <expr pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:28">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:9">class</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:17">get_v</name><argument_list pos:start="37:18" pos:end="37:21">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:7">tmp</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:24"><name pos:start="39:11" pos:end="39:20">get_fourcc</name><argument_list pos:start="39:21" pos:end="39:24">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:13">codec</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:24">codec_tag</name></name><operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:29">tmp</name></expr>;</expr_stmt>

    <switch pos:start="43:5" pos:end="89:5">switch<condition pos:start="43:11" pos:end="43:17">(<expr pos:start="43:12" pos:end="43:16"><name pos:start="43:12" pos:end="43:16">class</name></expr>)</condition>

    <block pos:start="45:5" pos:end="89:5">{<block_content pos:start="47:9" pos:end="87:22">

        <case pos:start="47:9" pos:end="47:15">case <expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:53"><expr pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:14">st</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:33">codec_type</name></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:52">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:56"><expr pos:start="51:13" pos:end="51:55"><name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:14">st</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:31">codec_id</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <call pos:start="51:35" pos:end="51:55"><name pos:start="51:35" pos:end="51:50">codec_get_bmp_id</name><argument_list pos:start="51:51" pos:end="51:55">(<argument pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><name pos:start="51:52" pos:end="51:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:61"><if pos:start="53:13" pos:end="55:61">if <condition pos:start="53:16" pos:end="53:53">(<expr pos:start="53:17" pos:end="53:52"><name pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:18">st</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:25">codec</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:35">codec_id</name></name> <operator pos:start="53:37" pos:end="53:38">==</operator> <name pos:start="53:40" pos:end="53:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:61"><block_content pos:start="55:17" pos:end="55:61">

                <expr_stmt pos:start="55:17" pos:end="55:61"><expr pos:start="55:17" pos:end="55:60"><call pos:start="55:17" pos:end="55:60"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="55:60">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:59"><expr pos:start="55:41" pos:end="55:59"><literal type="string" pos:start="55:41" pos:end="55:59">"Unknown codec?!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:15">case <expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">1</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:53"><expr pos:start="61:13" pos:end="61:52"><name pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:14">st</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:21">codec</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:33">codec_type</name></name> <operator pos:start="61:35" pos:end="61:35">=</operator> <name pos:start="61:37" pos:end="61:52">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:56"><expr pos:start="63:13" pos:end="63:55"><name pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:14">st</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">codec</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:31">codec_id</name></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <call pos:start="63:35" pos:end="63:55"><name pos:start="63:35" pos:end="63:50">codec_get_wav_id</name><argument_list pos:start="63:51" pos:end="63:55">(<argument pos:start="63:52" pos:end="63:54"><expr pos:start="63:52" pos:end="63:54"><name pos:start="63:52" pos:end="63:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:61"><if pos:start="65:13" pos:end="67:61">if <condition pos:start="65:16" pos:end="65:53">(<expr pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:18">st</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:25">codec</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:35">codec_id</name></name> <operator pos:start="65:37" pos:end="65:38">==</operator> <name pos:start="65:40" pos:end="65:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:61"><block_content pos:start="67:17" pos:end="67:61">

                <expr_stmt pos:start="67:17" pos:end="67:61"><expr pos:start="67:17" pos:end="67:60"><call pos:start="67:17" pos:end="67:60"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="67:60">(<argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">s</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:41" pos:end="67:59"><expr pos:start="67:41" pos:end="67:59"><literal type="string" pos:start="67:41" pos:end="67:59">"Unknown codec?!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:15">case <expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">2</literal></expr>:</case>

<comment type="line" pos:start="73:1" pos:end="73:54">//            st-&gt;codec-&gt;codec_type = CODEC_TYPE_TEXT;</comment>

<comment type="line" pos:start="75:1" pos:end="75:20">//            break;</comment>

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">3</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:52"><expr pos:start="79:13" pos:end="79:51"><name pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:14">st</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:21">codec</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:33">codec_type</name></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:51">CODEC_TYPE_DATA</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <default pos:start="83:9" pos:end="83:16">default:</default>

            <expr_stmt pos:start="85:13" pos:end="85:74"><expr pos:start="85:13" pos:end="85:73"><call pos:start="85:13" pos:end="85:73"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="85:73">(<argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">s</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:65"><expr pos:start="85:37" pos:end="85:65"><literal type="string" pos:start="85:37" pos:end="85:65">"Unknown stream class (%d)\n"</literal></expr></argument>, <argument pos:start="85:68" pos:end="85:72"><expr pos:start="85:68" pos:end="85:72"><name pos:start="85:68" pos:end="85:72">class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:22">return <expr pos:start="87:20" pos:end="87:21"><operator pos:start="87:20" pos:end="87:20">-</operator><literal type="number" pos:start="87:21" pos:end="87:21">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="91:5" pos:end="91:61"><expr pos:start="91:5" pos:end="91:60"><call pos:start="91:5" pos:end="91:60"><name pos:start="91:5" pos:end="91:9">GET_V</name><argument_list pos:start="91:10" pos:end="91:60">(<argument pos:start="91:11" pos:end="91:27"><expr pos:start="91:11" pos:end="91:27"><name pos:start="91:11" pos:end="91:27"><name pos:start="91:11" pos:end="91:13">stc</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:27">time_base_id</name></name></expr></argument>    , <argument pos:start="91:34" pos:end="91:59"><expr pos:start="91:34" pos:end="91:59"><name pos:start="91:34" pos:end="91:36">tmp</name> <operator pos:start="91:38" pos:end="91:38">&lt;</operator> <name pos:start="91:40" pos:end="91:59"><name pos:start="91:40" pos:end="91:42">nut</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:59">time_base_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:43"><expr pos:start="93:5" pos:end="93:42"><call pos:start="93:5" pos:end="93:42"><name pos:start="93:5" pos:end="93:9">GET_V</name><argument_list pos:start="93:10" pos:end="93:42">(<argument pos:start="93:11" pos:end="93:28"><expr pos:start="93:11" pos:end="93:28"><name pos:start="93:11" pos:end="93:28"><name pos:start="93:11" pos:end="93:13">stc</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:28">msb_pts_shift</name></name></expr></argument>   , <argument pos:start="93:34" pos:end="93:41"><expr pos:start="93:34" pos:end="93:41"><name pos:start="93:34" pos:end="93:36">tmp</name> <operator pos:start="93:38" pos:end="93:38">&lt;</operator> <literal type="number" pos:start="93:40" pos:end="93:41">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:37"><expr pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:7">stc</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:25">max_pts_distance</name></name><operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:32">get_v</name><argument_list pos:start="95:33" pos:end="95:36">(<argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><name pos:start="95:34" pos:end="95:35">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:45"><expr pos:start="97:5" pos:end="97:44"><call pos:start="97:5" pos:end="97:44"><name pos:start="97:5" pos:end="97:9">GET_V</name><argument_list pos:start="97:10" pos:end="97:44">(<argument pos:start="97:11" pos:end="97:27"><expr pos:start="97:11" pos:end="97:27"><name pos:start="97:11" pos:end="97:27"><name pos:start="97:11" pos:end="97:13">stc</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:27">decode_delay</name></name></expr></argument>    , <argument pos:start="97:34" pos:end="97:43"><expr pos:start="97:34" pos:end="97:43"><name pos:start="97:34" pos:end="97:36">tmp</name> <operator pos:start="97:38" pos:end="97:38">&lt;</operator> <literal type="number" pos:start="97:40" pos:end="97:43">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="97:47" pos:end="97:93">//sanity limit, raise this if moors law is true</comment>

    <expr_stmt pos:start="99:5" pos:end="99:47"><expr pos:start="99:5" pos:end="99:46"><name pos:start="99:5" pos:end="99:27"><name pos:start="99:5" pos:end="99:6">st</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:13">codec</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:27">has_b_frames</name></name><operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:46"><name pos:start="99:30" pos:end="99:32">stc</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:46">decode_delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:14"><expr pos:start="101:5" pos:end="101:13"><call pos:start="101:5" pos:end="101:13"><name pos:start="101:5" pos:end="101:9">get_v</name><argument_list pos:start="101:10" pos:end="101:13">(<argument pos:start="101:11" pos:end="101:12"><expr pos:start="101:11" pos:end="101:12"><name pos:start="101:11" pos:end="101:12">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="101:16" pos:end="101:29">//stream flags</comment>



    <expr_stmt pos:start="105:5" pos:end="105:52"><expr pos:start="105:5" pos:end="105:51"><call pos:start="105:5" pos:end="105:51"><name pos:start="105:5" pos:end="105:9">GET_V</name><argument_list pos:start="105:10" pos:end="105:51">(<argument pos:start="105:11" pos:end="105:35"><expr pos:start="105:11" pos:end="105:35"><name pos:start="105:11" pos:end="105:35"><name pos:start="105:11" pos:end="105:12">st</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:19">codec</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:35">extradata_size</name></name></expr></argument>, <argument pos:start="105:38" pos:end="105:50"><expr pos:start="105:38" pos:end="105:50"><name pos:start="105:38" pos:end="105:40">tmp</name> <operator pos:start="105:42" pos:end="105:42">&lt;</operator> <operator pos:start="105:44" pos:end="105:44">(</operator><literal type="number" pos:start="105:45" pos:end="105:45">1</literal><operator pos:start="105:46" pos:end="105:47">&lt;&lt;</operator><literal type="number" pos:start="105:48" pos:end="105:49">30</literal><operator pos:start="105:50" pos:end="105:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if<condition pos:start="107:7" pos:end="107:33">(<expr pos:start="107:8" pos:end="107:32"><name pos:start="107:8" pos:end="107:32"><name pos:start="107:8" pos:end="107:9">st</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:16">codec</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:32">extradata_size</name></name></expr>)</condition><block pos:start="107:34" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:72">

        <expr_stmt pos:start="109:9" pos:end="109:99"><expr pos:start="109:9" pos:end="109:98"><name pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:10">st</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:17">codec</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:28">extradata</name></name><operator pos:start="109:29" pos:end="109:29">=</operator> <call pos:start="109:31" pos:end="109:98"><name pos:start="109:31" pos:end="109:40">av_mallocz</name><argument_list pos:start="109:41" pos:end="109:98">(<argument pos:start="109:42" pos:end="109:97"><expr pos:start="109:42" pos:end="109:97"><name pos:start="109:42" pos:end="109:66"><name pos:start="109:42" pos:end="109:43">st</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:50">codec</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:66">extradata_size</name></name> <operator pos:start="109:68" pos:end="109:68">+</operator> <name pos:start="109:70" pos:end="109:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:72"><expr pos:start="111:9" pos:end="111:71"><call pos:start="111:9" pos:end="111:71"><name pos:start="111:9" pos:end="111:18">get_buffer</name><argument_list pos:start="111:19" pos:end="111:71">(<argument pos:start="111:20" pos:end="111:21"><expr pos:start="111:20" pos:end="111:21"><name pos:start="111:20" pos:end="111:21">bc</name></expr></argument>, <argument pos:start="111:24" pos:end="111:43"><expr pos:start="111:24" pos:end="111:43"><name pos:start="111:24" pos:end="111:43"><name pos:start="111:24" pos:end="111:25">st</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:32">codec</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:43">extradata</name></name></expr></argument>, <argument pos:start="111:46" pos:end="111:70"><expr pos:start="111:46" pos:end="111:70"><name pos:start="111:46" pos:end="111:70"><name pos:start="111:46" pos:end="111:47">st</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:54">codec</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:70">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="153:5"><if pos:start="117:5" pos:end="137:5">if <condition pos:start="117:8" pos:end="117:50">(<expr pos:start="117:9" pos:end="117:49"><name pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:10">st</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:17">codec</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:29">codec_type</name></name> <operator pos:start="117:31" pos:end="117:32">==</operator> <name pos:start="117:34" pos:end="117:49">CODEC_TYPE_VIDEO</name></expr>)</condition><block pos:start="117:51" pos:end="137:5">{<block_content pos:start="119:9" pos:end="135:18">

        <macro pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:13">GET_V</name><argument_list pos:start="119:14" pos:end="119:41">(<argument pos:start="119:15" pos:end="119:30">st-&gt;codec-&gt;width</argument> , <argument pos:start="119:34" pos:end="119:40">tmp &gt; <literal type="number" pos:start="119:40" pos:end="119:40">0</literal></argument>)</argument_list></macro>

        <macro pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:13">GET_V</name><argument_list pos:start="121:14" pos:end="121:41">(<argument pos:start="121:15" pos:end="121:31">st-&gt;codec-&gt;height</argument>, <argument pos:start="121:34" pos:end="121:40">tmp &gt; <literal type="number" pos:start="121:40" pos:end="121:40">0</literal></argument>)</argument_list></macro>

        <expr_stmt pos:start="123:9" pos:end="123:54"><expr pos:start="123:9" pos:end="123:53"><name pos:start="123:9" pos:end="123:42"><name pos:start="123:9" pos:end="123:10">st</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:17">codec</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:38">sample_aspect_ratio</name><operator pos:start="123:39" pos:end="123:39">.</operator><name pos:start="123:40" pos:end="123:42">num</name></name><operator pos:start="123:43" pos:end="123:43">=</operator> <call pos:start="123:45" pos:end="123:53"><name pos:start="123:45" pos:end="123:49">get_v</name><argument_list pos:start="123:50" pos:end="123:53">(<argument pos:start="123:51" pos:end="123:52"><expr pos:start="123:51" pos:end="123:52"><name pos:start="123:51" pos:end="123:52">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:54"><expr pos:start="125:9" pos:end="125:53"><name pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:10">st</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:38">sample_aspect_ratio</name><operator pos:start="125:39" pos:end="125:39">.</operator><name pos:start="125:40" pos:end="125:42">den</name></name><operator pos:start="125:43" pos:end="125:43">=</operator> <call pos:start="125:45" pos:end="125:53"><name pos:start="125:45" pos:end="125:49">get_v</name><argument_list pos:start="125:50" pos:end="125:53">(<argument pos:start="125:51" pos:end="125:52"><expr pos:start="125:51" pos:end="125:52"><name pos:start="125:51" pos:end="125:52">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if<condition pos:start="127:11" pos:end="127:90">(<expr pos:start="127:12" pos:end="127:89"><operator pos:start="127:12" pos:end="127:12">(</operator><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:47"><name pos:start="127:14" pos:end="127:15">st</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:22">codec</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:43">sample_aspect_ratio</name><operator pos:start="127:44" pos:end="127:44">.</operator><name pos:start="127:45" pos:end="127:47">num</name></name><operator pos:start="127:48" pos:end="127:48">)</operator> <operator pos:start="127:50" pos:end="127:51">!=</operator> <operator pos:start="127:53" pos:end="127:53">(</operator><operator pos:start="127:54" pos:end="127:54">!</operator><name pos:start="127:55" pos:end="127:88"><name pos:start="127:55" pos:end="127:56">st</name><operator pos:start="127:57" pos:end="127:58">-&gt;</operator><name pos:start="127:59" pos:end="127:63">codec</name><operator pos:start="127:64" pos:end="127:65">-&gt;</operator><name pos:start="127:66" pos:end="127:84">sample_aspect_ratio</name><operator pos:start="127:85" pos:end="127:85">.</operator><name pos:start="127:86" pos:end="127:88">den</name></name><operator pos:start="127:89" pos:end="127:89">)</operator></expr>)</condition><block pos:start="127:91" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:22">

            <expr_stmt pos:start="129:13" pos:end="129:62"><expr pos:start="129:13" pos:end="129:61"><call pos:start="129:13" pos:end="129:61"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="129:61">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">s</name></expr></argument>, <argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:37" pos:end="129:60"><expr pos:start="129:37" pos:end="129:60"><literal type="string" pos:start="129:37" pos:end="129:60">"invalid aspect ratio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="131:13" pos:end="131:22">return <expr pos:start="131:20" pos:end="131:21"><operator pos:start="131:20" pos:end="131:20">-</operator><literal type="number" pos:start="131:21" pos:end="131:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:18"><expr pos:start="135:9" pos:end="135:17"><call pos:start="135:9" pos:end="135:17"><name pos:start="135:9" pos:end="135:13">get_v</name><argument_list pos:start="135:14" pos:end="135:17">(<argument pos:start="135:15" pos:end="135:16"><expr pos:start="135:15" pos:end="135:16"><name pos:start="135:15" pos:end="135:16">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="135:20" pos:end="135:33">/* csp type */</comment>

    </block_content>}</block></if><if type="elseif" pos:start="137:6" pos:end="153:5">else if <condition pos:start="137:14" pos:end="137:56">(<expr pos:start="137:15" pos:end="137:55"><name pos:start="137:15" pos:end="137:35"><name pos:start="137:15" pos:end="137:16">st</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">codec</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:35">codec_type</name></name> <operator pos:start="137:37" pos:end="137:38">==</operator> <name pos:start="137:40" pos:end="137:55">CODEC_TYPE_AUDIO</name></expr>)</condition><block pos:start="137:57" pos:end="153:5">{<block_content pos:start="139:9" pos:end="151:43">

        <macro pos:start="139:9" pos:end="139:47"><name pos:start="139:9" pos:end="139:13">GET_V</name><argument_list pos:start="139:14" pos:end="139:47">(<argument pos:start="139:15" pos:end="139:36">st-&gt;codec-&gt;sample_rate</argument> , <argument pos:start="139:40" pos:end="139:46">tmp &gt; <literal type="number" pos:start="139:46" pos:end="139:46">0</literal></argument>)</argument_list></macro>

        <expr_stmt pos:start="141:9" pos:end="141:23"><expr pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:11">tmp</name><operator pos:start="141:12" pos:end="141:12">=</operator> <call pos:start="141:14" pos:end="141:22"><name pos:start="141:14" pos:end="141:18">get_v</name><argument_list pos:start="141:19" pos:end="141:22">(<argument pos:start="141:20" pos:end="141:21"><expr pos:start="141:20" pos:end="141:21"><name pos:start="141:20" pos:end="141:21">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="141:25" pos:end="141:41">// samplerate_den</comment>

        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if<condition pos:start="143:11" pos:end="143:40">(<expr pos:start="143:12" pos:end="143:39"><name pos:start="143:12" pos:end="143:14">tmp</name> <operator pos:start="143:16" pos:end="143:16">&gt;</operator> <name pos:start="143:18" pos:end="143:39"><name pos:start="143:18" pos:end="143:19">st</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:26">codec</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:39">sample_rate</name></name></expr>)</condition><block pos:start="143:41" pos:end="149:9">{<block_content pos:start="145:13" pos:end="147:40">

            <expr_stmt pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:67"><call pos:start="145:13" pos:end="145:67"><name pos:start="145:13" pos:end="145:18">av_log</name><argument_list pos:start="145:19" pos:end="145:67">(<argument pos:start="145:20" pos:end="145:20"><expr pos:start="145:20" pos:end="145:20"><name pos:start="145:20" pos:end="145:20">s</name></expr></argument>, <argument pos:start="145:23" pos:end="145:34"><expr pos:start="145:23" pos:end="145:34"><name pos:start="145:23" pos:end="145:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:37" pos:end="145:66"><expr pos:start="145:37" pos:end="145:66"><literal type="string" pos:start="145:37" pos:end="145:66">"bleh, libnut muxed this ;)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:40"><expr pos:start="147:13" pos:end="147:39"><name pos:start="147:13" pos:end="147:34"><name pos:start="147:13" pos:end="147:14">st</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:21">codec</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:34">sample_rate</name></name><operator pos:start="147:35" pos:end="147:35">=</operator> <name pos:start="147:37" pos:end="147:39">tmp</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="151:9" pos:end="151:43"><name pos:start="151:9" pos:end="151:13">GET_V</name><argument_list pos:start="151:14" pos:end="151:43">(<argument pos:start="151:15" pos:end="151:33">st-&gt;codec-&gt;channels</argument>, <argument pos:start="151:36" pos:end="151:42">tmp &gt; <literal type="number" pos:start="151:42" pos:end="151:42">0</literal></argument>)</argument_list></macro>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if<condition pos:start="155:7" pos:end="155:52">(<expr pos:start="155:8" pos:end="155:51"><call pos:start="155:8" pos:end="155:29"><name pos:start="155:8" pos:end="155:20">skip_reserved</name><argument_list pos:start="155:21" pos:end="155:29">(<argument pos:start="155:22" pos:end="155:23"><expr pos:start="155:22" pos:end="155:23"><name pos:start="155:22" pos:end="155:23">bc</name></expr></argument>, <argument pos:start="155:26" pos:end="155:28"><expr pos:start="155:26" pos:end="155:28"><name pos:start="155:26" pos:end="155:28">end</name></expr></argument>)</argument_list></call> <operator pos:start="155:31" pos:end="155:32">||</operator> <call pos:start="155:34" pos:end="155:51"><name pos:start="155:34" pos:end="155:47">check_checksum</name><argument_list pos:start="155:48" pos:end="155:51">(<argument pos:start="155:49" pos:end="155:50"><expr pos:start="155:49" pos:end="155:50"><name pos:start="155:49" pos:end="155:50">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="155:53" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:18">

        <expr_stmt pos:start="157:9" pos:end="157:83"><expr pos:start="157:9" pos:end="157:82"><call pos:start="157:9" pos:end="157:82"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="157:82">(<argument pos:start="157:16" pos:end="157:16"><expr pos:start="157:16" pos:end="157:16"><name pos:start="157:16" pos:end="157:16">s</name></expr></argument>, <argument pos:start="157:19" pos:end="157:30"><expr pos:start="157:19" pos:end="157:30"><name pos:start="157:19" pos:end="157:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:33" pos:end="157:70"><expr pos:start="157:33" pos:end="157:70"><literal type="string" pos:start="157:33" pos:end="157:70">"Stream header %d checksum mismatch\n"</literal></expr></argument>, <argument pos:start="157:73" pos:end="157:81"><expr pos:start="157:73" pos:end="157:81"><name pos:start="157:73" pos:end="157:81">stream_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:18">return <expr pos:start="159:16" pos:end="159:17"><operator pos:start="159:16" pos:end="159:16">-</operator><literal type="number" pos:start="159:17" pos:end="159:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:54"><expr pos:start="163:5" pos:end="163:53"><name pos:start="163:5" pos:end="163:18"><name pos:start="163:5" pos:end="163:7">stc</name><operator pos:start="163:8" pos:end="163:9">-&gt;</operator><name pos:start="163:10" pos:end="163:18">time_base</name></name><operator pos:start="163:19" pos:end="163:19">=</operator> <name pos:start="163:21" pos:end="163:53"><name pos:start="163:21" pos:end="163:23">nut</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:34">time_base</name><index pos:start="163:35" pos:end="163:53">[<expr pos:start="163:36" pos:end="163:52"><name pos:start="163:36" pos:end="163:52"><name pos:start="163:36" pos:end="163:38">stc</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:52">time_base_id</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:87"><expr pos:start="165:5" pos:end="165:86"><call pos:start="165:5" pos:end="165:86"><name pos:start="165:5" pos:end="165:19">av_set_pts_info</name><argument_list pos:start="165:20" pos:end="165:86">(<argument pos:start="165:21" pos:end="165:41"><expr pos:start="165:21" pos:end="165:41"><name pos:start="165:21" pos:end="165:41"><name pos:start="165:21" pos:end="165:21">s</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:30">streams</name><index pos:start="165:31" pos:end="165:41">[<expr pos:start="165:32" pos:end="165:40"><name pos:start="165:32" pos:end="165:40">stream_id</name></expr>]</index></name></expr></argument>, <argument pos:start="165:44" pos:end="165:45"><expr pos:start="165:44" pos:end="165:45"><literal type="number" pos:start="165:44" pos:end="165:45">63</literal></expr></argument>, <argument pos:start="165:48" pos:end="165:65"><expr pos:start="165:48" pos:end="165:65"><name pos:start="165:48" pos:end="165:65"><name pos:start="165:48" pos:end="165:50">stc</name><operator pos:start="165:51" pos:end="165:52">-&gt;</operator><name pos:start="165:53" pos:end="165:61">time_base</name><operator pos:start="165:62" pos:end="165:62">.</operator><name pos:start="165:63" pos:end="165:65">num</name></name></expr></argument>, <argument pos:start="165:68" pos:end="165:85"><expr pos:start="165:68" pos:end="165:85"><name pos:start="165:68" pos:end="165:85"><name pos:start="165:68" pos:end="165:70">stc</name><operator pos:start="165:71" pos:end="165:72">-&gt;</operator><name pos:start="165:73" pos:end="165:81">time_base</name><operator pos:start="165:82" pos:end="165:82">.</operator><name pos:start="165:83" pos:end="165:85">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
