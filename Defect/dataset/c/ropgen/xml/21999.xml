<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21999.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:32">qmp_output_first</name><parameter_list pos:start="1:33" pos:end="1:55">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:49">QmpOutputVisitor</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">qov</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:20">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">QStackEntry</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">e</name> <init pos:start="5:20" pos:end="5:53">= <expr pos:start="5:22" pos:end="5:53"><call pos:start="5:22" pos:end="5:53"><name pos:start="5:22" pos:end="5:32">QTAILQ_LAST</name><argument_list pos:start="5:33" pos:end="5:53">(<argument pos:start="5:34" pos:end="5:44"><expr pos:start="5:34" pos:end="5:44"><operator pos:start="5:34" pos:end="5:34">&amp;</operator><name pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:37">qov</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:44">stack</name></name></expr></argument>, <argument pos:start="5:47" pos:end="5:52"><expr pos:start="5:47" pos:end="5:52"><name pos:start="5:47" pos:end="5:52">QStack</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:60">/* FIXME - find a better way to deal with NULL values */</comment>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:11">(<expr pos:start="11:9" pos:end="11:10"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:10">e</name></expr>)</condition> <block pos:start="11:13" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="19:5" pos:end="19:20">return <expr pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:12">e</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:19">value</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
