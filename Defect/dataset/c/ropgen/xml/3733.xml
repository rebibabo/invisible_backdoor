<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3733.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ogg_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="279:1">{<block_content pos:start="5:5" pos:end="277:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OGGContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ogg</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">OGGStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:31">oggstream</name> <init pos:start="7:33" pos:end="7:38">= <expr pos:start="7:35" pos:end="7:38"><name pos:start="7:35" pos:end="7:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:73"><if pos:start="13:5" pos:end="15:73">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:11">ogg</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:22">pref_size</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:73"><block_content pos:start="15:9" pos:end="15:73">

        <expr_stmt pos:start="15:9" pos:end="15:73"><expr pos:start="15:9" pos:end="15:72"><call pos:start="15:9" pos:end="15:72"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:72">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">s</name></expr></argument>, <argument pos:start="15:19" pos:end="15:32"><expr pos:start="15:19" pos:end="15:32"><name pos:start="15:19" pos:end="15:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="15:35" pos:end="15:71"><expr pos:start="15:35" pos:end="15:71"><literal type="string" pos:start="15:35" pos:end="15:71">"The pagesize option is deprecated\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="19:5" pos:end="229:5">for <control pos:start="19:9" pos:end="19:39">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:34"><expr pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">nb_streams</name></name></expr>;</condition> <incr pos:start="19:36" pos:end="19:38"><expr pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:36">i</name><operator pos:start="19:37" pos:end="19:38">++</operator></expr></incr>)</control> <block pos:start="19:41" pos:end="229:5">{<block_content pos:start="21:9" pos:end="227:9">

        <decl_stmt pos:start="21:9" pos:end="21:37"><decl pos:start="21:9" pos:end="21:36"><type pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:16">AVStream</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:20">st</name> <init pos:start="21:22" pos:end="21:36">= <expr pos:start="21:24" pos:end="21:36"><name pos:start="21:24" pos:end="21:36"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:33">streams</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:32"><decl pos:start="23:9" pos:end="23:31"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">unsigned</name></type> <name pos:start="23:18" pos:end="23:27">serial_num</name> <init pos:start="23:29" pos:end="23:31">= <expr pos:start="23:31" pos:end="23:31"><name pos:start="23:31" pos:end="23:31">i</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="41:92"><if pos:start="27:9" pos:end="39:9">if <condition pos:start="27:12" pos:end="27:56">(<expr pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:14">st</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">codec</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:33">codec_type</name></name> <operator pos:start="27:35" pos:end="27:36">==</operator> <name pos:start="27:38" pos:end="27:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="27:58" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:71">

            <if_stmt pos:start="29:13" pos:end="37:71"><if pos:start="29:13" pos:end="33:54">if <condition pos:start="29:16" pos:end="29:56">(<expr pos:start="29:17" pos:end="29:55"><name pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:18">st</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:25">codec</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:35">codec_id</name></name> <operator pos:start="29:37" pos:end="29:38">==</operator> <name pos:start="29:40" pos:end="29:55">AV_CODEC_ID_OPUS</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:54"><block_content pos:start="33:17" pos:end="33:54">

                <comment type="block" pos:start="31:17" pos:end="31:55">/* Opus requires a fixed 48kHz clock */</comment>

                <expr_stmt pos:start="33:17" pos:end="33:54"><expr pos:start="33:17" pos:end="33:53"><call pos:start="33:17" pos:end="33:53"><name pos:start="33:17" pos:end="33:35">avpriv_set_pts_info</name><argument_list pos:start="33:36" pos:end="33:53">(<argument pos:start="33:37" pos:end="33:38"><expr pos:start="33:37" pos:end="33:38"><name pos:start="33:37" pos:end="33:38">st</name></expr></argument>, <argument pos:start="33:41" pos:end="33:42"><expr pos:start="33:41" pos:end="33:42"><literal type="number" pos:start="33:41" pos:end="33:42">64</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">1</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:52"><expr pos:start="33:48" pos:end="33:52"><literal type="number" pos:start="33:48" pos:end="33:52">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="35:13" pos:end="37:71">else<block type="pseudo" pos:start="37:17" pos:end="37:71"><block_content pos:start="37:17" pos:end="37:71">

                <expr_stmt pos:start="37:17" pos:end="37:71"><expr pos:start="37:17" pos:end="37:70"><call pos:start="37:17" pos:end="37:70"><name pos:start="37:17" pos:end="37:35">avpriv_set_pts_info</name><argument_list pos:start="37:36" pos:end="37:70">(<argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">st</name></expr></argument>, <argument pos:start="37:41" pos:end="37:42"><expr pos:start="37:41" pos:end="37:42"><literal type="number" pos:start="37:41" pos:end="37:42">64</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:45"><expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:69"><expr pos:start="37:48" pos:end="37:69"><name pos:start="37:48" pos:end="37:69"><name pos:start="37:48" pos:end="37:49">st</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:56">codec</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:69">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="41:92">else if <condition pos:start="39:19" pos:end="39:63">(<expr pos:start="39:20" pos:end="39:62"><name pos:start="39:20" pos:end="39:40"><name pos:start="39:20" pos:end="39:21">st</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:28">codec</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:40">codec_type</name></name> <operator pos:start="39:42" pos:end="39:43">==</operator> <name pos:start="39:45" pos:end="39:62">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:92"><block_content pos:start="41:13" pos:end="41:92">

            <expr_stmt pos:start="41:13" pos:end="41:92"><expr pos:start="41:13" pos:end="41:91"><call pos:start="41:13" pos:end="41:91"><name pos:start="41:13" pos:end="41:31">avpriv_set_pts_info</name><argument_list pos:start="41:32" pos:end="41:91">(<argument pos:start="41:33" pos:end="41:34"><expr pos:start="41:33" pos:end="41:34"><name pos:start="41:33" pos:end="41:34">st</name></expr></argument>, <argument pos:start="41:37" pos:end="41:38"><expr pos:start="41:37" pos:end="41:38"><literal type="number" pos:start="41:37" pos:end="41:38">64</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:64"><expr pos:start="41:41" pos:end="41:64"><name pos:start="41:41" pos:end="41:64"><name pos:start="41:41" pos:end="41:42">st</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:49">codec</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:60">time_base</name><operator pos:start="41:61" pos:end="41:61">.</operator><name pos:start="41:62" pos:end="41:64">num</name></name></expr></argument>, <argument pos:start="41:67" pos:end="41:90"><expr pos:start="41:67" pos:end="41:90"><name pos:start="41:67" pos:end="41:90"><name pos:start="41:67" pos:end="41:68">st</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:75">codec</name><operator pos:start="41:76" pos:end="41:77">-&gt;</operator><name pos:start="41:78" pos:end="41:86">time_base</name><operator pos:start="41:87" pos:end="41:87">.</operator><name pos:start="41:88" pos:end="41:90">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="57:9"><if pos:start="43:9" pos:end="57:9">if <condition pos:start="43:12" pos:end="51:52">(<expr pos:start="43:13" pos:end="51:51"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:14">st</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:21">codec</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:31">codec_id</name></name> <operator pos:start="43:33" pos:end="43:34">!=</operator> <name pos:start="43:36" pos:end="43:53">AV_CODEC_ID_VORBIS</name> <operator pos:start="43:55" pos:end="43:56">&amp;&amp;</operator>

            <name pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:14">st</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:21">codec</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:31">codec_id</name></name> <operator pos:start="45:33" pos:end="45:34">!=</operator> <name pos:start="45:36" pos:end="45:53">AV_CODEC_ID_THEORA</name> <operator pos:start="45:55" pos:end="45:56">&amp;&amp;</operator>

            <name pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:14">st</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:31">codec_id</name></name> <operator pos:start="47:33" pos:end="47:34">!=</operator> <name pos:start="47:36" pos:end="47:52">AV_CODEC_ID_SPEEX</name>  <operator pos:start="47:55" pos:end="47:56">&amp;&amp;</operator>

            <name pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:14">st</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:31">codec_id</name></name> <operator pos:start="49:33" pos:end="49:34">!=</operator> <name pos:start="49:36" pos:end="49:51">AV_CODEC_ID_FLAC</name>   <operator pos:start="49:55" pos:end="49:56">&amp;&amp;</operator>

            <name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:14">st</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:31">codec_id</name></name> <operator pos:start="51:33" pos:end="51:34">!=</operator> <name pos:start="51:36" pos:end="51:51">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="51:54" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:78"><expr pos:start="53:13" pos:end="53:77"><call pos:start="53:13" pos:end="53:77"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:77">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">s</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:73"><expr pos:start="53:37" pos:end="53:73"><literal type="string" pos:start="53:37" pos:end="53:73">"Unsupported codec id in stream %d\n"</literal></expr></argument>, <argument pos:start="53:76" pos:end="53:76"><expr pos:start="53:76" pos:end="53:76"><name pos:start="53:76" pos:end="53:76">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:64">(<expr pos:start="61:13" pos:end="61:63"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:33"><name pos:start="61:14" pos:end="61:15">st</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">codec</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:33">extradata</name></name> <operator pos:start="61:35" pos:end="61:36">||</operator> <operator pos:start="61:38" pos:end="61:38">!</operator><name pos:start="61:39" pos:end="61:63"><name pos:start="61:39" pos:end="61:40">st</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:47">codec</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:63">extradata_size</name></name></expr>)</condition> <block pos:start="61:66" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:62"><expr pos:start="63:13" pos:end="63:61"><call pos:start="63:13" pos:end="63:61"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:61">(<argument pos:start="63:20" pos:end="63:20"><expr pos:start="63:20" pos:end="63:20"><name pos:start="63:20" pos:end="63:20">s</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:37" pos:end="63:60"><expr pos:start="63:37" pos:end="63:60"><literal type="string" pos:start="63:37" pos:end="63:60">"No extradata present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:51"><expr pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:17">oggstream</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:50"><name pos:start="69:21" pos:end="69:30">av_mallocz</name><argument_list pos:start="69:31" pos:end="69:50">(<argument pos:start="69:32" pos:end="69:49"><expr pos:start="69:32" pos:end="69:49"><sizeof pos:start="69:32" pos:end="69:49">sizeof<argument_list pos:start="69:38" pos:end="69:49">(<argument pos:start="69:39" pos:end="69:48"><expr pos:start="69:39" pos:end="69:48"><operator pos:start="69:39" pos:end="69:39">*</operator><name pos:start="69:40" pos:end="69:48">oggstream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:35"><if pos:start="71:9" pos:end="73:35">if <condition pos:start="71:12" pos:end="71:23">(<expr pos:start="71:13" pos:end="71:22"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:22">oggstream</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:35"><block_content pos:start="73:13" pos:end="73:35">

            <return pos:start="73:13" pos:end="73:35">return <expr pos:start="73:20" pos:end="73:34"><call pos:start="73:20" pos:end="73:34"><name pos:start="73:20" pos:end="73:26">AVERROR</name><argument_list pos:start="73:27" pos:end="73:34">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:17">oggstream</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:23">page</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:36">stream_index</name></name> <operator pos:start="77:38" pos:end="77:38">=</operator> <name pos:start="77:40" pos:end="77:40">i</name></expr>;</expr_stmt>



        <if_stmt pos:start="81:9" pos:end="97:28"><if pos:start="81:9" pos:end="97:28">if <condition pos:start="81:12" pos:end="81:46">(<expr pos:start="81:13" pos:end="81:45"><operator pos:start="81:13" pos:end="81:13">!</operator><operator pos:start="81:14" pos:end="81:14">(</operator><name pos:start="81:15" pos:end="81:22"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:22">flags</name></name> <operator pos:start="81:24" pos:end="81:24">&amp;</operator> <name pos:start="81:26" pos:end="81:44">AVFMT_FLAG_BITEXACT</name><operator pos:start="81:45" pos:end="81:45">)</operator></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="97:28"><block_content pos:start="83:13" pos:end="97:28">

            <do pos:start="83:13" pos:end="97:28">do <block pos:start="83:16" pos:end="97:13">{<block_content pos:start="85:17" pos:end="95:17">

                <expr_stmt pos:start="85:17" pos:end="85:50"><expr pos:start="85:17" pos:end="85:49"><name pos:start="85:17" pos:end="85:26">serial_num</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <call pos:start="85:30" pos:end="85:49"><name pos:start="85:30" pos:end="85:47">av_get_random_seed</name><argument_list pos:start="85:48" pos:end="85:49">()</argument_list></call></expr>;</expr_stmt>

                <for pos:start="87:17" pos:end="95:17">for <control pos:start="87:21" pos:end="87:39">(<init pos:start="87:22" pos:end="87:27"><expr pos:start="87:22" pos:end="87:26"><name pos:start="87:22" pos:end="87:22">j</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>;</init> <condition pos:start="87:29" pos:end="87:34"><expr pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:29">j</name> <operator pos:start="87:31" pos:end="87:31">&lt;</operator> <name pos:start="87:33" pos:end="87:33">i</name></expr>;</condition> <incr pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:36">j</name><operator pos:start="87:37" pos:end="87:38">++</operator></expr></incr>)</control> <block pos:start="87:41" pos:end="95:17">{<block_content pos:start="89:21" pos:end="93:30">

                    <decl_stmt pos:start="89:21" pos:end="89:68"><decl pos:start="89:21" pos:end="89:67"><type pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:36">OGGStreamContext</name> <modifier pos:start="89:38" pos:end="89:38">*</modifier></type><name pos:start="89:39" pos:end="89:40">sc</name> <init pos:start="89:42" pos:end="89:67">= <expr pos:start="89:44" pos:end="89:67"><name pos:start="89:44" pos:end="89:56"><name pos:start="89:44" pos:end="89:44">s</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:53">streams</name><index pos:start="89:54" pos:end="89:56">[<expr pos:start="89:55" pos:end="89:55"><name pos:start="89:55" pos:end="89:55">j</name></expr>]</index></name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:67">priv_data</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="91:21" pos:end="93:30"><if pos:start="91:21" pos:end="93:30">if <condition pos:start="91:24" pos:end="91:53">(<expr pos:start="91:25" pos:end="91:52"><name pos:start="91:25" pos:end="91:34">serial_num</name> <operator pos:start="91:36" pos:end="91:37">==</operator> <name pos:start="91:39" pos:end="91:52"><name pos:start="91:39" pos:end="91:40">sc</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:52">serial_num</name></name></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:30"><block_content pos:start="93:25" pos:end="93:30">

                        <break pos:start="93:25" pos:end="93:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block> while <condition pos:start="97:21" pos:end="97:27">(<expr pos:start="97:22" pos:end="97:26"><name pos:start="97:22" pos:end="97:22">j</name> <operator pos:start="97:24" pos:end="97:24">&lt;</operator> <name pos:start="97:26" pos:end="97:26">i</name></expr>)</condition>;</do></block_content></block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:43"><expr pos:start="99:9" pos:end="99:42"><name pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:17">oggstream</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:29">serial_num</name></name> <operator pos:start="99:31" pos:end="99:31">=</operator> <name pos:start="99:33" pos:end="99:42">serial_num</name></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:73"><expr pos:start="103:9" pos:end="103:72"><call pos:start="103:9" pos:end="103:72"><name pos:start="103:9" pos:end="103:20">av_dict_copy</name><argument_list pos:start="103:21" pos:end="103:72">(<argument pos:start="103:22" pos:end="103:34"><expr pos:start="103:22" pos:end="103:34"><operator pos:start="103:22" pos:end="103:22">&amp;</operator><name pos:start="103:23" pos:end="103:34"><name pos:start="103:23" pos:end="103:24">st</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:34">metadata</name></name></expr></argument>, <argument pos:start="103:37" pos:end="103:47"><expr pos:start="103:37" pos:end="103:47"><name pos:start="103:37" pos:end="103:47"><name pos:start="103:37" pos:end="103:37">s</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:47">metadata</name></name></expr></argument>, <argument pos:start="103:50" pos:end="103:71"><expr pos:start="103:50" pos:end="103:71"><name pos:start="103:50" pos:end="103:71">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:34"><expr pos:start="107:9" pos:end="107:33"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:10">st</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:21">priv_data</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:33">oggstream</name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="227:9"><if pos:start="109:9" pos:end="127:9">if <condition pos:start="109:12" pos:end="109:52">(<expr pos:start="109:13" pos:end="109:51"><name pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:14">st</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:21">codec</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:31">codec_id</name></name> <operator pos:start="109:33" pos:end="109:34">==</operator> <name pos:start="109:36" pos:end="109:51">AV_CODEC_ID_FLAC</name></expr>)</condition> <block pos:start="109:54" pos:end="127:9">{<block_content pos:start="111:13" pos:end="125:13">

            <decl_stmt pos:start="111:13" pos:end="115:60"><decl pos:start="111:13" pos:end="115:59"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:19">err</name> <init pos:start="111:21" pos:end="115:59">= <expr pos:start="111:23" pos:end="115:59"><call pos:start="111:23" pos:end="115:59"><name pos:start="111:23" pos:end="111:44">ogg_build_flac_headers</name><argument_list pos:start="111:45" pos:end="115:59">(<argument pos:start="111:46" pos:end="111:54"><expr pos:start="111:46" pos:end="111:54"><name pos:start="111:46" pos:end="111:54"><name pos:start="111:46" pos:end="111:47">st</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:54">codec</name></name></expr></argument>, <argument pos:start="111:57" pos:end="111:65"><expr pos:start="111:57" pos:end="111:65"><name pos:start="111:57" pos:end="111:65">oggstream</name></expr></argument>,

                                             <argument pos:start="113:46" pos:end="113:75"><expr pos:start="113:46" pos:end="113:75"><name pos:start="113:46" pos:end="113:53"><name pos:start="113:46" pos:end="113:46">s</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:53">flags</name></name> <operator pos:start="113:55" pos:end="113:55">&amp;</operator> <name pos:start="113:57" pos:end="113:75">AVFMT_FLAG_BITEXACT</name></expr></argument>,

                                             <argument pos:start="115:46" pos:end="115:58"><expr pos:start="115:46" pos:end="115:58"><operator pos:start="115:46" pos:end="115:46">&amp;</operator><name pos:start="115:47" pos:end="115:58"><name pos:start="115:47" pos:end="115:48">st</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:58">metadata</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="117:13" pos:end="125:13"><if pos:start="117:13" pos:end="125:13">if <condition pos:start="117:16" pos:end="117:20">(<expr pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">err</name></expr>)</condition> <block pos:start="117:22" pos:end="125:13">{<block_content pos:start="119:17" pos:end="123:27">

                <expr_stmt pos:start="119:17" pos:end="119:72"><expr pos:start="119:17" pos:end="119:71"><call pos:start="119:17" pos:end="119:71"><name pos:start="119:17" pos:end="119:22">av_log</name><argument_list pos:start="119:23" pos:end="119:71">(<argument pos:start="119:24" pos:end="119:24"><expr pos:start="119:24" pos:end="119:24"><name pos:start="119:24" pos:end="119:24">s</name></expr></argument>, <argument pos:start="119:27" pos:end="119:38"><expr pos:start="119:27" pos:end="119:38"><name pos:start="119:27" pos:end="119:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:41" pos:end="119:70"><expr pos:start="119:41" pos:end="119:70"><literal type="string" pos:start="119:41" pos:end="119:70">"Error writing FLAC headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:41"><expr pos:start="121:17" pos:end="121:40"><call pos:start="121:17" pos:end="121:40"><name pos:start="121:17" pos:end="121:24">av_freep</name><argument_list pos:start="121:25" pos:end="121:40">(<argument pos:start="121:26" pos:end="121:39"><expr pos:start="121:26" pos:end="121:39"><operator pos:start="121:26" pos:end="121:26">&amp;</operator><name pos:start="121:27" pos:end="121:39"><name pos:start="121:27" pos:end="121:28">st</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="123:17" pos:end="123:27">return <expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="127:11" pos:end="145:9">else if <condition pos:start="127:19" pos:end="127:60">(<expr pos:start="127:20" pos:end="127:59"><name pos:start="127:20" pos:end="127:38"><name pos:start="127:20" pos:end="127:21">st</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:28">codec</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:38">codec_id</name></name> <operator pos:start="127:40" pos:end="127:41">==</operator> <name pos:start="127:43" pos:end="127:59">AV_CODEC_ID_SPEEX</name></expr>)</condition> <block pos:start="127:62" pos:end="145:9">{<block_content pos:start="129:13" pos:end="143:13">

            <decl_stmt pos:start="129:13" pos:end="133:61"><decl pos:start="129:13" pos:end="133:60"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:19">err</name> <init pos:start="129:21" pos:end="133:60">= <expr pos:start="129:23" pos:end="133:60"><call pos:start="129:23" pos:end="133:60"><name pos:start="129:23" pos:end="129:45">ogg_build_speex_headers</name><argument_list pos:start="129:46" pos:end="133:60">(<argument pos:start="129:47" pos:end="129:55"><expr pos:start="129:47" pos:end="129:55"><name pos:start="129:47" pos:end="129:55"><name pos:start="129:47" pos:end="129:48">st</name><operator pos:start="129:49" pos:end="129:50">-&gt;</operator><name pos:start="129:51" pos:end="129:55">codec</name></name></expr></argument>, <argument pos:start="129:58" pos:end="129:66"><expr pos:start="129:58" pos:end="129:66"><name pos:start="129:58" pos:end="129:66">oggstream</name></expr></argument>,

                                              <argument pos:start="131:47" pos:end="131:76"><expr pos:start="131:47" pos:end="131:76"><name pos:start="131:47" pos:end="131:54"><name pos:start="131:47" pos:end="131:47">s</name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:54">flags</name></name> <operator pos:start="131:56" pos:end="131:56">&amp;</operator> <name pos:start="131:58" pos:end="131:76">AVFMT_FLAG_BITEXACT</name></expr></argument>,

                                              <argument pos:start="133:47" pos:end="133:59"><expr pos:start="133:47" pos:end="133:59"><operator pos:start="133:47" pos:end="133:47">&amp;</operator><name pos:start="133:48" pos:end="133:59"><name pos:start="133:48" pos:end="133:49">st</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:59">metadata</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="135:13" pos:end="143:13"><if pos:start="135:13" pos:end="143:13">if <condition pos:start="135:16" pos:end="135:20">(<expr pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">err</name></expr>)</condition> <block pos:start="135:22" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:27">

                <expr_stmt pos:start="137:17" pos:end="137:73"><expr pos:start="137:17" pos:end="137:72"><call pos:start="137:17" pos:end="137:72"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:72">(<argument pos:start="137:24" pos:end="137:24"><expr pos:start="137:24" pos:end="137:24"><name pos:start="137:24" pos:end="137:24">s</name></expr></argument>, <argument pos:start="137:27" pos:end="137:38"><expr pos:start="137:27" pos:end="137:38"><name pos:start="137:27" pos:end="137:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:41" pos:end="137:71"><expr pos:start="137:41" pos:end="137:71"><literal type="string" pos:start="137:41" pos:end="137:71">"Error writing Speex headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:41"><expr pos:start="139:17" pos:end="139:40"><call pos:start="139:17" pos:end="139:40"><name pos:start="139:17" pos:end="139:24">av_freep</name><argument_list pos:start="139:25" pos:end="139:40">(<argument pos:start="139:26" pos:end="139:39"><expr pos:start="139:26" pos:end="139:39"><operator pos:start="139:26" pos:end="139:26">&amp;</operator><name pos:start="139:27" pos:end="139:39"><name pos:start="139:27" pos:end="139:28">st</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="141:17" pos:end="141:27">return <expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="145:11" pos:end="163:9">else if <condition pos:start="145:19" pos:end="145:59">(<expr pos:start="145:20" pos:end="145:58"><name pos:start="145:20" pos:end="145:38"><name pos:start="145:20" pos:end="145:21">st</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:28">codec</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:38">codec_id</name></name> <operator pos:start="145:40" pos:end="145:41">==</operator> <name pos:start="145:43" pos:end="145:58">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="145:61" pos:end="163:9">{<block_content pos:start="147:13" pos:end="161:13">

            <decl_stmt pos:start="147:13" pos:end="151:60"><decl pos:start="147:13" pos:end="151:59"><type pos:start="147:13" pos:end="147:15"><name pos:start="147:13" pos:end="147:15">int</name></type> <name pos:start="147:17" pos:end="147:19">err</name> <init pos:start="147:21" pos:end="151:59">= <expr pos:start="147:23" pos:end="151:59"><call pos:start="147:23" pos:end="151:59"><name pos:start="147:23" pos:end="147:44">ogg_build_opus_headers</name><argument_list pos:start="147:45" pos:end="151:59">(<argument pos:start="147:46" pos:end="147:54"><expr pos:start="147:46" pos:end="147:54"><name pos:start="147:46" pos:end="147:54"><name pos:start="147:46" pos:end="147:47">st</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:54">codec</name></name></expr></argument>, <argument pos:start="147:57" pos:end="147:65"><expr pos:start="147:57" pos:end="147:65"><name pos:start="147:57" pos:end="147:65">oggstream</name></expr></argument>,

                                             <argument pos:start="149:46" pos:end="149:75"><expr pos:start="149:46" pos:end="149:75"><name pos:start="149:46" pos:end="149:53"><name pos:start="149:46" pos:end="149:46">s</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:53">flags</name></name> <operator pos:start="149:55" pos:end="149:55">&amp;</operator> <name pos:start="149:57" pos:end="149:75">AVFMT_FLAG_BITEXACT</name></expr></argument>,

                                             <argument pos:start="151:46" pos:end="151:58"><expr pos:start="151:46" pos:end="151:58"><operator pos:start="151:46" pos:end="151:46">&amp;</operator><name pos:start="151:47" pos:end="151:58"><name pos:start="151:47" pos:end="151:48">st</name><operator pos:start="151:49" pos:end="151:50">-&gt;</operator><name pos:start="151:51" pos:end="151:58">metadata</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="153:13" pos:end="161:13"><if pos:start="153:13" pos:end="161:13">if <condition pos:start="153:16" pos:end="153:20">(<expr pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">err</name></expr>)</condition> <block pos:start="153:22" pos:end="161:13">{<block_content pos:start="155:17" pos:end="159:27">

                <expr_stmt pos:start="155:17" pos:end="155:72"><expr pos:start="155:17" pos:end="155:71"><call pos:start="155:17" pos:end="155:71"><name pos:start="155:17" pos:end="155:22">av_log</name><argument_list pos:start="155:23" pos:end="155:71">(<argument pos:start="155:24" pos:end="155:24"><expr pos:start="155:24" pos:end="155:24"><name pos:start="155:24" pos:end="155:24">s</name></expr></argument>, <argument pos:start="155:27" pos:end="155:38"><expr pos:start="155:27" pos:end="155:38"><name pos:start="155:27" pos:end="155:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:41" pos:end="155:70"><expr pos:start="155:41" pos:end="155:70"><literal type="string" pos:start="155:41" pos:end="155:70">"Error writing Opus headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:41"><expr pos:start="157:17" pos:end="157:40"><call pos:start="157:17" pos:end="157:40"><name pos:start="157:17" pos:end="157:24">av_freep</name><argument_list pos:start="157:25" pos:end="157:40">(<argument pos:start="157:26" pos:end="157:39"><expr pos:start="157:26" pos:end="157:39"><operator pos:start="157:26" pos:end="157:26">&amp;</operator><name pos:start="157:27" pos:end="157:39"><name pos:start="157:27" pos:end="157:28">st</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="159:17" pos:end="159:27">return <expr pos:start="159:24" pos:end="159:26"><name pos:start="159:24" pos:end="159:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="227:9">else <block pos:start="163:16" pos:end="227:9">{<block_content pos:start="165:13" pos:end="225:13">

            <decl_stmt pos:start="165:13" pos:end="165:23"><decl pos:start="165:13" pos:end="165:22"><type pos:start="165:13" pos:end="165:21"><name pos:start="165:13" pos:end="165:19">uint8_t</name> <modifier pos:start="165:21" pos:end="165:21">*</modifier></type><name pos:start="165:22" pos:end="165:22">p</name></decl>;</decl_stmt>

            <decl_stmt pos:start="167:13" pos:end="167:95"><decl pos:start="167:13" pos:end="167:94"><type pos:start="167:13" pos:end="167:24"><specifier pos:start="167:13" pos:end="167:17">const</specifier> <name pos:start="167:19" pos:end="167:22">char</name> <modifier pos:start="167:24" pos:end="167:24">*</modifier></type><name pos:start="167:25" pos:end="167:28">cstr</name> <init pos:start="167:30" pos:end="167:94">= <expr pos:start="167:32" pos:end="167:94"><ternary pos:start="167:32" pos:end="167:94"><condition pos:start="167:32" pos:end="167:74"><expr pos:start="167:32" pos:end="167:72"><name pos:start="167:32" pos:end="167:50"><name pos:start="167:32" pos:end="167:33">st</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:40">codec</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:50">codec_id</name></name> <operator pos:start="167:52" pos:end="167:53">==</operator> <name pos:start="167:55" pos:end="167:72">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="167:76" pos:end="167:83"> <expr pos:start="167:76" pos:end="167:83"><literal type="string" pos:start="167:76" pos:end="167:83">"vorbis"</literal></expr> </then><else pos:start="167:85" pos:end="167:94">: <expr pos:start="167:87" pos:end="167:94"><literal type="string" pos:start="167:87" pos:end="167:94">"theora"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="169:13" pos:end="169:83"><decl pos:start="169:13" pos:end="169:82"><type pos:start="169:13" pos:end="169:15"><name pos:start="169:13" pos:end="169:15">int</name></type> <name pos:start="169:17" pos:end="169:27">header_type</name> <init pos:start="169:29" pos:end="169:82">= <expr pos:start="169:31" pos:end="169:82"><ternary pos:start="169:31" pos:end="169:82"><condition pos:start="169:31" pos:end="169:73"><expr pos:start="169:31" pos:end="169:71"><name pos:start="169:31" pos:end="169:49"><name pos:start="169:31" pos:end="169:32">st</name><operator pos:start="169:33" pos:end="169:34">-&gt;</operator><name pos:start="169:35" pos:end="169:39">codec</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:49">codec_id</name></name> <operator pos:start="169:51" pos:end="169:52">==</operator> <name pos:start="169:54" pos:end="169:71">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="169:75" pos:end="169:75"> <expr pos:start="169:75" pos:end="169:75"><literal type="number" pos:start="169:75" pos:end="169:75">3</literal></expr> </then><else pos:start="169:77" pos:end="169:82">: <expr pos:start="169:79" pos:end="169:82"><literal type="number" pos:start="169:79" pos:end="169:82">0x81</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:80"><decl pos:start="171:13" pos:end="171:79"><type pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">int</name></type> <name pos:start="171:17" pos:end="171:27">framing_bit</name> <init pos:start="171:29" pos:end="171:79">= <expr pos:start="171:31" pos:end="171:79"><ternary pos:start="171:31" pos:end="171:79"><condition pos:start="171:31" pos:end="171:73"><expr pos:start="171:31" pos:end="171:71"><name pos:start="171:31" pos:end="171:49"><name pos:start="171:31" pos:end="171:32">st</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:39">codec</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:49">codec_id</name></name> <operator pos:start="171:51" pos:end="171:52">==</operator> <name pos:start="171:54" pos:end="171:71">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="171:75" pos:end="171:75"> <expr pos:start="171:75" pos:end="171:75"><literal type="number" pos:start="171:75" pos:end="171:75">1</literal></expr> </then><else pos:start="171:77" pos:end="171:79">: <expr pos:start="171:79" pos:end="171:79"><literal type="number" pos:start="171:79" pos:end="171:79">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="175:13" pos:end="187:13"><if pos:start="175:13" pos:end="187:13">if <condition pos:start="175:16" pos:end="179:84">(<expr pos:start="175:17" pos:end="179:83"><call pos:start="175:17" pos:end="179:79"><name pos:start="175:17" pos:end="175:41">avpriv_split_xiph_headers</name><argument_list pos:start="175:42" pos:end="179:79">(<argument pos:start="175:43" pos:end="175:62"><expr pos:start="175:43" pos:end="175:62"><name pos:start="175:43" pos:end="175:62"><name pos:start="175:43" pos:end="175:44">st</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:51">codec</name><operator pos:start="175:52" pos:end="175:53">-&gt;</operator><name pos:start="175:54" pos:end="175:62">extradata</name></name></expr></argument>, <argument pos:start="175:65" pos:end="175:89"><expr pos:start="175:65" pos:end="175:89"><name pos:start="175:65" pos:end="175:89"><name pos:start="175:65" pos:end="175:66">st</name><operator pos:start="175:67" pos:end="175:68">-&gt;</operator><name pos:start="175:69" pos:end="175:73">codec</name><operator pos:start="175:74" pos:end="175:75">-&gt;</operator><name pos:start="175:76" pos:end="175:89">extradata_size</name></name></expr></argument>,

                                      <argument pos:start="177:39" pos:end="177:89"><expr pos:start="177:39" pos:end="177:89"><ternary pos:start="177:39" pos:end="177:89"><condition pos:start="177:39" pos:end="177:81"><expr pos:start="177:39" pos:end="177:79"><name pos:start="177:39" pos:end="177:57"><name pos:start="177:39" pos:end="177:40">st</name><operator pos:start="177:41" pos:end="177:42">-&gt;</operator><name pos:start="177:43" pos:end="177:47">codec</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:57">codec_id</name></name> <operator pos:start="177:59" pos:end="177:60">==</operator> <name pos:start="177:62" pos:end="177:79">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="177:83" pos:end="177:84"> <expr pos:start="177:83" pos:end="177:84"><literal type="number" pos:start="177:83" pos:end="177:84">30</literal></expr> </then><else pos:start="177:86" pos:end="177:89">: <expr pos:start="177:88" pos:end="177:89"><literal type="number" pos:start="177:88" pos:end="177:89">42</literal></expr></else></ternary></expr></argument>,

                                      <argument pos:start="179:39" pos:end="179:55"><expr pos:start="179:39" pos:end="179:55"><name pos:start="179:39" pos:end="179:55"><name pos:start="179:39" pos:end="179:47">oggstream</name><operator pos:start="179:48" pos:end="179:49">-&gt;</operator><name pos:start="179:50" pos:end="179:55">header</name></name></expr></argument>, <argument pos:start="179:58" pos:end="179:78"><expr pos:start="179:58" pos:end="179:78"><name pos:start="179:58" pos:end="179:78"><name pos:start="179:58" pos:end="179:66">oggstream</name><operator pos:start="179:67" pos:end="179:68">-&gt;</operator><name pos:start="179:69" pos:end="179:78">header_len</name></name></expr></argument>)</argument_list></call> <operator pos:start="179:81" pos:end="179:81">&lt;</operator> <literal type="number" pos:start="179:83" pos:end="179:83">0</literal></expr>)</condition> <block pos:start="179:86" pos:end="187:13">{<block_content pos:start="181:17" pos:end="185:26">

                <expr_stmt pos:start="181:17" pos:end="181:65"><expr pos:start="181:17" pos:end="181:64"><call pos:start="181:17" pos:end="181:64"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="181:64">(<argument pos:start="181:24" pos:end="181:24"><expr pos:start="181:24" pos:end="181:24"><name pos:start="181:24" pos:end="181:24">s</name></expr></argument>, <argument pos:start="181:27" pos:end="181:38"><expr pos:start="181:27" pos:end="181:38"><name pos:start="181:27" pos:end="181:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:41" pos:end="181:63"><expr pos:start="181:41" pos:end="181:63"><literal type="string" pos:start="181:41" pos:end="181:63">"Extradata corrupted\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:41"><expr pos:start="183:17" pos:end="183:40"><call pos:start="183:17" pos:end="183:40"><name pos:start="183:17" pos:end="183:24">av_freep</name><argument_list pos:start="183:25" pos:end="183:40">(<argument pos:start="183:26" pos:end="183:39"><expr pos:start="183:26" pos:end="183:39"><operator pos:start="183:26" pos:end="183:26">&amp;</operator><name pos:start="183:27" pos:end="183:39"><name pos:start="183:27" pos:end="183:28">st</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="185:17" pos:end="185:26">return <expr pos:start="185:24" pos:end="185:25"><operator pos:start="185:24" pos:end="185:24">-</operator><literal type="number" pos:start="185:25" pos:end="185:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="191:13" pos:end="195:53"><expr pos:start="191:13" pos:end="195:52"><name pos:start="191:13" pos:end="191:13">p</name> <operator pos:start="191:15" pos:end="191:15">=</operator> <call pos:start="191:17" pos:end="195:52"><name pos:start="191:17" pos:end="191:39">ogg_write_vorbiscomment</name><argument_list pos:start="191:40" pos:end="195:52">(<argument pos:start="191:41" pos:end="191:41"><expr pos:start="191:41" pos:end="191:41"><literal type="number" pos:start="191:41" pos:end="191:41">7</literal></expr></argument>, <argument pos:start="191:44" pos:end="191:73"><expr pos:start="191:44" pos:end="191:73"><name pos:start="191:44" pos:end="191:51"><name pos:start="191:44" pos:end="191:44">s</name><operator pos:start="191:45" pos:end="191:46">-&gt;</operator><name pos:start="191:47" pos:end="191:51">flags</name></name> <operator pos:start="191:53" pos:end="191:53">&amp;</operator> <name pos:start="191:55" pos:end="191:73">AVFMT_FLAG_BITEXACT</name></expr></argument>,

                                        <argument pos:start="193:41" pos:end="193:65"><expr pos:start="193:41" pos:end="193:65"><operator pos:start="193:41" pos:end="193:41">&amp;</operator><name pos:start="193:42" pos:end="193:65"><name pos:start="193:42" pos:end="193:50">oggstream</name><operator pos:start="193:51" pos:end="193:52">-&gt;</operator><name pos:start="193:53" pos:end="193:62">header_len</name><index pos:start="193:63" pos:end="193:65">[<expr pos:start="193:64" pos:end="193:64"><literal type="number" pos:start="193:64" pos:end="193:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:68" pos:end="193:80"><expr pos:start="193:68" pos:end="193:80"><operator pos:start="193:68" pos:end="193:68">&amp;</operator><name pos:start="193:69" pos:end="193:80"><name pos:start="193:69" pos:end="193:70">st</name><operator pos:start="193:71" pos:end="193:72">-&gt;</operator><name pos:start="193:73" pos:end="193:80">metadata</name></name></expr></argument>,

                                        <argument pos:start="195:41" pos:end="195:51"><expr pos:start="195:41" pos:end="195:51"><name pos:start="195:41" pos:end="195:51">framing_bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:37"><expr pos:start="197:13" pos:end="197:36"><name pos:start="197:13" pos:end="197:32"><name pos:start="197:13" pos:end="197:21">oggstream</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:29">header</name><index pos:start="197:30" pos:end="197:32">[<expr pos:start="197:31" pos:end="197:31"><literal type="number" pos:start="197:31" pos:end="197:31">1</literal></expr>]</index></name> <operator pos:start="197:34" pos:end="197:34">=</operator> <name pos:start="197:36" pos:end="197:36">p</name></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="201:39"><if pos:start="199:13" pos:end="201:39">if <condition pos:start="199:16" pos:end="199:19">(<expr pos:start="199:17" pos:end="199:18"><operator pos:start="199:17" pos:end="199:17">!</operator><name pos:start="199:18" pos:end="199:18">p</name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:39"><block_content pos:start="201:17" pos:end="201:39">

                <return pos:start="201:17" pos:end="201:39">return <expr pos:start="201:24" pos:end="201:38"><call pos:start="201:24" pos:end="201:38"><name pos:start="201:24" pos:end="201:30">AVERROR</name><argument_list pos:start="201:31" pos:end="201:38">(<argument pos:start="201:32" pos:end="201:37"><expr pos:start="201:32" pos:end="201:37"><name pos:start="201:32" pos:end="201:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="205:13" pos:end="205:49"><expr pos:start="205:13" pos:end="205:48"><call pos:start="205:13" pos:end="205:48"><name pos:start="205:13" pos:end="205:31">bytestream_put_byte</name><argument_list pos:start="205:32" pos:end="205:48">(<argument pos:start="205:33" pos:end="205:34"><expr pos:start="205:33" pos:end="205:34"><operator pos:start="205:33" pos:end="205:33">&amp;</operator><name pos:start="205:34" pos:end="205:34">p</name></expr></argument>, <argument pos:start="205:37" pos:end="205:47"><expr pos:start="205:37" pos:end="205:47"><name pos:start="205:37" pos:end="205:47">header_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:47"><expr pos:start="207:13" pos:end="207:46"><call pos:start="207:13" pos:end="207:46"><name pos:start="207:13" pos:end="207:33">bytestream_put_buffer</name><argument_list pos:start="207:34" pos:end="207:46">(<argument pos:start="207:35" pos:end="207:36"><expr pos:start="207:35" pos:end="207:36"><operator pos:start="207:35" pos:end="207:35">&amp;</operator><name pos:start="207:36" pos:end="207:36">p</name></expr></argument>, <argument pos:start="207:39" pos:end="207:42"><expr pos:start="207:39" pos:end="207:42"><name pos:start="207:39" pos:end="207:42">cstr</name></expr></argument>, <argument pos:start="207:45" pos:end="207:45"><expr pos:start="207:45" pos:end="207:45"><literal type="number" pos:start="207:45" pos:end="207:45">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="211:13" pos:end="225:13"><if pos:start="211:13" pos:end="225:13">if <condition pos:start="211:16" pos:end="211:58">(<expr pos:start="211:17" pos:end="211:57"><name pos:start="211:17" pos:end="211:35"><name pos:start="211:17" pos:end="211:18">st</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:25">codec</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:35">codec_id</name></name> <operator pos:start="211:37" pos:end="211:38">==</operator> <name pos:start="211:40" pos:end="211:57">AV_CODEC_ID_THEORA</name></expr>)</condition> <block pos:start="211:60" pos:end="225:13">{<block_content pos:start="217:17" pos:end="223:61">

                <comment type="block" format="doxygen" pos:start="213:17" pos:end="215:94">/** KFGSHIFT is the width of the less significant section of the granule position

                    The less significant section is the frame count since the last keyframe */</comment>

                <expr_stmt pos:start="217:17" pos:end="217:102"><expr pos:start="217:17" pos:end="217:101"><name pos:start="217:17" pos:end="217:35"><name pos:start="217:17" pos:end="217:25">oggstream</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:35">kfgshift</name></name> <operator pos:start="217:37" pos:end="217:37">=</operator> <operator pos:start="217:39" pos:end="217:39">(</operator><operator pos:start="217:40" pos:end="217:40">(</operator><name pos:start="217:41" pos:end="217:64"><name pos:start="217:41" pos:end="217:49">oggstream</name><operator pos:start="217:50" pos:end="217:51">-&gt;</operator><name pos:start="217:52" pos:end="217:57">header</name><index pos:start="217:58" pos:end="217:60">[<expr pos:start="217:59" pos:end="217:59"><literal type="number" pos:start="217:59" pos:end="217:59">0</literal></expr>]</index><index pos:start="217:61" pos:end="217:64">[<expr pos:start="217:62" pos:end="217:63"><literal type="number" pos:start="217:62" pos:end="217:63">40</literal></expr>]</index></name><operator pos:start="217:65" pos:end="217:65">&amp;</operator><literal type="number" pos:start="217:66" pos:end="217:66">3</literal><operator pos:start="217:67" pos:end="217:67">)</operator><operator pos:start="217:68" pos:end="217:69">&lt;&lt;</operator><literal type="number" pos:start="217:70" pos:end="217:70">3</literal><operator pos:start="217:71" pos:end="217:71">)</operator><operator pos:start="217:72" pos:end="217:72">|</operator><operator pos:start="217:73" pos:end="217:73">(</operator><name pos:start="217:74" pos:end="217:97"><name pos:start="217:74" pos:end="217:82">oggstream</name><operator pos:start="217:83" pos:end="217:84">-&gt;</operator><name pos:start="217:85" pos:end="217:90">header</name><index pos:start="217:91" pos:end="217:93">[<expr pos:start="217:92" pos:end="217:92"><literal type="number" pos:start="217:92" pos:end="217:92">0</literal></expr>]</index><index pos:start="217:94" pos:end="217:97">[<expr pos:start="217:95" pos:end="217:96"><literal type="number" pos:start="217:95" pos:end="217:96">41</literal></expr>]</index></name><operator pos:start="217:98" pos:end="217:99">&gt;&gt;</operator><literal type="number" pos:start="217:100" pos:end="217:100">5</literal><operator pos:start="217:101" pos:end="217:101">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:58"><expr pos:start="219:17" pos:end="219:57"><name pos:start="219:17" pos:end="219:31"><name pos:start="219:17" pos:end="219:25">oggstream</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:31">vrev</name></name> <operator pos:start="219:33" pos:end="219:33">=</operator> <name pos:start="219:35" pos:end="219:57"><name pos:start="219:35" pos:end="219:43">oggstream</name><operator pos:start="219:44" pos:end="219:45">-&gt;</operator><name pos:start="219:46" pos:end="219:51">header</name><index pos:start="219:52" pos:end="219:54">[<expr pos:start="219:53" pos:end="219:53"><literal type="number" pos:start="219:53" pos:end="219:53">0</literal></expr>]</index><index pos:start="219:55" pos:end="219:57">[<expr pos:start="219:56" pos:end="219:56"><literal type="number" pos:start="219:56" pos:end="219:56">9</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="223:61"><expr pos:start="221:17" pos:end="223:60"><call pos:start="221:17" pos:end="223:60"><name pos:start="221:17" pos:end="221:22">av_log</name><argument_list pos:start="221:23" pos:end="223:60">(<argument pos:start="221:24" pos:end="221:24"><expr pos:start="221:24" pos:end="221:24"><name pos:start="221:24" pos:end="221:24">s</name></expr></argument>, <argument pos:start="221:27" pos:end="221:38"><expr pos:start="221:27" pos:end="221:38"><name pos:start="221:27" pos:end="221:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="221:41" pos:end="221:71"><expr pos:start="221:41" pos:end="221:71"><literal type="string" pos:start="221:41" pos:end="221:71">"theora kfgshift %d, vrev %d\n"</literal></expr></argument>,

                       <argument pos:start="223:24" pos:end="223:42"><expr pos:start="223:24" pos:end="223:42"><name pos:start="223:24" pos:end="223:42"><name pos:start="223:24" pos:end="223:32">oggstream</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:42">kfgshift</name></name></expr></argument>, <argument pos:start="223:45" pos:end="223:59"><expr pos:start="223:45" pos:end="223:59"><name pos:start="223:45" pos:end="223:59"><name pos:start="223:45" pos:end="223:53">oggstream</name><operator pos:start="223:54" pos:end="223:55">-&gt;</operator><name pos:start="223:56" pos:end="223:59">vrev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <for pos:start="233:5" pos:end="245:5">for <control pos:start="233:9" pos:end="233:39">(<init pos:start="233:10" pos:end="233:15"><expr pos:start="233:10" pos:end="233:14"><name pos:start="233:10" pos:end="233:10">j</name> <operator pos:start="233:12" pos:end="233:12">=</operator> <literal type="number" pos:start="233:14" pos:end="233:14">0</literal></expr>;</init> <condition pos:start="233:17" pos:end="233:34"><expr pos:start="233:17" pos:end="233:33"><name pos:start="233:17" pos:end="233:17">j</name> <operator pos:start="233:19" pos:end="233:19">&lt;</operator> <name pos:start="233:21" pos:end="233:33"><name pos:start="233:21" pos:end="233:21">s</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:33">nb_streams</name></name></expr>;</condition> <incr pos:start="233:36" pos:end="233:38"><expr pos:start="233:36" pos:end="233:38"><name pos:start="233:36" pos:end="233:36">j</name><operator pos:start="233:37" pos:end="233:38">++</operator></expr></incr>)</control> <block pos:start="233:41" pos:end="245:5">{<block_content pos:start="235:9" pos:end="243:38">

        <decl_stmt pos:start="235:9" pos:end="235:63"><decl pos:start="235:9" pos:end="235:62"><type pos:start="235:9" pos:end="235:26"><name pos:start="235:9" pos:end="235:24">OGGStreamContext</name> <modifier pos:start="235:26" pos:end="235:26">*</modifier></type><name pos:start="235:27" pos:end="235:35">oggstream</name> <init pos:start="235:37" pos:end="235:62">= <expr pos:start="235:39" pos:end="235:62"><name pos:start="235:39" pos:end="235:51"><name pos:start="235:39" pos:end="235:39">s</name><operator pos:start="235:40" pos:end="235:41">-&gt;</operator><name pos:start="235:42" pos:end="235:48">streams</name><index pos:start="235:49" pos:end="235:51">[<expr pos:start="235:50" pos:end="235:50"><name pos:start="235:50" pos:end="235:50">j</name></expr>]</index></name><operator pos:start="235:52" pos:end="235:53">-&gt;</operator><name pos:start="235:54" pos:end="235:62">priv_data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="239:56"><expr pos:start="237:9" pos:end="239:55"><call pos:start="237:9" pos:end="239:55"><name pos:start="237:9" pos:end="237:23">ogg_buffer_data</name><argument_list pos:start="237:24" pos:end="239:55">(<argument pos:start="237:25" pos:end="237:25"><expr pos:start="237:25" pos:end="237:25"><name pos:start="237:25" pos:end="237:25">s</name></expr></argument>, <argument pos:start="237:28" pos:end="237:40"><expr pos:start="237:28" pos:end="237:40"><name pos:start="237:28" pos:end="237:40"><name pos:start="237:28" pos:end="237:28">s</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:37">streams</name><index pos:start="237:38" pos:end="237:40">[<expr pos:start="237:39" pos:end="237:39"><name pos:start="237:39" pos:end="237:39">j</name></expr>]</index></name></expr></argument>, <argument pos:start="237:43" pos:end="237:62"><expr pos:start="237:43" pos:end="237:62"><name pos:start="237:43" pos:end="237:62"><name pos:start="237:43" pos:end="237:51">oggstream</name><operator pos:start="237:52" pos:end="237:53">-&gt;</operator><name pos:start="237:54" pos:end="237:59">header</name><index pos:start="237:60" pos:end="237:62">[<expr pos:start="237:61" pos:end="237:61"><literal type="number" pos:start="237:61" pos:end="237:61">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="239:25" pos:end="239:48"><expr pos:start="239:25" pos:end="239:48"><name pos:start="239:25" pos:end="239:48"><name pos:start="239:25" pos:end="239:33">oggstream</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:45">header_len</name><index pos:start="239:46" pos:end="239:48">[<expr pos:start="239:47" pos:end="239:47"><literal type="number" pos:start="239:47" pos:end="239:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="239:51" pos:end="239:51"><expr pos:start="239:51" pos:end="239:51"><literal type="number" pos:start="239:51" pos:end="239:51">0</literal></expr></argument>, <argument pos:start="239:54" pos:end="239:54"><expr pos:start="239:54" pos:end="239:54"><literal type="number" pos:start="239:54" pos:end="239:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:35"><expr pos:start="241:9" pos:end="241:34"><name pos:start="241:9" pos:end="241:29"><name pos:start="241:9" pos:end="241:17">oggstream</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:23">page</name><operator pos:start="241:24" pos:end="241:24">.</operator><name pos:start="241:25" pos:end="241:29">flags</name></name> <operator pos:start="241:31" pos:end="241:32">|=</operator> <literal type="number" pos:start="241:34" pos:end="241:34">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="241:37" pos:end="241:42">// bos</comment>

        <expr_stmt pos:start="243:9" pos:end="243:38"><expr pos:start="243:9" pos:end="243:37"><call pos:start="243:9" pos:end="243:37"><name pos:start="243:9" pos:end="243:23">ogg_buffer_page</name><argument_list pos:start="243:24" pos:end="243:37">(<argument pos:start="243:25" pos:end="243:25"><expr pos:start="243:25" pos:end="243:25"><name pos:start="243:25" pos:end="243:25">s</name></expr></argument>, <argument pos:start="243:28" pos:end="243:36"><expr pos:start="243:28" pos:end="243:36"><name pos:start="243:28" pos:end="243:36">oggstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="247:5" pos:end="265:5">for <control pos:start="247:9" pos:end="247:39">(<init pos:start="247:10" pos:end="247:15"><expr pos:start="247:10" pos:end="247:14"><name pos:start="247:10" pos:end="247:10">j</name> <operator pos:start="247:12" pos:end="247:12">=</operator> <literal type="number" pos:start="247:14" pos:end="247:14">0</literal></expr>;</init> <condition pos:start="247:17" pos:end="247:34"><expr pos:start="247:17" pos:end="247:33"><name pos:start="247:17" pos:end="247:17">j</name> <operator pos:start="247:19" pos:end="247:19">&lt;</operator> <name pos:start="247:21" pos:end="247:33"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:33">nb_streams</name></name></expr>;</condition> <incr pos:start="247:36" pos:end="247:38"><expr pos:start="247:36" pos:end="247:38"><name pos:start="247:36" pos:end="247:36">j</name><operator pos:start="247:37" pos:end="247:38">++</operator></expr></incr>)</control> <block pos:start="247:41" pos:end="265:5">{<block_content pos:start="249:9" pos:end="263:38">

        <decl_stmt pos:start="249:9" pos:end="249:37"><decl pos:start="249:9" pos:end="249:36"><type pos:start="249:9" pos:end="249:18"><name pos:start="249:9" pos:end="249:16">AVStream</name> <modifier pos:start="249:18" pos:end="249:18">*</modifier></type><name pos:start="249:19" pos:end="249:20">st</name> <init pos:start="249:22" pos:end="249:36">= <expr pos:start="249:24" pos:end="249:36"><name pos:start="249:24" pos:end="249:36"><name pos:start="249:24" pos:end="249:24">s</name><operator pos:start="249:25" pos:end="249:26">-&gt;</operator><name pos:start="249:27" pos:end="249:33">streams</name><index pos:start="249:34" pos:end="249:36">[<expr pos:start="249:35" pos:end="249:35"><name pos:start="249:35" pos:end="249:35">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="251:9" pos:end="251:52"><decl pos:start="251:9" pos:end="251:51"><type pos:start="251:9" pos:end="251:26"><name pos:start="251:9" pos:end="251:24">OGGStreamContext</name> <modifier pos:start="251:26" pos:end="251:26">*</modifier></type><name pos:start="251:27" pos:end="251:35">oggstream</name> <init pos:start="251:37" pos:end="251:51">= <expr pos:start="251:39" pos:end="251:51"><name pos:start="251:39" pos:end="251:51"><name pos:start="251:39" pos:end="251:40">st</name><operator pos:start="251:41" pos:end="251:42">-&gt;</operator><name pos:start="251:43" pos:end="251:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="253:9" pos:end="261:9">for <control pos:start="253:13" pos:end="253:31">(<init pos:start="253:14" pos:end="253:19"><expr pos:start="253:14" pos:end="253:18"><name pos:start="253:14" pos:end="253:14">i</name> <operator pos:start="253:16" pos:end="253:16">=</operator> <literal type="number" pos:start="253:18" pos:end="253:18">1</literal></expr>;</init> <condition pos:start="253:21" pos:end="253:26"><expr pos:start="253:21" pos:end="253:25"><name pos:start="253:21" pos:end="253:21">i</name> <operator pos:start="253:23" pos:end="253:23">&lt;</operator> <literal type="number" pos:start="253:25" pos:end="253:25">3</literal></expr>;</condition> <incr pos:start="253:28" pos:end="253:30"><expr pos:start="253:28" pos:end="253:30"><name pos:start="253:28" pos:end="253:28">i</name><operator pos:start="253:29" pos:end="253:30">++</operator></expr></incr>)</control> <block pos:start="253:33" pos:end="261:9">{<block_content pos:start="255:13" pos:end="259:64">

            <if_stmt pos:start="255:13" pos:end="259:64"><if pos:start="255:13" pos:end="259:64">if <condition pos:start="255:16" pos:end="255:41">(<expr pos:start="255:17" pos:end="255:40"><name pos:start="255:17" pos:end="255:40"><name pos:start="255:17" pos:end="255:25">oggstream</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:37">header_len</name><index pos:start="255:38" pos:end="255:40">[<expr pos:start="255:39" pos:end="255:39"><name pos:start="255:39" pos:end="255:39">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="257:17" pos:end="259:64"><block_content pos:start="257:17" pos:end="259:64">

                <expr_stmt pos:start="257:17" pos:end="259:64"><expr pos:start="257:17" pos:end="259:63"><call pos:start="257:17" pos:end="259:63"><name pos:start="257:17" pos:end="257:31">ogg_buffer_data</name><argument_list pos:start="257:32" pos:end="259:63">(<argument pos:start="257:33" pos:end="257:33"><expr pos:start="257:33" pos:end="257:33"><name pos:start="257:33" pos:end="257:33">s</name></expr></argument>, <argument pos:start="257:36" pos:end="257:37"><expr pos:start="257:36" pos:end="257:37"><name pos:start="257:36" pos:end="257:37">st</name></expr></argument>, <argument pos:start="257:40" pos:end="257:59"><expr pos:start="257:40" pos:end="257:59"><name pos:start="257:40" pos:end="257:59"><name pos:start="257:40" pos:end="257:48">oggstream</name><operator pos:start="257:49" pos:end="257:50">-&gt;</operator><name pos:start="257:51" pos:end="257:56">header</name><index pos:start="257:57" pos:end="257:59">[<expr pos:start="257:58" pos:end="257:58"><name pos:start="257:58" pos:end="257:58">i</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="259:33" pos:end="259:56"><expr pos:start="259:33" pos:end="259:56"><name pos:start="259:33" pos:end="259:56"><name pos:start="259:33" pos:end="259:41">oggstream</name><operator pos:start="259:42" pos:end="259:43">-&gt;</operator><name pos:start="259:44" pos:end="259:53">header_len</name><index pos:start="259:54" pos:end="259:56">[<expr pos:start="259:55" pos:end="259:55"><name pos:start="259:55" pos:end="259:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="259:59" pos:end="259:59"><expr pos:start="259:59" pos:end="259:59"><literal type="number" pos:start="259:59" pos:end="259:59">0</literal></expr></argument>, <argument pos:start="259:62" pos:end="259:62"><expr pos:start="259:62" pos:end="259:62"><literal type="number" pos:start="259:62" pos:end="259:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="263:9" pos:end="263:38"><expr pos:start="263:9" pos:end="263:37"><call pos:start="263:9" pos:end="263:37"><name pos:start="263:9" pos:end="263:23">ogg_buffer_page</name><argument_list pos:start="263:24" pos:end="263:37">(<argument pos:start="263:25" pos:end="263:25"><expr pos:start="263:25" pos:end="263:25"><name pos:start="263:25" pos:end="263:25">s</name></expr></argument>, <argument pos:start="263:28" pos:end="263:36"><expr pos:start="263:28" pos:end="263:36"><name pos:start="263:28" pos:end="263:36">oggstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="269:5" pos:end="269:51"><expr pos:start="269:5" pos:end="269:50"><name pos:start="269:5" pos:end="269:33"><name pos:start="269:5" pos:end="269:13">oggstream</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:19">page</name><operator pos:start="269:20" pos:end="269:20">.</operator><name pos:start="269:21" pos:end="269:33">start_granule</name></name> <operator pos:start="269:35" pos:end="269:35">=</operator> <name pos:start="269:37" pos:end="269:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:26"><expr pos:start="273:5" pos:end="273:25"><call pos:start="273:5" pos:end="273:25"><name pos:start="273:5" pos:end="273:19">ogg_write_pages</name><argument_list pos:start="273:20" pos:end="273:25">(<argument pos:start="273:21" pos:end="273:21"><expr pos:start="273:21" pos:end="273:21"><name pos:start="273:21" pos:end="273:21">s</name></expr></argument>, <argument pos:start="273:24" pos:end="273:24"><expr pos:start="273:24" pos:end="273:24"><literal type="number" pos:start="273:24" pos:end="273:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="277:5" pos:end="277:13">return <expr pos:start="277:12" pos:end="277:12"><literal type="number" pos:start="277:12" pos:end="277:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
