<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21431.c" pos:tabs="8"><function pos:start="1:1" pos:end="1321:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_h264_decode_slice_header</name><parameter_list pos:start="1:32" pos:end="1:69">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">H264Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:64">H264SliceContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">sl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1321:1">{<block_content pos:start="5:5" pos:end="1319:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">SPS</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">sps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">PPS</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">pps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:34">first_mb_in_slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:27">slice_type</name></decl>, <decl pos:start="15:30" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:30" pos:end="15:32">tmp</name></decl>, <decl pos:start="15:35" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:35" pos:end="15:35">i</name></decl>, <decl pos:start="15:38" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:38" pos:end="15:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:47"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:26">last_pic_structure</name></decl>, <decl pos:start="17:29" pos:end="17:46"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:29" pos:end="17:46">last_pic_droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">needs_reinit</name> <init pos:start="19:22" pos:end="19:24">= <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:42"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22">field_pic_flag</name></decl>, <decl pos:start="21:25" pos:end="21:41"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:25" pos:end="21:41">bottom_field_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:48"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">frame_num</name></decl>, <decl pos:start="23:20" pos:end="23:28"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:20" pos:end="23:28">droppable</name></decl>, <decl pos:start="23:31" pos:end="23:47"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:31" pos:end="23:47">picture_structure</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:20">mb_aff_frame</name> <init pos:start="25:22" pos:end="25:24">= <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">h</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">qpel_put</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:54"><name pos:start="29:19" pos:end="29:19">h</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:29">h264qpel</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:54">put_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">qpel_avg</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:54"><name pos:start="31:19" pos:end="31:19">h</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:29">h264qpel</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:54">avg_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:21">first_mb_in_slice</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:46"><name pos:start="35:25" pos:end="35:37">get_ue_golomb</name><argument_list pos:start="35:38" pos:end="35:46">(<argument pos:start="35:39" pos:end="35:45"><expr pos:start="35:39" pos:end="35:45"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:45"><name pos:start="35:40" pos:end="35:41">sl</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="65:5"><if pos:start="39:5" pos:end="65:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:25">first_mb_in_slice</name> <operator pos:start="39:27" pos:end="39:28">==</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>)</condition> <block pos:start="39:33" pos:end="65:5">{<block_content pos:start="41:9" pos:end="63:9"> <comment type="line" pos:start="39:35" pos:end="39:74">// FIXME better field boundary detection</comment>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:67">(<expr pos:start="41:13" pos:end="41:66"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">h</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:28">current_slice</name></name> <operator pos:start="41:30" pos:end="41:31">&amp;&amp;</operator> <name pos:start="41:33" pos:end="41:46"><name pos:start="41:33" pos:end="41:33">h</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:46">cur_pic_ptr</name></name> <operator pos:start="41:48" pos:end="41:49">&amp;&amp;</operator> <call pos:start="41:51" pos:end="41:66"><name pos:start="41:51" pos:end="41:63">FIELD_PICTURE</name><argument_list pos:start="41:64" pos:end="41:66">(<argument pos:start="41:65" pos:end="41:65"><expr pos:start="41:65" pos:end="41:65"><name pos:start="41:65" pos:end="41:65">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:69" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:40">

            <expr_stmt pos:start="43:13" pos:end="43:40"><expr pos:start="43:13" pos:end="43:39"><call pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:29">ff_h264_field_end</name><argument_list pos:start="43:30" pos:end="43:39">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">h</name></expr></argument>, <argument pos:start="43:34" pos:end="43:35"><expr pos:start="43:34" pos:end="43:35"><name pos:start="43:34" pos:end="43:35">sl</name></expr></argument>, <argument pos:start="43:38" pos:end="43:38"><expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:9">h</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:24">current_slice</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="63:9"><if pos:start="51:9" pos:end="63:9">if <condition pos:start="51:12" pos:end="51:28">(<expr pos:start="51:13" pos:end="51:27"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:27"><name pos:start="51:14" pos:end="51:14">h</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:27">first_field</name></name></expr>)</condition> <block pos:start="51:30" pos:end="63:9">{<block_content pos:start="53:13" pos:end="61:34">

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:48">(<expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:17">h</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:30">cur_pic_ptr</name></name> <operator pos:start="53:32" pos:end="53:33">&amp;&amp;</operator> <operator pos:start="53:35" pos:end="53:35">!</operator><name pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:36">h</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:47">droppable</name></name></expr>)</condition> <block pos:start="53:50" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:85">

                <expr_stmt pos:start="55:17" pos:end="57:85"><expr pos:start="55:17" pos:end="57:84"><call pos:start="55:17" pos:end="57:84"><name pos:start="55:17" pos:end="55:41">ff_thread_report_progress</name><argument_list pos:start="55:42" pos:end="57:84">(<argument pos:start="55:43" pos:end="55:61"><expr pos:start="55:43" pos:end="55:61"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:61"><name pos:start="55:44" pos:end="55:44">h</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:57">cur_pic_ptr</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:61">tf</name></name></expr></argument>, <argument pos:start="55:64" pos:end="55:70"><expr pos:start="55:64" pos:end="55:70"><name pos:start="55:64" pos:end="55:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="57:43" pos:end="57:83"><expr pos:start="57:43" pos:end="57:83"><name pos:start="57:43" pos:end="57:62"><name pos:start="57:43" pos:end="57:43">h</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:62">picture_structure</name></name> <operator pos:start="57:64" pos:end="57:65">==</operator> <name pos:start="57:67" pos:end="57:83">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:13">h</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:26">cur_pic_ptr</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:14">slice_type</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:42"><name pos:start="69:18" pos:end="69:33">get_ue_golomb_31</name><argument_list pos:start="69:34" pos:end="69:42">(<argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:41"><name pos:start="69:36" pos:end="69:37">sl</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="81:5"><if pos:start="71:5" pos:end="81:5">if <condition pos:start="71:8" pos:end="71:23">(<expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:18">slice_type</name> <operator pos:start="71:20" pos:end="71:20">&gt;</operator> <literal type="number" pos:start="71:22" pos:end="71:22">9</literal></expr>)</condition> <block pos:start="71:25" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:35">

        <expr_stmt pos:start="73:9" pos:end="77:46"><expr pos:start="73:9" pos:end="77:45"><call pos:start="73:9" pos:end="77:45"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="77:45">(<argument pos:start="73:16" pos:end="73:23"><expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:16">h</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">avctx</name></name></expr></argument>, <argument pos:start="73:26" pos:end="73:37"><expr pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="75:16" pos:end="75:48"><expr pos:start="75:16" pos:end="75:48"><literal type="string" pos:start="75:16" pos:end="75:48">"slice type %d too large at %d\n"</literal></expr></argument>,

               <argument pos:start="77:16" pos:end="77:25"><expr pos:start="77:16" pos:end="77:25"><name pos:start="77:16" pos:end="77:25">slice_type</name></expr></argument>, <argument pos:start="77:28" pos:end="77:44"><expr pos:start="77:28" pos:end="77:44"><name pos:start="77:28" pos:end="77:44">first_mb_in_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:35">return <expr pos:start="79:16" pos:end="79:34"><name pos:start="79:16" pos:end="79:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="91:33"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:18">slice_type</name> <operator pos:start="83:20" pos:end="83:20">&gt;</operator> <literal type="number" pos:start="83:22" pos:end="83:22">4</literal></expr>)</condition> <block pos:start="83:25" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:33">

        <expr_stmt pos:start="85:9" pos:end="85:24"><expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:18">slice_type</name> <operator pos:start="85:20" pos:end="85:21">-=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:10">sl</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:28">slice_type_fixed</name></name> <operator pos:start="87:30" pos:end="87:30">=</operator> <literal type="number" pos:start="87:32" pos:end="87:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="91:33">else<block type="pseudo" pos:start="91:9" pos:end="91:33"><block_content pos:start="91:9" pos:end="91:33">

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:10">sl</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:28">slice_type_fixed</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <literal type="number" pos:start="91:32" pos:end="91:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:65"><expr pos:start="95:5" pos:end="95:64"><name pos:start="95:5" pos:end="95:14">slice_type</name>         <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:64"><name pos:start="95:26" pos:end="95:52">ff_h264_golomb_to_pict_type</name><index pos:start="95:53" pos:end="95:64">[<expr pos:start="95:54" pos:end="95:63"><name pos:start="95:54" pos:end="95:63">slice_type</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:36"><expr pos:start="97:5" pos:end="97:35"><name pos:start="97:5" pos:end="97:18"><name pos:start="97:5" pos:end="97:6">sl</name><operator pos:start="97:7" pos:end="97:8">-&gt;</operator><name pos:start="97:9" pos:end="97:18">slice_type</name></name>     <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:35">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:40"><expr pos:start="99:5" pos:end="99:39"><name pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:6">sl</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:22">slice_type_nos</name></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:35">slice_type</name> <operator pos:start="99:37" pos:end="99:37">&amp;</operator> <literal type="number" pos:start="99:39" pos:end="99:39">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="105:48">(<expr pos:start="103:9" pos:end="105:47"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">h</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:24">nal_unit_type</name></name>  <operator pos:start="103:27" pos:end="103:28">==</operator> <name pos:start="103:30" pos:end="103:42">NAL_IDR_SLICE</name> <operator pos:start="103:44" pos:end="103:45">&amp;&amp;</operator>

        <name pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:10">sl</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:26">slice_type_nos</name></name> <operator pos:start="105:28" pos:end="105:29">!=</operator> <name pos:start="105:31" pos:end="105:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="105:50" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:35">

        <expr_stmt pos:start="107:9" pos:end="107:82"><expr pos:start="107:9" pos:end="107:81"><call pos:start="107:9" pos:end="107:81"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:81">(<argument pos:start="107:16" pos:end="107:23"><expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:16">h</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">avctx</name></name></expr></argument>, <argument pos:start="107:26" pos:end="107:37"><expr pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:40" pos:end="107:80"><expr pos:start="107:40" pos:end="107:80"><literal type="string" pos:start="107:40" pos:end="107:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:35">return <expr pos:start="109:16" pos:end="109:34"><name pos:start="109:16" pos:end="109:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="115:5" pos:end="115:59">// to make a few old functions happy, it's wrong though</comment>

    <if_stmt pos:start="117:5" pos:end="119:38"><if pos:start="117:5" pos:end="119:38">if <condition pos:start="117:8" pos:end="117:27">(<expr pos:start="117:9" pos:end="117:26"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:26"><name pos:start="117:10" pos:end="117:10">h</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:26">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:38"><block_content pos:start="119:9" pos:end="119:38">

        <expr_stmt pos:start="119:9" pos:end="119:38"><expr pos:start="119:9" pos:end="119:37"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:9">h</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:20">pict_type</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:37"><name pos:start="119:24" pos:end="119:25">sl</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:37">slice_type</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:36"><expr pos:start="123:5" pos:end="123:35"><name pos:start="123:5" pos:end="123:10">pps_id</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <call pos:start="123:14" pos:end="123:35"><name pos:start="123:14" pos:end="123:26">get_ue_golomb</name><argument_list pos:start="123:27" pos:end="123:35">(<argument pos:start="123:28" pos:end="123:34"><expr pos:start="123:28" pos:end="123:34"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:34"><name pos:start="123:29" pos:end="123:30">sl</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:32">(<expr pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:14">pps_id</name> <operator pos:start="125:16" pos:end="125:17">&gt;=</operator> <name pos:start="125:19" pos:end="125:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="125:34" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:35">

        <expr_stmt pos:start="127:9" pos:end="127:75"><expr pos:start="127:9" pos:end="127:74"><call pos:start="127:9" pos:end="127:74"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:74">(<argument pos:start="127:16" pos:end="127:23"><expr pos:start="127:16" pos:end="127:23"><name pos:start="127:16" pos:end="127:23"><name pos:start="127:16" pos:end="127:16">h</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:23">avctx</name></name></expr></argument>, <argument pos:start="127:26" pos:end="127:37"><expr pos:start="127:26" pos:end="127:37"><name pos:start="127:26" pos:end="127:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:40" pos:end="127:65"><expr pos:start="127:40" pos:end="127:65"><literal type="string" pos:start="127:40" pos:end="127:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="127:68" pos:end="127:73"><expr pos:start="127:68" pos:end="127:73"><name pos:start="127:68" pos:end="127:73">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:35">return <expr pos:start="129:16" pos:end="129:34"><name pos:start="129:16" pos:end="129:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="143:5"><if pos:start="133:5" pos:end="143:5">if <condition pos:start="133:8" pos:end="133:32">(<expr pos:start="133:9" pos:end="133:31"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:31"><name pos:start="133:10" pos:end="133:10">h</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:14">ps</name><operator pos:start="133:15" pos:end="133:15">.</operator><name pos:start="133:16" pos:end="133:23">pps_list</name><index pos:start="133:24" pos:end="133:31">[<expr pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:30">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="133:34" pos:end="143:5">{<block_content pos:start="135:9" pos:end="141:35">

        <expr_stmt pos:start="135:9" pos:end="139:23"><expr pos:start="135:9" pos:end="139:22"><call pos:start="135:9" pos:end="139:22"><name pos:start="135:9" pos:end="135:14">av_log</name><argument_list pos:start="135:15" pos:end="139:22">(<argument pos:start="135:16" pos:end="135:23"><expr pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:16">h</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:23">avctx</name></name></expr></argument>, <argument pos:start="135:26" pos:end="135:37"><expr pos:start="135:26" pos:end="135:37"><name pos:start="135:26" pos:end="135:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="137:16" pos:end="137:49"><expr pos:start="137:16" pos:end="137:49"><literal type="string" pos:start="137:16" pos:end="137:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="139:16" pos:end="139:21"><expr pos:start="139:16" pos:end="139:21"><name pos:start="139:16" pos:end="139:21">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:35">return <expr pos:start="141:16" pos:end="141:34"><name pos:start="141:16" pos:end="141:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="155:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:27">(<expr pos:start="145:9" pos:end="145:26"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:26"><name pos:start="145:10" pos:end="145:10">h</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:26">setup_finished</name></name></expr>)</condition> <block pos:start="145:29" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:61">

        <expr_stmt pos:start="147:9" pos:end="147:61"><expr pos:start="147:9" pos:end="147:60"><name pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:9">h</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:13">ps</name><operator pos:start="147:14" pos:end="147:14">.</operator><name pos:start="147:15" pos:end="147:17">pps</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <operator pos:start="147:21" pos:end="147:21">(</operator><specifier pos:start="147:22" pos:end="147:26">const</specifier> <name pos:start="147:28" pos:end="147:30">PPS</name><operator pos:start="147:31" pos:end="147:31">*</operator><operator pos:start="147:32" pos:end="147:32">)</operator><name pos:start="147:33" pos:end="147:54"><name pos:start="147:33" pos:end="147:33">h</name><operator pos:start="147:34" pos:end="147:35">-&gt;</operator><name pos:start="147:36" pos:end="147:37">ps</name><operator pos:start="147:38" pos:end="147:38">.</operator><name pos:start="147:39" pos:end="147:46">pps_list</name><index pos:start="147:47" pos:end="147:54">[<expr pos:start="147:48" pos:end="147:53"><name pos:start="147:48" pos:end="147:53">pps_id</name></expr>]</index></name><operator pos:start="147:55" pos:end="147:56">-&gt;</operator><name pos:start="147:57" pos:end="147:60">data</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="155:5">else if <condition pos:start="149:15" pos:end="149:69">(<expr pos:start="149:16" pos:end="149:68"><name pos:start="149:16" pos:end="149:24"><name pos:start="149:16" pos:end="149:16">h</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:20">ps</name><operator pos:start="149:21" pos:end="149:21">.</operator><name pos:start="149:22" pos:end="149:24">pps</name></name> <operator pos:start="149:26" pos:end="149:27">!=</operator> <operator pos:start="149:29" pos:end="149:29">(</operator><specifier pos:start="149:30" pos:end="149:34">const</specifier> <name pos:start="149:36" pos:end="149:38">PPS</name><operator pos:start="149:39" pos:end="149:39">*</operator><operator pos:start="149:40" pos:end="149:40">)</operator><name pos:start="149:41" pos:end="149:62"><name pos:start="149:41" pos:end="149:41">h</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:45">ps</name><operator pos:start="149:46" pos:end="149:46">.</operator><name pos:start="149:47" pos:end="149:54">pps_list</name><index pos:start="149:55" pos:end="149:62">[<expr pos:start="149:56" pos:end="149:61"><name pos:start="149:56" pos:end="149:61">pps_id</name></expr>]</index></name><operator pos:start="149:63" pos:end="149:64">-&gt;</operator><name pos:start="149:65" pos:end="149:68">data</name></expr>)</condition> <block pos:start="149:71" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:35">

        <expr_stmt pos:start="151:9" pos:end="151:71"><expr pos:start="151:9" pos:end="151:70"><call pos:start="151:9" pos:end="151:70"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="151:70">(<argument pos:start="151:16" pos:end="151:23"><expr pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:16">h</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:23">avctx</name></name></expr></argument>, <argument pos:start="151:26" pos:end="151:37"><expr pos:start="151:26" pos:end="151:37"><name pos:start="151:26" pos:end="151:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:40" pos:end="151:69"><expr pos:start="151:40" pos:end="151:69"><literal type="string" pos:start="151:40" pos:end="151:69">"PPS changed between slices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="153:9" pos:end="153:35">return <expr pos:start="153:16" pos:end="153:34"><name pos:start="153:16" pos:end="153:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="169:5"><if pos:start="159:5" pos:end="169:5">if <condition pos:start="159:8" pos:end="159:43">(<expr pos:start="159:9" pos:end="159:42"><operator pos:start="159:9" pos:end="159:9">!</operator><name pos:start="159:10" pos:end="159:42"><name pos:start="159:10" pos:end="159:10">h</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:14">ps</name><operator pos:start="159:15" pos:end="159:15">.</operator><name pos:start="159:16" pos:end="159:23">sps_list</name><index pos:start="159:24" pos:end="159:42">[<expr pos:start="159:25" pos:end="159:41"><name pos:start="159:25" pos:end="159:41"><name pos:start="159:25" pos:end="159:25">h</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:29">ps</name><operator pos:start="159:30" pos:end="159:30">.</operator><name pos:start="159:31" pos:end="159:33">pps</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:41">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="159:45" pos:end="169:5">{<block_content pos:start="161:9" pos:end="167:35">

        <expr_stmt pos:start="161:9" pos:end="165:34"><expr pos:start="161:9" pos:end="165:33"><call pos:start="161:9" pos:end="165:33"><name pos:start="161:9" pos:end="161:14">av_log</name><argument_list pos:start="161:15" pos:end="165:33">(<argument pos:start="161:16" pos:end="161:23"><expr pos:start="161:16" pos:end="161:23"><name pos:start="161:16" pos:end="161:23"><name pos:start="161:16" pos:end="161:16">h</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:23">avctx</name></name></expr></argument>, <argument pos:start="161:26" pos:end="161:37"><expr pos:start="161:26" pos:end="161:37"><name pos:start="161:26" pos:end="161:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="163:16" pos:end="163:49"><expr pos:start="163:16" pos:end="163:49"><literal type="string" pos:start="163:16" pos:end="163:49">"non-existing SPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="165:16" pos:end="165:32"><expr pos:start="165:16" pos:end="165:32"><name pos:start="165:16" pos:end="165:32"><name pos:start="165:16" pos:end="165:16">h</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:20">ps</name><operator pos:start="165:21" pos:end="165:21">.</operator><name pos:start="165:22" pos:end="165:24">pps</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:32">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="167:9" pos:end="167:35">return <expr pos:start="167:16" pos:end="167:34"><name pos:start="167:16" pos:end="167:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="213:5"><if pos:start="173:5" pos:end="213:5">if <condition pos:start="173:8" pos:end="173:73">(<expr pos:start="173:9" pos:end="173:72"><name pos:start="173:9" pos:end="173:17"><name pos:start="173:9" pos:end="173:9">h</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:13">ps</name><operator pos:start="173:14" pos:end="173:14">.</operator><name pos:start="173:15" pos:end="173:17">sps</name></name> <operator pos:start="173:19" pos:end="173:20">!=</operator> <operator pos:start="173:22" pos:end="173:22">(</operator><specifier pos:start="173:23" pos:end="173:27">const</specifier> <name pos:start="173:29" pos:end="173:31">SPS</name><operator pos:start="173:32" pos:end="173:32">*</operator><operator pos:start="173:33" pos:end="173:33">)</operator><name pos:start="173:34" pos:end="173:66"><name pos:start="173:34" pos:end="173:34">h</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:38">ps</name><operator pos:start="173:39" pos:end="173:39">.</operator><name pos:start="173:40" pos:end="173:47">sps_list</name><index pos:start="173:48" pos:end="173:66">[<expr pos:start="173:49" pos:end="173:65"><name pos:start="173:49" pos:end="173:65"><name pos:start="173:49" pos:end="173:49">h</name><operator pos:start="173:50" pos:end="173:51">-&gt;</operator><name pos:start="173:52" pos:end="173:53">ps</name><operator pos:start="173:54" pos:end="173:54">.</operator><name pos:start="173:55" pos:end="173:57">pps</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:65">sps_id</name></name></expr>]</index></name><operator pos:start="173:67" pos:end="173:68">-&gt;</operator><name pos:start="173:69" pos:end="173:72">data</name></expr>)</condition> <block pos:start="173:75" pos:end="213:5">{<block_content pos:start="175:9" pos:end="209:51">

        <expr_stmt pos:start="175:9" pos:end="175:66"><expr pos:start="175:9" pos:end="175:65"><name pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:9">h</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:13">ps</name><operator pos:start="175:14" pos:end="175:14">.</operator><name pos:start="175:15" pos:end="175:17">sps</name></name> <operator pos:start="175:19" pos:end="175:19">=</operator> <operator pos:start="175:21" pos:end="175:21">(</operator><name pos:start="175:22" pos:end="175:24">SPS</name><operator pos:start="175:25" pos:end="175:25">*</operator><operator pos:start="175:26" pos:end="175:26">)</operator><name pos:start="175:27" pos:end="175:59"><name pos:start="175:27" pos:end="175:27">h</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:31">ps</name><operator pos:start="175:32" pos:end="175:32">.</operator><name pos:start="175:33" pos:end="175:40">sps_list</name><index pos:start="175:41" pos:end="175:59">[<expr pos:start="175:42" pos:end="175:58"><name pos:start="175:42" pos:end="175:58"><name pos:start="175:42" pos:end="175:42">h</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:46">ps</name><operator pos:start="175:47" pos:end="175:47">.</operator><name pos:start="175:48" pos:end="175:50">pps</name><operator pos:start="175:51" pos:end="175:52">-&gt;</operator><name pos:start="175:53" pos:end="175:58">sps_id</name></name></expr>]</index></name><operator pos:start="175:60" pos:end="175:61">-&gt;</operator><name pos:start="175:62" pos:end="175:65">data</name></expr>;</expr_stmt>



        <if_stmt pos:start="179:9" pos:end="183:37"><if pos:start="179:9" pos:end="183:37">if <condition pos:start="179:12" pos:end="181:65">(<expr pos:start="179:13" pos:end="181:64"><name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:13">h</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:29">bit_depth_luma</name></name>    <operator pos:start="179:34" pos:end="179:35">!=</operator> <name pos:start="179:37" pos:end="179:61"><name pos:start="179:37" pos:end="179:37">h</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:41">ps</name><operator pos:start="179:42" pos:end="179:42">.</operator><name pos:start="179:43" pos:end="179:45">sps</name><operator pos:start="179:46" pos:end="179:47">-&gt;</operator><name pos:start="179:48" pos:end="179:61">bit_depth_luma</name></name> <operator pos:start="179:63" pos:end="179:64">||</operator>

            <name pos:start="181:13" pos:end="181:32"><name pos:start="181:13" pos:end="181:13">h</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:32">chroma_format_idc</name></name> <operator pos:start="181:34" pos:end="181:35">!=</operator> <name pos:start="181:37" pos:end="181:64"><name pos:start="181:37" pos:end="181:37">h</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:41">ps</name><operator pos:start="181:42" pos:end="181:42">.</operator><name pos:start="181:43" pos:end="181:45">sps</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:64">chroma_format_idc</name></name></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:37"><block_content pos:start="183:13" pos:end="183:37">

            <expr_stmt pos:start="183:13" pos:end="183:37"><expr pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:24">needs_reinit</name>         <operator pos:start="183:34" pos:end="183:34">=</operator> <literal type="number" pos:start="183:36" pos:end="183:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="187:9" pos:end="203:9"><if pos:start="187:9" pos:end="203:9">if <condition pos:start="187:12" pos:end="191:45">(<expr pos:start="187:13" pos:end="191:44"><name pos:start="187:13" pos:end="187:20"><name pos:start="187:13" pos:end="187:13">h</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:20">flags</name></name> <operator pos:start="187:22" pos:end="187:22">&amp;</operator> <name pos:start="187:24" pos:end="187:46">AV_CODEC_FLAG_LOW_DELAY</name> <operator pos:start="187:48" pos:end="187:49">||</operator>

            <operator pos:start="189:13" pos:end="189:13">(</operator><name pos:start="189:14" pos:end="189:50"><name pos:start="189:14" pos:end="189:14">h</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:18">ps</name><operator pos:start="189:19" pos:end="189:19">.</operator><name pos:start="189:20" pos:end="189:22">sps</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:50">bitstream_restriction_flag</name></name> <operator pos:start="189:52" pos:end="189:53">&amp;&amp;</operator>

             <operator pos:start="191:14" pos:end="191:14">!</operator><name pos:start="191:15" pos:end="191:43"><name pos:start="191:15" pos:end="191:15">h</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:19">ps</name><operator pos:start="191:20" pos:end="191:20">.</operator><name pos:start="191:21" pos:end="191:23">sps</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:43">num_reorder_frames</name></name><operator pos:start="191:44" pos:end="191:44">)</operator></expr>)</condition> <block pos:start="191:47" pos:end="203:9">{<block_content pos:start="193:13" pos:end="201:33">

            <if_stmt pos:start="193:13" pos:end="201:33"><if pos:start="193:13" pos:end="197:73">if <condition pos:start="193:16" pos:end="193:64">(<expr pos:start="193:17" pos:end="193:63"><name pos:start="193:17" pos:end="193:38"><name pos:start="193:17" pos:end="193:17">h</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:24">avctx</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:38">has_b_frames</name></name> <operator pos:start="193:40" pos:end="193:40">&gt;</operator> <literal type="number" pos:start="193:42" pos:end="193:42">1</literal> <operator pos:start="193:44" pos:end="193:45">||</operator> <name pos:start="193:47" pos:end="193:63"><name pos:start="193:47" pos:end="193:47">h</name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:60">delayed_pic</name><index pos:start="193:61" pos:end="193:63">[<expr pos:start="193:62" pos:end="193:62"><literal type="number" pos:start="193:62" pos:end="193:62">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="197:73"><block_content pos:start="195:17" pos:end="197:73">

                <expr_stmt pos:start="195:17" pos:end="197:73"><expr pos:start="195:17" pos:end="197:72"><call pos:start="195:17" pos:end="197:72"><name pos:start="195:17" pos:end="195:22">av_log</name><argument_list pos:start="195:23" pos:end="197:72">(<argument pos:start="195:24" pos:end="195:31"><expr pos:start="195:24" pos:end="195:31"><name pos:start="195:24" pos:end="195:31"><name pos:start="195:24" pos:end="195:24">h</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:31">avctx</name></name></expr></argument>, <argument pos:start="195:34" pos:end="195:47"><expr pos:start="195:34" pos:end="195:47"><name pos:start="195:34" pos:end="195:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="195:50" pos:end="197:71"><expr pos:start="195:50" pos:end="197:71"><literal type="string" pos:start="195:50" pos:end="195:72">"Delayed frames seen. "</literal>

                       <literal type="string" pos:start="197:24" pos:end="197:71">"Reenabling low delay requires a codec flush.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="199:13" pos:end="201:33">else<block type="pseudo" pos:start="201:17" pos:end="201:33"><block_content pos:start="201:17" pos:end="201:33">

                <expr_stmt pos:start="201:17" pos:end="201:33"><expr pos:start="201:17" pos:end="201:32"><name pos:start="201:17" pos:end="201:28"><name pos:start="201:17" pos:end="201:17">h</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:28">low_delay</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <literal type="number" pos:start="201:32" pos:end="201:32">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="207:9" pos:end="209:51"><if pos:start="207:9" pos:end="209:51">if <condition pos:start="207:12" pos:end="207:39">(<expr pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:34"><name pos:start="207:13" pos:end="207:13">h</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">avctx</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:34">has_b_frames</name></name> <operator pos:start="207:36" pos:end="207:36">&lt;</operator> <literal type="number" pos:start="207:38" pos:end="207:38">2</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:51"><block_content pos:start="209:13" pos:end="209:51">

            <expr_stmt pos:start="209:13" pos:end="209:51"><expr pos:start="209:13" pos:end="209:50"><name pos:start="209:13" pos:end="209:34"><name pos:start="209:13" pos:end="209:13">h</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">avctx</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:34">has_b_frames</name></name> <operator pos:start="209:36" pos:end="209:36">=</operator> <operator pos:start="209:38" pos:end="209:38">!</operator><name pos:start="209:39" pos:end="209:50"><name pos:start="209:39" pos:end="209:39">h</name><operator pos:start="209:40" pos:end="209:41">-&gt;</operator><name pos:start="209:42" pos:end="209:50">low_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:20"><expr pos:start="217:5" pos:end="217:19"><name pos:start="217:5" pos:end="217:7">pps</name> <operator pos:start="217:9" pos:end="217:9">=</operator> <name pos:start="217:11" pos:end="217:19"><name pos:start="217:11" pos:end="217:11">h</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:15">ps</name><operator pos:start="217:16" pos:end="217:16">.</operator><name pos:start="217:17" pos:end="217:19">pps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:20"><expr pos:start="219:5" pos:end="219:19"><name pos:start="219:5" pos:end="219:7">sps</name> <operator pos:start="219:9" pos:end="219:9">=</operator> <name pos:start="219:11" pos:end="219:19"><name pos:start="219:11" pos:end="219:11">h</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:15">ps</name><operator pos:start="219:16" pos:end="219:16">.</operator><name pos:start="219:17" pos:end="219:19">sps</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="223:5" pos:end="295:5"><if pos:start="223:5" pos:end="295:5">if <condition pos:start="223:8" pos:end="223:27">(<expr pos:start="223:9" pos:end="223:26"><operator pos:start="223:9" pos:end="223:9">!</operator><name pos:start="223:10" pos:end="223:26"><name pos:start="223:10" pos:end="223:10">h</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:26">setup_finished</name></name></expr>)</condition> <block pos:start="223:29" pos:end="295:5">{<block_content pos:start="225:9" pos:end="293:9">

        <expr_stmt pos:start="225:9" pos:end="225:53"><expr pos:start="225:9" pos:end="225:52"><name pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:9">h</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:16">avctx</name><operator pos:start="225:17" pos:end="225:18">-&gt;</operator><name pos:start="225:19" pos:end="225:25">profile</name></name> <operator pos:start="225:27" pos:end="225:27">=</operator> <call pos:start="225:29" pos:end="225:52"><name pos:start="225:29" pos:end="225:47">ff_h264_get_profile</name><argument_list pos:start="225:48" pos:end="225:52">(<argument pos:start="225:49" pos:end="225:51"><expr pos:start="225:49" pos:end="225:51"><name pos:start="225:49" pos:end="225:51">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:43"><expr pos:start="227:9" pos:end="227:42"><name pos:start="227:9" pos:end="227:23"><name pos:start="227:9" pos:end="227:9">h</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:16">avctx</name><operator pos:start="227:17" pos:end="227:18">-&gt;</operator><name pos:start="227:19" pos:end="227:23">level</name></name>   <operator pos:start="227:27" pos:end="227:27">=</operator> <name pos:start="227:29" pos:end="227:42"><name pos:start="227:29" pos:end="227:31">sps</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:42">level_idc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:49"><expr pos:start="229:9" pos:end="229:48"><name pos:start="229:9" pos:end="229:22"><name pos:start="229:9" pos:end="229:9">h</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:16">avctx</name><operator pos:start="229:17" pos:end="229:18">-&gt;</operator><name pos:start="229:19" pos:end="229:22">refs</name></name>    <operator pos:start="229:27" pos:end="229:27">=</operator> <name pos:start="229:29" pos:end="229:48"><name pos:start="229:29" pos:end="229:31">sps</name><operator pos:start="229:32" pos:end="229:33">-&gt;</operator><name pos:start="229:34" pos:end="229:48">ref_frame_count</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="233:9" pos:end="237:29"><if pos:start="233:9" pos:end="237:29">if <condition pos:start="233:12" pos:end="235:76">(<expr pos:start="233:13" pos:end="235:75"><name pos:start="233:13" pos:end="233:23"><name pos:start="233:13" pos:end="233:13">h</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:23">mb_width</name></name>  <operator pos:start="233:26" pos:end="233:27">!=</operator> <name pos:start="233:29" pos:end="233:41"><name pos:start="233:29" pos:end="233:31">sps</name><operator pos:start="233:32" pos:end="233:33">-&gt;</operator><name pos:start="233:34" pos:end="233:41">mb_width</name></name> <operator pos:start="233:43" pos:end="233:44">||</operator>

            <name pos:start="235:13" pos:end="235:24"><name pos:start="235:13" pos:end="235:13">h</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:24">mb_height</name></name> <operator pos:start="235:26" pos:end="235:27">!=</operator> <name pos:start="235:29" pos:end="235:42"><name pos:start="235:29" pos:end="235:31">sps</name><operator pos:start="235:32" pos:end="235:33">-&gt;</operator><name pos:start="235:34" pos:end="235:42">mb_height</name></name> <operator pos:start="235:44" pos:end="235:44">*</operator> <operator pos:start="235:46" pos:end="235:46">(</operator><literal type="number" pos:start="235:47" pos:end="235:49">2</literal> <operator pos:start="235:49" pos:end="235:49">-</operator> <name pos:start="235:51" pos:end="235:74"><name pos:start="235:51" pos:end="235:53">sps</name><operator pos:start="235:54" pos:end="235:55">-&gt;</operator><name pos:start="235:56" pos:end="235:74">frame_mbs_only_flag</name></name><operator pos:start="235:75" pos:end="235:75">)</operator></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:29"><block_content pos:start="237:13" pos:end="237:29">

            <expr_stmt pos:start="237:13" pos:end="237:29"><expr pos:start="237:13" pos:end="237:28"><name pos:start="237:13" pos:end="237:24">needs_reinit</name> <operator pos:start="237:26" pos:end="237:26">=</operator> <literal type="number" pos:start="237:28" pos:end="237:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="241:9" pos:end="241:37"><expr pos:start="241:9" pos:end="241:36"><name pos:start="241:9" pos:end="241:19"><name pos:start="241:9" pos:end="241:9">h</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:19">mb_width</name></name>  <operator pos:start="241:22" pos:end="241:22">=</operator> <name pos:start="241:24" pos:end="241:36"><name pos:start="241:24" pos:end="241:26">sps</name><operator pos:start="241:27" pos:end="241:28">-&gt;</operator><name pos:start="241:29" pos:end="241:36">mb_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:71"><expr pos:start="243:9" pos:end="243:70"><name pos:start="243:9" pos:end="243:20"><name pos:start="243:9" pos:end="243:9">h</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:20">mb_height</name></name> <operator pos:start="243:22" pos:end="243:22">=</operator> <name pos:start="243:24" pos:end="243:37"><name pos:start="243:24" pos:end="243:26">sps</name><operator pos:start="243:27" pos:end="243:28">-&gt;</operator><name pos:start="243:29" pos:end="243:37">mb_height</name></name> <operator pos:start="243:39" pos:end="243:39">*</operator> <operator pos:start="243:41" pos:end="243:41">(</operator><literal type="number" pos:start="243:42" pos:end="243:44">2</literal> <operator pos:start="243:44" pos:end="243:44">-</operator> <name pos:start="243:46" pos:end="243:69"><name pos:start="243:46" pos:end="243:48">sps</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:69">frame_mbs_only_flag</name></name><operator pos:start="243:70" pos:end="243:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:50"><expr pos:start="245:9" pos:end="245:49"><name pos:start="245:9" pos:end="245:17"><name pos:start="245:9" pos:end="245:9">h</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:17">mb_num</name></name>    <operator pos:start="245:22" pos:end="245:22">=</operator> <name pos:start="245:24" pos:end="245:34"><name pos:start="245:24" pos:end="245:24">h</name><operator pos:start="245:25" pos:end="245:26">-&gt;</operator><name pos:start="245:27" pos:end="245:34">mb_width</name></name> <operator pos:start="245:36" pos:end="245:36">*</operator> <name pos:start="245:38" pos:end="245:49"><name pos:start="245:38" pos:end="245:38">h</name><operator pos:start="245:39" pos:end="245:40">-&gt;</operator><name pos:start="245:41" pos:end="245:49">mb_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:39"><expr pos:start="247:9" pos:end="247:38"><name pos:start="247:9" pos:end="247:20"><name pos:start="247:9" pos:end="247:9">h</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:20">mb_stride</name></name> <operator pos:start="247:22" pos:end="247:22">=</operator> <name pos:start="247:24" pos:end="247:34"><name pos:start="247:24" pos:end="247:24">h</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:34">mb_width</name></name> <operator pos:start="247:36" pos:end="247:36">+</operator> <literal type="number" pos:start="247:38" pos:end="247:38">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="251:9" pos:end="251:38"><expr pos:start="251:9" pos:end="251:37"><name pos:start="251:9" pos:end="251:19"><name pos:start="251:9" pos:end="251:9">h</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:19">b_stride</name></name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:33"><name pos:start="251:23" pos:end="251:23">h</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:33">mb_width</name></name> <operator pos:start="251:35" pos:end="251:35">*</operator> <literal type="number" pos:start="251:37" pos:end="251:37">4</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:56"><expr pos:start="255:9" pos:end="255:55"><name pos:start="255:9" pos:end="255:25"><name pos:start="255:9" pos:end="255:9">h</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:25">chroma_y_shift</name></name> <operator pos:start="255:27" pos:end="255:27">=</operator> <name pos:start="255:29" pos:end="255:50"><name pos:start="255:29" pos:end="255:31">sps</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:50">chroma_format_idc</name></name> <operator pos:start="255:52" pos:end="255:53">&lt;=</operator> <literal type="number" pos:start="255:55" pos:end="255:55">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="255:58" pos:end="255:76">// 400 uses yuv420p</comment>



        <expr_stmt pos:start="259:9" pos:end="259:37"><expr pos:start="259:9" pos:end="259:36"><name pos:start="259:9" pos:end="259:16"><name pos:start="259:9" pos:end="259:9">h</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:16">width</name></name>  <operator pos:start="259:19" pos:end="259:19">=</operator> <literal type="number" pos:start="259:21" pos:end="259:22">16</literal> <operator pos:start="259:24" pos:end="259:24">*</operator> <name pos:start="259:26" pos:end="259:36"><name pos:start="259:26" pos:end="259:26">h</name><operator pos:start="259:27" pos:end="259:28">-&gt;</operator><name pos:start="259:29" pos:end="259:36">mb_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:38"><expr pos:start="261:9" pos:end="261:37"><name pos:start="261:9" pos:end="261:17"><name pos:start="261:9" pos:end="261:9">h</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:17">height</name></name> <operator pos:start="261:19" pos:end="261:19">=</operator> <literal type="number" pos:start="261:21" pos:end="261:22">16</literal> <operator pos:start="261:24" pos:end="261:24">*</operator> <name pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:26">h</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:37">mb_height</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="265:9" pos:end="265:33"><expr pos:start="265:9" pos:end="265:32"><name pos:start="265:9" pos:end="265:11">ret</name> <operator pos:start="265:13" pos:end="265:13">=</operator> <call pos:start="265:15" pos:end="265:32"><name pos:start="265:15" pos:end="265:29">init_dimensions</name><argument_list pos:start="265:30" pos:end="265:32">(<argument pos:start="265:31" pos:end="265:31"><expr pos:start="265:31" pos:end="265:31"><name pos:start="265:31" pos:end="265:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="269:23"><if pos:start="267:9" pos:end="269:23">if <condition pos:start="267:12" pos:end="267:20">(<expr pos:start="267:13" pos:end="267:19"><name pos:start="267:13" pos:end="267:15">ret</name> <operator pos:start="267:17" pos:end="267:17">&lt;</operator> <literal type="number" pos:start="267:19" pos:end="267:19">0</literal></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:23"><block_content pos:start="269:13" pos:end="269:23">

            <return pos:start="269:13" pos:end="269:23">return <expr pos:start="269:20" pos:end="269:22"><name pos:start="269:20" pos:end="269:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="273:9" pos:end="293:9"><if pos:start="273:9" pos:end="293:9">if <condition pos:start="273:12" pos:end="273:48">(<expr pos:start="273:13" pos:end="273:47"><name pos:start="273:13" pos:end="273:47"><name pos:start="273:13" pos:end="273:15">sps</name><operator pos:start="273:16" pos:end="273:17">-&gt;</operator><name pos:start="273:18" pos:end="273:47">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="273:50" pos:end="293:9">{<block_content pos:start="275:13" pos:end="291:13">

            <expr_stmt pos:start="275:13" pos:end="277:35"><expr pos:start="275:13" pos:end="277:34"><name pos:start="275:13" pos:end="275:33"><name pos:start="275:13" pos:end="275:13">h</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:20">avctx</name><operator pos:start="275:21" pos:end="275:22">-&gt;</operator><name pos:start="275:23" pos:end="275:33">color_range</name></name> <operator pos:start="275:35" pos:end="275:35">=</operator> <ternary pos:start="275:37" pos:end="277:34"><condition pos:start="275:37" pos:end="275:53"><expr pos:start="275:37" pos:end="275:51"><name pos:start="275:37" pos:end="275:51"><name pos:start="275:37" pos:end="275:39">sps</name><operator pos:start="275:40" pos:end="275:41">-&gt;</operator><name pos:start="275:42" pos:end="275:51">full_range</name></name></expr> ?</condition><then pos:start="275:55" pos:end="275:70"> <expr pos:start="275:55" pos:end="275:70"><name pos:start="275:55" pos:end="275:70">AVCOL_RANGE_JPEG</name></expr>

                </then><else pos:start="277:17" pos:end="277:34">: <expr pos:start="277:19" pos:end="277:34"><name pos:start="277:19" pos:end="277:34">AVCOL_RANGE_MPEG</name></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="279:13" pos:end="291:13"><if pos:start="279:13" pos:end="291:13">if <condition pos:start="279:16" pos:end="279:53">(<expr pos:start="279:17" pos:end="279:52"><name pos:start="279:17" pos:end="279:52"><name pos:start="279:17" pos:end="279:19">sps</name><operator pos:start="279:20" pos:end="279:21">-&gt;</operator><name pos:start="279:22" pos:end="279:52">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="279:55" pos:end="291:13">{<block_content pos:start="281:17" pos:end="289:60">

                <if_stmt pos:start="281:17" pos:end="283:37"><if pos:start="281:17" pos:end="283:37">if <condition pos:start="281:20" pos:end="281:60">(<expr pos:start="281:21" pos:end="281:59"><name pos:start="281:21" pos:end="281:40"><name pos:start="281:21" pos:end="281:21">h</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:28">avctx</name><operator pos:start="281:29" pos:end="281:30">-&gt;</operator><name pos:start="281:31" pos:end="281:40">colorspace</name></name> <operator pos:start="281:42" pos:end="281:43">!=</operator> <name pos:start="281:45" pos:end="281:59"><name pos:start="281:45" pos:end="281:47">sps</name><operator pos:start="281:48" pos:end="281:49">-&gt;</operator><name pos:start="281:50" pos:end="281:59">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="283:21" pos:end="283:37"><block_content pos:start="283:21" pos:end="283:37">

                    <expr_stmt pos:start="283:21" pos:end="283:37"><expr pos:start="283:21" pos:end="283:36"><name pos:start="283:21" pos:end="283:32">needs_reinit</name> <operator pos:start="283:34" pos:end="283:34">=</operator> <literal type="number" pos:start="283:36" pos:end="283:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:65"><expr pos:start="285:17" pos:end="285:64"><name pos:start="285:17" pos:end="285:41"><name pos:start="285:17" pos:end="285:17">h</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:24">avctx</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:41">color_primaries</name></name> <operator pos:start="285:43" pos:end="285:43">=</operator> <name pos:start="285:45" pos:end="285:64"><name pos:start="285:45" pos:end="285:47">sps</name><operator pos:start="285:48" pos:end="285:49">-&gt;</operator><name pos:start="285:50" pos:end="285:64">color_primaries</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:59"><expr pos:start="287:17" pos:end="287:58"><name pos:start="287:17" pos:end="287:35"><name pos:start="287:17" pos:end="287:17">h</name><operator pos:start="287:18" pos:end="287:19">-&gt;</operator><name pos:start="287:20" pos:end="287:24">avctx</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:35">color_trc</name></name>       <operator pos:start="287:43" pos:end="287:43">=</operator> <name pos:start="287:45" pos:end="287:58"><name pos:start="287:45" pos:end="287:47">sps</name><operator pos:start="287:48" pos:end="287:49">-&gt;</operator><name pos:start="287:50" pos:end="287:58">color_trc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:60"><expr pos:start="289:17" pos:end="289:59"><name pos:start="289:17" pos:end="289:36"><name pos:start="289:17" pos:end="289:17">h</name><operator pos:start="289:18" pos:end="289:19">-&gt;</operator><name pos:start="289:20" pos:end="289:24">avctx</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:36">colorspace</name></name>      <operator pos:start="289:43" pos:end="289:43">=</operator> <name pos:start="289:45" pos:end="289:59"><name pos:start="289:45" pos:end="289:47">sps</name><operator pos:start="289:48" pos:end="289:49">-&gt;</operator><name pos:start="289:50" pos:end="289:59">colorspace</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="351:5"><if pos:start="299:5" pos:end="351:5">if <condition pos:start="299:8" pos:end="299:47">(<expr pos:start="299:9" pos:end="299:46"><name pos:start="299:9" pos:end="299:30"><name pos:start="299:9" pos:end="299:9">h</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:30">context_initialized</name></name> <operator pos:start="299:32" pos:end="299:33">&amp;&amp;</operator> <name pos:start="299:35" pos:end="299:46">needs_reinit</name></expr>)</condition> <block pos:start="299:49" pos:end="351:5">{<block_content pos:start="301:9" pos:end="349:9">

        <expr_stmt pos:start="301:9" pos:end="301:35"><expr pos:start="301:9" pos:end="301:34"><name pos:start="301:9" pos:end="301:30"><name pos:start="301:9" pos:end="301:9">h</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:30">context_initialized</name></name> <operator pos:start="301:32" pos:end="301:32">=</operator> <literal type="number" pos:start="301:34" pos:end="301:34">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="303:9" pos:end="319:9"><if pos:start="303:9" pos:end="319:9">if <condition pos:start="303:12" pos:end="303:31">(<expr pos:start="303:13" pos:end="303:30"><name pos:start="303:13" pos:end="303:14">sl</name> <operator pos:start="303:16" pos:end="303:17">!=</operator> <name pos:start="303:19" pos:end="303:30"><name pos:start="303:19" pos:end="303:19">h</name><operator pos:start="303:20" pos:end="303:21">-&gt;</operator><name pos:start="303:22" pos:end="303:30">slice_ctx</name></name></expr>)</condition> <block pos:start="303:33" pos:end="319:9">{<block_content pos:start="305:13" pos:end="317:39">

            <expr_stmt pos:start="305:13" pos:end="315:41"><expr pos:start="305:13" pos:end="315:40"><call pos:start="305:13" pos:end="315:40"><name pos:start="305:13" pos:end="305:18">av_log</name><argument_list pos:start="305:19" pos:end="315:40">(<argument pos:start="305:20" pos:end="305:27"><expr pos:start="305:20" pos:end="305:27"><name pos:start="305:20" pos:end="305:27"><name pos:start="305:20" pos:end="305:20">h</name><operator pos:start="305:21" pos:end="305:22">-&gt;</operator><name pos:start="305:23" pos:end="305:27">avctx</name></name></expr></argument>, <argument pos:start="305:30" pos:end="305:41"><expr pos:start="305:30" pos:end="305:41"><name pos:start="305:30" pos:end="305:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="307:20" pos:end="309:31"><expr pos:start="307:20" pos:end="309:31"><literal type="string" pos:start="307:20" pos:end="307:66">"changing width %d -&gt; %d / height %d -&gt; %d on "</literal>

                   <literal type="string" pos:start="309:20" pos:end="309:31">"slice %d\n"</literal></expr></argument>,

                   <argument pos:start="311:20" pos:end="311:27"><expr pos:start="311:20" pos:end="311:27"><name pos:start="311:20" pos:end="311:27"><name pos:start="311:20" pos:end="311:20">h</name><operator pos:start="311:21" pos:end="311:22">-&gt;</operator><name pos:start="311:23" pos:end="311:27">width</name></name></expr></argument>, <argument pos:start="311:30" pos:end="311:50"><expr pos:start="311:30" pos:end="311:50"><name pos:start="311:30" pos:end="311:50"><name pos:start="311:30" pos:end="311:30">h</name><operator pos:start="311:31" pos:end="311:32">-&gt;</operator><name pos:start="311:33" pos:end="311:37">avctx</name><operator pos:start="311:38" pos:end="311:39">-&gt;</operator><name pos:start="311:40" pos:end="311:50">coded_width</name></name></expr></argument>,

                   <argument pos:start="313:20" pos:end="313:28"><expr pos:start="313:20" pos:end="313:28"><name pos:start="313:20" pos:end="313:28"><name pos:start="313:20" pos:end="313:20">h</name><operator pos:start="313:21" pos:end="313:22">-&gt;</operator><name pos:start="313:23" pos:end="313:28">height</name></name></expr></argument>, <argument pos:start="313:31" pos:end="313:52"><expr pos:start="313:31" pos:end="313:52"><name pos:start="313:31" pos:end="313:52"><name pos:start="313:31" pos:end="313:31">h</name><operator pos:start="313:32" pos:end="313:33">-&gt;</operator><name pos:start="313:34" pos:end="313:38">avctx</name><operator pos:start="313:39" pos:end="313:40">-&gt;</operator><name pos:start="313:41" pos:end="313:52">coded_height</name></name></expr></argument>,

                   <argument pos:start="315:20" pos:end="315:39"><expr pos:start="315:20" pos:end="315:39"><name pos:start="315:20" pos:end="315:35"><name pos:start="315:20" pos:end="315:20">h</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:35">current_slice</name></name> <operator pos:start="315:37" pos:end="315:37">+</operator> <literal type="number" pos:start="315:39" pos:end="315:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="317:13" pos:end="317:39">return <expr pos:start="317:20" pos:end="317:38"><name pos:start="317:20" pos:end="317:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="323:9" pos:end="323:32"><expr pos:start="323:9" pos:end="323:31"><call pos:start="323:9" pos:end="323:31"><name pos:start="323:9" pos:end="323:28">ff_h264_flush_change</name><argument_list pos:start="323:29" pos:end="323:31">(<argument pos:start="323:30" pos:end="323:30"><expr pos:start="323:30" pos:end="323:30"><name pos:start="323:30" pos:end="323:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="327:9" pos:end="329:23"><if pos:start="327:9" pos:end="329:23">if <condition pos:start="327:12" pos:end="327:44">(<expr pos:start="327:13" pos:end="327:43"><operator pos:start="327:13" pos:end="327:13">(</operator><name pos:start="327:14" pos:end="327:16">ret</name> <operator pos:start="327:18" pos:end="327:18">=</operator> <call pos:start="327:20" pos:end="327:38"><name pos:start="327:20" pos:end="327:35">get_pixel_format</name><argument_list pos:start="327:36" pos:end="327:38">(<argument pos:start="327:37" pos:end="327:37"><expr pos:start="327:37" pos:end="327:37"><name pos:start="327:37" pos:end="327:37">h</name></expr></argument>)</argument_list></call><operator pos:start="327:39" pos:end="327:39">)</operator> <operator pos:start="327:41" pos:end="327:41">&lt;</operator> <literal type="number" pos:start="327:43" pos:end="327:43">0</literal></expr>)</condition><block type="pseudo" pos:start="329:13" pos:end="329:23"><block_content pos:start="329:13" pos:end="329:23">

            <return pos:start="329:13" pos:end="329:23">return <expr pos:start="329:20" pos:end="329:22"><name pos:start="329:20" pos:end="329:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:32"><expr pos:start="331:9" pos:end="331:31"><name pos:start="331:9" pos:end="331:25"><name pos:start="331:9" pos:end="331:9">h</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:16">avctx</name><operator pos:start="331:17" pos:end="331:18">-&gt;</operator><name pos:start="331:19" pos:end="331:25">pix_fmt</name></name> <operator pos:start="331:27" pos:end="331:27">=</operator> <name pos:start="331:29" pos:end="331:31">ret</name></expr>;</expr_stmt>



        <expr_stmt pos:start="335:9" pos:end="337:72"><expr pos:start="335:9" pos:end="337:71"><call pos:start="335:9" pos:end="337:71"><name pos:start="335:9" pos:end="335:14">av_log</name><argument_list pos:start="335:15" pos:end="337:71">(<argument pos:start="335:16" pos:end="335:23"><expr pos:start="335:16" pos:end="335:23"><name pos:start="335:16" pos:end="335:23"><name pos:start="335:16" pos:end="335:16">h</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:23">avctx</name></name></expr></argument>, <argument pos:start="335:26" pos:end="335:36"><expr pos:start="335:26" pos:end="335:36"><name pos:start="335:26" pos:end="335:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="335:39" pos:end="337:30"><expr pos:start="335:39" pos:end="337:30"><literal type="string" pos:start="335:39" pos:end="335:65">"Reinit context to %dx%d, "</literal>

               <literal type="string" pos:start="337:16" pos:end="337:30">"pix_fmt: %d\n"</literal></expr></argument>, <argument pos:start="337:33" pos:end="337:40"><expr pos:start="337:33" pos:end="337:40"><name pos:start="337:33" pos:end="337:40"><name pos:start="337:33" pos:end="337:33">h</name><operator pos:start="337:34" pos:end="337:35">-&gt;</operator><name pos:start="337:36" pos:end="337:40">width</name></name></expr></argument>, <argument pos:start="337:43" pos:end="337:51"><expr pos:start="337:43" pos:end="337:51"><name pos:start="337:43" pos:end="337:51"><name pos:start="337:43" pos:end="337:43">h</name><operator pos:start="337:44" pos:end="337:45">-&gt;</operator><name pos:start="337:46" pos:end="337:51">height</name></name></expr></argument>, <argument pos:start="337:54" pos:end="337:70"><expr pos:start="337:54" pos:end="337:70"><name pos:start="337:54" pos:end="337:70"><name pos:start="337:54" pos:end="337:54">h</name><operator pos:start="337:55" pos:end="337:56">-&gt;</operator><name pos:start="337:57" pos:end="337:61">avctx</name><operator pos:start="337:62" pos:end="337:63">-&gt;</operator><name pos:start="337:64" pos:end="337:70">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="341:9" pos:end="349:9"><if pos:start="341:9" pos:end="349:9">if <condition pos:start="341:12" pos:end="341:50">(<expr pos:start="341:13" pos:end="341:49"><operator pos:start="341:13" pos:end="341:13">(</operator><name pos:start="341:14" pos:end="341:16">ret</name> <operator pos:start="341:18" pos:end="341:18">=</operator> <call pos:start="341:20" pos:end="341:44"><name pos:start="341:20" pos:end="341:41">h264_slice_header_init</name><argument_list pos:start="341:42" pos:end="341:44">(<argument pos:start="341:43" pos:end="341:43"><expr pos:start="341:43" pos:end="341:43"><name pos:start="341:43" pos:end="341:43">h</name></expr></argument>)</argument_list></call><operator pos:start="341:45" pos:end="341:45">)</operator> <operator pos:start="341:47" pos:end="341:47">&lt;</operator> <literal type="number" pos:start="341:49" pos:end="341:49">0</literal></expr>)</condition> <block pos:start="341:52" pos:end="349:9">{<block_content pos:start="343:13" pos:end="347:23">

            <expr_stmt pos:start="343:13" pos:end="345:56"><expr pos:start="343:13" pos:end="345:55"><call pos:start="343:13" pos:end="345:55"><name pos:start="343:13" pos:end="343:18">av_log</name><argument_list pos:start="343:19" pos:end="345:55">(<argument pos:start="343:20" pos:end="343:27"><expr pos:start="343:20" pos:end="343:27"><name pos:start="343:20" pos:end="343:27"><name pos:start="343:20" pos:end="343:20">h</name><operator pos:start="343:21" pos:end="343:22">-&gt;</operator><name pos:start="343:23" pos:end="343:27">avctx</name></name></expr></argument>, <argument pos:start="343:30" pos:end="343:41"><expr pos:start="343:30" pos:end="343:41"><name pos:start="343:30" pos:end="343:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="345:20" pos:end="345:54"><expr pos:start="345:20" pos:end="345:54"><literal type="string" pos:start="345:20" pos:end="345:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="347:13" pos:end="347:23">return <expr pos:start="347:20" pos:end="347:22"><name pos:start="347:20" pos:end="347:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="353:5" pos:end="385:5"><if pos:start="353:5" pos:end="385:5">if <condition pos:start="353:8" pos:end="353:32">(<expr pos:start="353:9" pos:end="353:31"><operator pos:start="353:9" pos:end="353:9">!</operator><name pos:start="353:10" pos:end="353:31"><name pos:start="353:10" pos:end="353:10">h</name><operator pos:start="353:11" pos:end="353:12">-&gt;</operator><name pos:start="353:13" pos:end="353:31">context_initialized</name></name></expr>)</condition> <block pos:start="353:34" pos:end="385:5">{<block_content pos:start="355:9" pos:end="383:9">

        <if_stmt pos:start="355:9" pos:end="363:9"><if pos:start="355:9" pos:end="363:9">if <condition pos:start="355:12" pos:end="355:31">(<expr pos:start="355:13" pos:end="355:30"><name pos:start="355:13" pos:end="355:14">sl</name> <operator pos:start="355:16" pos:end="355:17">!=</operator> <name pos:start="355:19" pos:end="355:30"><name pos:start="355:19" pos:end="355:19">h</name><operator pos:start="355:20" pos:end="355:21">-&gt;</operator><name pos:start="355:22" pos:end="355:30">slice_ctx</name></name></expr>)</condition> <block pos:start="355:33" pos:end="363:9">{<block_content pos:start="357:13" pos:end="361:40">

            <expr_stmt pos:start="357:13" pos:end="359:81"><expr pos:start="357:13" pos:end="359:80"><call pos:start="357:13" pos:end="359:80"><name pos:start="357:13" pos:end="357:18">av_log</name><argument_list pos:start="357:19" pos:end="359:80">(<argument pos:start="357:20" pos:end="357:27"><expr pos:start="357:20" pos:end="357:27"><name pos:start="357:20" pos:end="357:27"><name pos:start="357:20" pos:end="357:20">h</name><operator pos:start="357:21" pos:end="357:22">-&gt;</operator><name pos:start="357:23" pos:end="357:27">avctx</name></name></expr></argument>, <argument pos:start="357:30" pos:end="357:41"><expr pos:start="357:30" pos:end="357:41"><name pos:start="357:30" pos:end="357:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="359:20" pos:end="359:79"><expr pos:start="359:20" pos:end="359:79"><literal type="string" pos:start="359:20" pos:end="359:79">"Cannot (re-)initialize context during parallel decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="361:13" pos:end="361:40">return <expr pos:start="361:20" pos:end="361:39"><name pos:start="361:20" pos:end="361:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="367:9" pos:end="369:23"><if pos:start="367:9" pos:end="369:23">if <condition pos:start="367:12" pos:end="367:44">(<expr pos:start="367:13" pos:end="367:43"><operator pos:start="367:13" pos:end="367:13">(</operator><name pos:start="367:14" pos:end="367:16">ret</name> <operator pos:start="367:18" pos:end="367:18">=</operator> <call pos:start="367:20" pos:end="367:38"><name pos:start="367:20" pos:end="367:35">get_pixel_format</name><argument_list pos:start="367:36" pos:end="367:38">(<argument pos:start="367:37" pos:end="367:37"><expr pos:start="367:37" pos:end="367:37"><name pos:start="367:37" pos:end="367:37">h</name></expr></argument>)</argument_list></call><operator pos:start="367:39" pos:end="367:39">)</operator> <operator pos:start="367:41" pos:end="367:41">&lt;</operator> <literal type="number" pos:start="367:43" pos:end="367:43">0</literal></expr>)</condition><block type="pseudo" pos:start="369:13" pos:end="369:23"><block_content pos:start="369:13" pos:end="369:23">

            <return pos:start="369:13" pos:end="369:23">return <expr pos:start="369:20" pos:end="369:22"><name pos:start="369:20" pos:end="369:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:32"><expr pos:start="371:9" pos:end="371:31"><name pos:start="371:9" pos:end="371:25"><name pos:start="371:9" pos:end="371:9">h</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:16">avctx</name><operator pos:start="371:17" pos:end="371:18">-&gt;</operator><name pos:start="371:19" pos:end="371:25">pix_fmt</name></name> <operator pos:start="371:27" pos:end="371:27">=</operator> <name pos:start="371:29" pos:end="371:31">ret</name></expr>;</expr_stmt>



        <if_stmt pos:start="375:9" pos:end="383:9"><if pos:start="375:9" pos:end="383:9">if <condition pos:start="375:12" pos:end="375:50">(<expr pos:start="375:13" pos:end="375:49"><operator pos:start="375:13" pos:end="375:13">(</operator><name pos:start="375:14" pos:end="375:16">ret</name> <operator pos:start="375:18" pos:end="375:18">=</operator> <call pos:start="375:20" pos:end="375:44"><name pos:start="375:20" pos:end="375:41">h264_slice_header_init</name><argument_list pos:start="375:42" pos:end="375:44">(<argument pos:start="375:43" pos:end="375:43"><expr pos:start="375:43" pos:end="375:43"><name pos:start="375:43" pos:end="375:43">h</name></expr></argument>)</argument_list></call><operator pos:start="375:45" pos:end="375:45">)</operator> <operator pos:start="375:47" pos:end="375:47">&lt;</operator> <literal type="number" pos:start="375:49" pos:end="375:49">0</literal></expr>)</condition> <block pos:start="375:52" pos:end="383:9">{<block_content pos:start="377:13" pos:end="381:23">

            <expr_stmt pos:start="377:13" pos:end="379:56"><expr pos:start="377:13" pos:end="379:55"><call pos:start="377:13" pos:end="379:55"><name pos:start="377:13" pos:end="377:18">av_log</name><argument_list pos:start="377:19" pos:end="379:55">(<argument pos:start="377:20" pos:end="377:27"><expr pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:20">h</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:27">avctx</name></name></expr></argument>, <argument pos:start="377:30" pos:end="377:41"><expr pos:start="377:30" pos:end="377:41"><name pos:start="377:30" pos:end="377:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="379:20" pos:end="379:54"><expr pos:start="379:20" pos:end="379:54"><literal type="string" pos:start="379:20" pos:end="379:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="381:13" pos:end="381:23">return <expr pos:start="381:20" pos:end="381:22"><name pos:start="381:20" pos:end="381:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="389:5" pos:end="389:59"><expr pos:start="389:5" pos:end="389:58"><name pos:start="389:5" pos:end="389:13">frame_num</name> <operator pos:start="389:15" pos:end="389:15">=</operator> <call pos:start="389:17" pos:end="389:58"><name pos:start="389:17" pos:end="389:24">get_bits</name><argument_list pos:start="389:25" pos:end="389:58">(<argument pos:start="389:26" pos:end="389:32"><expr pos:start="389:26" pos:end="389:32"><operator pos:start="389:26" pos:end="389:26">&amp;</operator><name pos:start="389:27" pos:end="389:32"><name pos:start="389:27" pos:end="389:28">sl</name><operator pos:start="389:29" pos:end="389:30">-&gt;</operator><name pos:start="389:31" pos:end="389:32">gb</name></name></expr></argument>, <argument pos:start="389:35" pos:end="389:57"><expr pos:start="389:35" pos:end="389:57"><name pos:start="389:35" pos:end="389:57"><name pos:start="389:35" pos:end="389:37">sps</name><operator pos:start="389:38" pos:end="389:39">-&gt;</operator><name pos:start="389:40" pos:end="389:57">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="391:5" pos:end="393:33"><if pos:start="391:5" pos:end="393:33">if <condition pos:start="391:8" pos:end="391:27">(<expr pos:start="391:9" pos:end="391:26"><operator pos:start="391:9" pos:end="391:9">!</operator><name pos:start="391:10" pos:end="391:26"><name pos:start="391:10" pos:end="391:10">h</name><operator pos:start="391:11" pos:end="391:12">-&gt;</operator><name pos:start="391:13" pos:end="391:26">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="393:9" pos:end="393:33"><block_content pos:start="393:9" pos:end="393:33">

        <expr_stmt pos:start="393:9" pos:end="393:33"><expr pos:start="393:9" pos:end="393:32"><name pos:start="393:9" pos:end="393:20"><name pos:start="393:9" pos:end="393:9">h</name><operator pos:start="393:10" pos:end="393:11">-&gt;</operator><name pos:start="393:12" pos:end="393:20">frame_num</name></name> <operator pos:start="393:22" pos:end="393:22">=</operator> <name pos:start="393:24" pos:end="393:32">frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="397:5" pos:end="397:27"><expr pos:start="397:5" pos:end="397:26"><name pos:start="397:5" pos:end="397:16"><name pos:start="397:5" pos:end="397:6">sl</name><operator pos:start="397:7" pos:end="397:8">-&gt;</operator><name pos:start="397:9" pos:end="397:16">mb_mbaff</name></name>       <operator pos:start="397:24" pos:end="397:24">=</operator> <literal type="number" pos:start="397:26" pos:end="397:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="401:5" pos:end="401:46"><expr pos:start="401:5" pos:end="401:45"><name pos:start="401:5" pos:end="401:22">last_pic_structure</name> <operator pos:start="401:24" pos:end="401:24">=</operator> <name pos:start="401:26" pos:end="401:45"><name pos:start="401:26" pos:end="401:26">h</name><operator pos:start="401:27" pos:end="401:28">-&gt;</operator><name pos:start="401:29" pos:end="401:45">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:38"><expr pos:start="403:5" pos:end="403:37"><name pos:start="403:5" pos:end="403:22">last_pic_droppable</name> <operator pos:start="403:24" pos:end="403:24">=</operator> <name pos:start="403:26" pos:end="403:37"><name pos:start="403:26" pos:end="403:26">h</name><operator pos:start="403:27" pos:end="403:28">-&gt;</operator><name pos:start="403:29" pos:end="403:37">droppable</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="407:5" pos:end="407:36"><expr pos:start="407:5" pos:end="407:35"><name pos:start="407:5" pos:end="407:13">droppable</name> <operator pos:start="407:15" pos:end="407:15">=</operator> <name pos:start="407:17" pos:end="407:30"><name pos:start="407:17" pos:end="407:17">h</name><operator pos:start="407:18" pos:end="407:19">-&gt;</operator><name pos:start="407:20" pos:end="407:30">nal_ref_idc</name></name> <operator pos:start="407:32" pos:end="407:33">==</operator> <literal type="number" pos:start="407:35" pos:end="407:35">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="409:5" pos:end="431:5"><if pos:start="409:5" pos:end="413:5">if <condition pos:start="409:8" pos:end="409:33">(<expr pos:start="409:9" pos:end="409:32"><name pos:start="409:9" pos:end="409:32"><name pos:start="409:9" pos:end="409:11">sps</name><operator pos:start="409:12" pos:end="409:13">-&gt;</operator><name pos:start="409:14" pos:end="409:32">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="409:35" pos:end="413:5">{<block_content pos:start="411:9" pos:end="411:39">

        <expr_stmt pos:start="411:9" pos:end="411:39"><expr pos:start="411:9" pos:end="411:38"><name pos:start="411:9" pos:end="411:25">picture_structure</name> <operator pos:start="411:27" pos:end="411:27">=</operator> <name pos:start="411:29" pos:end="411:38">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="413:7" pos:end="431:5">else <block pos:start="413:12" pos:end="431:5">{<block_content pos:start="415:9" pos:end="429:9">

        <expr_stmt pos:start="415:9" pos:end="415:44"><expr pos:start="415:9" pos:end="415:43"><name pos:start="415:9" pos:end="415:22">field_pic_flag</name> <operator pos:start="415:24" pos:end="415:24">=</operator> <call pos:start="415:26" pos:end="415:43"><name pos:start="415:26" pos:end="415:34">get_bits1</name><argument_list pos:start="415:35" pos:end="415:43">(<argument pos:start="415:36" pos:end="415:42"><expr pos:start="415:36" pos:end="415:42"><operator pos:start="415:36" pos:end="415:36">&amp;</operator><name pos:start="415:37" pos:end="415:42"><name pos:start="415:37" pos:end="415:38">sl</name><operator pos:start="415:39" pos:end="415:40">-&gt;</operator><name pos:start="415:41" pos:end="415:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="417:9" pos:end="429:9"><if pos:start="417:9" pos:end="423:9">if <condition pos:start="417:12" pos:end="417:27">(<expr pos:start="417:13" pos:end="417:26"><name pos:start="417:13" pos:end="417:26">field_pic_flag</name></expr>)</condition> <block pos:start="417:29" pos:end="423:9">{<block_content pos:start="419:13" pos:end="421:67">

            <expr_stmt pos:start="419:13" pos:end="419:51"><expr pos:start="419:13" pos:end="419:50"><name pos:start="419:13" pos:end="419:29">bottom_field_flag</name> <operator pos:start="419:31" pos:end="419:31">=</operator> <call pos:start="419:33" pos:end="419:50"><name pos:start="419:33" pos:end="419:41">get_bits1</name><argument_list pos:start="419:42" pos:end="419:50">(<argument pos:start="419:43" pos:end="419:49"><expr pos:start="419:43" pos:end="419:49"><operator pos:start="419:43" pos:end="419:43">&amp;</operator><name pos:start="419:44" pos:end="419:49"><name pos:start="419:44" pos:end="419:45">sl</name><operator pos:start="419:46" pos:end="419:47">-&gt;</operator><name pos:start="419:48" pos:end="419:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:67"><expr pos:start="421:13" pos:end="421:66"><name pos:start="421:13" pos:end="421:29">picture_structure</name> <operator pos:start="421:31" pos:end="421:31">=</operator> <name pos:start="421:33" pos:end="421:46">PICT_TOP_FIELD</name> <operator pos:start="421:48" pos:end="421:48">+</operator> <name pos:start="421:50" pos:end="421:66">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="423:11" pos:end="429:9">else <block pos:start="423:16" pos:end="429:9">{<block_content pos:start="425:13" pos:end="427:44">

            <expr_stmt pos:start="425:13" pos:end="425:43"><expr pos:start="425:13" pos:end="425:42"><name pos:start="425:13" pos:end="425:29">picture_structure</name> <operator pos:start="425:31" pos:end="425:31">=</operator> <name pos:start="425:33" pos:end="425:42">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:44"><expr pos:start="427:13" pos:end="427:43"><name pos:start="427:13" pos:end="427:24">mb_aff_frame</name>      <operator pos:start="427:31" pos:end="427:31">=</operator> <name pos:start="427:33" pos:end="427:43"><name pos:start="427:33" pos:end="427:35">sps</name><operator pos:start="427:36" pos:end="427:37">-&gt;</operator><name pos:start="427:38" pos:end="427:43">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="433:5" pos:end="441:5"><if pos:start="433:5" pos:end="441:5">if <condition pos:start="433:8" pos:end="433:27">(<expr pos:start="433:9" pos:end="433:26"><operator pos:start="433:9" pos:end="433:9">!</operator><name pos:start="433:10" pos:end="433:26"><name pos:start="433:10" pos:end="433:10">h</name><operator pos:start="433:11" pos:end="433:12">-&gt;</operator><name pos:start="433:13" pos:end="433:26">setup_finished</name></name></expr>)</condition> <block pos:start="433:29" pos:end="441:5">{<block_content pos:start="435:9" pos:end="439:44">

        <expr_stmt pos:start="435:9" pos:end="435:41"><expr pos:start="435:9" pos:end="435:40"><name pos:start="435:9" pos:end="435:20"><name pos:start="435:9" pos:end="435:9">h</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:20">droppable</name></name>         <operator pos:start="435:30" pos:end="435:30">=</operator> <name pos:start="435:32" pos:end="435:40">droppable</name></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:49"><expr pos:start="437:9" pos:end="437:48"><name pos:start="437:9" pos:end="437:28"><name pos:start="437:9" pos:end="437:9">h</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:28">picture_structure</name></name> <operator pos:start="437:30" pos:end="437:30">=</operator> <name pos:start="437:32" pos:end="437:48">picture_structure</name></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:44"><expr pos:start="439:9" pos:end="439:43"><name pos:start="439:9" pos:end="439:23"><name pos:start="439:9" pos:end="439:9">h</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:23">mb_aff_frame</name></name>      <operator pos:start="439:30" pos:end="439:30">=</operator> <name pos:start="439:32" pos:end="439:43">mb_aff_frame</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="443:5" pos:end="443:68"><expr pos:start="443:5" pos:end="443:67"><name pos:start="443:5" pos:end="443:30"><name pos:start="443:5" pos:end="443:6">sl</name><operator pos:start="443:7" pos:end="443:8">-&gt;</operator><name pos:start="443:9" pos:end="443:30">mb_field_decoding_flag</name></name> <operator pos:start="443:32" pos:end="443:32">=</operator> <name pos:start="443:34" pos:end="443:53"><name pos:start="443:34" pos:end="443:34">h</name><operator pos:start="443:35" pos:end="443:36">-&gt;</operator><name pos:start="443:37" pos:end="443:53">picture_structure</name></name> <operator pos:start="443:55" pos:end="443:56">!=</operator> <name pos:start="443:58" pos:end="443:67">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="447:5" pos:end="785:5"><if pos:start="447:5" pos:end="473:5">if <condition pos:start="447:8" pos:end="447:30">(<expr pos:start="447:9" pos:end="447:29"><name pos:start="447:9" pos:end="447:24"><name pos:start="447:9" pos:end="447:9">h</name><operator pos:start="447:10" pos:end="447:11">-&gt;</operator><name pos:start="447:12" pos:end="447:24">current_slice</name></name> <operator pos:start="447:26" pos:end="447:27">!=</operator> <literal type="number" pos:start="447:29" pos:end="447:29">0</literal></expr>)</condition> <block pos:start="447:32" pos:end="473:5">{<block_content pos:start="449:9" pos:end="471:9">

        <if_stmt pos:start="449:9" pos:end="471:9"><if pos:start="449:9" pos:end="461:9">if <condition pos:start="449:12" pos:end="451:44">(<expr pos:start="449:13" pos:end="451:43"><name pos:start="449:13" pos:end="449:30">last_pic_structure</name> <operator pos:start="449:32" pos:end="449:33">!=</operator> <name pos:start="449:35" pos:end="449:51">picture_structure</name> <operator pos:start="449:53" pos:end="449:54">||</operator>

            <name pos:start="451:13" pos:end="451:30">last_pic_droppable</name> <operator pos:start="451:32" pos:end="451:33">!=</operator> <name pos:start="451:35" pos:end="451:43">droppable</name></expr>)</condition> <block pos:start="451:46" pos:end="461:9">{<block_content pos:start="453:13" pos:end="459:39">

            <expr_stmt pos:start="453:13" pos:end="457:61"><expr pos:start="453:13" pos:end="457:60"><call pos:start="453:13" pos:end="457:60"><name pos:start="453:13" pos:end="453:18">av_log</name><argument_list pos:start="453:19" pos:end="457:60">(<argument pos:start="453:20" pos:end="453:27"><expr pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:20">h</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:27">avctx</name></name></expr></argument>, <argument pos:start="453:30" pos:end="453:41"><expr pos:start="453:30" pos:end="453:41"><name pos:start="453:30" pos:end="453:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="455:20" pos:end="455:83"><expr pos:start="455:20" pos:end="455:83"><literal type="string" pos:start="455:20" pos:end="455:83">"Changing field mode (%d -&gt; %d) between slices is not allowed\n"</literal></expr></argument>,

                   <argument pos:start="457:20" pos:end="457:37"><expr pos:start="457:20" pos:end="457:37"><name pos:start="457:20" pos:end="457:37">last_pic_structure</name></expr></argument>, <argument pos:start="457:40" pos:end="457:59"><expr pos:start="457:40" pos:end="457:59"><name pos:start="457:40" pos:end="457:59"><name pos:start="457:40" pos:end="457:40">h</name><operator pos:start="457:41" pos:end="457:42">-&gt;</operator><name pos:start="457:43" pos:end="457:59">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="459:13" pos:end="459:39">return <expr pos:start="459:20" pos:end="459:38"><name pos:start="459:20" pos:end="459:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="461:11" pos:end="471:9">else if <condition pos:start="461:19" pos:end="461:35">(<expr pos:start="461:20" pos:end="461:34"><operator pos:start="461:20" pos:end="461:20">!</operator><name pos:start="461:21" pos:end="461:34"><name pos:start="461:21" pos:end="461:21">h</name><operator pos:start="461:22" pos:end="461:23">-&gt;</operator><name pos:start="461:24" pos:end="461:34">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="461:37" pos:end="471:9">{<block_content pos:start="463:13" pos:end="469:39">

            <expr_stmt pos:start="463:13" pos:end="467:41"><expr pos:start="463:13" pos:end="467:40"><call pos:start="463:13" pos:end="467:40"><name pos:start="463:13" pos:end="463:18">av_log</name><argument_list pos:start="463:19" pos:end="467:40">(<argument pos:start="463:20" pos:end="463:27"><expr pos:start="463:20" pos:end="463:27"><name pos:start="463:20" pos:end="463:27"><name pos:start="463:20" pos:end="463:20">h</name><operator pos:start="463:21" pos:end="463:22">-&gt;</operator><name pos:start="463:23" pos:end="463:27">avctx</name></name></expr></argument>, <argument pos:start="463:30" pos:end="463:41"><expr pos:start="463:30" pos:end="463:41"><name pos:start="463:30" pos:end="463:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="465:20" pos:end="465:52"><expr pos:start="465:20" pos:end="465:52"><literal type="string" pos:start="465:20" pos:end="465:52">"unset cur_pic_ptr on slice %d\n"</literal></expr></argument>,

                   <argument pos:start="467:20" pos:end="467:39"><expr pos:start="467:20" pos:end="467:39"><name pos:start="467:20" pos:end="467:35"><name pos:start="467:20" pos:end="467:20">h</name><operator pos:start="467:21" pos:end="467:22">-&gt;</operator><name pos:start="467:23" pos:end="467:35">current_slice</name></name> <operator pos:start="467:37" pos:end="467:37">+</operator> <literal type="number" pos:start="467:39" pos:end="467:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="469:13" pos:end="469:39">return <expr pos:start="469:20" pos:end="469:38"><name pos:start="469:20" pos:end="469:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="473:7" pos:end="785:5">else <block pos:start="473:12" pos:end="785:5">{<block_content pos:start="479:9" pos:end="783:9">

        <comment type="block" pos:start="475:9" pos:end="477:44">/* Shorten frame num gaps so we don't have to allocate reference

         * frames just to throw them away */</comment>

        <if_stmt pos:start="479:9" pos:end="507:9"><if pos:start="479:9" pos:end="507:9">if <condition pos:start="479:12" pos:end="479:46">(<expr pos:start="479:13" pos:end="479:45"><name pos:start="479:13" pos:end="479:24"><name pos:start="479:13" pos:end="479:13">h</name><operator pos:start="479:14" pos:end="479:15">-&gt;</operator><name pos:start="479:16" pos:end="479:24">frame_num</name></name> <operator pos:start="479:26" pos:end="479:27">!=</operator> <name pos:start="479:29" pos:end="479:45"><name pos:start="479:29" pos:end="479:29">h</name><operator pos:start="479:30" pos:end="479:31">-&gt;</operator><name pos:start="479:32" pos:end="479:45">prev_frame_num</name></name></expr>)</condition> <block pos:start="479:48" pos:end="507:9">{<block_content pos:start="481:13" pos:end="505:13">

            <decl_stmt pos:start="481:13" pos:end="481:58"><decl pos:start="481:13" pos:end="481:57"><type pos:start="481:13" pos:end="481:15"><name pos:start="481:13" pos:end="481:15">int</name></type> <name pos:start="481:17" pos:end="481:37">unwrap_prev_frame_num</name> <init pos:start="481:39" pos:end="481:57">= <expr pos:start="481:41" pos:end="481:57"><name pos:start="481:41" pos:end="481:57"><name pos:start="481:41" pos:end="481:41">h</name><operator pos:start="481:42" pos:end="481:43">-&gt;</operator><name pos:start="481:44" pos:end="481:57">prev_frame_num</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="483:13" pos:end="483:69"><decl pos:start="483:13" pos:end="483:68"><type pos:start="483:13" pos:end="483:15"><name pos:start="483:13" pos:end="483:15">int</name></type> <name pos:start="483:17" pos:end="483:29">max_frame_num</name>         <init pos:start="483:39" pos:end="483:68">= <expr pos:start="483:41" pos:end="483:68"><literal type="number" pos:start="483:41" pos:end="483:41">1</literal> <operator pos:start="483:43" pos:end="483:44">&lt;&lt;</operator> <name pos:start="483:46" pos:end="483:68"><name pos:start="483:46" pos:end="483:48">sps</name><operator pos:start="483:49" pos:end="483:50">-&gt;</operator><name pos:start="483:51" pos:end="483:68">log2_max_frame_num</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="487:13" pos:end="489:55"><if pos:start="487:13" pos:end="489:55">if <condition pos:start="487:16" pos:end="487:53">(<expr pos:start="487:17" pos:end="487:52"><name pos:start="487:17" pos:end="487:37">unwrap_prev_frame_num</name> <operator pos:start="487:39" pos:end="487:39">&gt;</operator> <name pos:start="487:41" pos:end="487:52"><name pos:start="487:41" pos:end="487:41">h</name><operator pos:start="487:42" pos:end="487:43">-&gt;</operator><name pos:start="487:44" pos:end="487:52">frame_num</name></name></expr>)</condition><block type="pseudo" pos:start="489:17" pos:end="489:55"><block_content pos:start="489:17" pos:end="489:55">

                <expr_stmt pos:start="489:17" pos:end="489:55"><expr pos:start="489:17" pos:end="489:54"><name pos:start="489:17" pos:end="489:37">unwrap_prev_frame_num</name> <operator pos:start="489:39" pos:end="489:40">-=</operator> <name pos:start="489:42" pos:end="489:54">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="493:13" pos:end="505:13"><if pos:start="493:13" pos:end="505:13">if <condition pos:start="493:16" pos:end="493:78">(<expr pos:start="493:17" pos:end="493:77"><operator pos:start="493:17" pos:end="493:17">(</operator><name pos:start="493:18" pos:end="493:29"><name pos:start="493:18" pos:end="493:18">h</name><operator pos:start="493:19" pos:end="493:20">-&gt;</operator><name pos:start="493:21" pos:end="493:29">frame_num</name></name> <operator pos:start="493:31" pos:end="493:31">-</operator> <name pos:start="493:33" pos:end="493:53">unwrap_prev_frame_num</name><operator pos:start="493:54" pos:end="493:54">)</operator> <operator pos:start="493:56" pos:end="493:56">&gt;</operator> <name pos:start="493:58" pos:end="493:77"><name pos:start="493:58" pos:end="493:60">sps</name><operator pos:start="493:61" pos:end="493:62">-&gt;</operator><name pos:start="493:63" pos:end="493:77">ref_frame_count</name></name></expr>)</condition> <block pos:start="493:80" pos:end="505:13">{<block_content pos:start="495:17" pos:end="503:58">

                <expr_stmt pos:start="495:17" pos:end="495:82"><expr pos:start="495:17" pos:end="495:81"><name pos:start="495:17" pos:end="495:37">unwrap_prev_frame_num</name> <operator pos:start="495:39" pos:end="495:39">=</operator> <operator pos:start="495:41" pos:end="495:41">(</operator><name pos:start="495:42" pos:end="495:53"><name pos:start="495:42" pos:end="495:42">h</name><operator pos:start="495:43" pos:end="495:44">-&gt;</operator><name pos:start="495:45" pos:end="495:53">frame_num</name></name> <operator pos:start="495:55" pos:end="495:55">-</operator> <name pos:start="495:57" pos:end="495:76"><name pos:start="495:57" pos:end="495:59">sps</name><operator pos:start="495:60" pos:end="495:61">-&gt;</operator><name pos:start="495:62" pos:end="495:76">ref_frame_count</name></name><operator pos:start="495:77" pos:end="495:77">)</operator> <operator pos:start="495:79" pos:end="495:79">-</operator> <literal type="number" pos:start="495:81" pos:end="495:81">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="497:17" pos:end="499:59"><if pos:start="497:17" pos:end="499:59">if <condition pos:start="497:20" pos:end="497:46">(<expr pos:start="497:21" pos:end="497:45"><name pos:start="497:21" pos:end="497:41">unwrap_prev_frame_num</name> <operator pos:start="497:43" pos:end="497:43">&lt;</operator> <literal type="number" pos:start="497:45" pos:end="497:45">0</literal></expr>)</condition><block type="pseudo" pos:start="499:21" pos:end="499:59"><block_content pos:start="499:21" pos:end="499:59">

                    <expr_stmt pos:start="499:21" pos:end="499:59"><expr pos:start="499:21" pos:end="499:58"><name pos:start="499:21" pos:end="499:41">unwrap_prev_frame_num</name> <operator pos:start="499:43" pos:end="499:44">+=</operator> <name pos:start="499:46" pos:end="499:58">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="503:17" pos:end="503:58"><expr pos:start="503:17" pos:end="503:57"><name pos:start="503:17" pos:end="503:33"><name pos:start="503:17" pos:end="503:17">h</name><operator pos:start="503:18" pos:end="503:19">-&gt;</operator><name pos:start="503:20" pos:end="503:33">prev_frame_num</name></name> <operator pos:start="503:35" pos:end="503:35">=</operator> <name pos:start="503:37" pos:end="503:57">unwrap_prev_frame_num</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="511:9" pos:end="519:59">/* See if we have a decoded first field looking for a pair...

         * Here, we're using that to see if we should mark previously

         * decode frames as "finished".

         * We have to do that before the "dummy" in-between frame allocation,

         * since that can modify s-&gt;current_picture_ptr. */</comment>

        <if_stmt pos:start="521:9" pos:end="609:9"><if pos:start="521:9" pos:end="609:9">if <condition pos:start="521:12" pos:end="521:27">(<expr pos:start="521:13" pos:end="521:26"><name pos:start="521:13" pos:end="521:26"><name pos:start="521:13" pos:end="521:13">h</name><operator pos:start="521:14" pos:end="521:15">-&gt;</operator><name pos:start="521:16" pos:end="521:26">first_field</name></name></expr>)</condition> <block pos:start="521:29" pos:end="609:9">{<block_content pos:start="523:13" pos:end="607:13">

            <expr_stmt pos:start="523:13" pos:end="523:35"><expr pos:start="523:13" pos:end="523:34"><call pos:start="523:13" pos:end="523:34"><name pos:start="523:13" pos:end="523:18">assert</name><argument_list pos:start="523:19" pos:end="523:34">(<argument pos:start="523:20" pos:end="523:33"><expr pos:start="523:20" pos:end="523:33"><name pos:start="523:20" pos:end="523:33"><name pos:start="523:20" pos:end="523:20">h</name><operator pos:start="523:21" pos:end="523:22">-&gt;</operator><name pos:start="523:23" pos:end="523:33">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:46"><expr pos:start="525:13" pos:end="525:45"><call pos:start="525:13" pos:end="525:45"><name pos:start="525:13" pos:end="525:18">assert</name><argument_list pos:start="525:19" pos:end="525:45">(<argument pos:start="525:20" pos:end="525:44"><expr pos:start="525:20" pos:end="525:44"><name pos:start="525:20" pos:end="525:44"><name pos:start="525:20" pos:end="525:20">h</name><operator pos:start="525:21" pos:end="525:22">-&gt;</operator><name pos:start="525:23" pos:end="525:33">cur_pic_ptr</name><operator pos:start="525:34" pos:end="525:35">-&gt;</operator><name pos:start="525:36" pos:end="525:36">f</name><operator pos:start="525:37" pos:end="525:38">-&gt;</operator><name pos:start="525:39" pos:end="525:41">buf</name><index pos:start="525:42" pos:end="525:44">[<expr pos:start="525:43" pos:end="525:43"><literal type="number" pos:start="525:43" pos:end="525:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:65"><expr pos:start="527:13" pos:end="527:64"><call pos:start="527:13" pos:end="527:64"><name pos:start="527:13" pos:end="527:18">assert</name><argument_list pos:start="527:19" pos:end="527:64">(<argument pos:start="527:20" pos:end="527:63"><expr pos:start="527:20" pos:end="527:63"><name pos:start="527:20" pos:end="527:44"><name pos:start="527:20" pos:end="527:20">h</name><operator pos:start="527:21" pos:end="527:22">-&gt;</operator><name pos:start="527:23" pos:end="527:33">cur_pic_ptr</name><operator pos:start="527:34" pos:end="527:35">-&gt;</operator><name pos:start="527:36" pos:end="527:44">reference</name></name> <operator pos:start="527:46" pos:end="527:47">!=</operator> <name pos:start="527:49" pos:end="527:63">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="531:13" pos:end="531:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="533:13" pos:end="607:13"><if pos:start="533:13" pos:end="547:13">if <condition pos:start="533:16" pos:end="533:80">(<expr pos:start="533:17" pos:end="533:79"><operator pos:start="533:17" pos:end="533:17">!</operator><call pos:start="533:18" pos:end="533:33"><name pos:start="533:18" pos:end="533:30">FIELD_PICTURE</name><argument_list pos:start="533:31" pos:end="533:33">(<argument pos:start="533:32" pos:end="533:32"><expr pos:start="533:32" pos:end="533:32"><name pos:start="533:32" pos:end="533:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="533:35" pos:end="533:36">||</operator> <name pos:start="533:38" pos:end="533:57"><name pos:start="533:38" pos:end="533:38">h</name><operator pos:start="533:39" pos:end="533:40">-&gt;</operator><name pos:start="533:41" pos:end="533:57">picture_structure</name></name> <operator pos:start="533:59" pos:end="533:60">==</operator> <name pos:start="533:62" pos:end="533:79">last_pic_structure</name></expr>)</condition> <block pos:start="533:82" pos:end="547:13">{<block_content pos:start="539:17" pos:end="545:17">

                <comment type="block" pos:start="535:17" pos:end="537:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <if_stmt pos:start="539:17" pos:end="545:17"><if pos:start="539:17" pos:end="545:17">if <condition pos:start="539:20" pos:end="539:76">(<expr pos:start="539:21" pos:end="539:75"><operator pos:start="539:21" pos:end="539:21">!</operator><name pos:start="539:22" pos:end="539:39">last_pic_droppable</name> <operator pos:start="539:41" pos:end="539:42">&amp;&amp;</operator> <name pos:start="539:44" pos:end="539:61">last_pic_structure</name> <operator pos:start="539:63" pos:end="539:64">!=</operator> <name pos:start="539:66" pos:end="539:75">PICT_FRAME</name></expr>)</condition> <block pos:start="539:78" pos:end="545:17">{<block_content pos:start="541:21" pos:end="543:84">

                    <expr_stmt pos:start="541:21" pos:end="543:84"><expr pos:start="541:21" pos:end="543:83"><call pos:start="541:21" pos:end="543:83"><name pos:start="541:21" pos:end="541:45">ff_thread_report_progress</name><argument_list pos:start="541:46" pos:end="543:83">(<argument pos:start="541:47" pos:end="541:65"><expr pos:start="541:47" pos:end="541:65"><operator pos:start="541:47" pos:end="541:47">&amp;</operator><name pos:start="541:48" pos:end="541:65"><name pos:start="541:48" pos:end="541:48">h</name><operator pos:start="541:49" pos:end="541:50">-&gt;</operator><name pos:start="541:51" pos:end="541:61">cur_pic_ptr</name><operator pos:start="541:62" pos:end="541:63">-&gt;</operator><name pos:start="541:64" pos:end="541:65">tf</name></name></expr></argument>, <argument pos:start="541:68" pos:end="541:74"><expr pos:start="541:68" pos:end="541:74"><name pos:start="541:68" pos:end="541:74">INT_MAX</name></expr></argument>,

                                              <argument pos:start="543:47" pos:end="543:82"><expr pos:start="543:47" pos:end="543:82"><name pos:start="543:47" pos:end="543:64">last_pic_structure</name> <operator pos:start="543:66" pos:end="543:67">==</operator> <name pos:start="543:69" pos:end="543:82">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="547:15" pos:end="607:13">else <block pos:start="547:20" pos:end="607:13">{<block_content pos:start="549:17" pos:end="605:17">

                <if_stmt pos:start="549:17" pos:end="605:17"><if pos:start="549:17" pos:end="567:17">if <condition pos:start="549:20" pos:end="549:62">(<expr pos:start="549:21" pos:end="549:61"><name pos:start="549:21" pos:end="549:45"><name pos:start="549:21" pos:end="549:21">h</name><operator pos:start="549:22" pos:end="549:23">-&gt;</operator><name pos:start="549:24" pos:end="549:34">cur_pic_ptr</name><operator pos:start="549:35" pos:end="549:36">-&gt;</operator><name pos:start="549:37" pos:end="549:45">frame_num</name></name> <operator pos:start="549:47" pos:end="549:48">!=</operator> <name pos:start="549:50" pos:end="549:61"><name pos:start="549:50" pos:end="549:50">h</name><operator pos:start="549:51" pos:end="549:52">-&gt;</operator><name pos:start="549:53" pos:end="549:61">frame_num</name></name></expr>)</condition> <block pos:start="549:64" pos:end="567:17">{<block_content pos:start="559:21" pos:end="565:21">

                    <comment type="block" pos:start="551:21" pos:end="557:35">/* This and previous field were reference, but had

                     * different frame_nums. Consider this field first in

                     * pair. Throw away previous field except for reference

                     * purposes. */</comment>

                    <if_stmt pos:start="559:21" pos:end="565:21"><if pos:start="559:21" pos:end="565:21">if <condition pos:start="559:24" pos:end="559:80">(<expr pos:start="559:25" pos:end="559:79"><operator pos:start="559:25" pos:end="559:25">!</operator><name pos:start="559:26" pos:end="559:43">last_pic_droppable</name> <operator pos:start="559:45" pos:end="559:46">&amp;&amp;</operator> <name pos:start="559:48" pos:end="559:65">last_pic_structure</name> <operator pos:start="559:67" pos:end="559:68">!=</operator> <name pos:start="559:70" pos:end="559:79">PICT_FRAME</name></expr>)</condition> <block pos:start="559:82" pos:end="565:21">{<block_content pos:start="561:25" pos:end="563:88">

                        <expr_stmt pos:start="561:25" pos:end="563:88"><expr pos:start="561:25" pos:end="563:87"><call pos:start="561:25" pos:end="563:87"><name pos:start="561:25" pos:end="561:49">ff_thread_report_progress</name><argument_list pos:start="561:50" pos:end="563:87">(<argument pos:start="561:51" pos:end="561:69"><expr pos:start="561:51" pos:end="561:69"><operator pos:start="561:51" pos:end="561:51">&amp;</operator><name pos:start="561:52" pos:end="561:69"><name pos:start="561:52" pos:end="561:52">h</name><operator pos:start="561:53" pos:end="561:54">-&gt;</operator><name pos:start="561:55" pos:end="561:65">cur_pic_ptr</name><operator pos:start="561:66" pos:end="561:67">-&gt;</operator><name pos:start="561:68" pos:end="561:69">tf</name></name></expr></argument>, <argument pos:start="561:72" pos:end="561:78"><expr pos:start="561:72" pos:end="561:78"><name pos:start="561:72" pos:end="561:78">INT_MAX</name></expr></argument>,

                                                  <argument pos:start="563:51" pos:end="563:86"><expr pos:start="563:51" pos:end="563:86"><name pos:start="563:51" pos:end="563:68">last_pic_structure</name> <operator pos:start="563:70" pos:end="563:71">==</operator> <name pos:start="563:73" pos:end="563:86">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="567:19" pos:end="605:17">else <block pos:start="567:24" pos:end="605:17">{<block_content pos:start="571:21" pos:end="603:21">

                    <comment type="block" pos:start="569:21" pos:end="569:60">/* Second field in complementary pair */</comment>

                    <if_stmt pos:start="571:21" pos:end="603:21"><if pos:start="571:21" pos:end="591:21">if <condition pos:start="571:24" pos:end="577:68">(<expr pos:start="571:25" pos:end="577:67"><operator pos:start="571:25" pos:end="571:25">!</operator><operator pos:start="571:26" pos:end="571:26">(</operator><operator pos:start="571:27" pos:end="571:27">(</operator><name pos:start="571:28" pos:end="571:45">last_pic_structure</name>   <operator pos:start="571:49" pos:end="571:50">==</operator> <name pos:start="571:52" pos:end="571:65">PICT_TOP_FIELD</name> <operator pos:start="571:67" pos:end="571:68">&amp;&amp;</operator>

                           <name pos:start="573:28" pos:end="573:47"><name pos:start="573:28" pos:end="573:28">h</name><operator pos:start="573:29" pos:end="573:30">-&gt;</operator><name pos:start="573:31" pos:end="573:47">picture_structure</name></name> <operator pos:start="573:49" pos:end="573:50">==</operator> <name pos:start="573:52" pos:end="573:68">PICT_BOTTOM_FIELD</name><operator pos:start="573:69" pos:end="573:69">)</operator> <operator pos:start="573:71" pos:end="573:72">||</operator>

                          <operator pos:start="575:27" pos:end="575:27">(</operator><name pos:start="575:28" pos:end="575:45">last_pic_structure</name>   <operator pos:start="575:49" pos:end="575:50">==</operator> <name pos:start="575:52" pos:end="575:68">PICT_BOTTOM_FIELD</name> <operator pos:start="575:70" pos:end="575:71">&amp;&amp;</operator>

                           <name pos:start="577:28" pos:end="577:47"><name pos:start="577:28" pos:end="577:28">h</name><operator pos:start="577:29" pos:end="577:30">-&gt;</operator><name pos:start="577:31" pos:end="577:47">picture_structure</name></name> <operator pos:start="577:49" pos:end="577:50">==</operator> <name pos:start="577:52" pos:end="577:65">PICT_TOP_FIELD</name><operator pos:start="577:66" pos:end="577:66">)</operator><operator pos:start="577:67" pos:end="577:67">)</operator></expr>)</condition> <block pos:start="577:70" pos:end="591:21">{<block_content pos:start="579:25" pos:end="589:51">

                        <expr_stmt pos:start="579:25" pos:end="583:73"><expr pos:start="579:25" pos:end="583:72"><call pos:start="579:25" pos:end="583:72"><name pos:start="579:25" pos:end="579:30">av_log</name><argument_list pos:start="579:31" pos:end="583:72">(<argument pos:start="579:32" pos:end="579:39"><expr pos:start="579:32" pos:end="579:39"><name pos:start="579:32" pos:end="579:39"><name pos:start="579:32" pos:end="579:32">h</name><operator pos:start="579:33" pos:end="579:34">-&gt;</operator><name pos:start="579:35" pos:end="579:39">avctx</name></name></expr></argument>, <argument pos:start="579:42" pos:end="579:53"><expr pos:start="579:42" pos:end="579:53"><name pos:start="579:42" pos:end="579:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="581:32" pos:end="581:71"><expr pos:start="581:32" pos:end="581:71"><literal type="string" pos:start="581:32" pos:end="581:71">"Invalid field mode combination %d/%d\n"</literal></expr></argument>,

                               <argument pos:start="583:32" pos:end="583:49"><expr pos:start="583:32" pos:end="583:49"><name pos:start="583:32" pos:end="583:49">last_pic_structure</name></expr></argument>, <argument pos:start="583:52" pos:end="583:71"><expr pos:start="583:52" pos:end="583:71"><name pos:start="583:52" pos:end="583:71"><name pos:start="583:52" pos:end="583:52">h</name><operator pos:start="583:53" pos:end="583:54">-&gt;</operator><name pos:start="583:55" pos:end="583:71">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="585:25" pos:end="585:66"><expr pos:start="585:25" pos:end="585:65"><name pos:start="585:25" pos:end="585:44"><name pos:start="585:25" pos:end="585:25">h</name><operator pos:start="585:26" pos:end="585:27">-&gt;</operator><name pos:start="585:28" pos:end="585:44">picture_structure</name></name> <operator pos:start="585:46" pos:end="585:46">=</operator> <name pos:start="585:48" pos:end="585:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="587:25" pos:end="587:66"><expr pos:start="587:25" pos:end="587:65"><name pos:start="587:25" pos:end="587:36"><name pos:start="587:25" pos:end="587:25">h</name><operator pos:start="587:26" pos:end="587:27">-&gt;</operator><name pos:start="587:28" pos:end="587:36">droppable</name></name>         <operator pos:start="587:46" pos:end="587:46">=</operator> <name pos:start="587:48" pos:end="587:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="589:25" pos:end="589:51">return <expr pos:start="589:32" pos:end="589:50"><name pos:start="589:32" pos:end="589:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if> <if type="elseif" pos:start="591:23" pos:end="603:21">else if <condition pos:start="591:31" pos:end="591:66">(<expr pos:start="591:32" pos:end="591:65"><name pos:start="591:32" pos:end="591:49">last_pic_droppable</name> <operator pos:start="591:51" pos:end="591:52">!=</operator> <name pos:start="591:54" pos:end="591:65"><name pos:start="591:54" pos:end="591:54">h</name><operator pos:start="591:55" pos:end="591:56">-&gt;</operator><name pos:start="591:57" pos:end="591:65">droppable</name></name></expr>)</condition> <block pos:start="591:68" pos:end="603:21">{<block_content pos:start="593:25" pos:end="601:52">

                        <expr_stmt pos:start="593:25" pos:end="595:115"><expr pos:start="593:25" pos:end="595:114"><call pos:start="593:25" pos:end="595:114"><name pos:start="593:25" pos:end="593:45">avpriv_request_sample</name><argument_list pos:start="593:46" pos:end="595:114">(<argument pos:start="593:47" pos:end="593:54"><expr pos:start="593:47" pos:end="593:54"><name pos:start="593:47" pos:end="593:54"><name pos:start="593:47" pos:end="593:47">h</name><operator pos:start="593:48" pos:end="593:49">-&gt;</operator><name pos:start="593:50" pos:end="593:54">avctx</name></name></expr></argument>,

                                              <argument pos:start="595:47" pos:end="595:113"><expr pos:start="595:47" pos:end="595:113"><literal type="string" pos:start="595:47" pos:end="595:113">"Found reference and non-reference fields in the same frame, which"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="597:25" pos:end="597:66"><expr pos:start="597:25" pos:end="597:65"><name pos:start="597:25" pos:end="597:44"><name pos:start="597:25" pos:end="597:25">h</name><operator pos:start="597:26" pos:end="597:27">-&gt;</operator><name pos:start="597:28" pos:end="597:44">picture_structure</name></name> <operator pos:start="597:46" pos:end="597:46">=</operator> <name pos:start="597:48" pos:end="597:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="599:25" pos:end="599:66"><expr pos:start="599:25" pos:end="599:65"><name pos:start="599:25" pos:end="599:36"><name pos:start="599:25" pos:end="599:25">h</name><operator pos:start="599:26" pos:end="599:27">-&gt;</operator><name pos:start="599:28" pos:end="599:36">droppable</name></name>         <operator pos:start="599:46" pos:end="599:46">=</operator> <name pos:start="599:48" pos:end="599:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="601:25" pos:end="601:52">return <expr pos:start="601:32" pos:end="601:51"><name pos:start="601:32" pos:end="601:51">AVERROR_PATCHWELCOME</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="613:9" pos:end="703:9">while <condition pos:start="613:15" pos:end="615:88">(<expr pos:start="613:16" pos:end="615:87"><name pos:start="613:16" pos:end="613:27"><name pos:start="613:16" pos:end="613:16">h</name><operator pos:start="613:17" pos:end="613:18">-&gt;</operator><name pos:start="613:19" pos:end="613:27">frame_num</name></name> <operator pos:start="613:29" pos:end="613:30">!=</operator> <name pos:start="613:32" pos:end="613:48"><name pos:start="613:32" pos:end="613:32">h</name><operator pos:start="613:33" pos:end="613:34">-&gt;</operator><name pos:start="613:35" pos:end="613:48">prev_frame_num</name></name> <operator pos:start="613:50" pos:end="613:51">&amp;&amp;</operator>

               <name pos:start="615:16" pos:end="615:27"><name pos:start="615:16" pos:end="615:16">h</name><operator pos:start="615:17" pos:end="615:18">-&gt;</operator><name pos:start="615:19" pos:end="615:27">frame_num</name></name> <operator pos:start="615:29" pos:end="615:30">!=</operator> <operator pos:start="615:32" pos:end="615:32">(</operator><name pos:start="615:33" pos:end="615:49"><name pos:start="615:33" pos:end="615:33">h</name><operator pos:start="615:34" pos:end="615:35">-&gt;</operator><name pos:start="615:36" pos:end="615:49">prev_frame_num</name></name> <operator pos:start="615:51" pos:end="615:51">+</operator> <literal type="number" pos:start="615:53" pos:end="615:53">1</literal><operator pos:start="615:54" pos:end="615:54">)</operator> <operator pos:start="615:56" pos:end="615:56">%</operator> <operator pos:start="615:58" pos:end="615:58">(</operator><literal type="number" pos:start="615:59" pos:end="615:59">1</literal> <operator pos:start="615:61" pos:end="615:62">&lt;&lt;</operator> <name pos:start="615:64" pos:end="615:86"><name pos:start="615:64" pos:end="615:66">sps</name><operator pos:start="615:67" pos:end="615:68">-&gt;</operator><name pos:start="615:69" pos:end="615:86">log2_max_frame_num</name></name><operator pos:start="615:87" pos:end="615:87">)</operator></expr>)</condition> <block pos:start="615:90" pos:end="703:9">{<block_content pos:start="617:13" pos:end="701:13">

            <decl_stmt pos:start="617:13" pos:end="617:76"><decl pos:start="617:13" pos:end="617:75"><type pos:start="617:13" pos:end="617:25"><name pos:start="617:13" pos:end="617:23">H264Picture</name> <modifier pos:start="617:25" pos:end="617:25">*</modifier></type><name pos:start="617:26" pos:end="617:29">prev</name> <init pos:start="617:31" pos:end="617:75">= <expr pos:start="617:33" pos:end="617:75"><ternary pos:start="617:33" pos:end="617:75"><condition pos:start="617:33" pos:end="617:52"><expr pos:start="617:33" pos:end="617:50"><name pos:start="617:33" pos:end="617:50"><name pos:start="617:33" pos:end="617:33">h</name><operator pos:start="617:34" pos:end="617:35">-&gt;</operator><name pos:start="617:36" pos:end="617:50">short_ref_count</name></name></expr> ?</condition><then pos:start="617:54" pos:end="617:68"> <expr pos:start="617:54" pos:end="617:68"><name pos:start="617:54" pos:end="617:68"><name pos:start="617:54" pos:end="617:54">h</name><operator pos:start="617:55" pos:end="617:56">-&gt;</operator><name pos:start="617:57" pos:end="617:65">short_ref</name><index pos:start="617:66" pos:end="617:68">[<expr pos:start="617:67" pos:end="617:67"><literal type="number" pos:start="617:67" pos:end="617:67">0</literal></expr>]</index></name></expr> </then><else pos:start="617:70" pos:end="617:75">: <expr pos:start="617:72" pos:end="617:75"><name pos:start="617:72" pos:end="617:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="619:13" pos:end="621:52"><expr pos:start="619:13" pos:end="621:51"><call pos:start="619:13" pos:end="621:51"><name pos:start="619:13" pos:end="619:18">av_log</name><argument_list pos:start="619:19" pos:end="621:51">(<argument pos:start="619:20" pos:end="619:27"><expr pos:start="619:20" pos:end="619:27"><name pos:start="619:20" pos:end="619:27"><name pos:start="619:20" pos:end="619:20">h</name><operator pos:start="619:21" pos:end="619:22">-&gt;</operator><name pos:start="619:23" pos:end="619:27">avctx</name></name></expr></argument>, <argument pos:start="619:30" pos:end="619:41"><expr pos:start="619:30" pos:end="619:41"><name pos:start="619:30" pos:end="619:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="619:44" pos:end="619:66"><expr pos:start="619:44" pos:end="619:66"><literal type="string" pos:start="619:44" pos:end="619:66">"Frame num gap %d %d\n"</literal></expr></argument>,

                   <argument pos:start="621:20" pos:end="621:31"><expr pos:start="621:20" pos:end="621:31"><name pos:start="621:20" pos:end="621:31"><name pos:start="621:20" pos:end="621:20">h</name><operator pos:start="621:21" pos:end="621:22">-&gt;</operator><name pos:start="621:23" pos:end="621:31">frame_num</name></name></expr></argument>, <argument pos:start="621:34" pos:end="621:50"><expr pos:start="621:34" pos:end="621:50"><name pos:start="621:34" pos:end="621:50"><name pos:start="621:34" pos:end="621:34">h</name><operator pos:start="621:35" pos:end="621:36">-&gt;</operator><name pos:start="621:37" pos:end="621:50">prev_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="623:13" pos:end="623:42"><expr pos:start="623:13" pos:end="623:41"><name pos:start="623:13" pos:end="623:15">ret</name> <operator pos:start="623:17" pos:end="623:17">=</operator> <call pos:start="623:19" pos:end="623:41"><name pos:start="623:19" pos:end="623:38">initialize_cur_frame</name><argument_list pos:start="623:39" pos:end="623:41">(<argument pos:start="623:40" pos:end="623:40"><expr pos:start="623:40" pos:end="623:40"><name pos:start="623:40" pos:end="623:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="625:13" pos:end="631:13"><if pos:start="625:13" pos:end="631:13">if <condition pos:start="625:16" pos:end="625:24">(<expr pos:start="625:17" pos:end="625:23"><name pos:start="625:17" pos:end="625:19">ret</name> <operator pos:start="625:21" pos:end="625:21">&lt;</operator> <literal type="number" pos:start="625:23" pos:end="625:23">0</literal></expr>)</condition> <block pos:start="625:26" pos:end="631:13">{<block_content pos:start="627:17" pos:end="629:27">

                <expr_stmt pos:start="627:17" pos:end="627:35"><expr pos:start="627:17" pos:end="627:34"><name pos:start="627:17" pos:end="627:30"><name pos:start="627:17" pos:end="627:17">h</name><operator pos:start="627:18" pos:end="627:19">-&gt;</operator><name pos:start="627:20" pos:end="627:30">first_field</name></name> <operator pos:start="627:32" pos:end="627:32">=</operator> <literal type="number" pos:start="627:34" pos:end="627:34">0</literal></expr>;</expr_stmt>

                <return pos:start="629:17" pos:end="629:27">return <expr pos:start="629:24" pos:end="629:26"><name pos:start="629:24" pos:end="629:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="635:13" pos:end="635:32"><expr pos:start="635:13" pos:end="635:31"><name pos:start="635:13" pos:end="635:29"><name pos:start="635:13" pos:end="635:13">h</name><operator pos:start="635:14" pos:end="635:15">-&gt;</operator><name pos:start="635:16" pos:end="635:29">prev_frame_num</name></name><operator pos:start="635:30" pos:end="635:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:69"><expr pos:start="637:13" pos:end="637:68"><name pos:start="637:13" pos:end="637:29"><name pos:start="637:13" pos:end="637:13">h</name><operator pos:start="637:14" pos:end="637:15">-&gt;</operator><name pos:start="637:16" pos:end="637:29">prev_frame_num</name></name>        <operator pos:start="637:38" pos:end="637:39">%=</operator> <literal type="number" pos:start="637:41" pos:end="637:41">1</literal> <operator pos:start="637:43" pos:end="637:44">&lt;&lt;</operator> <name pos:start="637:46" pos:end="637:68"><name pos:start="637:46" pos:end="637:48">sps</name><operator pos:start="637:49" pos:end="637:50">-&gt;</operator><name pos:start="637:51" pos:end="637:68">log2_max_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:58"><expr pos:start="639:13" pos:end="639:57"><name pos:start="639:13" pos:end="639:37"><name pos:start="639:13" pos:end="639:13">h</name><operator pos:start="639:14" pos:end="639:15">-&gt;</operator><name pos:start="639:16" pos:end="639:26">cur_pic_ptr</name><operator pos:start="639:27" pos:end="639:28">-&gt;</operator><name pos:start="639:29" pos:end="639:37">frame_num</name></name> <operator pos:start="639:39" pos:end="639:39">=</operator> <name pos:start="639:41" pos:end="639:57"><name pos:start="639:41" pos:end="639:41">h</name><operator pos:start="639:42" pos:end="639:43">-&gt;</operator><name pos:start="639:44" pos:end="639:57">prev_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:71"><expr pos:start="641:13" pos:end="641:70"><call pos:start="641:13" pos:end="641:70"><name pos:start="641:13" pos:end="641:37">ff_thread_report_progress</name><argument_list pos:start="641:38" pos:end="641:70">(<argument pos:start="641:39" pos:end="641:57"><expr pos:start="641:39" pos:end="641:57"><operator pos:start="641:39" pos:end="641:39">&amp;</operator><name pos:start="641:40" pos:end="641:57"><name pos:start="641:40" pos:end="641:40">h</name><operator pos:start="641:41" pos:end="641:42">-&gt;</operator><name pos:start="641:43" pos:end="641:53">cur_pic_ptr</name><operator pos:start="641:54" pos:end="641:55">-&gt;</operator><name pos:start="641:56" pos:end="641:57">tf</name></name></expr></argument>, <argument pos:start="641:60" pos:end="641:66"><expr pos:start="641:60" pos:end="641:66"><name pos:start="641:60" pos:end="641:66">INT_MAX</name></expr></argument>, <argument pos:start="641:69" pos:end="641:69"><expr pos:start="641:69" pos:end="641:69"><literal type="number" pos:start="641:69" pos:end="641:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="643:13" pos:end="643:71"><expr pos:start="643:13" pos:end="643:70"><call pos:start="643:13" pos:end="643:70"><name pos:start="643:13" pos:end="643:37">ff_thread_report_progress</name><argument_list pos:start="643:38" pos:end="643:70">(<argument pos:start="643:39" pos:end="643:57"><expr pos:start="643:39" pos:end="643:57"><operator pos:start="643:39" pos:end="643:39">&amp;</operator><name pos:start="643:40" pos:end="643:57"><name pos:start="643:40" pos:end="643:40">h</name><operator pos:start="643:41" pos:end="643:42">-&gt;</operator><name pos:start="643:43" pos:end="643:53">cur_pic_ptr</name><operator pos:start="643:54" pos:end="643:55">-&gt;</operator><name pos:start="643:56" pos:end="643:57">tf</name></name></expr></argument>, <argument pos:start="643:60" pos:end="643:66"><expr pos:start="643:60" pos:end="643:66"><name pos:start="643:60" pos:end="643:66">INT_MAX</name></expr></argument>, <argument pos:start="643:69" pos:end="643:69"><expr pos:start="643:69" pos:end="643:69"><literal type="number" pos:start="643:69" pos:end="643:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="645:13" pos:end="645:57"><expr pos:start="645:13" pos:end="645:56"><name pos:start="645:13" pos:end="645:15">ret</name> <operator pos:start="645:17" pos:end="645:17">=</operator> <call pos:start="645:19" pos:end="645:56"><name pos:start="645:19" pos:end="645:50">ff_generate_sliding_window_mmcos</name><argument_list pos:start="645:51" pos:end="645:56">(<argument pos:start="645:52" pos:end="645:52"><expr pos:start="645:52" pos:end="645:52"><name pos:start="645:52" pos:end="645:52">h</name></expr></argument>, <argument pos:start="645:55" pos:end="645:55"><expr pos:start="645:55" pos:end="645:55"><literal type="number" pos:start="645:55" pos:end="645:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="647:13" pos:end="649:27"><if pos:start="647:13" pos:end="649:27">if <condition pos:start="647:16" pos:end="647:71">(<expr pos:start="647:17" pos:end="647:70"><name pos:start="647:17" pos:end="647:19">ret</name> <operator pos:start="647:21" pos:end="647:21">&lt;</operator> <literal type="number" pos:start="647:23" pos:end="647:23">0</literal> <operator pos:start="647:25" pos:end="647:26">&amp;&amp;</operator> <operator pos:start="647:28" pos:end="647:28">(</operator><name pos:start="647:29" pos:end="647:53"><name pos:start="647:29" pos:end="647:29">h</name><operator pos:start="647:30" pos:end="647:31">-&gt;</operator><name pos:start="647:32" pos:end="647:36">avctx</name><operator pos:start="647:37" pos:end="647:38">-&gt;</operator><name pos:start="647:39" pos:end="647:53">err_recognition</name></name> <operator pos:start="647:55" pos:end="647:55">&amp;</operator> <name pos:start="647:57" pos:end="647:69">AV_EF_EXPLODE</name><operator pos:start="647:70" pos:end="647:70">)</operator></expr>)</condition><block type="pseudo" pos:start="649:17" pos:end="649:27"><block_content pos:start="649:17" pos:end="649:27">

                <return pos:start="649:17" pos:end="649:27">return <expr pos:start="649:24" pos:end="649:26"><name pos:start="649:24" pos:end="649:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="651:13" pos:end="651:77"><expr pos:start="651:13" pos:end="651:76"><name pos:start="651:13" pos:end="651:15">ret</name> <operator pos:start="651:17" pos:end="651:17">=</operator> <call pos:start="651:19" pos:end="651:76"><name pos:start="651:19" pos:end="651:49">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="651:50" pos:end="651:76">(<argument pos:start="651:51" pos:end="651:51"><expr pos:start="651:51" pos:end="651:51"><name pos:start="651:51" pos:end="651:51">h</name></expr></argument>, <argument pos:start="651:54" pos:end="651:60"><expr pos:start="651:54" pos:end="651:60"><name pos:start="651:54" pos:end="651:60"><name pos:start="651:54" pos:end="651:54">h</name><operator pos:start="651:55" pos:end="651:56">-&gt;</operator><name pos:start="651:57" pos:end="651:60">mmco</name></name></expr></argument>, <argument pos:start="651:63" pos:end="651:75"><expr pos:start="651:63" pos:end="651:75"><name pos:start="651:63" pos:end="651:75"><name pos:start="651:63" pos:end="651:63">h</name><operator pos:start="651:64" pos:end="651:65">-&gt;</operator><name pos:start="651:66" pos:end="651:75">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="653:13" pos:end="655:27"><if pos:start="653:13" pos:end="655:27">if <condition pos:start="653:16" pos:end="653:71">(<expr pos:start="653:17" pos:end="653:70"><name pos:start="653:17" pos:end="653:19">ret</name> <operator pos:start="653:21" pos:end="653:21">&lt;</operator> <literal type="number" pos:start="653:23" pos:end="653:23">0</literal> <operator pos:start="653:25" pos:end="653:26">&amp;&amp;</operator> <operator pos:start="653:28" pos:end="653:28">(</operator><name pos:start="653:29" pos:end="653:53"><name pos:start="653:29" pos:end="653:29">h</name><operator pos:start="653:30" pos:end="653:31">-&gt;</operator><name pos:start="653:32" pos:end="653:36">avctx</name><operator pos:start="653:37" pos:end="653:38">-&gt;</operator><name pos:start="653:39" pos:end="653:53">err_recognition</name></name> <operator pos:start="653:55" pos:end="653:55">&amp;</operator> <name pos:start="653:57" pos:end="653:69">AV_EF_EXPLODE</name><operator pos:start="653:70" pos:end="653:70">)</operator></expr>)</condition><block type="pseudo" pos:start="655:17" pos:end="655:27"><block_content pos:start="655:17" pos:end="655:27">

                <return pos:start="655:17" pos:end="655:27">return <expr pos:start="655:24" pos:end="655:26"><name pos:start="655:24" pos:end="655:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="657:13" pos:end="669:74">/* Error concealment: If a ref is missing, copy the previous ref

             * in its place.

             * FIXME: Avoiding a memcpy would be nice, but ref handling makes

             * many assumptions about there being no actual duplicates.

             * FIXME: This does not copy padding for out-of-frame motion

             * vectors.  Given we are concealing a lost frame, this probably

             * is not noticeable by comparison, but it should be fixed. */</comment>

            <if_stmt pos:start="671:13" pos:end="701:13"><if pos:start="671:13" pos:end="701:13">if <condition pos:start="671:16" pos:end="671:35">(<expr pos:start="671:17" pos:end="671:34"><name pos:start="671:17" pos:end="671:34"><name pos:start="671:17" pos:end="671:17">h</name><operator pos:start="671:18" pos:end="671:19">-&gt;</operator><name pos:start="671:20" pos:end="671:34">short_ref_count</name></name></expr>)</condition> <block pos:start="671:37" pos:end="701:13">{<block_content pos:start="673:17" pos:end="699:63">

                <if_stmt pos:start="673:17" pos:end="697:17"><if pos:start="673:17" pos:end="697:17">if <condition pos:start="673:20" pos:end="679:66">(<expr pos:start="673:21" pos:end="679:65"><name pos:start="673:21" pos:end="673:24">prev</name> <operator pos:start="673:26" pos:end="673:27">&amp;&amp;</operator>

                    <name pos:start="675:21" pos:end="675:35"><name pos:start="675:21" pos:end="675:21">h</name><operator pos:start="675:22" pos:end="675:23">-&gt;</operator><name pos:start="675:24" pos:end="675:32">short_ref</name><index pos:start="675:33" pos:end="675:35">[<expr pos:start="675:34" pos:end="675:34"><literal type="number" pos:start="675:34" pos:end="675:34">0</literal></expr>]</index></name><operator pos:start="675:36" pos:end="675:37">-&gt;</operator><name pos:start="675:38" pos:end="675:45"><name pos:start="675:38" pos:end="675:38">f</name><operator pos:start="675:39" pos:end="675:40">-&gt;</operator><name pos:start="675:41" pos:end="675:45">width</name></name> <operator pos:start="675:47" pos:end="675:48">==</operator> <name pos:start="675:50" pos:end="675:63"><name pos:start="675:50" pos:end="675:53">prev</name><operator pos:start="675:54" pos:end="675:55">-&gt;</operator><name pos:start="675:56" pos:end="675:56">f</name><operator pos:start="675:57" pos:end="675:58">-&gt;</operator><name pos:start="675:59" pos:end="675:63">width</name></name> <operator pos:start="675:65" pos:end="675:66">&amp;&amp;</operator>

                    <name pos:start="677:21" pos:end="677:35"><name pos:start="677:21" pos:end="677:21">h</name><operator pos:start="677:22" pos:end="677:23">-&gt;</operator><name pos:start="677:24" pos:end="677:32">short_ref</name><index pos:start="677:33" pos:end="677:35">[<expr pos:start="677:34" pos:end="677:34"><literal type="number" pos:start="677:34" pos:end="677:34">0</literal></expr>]</index></name><operator pos:start="677:36" pos:end="677:37">-&gt;</operator><name pos:start="677:38" pos:end="677:46"><name pos:start="677:38" pos:end="677:38">f</name><operator pos:start="677:39" pos:end="677:40">-&gt;</operator><name pos:start="677:41" pos:end="677:46">height</name></name> <operator pos:start="677:48" pos:end="677:49">==</operator> <name pos:start="677:51" pos:end="677:65"><name pos:start="677:51" pos:end="677:54">prev</name><operator pos:start="677:55" pos:end="677:56">-&gt;</operator><name pos:start="677:57" pos:end="677:57">f</name><operator pos:start="677:58" pos:end="677:59">-&gt;</operator><name pos:start="677:60" pos:end="677:65">height</name></name> <operator pos:start="677:67" pos:end="677:68">&amp;&amp;</operator>

                    <name pos:start="679:21" pos:end="679:35"><name pos:start="679:21" pos:end="679:21">h</name><operator pos:start="679:22" pos:end="679:23">-&gt;</operator><name pos:start="679:24" pos:end="679:32">short_ref</name><index pos:start="679:33" pos:end="679:35">[<expr pos:start="679:34" pos:end="679:34"><literal type="number" pos:start="679:34" pos:end="679:34">0</literal></expr>]</index></name><operator pos:start="679:36" pos:end="679:37">-&gt;</operator><name pos:start="679:38" pos:end="679:46"><name pos:start="679:38" pos:end="679:38">f</name><operator pos:start="679:39" pos:end="679:40">-&gt;</operator><name pos:start="679:41" pos:end="679:46">format</name></name> <operator pos:start="679:48" pos:end="679:49">==</operator> <name pos:start="679:51" pos:end="679:65"><name pos:start="679:51" pos:end="679:54">prev</name><operator pos:start="679:55" pos:end="679:56">-&gt;</operator><name pos:start="679:57" pos:end="679:57">f</name><operator pos:start="679:58" pos:end="679:59">-&gt;</operator><name pos:start="679:60" pos:end="679:65">format</name></name></expr>)</condition> <block pos:start="679:68" pos:end="697:17">{<block_content pos:start="681:21" pos:end="695:57">

                    <expr_stmt pos:start="681:21" pos:end="693:53"><expr pos:start="681:21" pos:end="693:52"><call pos:start="681:21" pos:end="693:52"><name pos:start="681:21" pos:end="681:33">av_image_copy</name><argument_list pos:start="681:34" pos:end="693:52">(<argument pos:start="681:35" pos:end="681:58"><expr pos:start="681:35" pos:end="681:58"><name pos:start="681:35" pos:end="681:49"><name pos:start="681:35" pos:end="681:35">h</name><operator pos:start="681:36" pos:end="681:37">-&gt;</operator><name pos:start="681:38" pos:end="681:46">short_ref</name><index pos:start="681:47" pos:end="681:49">[<expr pos:start="681:48" pos:end="681:48"><literal type="number" pos:start="681:48" pos:end="681:48">0</literal></expr>]</index></name><operator pos:start="681:50" pos:end="681:51">-&gt;</operator><name pos:start="681:52" pos:end="681:58"><name pos:start="681:52" pos:end="681:52">f</name><operator pos:start="681:53" pos:end="681:54">-&gt;</operator><name pos:start="681:55" pos:end="681:58">data</name></name></expr></argument>,

                                  <argument pos:start="683:35" pos:end="683:62"><expr pos:start="683:35" pos:end="683:62"><name pos:start="683:35" pos:end="683:49"><name pos:start="683:35" pos:end="683:35">h</name><operator pos:start="683:36" pos:end="683:37">-&gt;</operator><name pos:start="683:38" pos:end="683:46">short_ref</name><index pos:start="683:47" pos:end="683:49">[<expr pos:start="683:48" pos:end="683:48"><literal type="number" pos:start="683:48" pos:end="683:48">0</literal></expr>]</index></name><operator pos:start="683:50" pos:end="683:51">-&gt;</operator><name pos:start="683:52" pos:end="683:62"><name pos:start="683:52" pos:end="683:52">f</name><operator pos:start="683:53" pos:end="683:54">-&gt;</operator><name pos:start="683:55" pos:end="683:62">linesize</name></name></expr></argument>,

                                  <argument pos:start="685:35" pos:end="685:65"><expr pos:start="685:35" pos:end="685:65"><operator pos:start="685:35" pos:end="685:35">(</operator><specifier pos:start="685:36" pos:end="685:40">const</specifier> <name pos:start="685:42" pos:end="685:48">uint8_t</name> <operator pos:start="685:50" pos:end="685:50">*</operator><operator pos:start="685:51" pos:end="685:51">*</operator><operator pos:start="685:52" pos:end="685:52">)</operator><name pos:start="685:53" pos:end="685:65"><name pos:start="685:53" pos:end="685:56">prev</name><operator pos:start="685:57" pos:end="685:58">-&gt;</operator><name pos:start="685:59" pos:end="685:59">f</name><operator pos:start="685:60" pos:end="685:61">-&gt;</operator><name pos:start="685:62" pos:end="685:65">data</name></name></expr></argument>,

                                  <argument pos:start="687:35" pos:end="687:51"><expr pos:start="687:35" pos:end="687:51"><name pos:start="687:35" pos:end="687:51"><name pos:start="687:35" pos:end="687:38">prev</name><operator pos:start="687:39" pos:end="687:40">-&gt;</operator><name pos:start="687:41" pos:end="687:41">f</name><operator pos:start="687:42" pos:end="687:43">-&gt;</operator><name pos:start="687:44" pos:end="687:51">linesize</name></name></expr></argument>,

                                  <argument pos:start="689:35" pos:end="689:49"><expr pos:start="689:35" pos:end="689:49"><name pos:start="689:35" pos:end="689:49"><name pos:start="689:35" pos:end="689:38">prev</name><operator pos:start="689:39" pos:end="689:40">-&gt;</operator><name pos:start="689:41" pos:end="689:41">f</name><operator pos:start="689:42" pos:end="689:43">-&gt;</operator><name pos:start="689:44" pos:end="689:49">format</name></name></expr></argument>,

                                  <argument pos:start="691:35" pos:end="691:51"><expr pos:start="691:35" pos:end="691:51"><name pos:start="691:35" pos:end="691:45"><name pos:start="691:35" pos:end="691:35">h</name><operator pos:start="691:36" pos:end="691:37">-&gt;</operator><name pos:start="691:38" pos:end="691:45">mb_width</name></name>  <operator pos:start="691:48" pos:end="691:48">*</operator> <literal type="number" pos:start="691:50" pos:end="691:51">16</literal></expr></argument>,

                                  <argument pos:start="693:35" pos:end="693:51"><expr pos:start="693:35" pos:end="693:51"><name pos:start="693:35" pos:end="693:46"><name pos:start="693:35" pos:end="693:35">h</name><operator pos:start="693:36" pos:end="693:37">-&gt;</operator><name pos:start="693:38" pos:end="693:46">mb_height</name></name> <operator pos:start="693:48" pos:end="693:48">*</operator> <literal type="number" pos:start="693:50" pos:end="693:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="695:21" pos:end="695:57"><expr pos:start="695:21" pos:end="695:56"><name pos:start="695:21" pos:end="695:35"><name pos:start="695:21" pos:end="695:21">h</name><operator pos:start="695:22" pos:end="695:23">-&gt;</operator><name pos:start="695:24" pos:end="695:32">short_ref</name><index pos:start="695:33" pos:end="695:35">[<expr pos:start="695:34" pos:end="695:34"><literal type="number" pos:start="695:34" pos:end="695:34">0</literal></expr>]</index></name><operator pos:start="695:36" pos:end="695:37">-&gt;</operator><name pos:start="695:38" pos:end="695:40">poc</name> <operator pos:start="695:42" pos:end="695:42">=</operator> <name pos:start="695:44" pos:end="695:52"><name pos:start="695:44" pos:end="695:47">prev</name><operator pos:start="695:48" pos:end="695:49">-&gt;</operator><name pos:start="695:50" pos:end="695:52">poc</name></name> <operator pos:start="695:54" pos:end="695:54">+</operator> <literal type="number" pos:start="695:56" pos:end="695:56">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="699:17" pos:end="699:63"><expr pos:start="699:17" pos:end="699:62"><name pos:start="699:17" pos:end="699:31"><name pos:start="699:17" pos:end="699:17">h</name><operator pos:start="699:18" pos:end="699:19">-&gt;</operator><name pos:start="699:20" pos:end="699:28">short_ref</name><index pos:start="699:29" pos:end="699:31">[<expr pos:start="699:30" pos:end="699:30"><literal type="number" pos:start="699:30" pos:end="699:30">0</literal></expr>]</index></name><operator pos:start="699:32" pos:end="699:33">-&gt;</operator><name pos:start="699:34" pos:end="699:42">frame_num</name> <operator pos:start="699:44" pos:end="699:44">=</operator> <name pos:start="699:46" pos:end="699:62"><name pos:start="699:46" pos:end="699:46">h</name><operator pos:start="699:47" pos:end="699:48">-&gt;</operator><name pos:start="699:49" pos:end="699:62">prev_frame_num</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="707:9" pos:end="711:46">/* See if we have a decoded first field looking for a pair...

         * We're using that to see whether to continue decoding in that

         * frame, or to allocate a new one. */</comment>

        <if_stmt pos:start="713:9" pos:end="765:9"><if pos:start="713:9" pos:end="759:9">if <condition pos:start="713:12" pos:end="713:27">(<expr pos:start="713:13" pos:end="713:26"><name pos:start="713:13" pos:end="713:26"><name pos:start="713:13" pos:end="713:13">h</name><operator pos:start="713:14" pos:end="713:15">-&gt;</operator><name pos:start="713:16" pos:end="713:26">first_field</name></name></expr>)</condition> <block pos:start="713:29" pos:end="759:9">{<block_content pos:start="715:13" pos:end="757:13">

            <expr_stmt pos:start="715:13" pos:end="715:35"><expr pos:start="715:13" pos:end="715:34"><call pos:start="715:13" pos:end="715:34"><name pos:start="715:13" pos:end="715:18">assert</name><argument_list pos:start="715:19" pos:end="715:34">(<argument pos:start="715:20" pos:end="715:33"><expr pos:start="715:20" pos:end="715:33"><name pos:start="715:20" pos:end="715:33"><name pos:start="715:20" pos:end="715:20">h</name><operator pos:start="715:21" pos:end="715:22">-&gt;</operator><name pos:start="715:23" pos:end="715:33">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="717:13" pos:end="717:46"><expr pos:start="717:13" pos:end="717:45"><call pos:start="717:13" pos:end="717:45"><name pos:start="717:13" pos:end="717:18">assert</name><argument_list pos:start="717:19" pos:end="717:45">(<argument pos:start="717:20" pos:end="717:44"><expr pos:start="717:20" pos:end="717:44"><name pos:start="717:20" pos:end="717:44"><name pos:start="717:20" pos:end="717:20">h</name><operator pos:start="717:21" pos:end="717:22">-&gt;</operator><name pos:start="717:23" pos:end="717:33">cur_pic_ptr</name><operator pos:start="717:34" pos:end="717:35">-&gt;</operator><name pos:start="717:36" pos:end="717:36">f</name><operator pos:start="717:37" pos:end="717:38">-&gt;</operator><name pos:start="717:39" pos:end="717:41">buf</name><index pos:start="717:42" pos:end="717:44">[<expr pos:start="717:43" pos:end="717:43"><literal type="number" pos:start="717:43" pos:end="717:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="719:13" pos:end="719:65"><expr pos:start="719:13" pos:end="719:64"><call pos:start="719:13" pos:end="719:64"><name pos:start="719:13" pos:end="719:18">assert</name><argument_list pos:start="719:19" pos:end="719:64">(<argument pos:start="719:20" pos:end="719:63"><expr pos:start="719:20" pos:end="719:63"><name pos:start="719:20" pos:end="719:44"><name pos:start="719:20" pos:end="719:20">h</name><operator pos:start="719:21" pos:end="719:22">-&gt;</operator><name pos:start="719:23" pos:end="719:33">cur_pic_ptr</name><operator pos:start="719:34" pos:end="719:35">-&gt;</operator><name pos:start="719:36" pos:end="719:44">reference</name></name> <operator pos:start="719:46" pos:end="719:47">!=</operator> <name pos:start="719:49" pos:end="719:63">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="723:13" pos:end="723:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="725:13" pos:end="757:13"><if pos:start="725:13" pos:end="735:13">if <condition pos:start="725:16" pos:end="725:80">(<expr pos:start="725:17" pos:end="725:79"><operator pos:start="725:17" pos:end="725:17">!</operator><call pos:start="725:18" pos:end="725:33"><name pos:start="725:18" pos:end="725:30">FIELD_PICTURE</name><argument_list pos:start="725:31" pos:end="725:33">(<argument pos:start="725:32" pos:end="725:32"><expr pos:start="725:32" pos:end="725:32"><name pos:start="725:32" pos:end="725:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="725:35" pos:end="725:36">||</operator> <name pos:start="725:38" pos:end="725:57"><name pos:start="725:38" pos:end="725:38">h</name><operator pos:start="725:39" pos:end="725:40">-&gt;</operator><name pos:start="725:41" pos:end="725:57">picture_structure</name></name> <operator pos:start="725:59" pos:end="725:60">==</operator> <name pos:start="725:62" pos:end="725:79">last_pic_structure</name></expr>)</condition> <block pos:start="725:82" pos:end="735:13">{<block_content pos:start="731:17" pos:end="733:50">

                <comment type="block" pos:start="727:17" pos:end="729:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <expr_stmt pos:start="731:17" pos:end="731:38"><expr pos:start="731:17" pos:end="731:37"><name pos:start="731:17" pos:end="731:30"><name pos:start="731:17" pos:end="731:17">h</name><operator pos:start="731:18" pos:end="731:19">-&gt;</operator><name pos:start="731:20" pos:end="731:30">cur_pic_ptr</name></name> <operator pos:start="731:32" pos:end="731:32">=</operator> <name pos:start="731:34" pos:end="731:37">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="733:17" pos:end="733:50"><expr pos:start="733:17" pos:end="733:49"><name pos:start="733:17" pos:end="733:30"><name pos:start="733:17" pos:end="733:17">h</name><operator pos:start="733:18" pos:end="733:19">-&gt;</operator><name pos:start="733:20" pos:end="733:30">first_field</name></name> <operator pos:start="733:32" pos:end="733:32">=</operator> <call pos:start="733:34" pos:end="733:49"><name pos:start="733:34" pos:end="733:46">FIELD_PICTURE</name><argument_list pos:start="733:47" pos:end="733:49">(<argument pos:start="733:48" pos:end="733:48"><expr pos:start="733:48" pos:end="733:48"><name pos:start="733:48" pos:end="733:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="735:15" pos:end="757:13">else <block pos:start="735:20" pos:end="757:13">{<block_content pos:start="737:17" pos:end="755:17">

                <if_stmt pos:start="737:17" pos:end="755:17"><if pos:start="737:17" pos:end="749:17">if <condition pos:start="737:20" pos:end="737:62">(<expr pos:start="737:21" pos:end="737:61"><name pos:start="737:21" pos:end="737:45"><name pos:start="737:21" pos:end="737:21">h</name><operator pos:start="737:22" pos:end="737:23">-&gt;</operator><name pos:start="737:24" pos:end="737:34">cur_pic_ptr</name><operator pos:start="737:35" pos:end="737:36">-&gt;</operator><name pos:start="737:37" pos:end="737:45">frame_num</name></name> <operator pos:start="737:47" pos:end="737:48">!=</operator> <name pos:start="737:50" pos:end="737:61"><name pos:start="737:50" pos:end="737:50">h</name><operator pos:start="737:51" pos:end="737:52">-&gt;</operator><name pos:start="737:53" pos:end="737:61">frame_num</name></name></expr>)</condition> <block pos:start="737:64" pos:end="749:17">{<block_content pos:start="745:21" pos:end="747:42">

                    <comment type="block" pos:start="739:21" pos:end="743:60">/* This and the previous field had different frame_nums.

                     * Consider this field first in pair. Throw away previous

                     * one except for reference purposes. */</comment>

                    <expr_stmt pos:start="745:21" pos:end="745:39"><expr pos:start="745:21" pos:end="745:38"><name pos:start="745:21" pos:end="745:34"><name pos:start="745:21" pos:end="745:21">h</name><operator pos:start="745:22" pos:end="745:23">-&gt;</operator><name pos:start="745:24" pos:end="745:34">first_field</name></name> <operator pos:start="745:36" pos:end="745:36">=</operator> <literal type="number" pos:start="745:38" pos:end="745:38">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="747:21" pos:end="747:42"><expr pos:start="747:21" pos:end="747:41"><name pos:start="747:21" pos:end="747:34"><name pos:start="747:21" pos:end="747:21">h</name><operator pos:start="747:22" pos:end="747:23">-&gt;</operator><name pos:start="747:24" pos:end="747:34">cur_pic_ptr</name></name> <operator pos:start="747:36" pos:end="747:36">=</operator> <name pos:start="747:38" pos:end="747:41">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="749:19" pos:end="755:17">else <block pos:start="749:24" pos:end="755:17">{<block_content pos:start="753:21" pos:end="753:39">

                    <comment type="block" pos:start="751:21" pos:end="751:60">/* Second field in complementary pair */</comment>

                    <expr_stmt pos:start="753:21" pos:end="753:39"><expr pos:start="753:21" pos:end="753:38"><name pos:start="753:21" pos:end="753:34"><name pos:start="753:21" pos:end="753:21">h</name><operator pos:start="753:22" pos:end="753:23">-&gt;</operator><name pos:start="753:24" pos:end="753:34">first_field</name></name> <operator pos:start="753:36" pos:end="753:36">=</operator> <literal type="number" pos:start="753:38" pos:end="753:38">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="759:11" pos:end="765:9">else <block pos:start="759:16" pos:end="765:9">{<block_content pos:start="763:13" pos:end="763:46">

            <comment type="block" pos:start="761:13" pos:end="761:74">/* Frame or first field in a potentially complementary pair */</comment>

            <expr_stmt pos:start="763:13" pos:end="763:46"><expr pos:start="763:13" pos:end="763:45"><name pos:start="763:13" pos:end="763:26"><name pos:start="763:13" pos:end="763:13">h</name><operator pos:start="763:14" pos:end="763:15">-&gt;</operator><name pos:start="763:16" pos:end="763:26">first_field</name></name> <operator pos:start="763:28" pos:end="763:28">=</operator> <call pos:start="763:30" pos:end="763:45"><name pos:start="763:30" pos:end="763:42">FIELD_PICTURE</name><argument_list pos:start="763:43" pos:end="763:45">(<argument pos:start="763:44" pos:end="763:44"><expr pos:start="763:44" pos:end="763:44"><name pos:start="763:44" pos:end="763:44">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="769:9" pos:end="783:9"><if pos:start="769:9" pos:end="779:9">if <condition pos:start="769:12" pos:end="769:48">(<expr pos:start="769:13" pos:end="769:47"><operator pos:start="769:13" pos:end="769:13">!</operator><call pos:start="769:14" pos:end="769:29"><name pos:start="769:14" pos:end="769:26">FIELD_PICTURE</name><argument_list pos:start="769:27" pos:end="769:29">(<argument pos:start="769:28" pos:end="769:28"><expr pos:start="769:28" pos:end="769:28"><name pos:start="769:28" pos:end="769:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="769:31" pos:end="769:32">||</operator> <name pos:start="769:34" pos:end="769:47"><name pos:start="769:34" pos:end="769:34">h</name><operator pos:start="769:35" pos:end="769:36">-&gt;</operator><name pos:start="769:37" pos:end="769:47">first_field</name></name></expr>)</condition> <block pos:start="769:50" pos:end="779:9">{<block_content pos:start="771:13" pos:end="777:13">

            <if_stmt pos:start="771:13" pos:end="777:13"><if pos:start="771:13" pos:end="777:13">if <condition pos:start="771:16" pos:end="771:40">(<expr pos:start="771:17" pos:end="771:39"><call pos:start="771:17" pos:end="771:35"><name pos:start="771:17" pos:end="771:32">h264_frame_start</name><argument_list pos:start="771:33" pos:end="771:35">(<argument pos:start="771:34" pos:end="771:34"><expr pos:start="771:34" pos:end="771:34"><name pos:start="771:34" pos:end="771:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="771:37" pos:end="771:37">&lt;</operator> <literal type="number" pos:start="771:39" pos:end="771:39">0</literal></expr>)</condition> <block pos:start="771:42" pos:end="777:13">{<block_content pos:start="773:17" pos:end="775:43">

                <expr_stmt pos:start="773:17" pos:end="773:35"><expr pos:start="773:17" pos:end="773:34"><name pos:start="773:17" pos:end="773:30"><name pos:start="773:17" pos:end="773:17">h</name><operator pos:start="773:18" pos:end="773:19">-&gt;</operator><name pos:start="773:20" pos:end="773:30">first_field</name></name> <operator pos:start="773:32" pos:end="773:32">=</operator> <literal type="number" pos:start="773:34" pos:end="773:34">0</literal></expr>;</expr_stmt>

                <return pos:start="775:17" pos:end="775:43">return <expr pos:start="775:24" pos:end="775:42"><name pos:start="775:24" pos:end="775:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="779:11" pos:end="783:9">else <block pos:start="779:16" pos:end="783:9">{<block_content pos:start="781:13" pos:end="781:42">

            <expr_stmt pos:start="781:13" pos:end="781:42"><expr pos:start="781:13" pos:end="781:41"><call pos:start="781:13" pos:end="781:41"><name pos:start="781:13" pos:end="781:35">release_unused_pictures</name><argument_list pos:start="781:36" pos:end="781:41">(<argument pos:start="781:37" pos:end="781:37"><expr pos:start="781:37" pos:end="781:37"><name pos:start="781:37" pos:end="781:37">h</name></expr></argument>, <argument pos:start="781:40" pos:end="781:40"><expr pos:start="781:40" pos:end="781:40"><literal type="number" pos:start="781:40" pos:end="781:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="789:5" pos:end="789:52"><expr pos:start="789:5" pos:end="789:51"><call pos:start="789:5" pos:end="789:51"><name pos:start="789:5" pos:end="789:10">assert</name><argument_list pos:start="789:11" pos:end="789:51">(<argument pos:start="789:12" pos:end="789:50"><expr pos:start="789:12" pos:end="789:50"><name pos:start="789:12" pos:end="789:20"><name pos:start="789:12" pos:end="789:12">h</name><operator pos:start="789:13" pos:end="789:14">-&gt;</operator><name pos:start="789:15" pos:end="789:20">mb_num</name></name> <operator pos:start="789:22" pos:end="789:23">==</operator> <name pos:start="789:25" pos:end="789:35"><name pos:start="789:25" pos:end="789:25">h</name><operator pos:start="789:26" pos:end="789:27">-&gt;</operator><name pos:start="789:28" pos:end="789:35">mb_width</name></name> <operator pos:start="789:37" pos:end="789:37">*</operator> <name pos:start="789:39" pos:end="789:50"><name pos:start="789:39" pos:end="789:39">h</name><operator pos:start="789:40" pos:end="789:41">-&gt;</operator><name pos:start="789:42" pos:end="789:50">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="791:5" pos:end="799:5"><if pos:start="791:5" pos:end="799:5">if <condition pos:start="791:8" pos:end="793:39">(<expr pos:start="791:9" pos:end="793:38"><name pos:start="791:9" pos:end="791:25">first_mb_in_slice</name> <operator pos:start="791:27" pos:end="791:28">&lt;&lt;</operator> <call pos:start="791:30" pos:end="791:54"><name pos:start="791:30" pos:end="791:51">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="791:52" pos:end="791:54">(<argument pos:start="791:53" pos:end="791:53"><expr pos:start="791:53" pos:end="791:53"><name pos:start="791:53" pos:end="791:53">h</name></expr></argument>)</argument_list></call> <operator pos:start="791:56" pos:end="791:57">&gt;=</operator> <name pos:start="791:59" pos:end="791:67"><name pos:start="791:59" pos:end="791:59">h</name><operator pos:start="791:60" pos:end="791:61">-&gt;</operator><name pos:start="791:62" pos:end="791:67">mb_num</name></name> <operator pos:start="791:69" pos:end="791:70">||</operator>

        <name pos:start="793:9" pos:end="793:25">first_mb_in_slice</name> <operator pos:start="793:27" pos:end="793:28">&gt;=</operator> <name pos:start="793:30" pos:end="793:38"><name pos:start="793:30" pos:end="793:30">h</name><operator pos:start="793:31" pos:end="793:32">-&gt;</operator><name pos:start="793:33" pos:end="793:38">mb_num</name></name></expr>)</condition> <block pos:start="793:41" pos:end="799:5">{<block_content pos:start="795:9" pos:end="797:35">

        <expr_stmt pos:start="795:9" pos:end="795:71"><expr pos:start="795:9" pos:end="795:70"><call pos:start="795:9" pos:end="795:70"><name pos:start="795:9" pos:end="795:14">av_log</name><argument_list pos:start="795:15" pos:end="795:70">(<argument pos:start="795:16" pos:end="795:23"><expr pos:start="795:16" pos:end="795:23"><name pos:start="795:16" pos:end="795:23"><name pos:start="795:16" pos:end="795:16">h</name><operator pos:start="795:17" pos:end="795:18">-&gt;</operator><name pos:start="795:19" pos:end="795:23">avctx</name></name></expr></argument>, <argument pos:start="795:26" pos:end="795:37"><expr pos:start="795:26" pos:end="795:37"><name pos:start="795:26" pos:end="795:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="795:40" pos:end="795:69"><expr pos:start="795:40" pos:end="795:69"><literal type="string" pos:start="795:40" pos:end="795:69">"first_mb_in_slice overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="797:9" pos:end="797:35">return <expr pos:start="797:16" pos:end="797:34"><name pos:start="797:16" pos:end="797:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="801:5" pos:end="801:66"><expr pos:start="801:5" pos:end="801:65"><name pos:start="801:5" pos:end="801:19"><name pos:start="801:5" pos:end="801:6">sl</name><operator pos:start="801:7" pos:end="801:8">-&gt;</operator><name pos:start="801:9" pos:end="801:19">resync_mb_x</name></name> <operator pos:start="801:21" pos:end="801:21">=</operator> <name pos:start="801:23" pos:end="801:30"><name pos:start="801:23" pos:end="801:24">sl</name><operator pos:start="801:25" pos:end="801:26">-&gt;</operator><name pos:start="801:27" pos:end="801:30">mb_x</name></name> <operator pos:start="801:32" pos:end="801:32">=</operator>  <name pos:start="801:35" pos:end="801:51">first_mb_in_slice</name> <operator pos:start="801:53" pos:end="801:53">%</operator> <name pos:start="801:55" pos:end="801:65"><name pos:start="801:55" pos:end="801:55">h</name><operator pos:start="801:56" pos:end="801:57">-&gt;</operator><name pos:start="801:58" pos:end="801:65">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="803:5" pos:end="805:59"><expr pos:start="803:5" pos:end="805:58"><name pos:start="803:5" pos:end="803:19"><name pos:start="803:5" pos:end="803:6">sl</name><operator pos:start="803:7" pos:end="803:8">-&gt;</operator><name pos:start="803:9" pos:end="803:19">resync_mb_y</name></name> <operator pos:start="803:21" pos:end="803:21">=</operator> <name pos:start="803:23" pos:end="803:30"><name pos:start="803:23" pos:end="803:24">sl</name><operator pos:start="803:25" pos:end="803:26">-&gt;</operator><name pos:start="803:27" pos:end="803:30">mb_y</name></name> <operator pos:start="803:32" pos:end="803:32">=</operator> <operator pos:start="803:34" pos:end="803:34">(</operator><name pos:start="803:35" pos:end="803:51">first_mb_in_slice</name> <operator pos:start="803:53" pos:end="803:53">/</operator> <name pos:start="803:55" pos:end="803:65"><name pos:start="803:55" pos:end="803:55">h</name><operator pos:start="803:56" pos:end="803:57">-&gt;</operator><name pos:start="803:58" pos:end="803:65">mb_width</name></name><operator pos:start="803:66" pos:end="803:66">)</operator> <operator pos:start="803:68" pos:end="803:69">&lt;&lt;</operator>

                                 <call pos:start="805:34" pos:end="805:58"><name pos:start="805:34" pos:end="805:55">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="805:56" pos:end="805:58">(<argument pos:start="805:57" pos:end="805:57"><expr pos:start="805:57" pos:end="805:57"><name pos:start="805:57" pos:end="805:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="807:5" pos:end="809:50"><if pos:start="807:5" pos:end="809:50">if <condition pos:start="807:8" pos:end="807:50">(<expr pos:start="807:9" pos:end="807:49"><name pos:start="807:9" pos:end="807:28"><name pos:start="807:9" pos:end="807:9">h</name><operator pos:start="807:10" pos:end="807:11">-&gt;</operator><name pos:start="807:12" pos:end="807:28">picture_structure</name></name> <operator pos:start="807:30" pos:end="807:31">==</operator> <name pos:start="807:33" pos:end="807:49">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="809:9" pos:end="809:50"><block_content pos:start="809:9" pos:end="809:50">

        <expr_stmt pos:start="809:9" pos:end="809:50"><expr pos:start="809:9" pos:end="809:49"><name pos:start="809:9" pos:end="809:23"><name pos:start="809:9" pos:end="809:10">sl</name><operator pos:start="809:11" pos:end="809:12">-&gt;</operator><name pos:start="809:13" pos:end="809:23">resync_mb_y</name></name> <operator pos:start="809:25" pos:end="809:25">=</operator> <name pos:start="809:27" pos:end="809:34"><name pos:start="809:27" pos:end="809:28">sl</name><operator pos:start="809:29" pos:end="809:30">-&gt;</operator><name pos:start="809:31" pos:end="809:34">mb_y</name></name> <operator pos:start="809:36" pos:end="809:36">=</operator> <name pos:start="809:38" pos:end="809:45"><name pos:start="809:38" pos:end="809:39">sl</name><operator pos:start="809:40" pos:end="809:41">-&gt;</operator><name pos:start="809:42" pos:end="809:45">mb_y</name></name> <operator pos:start="809:47" pos:end="809:47">+</operator> <literal type="number" pos:start="809:49" pos:end="809:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="811:5" pos:end="811:36"><expr pos:start="811:5" pos:end="811:35"><call pos:start="811:5" pos:end="811:35"><name pos:start="811:5" pos:end="811:10">assert</name><argument_list pos:start="811:11" pos:end="811:35">(<argument pos:start="811:12" pos:end="811:34"><expr pos:start="811:12" pos:end="811:34"><name pos:start="811:12" pos:end="811:19"><name pos:start="811:12" pos:end="811:13">sl</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:19">mb_y</name></name> <operator pos:start="811:21" pos:end="811:21">&lt;</operator> <name pos:start="811:23" pos:end="811:34"><name pos:start="811:23" pos:end="811:23">h</name><operator pos:start="811:24" pos:end="811:25">-&gt;</operator><name pos:start="811:26" pos:end="811:34">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="815:5" pos:end="827:5"><if pos:start="815:5" pos:end="821:5">if <condition pos:start="815:8" pos:end="815:43">(<expr pos:start="815:9" pos:end="815:42"><name pos:start="815:9" pos:end="815:28"><name pos:start="815:9" pos:end="815:9">h</name><operator pos:start="815:10" pos:end="815:11">-&gt;</operator><name pos:start="815:12" pos:end="815:28">picture_structure</name></name> <operator pos:start="815:30" pos:end="815:31">==</operator> <name pos:start="815:33" pos:end="815:42">PICT_FRAME</name></expr>)</condition> <block pos:start="815:45" pos:end="821:5">{<block_content pos:start="817:9" pos:end="819:55">

        <expr_stmt pos:start="817:9" pos:end="817:39"><expr pos:start="817:9" pos:end="817:38"><name pos:start="817:9" pos:end="817:23"><name pos:start="817:9" pos:end="817:9">h</name><operator pos:start="817:10" pos:end="817:11">-&gt;</operator><name pos:start="817:12" pos:end="817:23">curr_pic_num</name></name> <operator pos:start="817:25" pos:end="817:25">=</operator> <name pos:start="817:27" pos:end="817:38"><name pos:start="817:27" pos:end="817:27">h</name><operator pos:start="817:28" pos:end="817:29">-&gt;</operator><name pos:start="817:30" pos:end="817:38">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:55"><expr pos:start="819:9" pos:end="819:54"><name pos:start="819:9" pos:end="819:22"><name pos:start="819:9" pos:end="819:9">h</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:22">max_pic_num</name></name>  <operator pos:start="819:25" pos:end="819:25">=</operator> <literal type="number" pos:start="819:27" pos:end="819:27">1</literal> <operator pos:start="819:29" pos:end="819:30">&lt;&lt;</operator> <name pos:start="819:32" pos:end="819:54"><name pos:start="819:32" pos:end="819:34">sps</name><operator pos:start="819:35" pos:end="819:36">-&gt;</operator><name pos:start="819:37" pos:end="819:54">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="821:7" pos:end="827:5">else <block pos:start="821:12" pos:end="827:5">{<block_content pos:start="823:9" pos:end="825:61">

        <expr_stmt pos:start="823:9" pos:end="823:47"><expr pos:start="823:9" pos:end="823:46"><name pos:start="823:9" pos:end="823:23"><name pos:start="823:9" pos:end="823:9">h</name><operator pos:start="823:10" pos:end="823:11">-&gt;</operator><name pos:start="823:12" pos:end="823:23">curr_pic_num</name></name> <operator pos:start="823:25" pos:end="823:25">=</operator> <literal type="number" pos:start="823:27" pos:end="823:27">2</literal> <operator pos:start="823:29" pos:end="823:29">*</operator> <name pos:start="823:31" pos:end="823:42"><name pos:start="823:31" pos:end="823:31">h</name><operator pos:start="823:32" pos:end="823:33">-&gt;</operator><name pos:start="823:34" pos:end="823:42">frame_num</name></name> <operator pos:start="823:44" pos:end="823:44">+</operator> <literal type="number" pos:start="823:46" pos:end="823:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="825:9" pos:end="825:61"><expr pos:start="825:9" pos:end="825:60"><name pos:start="825:9" pos:end="825:22"><name pos:start="825:9" pos:end="825:9">h</name><operator pos:start="825:10" pos:end="825:11">-&gt;</operator><name pos:start="825:12" pos:end="825:22">max_pic_num</name></name>  <operator pos:start="825:25" pos:end="825:25">=</operator> <literal type="number" pos:start="825:27" pos:end="825:27">1</literal> <operator pos:start="825:29" pos:end="825:30">&lt;&lt;</operator> <operator pos:start="825:32" pos:end="825:32">(</operator><name pos:start="825:33" pos:end="825:55"><name pos:start="825:33" pos:end="825:35">sps</name><operator pos:start="825:36" pos:end="825:37">-&gt;</operator><name pos:start="825:38" pos:end="825:55">log2_max_frame_num</name></name> <operator pos:start="825:57" pos:end="825:57">+</operator> <literal type="number" pos:start="825:59" pos:end="825:59">1</literal><operator pos:start="825:60" pos:end="825:60">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="831:5" pos:end="833:31"><if pos:start="831:5" pos:end="833:31">if <condition pos:start="831:8" pos:end="831:42">(<expr pos:start="831:9" pos:end="831:41"><name pos:start="831:9" pos:end="831:24"><name pos:start="831:9" pos:end="831:9">h</name><operator pos:start="831:10" pos:end="831:11">-&gt;</operator><name pos:start="831:12" pos:end="831:24">nal_unit_type</name></name> <operator pos:start="831:26" pos:end="831:27">==</operator> <name pos:start="831:29" pos:end="831:41">NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="833:9" pos:end="833:31"><block_content pos:start="833:9" pos:end="833:31">

        <expr_stmt pos:start="833:9" pos:end="833:31"><expr pos:start="833:9" pos:end="833:30"><call pos:start="833:9" pos:end="833:30"><name pos:start="833:9" pos:end="833:21">get_ue_golomb</name><argument_list pos:start="833:22" pos:end="833:30">(<argument pos:start="833:23" pos:end="833:29"><expr pos:start="833:23" pos:end="833:29"><operator pos:start="833:23" pos:end="833:23">&amp;</operator><name pos:start="833:24" pos:end="833:29"><name pos:start="833:24" pos:end="833:25">sl</name><operator pos:start="833:26" pos:end="833:27">-&gt;</operator><name pos:start="833:28" pos:end="833:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="833:33" pos:end="833:48">/* idr_pic_id */</comment>



    <if_stmt pos:start="837:5" pos:end="859:5"><if pos:start="837:5" pos:end="859:5">if <condition pos:start="837:8" pos:end="837:27">(<expr pos:start="837:9" pos:end="837:26"><name pos:start="837:9" pos:end="837:21"><name pos:start="837:9" pos:end="837:11">sps</name><operator pos:start="837:12" pos:end="837:13">-&gt;</operator><name pos:start="837:14" pos:end="837:21">poc_type</name></name> <operator pos:start="837:23" pos:end="837:24">==</operator> <literal type="number" pos:start="837:26" pos:end="837:26">0</literal></expr>)</condition> <block pos:start="837:29" pos:end="859:5">{<block_content pos:start="839:9" pos:end="857:9">

        <decl_stmt pos:start="839:9" pos:end="839:63"><decl pos:start="839:9" pos:end="839:62"><type pos:start="839:9" pos:end="839:11"><name pos:start="839:9" pos:end="839:11">int</name></type> <name pos:start="839:13" pos:end="839:19">poc_lsb</name> <init pos:start="839:21" pos:end="839:62">= <expr pos:start="839:23" pos:end="839:62"><call pos:start="839:23" pos:end="839:62"><name pos:start="839:23" pos:end="839:30">get_bits</name><argument_list pos:start="839:31" pos:end="839:62">(<argument pos:start="839:32" pos:end="839:38"><expr pos:start="839:32" pos:end="839:38"><operator pos:start="839:32" pos:end="839:32">&amp;</operator><name pos:start="839:33" pos:end="839:38"><name pos:start="839:33" pos:end="839:34">sl</name><operator pos:start="839:35" pos:end="839:36">-&gt;</operator><name pos:start="839:37" pos:end="839:38">gb</name></name></expr></argument>, <argument pos:start="839:41" pos:end="839:61"><expr pos:start="839:41" pos:end="839:61"><name pos:start="839:41" pos:end="839:61"><name pos:start="839:41" pos:end="839:43">sps</name><operator pos:start="839:44" pos:end="839:45">-&gt;</operator><name pos:start="839:46" pos:end="839:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="843:9" pos:end="845:33"><if pos:start="843:9" pos:end="845:33">if <condition pos:start="843:12" pos:end="843:31">(<expr pos:start="843:13" pos:end="843:30"><operator pos:start="843:13" pos:end="843:13">!</operator><name pos:start="843:14" pos:end="843:30"><name pos:start="843:14" pos:end="843:14">h</name><operator pos:start="843:15" pos:end="843:16">-&gt;</operator><name pos:start="843:17" pos:end="843:30">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="845:13" pos:end="845:33"><block_content pos:start="845:13" pos:end="845:33">

            <expr_stmt pos:start="845:13" pos:end="845:33"><expr pos:start="845:13" pos:end="845:32"><name pos:start="845:13" pos:end="845:22"><name pos:start="845:13" pos:end="845:13">h</name><operator pos:start="845:14" pos:end="845:15">-&gt;</operator><name pos:start="845:16" pos:end="845:22">poc_lsb</name></name> <operator pos:start="845:24" pos:end="845:24">=</operator> <name pos:start="845:26" pos:end="845:32">poc_lsb</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="849:9" pos:end="857:9"><if pos:start="849:9" pos:end="857:9">if <condition pos:start="849:12" pos:end="849:78">(<expr pos:start="849:13" pos:end="849:77"><name pos:start="849:13" pos:end="849:34"><name pos:start="849:13" pos:end="849:15">pps</name><operator pos:start="849:16" pos:end="849:17">-&gt;</operator><name pos:start="849:18" pos:end="849:34">pic_order_present</name></name> <operator pos:start="849:36" pos:end="849:37">==</operator> <literal type="number" pos:start="849:39" pos:end="849:39">1</literal> <operator pos:start="849:41" pos:end="849:42">&amp;&amp;</operator> <name pos:start="849:44" pos:end="849:63"><name pos:start="849:44" pos:end="849:44">h</name><operator pos:start="849:45" pos:end="849:46">-&gt;</operator><name pos:start="849:47" pos:end="849:63">picture_structure</name></name> <operator pos:start="849:65" pos:end="849:66">==</operator> <name pos:start="849:68" pos:end="849:77">PICT_FRAME</name></expr>)</condition> <block pos:start="849:80" pos:end="857:9">{<block_content pos:start="851:13" pos:end="855:55">

            <decl_stmt pos:start="851:13" pos:end="851:58"><decl pos:start="851:13" pos:end="851:57"><type pos:start="851:13" pos:end="851:15"><name pos:start="851:13" pos:end="851:15">int</name></type> <name pos:start="851:17" pos:end="851:32">delta_poc_bottom</name> <init pos:start="851:34" pos:end="851:57">= <expr pos:start="851:36" pos:end="851:57"><call pos:start="851:36" pos:end="851:57"><name pos:start="851:36" pos:end="851:48">get_se_golomb</name><argument_list pos:start="851:49" pos:end="851:57">(<argument pos:start="851:50" pos:end="851:56"><expr pos:start="851:50" pos:end="851:56"><operator pos:start="851:50" pos:end="851:50">&amp;</operator><name pos:start="851:51" pos:end="851:56"><name pos:start="851:51" pos:end="851:52">sl</name><operator pos:start="851:53" pos:end="851:54">-&gt;</operator><name pos:start="851:55" pos:end="851:56">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="853:13" pos:end="855:55"><if pos:start="853:13" pos:end="855:55">if <condition pos:start="853:16" pos:end="853:35">(<expr pos:start="853:17" pos:end="853:34"><operator pos:start="853:17" pos:end="853:17">!</operator><name pos:start="853:18" pos:end="853:34"><name pos:start="853:18" pos:end="853:18">h</name><operator pos:start="853:19" pos:end="853:20">-&gt;</operator><name pos:start="853:21" pos:end="853:34">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="855:17" pos:end="855:55"><block_content pos:start="855:17" pos:end="855:55">

                <expr_stmt pos:start="855:17" pos:end="855:55"><expr pos:start="855:17" pos:end="855:54"><name pos:start="855:17" pos:end="855:35"><name pos:start="855:17" pos:end="855:17">h</name><operator pos:start="855:18" pos:end="855:19">-&gt;</operator><name pos:start="855:20" pos:end="855:35">delta_poc_bottom</name></name> <operator pos:start="855:37" pos:end="855:37">=</operator> <name pos:start="855:39" pos:end="855:54">delta_poc_bottom</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="863:5" pos:end="887:5"><if pos:start="863:5" pos:end="887:5">if <condition pos:start="863:8" pos:end="863:69">(<expr pos:start="863:9" pos:end="863:68"><name pos:start="863:9" pos:end="863:21"><name pos:start="863:9" pos:end="863:11">sps</name><operator pos:start="863:12" pos:end="863:13">-&gt;</operator><name pos:start="863:14" pos:end="863:21">poc_type</name></name> <operator pos:start="863:23" pos:end="863:24">==</operator> <literal type="number" pos:start="863:26" pos:end="863:26">1</literal> <operator pos:start="863:28" pos:end="863:29">&amp;&amp;</operator> <operator pos:start="863:31" pos:end="863:31">!</operator><name pos:start="863:32" pos:end="863:68"><name pos:start="863:32" pos:end="863:34">sps</name><operator pos:start="863:35" pos:end="863:36">-&gt;</operator><name pos:start="863:37" pos:end="863:68">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="863:71" pos:end="887:5">{<block_content pos:start="865:9" pos:end="885:9">

        <decl_stmt pos:start="865:9" pos:end="865:47"><decl pos:start="865:9" pos:end="865:46"><type pos:start="865:9" pos:end="865:11"><name pos:start="865:9" pos:end="865:11">int</name></type> <name pos:start="865:13" pos:end="865:21">delta_poc</name> <init pos:start="865:23" pos:end="865:46">= <expr pos:start="865:25" pos:end="865:46"><call pos:start="865:25" pos:end="865:46"><name pos:start="865:25" pos:end="865:37">get_se_golomb</name><argument_list pos:start="865:38" pos:end="865:46">(<argument pos:start="865:39" pos:end="865:45"><expr pos:start="865:39" pos:end="865:45"><operator pos:start="865:39" pos:end="865:39">&amp;</operator><name pos:start="865:40" pos:end="865:45"><name pos:start="865:40" pos:end="865:41">sl</name><operator pos:start="865:42" pos:end="865:43">-&gt;</operator><name pos:start="865:44" pos:end="865:45">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="869:9" pos:end="871:40"><if pos:start="869:9" pos:end="871:40">if <condition pos:start="869:12" pos:end="869:31">(<expr pos:start="869:13" pos:end="869:30"><operator pos:start="869:13" pos:end="869:13">!</operator><name pos:start="869:14" pos:end="869:30"><name pos:start="869:14" pos:end="869:14">h</name><operator pos:start="869:15" pos:end="869:16">-&gt;</operator><name pos:start="869:17" pos:end="869:30">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="871:13" pos:end="871:40"><block_content pos:start="871:13" pos:end="871:40">

            <expr_stmt pos:start="871:13" pos:end="871:40"><expr pos:start="871:13" pos:end="871:39"><name pos:start="871:13" pos:end="871:27"><name pos:start="871:13" pos:end="871:13">h</name><operator pos:start="871:14" pos:end="871:15">-&gt;</operator><name pos:start="871:16" pos:end="871:24">delta_poc</name><index pos:start="871:25" pos:end="871:27">[<expr pos:start="871:26" pos:end="871:26"><literal type="number" pos:start="871:26" pos:end="871:26">0</literal></expr>]</index></name> <operator pos:start="871:29" pos:end="871:29">=</operator> <name pos:start="871:31" pos:end="871:39">delta_poc</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="875:9" pos:end="885:9"><if pos:start="875:9" pos:end="885:9">if <condition pos:start="875:12" pos:end="875:78">(<expr pos:start="875:13" pos:end="875:77"><name pos:start="875:13" pos:end="875:34"><name pos:start="875:13" pos:end="875:15">pps</name><operator pos:start="875:16" pos:end="875:17">-&gt;</operator><name pos:start="875:18" pos:end="875:34">pic_order_present</name></name> <operator pos:start="875:36" pos:end="875:37">==</operator> <literal type="number" pos:start="875:39" pos:end="875:39">1</literal> <operator pos:start="875:41" pos:end="875:42">&amp;&amp;</operator> <name pos:start="875:44" pos:end="875:63"><name pos:start="875:44" pos:end="875:44">h</name><operator pos:start="875:45" pos:end="875:46">-&gt;</operator><name pos:start="875:47" pos:end="875:63">picture_structure</name></name> <operator pos:start="875:65" pos:end="875:66">==</operator> <name pos:start="875:68" pos:end="875:77">PICT_FRAME</name></expr>)</condition> <block pos:start="875:80" pos:end="885:9">{<block_content pos:start="877:13" pos:end="883:44">

            <expr_stmt pos:start="877:13" pos:end="877:47"><expr pos:start="877:13" pos:end="877:46"><name pos:start="877:13" pos:end="877:21">delta_poc</name> <operator pos:start="877:23" pos:end="877:23">=</operator> <call pos:start="877:25" pos:end="877:46"><name pos:start="877:25" pos:end="877:37">get_se_golomb</name><argument_list pos:start="877:38" pos:end="877:46">(<argument pos:start="877:39" pos:end="877:45"><expr pos:start="877:39" pos:end="877:45"><operator pos:start="877:39" pos:end="877:39">&amp;</operator><name pos:start="877:40" pos:end="877:45"><name pos:start="877:40" pos:end="877:41">sl</name><operator pos:start="877:42" pos:end="877:43">-&gt;</operator><name pos:start="877:44" pos:end="877:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="881:13" pos:end="883:44"><if pos:start="881:13" pos:end="883:44">if <condition pos:start="881:16" pos:end="881:35">(<expr pos:start="881:17" pos:end="881:34"><operator pos:start="881:17" pos:end="881:17">!</operator><name pos:start="881:18" pos:end="881:34"><name pos:start="881:18" pos:end="881:18">h</name><operator pos:start="881:19" pos:end="881:20">-&gt;</operator><name pos:start="881:21" pos:end="881:34">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="883:17" pos:end="883:44"><block_content pos:start="883:17" pos:end="883:44">

                <expr_stmt pos:start="883:17" pos:end="883:44"><expr pos:start="883:17" pos:end="883:43"><name pos:start="883:17" pos:end="883:31"><name pos:start="883:17" pos:end="883:17">h</name><operator pos:start="883:18" pos:end="883:19">-&gt;</operator><name pos:start="883:20" pos:end="883:28">delta_poc</name><index pos:start="883:29" pos:end="883:31">[<expr pos:start="883:30" pos:end="883:30"><literal type="number" pos:start="883:30" pos:end="883:30">1</literal></expr>]</index></name> <operator pos:start="883:33" pos:end="883:33">=</operator> <name pos:start="883:35" pos:end="883:43">delta_poc</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="891:5" pos:end="893:72"><if pos:start="891:5" pos:end="893:72">if <condition pos:start="891:8" pos:end="891:27">(<expr pos:start="891:9" pos:end="891:26"><operator pos:start="891:9" pos:end="891:9">!</operator><name pos:start="891:10" pos:end="891:26"><name pos:start="891:10" pos:end="891:10">h</name><operator pos:start="891:11" pos:end="891:12">-&gt;</operator><name pos:start="891:13" pos:end="891:26">setup_finished</name></name></expr>)</condition><block type="pseudo" pos:start="893:9" pos:end="893:72"><block_content pos:start="893:9" pos:end="893:72">

        <expr_stmt pos:start="893:9" pos:end="893:72"><expr pos:start="893:9" pos:end="893:71"><call pos:start="893:9" pos:end="893:71"><name pos:start="893:9" pos:end="893:19">ff_init_poc</name><argument_list pos:start="893:20" pos:end="893:71">(<argument pos:start="893:21" pos:end="893:21"><expr pos:start="893:21" pos:end="893:21"><name pos:start="893:21" pos:end="893:21">h</name></expr></argument>, <argument pos:start="893:24" pos:end="893:48"><expr pos:start="893:24" pos:end="893:48"><name pos:start="893:24" pos:end="893:48"><name pos:start="893:24" pos:end="893:24">h</name><operator pos:start="893:25" pos:end="893:26">-&gt;</operator><name pos:start="893:27" pos:end="893:37">cur_pic_ptr</name><operator pos:start="893:38" pos:end="893:39">-&gt;</operator><name pos:start="893:40" pos:end="893:48">field_poc</name></name></expr></argument>, <argument pos:start="893:51" pos:end="893:70"><expr pos:start="893:51" pos:end="893:70"><operator pos:start="893:51" pos:end="893:51">&amp;</operator><name pos:start="893:52" pos:end="893:70"><name pos:start="893:52" pos:end="893:52">h</name><operator pos:start="893:53" pos:end="893:54">-&gt;</operator><name pos:start="893:55" pos:end="893:65">cur_pic_ptr</name><operator pos:start="893:66" pos:end="893:67">-&gt;</operator><name pos:start="893:68" pos:end="893:70">poc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="897:5" pos:end="899:57"><if pos:start="897:5" pos:end="899:57">if <condition pos:start="897:8" pos:end="897:39">(<expr pos:start="897:9" pos:end="897:38"><name pos:start="897:9" pos:end="897:38"><name pos:start="897:9" pos:end="897:11">pps</name><operator pos:start="897:12" pos:end="897:13">-&gt;</operator><name pos:start="897:14" pos:end="897:38">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="899:9" pos:end="899:57"><block_content pos:start="899:9" pos:end="899:57">

        <expr_stmt pos:start="899:9" pos:end="899:57"><expr pos:start="899:9" pos:end="899:56"><name pos:start="899:9" pos:end="899:31"><name pos:start="899:9" pos:end="899:10">sl</name><operator pos:start="899:11" pos:end="899:12">-&gt;</operator><name pos:start="899:13" pos:end="899:31">redundant_pic_count</name></name> <operator pos:start="899:33" pos:end="899:33">=</operator> <call pos:start="899:35" pos:end="899:56"><name pos:start="899:35" pos:end="899:47">get_ue_golomb</name><argument_list pos:start="899:48" pos:end="899:56">(<argument pos:start="899:49" pos:end="899:55"><expr pos:start="899:49" pos:end="899:55"><operator pos:start="899:49" pos:end="899:49">&amp;</operator><name pos:start="899:50" pos:end="899:55"><name pos:start="899:50" pos:end="899:51">sl</name><operator pos:start="899:52" pos:end="899:53">-&gt;</operator><name pos:start="899:54" pos:end="899:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="903:5" pos:end="905:56"><if pos:start="903:5" pos:end="905:56">if <condition pos:start="903:8" pos:end="903:48">(<expr pos:start="903:9" pos:end="903:47"><name pos:start="903:9" pos:end="903:26"><name pos:start="903:9" pos:end="903:10">sl</name><operator pos:start="903:11" pos:end="903:12">-&gt;</operator><name pos:start="903:13" pos:end="903:26">slice_type_nos</name></name> <operator pos:start="903:28" pos:end="903:29">==</operator> <name pos:start="903:31" pos:end="903:47">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="905:9" pos:end="905:56"><block_content pos:start="905:9" pos:end="905:56">

        <expr_stmt pos:start="905:9" pos:end="905:56"><expr pos:start="905:9" pos:end="905:55"><name pos:start="905:9" pos:end="905:34"><name pos:start="905:9" pos:end="905:10">sl</name><operator pos:start="905:11" pos:end="905:12">-&gt;</operator><name pos:start="905:13" pos:end="905:34">direct_spatial_mv_pred</name></name> <operator pos:start="905:36" pos:end="905:36">=</operator> <call pos:start="905:38" pos:end="905:55"><name pos:start="905:38" pos:end="905:46">get_bits1</name><argument_list pos:start="905:47" pos:end="905:55">(<argument pos:start="905:48" pos:end="905:54"><expr pos:start="905:48" pos:end="905:54"><operator pos:start="905:48" pos:end="905:48">&amp;</operator><name pos:start="905:49" pos:end="905:54"><name pos:start="905:49" pos:end="905:50">sl</name><operator pos:start="905:51" pos:end="905:52">-&gt;</operator><name pos:start="905:53" pos:end="905:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="909:5" pos:end="913:56"><expr pos:start="909:5" pos:end="913:55"><name pos:start="909:5" pos:end="909:7">ret</name> <operator pos:start="909:9" pos:end="909:9">=</operator> <call pos:start="909:11" pos:end="913:55"><name pos:start="909:11" pos:end="909:33">ff_h264_parse_ref_count</name><argument_list pos:start="909:34" pos:end="913:55">(<argument pos:start="909:35" pos:end="909:49"><expr pos:start="909:35" pos:end="909:49"><operator pos:start="909:35" pos:end="909:35">&amp;</operator><name pos:start="909:36" pos:end="909:49"><name pos:start="909:36" pos:end="909:37">sl</name><operator pos:start="909:38" pos:end="909:39">-&gt;</operator><name pos:start="909:40" pos:end="909:49">list_count</name></name></expr></argument>, <argument pos:start="909:52" pos:end="909:64"><expr pos:start="909:52" pos:end="909:64"><name pos:start="909:52" pos:end="909:64"><name pos:start="909:52" pos:end="909:53">sl</name><operator pos:start="909:54" pos:end="909:55">-&gt;</operator><name pos:start="909:56" pos:end="909:64">ref_count</name></name></expr></argument>,

                                  <argument pos:start="911:35" pos:end="911:41"><expr pos:start="911:35" pos:end="911:41"><operator pos:start="911:35" pos:end="911:35">&amp;</operator><name pos:start="911:36" pos:end="911:41"><name pos:start="911:36" pos:end="911:37">sl</name><operator pos:start="911:38" pos:end="911:39">-&gt;</operator><name pos:start="911:40" pos:end="911:41">gb</name></name></expr></argument>, <argument pos:start="911:44" pos:end="911:46"><expr pos:start="911:44" pos:end="911:46"><name pos:start="911:44" pos:end="911:46">pps</name></expr></argument>, <argument pos:start="911:49" pos:end="911:66"><expr pos:start="911:49" pos:end="911:66"><name pos:start="911:49" pos:end="911:66"><name pos:start="911:49" pos:end="911:50">sl</name><operator pos:start="911:51" pos:end="911:52">-&gt;</operator><name pos:start="911:53" pos:end="911:66">slice_type_nos</name></name></expr></argument>,

                                  <argument pos:start="913:35" pos:end="913:54"><expr pos:start="913:35" pos:end="913:54"><name pos:start="913:35" pos:end="913:54"><name pos:start="913:35" pos:end="913:35">h</name><operator pos:start="913:36" pos:end="913:37">-&gt;</operator><name pos:start="913:38" pos:end="913:54">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="915:5" pos:end="917:19"><if pos:start="915:5" pos:end="917:19">if <condition pos:start="915:8" pos:end="915:16">(<expr pos:start="915:9" pos:end="915:15"><name pos:start="915:9" pos:end="915:11">ret</name> <operator pos:start="915:13" pos:end="915:13">&lt;</operator> <literal type="number" pos:start="915:15" pos:end="915:15">0</literal></expr>)</condition><block type="pseudo" pos:start="917:9" pos:end="917:19"><block_content pos:start="917:9" pos:end="917:19">

        <return pos:start="917:9" pos:end="917:19">return <expr pos:start="917:16" pos:end="917:18"><name pos:start="917:16" pos:end="917:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="921:5" pos:end="933:5"><if pos:start="921:5" pos:end="933:5">if <condition pos:start="921:8" pos:end="921:48">(<expr pos:start="921:9" pos:end="921:47"><name pos:start="921:9" pos:end="921:26"><name pos:start="921:9" pos:end="921:10">sl</name><operator pos:start="921:11" pos:end="921:12">-&gt;</operator><name pos:start="921:13" pos:end="921:26">slice_type_nos</name></name> <operator pos:start="921:28" pos:end="921:29">!=</operator> <name pos:start="921:31" pos:end="921:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="921:50" pos:end="933:5">{<block_content pos:start="923:8" pos:end="931:8">

       <expr_stmt pos:start="923:8" pos:end="923:59"><expr pos:start="923:8" pos:end="923:58"><name pos:start="923:8" pos:end="923:10">ret</name> <operator pos:start="923:12" pos:end="923:12">=</operator> <call pos:start="923:14" pos:end="923:58"><name pos:start="923:14" pos:end="923:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="923:52" pos:end="923:58">(<argument pos:start="923:53" pos:end="923:53"><expr pos:start="923:53" pos:end="923:53"><name pos:start="923:53" pos:end="923:53">h</name></expr></argument>, <argument pos:start="923:56" pos:end="923:57"><expr pos:start="923:56" pos:end="923:57"><name pos:start="923:56" pos:end="923:57">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="925:8" pos:end="931:8"><if pos:start="925:8" pos:end="931:8">if <condition pos:start="925:11" pos:end="925:19">(<expr pos:start="925:12" pos:end="925:18"><name pos:start="925:12" pos:end="925:14">ret</name> <operator pos:start="925:16" pos:end="925:16">&lt;</operator> <literal type="number" pos:start="925:18" pos:end="925:18">0</literal></expr>)</condition> <block pos:start="925:21" pos:end="931:8">{<block_content pos:start="927:12" pos:end="929:22">

           <expr_stmt pos:start="927:12" pos:end="927:51"><expr pos:start="927:12" pos:end="927:50"><name pos:start="927:12" pos:end="927:27"><name pos:start="927:12" pos:end="927:13">sl</name><operator pos:start="927:14" pos:end="927:15">-&gt;</operator><name pos:start="927:16" pos:end="927:24">ref_count</name><index pos:start="927:25" pos:end="927:27">[<expr pos:start="927:26" pos:end="927:26"><literal type="number" pos:start="927:26" pos:end="927:26">1</literal></expr>]</index></name> <operator pos:start="927:29" pos:end="927:29">=</operator> <name pos:start="927:31" pos:end="927:46"><name pos:start="927:31" pos:end="927:32">sl</name><operator pos:start="927:33" pos:end="927:34">-&gt;</operator><name pos:start="927:35" pos:end="927:43">ref_count</name><index pos:start="927:44" pos:end="927:46">[<expr pos:start="927:45" pos:end="927:45"><literal type="number" pos:start="927:45" pos:end="927:45">0</literal></expr>]</index></name> <operator pos:start="927:48" pos:end="927:48">=</operator> <literal type="number" pos:start="927:50" pos:end="927:50">0</literal></expr>;</expr_stmt>

           <return pos:start="929:12" pos:end="929:22">return <expr pos:start="929:19" pos:end="929:21"><name pos:start="929:19" pos:end="929:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="937:5" pos:end="965:5"><if pos:start="937:5" pos:end="945:64">if <condition pos:start="937:8" pos:end="941:50">(<expr pos:start="937:9" pos:end="941:49"><operator pos:start="937:9" pos:end="937:9">(</operator><name pos:start="937:10" pos:end="937:27"><name pos:start="937:10" pos:end="937:12">pps</name><operator pos:start="937:13" pos:end="937:14">-&gt;</operator><name pos:start="937:15" pos:end="937:27">weighted_pred</name></name> <operator pos:start="937:29" pos:end="937:30">&amp;&amp;</operator> <name pos:start="937:32" pos:end="937:49"><name pos:start="937:32" pos:end="937:33">sl</name><operator pos:start="937:34" pos:end="937:35">-&gt;</operator><name pos:start="937:36" pos:end="937:49">slice_type_nos</name></name> <operator pos:start="937:51" pos:end="937:52">==</operator> <name pos:start="937:54" pos:end="937:70">AV_PICTURE_TYPE_P</name><operator pos:start="937:71" pos:end="937:71">)</operator> <operator pos:start="937:73" pos:end="937:74">||</operator>

        <operator pos:start="939:9" pos:end="939:9">(</operator><name pos:start="939:10" pos:end="939:33"><name pos:start="939:10" pos:end="939:12">pps</name><operator pos:start="939:13" pos:end="939:14">-&gt;</operator><name pos:start="939:15" pos:end="939:33">weighted_bipred_idc</name></name> <operator pos:start="939:35" pos:end="939:36">==</operator> <literal type="number" pos:start="939:38" pos:end="939:38">1</literal> <operator pos:start="939:40" pos:end="939:41">&amp;&amp;</operator>

         <name pos:start="941:10" pos:end="941:27"><name pos:start="941:10" pos:end="941:11">sl</name><operator pos:start="941:12" pos:end="941:13">-&gt;</operator><name pos:start="941:14" pos:end="941:27">slice_type_nos</name></name> <operator pos:start="941:29" pos:end="941:30">==</operator> <name pos:start="941:32" pos:end="941:48">AV_PICTURE_TYPE_B</name><operator pos:start="941:49" pos:end="941:49">)</operator></expr>)</condition><block type="pseudo" pos:start="943:9" pos:end="945:64"><block_content pos:start="943:9" pos:end="945:64">

        <expr_stmt pos:start="943:9" pos:end="945:64"><expr pos:start="943:9" pos:end="945:63"><call pos:start="943:9" pos:end="945:63"><name pos:start="943:9" pos:end="943:33">ff_h264_pred_weight_table</name><argument_list pos:start="943:34" pos:end="945:63">(<argument pos:start="943:35" pos:end="943:41"><expr pos:start="943:35" pos:end="943:41"><operator pos:start="943:35" pos:end="943:35">&amp;</operator><name pos:start="943:36" pos:end="943:41"><name pos:start="943:36" pos:end="943:37">sl</name><operator pos:start="943:38" pos:end="943:39">-&gt;</operator><name pos:start="943:40" pos:end="943:41">gb</name></name></expr></argument>, <argument pos:start="943:44" pos:end="943:46"><expr pos:start="943:44" pos:end="943:46"><name pos:start="943:44" pos:end="943:46">sps</name></expr></argument>, <argument pos:start="943:49" pos:end="943:61"><expr pos:start="943:49" pos:end="943:61"><name pos:start="943:49" pos:end="943:61"><name pos:start="943:49" pos:end="943:50">sl</name><operator pos:start="943:51" pos:end="943:52">-&gt;</operator><name pos:start="943:53" pos:end="943:61">ref_count</name></name></expr></argument>,

                                  <argument pos:start="945:35" pos:end="945:52"><expr pos:start="945:35" pos:end="945:52"><name pos:start="945:35" pos:end="945:52"><name pos:start="945:35" pos:end="945:36">sl</name><operator pos:start="945:37" pos:end="945:38">-&gt;</operator><name pos:start="945:39" pos:end="945:52">slice_type_nos</name></name></expr></argument>, <argument pos:start="945:55" pos:end="945:62"><expr pos:start="945:55" pos:end="945:62"><operator pos:start="945:55" pos:end="945:55">&amp;</operator><name pos:start="945:56" pos:end="945:62"><name pos:start="945:56" pos:end="945:57">sl</name><operator pos:start="945:58" pos:end="945:59">-&gt;</operator><name pos:start="945:60" pos:end="945:62">pwt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="947:5" pos:end="953:5">else if <condition pos:start="947:13" pos:end="949:53">(<expr pos:start="947:14" pos:end="949:52"><name pos:start="947:14" pos:end="947:37"><name pos:start="947:14" pos:end="947:16">pps</name><operator pos:start="947:17" pos:end="947:18">-&gt;</operator><name pos:start="947:19" pos:end="947:37">weighted_bipred_idc</name></name> <operator pos:start="947:39" pos:end="947:40">==</operator> <literal type="number" pos:start="947:42" pos:end="947:42">2</literal> <operator pos:start="947:44" pos:end="947:45">&amp;&amp;</operator>

             <name pos:start="949:14" pos:end="949:31"><name pos:start="949:14" pos:end="949:15">sl</name><operator pos:start="949:16" pos:end="949:17">-&gt;</operator><name pos:start="949:18" pos:end="949:31">slice_type_nos</name></name> <operator pos:start="949:33" pos:end="949:34">==</operator> <name pos:start="949:36" pos:end="949:52">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="949:55" pos:end="953:5">{<block_content pos:start="951:9" pos:end="951:41">

        <expr_stmt pos:start="951:9" pos:end="951:41"><expr pos:start="951:9" pos:end="951:40"><call pos:start="951:9" pos:end="951:40"><name pos:start="951:9" pos:end="951:29">implicit_weight_table</name><argument_list pos:start="951:30" pos:end="951:40">(<argument pos:start="951:31" pos:end="951:31"><expr pos:start="951:31" pos:end="951:31"><name pos:start="951:31" pos:end="951:31">h</name></expr></argument>, <argument pos:start="951:34" pos:end="951:35"><expr pos:start="951:34" pos:end="951:35"><name pos:start="951:34" pos:end="951:35">sl</name></expr></argument>, <argument pos:start="951:38" pos:end="951:39"><expr pos:start="951:38" pos:end="951:39"><operator pos:start="951:38" pos:end="951:38">-</operator><literal type="number" pos:start="951:39" pos:end="951:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="953:7" pos:end="965:5">else <block pos:start="953:12" pos:end="965:5">{<block_content pos:start="955:9" pos:end="963:9">

        <expr_stmt pos:start="955:9" pos:end="955:31"><expr pos:start="955:9" pos:end="955:30"><name pos:start="955:9" pos:end="955:26"><name pos:start="955:9" pos:end="955:10">sl</name><operator pos:start="955:11" pos:end="955:12">-&gt;</operator><name pos:start="955:13" pos:end="955:15">pwt</name><operator pos:start="955:16" pos:end="955:16">.</operator><name pos:start="955:17" pos:end="955:26">use_weight</name></name> <operator pos:start="955:28" pos:end="955:28">=</operator> <literal type="number" pos:start="955:30" pos:end="955:30">0</literal></expr>;</expr_stmt>

        <for pos:start="957:9" pos:end="963:9">for <control pos:start="957:13" pos:end="957:31">(<init pos:start="957:14" pos:end="957:19"><expr pos:start="957:14" pos:end="957:18"><name pos:start="957:14" pos:end="957:14">i</name> <operator pos:start="957:16" pos:end="957:16">=</operator> <literal type="number" pos:start="957:18" pos:end="957:18">0</literal></expr>;</init> <condition pos:start="957:21" pos:end="957:26"><expr pos:start="957:21" pos:end="957:25"><name pos:start="957:21" pos:end="957:21">i</name> <operator pos:start="957:23" pos:end="957:23">&lt;</operator> <literal type="number" pos:start="957:25" pos:end="957:25">2</literal></expr>;</condition> <incr pos:start="957:28" pos:end="957:30"><expr pos:start="957:28" pos:end="957:30"><name pos:start="957:28" pos:end="957:28">i</name><operator pos:start="957:29" pos:end="957:30">++</operator></expr></incr>)</control> <block pos:start="957:33" pos:end="963:9">{<block_content pos:start="959:13" pos:end="961:46">

            <expr_stmt pos:start="959:13" pos:end="959:46"><expr pos:start="959:13" pos:end="959:45"><name pos:start="959:13" pos:end="959:39"><name pos:start="959:13" pos:end="959:14">sl</name><operator pos:start="959:15" pos:end="959:16">-&gt;</operator><name pos:start="959:17" pos:end="959:19">pwt</name><operator pos:start="959:20" pos:end="959:20">.</operator><name pos:start="959:21" pos:end="959:36">luma_weight_flag</name><index pos:start="959:37" pos:end="959:39">[<expr pos:start="959:38" pos:end="959:38"><name pos:start="959:38" pos:end="959:38">i</name></expr>]</index></name>   <operator pos:start="959:43" pos:end="959:43">=</operator> <literal type="number" pos:start="959:45" pos:end="959:45">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:46"><expr pos:start="961:13" pos:end="961:45"><name pos:start="961:13" pos:end="961:41"><name pos:start="961:13" pos:end="961:14">sl</name><operator pos:start="961:15" pos:end="961:16">-&gt;</operator><name pos:start="961:17" pos:end="961:19">pwt</name><operator pos:start="961:20" pos:end="961:20">.</operator><name pos:start="961:21" pos:end="961:38">chroma_weight_flag</name><index pos:start="961:39" pos:end="961:41">[<expr pos:start="961:40" pos:end="961:40"><name pos:start="961:40" pos:end="961:40">i</name></expr>]</index></name> <operator pos:start="961:43" pos:end="961:43">=</operator> <literal type="number" pos:start="961:45" pos:end="961:45">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="969:5" pos:end="969:74">// If frame-mt is enabled, only update mmco tables for the first slice</comment>

    <comment type="line" pos:start="971:5" pos:end="971:74">// in a field. Subsequent slices can temporarily clobber h-&gt;mmco_index</comment>

    <comment type="line" pos:start="973:5" pos:end="973:72">// or h-&gt;mmco, which will cause ref list mix-ups and decoding errors</comment>

    <comment type="line" pos:start="975:5" pos:end="975:75">// further down the line. This may break decoding if the first slice is</comment>

    <comment type="line" pos:start="977:5" pos:end="977:60">// corrupt, thus we only do this if frame-mt is enabled.</comment>

    <if_stmt pos:start="979:5" pos:end="991:5"><if pos:start="979:5" pos:end="991:5">if <condition pos:start="979:8" pos:end="979:23">(<expr pos:start="979:9" pos:end="979:22"><name pos:start="979:9" pos:end="979:22"><name pos:start="979:9" pos:end="979:9">h</name><operator pos:start="979:10" pos:end="979:11">-&gt;</operator><name pos:start="979:12" pos:end="979:22">nal_ref_idc</name></name></expr>)</condition> <block pos:start="979:25" pos:end="991:5">{<block_content pos:start="981:9" pos:end="989:39">

        <expr_stmt pos:start="981:9" pos:end="985:68"><expr pos:start="981:9" pos:end="985:67"><name pos:start="981:9" pos:end="981:11">ret</name> <operator pos:start="981:13" pos:end="981:13">=</operator> <call pos:start="981:15" pos:end="985:67"><name pos:start="981:15" pos:end="981:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="981:45" pos:end="985:67">(<argument pos:start="981:46" pos:end="981:46"><expr pos:start="981:46" pos:end="981:46"><name pos:start="981:46" pos:end="981:46">h</name></expr></argument>, <argument pos:start="981:49" pos:end="981:55"><expr pos:start="981:49" pos:end="981:55"><operator pos:start="981:49" pos:end="981:49">&amp;</operator><name pos:start="981:50" pos:end="981:55"><name pos:start="981:50" pos:end="981:51">sl</name><operator pos:start="981:52" pos:end="981:53">-&gt;</operator><name pos:start="981:54" pos:end="981:55">gb</name></name></expr></argument>,

                                             <argument pos:start="983:46" pos:end="985:66"><expr pos:start="983:46" pos:end="985:66"><operator pos:start="983:46" pos:end="983:46">!</operator><operator pos:start="983:47" pos:end="983:47">(</operator><name pos:start="983:48" pos:end="983:75"><name pos:start="983:48" pos:end="983:48">h</name><operator pos:start="983:49" pos:end="983:50">-&gt;</operator><name pos:start="983:51" pos:end="983:55">avctx</name><operator pos:start="983:56" pos:end="983:57">-&gt;</operator><name pos:start="983:58" pos:end="983:75">active_thread_type</name></name> <operator pos:start="983:77" pos:end="983:77">&amp;</operator> <name pos:start="983:79" pos:end="983:93">FF_THREAD_FRAME</name><operator pos:start="983:94" pos:end="983:94">)</operator> <operator pos:start="983:96" pos:end="983:97">||</operator>

                                             <name pos:start="985:46" pos:end="985:61"><name pos:start="985:46" pos:end="985:46">h</name><operator pos:start="985:47" pos:end="985:48">-&gt;</operator><name pos:start="985:49" pos:end="985:61">current_slice</name></name> <operator pos:start="985:63" pos:end="985:64">==</operator> <literal type="number" pos:start="985:66" pos:end="985:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="987:9" pos:end="989:39"><if pos:start="987:9" pos:end="989:39">if <condition pos:start="987:12" pos:end="987:67">(<expr pos:start="987:13" pos:end="987:66"><name pos:start="987:13" pos:end="987:15">ret</name> <operator pos:start="987:17" pos:end="987:17">&lt;</operator> <literal type="number" pos:start="987:19" pos:end="987:19">0</literal> <operator pos:start="987:21" pos:end="987:22">&amp;&amp;</operator> <operator pos:start="987:24" pos:end="987:24">(</operator><name pos:start="987:25" pos:end="987:49"><name pos:start="987:25" pos:end="987:25">h</name><operator pos:start="987:26" pos:end="987:27">-&gt;</operator><name pos:start="987:28" pos:end="987:32">avctx</name><operator pos:start="987:33" pos:end="987:34">-&gt;</operator><name pos:start="987:35" pos:end="987:49">err_recognition</name></name> <operator pos:start="987:51" pos:end="987:51">&amp;</operator> <name pos:start="987:53" pos:end="987:65">AV_EF_EXPLODE</name><operator pos:start="987:66" pos:end="987:66">)</operator></expr>)</condition><block type="pseudo" pos:start="989:13" pos:end="989:39"><block_content pos:start="989:13" pos:end="989:39">

            <return pos:start="989:13" pos:end="989:39">return <expr pos:start="989:20" pos:end="989:38"><name pos:start="989:20" pos:end="989:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="995:5" pos:end="1009:5"><if pos:start="995:5" pos:end="1009:5">if <condition pos:start="995:8" pos:end="995:23">(<expr pos:start="995:9" pos:end="995:22"><call pos:start="995:9" pos:end="995:22"><name pos:start="995:9" pos:end="995:19">FRAME_MBAFF</name><argument_list pos:start="995:20" pos:end="995:22">(<argument pos:start="995:21" pos:end="995:21"><expr pos:start="995:21" pos:end="995:21"><name pos:start="995:21" pos:end="995:21">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="995:25" pos:end="1009:5">{<block_content pos:start="997:9" pos:end="1007:9">

        <expr_stmt pos:start="997:9" pos:end="997:43"><expr pos:start="997:9" pos:end="997:42"><call pos:start="997:9" pos:end="997:42"><name pos:start="997:9" pos:end="997:35">ff_h264_fill_mbaff_ref_list</name><argument_list pos:start="997:36" pos:end="997:42">(<argument pos:start="997:37" pos:end="997:37"><expr pos:start="997:37" pos:end="997:37"><name pos:start="997:37" pos:end="997:37">h</name></expr></argument>, <argument pos:start="997:40" pos:end="997:41"><expr pos:start="997:40" pos:end="997:41"><name pos:start="997:40" pos:end="997:41">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1001:9" pos:end="1007:9"><if pos:start="1001:9" pos:end="1007:9">if <condition pos:start="1001:12" pos:end="1001:85">(<expr pos:start="1001:13" pos:end="1001:84"><name pos:start="1001:13" pos:end="1001:36"><name pos:start="1001:13" pos:end="1001:15">pps</name><operator pos:start="1001:16" pos:end="1001:17">-&gt;</operator><name pos:start="1001:18" pos:end="1001:36">weighted_bipred_idc</name></name> <operator pos:start="1001:38" pos:end="1001:39">==</operator> <literal type="number" pos:start="1001:41" pos:end="1001:41">2</literal> <operator pos:start="1001:43" pos:end="1001:44">&amp;&amp;</operator> <name pos:start="1001:46" pos:end="1001:63"><name pos:start="1001:46" pos:end="1001:47">sl</name><operator pos:start="1001:48" pos:end="1001:49">-&gt;</operator><name pos:start="1001:50" pos:end="1001:63">slice_type_nos</name></name> <operator pos:start="1001:65" pos:end="1001:66">==</operator> <name pos:start="1001:68" pos:end="1001:84">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1001:87" pos:end="1007:9">{<block_content pos:start="1003:13" pos:end="1005:44">

            <expr_stmt pos:start="1003:13" pos:end="1003:44"><expr pos:start="1003:13" pos:end="1003:43"><call pos:start="1003:13" pos:end="1003:43"><name pos:start="1003:13" pos:end="1003:33">implicit_weight_table</name><argument_list pos:start="1003:34" pos:end="1003:43">(<argument pos:start="1003:35" pos:end="1003:35"><expr pos:start="1003:35" pos:end="1003:35"><name pos:start="1003:35" pos:end="1003:35">h</name></expr></argument>, <argument pos:start="1003:38" pos:end="1003:39"><expr pos:start="1003:38" pos:end="1003:39"><name pos:start="1003:38" pos:end="1003:39">sl</name></expr></argument>, <argument pos:start="1003:42" pos:end="1003:42"><expr pos:start="1003:42" pos:end="1003:42"><literal type="number" pos:start="1003:42" pos:end="1003:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1005:13" pos:end="1005:44"><expr pos:start="1005:13" pos:end="1005:43"><call pos:start="1005:13" pos:end="1005:43"><name pos:start="1005:13" pos:end="1005:33">implicit_weight_table</name><argument_list pos:start="1005:34" pos:end="1005:43">(<argument pos:start="1005:35" pos:end="1005:35"><expr pos:start="1005:35" pos:end="1005:35"><name pos:start="1005:35" pos:end="1005:35">h</name></expr></argument>, <argument pos:start="1005:38" pos:end="1005:39"><expr pos:start="1005:38" pos:end="1005:39"><name pos:start="1005:38" pos:end="1005:39">sl</name></expr></argument>, <argument pos:start="1005:42" pos:end="1005:42"><expr pos:start="1005:42" pos:end="1005:42"><literal type="number" pos:start="1005:42" pos:end="1005:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1013:5" pos:end="1015:48"><if pos:start="1013:5" pos:end="1015:48">if <condition pos:start="1013:8" pos:end="1013:79">(<expr pos:start="1013:9" pos:end="1013:78"><name pos:start="1013:9" pos:end="1013:26"><name pos:start="1013:9" pos:end="1013:10">sl</name><operator pos:start="1013:11" pos:end="1013:12">-&gt;</operator><name pos:start="1013:13" pos:end="1013:26">slice_type_nos</name></name> <operator pos:start="1013:28" pos:end="1013:29">==</operator> <name pos:start="1013:31" pos:end="1013:47">AV_PICTURE_TYPE_B</name> <operator pos:start="1013:49" pos:end="1013:50">&amp;&amp;</operator> <operator pos:start="1013:52" pos:end="1013:52">!</operator><name pos:start="1013:53" pos:end="1013:78"><name pos:start="1013:53" pos:end="1013:54">sl</name><operator pos:start="1013:55" pos:end="1013:56">-&gt;</operator><name pos:start="1013:57" pos:end="1013:78">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="1015:9" pos:end="1015:48"><block_content pos:start="1015:9" pos:end="1015:48">

        <expr_stmt pos:start="1015:9" pos:end="1015:48"><expr pos:start="1015:9" pos:end="1015:47"><call pos:start="1015:9" pos:end="1015:47"><name pos:start="1015:9" pos:end="1015:40">ff_h264_direct_dist_scale_factor</name><argument_list pos:start="1015:41" pos:end="1015:47">(<argument pos:start="1015:42" pos:end="1015:42"><expr pos:start="1015:42" pos:end="1015:42"><name pos:start="1015:42" pos:end="1015:42">h</name></expr></argument>, <argument pos:start="1015:45" pos:end="1015:46"><expr pos:start="1015:45" pos:end="1015:46"><name pos:start="1015:45" pos:end="1015:46">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1017:5" pos:end="1017:40"><expr pos:start="1017:5" pos:end="1017:39"><call pos:start="1017:5" pos:end="1017:39"><name pos:start="1017:5" pos:end="1017:32">ff_h264_direct_ref_list_init</name><argument_list pos:start="1017:33" pos:end="1017:39">(<argument pos:start="1017:34" pos:end="1017:34"><expr pos:start="1017:34" pos:end="1017:34"><name pos:start="1017:34" pos:end="1017:34">h</name></expr></argument>, <argument pos:start="1017:37" pos:end="1017:38"><expr pos:start="1017:37" pos:end="1017:38"><name pos:start="1017:37" pos:end="1017:38">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1021:5" pos:end="1035:5"><if pos:start="1021:5" pos:end="1035:5">if <condition pos:start="1021:8" pos:end="1021:62">(<expr pos:start="1021:9" pos:end="1021:61"><name pos:start="1021:9" pos:end="1021:26"><name pos:start="1021:9" pos:end="1021:10">sl</name><operator pos:start="1021:11" pos:end="1021:12">-&gt;</operator><name pos:start="1021:13" pos:end="1021:26">slice_type_nos</name></name> <operator pos:start="1021:28" pos:end="1021:29">!=</operator> <name pos:start="1021:31" pos:end="1021:47">AV_PICTURE_TYPE_I</name> <operator pos:start="1021:49" pos:end="1021:50">&amp;&amp;</operator> <name pos:start="1021:52" pos:end="1021:61"><name pos:start="1021:52" pos:end="1021:54">pps</name><operator pos:start="1021:55" pos:end="1021:56">-&gt;</operator><name pos:start="1021:57" pos:end="1021:61">cabac</name></name></expr>)</condition> <block pos:start="1021:64" pos:end="1035:5">{<block_content pos:start="1023:9" pos:end="1033:33">

        <expr_stmt pos:start="1023:9" pos:end="1023:40"><expr pos:start="1023:9" pos:end="1023:39"><name pos:start="1023:9" pos:end="1023:11">tmp</name> <operator pos:start="1023:13" pos:end="1023:13">=</operator> <call pos:start="1023:15" pos:end="1023:39"><name pos:start="1023:15" pos:end="1023:30">get_ue_golomb_31</name><argument_list pos:start="1023:31" pos:end="1023:39">(<argument pos:start="1023:32" pos:end="1023:38"><expr pos:start="1023:32" pos:end="1023:38"><operator pos:start="1023:32" pos:end="1023:32">&amp;</operator><name pos:start="1023:33" pos:end="1023:38"><name pos:start="1023:33" pos:end="1023:34">sl</name><operator pos:start="1023:35" pos:end="1023:36">-&gt;</operator><name pos:start="1023:37" pos:end="1023:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1025:9" pos:end="1031:9"><if pos:start="1025:9" pos:end="1031:9">if <condition pos:start="1025:12" pos:end="1025:20">(<expr pos:start="1025:13" pos:end="1025:19"><name pos:start="1025:13" pos:end="1025:15">tmp</name> <operator pos:start="1025:17" pos:end="1025:17">&gt;</operator> <literal type="number" pos:start="1025:19" pos:end="1025:19">2</literal></expr>)</condition> <block pos:start="1025:22" pos:end="1031:9">{<block_content pos:start="1027:13" pos:end="1029:39">

            <expr_stmt pos:start="1027:13" pos:end="1027:80"><expr pos:start="1027:13" pos:end="1027:79"><call pos:start="1027:13" pos:end="1027:79"><name pos:start="1027:13" pos:end="1027:18">av_log</name><argument_list pos:start="1027:19" pos:end="1027:79">(<argument pos:start="1027:20" pos:end="1027:27"><expr pos:start="1027:20" pos:end="1027:27"><name pos:start="1027:20" pos:end="1027:27"><name pos:start="1027:20" pos:end="1027:20">h</name><operator pos:start="1027:21" pos:end="1027:22">-&gt;</operator><name pos:start="1027:23" pos:end="1027:27">avctx</name></name></expr></argument>, <argument pos:start="1027:30" pos:end="1027:41"><expr pos:start="1027:30" pos:end="1027:41"><name pos:start="1027:30" pos:end="1027:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1027:44" pos:end="1027:73"><expr pos:start="1027:44" pos:end="1027:73"><literal type="string" pos:start="1027:44" pos:end="1027:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="1027:76" pos:end="1027:78"><expr pos:start="1027:76" pos:end="1027:78"><name pos:start="1027:76" pos:end="1027:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1029:13" pos:end="1029:39">return <expr pos:start="1029:20" pos:end="1029:38"><name pos:start="1029:20" pos:end="1029:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1033:9" pos:end="1033:33"><expr pos:start="1033:9" pos:end="1033:32"><name pos:start="1033:9" pos:end="1033:26"><name pos:start="1033:9" pos:end="1033:10">sl</name><operator pos:start="1033:11" pos:end="1033:12">-&gt;</operator><name pos:start="1033:13" pos:end="1033:26">cabac_init_idc</name></name> <operator pos:start="1033:28" pos:end="1033:28">=</operator> <name pos:start="1033:30" pos:end="1033:32">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1039:5" pos:end="1039:29"><expr pos:start="1039:5" pos:end="1039:28"><name pos:start="1039:5" pos:end="1039:24"><name pos:start="1039:5" pos:end="1039:6">sl</name><operator pos:start="1039:7" pos:end="1039:8">-&gt;</operator><name pos:start="1039:9" pos:end="1039:24">last_qscale_diff</name></name> <operator pos:start="1039:26" pos:end="1039:26">=</operator> <literal type="number" pos:start="1039:28" pos:end="1039:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1041:5" pos:end="1041:48"><expr pos:start="1041:5" pos:end="1041:47"><name pos:start="1041:5" pos:end="1041:7">tmp</name> <operator pos:start="1041:9" pos:end="1041:9">=</operator> <name pos:start="1041:11" pos:end="1041:22"><name pos:start="1041:11" pos:end="1041:13">pps</name><operator pos:start="1041:14" pos:end="1041:15">-&gt;</operator><name pos:start="1041:16" pos:end="1041:22">init_qp</name></name> <operator pos:start="1041:24" pos:end="1041:24">+</operator> <call pos:start="1041:26" pos:end="1041:47"><name pos:start="1041:26" pos:end="1041:38">get_se_golomb</name><argument_list pos:start="1041:39" pos:end="1041:47">(<argument pos:start="1041:40" pos:end="1041:46"><expr pos:start="1041:40" pos:end="1041:46"><operator pos:start="1041:40" pos:end="1041:40">&amp;</operator><name pos:start="1041:41" pos:end="1041:46"><name pos:start="1041:41" pos:end="1041:42">sl</name><operator pos:start="1041:43" pos:end="1041:44">-&gt;</operator><name pos:start="1041:45" pos:end="1041:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1043:5" pos:end="1049:5"><if pos:start="1043:5" pos:end="1049:5">if <condition pos:start="1043:8" pos:end="1043:49">(<expr pos:start="1043:9" pos:end="1043:48"><name pos:start="1043:9" pos:end="1043:11">tmp</name> <operator pos:start="1043:13" pos:end="1043:13">&gt;</operator> <literal type="number" pos:start="1043:15" pos:end="1043:18">51</literal> <operator pos:start="1043:18" pos:end="1043:18">+</operator> <literal type="number" pos:start="1043:20" pos:end="1043:20">6</literal> <operator pos:start="1043:22" pos:end="1043:22">*</operator> <operator pos:start="1043:24" pos:end="1043:24">(</operator><name pos:start="1043:25" pos:end="1043:43"><name pos:start="1043:25" pos:end="1043:27">sps</name><operator pos:start="1043:28" pos:end="1043:29">-&gt;</operator><name pos:start="1043:30" pos:end="1043:43">bit_depth_luma</name></name> <operator pos:start="1043:45" pos:end="1043:45">-</operator> <literal type="number" pos:start="1043:47" pos:end="1043:47">8</literal><operator pos:start="1043:48" pos:end="1043:48">)</operator></expr>)</condition> <block pos:start="1043:51" pos:end="1049:5">{<block_content pos:start="1045:9" pos:end="1047:35">

        <expr_stmt pos:start="1045:9" pos:end="1045:68"><expr pos:start="1045:9" pos:end="1045:67"><call pos:start="1045:9" pos:end="1045:67"><name pos:start="1045:9" pos:end="1045:14">av_log</name><argument_list pos:start="1045:15" pos:end="1045:67">(<argument pos:start="1045:16" pos:end="1045:23"><expr pos:start="1045:16" pos:end="1045:23"><name pos:start="1045:16" pos:end="1045:23"><name pos:start="1045:16" pos:end="1045:16">h</name><operator pos:start="1045:17" pos:end="1045:18">-&gt;</operator><name pos:start="1045:19" pos:end="1045:23">avctx</name></name></expr></argument>, <argument pos:start="1045:26" pos:end="1045:37"><expr pos:start="1045:26" pos:end="1045:37"><name pos:start="1045:26" pos:end="1045:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1045:40" pos:end="1045:61"><expr pos:start="1045:40" pos:end="1045:61"><literal type="string" pos:start="1045:40" pos:end="1045:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="1045:64" pos:end="1045:66"><expr pos:start="1045:64" pos:end="1045:66"><name pos:start="1045:64" pos:end="1045:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1047:9" pos:end="1047:35">return <expr pos:start="1047:16" pos:end="1047:34"><name pos:start="1047:16" pos:end="1047:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1051:5" pos:end="1051:27"><expr pos:start="1051:5" pos:end="1051:26"><name pos:start="1051:5" pos:end="1051:14"><name pos:start="1051:5" pos:end="1051:6">sl</name><operator pos:start="1051:7" pos:end="1051:8">-&gt;</operator><name pos:start="1051:9" pos:end="1051:14">qscale</name></name>       <operator pos:start="1051:22" pos:end="1051:22">=</operator> <name pos:start="1051:24" pos:end="1051:26">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1053:5" pos:end="1053:55"><expr pos:start="1053:5" pos:end="1053:54"><name pos:start="1053:5" pos:end="1053:20"><name pos:start="1053:5" pos:end="1053:6">sl</name><operator pos:start="1053:7" pos:end="1053:8">-&gt;</operator><name pos:start="1053:9" pos:end="1053:17">chroma_qp</name><index pos:start="1053:18" pos:end="1053:20">[<expr pos:start="1053:19" pos:end="1053:19"><literal type="number" pos:start="1053:19" pos:end="1053:19">0</literal></expr>]</index></name> <operator pos:start="1053:22" pos:end="1053:22">=</operator> <call pos:start="1053:24" pos:end="1053:54"><name pos:start="1053:24" pos:end="1053:36">get_chroma_qp</name><argument_list pos:start="1053:37" pos:end="1053:54">(<argument pos:start="1053:38" pos:end="1053:38"><expr pos:start="1053:38" pos:end="1053:38"><name pos:start="1053:38" pos:end="1053:38">h</name></expr></argument>, <argument pos:start="1053:41" pos:end="1053:41"><expr pos:start="1053:41" pos:end="1053:41"><literal type="number" pos:start="1053:41" pos:end="1053:41">0</literal></expr></argument>, <argument pos:start="1053:44" pos:end="1053:53"><expr pos:start="1053:44" pos:end="1053:53"><name pos:start="1053:44" pos:end="1053:53"><name pos:start="1053:44" pos:end="1053:45">sl</name><operator pos:start="1053:46" pos:end="1053:47">-&gt;</operator><name pos:start="1053:48" pos:end="1053:53">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1055:5" pos:end="1055:55"><expr pos:start="1055:5" pos:end="1055:54"><name pos:start="1055:5" pos:end="1055:20"><name pos:start="1055:5" pos:end="1055:6">sl</name><operator pos:start="1055:7" pos:end="1055:8">-&gt;</operator><name pos:start="1055:9" pos:end="1055:17">chroma_qp</name><index pos:start="1055:18" pos:end="1055:20">[<expr pos:start="1055:19" pos:end="1055:19"><literal type="number" pos:start="1055:19" pos:end="1055:19">1</literal></expr>]</index></name> <operator pos:start="1055:22" pos:end="1055:22">=</operator> <call pos:start="1055:24" pos:end="1055:54"><name pos:start="1055:24" pos:end="1055:36">get_chroma_qp</name><argument_list pos:start="1055:37" pos:end="1055:54">(<argument pos:start="1055:38" pos:end="1055:38"><expr pos:start="1055:38" pos:end="1055:38"><name pos:start="1055:38" pos:end="1055:38">h</name></expr></argument>, <argument pos:start="1055:41" pos:end="1055:41"><expr pos:start="1055:41" pos:end="1055:41"><literal type="number" pos:start="1055:41" pos:end="1055:41">1</literal></expr></argument>, <argument pos:start="1055:44" pos:end="1055:53"><expr pos:start="1055:44" pos:end="1055:53"><name pos:start="1055:44" pos:end="1055:53"><name pos:start="1055:44" pos:end="1055:45">sl</name><operator pos:start="1055:46" pos:end="1055:47">-&gt;</operator><name pos:start="1055:48" pos:end="1055:53">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="1057:5" pos:end="1057:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="1059:5" pos:end="1061:27"><if pos:start="1059:5" pos:end="1061:27">if <condition pos:start="1059:8" pos:end="1059:45">(<expr pos:start="1059:9" pos:end="1059:44"><name pos:start="1059:9" pos:end="1059:22"><name pos:start="1059:9" pos:end="1059:10">sl</name><operator pos:start="1059:11" pos:end="1059:12">-&gt;</operator><name pos:start="1059:13" pos:end="1059:22">slice_type</name></name> <operator pos:start="1059:24" pos:end="1059:25">==</operator> <name pos:start="1059:27" pos:end="1059:44">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="1061:9" pos:end="1061:27"><block_content pos:start="1061:9" pos:end="1061:27">

        <expr_stmt pos:start="1061:9" pos:end="1061:27"><expr pos:start="1061:9" pos:end="1061:26"><call pos:start="1061:9" pos:end="1061:26"><name pos:start="1061:9" pos:end="1061:17">get_bits1</name><argument_list pos:start="1061:18" pos:end="1061:26">(<argument pos:start="1061:19" pos:end="1061:25"><expr pos:start="1061:19" pos:end="1061:25"><operator pos:start="1061:19" pos:end="1061:19">&amp;</operator><name pos:start="1061:20" pos:end="1061:25"><name pos:start="1061:20" pos:end="1061:21">sl</name><operator pos:start="1061:22" pos:end="1061:23">-&gt;</operator><name pos:start="1061:24" pos:end="1061:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1061:29" pos:end="1061:52">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="1063:5" pos:end="1067:31"><if pos:start="1063:5" pos:end="1067:31">if <condition pos:start="1063:8" pos:end="1065:45">(<expr pos:start="1063:9" pos:end="1065:44"><name pos:start="1063:9" pos:end="1063:22"><name pos:start="1063:9" pos:end="1063:10">sl</name><operator pos:start="1063:11" pos:end="1063:12">-&gt;</operator><name pos:start="1063:13" pos:end="1063:22">slice_type</name></name> <operator pos:start="1063:24" pos:end="1063:25">==</operator> <name pos:start="1063:27" pos:end="1063:44">AV_PICTURE_TYPE_SP</name> <operator pos:start="1063:46" pos:end="1063:47">||</operator>

        <name pos:start="1065:9" pos:end="1065:22"><name pos:start="1065:9" pos:end="1065:10">sl</name><operator pos:start="1065:11" pos:end="1065:12">-&gt;</operator><name pos:start="1065:13" pos:end="1065:22">slice_type</name></name> <operator pos:start="1065:24" pos:end="1065:25">==</operator> <name pos:start="1065:27" pos:end="1065:44">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="1067:9" pos:end="1067:31"><block_content pos:start="1067:9" pos:end="1067:31">

        <expr_stmt pos:start="1067:9" pos:end="1067:31"><expr pos:start="1067:9" pos:end="1067:30"><call pos:start="1067:9" pos:end="1067:30"><name pos:start="1067:9" pos:end="1067:21">get_se_golomb</name><argument_list pos:start="1067:22" pos:end="1067:30">(<argument pos:start="1067:23" pos:end="1067:29"><expr pos:start="1067:23" pos:end="1067:29"><operator pos:start="1067:23" pos:end="1067:23">&amp;</operator><name pos:start="1067:24" pos:end="1067:29"><name pos:start="1067:24" pos:end="1067:25">sl</name><operator pos:start="1067:26" pos:end="1067:27">-&gt;</operator><name pos:start="1067:28" pos:end="1067:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1067:33" pos:end="1067:52">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="1071:5" pos:end="1071:34"><expr pos:start="1071:5" pos:end="1071:33"><name pos:start="1071:5" pos:end="1071:25"><name pos:start="1071:5" pos:end="1071:6">sl</name><operator pos:start="1071:7" pos:end="1071:8">-&gt;</operator><name pos:start="1071:9" pos:end="1071:25">deblocking_filter</name></name>     <operator pos:start="1071:31" pos:end="1071:31">=</operator> <literal type="number" pos:start="1071:33" pos:end="1071:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1073:5" pos:end="1073:34"><expr pos:start="1073:5" pos:end="1073:33"><name pos:start="1073:5" pos:end="1073:29"><name pos:start="1073:5" pos:end="1073:6">sl</name><operator pos:start="1073:7" pos:end="1073:8">-&gt;</operator><name pos:start="1073:9" pos:end="1073:29">slice_alpha_c0_offset</name></name> <operator pos:start="1073:31" pos:end="1073:31">=</operator> <literal type="number" pos:start="1073:33" pos:end="1073:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1075:5" pos:end="1075:34"><expr pos:start="1075:5" pos:end="1075:33"><name pos:start="1075:5" pos:end="1075:25"><name pos:start="1075:5" pos:end="1075:6">sl</name><operator pos:start="1075:7" pos:end="1075:8">-&gt;</operator><name pos:start="1075:9" pos:end="1075:25">slice_beta_offset</name></name>     <operator pos:start="1075:31" pos:end="1075:31">=</operator> <literal type="number" pos:start="1075:33" pos:end="1075:33">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="1077:5" pos:end="1125:5"><if pos:start="1077:5" pos:end="1125:5">if <condition pos:start="1077:8" pos:end="1077:50">(<expr pos:start="1077:9" pos:end="1077:49"><name pos:start="1077:9" pos:end="1077:49"><name pos:start="1077:9" pos:end="1077:11">pps</name><operator pos:start="1077:12" pos:end="1077:13">-&gt;</operator><name pos:start="1077:14" pos:end="1077:49">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="1077:52" pos:end="1125:5">{<block_content pos:start="1079:9" pos:end="1123:9">

        <expr_stmt pos:start="1079:9" pos:end="1079:40"><expr pos:start="1079:9" pos:end="1079:39"><name pos:start="1079:9" pos:end="1079:11">tmp</name> <operator pos:start="1079:13" pos:end="1079:13">=</operator> <call pos:start="1079:15" pos:end="1079:39"><name pos:start="1079:15" pos:end="1079:30">get_ue_golomb_31</name><argument_list pos:start="1079:31" pos:end="1079:39">(<argument pos:start="1079:32" pos:end="1079:38"><expr pos:start="1079:32" pos:end="1079:38"><operator pos:start="1079:32" pos:end="1079:32">&amp;</operator><name pos:start="1079:33" pos:end="1079:38"><name pos:start="1079:33" pos:end="1079:34">sl</name><operator pos:start="1079:35" pos:end="1079:36">-&gt;</operator><name pos:start="1079:37" pos:end="1079:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1081:9" pos:end="1089:9"><if pos:start="1081:9" pos:end="1089:9">if <condition pos:start="1081:12" pos:end="1081:20">(<expr pos:start="1081:13" pos:end="1081:19"><name pos:start="1081:13" pos:end="1081:15">tmp</name> <operator pos:start="1081:17" pos:end="1081:17">&gt;</operator> <literal type="number" pos:start="1081:19" pos:end="1081:19">2</literal></expr>)</condition> <block pos:start="1081:22" pos:end="1089:9">{<block_content pos:start="1083:13" pos:end="1087:39">

            <expr_stmt pos:start="1083:13" pos:end="1085:67"><expr pos:start="1083:13" pos:end="1085:66"><call pos:start="1083:13" pos:end="1085:66"><name pos:start="1083:13" pos:end="1083:18">av_log</name><argument_list pos:start="1083:19" pos:end="1085:66">(<argument pos:start="1083:20" pos:end="1083:27"><expr pos:start="1083:20" pos:end="1083:27"><name pos:start="1083:20" pos:end="1083:27"><name pos:start="1083:20" pos:end="1083:20">h</name><operator pos:start="1083:21" pos:end="1083:22">-&gt;</operator><name pos:start="1083:23" pos:end="1083:27">avctx</name></name></expr></argument>, <argument pos:start="1083:30" pos:end="1083:41"><expr pos:start="1083:30" pos:end="1083:41"><name pos:start="1083:30" pos:end="1083:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="1085:20" pos:end="1085:60"><expr pos:start="1085:20" pos:end="1085:60"><literal type="string" pos:start="1085:20" pos:end="1085:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="1085:63" pos:end="1085:65"><expr pos:start="1085:63" pos:end="1085:65"><name pos:start="1085:63" pos:end="1085:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1087:13" pos:end="1087:39">return <expr pos:start="1087:20" pos:end="1087:38"><name pos:start="1087:20" pos:end="1087:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1091:9" pos:end="1091:36"><expr pos:start="1091:9" pos:end="1091:35"><name pos:start="1091:9" pos:end="1091:29"><name pos:start="1091:9" pos:end="1091:10">sl</name><operator pos:start="1091:11" pos:end="1091:12">-&gt;</operator><name pos:start="1091:13" pos:end="1091:29">deblocking_filter</name></name> <operator pos:start="1091:31" pos:end="1091:31">=</operator> <name pos:start="1091:33" pos:end="1091:35">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="1093:9" pos:end="1095:39"><if pos:start="1093:9" pos:end="1095:39">if <condition pos:start="1093:12" pos:end="1093:38">(<expr pos:start="1093:13" pos:end="1093:37"><name pos:start="1093:13" pos:end="1093:33"><name pos:start="1093:13" pos:end="1093:14">sl</name><operator pos:start="1093:15" pos:end="1093:16">-&gt;</operator><name pos:start="1093:17" pos:end="1093:33">deblocking_filter</name></name> <operator pos:start="1093:35" pos:end="1093:35">&lt;</operator> <literal type="number" pos:start="1093:37" pos:end="1093:37">2</literal></expr>)</condition><block type="pseudo" pos:start="1095:13" pos:end="1095:39"><block_content pos:start="1095:13" pos:end="1095:39">

            <expr_stmt pos:start="1095:13" pos:end="1095:39"><expr pos:start="1095:13" pos:end="1095:38"><name pos:start="1095:13" pos:end="1095:33"><name pos:start="1095:13" pos:end="1095:14">sl</name><operator pos:start="1095:15" pos:end="1095:16">-&gt;</operator><name pos:start="1095:17" pos:end="1095:33">deblocking_filter</name></name> <operator pos:start="1095:35" pos:end="1095:36">^=</operator> <literal type="number" pos:start="1095:38" pos:end="1095:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="1095:42" pos:end="1095:49">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="1099:9" pos:end="1123:9"><if pos:start="1099:9" pos:end="1123:9">if <condition pos:start="1099:12" pos:end="1099:34">(<expr pos:start="1099:13" pos:end="1099:33"><name pos:start="1099:13" pos:end="1099:33"><name pos:start="1099:13" pos:end="1099:14">sl</name><operator pos:start="1099:15" pos:end="1099:16">-&gt;</operator><name pos:start="1099:17" pos:end="1099:33">deblocking_filter</name></name></expr>)</condition> <block pos:start="1099:36" pos:end="1123:9">{<block_content pos:start="1101:13" pos:end="1121:13">

            <expr_stmt pos:start="1101:13" pos:end="1101:67"><expr pos:start="1101:13" pos:end="1101:66"><name pos:start="1101:13" pos:end="1101:37"><name pos:start="1101:13" pos:end="1101:14">sl</name><operator pos:start="1101:15" pos:end="1101:16">-&gt;</operator><name pos:start="1101:17" pos:end="1101:37">slice_alpha_c0_offset</name></name> <operator pos:start="1101:39" pos:end="1101:39">=</operator> <call pos:start="1101:41" pos:end="1101:62"><name pos:start="1101:41" pos:end="1101:53">get_se_golomb</name><argument_list pos:start="1101:54" pos:end="1101:62">(<argument pos:start="1101:55" pos:end="1101:61"><expr pos:start="1101:55" pos:end="1101:61"><operator pos:start="1101:55" pos:end="1101:55">&amp;</operator><name pos:start="1101:56" pos:end="1101:61"><name pos:start="1101:56" pos:end="1101:57">sl</name><operator pos:start="1101:58" pos:end="1101:59">-&gt;</operator><name pos:start="1101:60" pos:end="1101:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1101:64" pos:end="1101:64">*</operator> <literal type="number" pos:start="1101:66" pos:end="1101:66">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1103:13" pos:end="1103:67"><expr pos:start="1103:13" pos:end="1103:66"><name pos:start="1103:13" pos:end="1103:33"><name pos:start="1103:13" pos:end="1103:14">sl</name><operator pos:start="1103:15" pos:end="1103:16">-&gt;</operator><name pos:start="1103:17" pos:end="1103:33">slice_beta_offset</name></name>     <operator pos:start="1103:39" pos:end="1103:39">=</operator> <call pos:start="1103:41" pos:end="1103:62"><name pos:start="1103:41" pos:end="1103:53">get_se_golomb</name><argument_list pos:start="1103:54" pos:end="1103:62">(<argument pos:start="1103:55" pos:end="1103:61"><expr pos:start="1103:55" pos:end="1103:61"><operator pos:start="1103:55" pos:end="1103:55">&amp;</operator><name pos:start="1103:56" pos:end="1103:61"><name pos:start="1103:56" pos:end="1103:57">sl</name><operator pos:start="1103:58" pos:end="1103:59">-&gt;</operator><name pos:start="1103:60" pos:end="1103:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1103:64" pos:end="1103:64">*</operator> <literal type="number" pos:start="1103:66" pos:end="1103:66">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1105:13" pos:end="1121:13"><if pos:start="1105:13" pos:end="1121:13">if <condition pos:start="1105:16" pos:end="1111:44">(<expr pos:start="1105:17" pos:end="1111:43"><name pos:start="1105:17" pos:end="1105:41"><name pos:start="1105:17" pos:end="1105:18">sl</name><operator pos:start="1105:19" pos:end="1105:20">-&gt;</operator><name pos:start="1105:21" pos:end="1105:41">slice_alpha_c0_offset</name></name> <operator pos:start="1105:43" pos:end="1105:43">&gt;</operator>  <literal type="number" pos:start="1105:46" pos:end="1105:47">12</literal> <operator pos:start="1105:49" pos:end="1105:50">||</operator>

                <name pos:start="1107:17" pos:end="1107:41"><name pos:start="1107:17" pos:end="1107:18">sl</name><operator pos:start="1107:19" pos:end="1107:20">-&gt;</operator><name pos:start="1107:21" pos:end="1107:41">slice_alpha_c0_offset</name></name> <operator pos:start="1107:43" pos:end="1107:43">&lt;</operator> <operator pos:start="1107:45" pos:end="1107:45">-</operator><literal type="number" pos:start="1107:46" pos:end="1107:47">12</literal> <operator pos:start="1107:49" pos:end="1107:50">||</operator>

                <name pos:start="1109:17" pos:end="1109:37"><name pos:start="1109:17" pos:end="1109:18">sl</name><operator pos:start="1109:19" pos:end="1109:20">-&gt;</operator><name pos:start="1109:21" pos:end="1109:37">slice_beta_offset</name></name> <operator pos:start="1109:39" pos:end="1109:39">&gt;</operator>  <literal type="number" pos:start="1109:42" pos:end="1109:43">12</literal>     <operator pos:start="1109:49" pos:end="1109:50">||</operator>

                <name pos:start="1111:17" pos:end="1111:37"><name pos:start="1111:17" pos:end="1111:18">sl</name><operator pos:start="1111:19" pos:end="1111:20">-&gt;</operator><name pos:start="1111:21" pos:end="1111:37">slice_beta_offset</name></name> <operator pos:start="1111:39" pos:end="1111:39">&lt;</operator> <operator pos:start="1111:41" pos:end="1111:41">-</operator><literal type="number" pos:start="1111:42" pos:end="1111:43">12</literal></expr>)</condition> <block pos:start="1111:46" pos:end="1121:13">{<block_content pos:start="1113:17" pos:end="1119:43">

                <expr_stmt pos:start="1113:17" pos:end="1117:73"><expr pos:start="1113:17" pos:end="1117:72"><call pos:start="1113:17" pos:end="1117:72"><name pos:start="1113:17" pos:end="1113:22">av_log</name><argument_list pos:start="1113:23" pos:end="1117:72">(<argument pos:start="1113:24" pos:end="1113:31"><expr pos:start="1113:24" pos:end="1113:31"><name pos:start="1113:24" pos:end="1113:31"><name pos:start="1113:24" pos:end="1113:24">h</name><operator pos:start="1113:25" pos:end="1113:26">-&gt;</operator><name pos:start="1113:27" pos:end="1113:31">avctx</name></name></expr></argument>, <argument pos:start="1113:34" pos:end="1113:45"><expr pos:start="1113:34" pos:end="1113:45"><name pos:start="1113:34" pos:end="1113:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1115:24" pos:end="1115:74"><expr pos:start="1115:24" pos:end="1115:74"><literal type="string" pos:start="1115:24" pos:end="1115:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="1117:24" pos:end="1117:48"><expr pos:start="1117:24" pos:end="1117:48"><name pos:start="1117:24" pos:end="1117:48"><name pos:start="1117:24" pos:end="1117:25">sl</name><operator pos:start="1117:26" pos:end="1117:27">-&gt;</operator><name pos:start="1117:28" pos:end="1117:48">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1117:51" pos:end="1117:71"><expr pos:start="1117:51" pos:end="1117:71"><name pos:start="1117:51" pos:end="1117:71"><name pos:start="1117:51" pos:end="1117:52">sl</name><operator pos:start="1117:53" pos:end="1117:54">-&gt;</operator><name pos:start="1117:55" pos:end="1117:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1119:17" pos:end="1119:43">return <expr pos:start="1119:24" pos:end="1119:42"><name pos:start="1119:24" pos:end="1119:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1129:5" pos:end="1143:34"><if pos:start="1129:5" pos:end="1143:34">if <condition pos:start="1129:8" pos:end="1141:30">(<expr pos:start="1129:9" pos:end="1141:29"><name pos:start="1129:9" pos:end="1129:34"><name pos:start="1129:9" pos:end="1129:9">h</name><operator pos:start="1129:10" pos:end="1129:11">-&gt;</operator><name pos:start="1129:12" pos:end="1129:16">avctx</name><operator pos:start="1129:17" pos:end="1129:18">-&gt;</operator><name pos:start="1129:19" pos:end="1129:34">skip_loop_filter</name></name> <operator pos:start="1129:36" pos:end="1129:37">&gt;=</operator> <name pos:start="1129:39" pos:end="1129:51">AVDISCARD_ALL</name> <operator pos:start="1129:53" pos:end="1129:54">||</operator>

        <operator pos:start="1131:9" pos:end="1131:9">(</operator><name pos:start="1131:10" pos:end="1131:35"><name pos:start="1131:10" pos:end="1131:10">h</name><operator pos:start="1131:11" pos:end="1131:12">-&gt;</operator><name pos:start="1131:13" pos:end="1131:17">avctx</name><operator pos:start="1131:18" pos:end="1131:19">-&gt;</operator><name pos:start="1131:20" pos:end="1131:35">skip_loop_filter</name></name> <operator pos:start="1131:37" pos:end="1131:38">&gt;=</operator> <name pos:start="1131:40" pos:end="1131:55">AVDISCARD_NONKEY</name> <operator pos:start="1131:57" pos:end="1131:58">&amp;&amp;</operator>

         <name pos:start="1133:10" pos:end="1133:27"><name pos:start="1133:10" pos:end="1133:11">sl</name><operator pos:start="1133:12" pos:end="1133:13">-&gt;</operator><name pos:start="1133:14" pos:end="1133:27">slice_type_nos</name></name> <operator pos:start="1133:29" pos:end="1133:30">!=</operator> <name pos:start="1133:32" pos:end="1133:48">AV_PICTURE_TYPE_I</name><operator pos:start="1133:49" pos:end="1133:49">)</operator> <operator pos:start="1133:51" pos:end="1133:52">||</operator>

        <operator pos:start="1135:9" pos:end="1135:9">(</operator><name pos:start="1135:10" pos:end="1135:35"><name pos:start="1135:10" pos:end="1135:10">h</name><operator pos:start="1135:11" pos:end="1135:12">-&gt;</operator><name pos:start="1135:13" pos:end="1135:17">avctx</name><operator pos:start="1135:18" pos:end="1135:19">-&gt;</operator><name pos:start="1135:20" pos:end="1135:35">skip_loop_filter</name></name> <operator pos:start="1135:37" pos:end="1135:38">&gt;=</operator> <name pos:start="1135:40" pos:end="1135:54">AVDISCARD_BIDIR</name>  <operator pos:start="1135:57" pos:end="1135:58">&amp;&amp;</operator>

         <name pos:start="1137:10" pos:end="1137:27"><name pos:start="1137:10" pos:end="1137:11">sl</name><operator pos:start="1137:12" pos:end="1137:13">-&gt;</operator><name pos:start="1137:14" pos:end="1137:27">slice_type_nos</name></name> <operator pos:start="1137:29" pos:end="1137:30">==</operator> <name pos:start="1137:32" pos:end="1137:48">AV_PICTURE_TYPE_B</name><operator pos:start="1137:49" pos:end="1137:49">)</operator> <operator pos:start="1137:51" pos:end="1137:52">||</operator>

        <operator pos:start="1139:9" pos:end="1139:9">(</operator><name pos:start="1139:10" pos:end="1139:35"><name pos:start="1139:10" pos:end="1139:10">h</name><operator pos:start="1139:11" pos:end="1139:12">-&gt;</operator><name pos:start="1139:13" pos:end="1139:17">avctx</name><operator pos:start="1139:18" pos:end="1139:19">-&gt;</operator><name pos:start="1139:20" pos:end="1139:35">skip_loop_filter</name></name> <operator pos:start="1139:37" pos:end="1139:38">&gt;=</operator> <name pos:start="1139:40" pos:end="1139:55">AVDISCARD_NONREF</name> <operator pos:start="1139:57" pos:end="1139:58">&amp;&amp;</operator>

         <name pos:start="1141:10" pos:end="1141:23"><name pos:start="1141:10" pos:end="1141:10">h</name><operator pos:start="1141:11" pos:end="1141:12">-&gt;</operator><name pos:start="1141:13" pos:end="1141:23">nal_ref_idc</name></name> <operator pos:start="1141:25" pos:end="1141:26">==</operator> <literal type="number" pos:start="1141:28" pos:end="1141:28">0</literal><operator pos:start="1141:29" pos:end="1141:29">)</operator></expr>)</condition><block type="pseudo" pos:start="1143:9" pos:end="1143:34"><block_content pos:start="1143:9" pos:end="1143:34">

        <expr_stmt pos:start="1143:9" pos:end="1143:34"><expr pos:start="1143:9" pos:end="1143:33"><name pos:start="1143:9" pos:end="1143:29"><name pos:start="1143:9" pos:end="1143:10">sl</name><operator pos:start="1143:11" pos:end="1143:12">-&gt;</operator><name pos:start="1143:13" pos:end="1143:29">deblocking_filter</name></name> <operator pos:start="1143:31" pos:end="1143:31">=</operator> <literal type="number" pos:start="1143:33" pos:end="1143:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1147:5" pos:end="1183:5"><if pos:start="1147:5" pos:end="1183:5">if <condition pos:start="1147:8" pos:end="1147:58">(<expr pos:start="1147:9" pos:end="1147:57"><name pos:start="1147:9" pos:end="1147:29"><name pos:start="1147:9" pos:end="1147:10">sl</name><operator pos:start="1147:11" pos:end="1147:12">-&gt;</operator><name pos:start="1147:13" pos:end="1147:29">deblocking_filter</name></name> <operator pos:start="1147:31" pos:end="1147:32">==</operator> <literal type="number" pos:start="1147:34" pos:end="1147:34">1</literal> <operator pos:start="1147:36" pos:end="1147:37">&amp;&amp;</operator> <name pos:start="1147:39" pos:end="1147:53"><name pos:start="1147:39" pos:end="1147:39">h</name><operator pos:start="1147:40" pos:end="1147:41">-&gt;</operator><name pos:start="1147:42" pos:end="1147:53">max_contexts</name></name> <operator pos:start="1147:55" pos:end="1147:55">&gt;</operator> <literal type="number" pos:start="1147:57" pos:end="1147:57">1</literal></expr>)</condition> <block pos:start="1147:60" pos:end="1183:5">{<block_content pos:start="1149:9" pos:end="1181:9">

        <if_stmt pos:start="1149:9" pos:end="1181:9"><if pos:start="1149:9" pos:end="1157:9">if <condition pos:start="1149:12" pos:end="1149:51">(<expr pos:start="1149:13" pos:end="1149:50"><name pos:start="1149:13" pos:end="1149:28"><name pos:start="1149:13" pos:end="1149:13">h</name><operator pos:start="1149:14" pos:end="1149:15">-&gt;</operator><name pos:start="1149:16" pos:end="1149:20">avctx</name><operator pos:start="1149:21" pos:end="1149:22">-&gt;</operator><name pos:start="1149:23" pos:end="1149:28">flags2</name></name> <operator pos:start="1149:30" pos:end="1149:30">&amp;</operator> <name pos:start="1149:32" pos:end="1149:50">AV_CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="1149:53" pos:end="1157:9">{<block_content pos:start="1155:13" pos:end="1155:38">

            <comment type="block" pos:start="1151:13" pos:end="1153:57">/* Cheat slightly for speed:

             * Do not bother to deblock across slices. */</comment>

            <expr_stmt pos:start="1155:13" pos:end="1155:38"><expr pos:start="1155:13" pos:end="1155:37"><name pos:start="1155:13" pos:end="1155:33"><name pos:start="1155:13" pos:end="1155:14">sl</name><operator pos:start="1155:15" pos:end="1155:16">-&gt;</operator><name pos:start="1155:17" pos:end="1155:33">deblocking_filter</name></name> <operator pos:start="1155:35" pos:end="1155:35">=</operator> <literal type="number" pos:start="1155:37" pos:end="1155:37">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1157:11" pos:end="1181:9">else <block pos:start="1157:16" pos:end="1181:9">{<block_content pos:start="1159:13" pos:end="1179:13">

            <expr_stmt pos:start="1159:13" pos:end="1159:32"><expr pos:start="1159:13" pos:end="1159:31"><name pos:start="1159:13" pos:end="1159:27"><name pos:start="1159:13" pos:end="1159:13">h</name><operator pos:start="1159:14" pos:end="1159:15">-&gt;</operator><name pos:start="1159:16" pos:end="1159:27">max_contexts</name></name> <operator pos:start="1159:29" pos:end="1159:29">=</operator> <literal type="number" pos:start="1159:31" pos:end="1159:31">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1161:13" pos:end="1169:13"><if pos:start="1161:13" pos:end="1169:13">if <condition pos:start="1161:16" pos:end="1161:42">(<expr pos:start="1161:17" pos:end="1161:41"><operator pos:start="1161:17" pos:end="1161:17">!</operator><name pos:start="1161:18" pos:end="1161:41"><name pos:start="1161:18" pos:end="1161:18">h</name><operator pos:start="1161:19" pos:end="1161:20">-&gt;</operator><name pos:start="1161:21" pos:end="1161:41">single_decode_warning</name></name></expr>)</condition> <block pos:start="1161:44" pos:end="1169:13">{<block_content pos:start="1163:17" pos:end="1167:45">

                <expr_stmt pos:start="1163:17" pos:end="1165:107"><expr pos:start="1163:17" pos:end="1165:106"><call pos:start="1163:17" pos:end="1165:106"><name pos:start="1163:17" pos:end="1163:22">av_log</name><argument_list pos:start="1163:23" pos:end="1165:106">(<argument pos:start="1163:24" pos:end="1163:31"><expr pos:start="1163:24" pos:end="1163:31"><name pos:start="1163:24" pos:end="1163:31"><name pos:start="1163:24" pos:end="1163:24">h</name><operator pos:start="1163:25" pos:end="1163:26">-&gt;</operator><name pos:start="1163:27" pos:end="1163:31">avctx</name></name></expr></argument>, <argument pos:start="1163:34" pos:end="1163:44"><expr pos:start="1163:34" pos:end="1163:44"><name pos:start="1163:34" pos:end="1163:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="1165:24" pos:end="1165:105"><expr pos:start="1165:24" pos:end="1165:105"><literal type="string" pos:start="1165:24" pos:end="1165:105">"Cannot parallelize deblocking type 1, decoding such frames in sequential order\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1167:17" pos:end="1167:45"><expr pos:start="1167:17" pos:end="1167:44"><name pos:start="1167:17" pos:end="1167:40"><name pos:start="1167:17" pos:end="1167:17">h</name><operator pos:start="1167:18" pos:end="1167:19">-&gt;</operator><name pos:start="1167:20" pos:end="1167:40">single_decode_warning</name></name> <operator pos:start="1167:42" pos:end="1167:42">=</operator> <literal type="number" pos:start="1167:44" pos:end="1167:44">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1171:13" pos:end="1179:13"><if pos:start="1171:13" pos:end="1179:13">if <condition pos:start="1171:16" pos:end="1171:35">(<expr pos:start="1171:17" pos:end="1171:34"><name pos:start="1171:17" pos:end="1171:18">sl</name> <operator pos:start="1171:20" pos:end="1171:21">!=</operator> <name pos:start="1171:23" pos:end="1171:34"><name pos:start="1171:23" pos:end="1171:23">h</name><operator pos:start="1171:24" pos:end="1171:25">-&gt;</operator><name pos:start="1171:26" pos:end="1171:34">slice_ctx</name></name></expr>)</condition> <block pos:start="1171:37" pos:end="1179:13">{<block_content pos:start="1173:17" pos:end="1177:25">

                <expr_stmt pos:start="1173:17" pos:end="1175:62"><expr pos:start="1173:17" pos:end="1175:61"><call pos:start="1173:17" pos:end="1175:61"><name pos:start="1173:17" pos:end="1173:22">av_log</name><argument_list pos:start="1173:23" pos:end="1175:61">(<argument pos:start="1173:24" pos:end="1173:31"><expr pos:start="1173:24" pos:end="1173:31"><name pos:start="1173:24" pos:end="1173:31"><name pos:start="1173:24" pos:end="1173:24">h</name><operator pos:start="1173:25" pos:end="1173:26">-&gt;</operator><name pos:start="1173:27" pos:end="1173:31">avctx</name></name></expr></argument>, <argument pos:start="1173:34" pos:end="1173:45"><expr pos:start="1173:34" pos:end="1173:45"><name pos:start="1173:34" pos:end="1173:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1175:24" pos:end="1175:60"><expr pos:start="1175:24" pos:end="1175:60"><literal type="string" pos:start="1175:24" pos:end="1175:60">"Deblocking switched inside frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1177:17" pos:end="1177:25">return <expr pos:start="1177:24" pos:end="1177:24"><literal type="number" pos:start="1177:24" pos:end="1177:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1185:5" pos:end="1195:49"><expr pos:start="1185:5" pos:end="1195:48"><name pos:start="1185:5" pos:end="1185:17"><name pos:start="1185:5" pos:end="1185:6">sl</name><operator pos:start="1185:7" pos:end="1185:8">-&gt;</operator><name pos:start="1185:9" pos:end="1185:17">qp_thresh</name></name> <operator pos:start="1185:19" pos:end="1185:19">=</operator> <literal type="number" pos:start="1185:21" pos:end="1185:24">15</literal> <operator pos:start="1185:24" pos:end="1185:24">-</operator>

                   <call pos:start="1187:20" pos:end="1187:74"><name pos:start="1187:20" pos:end="1187:24">FFMIN</name><argument_list pos:start="1187:25" pos:end="1187:74">(<argument pos:start="1187:26" pos:end="1187:50"><expr pos:start="1187:26" pos:end="1187:50"><name pos:start="1187:26" pos:end="1187:50"><name pos:start="1187:26" pos:end="1187:27">sl</name><operator pos:start="1187:28" pos:end="1187:29">-&gt;</operator><name pos:start="1187:30" pos:end="1187:50">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1187:53" pos:end="1187:73"><expr pos:start="1187:53" pos:end="1187:73"><name pos:start="1187:53" pos:end="1187:73"><name pos:start="1187:53" pos:end="1187:54">sl</name><operator pos:start="1187:55" pos:end="1187:56">-&gt;</operator><name pos:start="1187:57" pos:end="1187:73">slice_beta_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="1187:76" pos:end="1187:76">-</operator>

                   <call pos:start="1189:20" pos:end="1193:57"><name pos:start="1189:20" pos:end="1189:25">FFMAX3</name><argument_list pos:start="1189:26" pos:end="1193:57">(<argument pos:start="1189:27" pos:end="1189:27"><expr pos:start="1189:27" pos:end="1189:27"><literal type="number" pos:start="1189:27" pos:end="1189:27">0</literal></expr></argument>,

                          <argument pos:start="1191:27" pos:end="1191:56"><expr pos:start="1191:27" pos:end="1191:56"><name pos:start="1191:27" pos:end="1191:56"><name pos:start="1191:27" pos:end="1191:29">pps</name><operator pos:start="1191:30" pos:end="1191:31">-&gt;</operator><name pos:start="1191:32" pos:end="1191:53">chroma_qp_index_offset</name><index pos:start="1191:54" pos:end="1191:56">[<expr pos:start="1191:55" pos:end="1191:55"><literal type="number" pos:start="1191:55" pos:end="1191:55">0</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="1193:27" pos:end="1193:56"><expr pos:start="1193:27" pos:end="1193:56"><name pos:start="1193:27" pos:end="1193:56"><name pos:start="1193:27" pos:end="1193:29">pps</name><operator pos:start="1193:30" pos:end="1193:31">-&gt;</operator><name pos:start="1193:32" pos:end="1193:53">chroma_qp_index_offset</name><index pos:start="1193:54" pos:end="1193:56">[<expr pos:start="1193:55" pos:end="1193:55"><literal type="number" pos:start="1193:55" pos:end="1193:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1193:59" pos:end="1193:59">+</operator>

                   <literal type="number" pos:start="1195:20" pos:end="1195:20">6</literal> <operator pos:start="1195:22" pos:end="1195:22">*</operator> <operator pos:start="1195:24" pos:end="1195:24">(</operator><name pos:start="1195:25" pos:end="1195:43"><name pos:start="1195:25" pos:end="1195:27">sps</name><operator pos:start="1195:28" pos:end="1195:29">-&gt;</operator><name pos:start="1195:30" pos:end="1195:43">bit_depth_luma</name></name> <operator pos:start="1195:45" pos:end="1195:45">-</operator> <literal type="number" pos:start="1195:47" pos:end="1195:47">8</literal><operator pos:start="1195:48" pos:end="1195:48">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="1199:5" pos:end="1199:45"><expr pos:start="1199:5" pos:end="1199:44"><name pos:start="1199:5" pos:end="1199:17"><name pos:start="1199:5" pos:end="1199:6">sl</name><operator pos:start="1199:7" pos:end="1199:8">-&gt;</operator><name pos:start="1199:9" pos:end="1199:17">slice_num</name></name>       <operator pos:start="1199:25" pos:end="1199:25">=</operator> <operator pos:start="1199:27" pos:end="1199:28">++</operator><name pos:start="1199:29" pos:end="1199:44"><name pos:start="1199:29" pos:end="1199:29">h</name><operator pos:start="1199:30" pos:end="1199:31">-&gt;</operator><name pos:start="1199:32" pos:end="1199:44">current_slice</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="1201:5" pos:end="1207:5"><if pos:start="1201:5" pos:end="1207:5">if <condition pos:start="1201:8" pos:end="1201:36">(<expr pos:start="1201:9" pos:end="1201:35"><name pos:start="1201:9" pos:end="1201:21"><name pos:start="1201:9" pos:end="1201:10">sl</name><operator pos:start="1201:11" pos:end="1201:12">-&gt;</operator><name pos:start="1201:13" pos:end="1201:21">slice_num</name></name> <operator pos:start="1201:23" pos:end="1201:24">&gt;=</operator> <name pos:start="1201:26" pos:end="1201:35">MAX_SLICES</name></expr>)</condition> <block pos:start="1201:38" pos:end="1207:5">{<block_content pos:start="1203:9" pos:end="1205:71">

        <expr_stmt pos:start="1203:9" pos:end="1205:71"><expr pos:start="1203:9" pos:end="1205:70"><call pos:start="1203:9" pos:end="1205:70"><name pos:start="1203:9" pos:end="1203:14">av_log</name><argument_list pos:start="1203:15" pos:end="1205:70">(<argument pos:start="1203:16" pos:end="1203:23"><expr pos:start="1203:16" pos:end="1203:23"><name pos:start="1203:16" pos:end="1203:23"><name pos:start="1203:16" pos:end="1203:16">h</name><operator pos:start="1203:17" pos:end="1203:18">-&gt;</operator><name pos:start="1203:19" pos:end="1203:23">avctx</name></name></expr></argument>, <argument pos:start="1203:26" pos:end="1203:37"><expr pos:start="1203:26" pos:end="1203:37"><name pos:start="1203:26" pos:end="1203:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="1205:16" pos:end="1205:69"><expr pos:start="1205:16" pos:end="1205:69"><literal type="string" pos:start="1205:16" pos:end="1205:69">"Too many slices, increase MAX_SLICES and recompile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="1211:5" pos:end="1273:5">for <control pos:start="1211:9" pos:end="1211:27">(<init pos:start="1211:10" pos:end="1211:15"><expr pos:start="1211:10" pos:end="1211:14"><name pos:start="1211:10" pos:end="1211:10">j</name> <operator pos:start="1211:12" pos:end="1211:12">=</operator> <literal type="number" pos:start="1211:14" pos:end="1211:14">0</literal></expr>;</init> <condition pos:start="1211:17" pos:end="1211:22"><expr pos:start="1211:17" pos:end="1211:21"><name pos:start="1211:17" pos:end="1211:17">j</name> <operator pos:start="1211:19" pos:end="1211:19">&lt;</operator> <literal type="number" pos:start="1211:21" pos:end="1211:21">2</literal></expr>;</condition> <incr pos:start="1211:24" pos:end="1211:26"><expr pos:start="1211:24" pos:end="1211:26"><name pos:start="1211:24" pos:end="1211:24">j</name><operator pos:start="1211:25" pos:end="1211:26">++</operator></expr></incr>)</control> <block pos:start="1211:29" pos:end="1273:5">{<block_content pos:start="1213:9" pos:end="1271:64">

        <decl_stmt pos:start="1213:9" pos:end="1213:24"><decl pos:start="1213:9" pos:end="1213:23"><type pos:start="1213:9" pos:end="1213:11"><name pos:start="1213:9" pos:end="1213:11">int</name></type> <name pos:start="1213:13" pos:end="1213:23"><name pos:start="1213:13" pos:end="1213:19">id_list</name><index pos:start="1213:20" pos:end="1213:23">[<expr pos:start="1213:21" pos:end="1213:22"><literal type="number" pos:start="1213:21" pos:end="1213:22">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1215:9" pos:end="1215:72"><decl pos:start="1215:9" pos:end="1215:71"><type pos:start="1215:9" pos:end="1215:13"><name pos:start="1215:9" pos:end="1215:11">int</name> <modifier pos:start="1215:13" pos:end="1215:13">*</modifier></type><name pos:start="1215:14" pos:end="1215:20">ref2frm</name> <init pos:start="1215:22" pos:end="1215:71">= <expr pos:start="1215:24" pos:end="1215:71"><name pos:start="1215:24" pos:end="1215:71"><name pos:start="1215:24" pos:end="1215:25">sl</name><operator pos:start="1215:26" pos:end="1215:27">-&gt;</operator><name pos:start="1215:28" pos:end="1215:34">ref2frm</name><index pos:start="1215:35" pos:end="1215:68">[<expr pos:start="1215:36" pos:end="1215:67"><name pos:start="1215:36" pos:end="1215:48"><name pos:start="1215:36" pos:end="1215:37">sl</name><operator pos:start="1215:38" pos:end="1215:39">-&gt;</operator><name pos:start="1215:40" pos:end="1215:48">slice_num</name></name> <operator pos:start="1215:50" pos:end="1215:50">&amp;</operator> <operator pos:start="1215:52" pos:end="1215:52">(</operator><name pos:start="1215:53" pos:end="1215:62">MAX_SLICES</name> <operator pos:start="1215:64" pos:end="1215:64">-</operator> <literal type="number" pos:start="1215:66" pos:end="1215:66">1</literal><operator pos:start="1215:67" pos:end="1215:67">)</operator></expr>]</index><index pos:start="1215:69" pos:end="1215:71">[<expr pos:start="1215:70" pos:end="1215:70"><name pos:start="1215:70" pos:end="1215:70">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="1217:9" pos:end="1251:9">for <control pos:start="1217:13" pos:end="1217:32">(<init pos:start="1217:14" pos:end="1217:19"><expr pos:start="1217:14" pos:end="1217:18"><name pos:start="1217:14" pos:end="1217:14">i</name> <operator pos:start="1217:16" pos:end="1217:16">=</operator> <literal type="number" pos:start="1217:18" pos:end="1217:18">0</literal></expr>;</init> <condition pos:start="1217:21" pos:end="1217:27"><expr pos:start="1217:21" pos:end="1217:26"><name pos:start="1217:21" pos:end="1217:21">i</name> <operator pos:start="1217:23" pos:end="1217:23">&lt;</operator> <literal type="number" pos:start="1217:25" pos:end="1217:26">16</literal></expr>;</condition> <incr pos:start="1217:29" pos:end="1217:31"><expr pos:start="1217:29" pos:end="1217:31"><name pos:start="1217:29" pos:end="1217:29">i</name><operator pos:start="1217:30" pos:end="1217:31">++</operator></expr></incr>)</control> <block pos:start="1217:34" pos:end="1251:9">{<block_content pos:start="1219:13" pos:end="1249:13">

            <expr_stmt pos:start="1219:13" pos:end="1219:28"><expr pos:start="1219:13" pos:end="1219:27"><name pos:start="1219:13" pos:end="1219:22"><name pos:start="1219:13" pos:end="1219:19">id_list</name><index pos:start="1219:20" pos:end="1219:22">[<expr pos:start="1219:21" pos:end="1219:21"><name pos:start="1219:21" pos:end="1219:21">i</name></expr>]</index></name> <operator pos:start="1219:24" pos:end="1219:24">=</operator> <literal type="number" pos:start="1219:26" pos:end="1219:27">60</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1221:13" pos:end="1249:13"><if pos:start="1221:13" pos:end="1249:13">if <condition pos:start="1221:16" pos:end="1223:53">(<expr pos:start="1221:17" pos:end="1223:52"><name pos:start="1221:17" pos:end="1221:17">j</name> <operator pos:start="1221:19" pos:end="1221:19">&lt;</operator> <name pos:start="1221:21" pos:end="1221:34"><name pos:start="1221:21" pos:end="1221:22">sl</name><operator pos:start="1221:23" pos:end="1221:24">-&gt;</operator><name pos:start="1221:25" pos:end="1221:34">list_count</name></name> <operator pos:start="1221:36" pos:end="1221:37">&amp;&amp;</operator> <name pos:start="1221:39" pos:end="1221:39">i</name> <operator pos:start="1221:41" pos:end="1221:41">&lt;</operator> <name pos:start="1221:43" pos:end="1221:58"><name pos:start="1221:43" pos:end="1221:44">sl</name><operator pos:start="1221:45" pos:end="1221:46">-&gt;</operator><name pos:start="1221:47" pos:end="1221:55">ref_count</name><index pos:start="1221:56" pos:end="1221:58">[<expr pos:start="1221:57" pos:end="1221:57"><name pos:start="1221:57" pos:end="1221:57">j</name></expr>]</index></name> <operator pos:start="1221:60" pos:end="1221:61">&amp;&amp;</operator>

                <name pos:start="1223:17" pos:end="1223:34"><name pos:start="1223:17" pos:end="1223:18">sl</name><operator pos:start="1223:19" pos:end="1223:20">-&gt;</operator><name pos:start="1223:21" pos:end="1223:28">ref_list</name><index pos:start="1223:29" pos:end="1223:31">[<expr pos:start="1223:30" pos:end="1223:30"><name pos:start="1223:30" pos:end="1223:30">j</name></expr>]</index><index pos:start="1223:32" pos:end="1223:34">[<expr pos:start="1223:33" pos:end="1223:33"><name pos:start="1223:33" pos:end="1223:33">i</name></expr>]</index></name><operator pos:start="1223:35" pos:end="1223:35">.</operator><name pos:start="1223:36" pos:end="1223:52"><name pos:start="1223:36" pos:end="1223:41">parent</name><operator pos:start="1223:42" pos:end="1223:43">-&gt;</operator><name pos:start="1223:44" pos:end="1223:44">f</name><operator pos:start="1223:45" pos:end="1223:46">-&gt;</operator><name pos:start="1223:47" pos:end="1223:49">buf</name><index pos:start="1223:50" pos:end="1223:52">[<expr pos:start="1223:51" pos:end="1223:51"><literal type="number" pos:start="1223:51" pos:end="1223:51">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="1223:55" pos:end="1249:13">{<block_content pos:start="1225:17" pos:end="1247:21">

                <decl_stmt pos:start="1225:17" pos:end="1225:22"><decl pos:start="1225:17" pos:end="1225:21"><type pos:start="1225:17" pos:end="1225:19"><name pos:start="1225:17" pos:end="1225:19">int</name></type> <name pos:start="1225:21" pos:end="1225:21">k</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1227:17" pos:end="1227:77"><decl pos:start="1227:17" pos:end="1227:76"><type pos:start="1227:17" pos:end="1227:26"><name pos:start="1227:17" pos:end="1227:24">AVBuffer</name> <modifier pos:start="1227:26" pos:end="1227:26">*</modifier></type><name pos:start="1227:27" pos:end="1227:29">buf</name> <init pos:start="1227:31" pos:end="1227:76">= <expr pos:start="1227:33" pos:end="1227:76"><name pos:start="1227:33" pos:end="1227:50"><name pos:start="1227:33" pos:end="1227:34">sl</name><operator pos:start="1227:35" pos:end="1227:36">-&gt;</operator><name pos:start="1227:37" pos:end="1227:44">ref_list</name><index pos:start="1227:45" pos:end="1227:47">[<expr pos:start="1227:46" pos:end="1227:46"><name pos:start="1227:46" pos:end="1227:46">j</name></expr>]</index><index pos:start="1227:48" pos:end="1227:50">[<expr pos:start="1227:49" pos:end="1227:49"><name pos:start="1227:49" pos:end="1227:49">i</name></expr>]</index></name><operator pos:start="1227:51" pos:end="1227:51">.</operator><name pos:start="1227:52" pos:end="1227:68"><name pos:start="1227:52" pos:end="1227:57">parent</name><operator pos:start="1227:58" pos:end="1227:59">-&gt;</operator><name pos:start="1227:60" pos:end="1227:60">f</name><operator pos:start="1227:61" pos:end="1227:62">-&gt;</operator><name pos:start="1227:63" pos:end="1227:65">buf</name><index pos:start="1227:66" pos:end="1227:68">[<expr pos:start="1227:67" pos:end="1227:67"><literal type="number" pos:start="1227:67" pos:end="1227:67">0</literal></expr>]</index></name><operator pos:start="1227:69" pos:end="1227:70">-&gt;</operator><name pos:start="1227:71" pos:end="1227:76">buffer</name></expr></init></decl>;</decl_stmt>

                <for pos:start="1229:17" pos:end="1237:21">for <control pos:start="1229:21" pos:end="1229:56">(<init pos:start="1229:22" pos:end="1229:27"><expr pos:start="1229:22" pos:end="1229:26"><name pos:start="1229:22" pos:end="1229:22">k</name> <operator pos:start="1229:24" pos:end="1229:24">=</operator> <literal type="number" pos:start="1229:26" pos:end="1229:26">0</literal></expr>;</init> <condition pos:start="1229:29" pos:end="1229:51"><expr pos:start="1229:29" pos:end="1229:50"><name pos:start="1229:29" pos:end="1229:29">k</name> <operator pos:start="1229:31" pos:end="1229:31">&lt;</operator> <name pos:start="1229:33" pos:end="1229:50"><name pos:start="1229:33" pos:end="1229:33">h</name><operator pos:start="1229:34" pos:end="1229:35">-&gt;</operator><name pos:start="1229:36" pos:end="1229:50">short_ref_count</name></name></expr>;</condition> <incr pos:start="1229:53" pos:end="1229:55"><expr pos:start="1229:53" pos:end="1229:55"><name pos:start="1229:53" pos:end="1229:53">k</name><operator pos:start="1229:54" pos:end="1229:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1231:21" pos:end="1237:21"><block_content pos:start="1231:21" pos:end="1237:21">

                    <if_stmt pos:start="1231:21" pos:end="1237:21"><if pos:start="1231:21" pos:end="1237:21">if <condition pos:start="1231:24" pos:end="1231:66">(<expr pos:start="1231:25" pos:end="1231:65"><name pos:start="1231:25" pos:end="1231:39"><name pos:start="1231:25" pos:end="1231:25">h</name><operator pos:start="1231:26" pos:end="1231:27">-&gt;</operator><name pos:start="1231:28" pos:end="1231:36">short_ref</name><index pos:start="1231:37" pos:end="1231:39">[<expr pos:start="1231:38" pos:end="1231:38"><name pos:start="1231:38" pos:end="1231:38">k</name></expr>]</index></name><operator pos:start="1231:40" pos:end="1231:41">-&gt;</operator><name pos:start="1231:42" pos:end="1231:50"><name pos:start="1231:42" pos:end="1231:42">f</name><operator pos:start="1231:43" pos:end="1231:44">-&gt;</operator><name pos:start="1231:45" pos:end="1231:47">buf</name><index pos:start="1231:48" pos:end="1231:50">[<expr pos:start="1231:49" pos:end="1231:49"><literal type="number" pos:start="1231:49" pos:end="1231:49">0</literal></expr>]</index></name><operator pos:start="1231:51" pos:end="1231:52">-&gt;</operator><name pos:start="1231:53" pos:end="1231:58">buffer</name> <operator pos:start="1231:60" pos:end="1231:61">==</operator> <name pos:start="1231:63" pos:end="1231:65">buf</name></expr>)</condition> <block pos:start="1231:68" pos:end="1237:21">{<block_content pos:start="1233:25" pos:end="1235:30">

                        <expr_stmt pos:start="1233:25" pos:end="1233:39"><expr pos:start="1233:25" pos:end="1233:38"><name pos:start="1233:25" pos:end="1233:34"><name pos:start="1233:25" pos:end="1233:31">id_list</name><index pos:start="1233:32" pos:end="1233:34">[<expr pos:start="1233:33" pos:end="1233:33"><name pos:start="1233:33" pos:end="1233:33">i</name></expr>]</index></name> <operator pos:start="1233:36" pos:end="1233:36">=</operator> <name pos:start="1233:38" pos:end="1233:38">k</name></expr>;</expr_stmt>

                        <break pos:start="1235:25" pos:end="1235:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <for pos:start="1239:17" pos:end="1247:21">for <control pos:start="1239:21" pos:end="1239:55">(<init pos:start="1239:22" pos:end="1239:27"><expr pos:start="1239:22" pos:end="1239:26"><name pos:start="1239:22" pos:end="1239:22">k</name> <operator pos:start="1239:24" pos:end="1239:24">=</operator> <literal type="number" pos:start="1239:26" pos:end="1239:26">0</literal></expr>;</init> <condition pos:start="1239:29" pos:end="1239:50"><expr pos:start="1239:29" pos:end="1239:49"><name pos:start="1239:29" pos:end="1239:29">k</name> <operator pos:start="1239:31" pos:end="1239:31">&lt;</operator> <name pos:start="1239:33" pos:end="1239:49"><name pos:start="1239:33" pos:end="1239:33">h</name><operator pos:start="1239:34" pos:end="1239:35">-&gt;</operator><name pos:start="1239:36" pos:end="1239:49">long_ref_count</name></name></expr>;</condition> <incr pos:start="1239:52" pos:end="1239:54"><expr pos:start="1239:52" pos:end="1239:54"><name pos:start="1239:52" pos:end="1239:52">k</name><operator pos:start="1239:53" pos:end="1239:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1241:21" pos:end="1247:21"><block_content pos:start="1241:21" pos:end="1247:21">

                    <if_stmt pos:start="1241:21" pos:end="1247:21"><if pos:start="1241:21" pos:end="1247:21">if <condition pos:start="1241:24" pos:end="1241:83">(<expr pos:start="1241:25" pos:end="1241:82"><name pos:start="1241:25" pos:end="1241:38"><name pos:start="1241:25" pos:end="1241:25">h</name><operator pos:start="1241:26" pos:end="1241:27">-&gt;</operator><name pos:start="1241:28" pos:end="1241:35">long_ref</name><index pos:start="1241:36" pos:end="1241:38">[<expr pos:start="1241:37" pos:end="1241:37"><name pos:start="1241:37" pos:end="1241:37">k</name></expr>]</index></name> <operator pos:start="1241:40" pos:end="1241:41">&amp;&amp;</operator> <name pos:start="1241:43" pos:end="1241:56"><name pos:start="1241:43" pos:end="1241:43">h</name><operator pos:start="1241:44" pos:end="1241:45">-&gt;</operator><name pos:start="1241:46" pos:end="1241:53">long_ref</name><index pos:start="1241:54" pos:end="1241:56">[<expr pos:start="1241:55" pos:end="1241:55"><name pos:start="1241:55" pos:end="1241:55">k</name></expr>]</index></name><operator pos:start="1241:57" pos:end="1241:58">-&gt;</operator><name pos:start="1241:59" pos:end="1241:67"><name pos:start="1241:59" pos:end="1241:59">f</name><operator pos:start="1241:60" pos:end="1241:61">-&gt;</operator><name pos:start="1241:62" pos:end="1241:64">buf</name><index pos:start="1241:65" pos:end="1241:67">[<expr pos:start="1241:66" pos:end="1241:66"><literal type="number" pos:start="1241:66" pos:end="1241:66">0</literal></expr>]</index></name><operator pos:start="1241:68" pos:end="1241:69">-&gt;</operator><name pos:start="1241:70" pos:end="1241:75">buffer</name> <operator pos:start="1241:77" pos:end="1241:78">==</operator> <name pos:start="1241:80" pos:end="1241:82">buf</name></expr>)</condition> <block pos:start="1241:85" pos:end="1247:21">{<block_content pos:start="1243:25" pos:end="1245:30">

                        <expr_stmt pos:start="1243:25" pos:end="1243:60"><expr pos:start="1243:25" pos:end="1243:59"><name pos:start="1243:25" pos:end="1243:34"><name pos:start="1243:25" pos:end="1243:31">id_list</name><index pos:start="1243:32" pos:end="1243:34">[<expr pos:start="1243:33" pos:end="1243:33"><name pos:start="1243:33" pos:end="1243:33">i</name></expr>]</index></name> <operator pos:start="1243:36" pos:end="1243:36">=</operator> <name pos:start="1243:38" pos:end="1243:55"><name pos:start="1243:38" pos:end="1243:38">h</name><operator pos:start="1243:39" pos:end="1243:40">-&gt;</operator><name pos:start="1243:41" pos:end="1243:55">short_ref_count</name></name> <operator pos:start="1243:57" pos:end="1243:57">+</operator> <name pos:start="1243:59" pos:end="1243:59">k</name></expr>;</expr_stmt>

                        <break pos:start="1245:25" pos:end="1245:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1255:9" pos:end="1257:24"><expr pos:start="1255:9" pos:end="1257:23"><name pos:start="1255:9" pos:end="1255:18"><name pos:start="1255:9" pos:end="1255:15">ref2frm</name><index pos:start="1255:16" pos:end="1255:18">[<expr pos:start="1255:17" pos:end="1255:17"><literal type="number" pos:start="1255:17" pos:end="1255:17">0</literal></expr>]</index></name> <operator pos:start="1255:20" pos:end="1255:20">=</operator>

        <name pos:start="1257:9" pos:end="1257:18"><name pos:start="1257:9" pos:end="1257:15">ref2frm</name><index pos:start="1257:16" pos:end="1257:18">[<expr pos:start="1257:17" pos:end="1257:17"><literal type="number" pos:start="1257:17" pos:end="1257:17">1</literal></expr>]</index></name> <operator pos:start="1257:20" pos:end="1257:20">=</operator> <operator pos:start="1257:22" pos:end="1257:22">-</operator><literal type="number" pos:start="1257:23" pos:end="1257:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1259:9" pos:end="1261:81">for <control pos:start="1259:13" pos:end="1259:32">(<init pos:start="1259:14" pos:end="1259:19"><expr pos:start="1259:14" pos:end="1259:18"><name pos:start="1259:14" pos:end="1259:14">i</name> <operator pos:start="1259:16" pos:end="1259:16">=</operator> <literal type="number" pos:start="1259:18" pos:end="1259:18">0</literal></expr>;</init> <condition pos:start="1259:21" pos:end="1259:27"><expr pos:start="1259:21" pos:end="1259:26"><name pos:start="1259:21" pos:end="1259:21">i</name> <operator pos:start="1259:23" pos:end="1259:23">&lt;</operator> <literal type="number" pos:start="1259:25" pos:end="1259:26">16</literal></expr>;</condition> <incr pos:start="1259:29" pos:end="1259:31"><expr pos:start="1259:29" pos:end="1259:31"><name pos:start="1259:29" pos:end="1259:29">i</name><operator pos:start="1259:30" pos:end="1259:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1261:13" pos:end="1261:81"><block_content pos:start="1261:13" pos:end="1261:81">

            <expr_stmt pos:start="1261:13" pos:end="1261:81"><expr pos:start="1261:13" pos:end="1261:80"><name pos:start="1261:13" pos:end="1261:26"><name pos:start="1261:13" pos:end="1261:19">ref2frm</name><index pos:start="1261:20" pos:end="1261:26">[<expr pos:start="1261:21" pos:end="1261:25"><name pos:start="1261:21" pos:end="1261:21">i</name> <operator pos:start="1261:23" pos:end="1261:23">+</operator> <literal type="number" pos:start="1261:25" pos:end="1261:25">2</literal></expr>]</index></name> <operator pos:start="1261:28" pos:end="1261:28">=</operator> <literal type="number" pos:start="1261:30" pos:end="1261:30">4</literal> <operator pos:start="1261:32" pos:end="1261:32">*</operator> <name pos:start="1261:34" pos:end="1261:43"><name pos:start="1261:34" pos:end="1261:40">id_list</name><index pos:start="1261:41" pos:end="1261:43">[<expr pos:start="1261:42" pos:end="1261:42"><name pos:start="1261:42" pos:end="1261:42">i</name></expr>]</index></name> <operator pos:start="1261:45" pos:end="1261:45">+</operator> <operator pos:start="1261:47" pos:end="1261:47">(</operator><name pos:start="1261:48" pos:end="1261:65"><name pos:start="1261:48" pos:end="1261:49">sl</name><operator pos:start="1261:50" pos:end="1261:51">-&gt;</operator><name pos:start="1261:52" pos:end="1261:59">ref_list</name><index pos:start="1261:60" pos:end="1261:62">[<expr pos:start="1261:61" pos:end="1261:61"><name pos:start="1261:61" pos:end="1261:61">j</name></expr>]</index><index pos:start="1261:63" pos:end="1261:65">[<expr pos:start="1261:64" pos:end="1261:64"><name pos:start="1261:64" pos:end="1261:64">i</name></expr>]</index></name><operator pos:start="1261:66" pos:end="1261:66">.</operator><name pos:start="1261:67" pos:end="1261:75">reference</name> <operator pos:start="1261:77" pos:end="1261:77">&amp;</operator> <literal type="number" pos:start="1261:79" pos:end="1261:79">3</literal><operator pos:start="1261:80" pos:end="1261:80">)</operator></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="1263:9" pos:end="1265:29"><expr pos:start="1263:9" pos:end="1265:28"><name pos:start="1263:9" pos:end="1263:23"><name pos:start="1263:9" pos:end="1263:15">ref2frm</name><index pos:start="1263:16" pos:end="1263:23">[<expr pos:start="1263:17" pos:end="1263:22"><literal type="number" pos:start="1263:17" pos:end="1263:18">18</literal> <operator pos:start="1263:20" pos:end="1263:20">+</operator> <literal type="number" pos:start="1263:22" pos:end="1263:22">0</literal></expr>]</index></name> <operator pos:start="1263:25" pos:end="1263:25">=</operator>

        <name pos:start="1265:9" pos:end="1265:23"><name pos:start="1265:9" pos:end="1265:15">ref2frm</name><index pos:start="1265:16" pos:end="1265:23">[<expr pos:start="1265:17" pos:end="1265:22"><literal type="number" pos:start="1265:17" pos:end="1265:20">18</literal> <operator pos:start="1265:20" pos:end="1265:20">+</operator> <literal type="number" pos:start="1265:22" pos:end="1265:22">1</literal></expr>]</index></name> <operator pos:start="1265:25" pos:end="1265:25">=</operator> <operator pos:start="1265:27" pos:end="1265:27">-</operator><literal type="number" pos:start="1265:28" pos:end="1265:28">1</literal></expr>;</expr_stmt>

        <for pos:start="1267:9" pos:end="1271:64">for <control pos:start="1267:13" pos:end="1267:33">(<init pos:start="1267:14" pos:end="1267:20"><expr pos:start="1267:14" pos:end="1267:19"><name pos:start="1267:14" pos:end="1267:14">i</name> <operator pos:start="1267:16" pos:end="1267:16">=</operator> <literal type="number" pos:start="1267:18" pos:end="1267:19">16</literal></expr>;</init> <condition pos:start="1267:22" pos:end="1267:28"><expr pos:start="1267:22" pos:end="1267:27"><name pos:start="1267:22" pos:end="1267:22">i</name> <operator pos:start="1267:24" pos:end="1267:24">&lt;</operator> <literal type="number" pos:start="1267:26" pos:end="1267:27">48</literal></expr>;</condition> <incr pos:start="1267:30" pos:end="1267:32"><expr pos:start="1267:30" pos:end="1267:32"><name pos:start="1267:30" pos:end="1267:30">i</name><operator pos:start="1267:31" pos:end="1267:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1269:13" pos:end="1271:64"><block_content pos:start="1269:13" pos:end="1271:64">

            <expr_stmt pos:start="1269:13" pos:end="1271:64"><expr pos:start="1269:13" pos:end="1271:63"><name pos:start="1269:13" pos:end="1269:26"><name pos:start="1269:13" pos:end="1269:19">ref2frm</name><index pos:start="1269:20" pos:end="1269:26">[<expr pos:start="1269:21" pos:end="1269:25"><name pos:start="1269:21" pos:end="1269:21">i</name> <operator pos:start="1269:23" pos:end="1269:23">+</operator> <literal type="number" pos:start="1269:25" pos:end="1269:25">4</literal></expr>]</index></name> <operator pos:start="1269:28" pos:end="1269:28">=</operator> <literal type="number" pos:start="1269:30" pos:end="1269:30">4</literal> <operator pos:start="1269:32" pos:end="1269:32">*</operator> <name pos:start="1269:34" pos:end="1269:55"><name pos:start="1269:34" pos:end="1269:40">id_list</name><index pos:start="1269:41" pos:end="1269:55">[<expr pos:start="1269:42" pos:end="1269:54"><operator pos:start="1269:42" pos:end="1269:42">(</operator><name pos:start="1269:43" pos:end="1269:43">i</name> <operator pos:start="1269:45" pos:end="1269:45">-</operator> <literal type="number" pos:start="1269:47" pos:end="1269:48">16</literal><operator pos:start="1269:49" pos:end="1269:49">)</operator> <operator pos:start="1269:51" pos:end="1269:52">&gt;&gt;</operator> <literal type="number" pos:start="1269:54" pos:end="1269:54">1</literal></expr>]</index></name> <operator pos:start="1269:57" pos:end="1269:57">+</operator>

                             <operator pos:start="1271:30" pos:end="1271:30">(</operator><name pos:start="1271:31" pos:end="1271:48"><name pos:start="1271:31" pos:end="1271:32">sl</name><operator pos:start="1271:33" pos:end="1271:34">-&gt;</operator><name pos:start="1271:35" pos:end="1271:42">ref_list</name><index pos:start="1271:43" pos:end="1271:45">[<expr pos:start="1271:44" pos:end="1271:44"><name pos:start="1271:44" pos:end="1271:44">j</name></expr>]</index><index pos:start="1271:46" pos:end="1271:48">[<expr pos:start="1271:47" pos:end="1271:47"><name pos:start="1271:47" pos:end="1271:47">i</name></expr>]</index></name><operator pos:start="1271:49" pos:end="1271:49">.</operator><name pos:start="1271:50" pos:end="1271:58">reference</name> <operator pos:start="1271:60" pos:end="1271:60">&amp;</operator> <literal type="number" pos:start="1271:62" pos:end="1271:62">3</literal><operator pos:start="1271:63" pos:end="1271:63">)</operator></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="1277:5" pos:end="1315:5"><if pos:start="1277:5" pos:end="1315:5">if <condition pos:start="1277:8" pos:end="1277:45">(<expr pos:start="1277:9" pos:end="1277:44"><name pos:start="1277:9" pos:end="1277:23"><name pos:start="1277:9" pos:end="1277:9">h</name><operator pos:start="1277:10" pos:end="1277:11">-&gt;</operator><name pos:start="1277:12" pos:end="1277:16">avctx</name><operator pos:start="1277:17" pos:end="1277:18">-&gt;</operator><name pos:start="1277:19" pos:end="1277:23">debug</name></name> <operator pos:start="1277:25" pos:end="1277:25">&amp;</operator> <name pos:start="1277:27" pos:end="1277:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="1277:47" pos:end="1315:5">{<block_content pos:start="1279:9" pos:end="1313:106">

        <expr_stmt pos:start="1279:9" pos:end="1313:106"><expr pos:start="1279:9" pos:end="1313:105"><call pos:start="1279:9" pos:end="1313:105"><name pos:start="1279:9" pos:end="1279:14">av_log</name><argument_list pos:start="1279:15" pos:end="1313:105">(<argument pos:start="1279:16" pos:end="1279:23"><expr pos:start="1279:16" pos:end="1279:23"><name pos:start="1279:16" pos:end="1279:23"><name pos:start="1279:16" pos:end="1279:16">h</name><operator pos:start="1279:17" pos:end="1279:18">-&gt;</operator><name pos:start="1279:19" pos:end="1279:23">avctx</name></name></expr></argument>, <argument pos:start="1279:26" pos:end="1279:37"><expr pos:start="1279:26" pos:end="1279:37"><name pos:start="1279:26" pos:end="1279:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="1281:16" pos:end="1281:114"><expr pos:start="1281:16" pos:end="1281:114"><literal type="string" pos:start="1281:16" pos:end="1281:114">"slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n"</literal></expr></argument>,

               <argument pos:start="1283:16" pos:end="1283:28"><expr pos:start="1283:16" pos:end="1283:28"><name pos:start="1283:16" pos:end="1283:28"><name pos:start="1283:16" pos:end="1283:17">sl</name><operator pos:start="1283:18" pos:end="1283:19">-&gt;</operator><name pos:start="1283:20" pos:end="1283:28">slice_num</name></name></expr></argument>,

               <argument pos:start="1285:16" pos:end="1285:110"><expr pos:start="1285:16" pos:end="1285:110"><operator pos:start="1285:16" pos:end="1285:16">(</operator><ternary pos:start="1285:17" pos:end="1285:109"><condition pos:start="1285:17" pos:end="1285:52"><expr pos:start="1285:17" pos:end="1285:50"><name pos:start="1285:17" pos:end="1285:36"><name pos:start="1285:17" pos:end="1285:17">h</name><operator pos:start="1285:18" pos:end="1285:19">-&gt;</operator><name pos:start="1285:20" pos:end="1285:36">picture_structure</name></name> <operator pos:start="1285:38" pos:end="1285:39">==</operator> <name pos:start="1285:41" pos:end="1285:50">PICT_FRAME</name></expr> ?</condition><then pos:start="1285:54" pos:end="1285:56"> <expr pos:start="1285:54" pos:end="1285:56"><literal type="string" pos:start="1285:54" pos:end="1285:56">"F"</literal></expr> </then><else pos:start="1285:58" pos:end="1285:109">: <expr pos:start="1285:60" pos:end="1285:109"><ternary pos:start="1285:60" pos:end="1285:109"><condition pos:start="1285:60" pos:end="1285:99"><expr pos:start="1285:60" pos:end="1285:97"><name pos:start="1285:60" pos:end="1285:79"><name pos:start="1285:60" pos:end="1285:60">h</name><operator pos:start="1285:61" pos:end="1285:62">-&gt;</operator><name pos:start="1285:63" pos:end="1285:79">picture_structure</name></name> <operator pos:start="1285:81" pos:end="1285:82">==</operator> <name pos:start="1285:84" pos:end="1285:97">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="1285:101" pos:end="1285:103"> <expr pos:start="1285:101" pos:end="1285:103"><literal type="string" pos:start="1285:101" pos:end="1285:103">"T"</literal></expr> </then><else pos:start="1285:105" pos:end="1285:109">: <expr pos:start="1285:107" pos:end="1285:109"><literal type="string" pos:start="1285:107" pos:end="1285:109">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="1285:110" pos:end="1285:110">)</operator></expr></argument>,

               <argument pos:start="1287:16" pos:end="1287:32"><expr pos:start="1287:16" pos:end="1287:32"><name pos:start="1287:16" pos:end="1287:32">first_mb_in_slice</name></expr></argument>,

               <argument pos:start="1289:16" pos:end="1289:55"><expr pos:start="1289:16" pos:end="1289:55"><call pos:start="1289:16" pos:end="1289:55"><name pos:start="1289:16" pos:end="1289:39">av_get_picture_type_char</name><argument_list pos:start="1289:40" pos:end="1289:55">(<argument pos:start="1289:41" pos:end="1289:54"><expr pos:start="1289:41" pos:end="1289:54"><name pos:start="1289:41" pos:end="1289:54"><name pos:start="1289:41" pos:end="1289:42">sl</name><operator pos:start="1289:43" pos:end="1289:44">-&gt;</operator><name pos:start="1289:45" pos:end="1289:54">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="1291:16" pos:end="1291:49"><expr pos:start="1291:16" pos:end="1291:49"><ternary pos:start="1291:16" pos:end="1291:49"><condition pos:start="1291:16" pos:end="1291:37"><expr pos:start="1291:16" pos:end="1291:35"><name pos:start="1291:16" pos:end="1291:35"><name pos:start="1291:16" pos:end="1291:17">sl</name><operator pos:start="1291:18" pos:end="1291:19">-&gt;</operator><name pos:start="1291:20" pos:end="1291:35">slice_type_fixed</name></name></expr> ?</condition><then pos:start="1291:39" pos:end="1291:44"> <expr pos:start="1291:39" pos:end="1291:44"><literal type="string" pos:start="1291:39" pos:end="1291:44">" fix"</literal></expr> </then><else pos:start="1291:46" pos:end="1291:49">: <expr pos:start="1291:48" pos:end="1291:49"><literal type="string" pos:start="1291:48" pos:end="1291:49">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1293:16" pos:end="1293:62"><expr pos:start="1293:16" pos:end="1293:62"><ternary pos:start="1293:16" pos:end="1293:62"><condition pos:start="1293:16" pos:end="1293:50"><expr pos:start="1293:16" pos:end="1293:48"><name pos:start="1293:16" pos:end="1293:31"><name pos:start="1293:16" pos:end="1293:16">h</name><operator pos:start="1293:17" pos:end="1293:18">-&gt;</operator><name pos:start="1293:19" pos:end="1293:31">nal_unit_type</name></name> <operator pos:start="1293:33" pos:end="1293:34">==</operator> <name pos:start="1293:36" pos:end="1293:48">NAL_IDR_SLICE</name></expr> ?</condition><then pos:start="1293:52" pos:end="1293:57"> <expr pos:start="1293:52" pos:end="1293:57"><literal type="string" pos:start="1293:52" pos:end="1293:57">" IDR"</literal></expr> </then><else pos:start="1293:59" pos:end="1293:62">: <expr pos:start="1293:61" pos:end="1293:62"><literal type="string" pos:start="1293:61" pos:end="1293:62">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1295:16" pos:end="1295:21"><expr pos:start="1295:16" pos:end="1295:21"><name pos:start="1295:16" pos:end="1295:21">pps_id</name></expr></argument>, <argument pos:start="1295:24" pos:end="1295:35"><expr pos:start="1295:24" pos:end="1295:35"><name pos:start="1295:24" pos:end="1295:35"><name pos:start="1295:24" pos:end="1295:24">h</name><operator pos:start="1295:25" pos:end="1295:26">-&gt;</operator><name pos:start="1295:27" pos:end="1295:35">frame_num</name></name></expr></argument>,

               <argument pos:start="1297:16" pos:end="1297:43"><expr pos:start="1297:16" pos:end="1297:43"><name pos:start="1297:16" pos:end="1297:43"><name pos:start="1297:16" pos:end="1297:16">h</name><operator pos:start="1297:17" pos:end="1297:18">-&gt;</operator><name pos:start="1297:19" pos:end="1297:29">cur_pic_ptr</name><operator pos:start="1297:30" pos:end="1297:31">-&gt;</operator><name pos:start="1297:32" pos:end="1297:40">field_poc</name><index pos:start="1297:41" pos:end="1297:43">[<expr pos:start="1297:42" pos:end="1297:42"><literal type="number" pos:start="1297:42" pos:end="1297:42">0</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1299:16" pos:end="1299:43"><expr pos:start="1299:16" pos:end="1299:43"><name pos:start="1299:16" pos:end="1299:43"><name pos:start="1299:16" pos:end="1299:16">h</name><operator pos:start="1299:17" pos:end="1299:18">-&gt;</operator><name pos:start="1299:19" pos:end="1299:29">cur_pic_ptr</name><operator pos:start="1299:30" pos:end="1299:31">-&gt;</operator><name pos:start="1299:32" pos:end="1299:40">field_poc</name><index pos:start="1299:41" pos:end="1299:43">[<expr pos:start="1299:42" pos:end="1299:42"><literal type="number" pos:start="1299:42" pos:end="1299:42">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1301:16" pos:end="1301:31"><expr pos:start="1301:16" pos:end="1301:31"><name pos:start="1301:16" pos:end="1301:31"><name pos:start="1301:16" pos:end="1301:17">sl</name><operator pos:start="1301:18" pos:end="1301:19">-&gt;</operator><name pos:start="1301:20" pos:end="1301:28">ref_count</name><index pos:start="1301:29" pos:end="1301:31">[<expr pos:start="1301:30" pos:end="1301:30"><literal type="number" pos:start="1301:30" pos:end="1301:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1301:34" pos:end="1301:49"><expr pos:start="1301:34" pos:end="1301:49"><name pos:start="1301:34" pos:end="1301:49"><name pos:start="1301:34" pos:end="1301:35">sl</name><operator pos:start="1301:36" pos:end="1301:37">-&gt;</operator><name pos:start="1301:38" pos:end="1301:46">ref_count</name><index pos:start="1301:47" pos:end="1301:49">[<expr pos:start="1301:48" pos:end="1301:48"><literal type="number" pos:start="1301:48" pos:end="1301:48">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1303:16" pos:end="1303:25"><expr pos:start="1303:16" pos:end="1303:25"><name pos:start="1303:16" pos:end="1303:25"><name pos:start="1303:16" pos:end="1303:17">sl</name><operator pos:start="1303:18" pos:end="1303:19">-&gt;</operator><name pos:start="1303:20" pos:end="1303:25">qscale</name></name></expr></argument>,

               <argument pos:start="1305:16" pos:end="1305:36"><expr pos:start="1305:16" pos:end="1305:36"><name pos:start="1305:16" pos:end="1305:36"><name pos:start="1305:16" pos:end="1305:17">sl</name><operator pos:start="1305:18" pos:end="1305:19">-&gt;</operator><name pos:start="1305:20" pos:end="1305:36">deblocking_filter</name></name></expr></argument>,

               <argument pos:start="1307:16" pos:end="1307:40"><expr pos:start="1307:16" pos:end="1307:40"><name pos:start="1307:16" pos:end="1307:40"><name pos:start="1307:16" pos:end="1307:17">sl</name><operator pos:start="1307:18" pos:end="1307:19">-&gt;</operator><name pos:start="1307:20" pos:end="1307:40">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1307:43" pos:end="1307:63"><expr pos:start="1307:43" pos:end="1307:63"><name pos:start="1307:43" pos:end="1307:63"><name pos:start="1307:43" pos:end="1307:44">sl</name><operator pos:start="1307:45" pos:end="1307:46">-&gt;</operator><name pos:start="1307:47" pos:end="1307:63">slice_beta_offset</name></name></expr></argument>,

               <argument pos:start="1309:16" pos:end="1309:33"><expr pos:start="1309:16" pos:end="1309:33"><name pos:start="1309:16" pos:end="1309:33"><name pos:start="1309:16" pos:end="1309:17">sl</name><operator pos:start="1309:18" pos:end="1309:19">-&gt;</operator><name pos:start="1309:20" pos:end="1309:22">pwt</name><operator pos:start="1309:23" pos:end="1309:23">.</operator><name pos:start="1309:24" pos:end="1309:33">use_weight</name></name></expr></argument>,

               <argument pos:start="1311:16" pos:end="1311:78"><expr pos:start="1311:16" pos:end="1311:78"><ternary pos:start="1311:16" pos:end="1311:78"><condition pos:start="1311:16" pos:end="1311:69"><expr pos:start="1311:16" pos:end="1311:67"><name pos:start="1311:16" pos:end="1311:33"><name pos:start="1311:16" pos:end="1311:17">sl</name><operator pos:start="1311:18" pos:end="1311:19">-&gt;</operator><name pos:start="1311:20" pos:end="1311:22">pwt</name><operator pos:start="1311:23" pos:end="1311:23">.</operator><name pos:start="1311:24" pos:end="1311:33">use_weight</name></name> <operator pos:start="1311:35" pos:end="1311:36">==</operator> <literal type="number" pos:start="1311:38" pos:end="1311:38">1</literal> <operator pos:start="1311:40" pos:end="1311:41">&amp;&amp;</operator> <name pos:start="1311:43" pos:end="1311:67"><name pos:start="1311:43" pos:end="1311:44">sl</name><operator pos:start="1311:45" pos:end="1311:46">-&gt;</operator><name pos:start="1311:47" pos:end="1311:49">pwt</name><operator pos:start="1311:50" pos:end="1311:50">.</operator><name pos:start="1311:51" pos:end="1311:67">use_weight_chroma</name></name></expr> ?</condition><then pos:start="1311:71" pos:end="1311:73"> <expr pos:start="1311:71" pos:end="1311:73"><literal type="string" pos:start="1311:71" pos:end="1311:73">"c"</literal></expr> </then><else pos:start="1311:75" pos:end="1311:78">: <expr pos:start="1311:77" pos:end="1311:78"><literal type="string" pos:start="1311:77" pos:end="1311:78">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1313:16" pos:end="1313:104"><expr pos:start="1313:16" pos:end="1313:104"><ternary pos:start="1313:16" pos:end="1313:104"><condition pos:start="1313:16" pos:end="1313:52"><expr pos:start="1313:16" pos:end="1313:50"><name pos:start="1313:16" pos:end="1313:29"><name pos:start="1313:16" pos:end="1313:17">sl</name><operator pos:start="1313:18" pos:end="1313:19">-&gt;</operator><name pos:start="1313:20" pos:end="1313:29">slice_type</name></name> <operator pos:start="1313:31" pos:end="1313:32">==</operator> <name pos:start="1313:34" pos:end="1313:50">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="1313:54" pos:end="1313:99"> <expr pos:start="1313:54" pos:end="1313:99"><operator pos:start="1313:54" pos:end="1313:54">(</operator><ternary pos:start="1313:55" pos:end="1313:98"><condition pos:start="1313:55" pos:end="1313:82"><expr pos:start="1313:55" pos:end="1313:80"><name pos:start="1313:55" pos:end="1313:80"><name pos:start="1313:55" pos:end="1313:56">sl</name><operator pos:start="1313:57" pos:end="1313:58">-&gt;</operator><name pos:start="1313:59" pos:end="1313:80">direct_spatial_mv_pred</name></name></expr> ?</condition><then pos:start="1313:84" pos:end="1313:89"> <expr pos:start="1313:84" pos:end="1313:89"><literal type="string" pos:start="1313:84" pos:end="1313:89">"SPAT"</literal></expr> </then><else pos:start="1313:91" pos:end="1313:98">: <expr pos:start="1313:93" pos:end="1313:98"><literal type="string" pos:start="1313:93" pos:end="1313:98">"TEMP"</literal></expr></else></ternary><operator pos:start="1313:99" pos:end="1313:99">)</operator></expr> </then><else pos:start="1313:101" pos:end="1313:104">: <expr pos:start="1313:103" pos:end="1313:104"><literal type="string" pos:start="1313:103" pos:end="1313:104">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1319:5" pos:end="1319:13">return <expr pos:start="1319:12" pos:end="1319:12"><literal type="number" pos:start="1319:12" pos:end="1319:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
