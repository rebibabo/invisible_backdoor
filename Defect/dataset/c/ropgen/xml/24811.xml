<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24811.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:28"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">FILE</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:29">probe_splashfile</name><parameter_list pos:start="1:30" pos:end="1:79">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:49">int</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:61">file_sizep</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:78"><decl pos:start="1:64" pos:end="1:78"><type pos:start="1:64" pos:end="1:78"><name pos:start="1:64" pos:end="1:66">int</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:78">file_typep</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:28">{<block_content pos:start="5:5" pos:end="103:28">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:12">fp</name> <init pos:start="5:14" pos:end="5:19">= <expr pos:start="5:16" pos:end="5:19"><name pos:start="5:16" pos:end="5:19">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">fop_ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">file_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">file_type</name> <init pos:start="11:19" pos:end="11:22">= <expr pos:start="11:21" pos:end="11:22"><operator pos:start="11:21" pos:end="11:21">-</operator><literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:21">buf</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">2</literal></expr>]</index></name> <init pos:start="13:26" pos:end="13:33">= <expr pos:start="13:28" pos:end="13:33"><block pos:start="13:28" pos:end="13:33">{<expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr>, <expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:31">filehead_value</name> <init pos:start="15:33" pos:end="15:35">= <expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">bmp_bpp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:6">fp</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:30"><name pos:start="21:10" pos:end="21:14">fopen</name><argument_list pos:start="21:15" pos:end="21:30">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23">filename</name></expr></argument>, <argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><literal type="string" pos:start="21:26" pos:end="21:29">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="103:28"><if pos:start="23:5" pos:end="103:28">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:10">fp</name> <operator pos:start="23:12" pos:end="23:13">==</operator> <name pos:start="23:15" pos:end="23:18">NULL</name></expr>)</condition> <block pos:start="23:21" pos:end="103:28">{<block_content pos:start="25:9" pos:end="103:28">

        <expr_stmt pos:start="25:9" pos:end="25:60"><expr pos:start="25:9" pos:end="25:59"><call pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:59">(<argument pos:start="25:22" pos:end="25:48"><expr pos:start="25:22" pos:end="25:48"><literal type="string" pos:start="25:22" pos:end="25:48">"failed to open file '%s'."</literal></expr></argument>, <argument pos:start="25:51" pos:end="25:58"><expr pos:start="25:51" pos:end="25:58"><name pos:start="25:51" pos:end="25:58">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:25">/* check file size */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><call pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:9">fseek</name><argument_list pos:start="31:10" pos:end="31:27">(<argument pos:start="31:11" pos:end="31:12"><expr pos:start="31:11" pos:end="31:12"><name pos:start="31:11" pos:end="31:12">fp</name></expr></argument>, <argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><literal type="number" pos:start="31:15" pos:end="31:16">0L</literal></expr></argument>, <argument pos:start="31:19" pos:end="31:26"><expr pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:26">SEEK_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:13">file_size</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:21">ftell</name><argument_list pos:start="33:22" pos:end="33:25">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="103:28"><if pos:start="35:5" pos:end="103:28">if <condition pos:start="35:8" pos:end="35:22">(<expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:17">file_size</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">2</literal></expr>)</condition> <block pos:start="35:24" pos:end="103:28">{<block_content pos:start="37:9" pos:end="103:28">

        <expr_stmt pos:start="37:9" pos:end="37:71"><expr pos:start="37:9" pos:end="37:70"><call pos:start="37:9" pos:end="37:70"><name pos:start="37:9" pos:end="37:20">error_report</name><argument_list pos:start="37:21" pos:end="37:70">(<argument pos:start="37:22" pos:end="37:59"><expr pos:start="37:22" pos:end="37:59"><literal type="string" pos:start="37:22" pos:end="37:59">"file size is less than 2 bytes '%s'."</literal></expr></argument>, <argument pos:start="37:62" pos:end="37:69"><expr pos:start="37:62" pos:end="37:69"><name pos:start="37:62" pos:end="37:69">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="43:5" pos:end="43:24">/* check magic ID */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><call pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:9">fseek</name><argument_list pos:start="45:10" pos:end="45:27">(<argument pos:start="45:11" pos:end="45:12"><expr pos:start="45:11" pos:end="45:12"><name pos:start="45:11" pos:end="45:12">fp</name></expr></argument>, <argument pos:start="45:15" pos:end="45:16"><expr pos:start="45:15" pos:end="45:16"><literal type="number" pos:start="45:15" pos:end="45:16">0L</literal></expr></argument>, <argument pos:start="45:19" pos:end="45:26"><expr pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:26">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:11">fop_ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:34"><name pos:start="47:15" pos:end="47:19">fread</name><argument_list pos:start="47:20" pos:end="47:34">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">buf</name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>, <argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">2</literal></expr></argument>, <argument pos:start="47:32" pos:end="47:33"><expr pos:start="47:32" pos:end="47:33"><name pos:start="47:32" pos:end="47:33">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>








    <expr_stmt pos:start="56:5" pos:end="56:55"><expr pos:start="56:5" pos:end="56:54"><name pos:start="56:5" pos:end="56:18">filehead_value</name> <operator pos:start="56:20" pos:end="56:20">=</operator> <operator pos:start="56:22" pos:end="56:22">(</operator><name pos:start="56:23" pos:end="56:28"><name pos:start="56:23" pos:end="56:25">buf</name><index pos:start="56:26" pos:end="56:28">[<expr pos:start="56:27" pos:end="56:27"><literal type="number" pos:start="56:27" pos:end="56:27">0</literal></expr>]</index></name> <operator pos:start="56:30" pos:end="56:30">+</operator> <operator pos:start="56:32" pos:end="56:32">(</operator><name pos:start="56:33" pos:end="56:38"><name pos:start="56:33" pos:end="56:35">buf</name><index pos:start="56:36" pos:end="56:38">[<expr pos:start="56:37" pos:end="56:37"><literal type="number" pos:start="56:37" pos:end="56:37">1</literal></expr>]</index></name> <operator pos:start="56:40" pos:end="56:41">&lt;&lt;</operator> <literal type="number" pos:start="56:43" pos:end="56:43">8</literal><operator pos:start="56:44" pos:end="56:44">)</operator><operator pos:start="56:45" pos:end="56:45">)</operator> <operator pos:start="56:47" pos:end="56:47">&amp;</operator> <literal type="number" pos:start="56:49" pos:end="56:54">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="58:5" pos:end="103:28"><if pos:start="58:5" pos:end="62:5">if <condition pos:start="58:8" pos:end="58:33">(<expr pos:start="58:9" pos:end="58:32"><name pos:start="58:9" pos:end="58:22">filehead_value</name> <operator pos:start="58:24" pos:end="58:25">==</operator> <literal type="number" pos:start="58:27" pos:end="58:32">0xd8ff</literal></expr>)</condition> <block pos:start="58:35" pos:end="62:5">{<block_content pos:start="60:9" pos:end="60:29">

        <expr_stmt pos:start="60:9" pos:end="60:29"><expr pos:start="60:9" pos:end="60:28"><name pos:start="60:9" pos:end="60:17">file_type</name> <operator pos:start="60:19" pos:end="60:19">=</operator> <name pos:start="60:21" pos:end="60:28">JPG_FILE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="62:7" pos:end="103:28">else <block pos:start="62:12" pos:end="103:28">{<block_content pos:start="64:9" pos:end="103:28">

        <if_stmt pos:start="64:9" pos:end="103:28"><if pos:start="64:9" pos:end="103:28">if <condition pos:start="64:12" pos:end="64:37">(<expr pos:start="64:13" pos:end="64:36"><name pos:start="64:13" pos:end="64:26">filehead_value</name> <operator pos:start="64:28" pos:end="64:29">==</operator> <literal type="number" pos:start="64:31" pos:end="64:36">0x4d42</literal></expr>)</condition> <block pos:start="64:39" pos:end="103:28">{<block_content pos:start="66:13" pos:end="103:28">

            <expr_stmt pos:start="66:13" pos:end="66:33"><expr pos:start="66:13" pos:end="66:32"><name pos:start="66:13" pos:end="66:21">file_type</name> <operator pos:start="66:23" pos:end="66:23">=</operator> <name pos:start="66:25" pos:end="66:32">BMP_FILE</name></expr>;</expr_stmt>



    <if_stmt pos:start="70:5" pos:end="103:28"><if pos:start="70:5" pos:end="103:28">if <condition pos:start="70:8" pos:end="70:22">(<expr pos:start="70:9" pos:end="70:21"><name pos:start="70:9" pos:end="70:17">file_type</name> <operator pos:start="70:19" pos:end="70:19">&lt;</operator> <literal type="number" pos:start="70:21" pos:end="70:21">0</literal></expr>)</condition> <block pos:start="70:24" pos:end="103:28">{<block_content pos:start="72:9" pos:end="103:28">

        <expr_stmt pos:start="72:9" pos:end="74:51"><expr pos:start="72:9" pos:end="74:50"><call pos:start="72:9" pos:end="74:50"><name pos:start="72:9" pos:end="72:20">error_report</name><argument_list pos:start="72:21" pos:end="74:50">(<argument pos:start="72:22" pos:end="72:55"><expr pos:start="72:22" pos:end="72:55"><literal type="string" pos:start="72:22" pos:end="72:55">"'%s' not jpg/bmp file,head:0x%x."</literal></expr></argument>,

                         <argument pos:start="74:26" pos:end="74:33"><expr pos:start="74:26" pos:end="74:33"><name pos:start="74:26" pos:end="74:33">filename</name></expr></argument>, <argument pos:start="74:36" pos:end="74:49"><expr pos:start="74:36" pos:end="74:49"><name pos:start="74:36" pos:end="74:49">filehead_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="80:5" pos:end="80:23">/* check BMP bpp */</comment>

    <if_stmt pos:start="82:5" pos:end="103:28"><if pos:start="82:5" pos:end="103:28">if <condition pos:start="82:8" pos:end="82:30">(<expr pos:start="82:9" pos:end="82:29"><name pos:start="82:9" pos:end="82:17">file_type</name> <operator pos:start="82:19" pos:end="82:20">==</operator> <name pos:start="82:22" pos:end="82:29">BMP_FILE</name></expr>)</condition> <block pos:start="82:32" pos:end="103:28">{<block_content pos:start="84:9" pos:end="103:28">

        <expr_stmt pos:start="84:9" pos:end="84:32"><expr pos:start="84:9" pos:end="84:31"><call pos:start="84:9" pos:end="84:31"><name pos:start="84:9" pos:end="84:13">fseek</name><argument_list pos:start="84:14" pos:end="84:31">(<argument pos:start="84:15" pos:end="84:16"><expr pos:start="84:15" pos:end="84:16"><name pos:start="84:15" pos:end="84:16">fp</name></expr></argument>, <argument pos:start="84:19" pos:end="84:20"><expr pos:start="84:19" pos:end="84:20"><literal type="number" pos:start="84:19" pos:end="84:20">28</literal></expr></argument>, <argument pos:start="84:23" pos:end="84:30"><expr pos:start="84:23" pos:end="84:30"><name pos:start="84:23" pos:end="84:30">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="86:9" pos:end="86:39"><expr pos:start="86:9" pos:end="86:38"><name pos:start="86:9" pos:end="86:15">fop_ret</name> <operator pos:start="86:17" pos:end="86:17">=</operator> <call pos:start="86:19" pos:end="86:38"><name pos:start="86:19" pos:end="86:23">fread</name><argument_list pos:start="86:24" pos:end="86:38">(<argument pos:start="86:25" pos:end="86:27"><expr pos:start="86:25" pos:end="86:27"><name pos:start="86:25" pos:end="86:27">buf</name></expr></argument>, <argument pos:start="86:30" pos:end="86:30"><expr pos:start="86:30" pos:end="86:30"><literal type="number" pos:start="86:30" pos:end="86:30">1</literal></expr></argument>, <argument pos:start="86:33" pos:end="86:33"><expr pos:start="86:33" pos:end="86:33"><literal type="number" pos:start="86:33" pos:end="86:33">2</literal></expr></argument>, <argument pos:start="86:36" pos:end="86:37"><expr pos:start="86:36" pos:end="86:37"><name pos:start="86:36" pos:end="86:37">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="88:9" pos:end="88:52"><expr pos:start="88:9" pos:end="88:51"><name pos:start="88:9" pos:end="88:15">bmp_bpp</name> <operator pos:start="88:17" pos:end="88:17">=</operator> <operator pos:start="88:19" pos:end="88:19">(</operator><name pos:start="88:20" pos:end="88:25"><name pos:start="88:20" pos:end="88:22">buf</name><index pos:start="88:23" pos:end="88:25">[<expr pos:start="88:24" pos:end="88:24"><literal type="number" pos:start="88:24" pos:end="88:24">0</literal></expr>]</index></name> <operator pos:start="88:27" pos:end="88:27">+</operator> <operator pos:start="88:29" pos:end="88:29">(</operator><name pos:start="88:30" pos:end="88:35"><name pos:start="88:30" pos:end="88:32">buf</name><index pos:start="88:33" pos:end="88:35">[<expr pos:start="88:34" pos:end="88:34"><literal type="number" pos:start="88:34" pos:end="88:34">1</literal></expr>]</index></name> <operator pos:start="88:37" pos:end="88:38">&lt;&lt;</operator> <literal type="number" pos:start="88:40" pos:end="88:40">8</literal><operator pos:start="88:41" pos:end="88:41">)</operator><operator pos:start="88:42" pos:end="88:42">)</operator> <operator pos:start="88:44" pos:end="88:44">&amp;</operator> <literal type="number" pos:start="88:46" pos:end="88:51">0xffff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="90:9" pos:end="103:28"><if pos:start="90:9" pos:end="103:28">if <condition pos:start="90:12" pos:end="90:26">(<expr pos:start="90:13" pos:end="90:25"><name pos:start="90:13" pos:end="90:19">bmp_bpp</name> <operator pos:start="90:21" pos:end="90:22">!=</operator> <literal type="number" pos:start="90:24" pos:end="90:25">24</literal></expr>)</condition> <block pos:start="90:28" pos:end="103:28">{<block_content pos:start="92:13" pos:end="103:28">

            <expr_stmt pos:start="92:13" pos:end="92:62"><expr pos:start="92:13" pos:end="92:61"><call pos:start="92:13" pos:end="92:61"><name pos:start="92:13" pos:end="92:24">error_report</name><argument_list pos:start="92:25" pos:end="92:61">(<argument pos:start="92:26" pos:end="92:60"><expr pos:start="92:26" pos:end="92:60"><literal type="string" pos:start="92:26" pos:end="92:60">"only 24bpp bmp file is supported."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <comment type="block" pos:start="99:5" pos:end="99:23">/* return values */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:28"><expr pos:start="101:5" pos:end="101:27"><operator pos:start="101:5" pos:end="101:5">*</operator><name pos:start="101:6" pos:end="101:15">file_sizep</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:27">file_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:28"><expr pos:start="103:5" pos:end="103:27"><operator pos:start="103:5" pos:end="103:5">*</operator><name pos:start="103:6" pos:end="103:15">file_typep</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:27">file_type</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
