<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16696.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">tcp_wait_for_connect</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:39"><decl pos:start="1:34" pos:end="1:39"><type pos:start="1:34" pos:end="1:39"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:39">fd</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:46">Error</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">err</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="25:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:15">(<expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:10">fd</name> <operator pos:start="9:12" pos:end="9:12">&lt;</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>)</condition> <block pos:start="9:17" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:28">

        <expr_stmt pos:start="11:9" pos:end="11:70"><expr pos:start="11:9" pos:end="11:69"><call pos:start="11:9" pos:end="11:69"><name pos:start="11:9" pos:end="11:15">DPRINTF</name><argument_list pos:start="11:16" pos:end="11:69">(<argument pos:start="11:17" pos:end="11:45"><expr pos:start="11:17" pos:end="11:45"><literal type="string" pos:start="11:17" pos:end="11:45">"migrate connect error: %s\n"</literal></expr></argument>, <argument pos:start="11:48" pos:end="11:68"><expr pos:start="11:48" pos:end="11:68"><call pos:start="11:48" pos:end="11:68"><name pos:start="11:48" pos:end="11:63">error_get_pretty</name><argument_list pos:start="11:64" pos:end="11:68">(<argument pos:start="11:65" pos:end="11:67"><expr pos:start="11:65" pos:end="11:67"><name pos:start="11:65" pos:end="11:67">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:22">to_dst_file</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <name pos:start="13:26" pos:end="13:29">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><call pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:24">migrate_fd_error</name><argument_list pos:start="15:25" pos:end="15:27">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="25:5">else <block pos:start="17:12" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:30">

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><call pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:15">DPRINTF</name><argument_list pos:start="19:16" pos:end="19:44">(<argument pos:start="19:17" pos:end="19:43"><expr pos:start="19:17" pos:end="19:43"><literal type="string" pos:start="19:17" pos:end="19:43">"migrate connect success\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">to_dst_file</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:52"><name pos:start="21:26" pos:end="21:42">qemu_fopen_socket</name><argument_list pos:start="21:43" pos:end="21:52">(<argument pos:start="21:44" pos:end="21:45"><expr pos:start="21:44" pos:end="21:45"><name pos:start="21:44" pos:end="21:45">fd</name></expr></argument>, <argument pos:start="21:48" pos:end="21:51"><expr pos:start="21:48" pos:end="21:51"><literal type="string" pos:start="21:48" pos:end="21:51">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:26">migrate_fd_connect</name><argument_list pos:start="23:27" pos:end="23:29">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
