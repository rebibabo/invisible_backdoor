<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/322.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">s390_pci_sclp_configure</name><parameter_list pos:start="1:29" pos:end="1:40">(<parameter pos:start="1:30" pos:end="1:39"><decl pos:start="1:30" pos:end="1:39"><type pos:start="1:30" pos:end="1:35"><name pos:start="1:30" pos:end="1:33">SCCB</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">sccb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:50">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PciCfgSccb</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">psccb</name> <init pos:start="5:23" pos:end="5:42">= <expr pos:start="5:25" pos:end="5:42"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:35">PciCfgSccb</name> <operator pos:start="5:37" pos:end="5:37">*</operator><operator pos:start="5:38" pos:end="5:38">)</operator><name pos:start="5:39" pos:end="5:42">sccb</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">S390PCIBusDevice</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:27">pbdev</name> <init pos:start="7:29" pos:end="7:79">= <expr pos:start="7:31" pos:end="7:79"><call pos:start="7:31" pos:end="7:79"><name pos:start="7:31" pos:end="7:54">s390_pci_find_dev_by_fid</name><argument_list pos:start="7:55" pos:end="7:79">(<argument pos:start="7:56" pos:end="7:78"><expr pos:start="7:56" pos:end="7:78"><call pos:start="7:56" pos:end="7:78"><name pos:start="7:56" pos:end="7:66">be32_to_cpu</name><argument_list pos:start="7:67" pos:end="7:78">(<argument pos:start="7:68" pos:end="7:77"><expr pos:start="7:68" pos:end="7:77"><name pos:start="7:68" pos:end="7:77"><name pos:start="7:68" pos:end="7:72">psccb</name><operator pos:start="7:73" pos:end="7:74">-&gt;</operator><name pos:start="7:75" pos:end="7:77">aid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:15">rc</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:19">be16_to_cpu</name><argument_list pos:start="13:20" pos:end="13:35">(<argument pos:start="13:21" pos:end="13:34"><expr pos:start="13:21" pos:end="13:34"><name pos:start="13:21" pos:end="13:34"><name pos:start="13:21" pos:end="13:24">sccb</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:27">h</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:34">length</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:37" pos:end="13:37">&lt;</operator> <literal type="number" pos:start="13:39" pos:end="13:40">16</literal></expr>)</condition> <block pos:start="13:43" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:10">rc</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:45">SCLP_RC_INSUFFICIENT_SCCB_LENGTH</name></expr>;</expr_stmt>

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="43:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13">pbdev</name></expr>)</condition> <block pos:start="23:16" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:9">

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:30">(<expr pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:17">pbdev</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:29">configured</name></name></expr>)</condition> <block pos:start="25:32" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:44">

            <expr_stmt pos:start="27:13" pos:end="27:44"><expr pos:start="27:13" pos:end="27:43"><name pos:start="27:13" pos:end="27:14">rc</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:43">SCLP_RC_NO_ACTION_REQUIRED</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="35:9">else <block pos:start="29:16" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:43">

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:17">pbdev</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:29">configured</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <name pos:start="31:33" pos:end="31:36">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:14">rc</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:42">SCLP_RC_NORMAL_COMPLETION</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:47">

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><call pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:15">DPRINTF</name><argument_list pos:start="39:16" pos:end="39:45">(<argument pos:start="39:17" pos:end="39:44"><expr pos:start="39:17" pos:end="39:44"><literal type="string" pos:start="39:17" pos:end="39:44">"sclp config no dev found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:10">rc</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:46">SCLP_RC_ADAPTER_ID_NOT_RECOGNIZED</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="45:1" pos:end="45:4"><name pos:start="45:1" pos:end="45:3">out</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="47:50"><expr pos:start="47:5" pos:end="47:49"><name pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:9">psccb</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:17">header</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:31">response_code</name></name> <operator pos:start="47:33" pos:end="47:33">=</operator> <call pos:start="47:35" pos:end="47:49"><name pos:start="47:35" pos:end="47:45">cpu_to_be16</name><argument_list pos:start="47:46" pos:end="47:49">(<argument pos:start="47:47" pos:end="47:48"><expr pos:start="47:47" pos:end="47:48"><name pos:start="47:47" pos:end="47:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
