<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11614.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">pty_chr_read</name><parameter_list pos:start="1:25" pos:end="1:38">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PtyCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:34">= <expr pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:26">chr</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:21">[<expr pos:start="11:17" pos:end="11:20"><literal type="number" pos:start="11:17" pos:end="11:20">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:7">len</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <sizeof pos:start="15:11" pos:end="15:21">sizeof<argument_list pos:start="15:17" pos:end="15:21">(<argument pos:start="15:18" pos:end="15:20"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:20">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:28"><if pos:start="17:5" pos:end="19:28">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">&gt;</operator> <name pos:start="17:15" pos:end="17:27"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:27">read_bytes</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:28"><block_content pos:start="19:9" pos:end="19:28">

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:27"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:27">read_bytes</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:15"><if pos:start="21:5" pos:end="23:15">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:15"><block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:8">size</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:32"><name pos:start="25:12" pos:end="25:15">read</name><argument_list pos:start="25:16" pos:end="25:32">(<argument pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:21">fd</name></name></expr></argument>, <argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">buf</name></expr></argument>, <argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="29:20">(<expr pos:start="27:9" pos:end="29:19"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:13">size</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <operator pos:start="27:18" pos:end="27:18">-</operator><literal type="number" pos:start="27:19" pos:end="27:19">1</literal> <operator pos:start="27:21" pos:end="27:22">&amp;&amp;</operator> <name pos:start="27:24" pos:end="27:28">errno</name> <operator pos:start="27:30" pos:end="27:31">==</operator> <name pos:start="27:33" pos:end="27:35">EIO</name><operator pos:start="27:36" pos:end="27:36">)</operator> <operator pos:start="27:38" pos:end="27:39">||</operator>

        <operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:13">size</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal><operator pos:start="29:19" pos:end="29:19">)</operator></expr>)</condition> <block pos:start="29:22" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><call pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:21">pty_chr_state</name><argument_list pos:start="31:22" pos:end="31:29">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">chr</name></expr></argument>, <argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:14">&gt;</operator> <literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>)</condition> <block pos:start="37:19" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:38">

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><call pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:21">pty_chr_state</name><argument_list pos:start="39:22" pos:end="39:29">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:25">chr</name></expr></argument>, <argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><call pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:21">qemu_chr_read</name><argument_list pos:start="41:22" pos:end="41:37">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">chr</name></expr></argument>, <argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">buf</name></expr></argument>, <argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
