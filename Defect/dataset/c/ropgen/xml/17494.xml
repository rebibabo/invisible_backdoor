<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17494.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:27">h_enter</name><parameter_list pos:start="1:28" pos:end="3:68">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">PowerPCCPU</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cpu</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:69"><decl pos:start="1:46" pos:end="1:69"><type pos:start="1:46" pos:end="1:69"><name pos:start="1:46" pos:end="1:62">sPAPRMachineState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">spapr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><name pos:start="3:29" pos:end="3:40">target_ulong</name></type> <name pos:start="3:42" pos:end="3:47">opcode</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><name pos:start="3:50" pos:end="3:61">target_ulong</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="139:1">{<block_content pos:start="7:5" pos:end="137:21">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:22">flags</name> <init pos:start="9:24" pos:end="9:32">= <expr pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:29">args</name><index pos:start="9:30" pos:end="9:32">[<expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:26">pte_index</name> <init pos:start="11:28" pos:end="11:36">= <expr pos:start="11:30" pos:end="11:36"><name pos:start="11:30" pos:end="11:36"><name pos:start="11:30" pos:end="11:33">args</name><index pos:start="11:34" pos:end="11:36">[<expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:21">pteh</name> <init pos:start="13:23" pos:end="13:31">= <expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:28">args</name><index pos:start="13:29" pos:end="13:31">[<expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:21">ptel</name> <init pos:start="15:23" pos:end="15:31">= <expr pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:28">args</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:20">apshift</name></decl>, <decl pos:start="17:23" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:23" pos:end="17:29">spshift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:22">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">target_ulong</name></type> <name pos:start="21:18" pos:end="21:22">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:18">token</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:74"><expr pos:start="27:5" pos:end="27:73"><name pos:start="27:5" pos:end="27:11">apshift</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:73"><name pos:start="27:15" pos:end="27:46">ppc_hash64_hpte_page_shift_noslb</name><argument_list pos:start="27:47" pos:end="27:73">(<argument pos:start="27:48" pos:end="27:50"><expr pos:start="27:48" pos:end="27:50"><name pos:start="27:48" pos:end="27:50">cpu</name></expr></argument>, <argument pos:start="27:53" pos:end="27:56"><expr pos:start="27:53" pos:end="27:56"><name pos:start="27:53" pos:end="27:56">pteh</name></expr></argument>, <argument pos:start="27:59" pos:end="27:62"><expr pos:start="27:59" pos:end="27:62"><name pos:start="27:59" pos:end="27:62">ptel</name></expr></argument>, <argument pos:start="27:65" pos:end="27:72"><expr pos:start="27:65" pos:end="27:72"><operator pos:start="27:65" pos:end="27:65">&amp;</operator><name pos:start="27:66" pos:end="27:72">spshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:16">apshift</name></expr>)</condition> <block pos:start="29:19" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:27">

        <comment type="block" pos:start="31:9" pos:end="31:36">/* Bad page size encoding */</comment>

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:61"><expr pos:start="39:5" pos:end="39:60"><name pos:start="39:5" pos:end="39:9">raddr</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:17">ptel</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <name pos:start="39:21" pos:end="39:32">HPTE64_R_RPN</name><operator pos:start="39:33" pos:end="39:33">)</operator> <operator pos:start="39:35" pos:end="39:35">&amp;</operator> <operator pos:start="39:37" pos:end="39:37">~</operator><operator pos:start="39:38" pos:end="39:38">(</operator><operator pos:start="39:39" pos:end="39:39">(</operator><literal type="number" pos:start="39:40" pos:end="39:43">1ULL</literal> <operator pos:start="39:45" pos:end="39:46">&lt;&lt;</operator> <name pos:start="39:48" pos:end="39:54">apshift</name><operator pos:start="39:55" pos:end="39:55">)</operator> <operator pos:start="39:57" pos:end="39:57">-</operator> <literal type="number" pos:start="39:59" pos:end="39:59">1</literal><operator pos:start="39:60" pos:end="39:60">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="69:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:37">(<expr pos:start="43:9" pos:end="43:36"><call pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:22">is_ram_address</name><argument_list pos:start="43:23" pos:end="43:36">(<argument pos:start="43:24" pos:end="43:28"><expr pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:28">spapr</name></expr></argument>, <argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35">raddr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:39" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:9">

        <comment type="block" pos:start="45:9" pos:end="45:49">/* Regular RAM - should have WIMG=0010 */</comment>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:49">(<expr pos:start="47:13" pos:end="47:48"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:17">ptel</name> <operator pos:start="47:19" pos:end="47:19">&amp;</operator> <name pos:start="47:21" pos:end="47:33">HPTE64_R_WIMG</name><operator pos:start="47:34" pos:end="47:34">)</operator> <operator pos:start="47:36" pos:end="47:37">!=</operator> <name pos:start="47:39" pos:end="47:48">HPTE64_R_M</name></expr>)</condition> <block pos:start="47:51" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:31">

            <return pos:start="49:13" pos:end="49:31">return <expr pos:start="49:20" pos:end="49:30"><name pos:start="49:20" pos:end="49:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="69:5">else <block pos:start="53:12" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:9">

        <comment type="block" pos:start="55:9" pos:end="55:38">/* Looks like an IO address */</comment>

        <comment type="block" pos:start="57:9" pos:end="59:63">/* FIXME: What WIMG combinations could be sensible for IO?

         * For now we allow WIMG=010x, but are there others? */</comment>

        <comment type="block" pos:start="61:9" pos:end="61:69">/* FIXME: Should we check against registered IO addresses? */</comment>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:74">(<expr pos:start="63:13" pos:end="63:73"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:17">ptel</name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:31">HPTE64_R_W</name> <operator pos:start="63:33" pos:end="63:33">|</operator> <name pos:start="63:35" pos:end="63:44">HPTE64_R_I</name> <operator pos:start="63:46" pos:end="63:46">|</operator> <name pos:start="63:48" pos:end="63:57">HPTE64_R_M</name><operator pos:start="63:58" pos:end="63:58">)</operator><operator pos:start="63:59" pos:end="63:59">)</operator> <operator pos:start="63:61" pos:end="63:62">!=</operator> <name pos:start="63:64" pos:end="63:73">HPTE64_R_I</name></expr>)</condition> <block pos:start="63:76" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:31">

            <return pos:start="65:13" pos:end="65:31">return <expr pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:8">pteh</name> <operator pos:start="73:10" pos:end="73:11">&amp;=</operator> <operator pos:start="73:13" pos:end="73:13">~</operator><literal type="number" pos:start="73:14" pos:end="73:20">0x60ULL</literal></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:41">(<expr pos:start="77:9" pos:end="77:40"><operator pos:start="77:9" pos:end="77:9">!</operator><call pos:start="77:10" pos:end="77:40"><name pos:start="77:10" pos:end="77:24">valid_pte_index</name><argument_list pos:start="77:25" pos:end="77:40">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">env</name></expr></argument>, <argument pos:start="77:31" pos:end="77:39"><expr pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:39">pte_index</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:43" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:27">

        <return pos:start="79:9" pos:end="79:27">return <expr pos:start="79:16" pos:end="79:26"><name pos:start="79:16" pos:end="79:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:14"><expr pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:9">index</name> <operator pos:start="85:11" pos:end="85:11">=</operator> <literal type="number" pos:start="85:13" pos:end="85:13">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="125:5"><if pos:start="87:5" pos:end="111:5">if <condition pos:start="87:8" pos:end="87:39">(<expr pos:start="87:9" pos:end="87:38"><call pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:14">likely</name><argument_list pos:start="87:15" pos:end="87:38">(<argument pos:start="87:16" pos:end="87:37"><expr pos:start="87:16" pos:end="87:37"><operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:21">flags</name> <operator pos:start="87:23" pos:end="87:23">&amp;</operator> <name pos:start="87:25" pos:end="87:31">H_EXACT</name><operator pos:start="87:32" pos:end="87:32">)</operator> <operator pos:start="87:34" pos:end="87:35">==</operator> <literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:41" pos:end="111:5">{<block_content pos:start="89:9" pos:end="109:9">

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:17">pte_index</name> <operator pos:start="89:19" pos:end="89:20">&amp;=</operator> <operator pos:start="89:22" pos:end="89:22">~</operator><literal type="number" pos:start="89:23" pos:end="89:26">7ULL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:56"><expr pos:start="91:9" pos:end="91:55"><name pos:start="91:9" pos:end="91:13">token</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:55"><name pos:start="91:17" pos:end="91:39">ppc_hash64_start_access</name><argument_list pos:start="91:40" pos:end="91:55">(<argument pos:start="91:41" pos:end="91:43"><expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:43">cpu</name></expr></argument>, <argument pos:start="91:46" pos:end="91:54"><expr pos:start="91:46" pos:end="91:54"><name pos:start="91:46" pos:end="91:54">pte_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="93:9" pos:end="101:9">for <control pos:start="93:13" pos:end="93:34">(<init pos:start="93:14" pos:end="93:14">;</init> <condition pos:start="93:16" pos:end="93:25"><expr pos:start="93:16" pos:end="93:24"><name pos:start="93:16" pos:end="93:20">index</name> <operator pos:start="93:22" pos:end="93:22">&lt;</operator> <literal type="number" pos:start="93:24" pos:end="93:24">8</literal></expr>;</condition> <incr pos:start="93:27" pos:end="93:33"><expr pos:start="93:27" pos:end="93:33"><name pos:start="93:27" pos:end="93:31">index</name><operator pos:start="93:32" pos:end="93:33">++</operator></expr></incr>)</control> <block pos:start="93:36" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:13">

            <if_stmt pos:start="95:13" pos:end="99:13"><if pos:start="95:13" pos:end="99:13">if <condition pos:start="95:16" pos:end="95:77">(<expr pos:start="95:17" pos:end="95:76"><operator pos:start="95:17" pos:end="95:17">!</operator><operator pos:start="95:18" pos:end="95:18">(</operator><call pos:start="95:19" pos:end="95:58"><name pos:start="95:19" pos:end="95:39">ppc_hash64_load_hpte0</name><argument_list pos:start="95:40" pos:end="95:58">(<argument pos:start="95:41" pos:end="95:43"><expr pos:start="95:41" pos:end="95:43"><name pos:start="95:41" pos:end="95:43">cpu</name></expr></argument>, <argument pos:start="95:46" pos:end="95:50"><expr pos:start="95:46" pos:end="95:50"><name pos:start="95:46" pos:end="95:50">token</name></expr></argument>, <argument pos:start="95:53" pos:end="95:57"><expr pos:start="95:53" pos:end="95:57"><name pos:start="95:53" pos:end="95:57">index</name></expr></argument>)</argument_list></call> <operator pos:start="95:60" pos:end="95:60">&amp;</operator> <name pos:start="95:62" pos:end="95:75">HPTE64_V_VALID</name><operator pos:start="95:76" pos:end="95:76">)</operator></expr>)</condition> <block pos:start="95:79" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:22">

                <break pos:start="97:17" pos:end="97:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><call pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:30">ppc_hash64_stop_access</name><argument_list pos:start="103:31" pos:end="103:42">(<argument pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:34">cpu</name></expr></argument>, <argument pos:start="103:37" pos:end="103:41"><expr pos:start="103:37" pos:end="103:41"><name pos:start="103:37" pos:end="103:41">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:23">(<expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:17">index</name> <operator pos:start="105:19" pos:end="105:20">==</operator> <literal type="number" pos:start="105:22" pos:end="105:22">8</literal></expr>)</condition> <block pos:start="105:25" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:31">

            <return pos:start="107:13" pos:end="107:31">return <expr pos:start="107:20" pos:end="107:30"><name pos:start="107:20" pos:end="107:30">H_PTEG_FULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="125:5">else <block pos:start="111:12" pos:end="125:5">{<block_content pos:start="113:9" pos:end="123:43">

        <expr_stmt pos:start="113:9" pos:end="113:56"><expr pos:start="113:9" pos:end="113:55"><name pos:start="113:9" pos:end="113:13">token</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <call pos:start="113:17" pos:end="113:55"><name pos:start="113:17" pos:end="113:39">ppc_hash64_start_access</name><argument_list pos:start="113:40" pos:end="113:55">(<argument pos:start="113:41" pos:end="113:43"><expr pos:start="113:41" pos:end="113:43"><name pos:start="113:41" pos:end="113:43">cpu</name></expr></argument>, <argument pos:start="113:46" pos:end="113:54"><expr pos:start="113:46" pos:end="113:54"><name pos:start="113:46" pos:end="113:54">pte_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:66">(<expr pos:start="115:13" pos:end="115:65"><call pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:33">ppc_hash64_load_hpte0</name><argument_list pos:start="115:34" pos:end="115:48">(<argument pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:37">cpu</name></expr></argument>, <argument pos:start="115:40" pos:end="115:44"><expr pos:start="115:40" pos:end="115:44"><name pos:start="115:40" pos:end="115:44">token</name></expr></argument>, <argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">0</literal></expr></argument>)</argument_list></call> <operator pos:start="115:50" pos:end="115:50">&amp;</operator> <name pos:start="115:52" pos:end="115:65">HPTE64_V_VALID</name></expr>)</condition> <block pos:start="115:68" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:31">

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><call pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:34">ppc_hash64_stop_access</name><argument_list pos:start="117:35" pos:end="117:46">(<argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">cpu</name></expr></argument>, <argument pos:start="117:41" pos:end="117:45"><expr pos:start="117:41" pos:end="117:45"><name pos:start="117:41" pos:end="117:45">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:31">return <expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30">H_PTEG_FULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:43"><expr pos:start="123:9" pos:end="123:42"><call pos:start="123:9" pos:end="123:42"><name pos:start="123:9" pos:end="123:30">ppc_hash64_stop_access</name><argument_list pos:start="123:31" pos:end="123:42">(<argument pos:start="123:32" pos:end="123:34"><expr pos:start="123:32" pos:end="123:34"><name pos:start="123:32" pos:end="123:34">cpu</name></expr></argument>, <argument pos:start="123:37" pos:end="123:41"><expr pos:start="123:37" pos:end="123:41"><name pos:start="123:37" pos:end="123:41">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="131:60"><expr pos:start="129:5" pos:end="131:59"><call pos:start="129:5" pos:end="131:59"><name pos:start="129:5" pos:end="129:25">ppc_hash64_store_hpte</name><argument_list pos:start="129:26" pos:end="131:59">(<argument pos:start="129:27" pos:end="129:29"><expr pos:start="129:27" pos:end="129:29"><name pos:start="129:27" pos:end="129:29">cpu</name></expr></argument>, <argument pos:start="129:32" pos:end="129:48"><expr pos:start="129:32" pos:end="129:48"><name pos:start="129:32" pos:end="129:40">pte_index</name> <operator pos:start="129:42" pos:end="129:42">+</operator> <name pos:start="129:44" pos:end="129:48">index</name></expr></argument>,

                          <argument pos:start="131:27" pos:end="131:52"><expr pos:start="131:27" pos:end="131:52"><name pos:start="131:27" pos:end="131:30">pteh</name> <operator pos:start="131:32" pos:end="131:32">|</operator> <name pos:start="131:34" pos:end="131:52">HPTE64_V_HPTE_DIRTY</name></expr></argument>, <argument pos:start="131:55" pos:end="131:58"><expr pos:start="131:55" pos:end="131:58"><name pos:start="131:55" pos:end="131:58">ptel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:32"><expr pos:start="135:5" pos:end="135:31"><name pos:start="135:5" pos:end="135:11"><name pos:start="135:5" pos:end="135:8">args</name><index pos:start="135:9" pos:end="135:11">[<expr pos:start="135:10" pos:end="135:10"><literal type="number" pos:start="135:10" pos:end="135:10">0</literal></expr>]</index></name> <operator pos:start="135:13" pos:end="135:13">=</operator> <name pos:start="135:15" pos:end="135:23">pte_index</name> <operator pos:start="135:25" pos:end="135:25">+</operator> <name pos:start="135:27" pos:end="135:31">index</name></expr>;</expr_stmt>

    <return pos:start="137:5" pos:end="137:21">return <expr pos:start="137:12" pos:end="137:20"><name pos:start="137:12" pos:end="137:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
