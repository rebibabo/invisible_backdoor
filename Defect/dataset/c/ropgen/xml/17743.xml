<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17743.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">init_pipe_signaling</name><parameter_list pos:start="1:32" pos:end="1:48">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:44">PCIQXLDevice</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:4" pos:end="31:55">

   <if_stmt pos:start="5:4" pos:end="14:0"><if pos:start="5:4" pos:end="14:0">if <condition pos:start="5:7" pos:end="5:25">(<expr pos:start="5:8" pos:end="5:24"><call pos:start="5:8" pos:end="5:20"><name pos:start="5:8" pos:end="5:11">pipe</name><argument_list pos:start="5:12" pos:end="5:20">(<argument pos:start="5:13" pos:end="5:19"><expr pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:13">d</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:19">pipe</name></name></expr></argument>)</argument_list></call> <operator pos:start="5:22" pos:end="5:22">&lt;</operator> <literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr>)</condition> <block pos:start="5:27" pos:end="14:0">{<block_content pos:start="7:8" pos:end="9:14">

       <expr_stmt pos:start="7:8" pos:end="7:64"><expr pos:start="7:8" pos:end="7:63"><call pos:start="7:8" pos:end="7:63"><name pos:start="7:8" pos:end="7:13">dprint</name><argument_list pos:start="7:14" pos:end="7:63">(<argument pos:start="7:15" pos:end="7:15"><expr pos:start="7:15" pos:end="7:15"><name pos:start="7:15" pos:end="7:15">d</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">1</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:48"><expr pos:start="7:21" pos:end="7:48"><literal type="string" pos:start="7:21" pos:end="7:48">"%s: pipe creation failed\n"</literal></expr></argument>, <argument pos:start="7:51" pos:end="7:62"><expr pos:start="7:51" pos:end="7:62"><name pos:start="7:51" pos:end="7:62">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <return pos:start="9:8" pos:end="9:14">return;</return>

   </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:22">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:22">CONFIG_IOTHREAD</name></cpp:ifdef>

   <expr_stmt pos:start="15:4" pos:end="18:0"><expr pos:start="15:4" pos:end="15:41"><call pos:start="15:4" pos:end="15:41"><name pos:start="15:4" pos:end="15:8">fcntl</name><argument_list pos:start="15:9" pos:end="15:41">(<argument pos:start="15:10" pos:end="15:19"><expr pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:10">d</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:16">pipe</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="15:22" pos:end="15:28"><expr pos:start="15:22" pos:end="15:28"><name pos:start="15:22" pos:end="15:28">F_SETFL</name></expr></argument>, <argument pos:start="15:31" pos:end="15:40"><expr pos:start="15:31" pos:end="15:40"><name pos:start="15:31" pos:end="15:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:5">else</cpp:directive></cpp:else>

   <expr_stmt pos:start="19:4" pos:end="22:0"><expr pos:start="19:4" pos:end="19:57"><call pos:start="19:4" pos:end="19:57"><name pos:start="19:4" pos:end="19:8">fcntl</name><argument_list pos:start="19:9" pos:end="19:57">(<argument pos:start="19:10" pos:end="19:19"><expr pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:10">d</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:16">pipe</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:28">F_SETFL</name></expr></argument>, <argument pos:start="19:31" pos:end="19:40"><expr pos:start="19:31" pos:end="19:40"><name pos:start="19:31" pos:end="19:40">O_NONBLOCK</name></expr></argument> <comment type="block" pos:start="19:42" pos:end="19:56">/* | O_ASYNC */</comment>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

   <expr_stmt pos:start="23:4" pos:end="23:42"><expr pos:start="23:4" pos:end="23:41"><call pos:start="23:4" pos:end="23:41"><name pos:start="23:4" pos:end="23:8">fcntl</name><argument_list pos:start="23:9" pos:end="23:41">(<argument pos:start="23:10" pos:end="23:19"><expr pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:10">d</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">pipe</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:22" pos:end="23:28"><expr pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:28">F_SETFL</name></expr></argument>, <argument pos:start="23:31" pos:end="23:40"><expr pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="25:4" pos:end="25:41"><expr pos:start="25:4" pos:end="25:40"><call pos:start="25:4" pos:end="25:40"><name pos:start="25:4" pos:end="25:8">fcntl</name><argument_list pos:start="25:9" pos:end="25:40">(<argument pos:start="25:10" pos:end="25:19"><expr pos:start="25:10" pos:end="25:19"><name pos:start="25:10" pos:end="25:19"><name pos:start="25:10" pos:end="25:10">d</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:16">pipe</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:29">F_SETOWN</name></expr></argument>, <argument pos:start="25:32" pos:end="25:39"><expr pos:start="25:32" pos:end="25:39"><call pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:37">getpid</name><argument_list pos:start="25:38" pos:end="25:39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



   <expr_stmt pos:start="29:4" pos:end="29:28"><expr pos:start="29:4" pos:end="29:27"><name pos:start="29:4" pos:end="29:6"><name pos:start="29:4" pos:end="29:4">d</name><operator pos:start="29:5" pos:end="29:6">-&gt;</operator><name/></name>main <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:27"><name pos:start="29:14" pos:end="29:25">pthread_self</name><argument_list pos:start="29:26" pos:end="29:27">()</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="31:4" pos:end="31:55"><expr pos:start="31:4" pos:end="31:54"><call pos:start="31:4" pos:end="31:54"><name pos:start="31:4" pos:end="31:22">qemu_set_fd_handler</name><argument_list pos:start="31:23" pos:end="31:54">(<argument pos:start="31:24" pos:end="31:33"><expr pos:start="31:24" pos:end="31:33"><name pos:start="31:24" pos:end="31:33"><name pos:start="31:24" pos:end="31:24">d</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:30">pipe</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:36" pos:end="31:44"><expr pos:start="31:36" pos:end="31:44"><name pos:start="31:36" pos:end="31:44">pipe_read</name></expr></argument>, <argument pos:start="31:47" pos:end="31:50"><expr pos:start="31:47" pos:end="31:50"><name pos:start="31:47" pos:end="31:50">NULL</name></expr></argument>, <argument pos:start="31:53" pos:end="31:53"><expr pos:start="31:53" pos:end="31:53"><name pos:start="31:53" pos:end="31:53">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
