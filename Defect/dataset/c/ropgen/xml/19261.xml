<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19261.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:17">g_realloc_n</name><parameter_list pos:start="1:18" pos:end="1:55">(<parameter pos:start="1:19" pos:end="1:27"><decl pos:start="1:19" pos:end="1:27"><type pos:start="1:19" pos:end="1:27"><name pos:start="1:19" pos:end="1:22">void</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:27">ptr</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:35">size_t</name></type> <name pos:start="1:37" pos:end="1:41">nmemb</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:49">size_t</name></type> <name pos:start="1:51" pos:end="1:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:13">sz</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><call pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:30">__coverity_negative_sink__</name><argument_list pos:start="9:31" pos:end="9:37">(<argument pos:start="9:32" pos:end="9:36"><expr pos:start="9:32" pos:end="9:36"><name pos:start="9:32" pos:end="9:36">nmemb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:30">__coverity_negative_sink__</name><argument_list pos:start="11:31" pos:end="11:36">(<argument pos:start="11:32" pos:end="11:35"><expr pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:6">sz</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:14">nmemb</name> <operator pos:start="13:16" pos:end="13:16">*</operator> <name pos:start="13:18" pos:end="13:21">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:23">__coverity_escape__</name><argument_list pos:start="15:24" pos:end="15:28">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:7">ptr</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:34"><name pos:start="17:11" pos:end="17:28">__coverity_alloc__</name><argument_list pos:start="17:29" pos:end="17:34">(<argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="25:7">/*

     * Memory beyond the old size isn't actually initialized.  Can't

     * model that.  See Coverity's realloc() model

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><call pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:25">__coverity_writeall__</name><argument_list pos:start="27:26" pos:end="27:30">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><call pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:38">__coverity_mark_as_afm_allocated__</name><argument_list pos:start="29:39" pos:end="29:53">(<argument pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><name pos:start="29:40" pos:end="29:42">ptr</name></expr></argument>, <argument pos:start="29:45" pos:end="29:52"><expr pos:start="29:45" pos:end="29:52"><name pos:start="29:45" pos:end="29:52">AFM_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ptr</name></expr>;</return>

</block_content>}</block></function>
</unit>
