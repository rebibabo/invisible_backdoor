<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1846.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">test_nested_struct</name><parameter_list pos:start="1:31" pos:end="1:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:44">gconstpointer</name></type> <name pos:start="1:46" pos:end="1:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:17">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TestArgs</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">args</name> <init pos:start="5:20" pos:end="5:40">= <expr pos:start="5:22" pos:end="5:40"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:30">TestArgs</name> <operator pos:start="5:32" pos:end="5:32">*</operator><operator pos:start="5:33" pos:end="5:33">)</operator> <name pos:start="5:35" pos:end="5:40">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:22">SerializeOps</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">ops</name> <init pos:start="7:29" pos:end="7:39">= <expr pos:start="7:31" pos:end="7:39"><name pos:start="7:31" pos:end="7:39"><name pos:start="7:31" pos:end="7:34">args</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:39">ops</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">UserDefNested</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">udnp</name> <init pos:start="9:25" pos:end="9:48">= <expr pos:start="9:27" pos:end="9:48"><call pos:start="9:27" pos:end="9:48"><name pos:start="9:27" pos:end="9:46">nested_struct_create</name><argument_list pos:start="9:47" pos:end="9:48">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">UserDefNested</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:28">udnp_copy</name> <init pos:start="11:30" pos:end="11:35">= <expr pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:24">serialize_data</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><call pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:7">ops</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:18">serialize</name></name><argument_list pos:start="19:19" pos:end="19:68">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">udnp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:40"><expr pos:start="19:26" pos:end="19:40"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:40">serialize_data</name></expr></argument>, <argument pos:start="19:43" pos:end="19:61"><expr pos:start="19:43" pos:end="19:61"><name pos:start="19:43" pos:end="19:61">visit_nested_struct</name></expr></argument>, <argument pos:start="19:64" pos:end="19:67"><expr pos:start="19:64" pos:end="19:67"><operator pos:start="19:64" pos:end="19:64">&amp;</operator><name pos:start="19:65" pos:end="19:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:85"><expr pos:start="21:5" pos:end="21:84"><call pos:start="21:5" pos:end="21:84"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:7">ops</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:20">deserialize</name></name><argument_list pos:start="21:21" pos:end="21:84">(<argument pos:start="21:22" pos:end="21:40"><expr pos:start="21:22" pos:end="21:40"><operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:26">void</name> <operator pos:start="21:28" pos:end="21:28">*</operator><operator pos:start="21:29" pos:end="21:29">*</operator><operator pos:start="21:30" pos:end="21:30">)</operator><operator pos:start="21:31" pos:end="21:31">&amp;</operator><name pos:start="21:32" pos:end="21:40">udnp_copy</name></expr></argument>, <argument pos:start="21:43" pos:end="21:56"><expr pos:start="21:43" pos:end="21:56"><name pos:start="21:43" pos:end="21:56">serialize_data</name></expr></argument>, <argument pos:start="21:59" pos:end="21:77"><expr pos:start="21:59" pos:end="21:77"><name pos:start="21:59" pos:end="21:77">visit_nested_struct</name></expr></argument>, <argument pos:start="21:80" pos:end="21:83"><expr pos:start="21:80" pos:end="21:83"><operator pos:start="21:80" pos:end="21:80">&amp;</operator><name pos:start="21:81" pos:end="21:83">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:25">(<argument pos:start="25:14" pos:end="25:24"><expr pos:start="25:14" pos:end="25:24"><name pos:start="25:14" pos:end="25:16">err</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <name pos:start="25:21" pos:end="25:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><call pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:25">nested_struct_compare</name><argument_list pos:start="27:26" pos:end="27:42">(<argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">udnp</name></expr></argument>, <argument pos:start="27:33" pos:end="27:41"><expr pos:start="27:33" pos:end="27:41"><name pos:start="27:33" pos:end="27:41">udnp_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:25">nested_struct_cleanup</name><argument_list pos:start="31:26" pos:end="31:31">(<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">udnp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><call pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:25">nested_struct_cleanup</name><argument_list pos:start="33:26" pos:end="33:36">(<argument pos:start="33:27" pos:end="33:35"><expr pos:start="33:27" pos:end="33:35"><name pos:start="33:27" pos:end="33:35">udnp_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:7">ops</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:16">cleanup</name></name><argument_list pos:start="37:17" pos:end="37:32">(<argument pos:start="37:18" pos:end="37:31"><expr pos:start="37:18" pos:end="37:31"><name pos:start="37:18" pos:end="37:31">serialize_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:17"><expr pos:start="39:5" pos:end="39:16"><call pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:10">g_free</name><argument_list pos:start="39:11" pos:end="39:16">(<argument pos:start="39:12" pos:end="39:15"><expr pos:start="39:12" pos:end="39:15"><name pos:start="39:12" pos:end="39:15">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
