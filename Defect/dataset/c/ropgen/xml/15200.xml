<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15200.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">swr_resample</name><parameter_list pos:start="1:17" pos:end="1:127">(<parameter pos:start="1:18" pos:end="1:37"><decl pos:start="1:18" pos:end="1:37"><type pos:start="1:18" pos:end="1:37"><name pos:start="1:18" pos:end="1:34">AVResampleContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">c</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:49"><decl pos:start="1:40" pos:end="1:49"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:44">short</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">dst</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:67"><decl pos:start="1:52" pos:end="1:67"><type pos:start="1:52" pos:end="1:67"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:62">short</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">src</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:82"><decl pos:start="1:70" pos:end="1:82"><type pos:start="1:70" pos:end="1:82"><name pos:start="1:70" pos:end="1:72">int</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:82">consumed</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:96"><decl pos:start="1:85" pos:end="1:96"><type pos:start="1:85" pos:end="1:96"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:96">src_size</name></decl></parameter>, <parameter pos:start="1:99" pos:end="1:110"><decl pos:start="1:99" pos:end="1:110"><type pos:start="1:99" pos:end="1:110"><name pos:start="1:99" pos:end="1:101">int</name></type> <name pos:start="1:103" pos:end="1:110">dst_size</name></decl></parameter>, <parameter pos:start="1:113" pos:end="1:126"><decl pos:start="1:113" pos:end="1:126"><type pos:start="1:113" pos:end="1:126"><name pos:start="1:113" pos:end="1:115">int</name></type> <name pos:start="1:117" pos:end="1:126">update_ctx</name></decl></parameter>)</parameter_list><block pos:start="1:128" pos:end="177:1">{<block_content pos:start="3:5" pos:end="175:21">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:17">dst_index</name></decl>, <decl pos:start="3:20" pos:end="3:20"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:20" pos:end="3:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name><init pos:start="5:14" pos:end="5:23">= <expr pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:16">c</name><operator pos:start="5:17" pos:end="5:18">-&gt;</operator><name pos:start="5:19" pos:end="5:23">index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">frac</name><init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:15">c</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:21">frac</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">dst_incr_frac</name><init pos:start="9:22" pos:end="9:48">= <expr pos:start="9:24" pos:end="9:48"><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:24">c</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:34">dst_incr</name></name> <operator pos:start="9:36" pos:end="9:36">%</operator> <name pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:38">c</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">dst_incr</name><init pos:start="11:17" pos:end="11:48">=      <expr pos:start="11:24" pos:end="11:48"><name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:24">c</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">dst_incr</name></name> <operator pos:start="11:36" pos:end="11:36">/</operator> <name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:38">c</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:29">compensation_distance</name><init pos:start="13:30" pos:end="13:55">= <expr pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:32">c</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:55">compensation_distance</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="131:5"><if pos:start="17:5" pos:end="43:5">if<condition pos:start="17:7" pos:end="17:80">(<expr pos:start="17:8" pos:end="17:79"><name pos:start="17:8" pos:end="17:28">compensation_distance</name> <operator pos:start="17:30" pos:end="17:31">==</operator> <literal type="number" pos:start="17:33" pos:end="17:33">0</literal> <operator pos:start="17:35" pos:end="17:36">&amp;&amp;</operator> <name pos:start="17:38" pos:end="17:53"><name pos:start="17:38" pos:end="17:38">c</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:53">filter_length</name></name> <operator pos:start="17:55" pos:end="17:56">==</operator> <literal type="number" pos:start="17:58" pos:end="17:58">1</literal> <operator pos:start="17:60" pos:end="17:61">&amp;&amp;</operator> <name pos:start="17:63" pos:end="17:76"><name pos:start="17:63" pos:end="17:63">c</name><operator pos:start="17:64" pos:end="17:65">-&gt;</operator><name pos:start="17:66" pos:end="17:76">phase_shift</name></name><operator pos:start="17:77" pos:end="17:78">==</operator><literal type="number" pos:start="17:79" pos:end="17:79">0</literal></expr>)</condition><block pos:start="17:81" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:28">

        <decl_stmt pos:start="19:9" pos:end="19:45"><decl pos:start="19:9" pos:end="19:44"><type pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15">int64_t</name></type> <name pos:start="19:17" pos:end="19:22">index2</name><init pos:start="19:23" pos:end="19:44">= <expr pos:start="19:25" pos:end="19:44"><operator pos:start="19:25" pos:end="19:25">(</operator><operator pos:start="19:26" pos:end="19:26">(</operator><name pos:start="19:27" pos:end="19:33">int64_t</name><operator pos:start="19:34" pos:end="19:34">)</operator><name pos:start="19:35" pos:end="19:39">index</name><operator pos:start="19:40" pos:end="19:40">)</operator><operator pos:start="19:41" pos:end="19:42">&lt;&lt;</operator><literal type="number" pos:start="19:43" pos:end="19:44">32</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:60"><decl pos:start="21:9" pos:end="21:59"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">int64_t</name></type> <name pos:start="21:17" pos:end="21:20">incr</name><init pos:start="21:21" pos:end="21:59">= <expr pos:start="21:23" pos:end="21:59"><operator pos:start="21:23" pos:end="21:23">(</operator><literal type="number" pos:start="21:24" pos:end="21:26">1LL</literal><operator pos:start="21:27" pos:end="21:28">&lt;&lt;</operator><literal type="number" pos:start="21:29" pos:end="21:30">32</literal><operator pos:start="21:31" pos:end="21:31">)</operator> <operator pos:start="21:33" pos:end="21:33">*</operator> <name pos:start="21:35" pos:end="21:45"><name pos:start="21:35" pos:end="21:35">c</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:45">dst_incr</name></name> <operator pos:start="21:47" pos:end="21:47">/</operator> <name pos:start="21:49" pos:end="21:59"><name pos:start="21:49" pos:end="21:49">c</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:59">src_incr</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:91"><expr pos:start="23:9" pos:end="23:90"><name pos:start="23:9" pos:end="23:16">dst_size</name><operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:90"><name pos:start="23:19" pos:end="23:23">FFMIN</name><argument_list pos:start="23:24" pos:end="23:90">(<argument pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:32">dst_size</name></expr></argument>, <argument pos:start="23:35" pos:end="23:89"><expr pos:start="23:35" pos:end="23:89"><operator pos:start="23:35" pos:end="23:35">(</operator><name pos:start="23:36" pos:end="23:43">src_size</name><operator pos:start="23:44" pos:end="23:44">-</operator><literal type="number" pos:start="23:45" pos:end="23:46">1</literal><operator pos:start="23:46" pos:end="23:46">-</operator><name pos:start="23:47" pos:end="23:51">index</name><operator pos:start="23:52" pos:end="23:52">)</operator> <operator pos:start="23:54" pos:end="23:54">*</operator> <operator pos:start="23:56" pos:end="23:56">(</operator><name pos:start="23:57" pos:end="23:63">int64_t</name><operator pos:start="23:64" pos:end="23:64">)</operator><name pos:start="23:65" pos:end="23:75"><name pos:start="23:65" pos:end="23:65">c</name><operator pos:start="23:66" pos:end="23:67">-&gt;</operator><name pos:start="23:68" pos:end="23:75">src_incr</name></name> <operator pos:start="23:77" pos:end="23:77">/</operator> <name pos:start="23:79" pos:end="23:89"><name pos:start="23:79" pos:end="23:79">c</name><operator pos:start="23:80" pos:end="23:81">-&gt;</operator><name pos:start="23:82" pos:end="23:89">dst_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="27:9" pos:end="33:9">for<control pos:start="27:12" pos:end="27:59">(<init pos:start="27:13" pos:end="27:24"><expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:21">dst_index</name><operator pos:start="27:22" pos:end="27:22">=</operator><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</init> <condition pos:start="27:26" pos:end="27:46"><expr pos:start="27:26" pos:end="27:45"><name pos:start="27:26" pos:end="27:34">dst_index</name> <operator pos:start="27:36" pos:end="27:36">&lt;</operator> <name pos:start="27:38" pos:end="27:45">dst_size</name></expr>;</condition> <incr pos:start="27:48" pos:end="27:58"><expr pos:start="27:48" pos:end="27:58"><name pos:start="27:48" pos:end="27:56">dst_index</name><operator pos:start="27:57" pos:end="27:58">++</operator></expr></incr>)</control><block pos:start="27:60" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:27">

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:15">dst</name><index pos:start="29:16" pos:end="29:26">[<expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:25">dst_index</name></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:44"><name pos:start="29:30" pos:end="29:32">src</name><index pos:start="29:33" pos:end="29:44">[<expr pos:start="29:34" pos:end="29:43"><name pos:start="29:34" pos:end="29:39">index2</name><operator pos:start="29:40" pos:end="29:41">&gt;&gt;</operator><literal type="number" pos:start="29:42" pos:end="29:43">32</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:18">index2</name> <operator pos:start="31:20" pos:end="31:21">+=</operator> <name pos:start="31:23" pos:end="31:26">incr</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:12">frac</name> <operator pos:start="35:14" pos:end="35:15">+=</operator> <name pos:start="35:17" pos:end="35:25">dst_index</name> <operator pos:start="35:27" pos:end="35:27">*</operator> <name pos:start="35:29" pos:end="35:41">dst_incr_frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:13">index</name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <name pos:start="37:18" pos:end="37:26">dst_index</name> <operator pos:start="37:28" pos:end="37:28">*</operator> <name pos:start="37:30" pos:end="37:37">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:36"><expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:13">index</name> <operator pos:start="39:15" pos:end="39:16">+=</operator> <name pos:start="39:18" pos:end="39:21">frac</name> <operator pos:start="39:23" pos:end="39:23">/</operator> <name pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:25">c</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:35">src_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:12">frac</name> <operator pos:start="41:14" pos:end="41:15">%=</operator> <name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:27">src_incr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="43:6" pos:end="131:5">else<block pos:start="43:10" pos:end="131:5">{<block_content pos:start="45:9" pos:end="129:9">

        <for pos:start="45:9" pos:end="129:9">for<control pos:start="45:12" pos:end="45:59">(<init pos:start="45:13" pos:end="45:24"><expr pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:21">dst_index</name><operator pos:start="45:22" pos:end="45:22">=</operator><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>;</init> <condition pos:start="45:26" pos:end="45:46"><expr pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:34">dst_index</name> <operator pos:start="45:36" pos:end="45:36">&lt;</operator> <name pos:start="45:38" pos:end="45:45">dst_size</name></expr>;</condition> <incr pos:start="45:48" pos:end="45:58"><expr pos:start="45:48" pos:end="45:58"><name pos:start="45:48" pos:end="45:56">dst_index</name><operator pos:start="45:57" pos:end="45:58">++</operator></expr></incr>)</control><block pos:start="45:60" pos:end="129:9">{<block_content pos:start="47:13" pos:end="127:13">

            <decl_stmt pos:start="47:13" pos:end="47:85"><decl pos:start="47:13" pos:end="47:84"><type pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:17">FELEM</name> <modifier pos:start="47:19" pos:end="47:19">*</modifier></type><name pos:start="47:20" pos:end="47:25">filter</name><init pos:start="47:26" pos:end="47:84">= <expr pos:start="47:28" pos:end="47:84"><name pos:start="47:28" pos:end="47:41"><name pos:start="47:28" pos:end="47:28">c</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:41">filter_bank</name></name> <operator pos:start="47:43" pos:end="47:43">+</operator> <name pos:start="47:45" pos:end="47:60"><name pos:start="47:45" pos:end="47:45">c</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:60">filter_length</name></name><operator pos:start="47:61" pos:end="47:61">*</operator><operator pos:start="47:62" pos:end="47:62">(</operator><name pos:start="47:63" pos:end="47:67">index</name> <operator pos:start="47:69" pos:end="47:69">&amp;</operator> <name pos:start="47:71" pos:end="47:83"><name pos:start="47:71" pos:end="47:71">c</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:83">phase_mask</name></name><operator pos:start="47:84" pos:end="47:84">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:54"><decl pos:start="49:13" pos:end="49:53"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:28">sample_index</name><init pos:start="49:29" pos:end="49:53">= <expr pos:start="49:31" pos:end="49:53"><name pos:start="49:31" pos:end="49:35">index</name> <operator pos:start="49:37" pos:end="49:38">&gt;&gt;</operator> <name pos:start="49:40" pos:end="49:53"><name pos:start="49:40" pos:end="49:40">c</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:53">phase_shift</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:25"><decl pos:start="51:13" pos:end="51:24"><type pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:18">FELEM2</name></type> <name pos:start="51:20" pos:end="51:22">val</name><init pos:start="51:23" pos:end="51:24">=<expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="55:13" pos:end="92:0"><if pos:start="55:13" pos:end="61:13">if<condition pos:start="55:15" pos:end="55:32">(<expr pos:start="55:16" pos:end="55:31"><name pos:start="55:16" pos:end="55:27">sample_index</name> <operator pos:start="55:29" pos:end="55:29">&lt;</operator> <literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr>)</condition><block pos:start="55:33" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:79">

                <for pos:start="57:17" pos:end="59:79">for<control pos:start="57:20" pos:end="57:49">(<init pos:start="57:21" pos:end="57:24"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:21">i</name><operator pos:start="57:22" pos:end="57:22">=</operator><literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>;</init> <condition pos:start="57:26" pos:end="57:44"><expr pos:start="57:26" pos:end="57:43"><name pos:start="57:26" pos:end="57:26">i</name><operator pos:start="57:27" pos:end="57:27">&lt;</operator><name pos:start="57:28" pos:end="57:43"><name pos:start="57:28" pos:end="57:28">c</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:43">filter_length</name></name></expr>;</condition> <incr pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><name pos:start="57:46" pos:end="57:46">i</name><operator pos:start="57:47" pos:end="57:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:21" pos:end="59:79"><block_content pos:start="59:21" pos:end="59:79">

                    <expr_stmt pos:start="59:21" pos:end="59:79"><expr pos:start="59:21" pos:end="59:78"><name pos:start="59:21" pos:end="59:23">val</name> <operator pos:start="59:25" pos:end="59:26">+=</operator> <name pos:start="59:28" pos:end="59:66"><name pos:start="59:28" pos:end="59:30">src</name><index pos:start="59:31" pos:end="59:66">[<expr pos:start="59:32" pos:end="59:65"><call pos:start="59:32" pos:end="59:54"><name pos:start="59:32" pos:end="59:36">FFABS</name><argument_list pos:start="59:37" pos:end="59:54">(<argument pos:start="59:38" pos:end="59:53"><expr pos:start="59:38" pos:end="59:53"><name pos:start="59:38" pos:end="59:49">sample_index</name> <operator pos:start="59:51" pos:end="59:51">+</operator> <name pos:start="59:53" pos:end="59:53">i</name></expr></argument>)</argument_list></call> <operator pos:start="59:56" pos:end="59:56">%</operator> <name pos:start="59:58" pos:end="59:65">src_size</name></expr>]</index></name> <operator pos:start="59:68" pos:end="59:68">*</operator> <name pos:start="59:70" pos:end="59:78"><name pos:start="59:70" pos:end="59:75">filter</name><index pos:start="59:76" pos:end="59:78">[<expr pos:start="59:77" pos:end="59:77"><name pos:start="59:77" pos:end="59:77">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if><if type="elseif" pos:start="61:14" pos:end="65:13">else if<condition pos:start="61:21" pos:end="61:64">(<expr pos:start="61:22" pos:end="61:63"><name pos:start="61:22" pos:end="61:33">sample_index</name> <operator pos:start="61:35" pos:end="61:35">+</operator> <name pos:start="61:37" pos:end="61:52"><name pos:start="61:37" pos:end="61:37">c</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:52">filter_length</name></name> <operator pos:start="61:54" pos:end="61:54">&gt;</operator> <name pos:start="61:56" pos:end="61:63">src_size</name></expr>)</condition><block pos:start="61:65" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:22">

                <break pos:start="63:17" pos:end="63:22">break;</break>

            </block_content>}</block></if><if type="elseif" pos:start="65:14" pos:end="79:13">else if<condition pos:start="65:21" pos:end="65:31">(<expr pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:22">c</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:30">linear</name></name></expr>)</condition><block pos:start="65:32" pos:end="79:13">{<block_content pos:start="67:17" pos:end="77:57">

                <decl_stmt pos:start="67:17" pos:end="67:28"><decl pos:start="67:17" pos:end="67:27"><type pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">FELEM2</name></type> <name pos:start="67:24" pos:end="67:25">v2</name><init pos:start="67:26" pos:end="67:27">=<expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="69:17" pos:end="75:17">for<control pos:start="69:20" pos:end="69:49">(<init pos:start="69:21" pos:end="69:24"><expr pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:21">i</name><operator pos:start="69:22" pos:end="69:22">=</operator><literal type="number" pos:start="69:23" pos:end="69:23">0</literal></expr>;</init> <condition pos:start="69:26" pos:end="69:44"><expr pos:start="69:26" pos:end="69:43"><name pos:start="69:26" pos:end="69:26">i</name><operator pos:start="69:27" pos:end="69:27">&lt;</operator><name pos:start="69:28" pos:end="69:43"><name pos:start="69:28" pos:end="69:28">c</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:43">filter_length</name></name></expr>;</condition> <incr pos:start="69:46" pos:end="69:48"><expr pos:start="69:46" pos:end="69:48"><name pos:start="69:46" pos:end="69:46">i</name><operator pos:start="69:47" pos:end="69:48">++</operator></expr></incr>)</control><block pos:start="69:50" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:88">

                    <expr_stmt pos:start="71:21" pos:end="71:69"><expr pos:start="71:21" pos:end="71:68"><name pos:start="71:21" pos:end="71:23">val</name> <operator pos:start="71:25" pos:end="71:26">+=</operator> <name pos:start="71:28" pos:end="71:48"><name pos:start="71:28" pos:end="71:30">src</name><index pos:start="71:31" pos:end="71:48">[<expr pos:start="71:32" pos:end="71:47"><name pos:start="71:32" pos:end="71:43">sample_index</name> <operator pos:start="71:45" pos:end="71:45">+</operator> <name pos:start="71:47" pos:end="71:47">i</name></expr>]</index></name> <operator pos:start="71:50" pos:end="71:50">*</operator> <operator pos:start="71:52" pos:end="71:52">(</operator><name pos:start="71:53" pos:end="71:58">FELEM2</name><operator pos:start="71:59" pos:end="71:59">)</operator><name pos:start="71:60" pos:end="71:68"><name pos:start="71:60" pos:end="71:65">filter</name><index pos:start="71:66" pos:end="71:68">[<expr pos:start="71:67" pos:end="71:67"><name pos:start="71:67" pos:end="71:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:88"><expr pos:start="73:21" pos:end="73:87"><name pos:start="73:21" pos:end="73:22">v2</name>  <operator pos:start="73:25" pos:end="73:26">+=</operator> <name pos:start="73:28" pos:end="73:48"><name pos:start="73:28" pos:end="73:30">src</name><index pos:start="73:31" pos:end="73:48">[<expr pos:start="73:32" pos:end="73:47"><name pos:start="73:32" pos:end="73:43">sample_index</name> <operator pos:start="73:45" pos:end="73:45">+</operator> <name pos:start="73:47" pos:end="73:47">i</name></expr>]</index></name> <operator pos:start="73:50" pos:end="73:50">*</operator> <operator pos:start="73:52" pos:end="73:52">(</operator><name pos:start="73:53" pos:end="73:58">FELEM2</name><operator pos:start="73:59" pos:end="73:59">)</operator><name pos:start="73:60" pos:end="73:87"><name pos:start="73:60" pos:end="73:65">filter</name><index pos:start="73:66" pos:end="73:87">[<expr pos:start="73:67" pos:end="73:86"><name pos:start="73:67" pos:end="73:67">i</name> <operator pos:start="73:69" pos:end="73:69">+</operator> <name pos:start="73:71" pos:end="73:86"><name pos:start="73:71" pos:end="73:71">c</name><operator pos:start="73:72" pos:end="73:73">-&gt;</operator><name pos:start="73:74" pos:end="73:86">filter_length</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="77:17" pos:end="77:57"><expr pos:start="77:17" pos:end="77:56"><name pos:start="77:17" pos:end="77:19">val</name><operator pos:start="77:20" pos:end="77:21">+=</operator><operator pos:start="77:22" pos:end="77:22">(</operator><name pos:start="77:23" pos:end="77:24">v2</name><operator pos:start="77:25" pos:end="77:25">-</operator><name pos:start="77:26" pos:end="77:28">val</name><operator pos:start="77:29" pos:end="77:29">)</operator><operator pos:start="77:30" pos:end="77:30">*</operator><operator pos:start="77:31" pos:end="77:31">(</operator><name pos:start="77:32" pos:end="77:37">FELEML</name><operator pos:start="77:38" pos:end="77:38">)</operator><name pos:start="77:39" pos:end="77:42">frac</name> <operator pos:start="77:44" pos:end="77:44">/</operator> <name pos:start="77:46" pos:end="77:56"><name pos:start="77:46" pos:end="77:46">c</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:56">src_incr</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="79:14" pos:end="92:0">else<block pos:start="79:18" pos:end="92:0">{<block_content pos:start="81:17" pos:end="85:17">

                <for pos:start="81:17" pos:end="85:17">for<control pos:start="81:20" pos:end="81:49">(<init pos:start="81:21" pos:end="81:24"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:21">i</name><operator pos:start="81:22" pos:end="81:22">=</operator><literal type="number" pos:start="81:23" pos:end="81:23">0</literal></expr>;</init> <condition pos:start="81:26" pos:end="81:44"><expr pos:start="81:26" pos:end="81:43"><name pos:start="81:26" pos:end="81:26">i</name><operator pos:start="81:27" pos:end="81:27">&lt;</operator><name pos:start="81:28" pos:end="81:43"><name pos:start="81:28" pos:end="81:28">c</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:43">filter_length</name></name></expr>;</condition> <incr pos:start="81:46" pos:end="81:48"><expr pos:start="81:46" pos:end="81:48"><name pos:start="81:46" pos:end="81:46">i</name><operator pos:start="81:47" pos:end="81:48">++</operator></expr></incr>)</control><block pos:start="81:50" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:69">

                    <expr_stmt pos:start="83:21" pos:end="83:69"><expr pos:start="83:21" pos:end="83:68"><name pos:start="83:21" pos:end="83:23">val</name> <operator pos:start="83:25" pos:end="83:26">+=</operator> <name pos:start="83:28" pos:end="83:48"><name pos:start="83:28" pos:end="83:30">src</name><index pos:start="83:31" pos:end="83:48">[<expr pos:start="83:32" pos:end="83:47"><name pos:start="83:32" pos:end="83:43">sample_index</name> <operator pos:start="83:45" pos:end="83:45">+</operator> <name pos:start="83:47" pos:end="83:47">i</name></expr>]</index></name> <operator pos:start="83:50" pos:end="83:50">*</operator> <operator pos:start="83:52" pos:end="83:52">(</operator><name pos:start="83:53" pos:end="83:58">FELEM2</name><operator pos:start="83:59" pos:end="83:59">)</operator><name pos:start="83:60" pos:end="83:68"><name pos:start="83:60" pos:end="83:65">filter</name><index pos:start="83:66" pos:end="83:68">[<expr pos:start="83:67" pos:end="83:67"><name pos:start="83:67" pos:end="83:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="91:1" pos:end="91:44">#<cpp:directive pos:start="91:2" pos:end="91:6">ifdef</cpp:directive> <name pos:start="91:8" pos:end="91:44">CONFIG_RESAMPLE_AUDIOPHILE_KIDDY_MODE</name></cpp:ifdef>

            <expr_stmt pos:start="93:13" pos:end="96:0"><expr pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:15">dst</name><index pos:start="93:16" pos:end="93:26">[<expr pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:25">dst_index</name></expr>]</index></name> <operator pos:start="93:28" pos:end="93:28">=</operator> <call pos:start="93:30" pos:end="93:55"><name pos:start="93:30" pos:end="93:42">av_clip_int16</name><argument_list pos:start="93:43" pos:end="93:55">(<argument pos:start="93:44" pos:end="93:54"><expr pos:start="93:44" pos:end="93:54"><call pos:start="93:44" pos:end="93:54"><name pos:start="93:44" pos:end="93:49">lrintf</name><argument_list pos:start="93:50" pos:end="93:54">(<argument pos:start="93:51" pos:end="93:53"><expr pos:start="93:51" pos:end="93:53"><name pos:start="93:51" pos:end="93:53">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="95:1" pos:end="95:5">#<cpp:directive pos:start="95:2" pos:end="95:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="97:13" pos:end="97:62"><expr pos:start="97:13" pos:end="97:61"><name pos:start="97:13" pos:end="97:15">val</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <operator pos:start="97:19" pos:end="97:19">(</operator><name pos:start="97:20" pos:end="97:22">val</name> <operator pos:start="97:24" pos:end="97:24">+</operator> <operator pos:start="97:26" pos:end="97:26">(</operator><literal type="number" pos:start="97:27" pos:end="97:27">1</literal><operator pos:start="97:28" pos:end="97:29">&lt;&lt;</operator><operator pos:start="97:30" pos:end="97:30">(</operator><name pos:start="97:31" pos:end="97:42">FILTER_SHIFT</name><operator pos:start="97:43" pos:end="97:43">-</operator><literal type="number" pos:start="97:44" pos:end="97:44">1</literal><operator pos:start="97:45" pos:end="97:45">)</operator><operator pos:start="97:46" pos:end="97:46">)</operator><operator pos:start="97:47" pos:end="97:47">)</operator><operator pos:start="97:48" pos:end="97:49">&gt;&gt;</operator><name pos:start="97:50" pos:end="97:61">FILTER_SHIFT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="102:0"><expr pos:start="99:13" pos:end="99:86"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:15">dst</name><index pos:start="99:16" pos:end="99:26">[<expr pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:25">dst_index</name></expr>]</index></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <ternary pos:start="99:30" pos:end="99:86"><condition pos:start="99:30" pos:end="99:62"><expr pos:start="99:30" pos:end="99:60"><operator pos:start="99:30" pos:end="99:30">(</operator><name pos:start="99:31" pos:end="99:38">unsigned</name><operator pos:start="99:39" pos:end="99:39">)</operator><operator pos:start="99:40" pos:end="99:40">(</operator><name pos:start="99:41" pos:end="99:43">val</name> <operator pos:start="99:45" pos:end="99:45">+</operator> <literal type="number" pos:start="99:47" pos:end="99:51">32768</literal><operator pos:start="99:52" pos:end="99:52">)</operator> <operator pos:start="99:54" pos:end="99:54">&gt;</operator> <literal type="number" pos:start="99:56" pos:end="99:60">65535</literal></expr> ?</condition><then pos:start="99:64" pos:end="99:80"> <expr pos:start="99:64" pos:end="99:80"><operator pos:start="99:64" pos:end="99:64">(</operator><name pos:start="99:65" pos:end="99:67">val</name><operator pos:start="99:68" pos:end="99:69">&gt;&gt;</operator><literal type="number" pos:start="99:70" pos:end="99:71">31</literal><operator pos:start="99:72" pos:end="99:72">)</operator> <operator pos:start="99:74" pos:end="99:74">^</operator> <literal type="number" pos:start="99:76" pos:end="99:80">32767</literal></expr> </then><else pos:start="99:82" pos:end="99:86">: <expr pos:start="99:84" pos:end="99:86"><name pos:start="99:84" pos:end="99:86">val</name></expr></else></ternary></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>



            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:16">frac</name> <operator pos:start="105:18" pos:end="105:19">+=</operator> <name pos:start="105:21" pos:end="105:33">dst_incr_frac</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:30"><expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:17">index</name> <operator pos:start="107:19" pos:end="107:20">+=</operator> <name pos:start="107:22" pos:end="107:29">dst_incr</name></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="115:13"><if pos:start="109:13" pos:end="115:13">if<condition pos:start="109:15" pos:end="109:35">(<expr pos:start="109:16" pos:end="109:34"><name pos:start="109:16" pos:end="109:19">frac</name> <operator pos:start="109:21" pos:end="109:22">&gt;=</operator> <name pos:start="109:24" pos:end="109:34"><name pos:start="109:24" pos:end="109:24">c</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:34">src_incr</name></name></expr>)</condition><block pos:start="109:36" pos:end="115:13">{<block_content pos:start="111:17" pos:end="113:24">

                <expr_stmt pos:start="111:17" pos:end="111:36"><expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:20">frac</name> <operator pos:start="111:22" pos:end="111:23">-=</operator> <name pos:start="111:25" pos:end="111:35"><name pos:start="111:25" pos:end="111:25">c</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:35">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:24"><expr pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:21">index</name><operator pos:start="113:22" pos:end="113:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="119:13" pos:end="127:13"><if pos:start="119:13" pos:end="127:13">if<condition pos:start="119:15" pos:end="119:54">(<expr pos:start="119:16" pos:end="119:53"><name pos:start="119:16" pos:end="119:24">dst_index</name> <operator pos:start="119:26" pos:end="119:26">+</operator> <literal type="number" pos:start="119:28" pos:end="119:28">1</literal> <operator pos:start="119:30" pos:end="119:31">==</operator> <name pos:start="119:33" pos:end="119:53">compensation_distance</name></expr>)</condition><block pos:start="119:55" pos:end="127:13">{<block_content pos:start="121:17" pos:end="125:63">

                <expr_stmt pos:start="121:17" pos:end="121:41"><expr pos:start="121:17" pos:end="121:40"><name pos:start="121:17" pos:end="121:37">compensation_distance</name><operator pos:start="121:38" pos:end="121:38">=</operator> <literal type="number" pos:start="121:40" pos:end="121:40">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:63"><expr pos:start="123:17" pos:end="123:62"><name pos:start="123:17" pos:end="123:29">dst_incr_frac</name><operator pos:start="123:30" pos:end="123:30">=</operator> <name pos:start="123:32" pos:end="123:48"><name pos:start="123:32" pos:end="123:32">c</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:48">ideal_dst_incr</name></name> <operator pos:start="123:50" pos:end="123:50">%</operator> <name pos:start="123:52" pos:end="123:62"><name pos:start="123:52" pos:end="123:52">c</name><operator pos:start="123:53" pos:end="123:54">-&gt;</operator><name pos:start="123:55" pos:end="123:62">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:63"><expr pos:start="125:17" pos:end="125:62"><name pos:start="125:17" pos:end="125:24">dst_incr</name><operator pos:start="125:25" pos:end="125:25">=</operator>      <name pos:start="125:32" pos:end="125:48"><name pos:start="125:32" pos:end="125:32">c</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:48">ideal_dst_incr</name></name> <operator pos:start="125:50" pos:end="125:50">/</operator> <name pos:start="125:52" pos:end="125:62"><name pos:start="125:52" pos:end="125:52">c</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:62">src_incr</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:49"><expr pos:start="133:5" pos:end="133:48"><operator pos:start="133:5" pos:end="133:5">*</operator><name pos:start="133:6" pos:end="133:13">consumed</name><operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="133:30"><name pos:start="133:16" pos:end="133:20">FFMAX</name><argument_list pos:start="133:21" pos:end="133:30">(<argument pos:start="133:22" pos:end="133:26"><expr pos:start="133:22" pos:end="133:26"><name pos:start="133:22" pos:end="133:26">index</name></expr></argument>, <argument pos:start="133:29" pos:end="133:29"><expr pos:start="133:29" pos:end="133:29"><literal type="number" pos:start="133:29" pos:end="133:29">0</literal></expr></argument>)</argument_list></call> <operator pos:start="133:32" pos:end="133:33">&gt;&gt;</operator> <name pos:start="133:35" pos:end="133:48"><name pos:start="133:35" pos:end="133:35">c</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:48">phase_shift</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="135:40"><if pos:start="135:5" pos:end="135:40">if<condition pos:start="135:7" pos:end="135:16">(<expr pos:start="135:8" pos:end="135:15"><name pos:start="135:8" pos:end="135:12">index</name><operator pos:start="135:13" pos:end="135:14">&gt;=</operator><literal type="number" pos:start="135:15" pos:end="135:15">0</literal></expr>)</condition><block type="pseudo" pos:start="135:18" pos:end="135:40"><block_content pos:start="135:18" pos:end="135:40"> <expr_stmt pos:start="135:18" pos:end="135:40"><expr pos:start="135:18" pos:end="135:39"><name pos:start="135:18" pos:end="135:22">index</name> <operator pos:start="135:24" pos:end="135:25">&amp;=</operator> <name pos:start="135:27" pos:end="135:39"><name pos:start="135:27" pos:end="135:27">c</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:39">phase_mask</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if<condition pos:start="139:7" pos:end="139:29">(<expr pos:start="139:8" pos:end="139:28"><name pos:start="139:8" pos:end="139:28">compensation_distance</name></expr>)</condition><block pos:start="139:30" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:42">

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:29">compensation_distance</name> <operator pos:start="141:31" pos:end="141:32">-=</operator> <name pos:start="141:34" pos:end="141:42">dst_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:42"><expr pos:start="143:9" pos:end="143:41"><call pos:start="143:9" pos:end="143:41"><name pos:start="143:9" pos:end="143:14">assert</name><argument_list pos:start="143:15" pos:end="143:41">(<argument pos:start="143:16" pos:end="143:40"><expr pos:start="143:16" pos:end="143:40"><name pos:start="143:16" pos:end="143:36">compensation_distance</name> <operator pos:start="143:38" pos:end="143:38">&gt;</operator> <literal type="number" pos:start="143:40" pos:end="143:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="172:0"><if pos:start="147:5" pos:end="172:0">if<condition pos:start="147:7" pos:end="147:18">(<expr pos:start="147:8" pos:end="147:17"><name pos:start="147:8" pos:end="147:17">update_ctx</name></expr>)</condition><block pos:start="147:19" pos:end="172:0">{<block_content pos:start="149:9" pos:end="155:56">

        <expr_stmt pos:start="149:9" pos:end="149:22"><expr pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:9">c</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">frac</name></name><operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:21">frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:24"><expr pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:9">c</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:16">index</name></name><operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:23">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:58"><expr pos:start="153:9" pos:end="153:57"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:9">c</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:19">dst_incr</name></name><operator pos:start="153:20" pos:end="153:20">=</operator> <name pos:start="153:22" pos:end="153:34">dst_incr_frac</name> <operator pos:start="153:36" pos:end="153:36">+</operator> <name pos:start="153:38" pos:end="153:48"><name pos:start="153:38" pos:end="153:38">c</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:48">src_incr</name></name><operator pos:start="153:49" pos:end="153:49">*</operator><name pos:start="153:50" pos:end="153:57">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:56"><expr pos:start="155:9" pos:end="155:55"><name pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:9">c</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:32">compensation_distance</name></name><operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:55">compensation_distance</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="159:1" pos:end="159:5">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:5"><literal type="number" pos:start="159:5" pos:end="159:5">0</literal></expr></cpp:if>

    if(update_ctx &amp;&amp; !c-&gt;compensation_distance){

<cpp:undef pos:start="163:1" pos:end="163:11">#<cpp:directive pos:start="163:2" pos:end="163:6">undef</cpp:directive> <name pos:start="163:8" pos:end="163:11">rand</name></cpp:undef>

        av_resample_compensate(c, rand() % (8000*2) - 8000, 8000*2);

av_log(NULL, AV_LOG_DEBUG, "%d %d %d\n", c-&gt;dst_incr, c-&gt;ideal_dst_incr, c-&gt;compensation_distance);

    }

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>



    <return pos:start="175:5" pos:end="175:21">return <expr pos:start="175:12" pos:end="175:20"><name pos:start="175:12" pos:end="175:20">dst_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
