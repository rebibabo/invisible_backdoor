<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18651.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nut_read_packet</name><parameter_list pos:start="1:27" pos:end="1:65">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:48">avf</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type> <name pos:start="1:62" pos:end="1:64">pkt</name></decl></parameter>)</parameter_list> <block pos:start="1:67" pos:end="37:1">{<block_content pos:start="3:5" pos:end="35:15">

    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">NUTContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type> <name pos:start="3:18" pos:end="3:21">priv</name> <init pos:start="3:23" pos:end="3:38">= <expr pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:27">avf</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">nut_packet_t</name></type> <name pos:start="5:18" pos:end="5:19">pd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="13:71">while <condition pos:start="11:11" pos:end="11:60">(<expr pos:start="11:12" pos:end="11:59"><operator pos:start="11:12" pos:end="11:12">(</operator><name pos:start="11:13" pos:end="11:15">ret</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:54"><name pos:start="11:19" pos:end="11:38">nut_read_next_packet</name><argument_list pos:start="11:39" pos:end="11:54">(<argument pos:start="11:40" pos:end="11:48"><expr pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:43">priv</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:48">nut</name></name></expr></argument>, <argument pos:start="11:51" pos:end="11:53"><expr pos:start="11:51" pos:end="11:53"><operator pos:start="11:51" pos:end="11:51">&amp;</operator><name pos:start="11:52" pos:end="11:53">pd</name></expr></argument>)</argument_list></call><operator pos:start="11:55" pos:end="11:55">)</operator> <operator pos:start="11:57" pos:end="11:57">&lt;</operator> <literal type="number" pos:start="11:59" pos:end="11:59">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:71"><block_content pos:start="13:9" pos:end="13:71">

        <expr_stmt pos:start="13:9" pos:end="13:71"><expr pos:start="13:9" pos:end="13:70"><call pos:start="13:9" pos:end="13:70"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:70">(<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">avf</name></expr></argument>, <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:35" pos:end="13:52"><expr pos:start="13:35" pos:end="13:52"><literal type="string" pos:start="13:35" pos:end="13:52">" NUT error: %s\n"</literal></expr></argument>, <argument pos:start="13:55" pos:end="13:69"><expr pos:start="13:55" pos:end="13:69"><call pos:start="13:55" pos:end="13:69"><name pos:start="13:55" pos:end="13:63">nut_error</name><argument_list pos:start="13:64" pos:end="13:69">(<argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><operator pos:start="13:65" pos:end="13:65">-</operator><name pos:start="13:66" pos:end="13:68">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <if_stmt pos:start="17:5" pos:end="17:57"><if pos:start="17:5" pos:end="17:57">if <condition pos:start="17:8" pos:end="17:46">(<expr pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:14">||</operator> <call pos:start="17:16" pos:end="17:41"><name pos:start="17:16" pos:end="17:28">av_new_packet</name><argument_list pos:start="17:29" pos:end="17:41">(<argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">pkt</name></expr></argument>, <argument pos:start="17:35" pos:end="17:40"><expr pos:start="17:35" pos:end="17:40"><name pos:start="17:35" pos:end="17:40"><name pos:start="17:35" pos:end="17:36">pd</name><operator pos:start="17:37" pos:end="17:37">.</operator><name pos:start="17:38" pos:end="17:40">len</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:43" pos:end="17:43">&lt;</operator> <literal type="number" pos:start="17:45" pos:end="17:45">0</literal></expr>)</condition><block type="pseudo" pos:start="17:48" pos:end="17:57"><block_content pos:start="17:48" pos:end="17:57"> <return pos:start="17:48" pos:end="17:57">return <expr pos:start="17:55" pos:end="17:56"><operator pos:start="17:55" pos:end="17:55">-</operator><literal type="number" pos:start="17:56" pos:end="17:56">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="21:60"><if pos:start="21:5" pos:end="21:60">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:10">pd</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:16">flags</name></name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <name pos:start="21:20" pos:end="21:31">NUT_FLAG_KEY</name></expr>)</condition><block type="pseudo" pos:start="21:34" pos:end="21:60"><block_content pos:start="21:34" pos:end="21:60"> <expr_stmt pos:start="21:34" pos:end="21:60"><expr pos:start="21:34" pos:end="21:59"><name pos:start="21:34" pos:end="21:43"><name pos:start="21:34" pos:end="21:36">pkt</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:43">flags</name></name> <operator pos:start="21:45" pos:end="21:46">|=</operator> <name pos:start="21:48" pos:end="21:59">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">pkt</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:12">pts</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:17">pd</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:21">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:7">pkt</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:21">stream_index</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:26">pd</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:33">stream</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">pkt</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">pos</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:24">url_ftell</name><argument_list pos:start="27:25" pos:end="27:34">(<argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:33"><name pos:start="27:27" pos:end="27:29">avf</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:55"><name pos:start="31:11" pos:end="31:24">nut_read_frame</name><argument_list pos:start="31:25" pos:end="31:55">(<argument pos:start="31:26" pos:end="31:34"><expr pos:start="31:26" pos:end="31:34"><name pos:start="31:26" pos:end="31:34"><name pos:start="31:26" pos:end="31:29">priv</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">nut</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:43"><expr pos:start="31:37" pos:end="31:43"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:43"><name pos:start="31:38" pos:end="31:39">pd</name><operator pos:start="31:40" pos:end="31:40">.</operator><name pos:start="31:41" pos:end="31:43">len</name></name></expr></argument>, <argument pos:start="31:46" pos:end="31:54"><expr pos:start="31:46" pos:end="31:54"><name pos:start="31:46" pos:end="31:54"><name pos:start="31:46" pos:end="31:48">pkt</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:54">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="35:5" pos:end="35:15">return <expr pos:start="35:12" pos:end="35:14"><name pos:start="35:12" pos:end="35:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
