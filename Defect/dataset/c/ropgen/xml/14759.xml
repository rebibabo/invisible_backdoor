<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14759.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">decode_nal_sei_message</name><parameter_list pos:start="1:34" pos:end="3:77">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:47">GetBitContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">gb</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">logctx</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:77"><decl pos:start="1:68" pos:end="1:77"><type pos:start="1:68" pos:end="1:77"><name pos:start="1:68" pos:end="1:74">HEVCSEI</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:77">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:57"><decl pos:start="3:35" pos:end="3:57"><type pos:start="3:35" pos:end="3:57"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:53">HEVCParamSets</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:57">ps</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:76"><decl pos:start="3:60" pos:end="3:76"><type pos:start="3:60" pos:end="3:76"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:76">nal_unit_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">payload_type</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">payload_size</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">byte</name> <init pos:start="11:14" pos:end="11:19">= <expr pos:start="11:16" pos:end="11:19"><literal type="number" pos:start="11:16" pos:end="11:19">0xFF</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:10">av_log</name><argument_list pos:start="13:11" pos:end="13:50">(<argument pos:start="13:12" pos:end="13:17"><expr pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:17">logctx</name></expr></argument>, <argument pos:start="13:20" pos:end="13:31"><expr pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:31">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="13:34" pos:end="13:49"><expr pos:start="13:34" pos:end="13:49"><literal type="string" pos:start="13:34" pos:end="13:49">"Decoding SEI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="17:5" pos:end="25:5">while <condition pos:start="17:11" pos:end="17:24">(<expr pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:15">byte</name> <operator pos:start="17:17" pos:end="17:18">==</operator> <literal type="number" pos:start="17:20" pos:end="17:23">0xFF</literal></expr>)</condition> <block pos:start="17:26" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:29">



        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:12">byte</name>          <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:32">get_bits</name><argument_list pos:start="21:33" pos:end="21:39">(<argument pos:start="21:34" pos:end="21:35"><expr pos:start="21:34" pos:end="21:35"><name pos:start="21:34" pos:end="21:35">gb</name></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:20">payload_type</name> <operator pos:start="23:22" pos:end="23:23">+=</operator> <name pos:start="23:25" pos:end="23:28">byte</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:8">byte</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <literal type="number" pos:start="27:12" pos:end="27:15">0xFF</literal></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="37:5">while <condition pos:start="29:11" pos:end="29:24">(<expr pos:start="29:12" pos:end="29:23"><name pos:start="29:12" pos:end="29:15">byte</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="number" pos:start="29:20" pos:end="29:23">0xFF</literal></expr>)</condition> <block pos:start="29:26" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:29">



        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:12">byte</name>          <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:39"><name pos:start="33:25" pos:end="33:32">get_bits</name><argument_list pos:start="33:33" pos:end="33:39">(<argument pos:start="33:34" pos:end="33:35"><expr pos:start="33:34" pos:end="33:35"><name pos:start="33:34" pos:end="33:35">gb</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:20">payload_size</name> <operator pos:start="35:22" pos:end="35:23">+=</operator> <name pos:start="35:25" pos:end="35:28">byte</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:45">(<expr pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:21">nal_unit_type</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <name pos:start="39:26" pos:end="39:44">HEVC_NAL_SEI_PREFIX</name></expr>)</condition> <block pos:start="39:47" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:84">

        <return pos:start="41:9" pos:end="41:84">return <expr pos:start="41:16" pos:end="41:83"><call pos:start="41:16" pos:end="41:83"><name pos:start="41:16" pos:end="41:36">decode_nal_sei_prefix</name><argument_list pos:start="41:37" pos:end="41:83">(<argument pos:start="41:38" pos:end="41:39"><expr pos:start="41:38" pos:end="41:39"><name pos:start="41:38" pos:end="41:39">gb</name></expr></argument>, <argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">logctx</name></expr></argument>, <argument pos:start="41:50" pos:end="41:50"><expr pos:start="41:50" pos:end="41:50"><name pos:start="41:50" pos:end="41:50">s</name></expr></argument>, <argument pos:start="41:53" pos:end="41:54"><expr pos:start="41:53" pos:end="41:54"><name pos:start="41:53" pos:end="41:54">ps</name></expr></argument>, <argument pos:start="41:57" pos:end="41:68"><expr pos:start="41:57" pos:end="41:68"><name pos:start="41:57" pos:end="41:68">payload_type</name></expr></argument>, <argument pos:start="41:71" pos:end="41:82"><expr pos:start="41:71" pos:end="41:82"><name pos:start="41:71" pos:end="41:82">payload_size</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:80"> <comment type="block" pos:start="43:14" pos:end="43:50">/* nal_unit_type == NAL_SEI_SUFFIX */</comment>

        <return pos:start="45:9" pos:end="45:80">return <expr pos:start="45:16" pos:end="45:79"><call pos:start="45:16" pos:end="45:79"><name pos:start="45:16" pos:end="45:36">decode_nal_sei_suffix</name><argument_list pos:start="45:37" pos:end="45:79">(<argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><name pos:start="45:38" pos:end="45:39">gb</name></expr></argument>, <argument pos:start="45:42" pos:end="45:47"><expr pos:start="45:42" pos:end="45:47"><name pos:start="45:42" pos:end="45:47">logctx</name></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><name pos:start="45:50" pos:end="45:50">s</name></expr></argument>, <argument pos:start="45:53" pos:end="45:64"><expr pos:start="45:53" pos:end="45:64"><name pos:start="45:53" pos:end="45:64">payload_type</name></expr></argument>, <argument pos:start="45:67" pos:end="45:78"><expr pos:start="45:67" pos:end="45:78"><name pos:start="45:67" pos:end="45:78">payload_size</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function></unit>
