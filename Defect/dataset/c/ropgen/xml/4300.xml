<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4300.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">do_smbios_option</name><parameter_list pos:start="1:22" pos:end="1:41">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:34"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">optarg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="16:0">

<cpp:ifdef pos:start="5:1" pos:end="5:18">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:18">TARGET_I386</name></cpp:ifdef>

    <if_stmt pos:start="7:5" pos:end="16:0"><if pos:start="7:5" pos:end="16:0">if <condition pos:start="7:8" pos:end="7:37">(<expr pos:start="7:9" pos:end="7:36"><call pos:start="7:9" pos:end="7:32"><name pos:start="7:9" pos:end="7:24">smbios_entry_add</name><argument_list pos:start="7:25" pos:end="7:32">(<argument pos:start="7:26" pos:end="7:31"><expr pos:start="7:26" pos:end="7:31"><name pos:start="7:26" pos:end="7:31">optarg</name></expr></argument>)</argument_list></call> <operator pos:start="7:34" pos:end="7:34">&lt;</operator> <literal type="number" pos:start="7:36" pos:end="7:36">0</literal></expr>)</condition> <block pos:start="7:39" pos:end="16:0">{<block_content pos:start="9:9" pos:end="11:16">

        <expr_stmt pos:start="9:9" pos:end="9:51"><expr pos:start="9:9" pos:end="9:50"><call pos:start="9:9" pos:end="9:50"><name pos:start="9:9" pos:end="9:15">fprintf</name><argument_list pos:start="9:16" pos:end="9:50">(<argument pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:22">stderr</name></expr></argument>, <argument pos:start="9:25" pos:end="9:49"><expr pos:start="9:25" pos:end="9:49"><literal type="string" pos:start="9:25" pos:end="9:49">"Wrong smbios provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><call pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">exit</name><argument_list pos:start="11:13" pos:end="11:15">(<argument pos:start="11:14" pos:end="11:14"><expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
