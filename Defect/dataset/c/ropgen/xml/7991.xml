<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7991.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">helper_lret_protected</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:36"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:36">shift</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:48">addend</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:0">

    <expr_stmt pos:start="5:5" pos:end="8:0"><expr pos:start="5:5" pos:end="5:42"><call pos:start="5:5" pos:end="5:42"><name pos:start="5:5" pos:end="5:24">helper_ret_protected</name><argument_list pos:start="5:25" pos:end="5:42">(<argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">shift</name></expr></argument>, <argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">0</literal></expr></argument>, <argument pos:start="5:36" pos:end="5:41"><expr pos:start="5:36" pos:end="5:41"><name pos:start="5:36" pos:end="5:41">addend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:19">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:19">CONFIG_KQEMU</name></cpp:ifdef>

    <if_stmt pos:start="9:5" pos:end="18:0"><if pos:start="9:5" pos:end="18:0">if <condition pos:start="9:8" pos:end="9:25">(<expr pos:start="9:9" pos:end="9:24"><call pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:19">kqemu_is_ok</name><argument_list pos:start="9:20" pos:end="9:24">(<argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:23">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:27" pos:end="18:0">{<block_content pos:start="11:9" pos:end="13:24">

        <expr_stmt pos:start="11:9" pos:end="11:34"><expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:11">env</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:28">exception_index</name></name> <operator pos:start="11:30" pos:end="11:30">=</operator> <operator pos:start="11:32" pos:end="11:32">-</operator><literal type="number" pos:start="11:33" pos:end="11:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:24"><expr pos:start="13:9" pos:end="13:23"><call pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:21">cpu_loop_exit</name><argument_list pos:start="13:22" pos:end="13:23">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
