<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10945.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">kvm_init_vcpu</name><parameter_list pos:start="1:18" pos:end="1:32">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:28"><name pos:start="1:19" pos:end="1:26">CPUState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">KVMState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:27">= <expr pos:start="5:19" pos:end="5:27"><name pos:start="5:19" pos:end="5:27">kvm_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">long</name></type> <name pos:start="7:10" pos:end="7:18">mmap_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:30">(<argument pos:start="13:13" pos:end="13:29"><expr pos:start="13:13" pos:end="13:29"><literal type="string" pos:start="13:13" pos:end="13:29">"kvm_init_vcpu\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:58"><name pos:start="17:11" pos:end="17:22">kvm_vm_ioctl</name><argument_list pos:start="17:23" pos:end="17:58">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">s</name></expr></argument>, <argument pos:start="17:27" pos:end="17:41"><expr pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:41">KVM_CREATE_VCPU</name></expr></argument>, <argument pos:start="17:44" pos:end="17:57"><expr pos:start="17:44" pos:end="17:57"><name pos:start="17:44" pos:end="17:57"><name pos:start="17:44" pos:end="17:46">env</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:57">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><call pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:15">DPRINTF</name><argument_list pos:start="21:16" pos:end="21:43">(<argument pos:start="21:17" pos:end="21:42"><expr pos:start="21:17" pos:end="21:42"><literal type="string" pos:start="21:17" pos:end="21:42">"kvm_create_vcpu failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">kvm_fd</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:21">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:18">kvm_state</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:22">s</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:13">mmap_size</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:55"><name pos:start="35:17" pos:end="35:25">kvm_ioctl</name><argument_list pos:start="35:26" pos:end="35:55">(<argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">s</name></expr></argument>, <argument pos:start="35:30" pos:end="35:51"><expr pos:start="35:30" pos:end="35:51"><name pos:start="35:30" pos:end="35:51">KVM_GET_VCPU_MMAP_SIZE</name></expr></argument>, <argument pos:start="35:54" pos:end="35:54"><expr pos:start="35:54" pos:end="35:54"><literal type="number" pos:start="35:54" pos:end="35:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:17">mmap_size</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr>)</condition> <block pos:start="37:24" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:15">DPRINTF</name><argument_list pos:start="39:16" pos:end="39:50">(<argument pos:start="39:17" pos:end="39:49"><expr pos:start="39:17" pos:end="39:49"><literal type="string" pos:start="39:17" pos:end="39:49">"KVM_GET_VCPU_MMAP_SIZE failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:40"><expr pos:start="47:5" pos:end="49:39"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">env</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">kvm_run</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="49:39"><name pos:start="47:20" pos:end="47:23">mmap</name><argument_list pos:start="47:24" pos:end="49:39">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">NULL</name></expr></argument>, <argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:39">mmap_size</name></expr></argument>, <argument pos:start="47:42" pos:end="47:63"><expr pos:start="47:42" pos:end="47:63"><name pos:start="47:42" pos:end="47:50">PROT_READ</name> <operator pos:start="47:52" pos:end="47:52">|</operator> <name pos:start="47:54" pos:end="47:63">PROT_WRITE</name></expr></argument>, <argument pos:start="47:66" pos:end="47:75"><expr pos:start="47:66" pos:end="47:75"><name pos:start="47:66" pos:end="47:75">MAP_SHARED</name></expr></argument>,

                        <argument pos:start="49:25" pos:end="49:35"><expr pos:start="49:25" pos:end="49:35"><name pos:start="49:25" pos:end="49:35"><name pos:start="49:25" pos:end="49:27">env</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:35">kvm_fd</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="64:0"><if pos:start="51:5" pos:end="64:0">if <condition pos:start="51:8" pos:end="51:35">(<expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:11">env</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:20">kvm_run</name></name> <operator pos:start="51:22" pos:end="51:23">==</operator> <name pos:start="51:25" pos:end="51:34">MAP_FAILED</name></expr>)</condition> <block pos:start="51:37" pos:end="64:0">{<block_content pos:start="53:9" pos:end="57:17">

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">-</operator><name pos:start="53:16" pos:end="53:20">errno</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><call pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:15">DPRINTF</name><argument_list pos:start="55:16" pos:end="55:47">(<argument pos:start="55:17" pos:end="55:46"><expr pos:start="55:17" pos:end="55:46"><literal type="string" pos:start="55:17" pos:end="55:46">"mmap'ing vcpu state failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="63:1" pos:end="63:29">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:29">KVM_CAP_COALESCED_MMIO</name></cpp:ifdef>

    <if_stmt pos:start="65:5" pos:end="72:0"><if pos:start="65:5" pos:end="72:0">if <condition pos:start="65:8" pos:end="65:53">(<expr pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:25">coalesced_mmio</name></name> <operator pos:start="65:27" pos:end="65:28">&amp;&amp;</operator> <operator pos:start="65:30" pos:end="65:30">!</operator><name pos:start="65:31" pos:end="65:52"><name pos:start="65:31" pos:end="65:31">s</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:52">coalesced_mmio_ring</name></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="72:0"><block_content pos:start="67:9" pos:end="72:0">

        <expr_stmt pos:start="67:9" pos:end="72:0"><expr pos:start="67:9" pos:end="69:45"><name pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:30">coalesced_mmio_ring</name></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <operator pos:start="67:34" pos:end="67:34">(</operator><name pos:start="67:35" pos:end="67:38">void</name> <operator pos:start="67:40" pos:end="67:40">*</operator><operator pos:start="67:41" pos:end="67:41">)</operator> <name pos:start="67:43" pos:end="67:54"><name pos:start="67:43" pos:end="67:45">env</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:54">kvm_run</name></name> <operator pos:start="67:56" pos:end="67:56">+</operator>

		<name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:33">coalesced_mmio</name></name> <operator pos:start="69:35" pos:end="69:35">*</operator> <name pos:start="69:37" pos:end="69:45">PAGE_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:33"><name pos:start="75:11" pos:end="75:28">kvm_arch_init_vcpu</name><argument_list pos:start="75:29" pos:end="75:33">(<argument pos:start="75:30" pos:end="75:32"><expr pos:start="75:30" pos:end="75:32"><name pos:start="75:30" pos:end="75:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:17">(<expr pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:14">==</operator> <literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>)</condition> <block pos:start="77:19" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:33">

        <expr_stmt pos:start="79:9" pos:end="79:49"><expr pos:start="79:9" pos:end="79:48"><call pos:start="79:9" pos:end="79:48"><name pos:start="79:9" pos:end="79:27">qemu_register_reset</name><argument_list pos:start="79:28" pos:end="79:48">(<argument pos:start="79:29" pos:end="79:42"><expr pos:start="79:29" pos:end="79:42"><name pos:start="79:29" pos:end="79:42">kvm_reset_vcpu</name></expr></argument>, <argument pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><name pos:start="79:45" pos:end="79:47">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><call pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:27">kvm_arch_reset_vcpu</name><argument_list pos:start="81:28" pos:end="81:32">(<argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="85:1" pos:end="85:4"><name pos:start="85:1" pos:end="85:3">err</name>:</label>

    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
