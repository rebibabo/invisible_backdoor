<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8819.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:26">out_reg</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:37"><decl pos:start="1:28" pos:end="1:37"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:34">IVState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:47"><name pos:start="1:40" pos:end="1:43">enum</name> <name pos:start="1:45" pos:end="1:47">Reg</name></name></type> <name pos:start="1:49" pos:end="1:51">reg</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:61">unsigned</name></type> <name pos:start="1:63" pos:end="1:63">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:25">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">name</name> <init pos:start="5:22" pos:end="5:35">= <expr pos:start="5:24" pos:end="5:35"><call pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:30">reg2str</name><argument_list pos:start="5:31" pos:end="5:35">(<argument pos:start="5:32" pos:end="5:34"><expr pos:start="5:32" pos:end="5:34"><name pos:start="5:32" pos:end="5:34">reg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">QTestState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:21">qtest</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36">global_qtest</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:16">global_qtest</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:27">qtest</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:18">g_test_message</name><argument_list pos:start="13:19" pos:end="13:42">(<argument pos:start="13:20" pos:end="13:32"><expr pos:start="13:20" pos:end="13:32"><literal type="string" pos:start="13:20" pos:end="13:32">"%x -&gt; *%s\n"</literal></expr></argument>, <argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">v</name></expr></argument>, <argument pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><call pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:18">qpci_io_writel</name><argument_list pos:start="15:19" pos:end="15:48">(<argument pos:start="15:20" pos:end="15:25"><expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:25">dev</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:44"><expr pos:start="15:28" pos:end="15:44"><name pos:start="15:28" pos:end="15:38"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:38">reg_base</name></name> <operator pos:start="15:40" pos:end="15:40">+</operator> <name pos:start="15:42" pos:end="15:44">reg</name></expr></argument>, <argument pos:start="15:47" pos:end="15:47"><expr pos:start="15:47" pos:end="15:47"><name pos:start="15:47" pos:end="15:47">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:16">global_qtest</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:24">qtest</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
