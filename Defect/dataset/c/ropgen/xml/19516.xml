<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19516.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">QOSState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:21">qtest_vboot</name><parameter_list pos:start="1:22" pos:end="1:71">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:28">QOSOps</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">ops</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:58">cmdline_fmt</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:67">va_list</name></type> <name pos:start="1:69" pos:end="1:70">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:14">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:17">cmdline</name></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">QOSState</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">qs</name> <init pos:start="9:25" pos:end="9:52">= <expr pos:start="9:27" pos:end="9:52"><call pos:start="9:27" pos:end="9:52"><name pos:start="9:27" pos:end="9:34">g_malloc</name><argument_list pos:start="9:35" pos:end="9:52">(<argument pos:start="9:36" pos:end="9:51"><expr pos:start="9:36" pos:end="9:51"><sizeof pos:start="9:36" pos:end="9:51">sizeof<argument_list pos:start="9:42" pos:end="9:51">(<argument pos:start="9:43" pos:end="9:50"><expr pos:start="9:43" pos:end="9:50"><name pos:start="9:43" pos:end="9:50">QOSState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:11">cmdline</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:47"><name pos:start="13:15" pos:end="13:30">g_strdup_vprintf</name><argument_list pos:start="13:31" pos:end="13:47">(<argument pos:start="13:32" pos:end="13:42"><expr pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:42">cmdline_fmt</name></expr></argument>, <argument pos:start="13:45" pos:end="13:46"><expr pos:start="13:45" pos:end="13:46"><name pos:start="13:45" pos:end="13:46">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:6">qs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:11">qts</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:34"><name pos:start="15:15" pos:end="15:25">qtest_start</name><argument_list pos:start="15:26" pos:end="15:34">(<argument pos:start="15:27" pos:end="15:33"><expr pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:33">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:6">qs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:11">ops</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:17">ops</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><call pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:26">qtest_irq_intercept_in</name><argument_list pos:start="19:27" pos:end="19:50">(<argument pos:start="19:28" pos:end="19:39"><expr pos:start="19:28" pos:end="19:39"><name pos:start="19:28" pos:end="19:39">global_qtest</name></expr></argument>, <argument pos:start="19:42" pos:end="19:49"><expr pos:start="19:42" pos:end="19:49"><literal type="string" pos:start="19:42" pos:end="19:49">"ioapic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:11">ops</name> <operator pos:start="21:13" pos:end="21:14">&amp;&amp;</operator> <name pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:18">ops</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:34">init_allocator</name></name></expr>)</condition> <block pos:start="21:37" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:56">

        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:10">qs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">alloc</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:55"><name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:23">ops</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:39">init_allocator</name></name><argument_list pos:start="23:40" pos:end="23:55">(<argument pos:start="23:41" pos:end="23:54"><expr pos:start="23:41" pos:end="23:54"><name pos:start="23:41" pos:end="23:54">ALLOC_NO_FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><call pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:10">g_free</name><argument_list pos:start="29:11" pos:end="29:19">(<argument pos:start="29:12" pos:end="29:18"><expr pos:start="29:12" pos:end="29:18"><name pos:start="29:12" pos:end="29:18">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:14">return <expr pos:start="31:12" pos:end="31:13"><name pos:start="31:12" pos:end="31:13">qs</name></expr>;</return>

</block_content>}</block></function>
</unit>
