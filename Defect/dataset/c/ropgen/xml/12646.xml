<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12646.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:25">qemu_try_blockalign</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:59"><decl pos:start="1:49" pos:end="1:59"><type pos:start="1:49" pos:end="1:59"><name pos:start="1:49" pos:end="1:54">size_t</name></type> <name pos:start="1:56" pos:end="1:59">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:42">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:16">align</name> <init pos:start="5:18" pos:end="5:41">= <expr pos:start="5:20" pos:end="5:41"><call pos:start="5:20" pos:end="5:41"><name pos:start="5:20" pos:end="5:37">bdrv_opt_mem_align</name><argument_list pos:start="5:38" pos:end="5:41">(<argument pos:start="5:39" pos:end="5:40"><expr pos:start="5:39" pos:end="5:40"><name pos:start="5:39" pos:end="5:40">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:55">/* Ensure that NULL is never returned on success */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:21">(<argument pos:start="11:12" pos:end="11:20"><expr pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:16">align</name> <operator pos:start="11:18" pos:end="11:18">&gt;</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:21">

        <expr_stmt pos:start="15:9" pos:end="15:21"><expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:12">size</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:20">align</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="21:5" pos:end="21:42">return <expr pos:start="21:12" pos:end="21:41"><call pos:start="21:12" pos:end="21:41"><name pos:start="21:12" pos:end="21:28">qemu_try_memalign</name><argument_list pos:start="21:29" pos:end="21:41">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34">align</name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
