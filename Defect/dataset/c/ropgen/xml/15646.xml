<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15646.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">avpriv_exif_decode_ifd</name><parameter_list pos:start="1:27" pos:end="3:62">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">logctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><name pos:start="1:42" pos:end="1:55">GetByteContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:63">gbytes</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:71">le</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">depth</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:61"><decl pos:start="3:39" pos:end="3:61"><type pos:start="3:39" pos:end="3:61"><name pos:start="3:39" pos:end="3:50">AVDictionary</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:61">metadata</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:36">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">entries</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:11">entries</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:39"><name pos:start="13:15" pos:end="13:27">ff_tget_short</name><argument_list pos:start="13:28" pos:end="13:39">(<argument pos:start="13:29" pos:end="13:34"><expr pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:34">gbytes</name></expr></argument>, <argument pos:start="13:37" pos:end="13:38"><expr pos:start="13:37" pos:end="13:38"><name pos:start="13:37" pos:end="13:38">le</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:58">(<expr pos:start="17:9" pos:end="17:57"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:34">bytestream2_get_bytes_left</name><argument_list pos:start="17:35" pos:end="17:42">(<argument pos:start="17:36" pos:end="17:41"><expr pos:start="17:36" pos:end="17:41"><name pos:start="17:36" pos:end="17:41">gbytes</name></expr></argument>)</argument_list></call> <operator pos:start="17:44" pos:end="17:44">&lt;</operator> <name pos:start="17:46" pos:end="17:52">entries</name> <operator pos:start="17:54" pos:end="17:54">*</operator> <literal type="number" pos:start="17:56" pos:end="17:57">12</literal></expr>)</condition> <block pos:start="17:60" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:35">

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="25:5" pos:end="33:5">for <control pos:start="25:9" pos:end="25:33">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:28"><expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:27">entries</name></expr>;</condition> <incr pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:30">i</name><operator pos:start="25:31" pos:end="25:32">++</operator></expr></incr>)</control> <block pos:start="25:35" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:9">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:77">(<expr pos:start="27:13" pos:end="27:76"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:16">ret</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:71"><name pos:start="27:20" pos:end="27:34">exif_decode_tag</name><argument_list pos:start="27:35" pos:end="27:71">(<argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:41">logctx</name></expr></argument>, <argument pos:start="27:44" pos:end="27:49"><expr pos:start="27:44" pos:end="27:49"><name pos:start="27:44" pos:end="27:49">gbytes</name></expr></argument>, <argument pos:start="27:52" pos:end="27:53"><expr pos:start="27:52" pos:end="27:53"><name pos:start="27:52" pos:end="27:53">le</name></expr></argument>, <argument pos:start="27:56" pos:end="27:60"><expr pos:start="27:56" pos:end="27:60"><name pos:start="27:56" pos:end="27:60">depth</name></expr></argument>, <argument pos:start="27:63" pos:end="27:70"><expr pos:start="27:63" pos:end="27:70"><name pos:start="27:63" pos:end="27:70">metadata</name></expr></argument>)</argument_list></call><operator pos:start="27:72" pos:end="27:72">)</operator> <operator pos:start="27:74" pos:end="27:74">&lt;</operator> <literal type="number" pos:start="27:76" pos:end="27:76">0</literal></expr>)</condition> <block pos:start="27:79" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:23">

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="37:5" pos:end="37:71">// return next IDF offset or 0x000000000 or a value &lt; 0 for failure</comment>

    <return pos:start="39:5" pos:end="39:36">return <expr pos:start="39:12" pos:end="39:35"><call pos:start="39:12" pos:end="39:35"><name pos:start="39:12" pos:end="39:23">ff_tget_long</name><argument_list pos:start="39:24" pos:end="39:35">(<argument pos:start="39:25" pos:end="39:30"><expr pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:30">gbytes</name></expr></argument>, <argument pos:start="39:33" pos:end="39:34"><expr pos:start="39:33" pos:end="39:34"><name pos:start="39:33" pos:end="39:34">le</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
