<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2525.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:49"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">rgb32tobgr16</name>)<parameter_list pos:start="1:40" pos:end="1:88">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">dst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:87"><decl pos:start="1:75" pos:end="1:87"><type pos:start="1:75" pos:end="1:87"><name pos:start="1:75" pos:end="1:78">long</name></type> <name pos:start="1:80" pos:end="1:87">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:48">{<block_content pos:start="5:9" pos:end="29:48">

	<decl_stmt pos:start="5:9" pos:end="5:31"><decl pos:start="5:9" pos:end="5:30"><type pos:start="5:9" pos:end="5:23"><specifier pos:start="5:9" pos:end="5:13">const</specifier> <name pos:start="5:15" pos:end="5:21">uint8_t</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:30">= <expr pos:start="5:28" pos:end="5:30"><name pos:start="5:28" pos:end="5:30">src</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="10:0"><decl pos:start="7:9" pos:end="7:26"><type pos:start="7:9" pos:end="7:23"><specifier pos:start="7:9" pos:end="7:13">const</specifier> <name pos:start="7:15" pos:end="7:21">uint8_t</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">end</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:15">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:15">HAVE_MMX</name></cpp:ifdef>

	<decl_stmt pos:start="11:9" pos:end="14:0"><decl pos:start="11:9" pos:end="11:29"><type pos:start="11:9" pos:end="11:23"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:21">uint8_t</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:29">mm_end</name></decl>;</decl_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

	<decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:16">uint16_t</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:19">d</name> <init pos:start="15:21" pos:end="15:37">= <expr pos:start="15:23" pos:end="15:37"><operator pos:start="15:23" pos:end="15:23">(</operator><name pos:start="15:24" pos:end="15:31">uint16_t</name> <operator pos:start="15:33" pos:end="15:33">*</operator><operator pos:start="15:34" pos:end="15:34">)</operator><name pos:start="15:35" pos:end="15:37">dst</name></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="17:9" pos:end="23:25"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:11">end</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:15">s</name> <operator pos:start="17:17" pos:end="17:17">+</operator> <name pos:start="17:19" pos:end="17:26">src_size</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="19:1" pos:end="19:15">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:15">HAVE_MMX</name></cpp:ifdef>

	<asm pos:start="21:9" pos:end="21:65">__asm __volatile(PREFETCH"	%0"::"m"(*src):"memory");</asm>

	<asm pos:start="23:9" pos:end="23:25">__asm __volatile(</asm>

	    <expr_stmt pos:start="25:13" pos:end="29:47"><expr pos:start="25:13" pos:end="29:29"><literal type="string" pos:start="25:13" pos:end="25:38">"movq	%0, %%mm7\n\t"</literal>

	    <literal type="string" pos:start="27:13" pos:end="27:38">"movq	%1, %%mm6\n\t"</literal>

	    <operator pos:start="29:13" pos:end="29:14">::</operator><literal type="string" pos:start="29:15" pos:end="29:17">"m"</literal><operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:28">red_16mask</name><operator pos:start="29:29" pos:end="29:29">)</operator></expr><operator pos:start="29:30" pos:end="29:30">,</operator><expr pos:start="29:31" pos:end="29:47"><literal type="string" pos:start="29:31" pos:end="29:33">"m"</literal><operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:46">green_16mask</name><operator pos:start="29:47" pos:end="29:47">)</operator></expr></expr_stmt>)</block_content></block>;</function>

	<expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:14">mm_end</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:20">end</name> <operator pos:start="31:22" pos:end="31:22">-</operator> <literal type="number" pos:start="31:24" pos:end="31:25">15</literal></expr>;</expr_stmt>

	<while pos:start="33:9" pos:end="95:61">while<condition pos:start="33:14" pos:end="33:25">(<expr pos:start="33:15" pos:end="33:24"><name pos:start="33:15" pos:end="33:15">s</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <name pos:start="33:19" pos:end="33:24">mm_end</name></expr>)</condition>

	<block pos:start="35:9" pos:end="95:60">{<block_content pos:start="39:17" pos:end="95:60">

	    <asm pos:start="37:13" pos:end="37:29">__asm __volatile(</asm>

		<expr_stmt pos:start="39:17" pos:end="95:59"><expr pos:start="39:17" pos:end="95:33"><name pos:start="39:17" pos:end="39:24">PREFETCH</name><literal type="string" pos:start="39:25" pos:end="39:35">" 32%1\n\t"</literal>

		<literal type="string" pos:start="41:17" pos:end="41:38">"movd	%1, %%mm0\n\t"</literal>

		<literal type="string" pos:start="43:17" pos:end="43:39">"movd	4%1, %%mm3\n\t"</literal>

		<literal type="string" pos:start="45:17" pos:end="45:42">"punpckldq 8%1, %%mm0\n\t"</literal>

		<literal type="string" pos:start="47:17" pos:end="47:43">"punpckldq 12%1, %%mm3\n\t"</literal>

		<literal type="string" pos:start="49:17" pos:end="49:41">"movq	%%mm0, %%mm1\n\t"</literal>

		<literal type="string" pos:start="51:17" pos:end="51:41">"movq	%%mm0, %%mm2\n\t"</literal>

		<literal type="string" pos:start="53:17" pos:end="53:41">"movq	%%mm3, %%mm4\n\t"</literal>

		<literal type="string" pos:start="55:17" pos:end="55:41">"movq	%%mm3, %%mm5\n\t"</literal>

		<literal type="string" pos:start="57:17" pos:end="57:38">"psllq	$8, %%mm0\n\t"</literal>

		<literal type="string" pos:start="59:17" pos:end="59:38">"psllq	$8, %%mm3\n\t"</literal>

		<literal type="string" pos:start="61:17" pos:end="61:41">"pand	%%mm7, %%mm0\n\t"</literal>

		<literal type="string" pos:start="63:17" pos:end="63:41">"pand	%%mm7, %%mm3\n\t"</literal>

		<literal type="string" pos:start="65:17" pos:end="65:38">"psrlq	$5, %%mm1\n\t"</literal>

		<literal type="string" pos:start="67:17" pos:end="67:38">"psrlq	$5, %%mm4\n\t"</literal>

		<literal type="string" pos:start="69:17" pos:end="69:41">"pand	%%mm6, %%mm1\n\t"</literal>

		<literal type="string" pos:start="71:17" pos:end="71:41">"pand	%%mm6, %%mm4\n\t"</literal>

		<literal type="string" pos:start="73:17" pos:end="73:39">"psrlq	$19, %%mm2\n\t"</literal>

		<literal type="string" pos:start="75:17" pos:end="75:39">"psrlq	$19, %%mm5\n\t"</literal>

		<literal type="string" pos:start="77:17" pos:end="77:38">"pand	%2, %%mm2\n\t"</literal>

		<literal type="string" pos:start="79:17" pos:end="79:38">"pand	%2, %%mm5\n\t"</literal>

		<literal type="string" pos:start="81:17" pos:end="81:41">"por	%%mm1, %%mm0\n\t"</literal>

		<literal type="string" pos:start="83:17" pos:end="83:41">"por	%%mm4, %%mm3\n\t"</literal>

		<literal type="string" pos:start="85:17" pos:end="85:41">"por	%%mm2, %%mm0\n\t"</literal>

		<literal type="string" pos:start="87:17" pos:end="87:41">"por	%%mm5, %%mm3\n\t"</literal>

		<literal type="string" pos:start="89:17" pos:end="89:39">"psllq	$16, %%mm3\n\t"</literal>

		<literal type="string" pos:start="91:17" pos:end="91:41">"por	%%mm3, %%mm0\n\t"</literal>

		<name pos:start="93:17" pos:end="93:22">MOVNTQ</name><literal type="string" pos:start="93:23" pos:end="93:38">"	%%mm0, %0\n\t"</literal>

		<operator pos:start="95:17" pos:end="95:17">:</operator><literal type="string" pos:start="95:18" pos:end="95:21">"=m"</literal><operator pos:start="95:22" pos:end="95:22">(</operator><operator pos:start="95:23" pos:end="95:23">*</operator><name pos:start="95:24" pos:end="95:24">d</name><operator pos:start="95:25" pos:end="95:25">)</operator><operator pos:start="95:26" pos:end="95:26">:</operator><literal type="string" pos:start="95:27" pos:end="95:29">"m"</literal><operator pos:start="95:30" pos:end="95:30">(</operator><operator pos:start="95:31" pos:end="95:31">*</operator><name pos:start="95:32" pos:end="95:32">s</name><operator pos:start="95:33" pos:end="95:33">)</operator></expr><operator pos:start="95:34" pos:end="95:34">,</operator><expr pos:start="95:35" pos:end="95:59"><literal type="string" pos:start="95:35" pos:end="95:37">"m"</literal><operator pos:start="95:38" pos:end="95:38">(</operator><name pos:start="95:39" pos:end="95:49">blue_16mask</name><operator pos:start="95:50" pos:end="95:50">)</operator><operator pos:start="95:51" pos:end="95:51">:</operator><literal type="string" pos:start="95:52" pos:end="95:59">"memory"</literal></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="95:61" pos:end="95:61">;</empty_stmt></while>

		<expr_stmt pos:start="97:17" pos:end="97:23"><expr pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:17">d</name> <operator pos:start="97:19" pos:end="97:20">+=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">4</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="99:17" pos:end="99:24"><expr pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:17">s</name> <operator pos:start="99:19" pos:end="99:20">+=</operator> <literal type="number" pos:start="99:22" pos:end="99:23">16</literal></expr>;</expr_stmt>

	}

	<asm pos:start="103:9" pos:end="103:44">__asm __volatile(SFENCE:::"memory");</asm>

	<asm pos:start="105:9" pos:end="105:42">__asm __volatile(EMMS:::"memory");</asm>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

	while<expr_stmt pos:start="109:14" pos:end="117:9"><expr pos:start="109:14" pos:end="117:9"><operator pos:start="109:14" pos:end="109:14">(</operator><name pos:start="109:15" pos:end="109:15">s</name> <operator pos:start="109:17" pos:end="109:17">&lt;</operator> <name pos:start="109:19" pos:end="109:21">end</name><operator pos:start="109:22" pos:end="109:22">)</operator>

	<block pos:start="111:9" pos:end="117:9">{

		<expr pos:start="113:17" pos:end="113:48"><specifier pos:start="113:17" pos:end="113:24">register</specifier> <name pos:start="113:26" pos:end="113:28">int</name> <name pos:start="113:30" pos:end="113:32">rgb</name> <operator pos:start="113:34" pos:end="113:34">=</operator> <operator pos:start="113:36" pos:end="113:36">*</operator><operator pos:start="113:37" pos:end="113:37">(</operator><name pos:start="113:38" pos:end="113:45">uint32_t</name><operator pos:start="113:46" pos:end="113:46">*</operator><operator pos:start="113:47" pos:end="113:47">)</operator><name pos:start="113:48" pos:end="113:48">s</name></expr>; <expr pos:start="113:51" pos:end="113:56"><name pos:start="113:51" pos:end="113:51">s</name> <operator pos:start="113:53" pos:end="113:54">+=</operator> <literal type="number" pos:start="113:56" pos:end="113:56">4</literal></expr>;

		<expr pos:start="115:17" pos:end="115:81"><operator pos:start="115:17" pos:end="115:17">*</operator><name pos:start="115:18" pos:end="115:18">d</name><operator pos:start="115:19" pos:end="115:20">++</operator> <operator pos:start="115:22" pos:end="115:22">=</operator> <operator pos:start="115:24" pos:end="115:24">(</operator><operator pos:start="115:25" pos:end="115:25">(</operator><name pos:start="115:26" pos:end="115:28">rgb</name><operator pos:start="115:29" pos:end="115:29">&amp;</operator><literal type="number" pos:start="115:30" pos:end="115:33">0xF8</literal><operator pos:start="115:34" pos:end="115:34">)</operator><operator pos:start="115:35" pos:end="115:36">&lt;&lt;</operator><literal type="number" pos:start="115:37" pos:end="115:37">8</literal><operator pos:start="115:38" pos:end="115:38">)</operator> <operator pos:start="115:40" pos:end="115:40">+</operator> <operator pos:start="115:42" pos:end="115:42">(</operator><operator pos:start="115:43" pos:end="115:43">(</operator><name pos:start="115:44" pos:end="115:46">rgb</name><operator pos:start="115:47" pos:end="115:47">&amp;</operator><literal type="number" pos:start="115:48" pos:end="115:53">0xFC00</literal><operator pos:start="115:54" pos:end="115:54">)</operator><operator pos:start="115:55" pos:end="115:56">&gt;&gt;</operator><literal type="number" pos:start="115:57" pos:end="115:57">5</literal><operator pos:start="115:58" pos:end="115:58">)</operator> <operator pos:start="115:60" pos:end="115:60">+</operator> <operator pos:start="115:62" pos:end="115:62">(</operator><operator pos:start="115:63" pos:end="115:63">(</operator><name pos:start="115:64" pos:end="115:66">rgb</name><operator pos:start="115:67" pos:end="115:67">&amp;</operator><literal type="number" pos:start="115:68" pos:end="115:75">0xF80000</literal><operator pos:start="115:76" pos:end="115:76">)</operator><operator pos:start="115:77" pos:end="115:78">&gt;&gt;</operator><literal type="number" pos:start="115:79" pos:end="115:80">19</literal><operator pos:start="115:81" pos:end="115:81">)</operator></expr>;

	}</block></expr></expr_stmt>

}
</unit>
