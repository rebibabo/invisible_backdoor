<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9499.c" pos:tabs="8"><function pos:start="1:1" pos:end="88:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vp8_decode_frame_header</name><parameter_list pos:start="1:35" pos:end="1:83">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">VP8Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:82">buf_size</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="88:13">{<block_content pos:start="3:5" pos:end="88:13">
    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">VP56RangeCoder</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">c</name> <init pos:start="3:23" pos:end="3:29">= <expr pos:start="3:25" pos:end="3:29"><operator pos:start="3:25" pos:end="3:25">&amp;</operator><name pos:start="3:26" pos:end="3:29"><name pos:start="3:26" pos:end="3:26">s</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:29">c</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:41"><decl pos:start="4:5" pos:end="4:19"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:19">header_size</name></decl>, <decl pos:start="4:22" pos:end="4:27"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:22" pos:end="4:27">hscale</name></decl>, <decl pos:start="4:30" pos:end="4:35"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:30" pos:end="4:35">vscale</name></decl>, <decl pos:start="4:38" pos:end="4:40"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:38" pos:end="4:40">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">width</name>  <init pos:start="5:16" pos:end="5:32">= <expr pos:start="5:18" pos:end="5:32"><name pos:start="5:18" pos:end="5:32"><name pos:start="5:18" pos:end="5:18">s</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:32">width</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:34"><decl pos:start="6:5" pos:end="6:33"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:14">height</name> <init pos:start="6:16" pos:end="6:33">= <expr pos:start="6:18" pos:end="6:33"><name pos:start="6:18" pos:end="6:33"><name pos:start="6:18" pos:end="6:18">s</name><operator pos:start="6:19" pos:end="6:20">-&gt;</operator><name pos:start="6:21" pos:end="6:25">avctx</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:33">height</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:33"><expr pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:15">keyframe</name></name>  <operator pos:start="7:18" pos:end="7:18">=</operator> <operator pos:start="7:20" pos:end="7:20">!</operator><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:24">buf</name><index pos:start="7:25" pos:end="7:27">[<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr>]</index></name> <operator pos:start="7:29" pos:end="7:29">&amp;</operator> <literal type="number" pos:start="7:31" pos:end="7:31">1</literal><operator pos:start="7:32" pos:end="7:32">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:36"><expr pos:start="8:5" pos:end="8:35"><name pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:5">s</name><operator pos:start="8:6" pos:end="8:7">-&gt;</operator><name pos:start="8:8" pos:end="8:14">profile</name></name>   <operator pos:start="8:18" pos:end="8:18">=</operator>  <operator pos:start="8:21" pos:end="8:21">(</operator><name pos:start="8:22" pos:end="8:27"><name pos:start="8:22" pos:end="8:24">buf</name><index pos:start="8:25" pos:end="8:27">[<expr pos:start="8:26" pos:end="8:26"><literal type="number" pos:start="8:26" pos:end="8:26">0</literal></expr>]</index></name><operator pos:start="8:28" pos:end="8:29">&gt;&gt;</operator><literal type="number" pos:start="8:30" pos:end="8:30">1</literal><operator pos:start="8:31" pos:end="8:31">)</operator> <operator pos:start="8:33" pos:end="8:33">&amp;</operator> <literal type="number" pos:start="8:35" pos:end="8:35">7</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:16">invisible</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <operator pos:start="9:20" pos:end="9:20">!</operator><operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:24">buf</name><index pos:start="9:25" pos:end="9:27">[<expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>]</index></name> <operator pos:start="9:29" pos:end="9:29">&amp;</operator> <literal type="number" pos:start="9:31" pos:end="9:34">0x10</literal><operator pos:start="9:35" pos:end="9:35">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:37"><expr pos:start="10:5" pos:end="10:36"><name pos:start="10:5" pos:end="10:15">header_size</name>  <operator pos:start="10:18" pos:end="10:18">=</operator> <call pos:start="10:20" pos:end="10:31"><name pos:start="10:20" pos:end="10:26">AV_RL24</name><argument_list pos:start="10:27" pos:end="10:31">(<argument pos:start="10:28" pos:end="10:30"><expr pos:start="10:28" pos:end="10:30"><name pos:start="10:28" pos:end="10:30">buf</name></expr></argument>)</argument_list></call> <operator pos:start="10:33" pos:end="10:34">&gt;&gt;</operator> <literal type="number" pos:start="10:36" pos:end="10:36">5</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">buf</name>      <operator pos:start="11:14" pos:end="11:15">+=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">3</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:18"><expr pos:start="12:5" pos:end="12:17"><name pos:start="12:5" pos:end="12:12">buf_size</name> <operator pos:start="12:14" pos:end="12:15">-=</operator> <literal type="number" pos:start="12:17" pos:end="12:17">3</literal></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="14:77"><if pos:start="13:5" pos:end="14:77">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">profile</name></name> <operator pos:start="13:20" pos:end="13:20">&gt;</operator> <literal type="number" pos:start="13:22" pos:end="13:22">3</literal></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:77"><block_content pos:start="14:9" pos:end="14:77">
        <expr_stmt pos:start="14:9" pos:end="14:77"><expr pos:start="14:9" pos:end="14:76"><call pos:start="14:9" pos:end="14:76"><name pos:start="14:9" pos:end="14:14">av_log</name><argument_list pos:start="14:15" pos:end="14:76">(<argument pos:start="14:16" pos:end="14:23"><expr pos:start="14:16" pos:end="14:23"><name pos:start="14:16" pos:end="14:23"><name pos:start="14:16" pos:end="14:16">s</name><operator pos:start="14:17" pos:end="14:18">-&gt;</operator><name pos:start="14:19" pos:end="14:23">avctx</name></name></expr></argument>, <argument pos:start="14:26" pos:end="14:39"><expr pos:start="14:26" pos:end="14:39"><name pos:start="14:26" pos:end="14:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="14:42" pos:end="14:63"><expr pos:start="14:42" pos:end="14:63"><literal type="string" pos:start="14:42" pos:end="14:63">"Unknown profile %d\n"</literal></expr></argument>, <argument pos:start="14:66" pos:end="14:75"><expr pos:start="14:66" pos:end="14:75"><name pos:start="14:66" pos:end="14:75"><name pos:start="14:66" pos:end="14:66">s</name><operator pos:start="14:67" pos:end="14:68">-&gt;</operator><name pos:start="14:69" pos:end="14:75">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="15:5" pos:end="20:42"><if pos:start="15:5" pos:end="17:42">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:19">profile</name></name></expr>)</condition><block type="pseudo" pos:start="16:9" pos:end="17:42"><block_content pos:start="16:9" pos:end="17:42">
        <expr_stmt pos:start="16:9" pos:end="17:42"><expr pos:start="16:9" pos:end="17:41"><call pos:start="16:9" pos:end="17:41"><name pos:start="16:9" pos:end="16:14">memcpy</name><argument_list pos:start="16:15" pos:end="17:41">(<argument pos:start="16:16" pos:end="16:32"><expr pos:start="16:16" pos:end="16:32"><name pos:start="16:16" pos:end="16:32"><name pos:start="16:16" pos:end="16:16">s</name><operator pos:start="16:17" pos:end="16:18">-&gt;</operator><name pos:start="16:19" pos:end="16:32">put_pixels_tab</name></name></expr></argument>, <argument pos:start="16:35" pos:end="16:67"><expr pos:start="16:35" pos:end="16:67"><name pos:start="16:35" pos:end="16:67"><name pos:start="16:35" pos:end="16:35">s</name><operator pos:start="16:36" pos:end="16:37">-&gt;</operator><name pos:start="16:38" pos:end="16:43">vp8dsp</name><operator pos:start="16:44" pos:end="16:44">.</operator><name pos:start="16:45" pos:end="16:67">put_vp8_epel_pixels_tab</name></name></expr></argument>,
               <argument pos:start="17:16" pos:end="17:40"><expr pos:start="17:16" pos:end="17:40"><sizeof pos:start="17:16" pos:end="17:40">sizeof<argument_list pos:start="17:22" pos:end="17:40">(<argument pos:start="17:23" pos:end="17:39"><expr pos:start="17:23" pos:end="17:39"><name pos:start="17:23" pos:end="17:39"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:39">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="18:5" pos:end="20:42">else<block type="pseudo" pos:start="19:9" pos:end="20:42"><block_content pos:start="19:9" pos:end="20:42">    <comment type="line" pos:start="18:13" pos:end="18:70">// profile 1-3 use bilinear, 4+ aren't defined so whatever</comment>
        <expr_stmt pos:start="19:9" pos:end="20:42"><expr pos:start="19:9" pos:end="20:41"><call pos:start="19:9" pos:end="20:41"><name pos:start="19:9" pos:end="19:14">memcpy</name><argument_list pos:start="19:15" pos:end="20:41">(<argument pos:start="19:16" pos:end="19:32"><expr pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:32">put_pixels_tab</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:71"><expr pos:start="19:35" pos:end="19:71"><name pos:start="19:35" pos:end="19:71"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:43">vp8dsp</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:71">put_vp8_bilinear_pixels_tab</name></name></expr></argument>,
               <argument pos:start="20:16" pos:end="20:40"><expr pos:start="20:16" pos:end="20:40"><sizeof pos:start="20:16" pos:end="20:40">sizeof<argument_list pos:start="20:22" pos:end="20:40">(<argument pos:start="20:23" pos:end="20:39"><expr pos:start="20:23" pos:end="20:39"><name pos:start="20:23" pos:end="20:39"><name pos:start="20:23" pos:end="20:23">s</name><operator pos:start="20:24" pos:end="20:25">-&gt;</operator><name pos:start="20:26" pos:end="20:39">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="21:5" pos:end="88:13"><if pos:start="21:5" pos:end="88:13">if <condition pos:start="21:8" pos:end="21:49">(<expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:19">header_size</name> <operator pos:start="21:21" pos:end="21:21">&gt;</operator> <name pos:start="21:23" pos:end="21:30">buf_size</name> <operator pos:start="21:32" pos:end="21:32">-</operator> <literal type="number" pos:start="21:34" pos:end="21:34">7</literal> <operator pos:start="21:36" pos:end="21:36">*</operator> <name pos:start="21:38" pos:end="21:48"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:48">keyframe</name></name></expr>)</condition> <block pos:start="21:51" pos:end="88:13">{<block_content pos:start="22:9" pos:end="88:13">
        <expr_stmt pos:start="22:9" pos:end="22:82"><expr pos:start="22:9" pos:end="22:81"><call pos:start="22:9" pos:end="22:81"><name pos:start="22:9" pos:end="22:14">av_log</name><argument_list pos:start="22:15" pos:end="22:81">(<argument pos:start="22:16" pos:end="22:23"><expr pos:start="22:16" pos:end="22:23"><name pos:start="22:16" pos:end="22:23"><name pos:start="22:16" pos:end="22:16">s</name><operator pos:start="22:17" pos:end="22:18">-&gt;</operator><name pos:start="22:19" pos:end="22:23">avctx</name></name></expr></argument>, <argument pos:start="22:26" pos:end="22:37"><expr pos:start="22:26" pos:end="22:37"><name pos:start="22:26" pos:end="22:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="22:40" pos:end="22:80"><expr pos:start="22:40" pos:end="22:80"><literal type="string" pos:start="22:40" pos:end="22:80">"Header size larger than data provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="88:13"><if pos:start="23:5" pos:end="88:13">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">keyframe</name></name></expr>)</condition> <block pos:start="23:22" pos:end="88:13">{<block_content pos:start="24:9" pos:end="88:13">
        <if_stmt pos:start="24:9" pos:end="88:13"><if pos:start="24:9" pos:end="88:13">if <condition pos:start="24:12" pos:end="24:37">(<expr pos:start="24:13" pos:end="24:36"><call pos:start="24:13" pos:end="24:24"><name pos:start="24:13" pos:end="24:19">AV_RL24</name><argument_list pos:start="24:20" pos:end="24:24">(<argument pos:start="24:21" pos:end="24:23"><expr pos:start="24:21" pos:end="24:23"><name pos:start="24:21" pos:end="24:23">buf</name></expr></argument>)</argument_list></call> <operator pos:start="24:26" pos:end="24:27">!=</operator> <literal type="number" pos:start="24:29" pos:end="24:36">0x2a019d</literal></expr>)</condition> <block pos:start="24:39" pos:end="88:13">{<block_content pos:start="25:13" pos:end="88:13">
            <expr_stmt pos:start="25:13" pos:end="26:62"><expr pos:start="25:13" pos:end="26:61"><call pos:start="25:13" pos:end="26:61"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="26:61">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="26:20" pos:end="26:46"><expr pos:start="26:20" pos:end="26:46"><literal type="string" pos:start="26:20" pos:end="26:46">"Invalid start code 0x%x\n"</literal></expr></argument>, <argument pos:start="26:49" pos:end="26:60"><expr pos:start="26:49" pos:end="26:60"><call pos:start="26:49" pos:end="26:60"><name pos:start="26:49" pos:end="26:55">AV_RL24</name><argument_list pos:start="26:56" pos:end="26:60">(<argument pos:start="26:57" pos:end="26:59"><expr pos:start="26:57" pos:end="26:59"><name pos:start="26:57" pos:end="26:59">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:13">width</name>     <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:36"><name pos:start="27:21" pos:end="27:27">AV_RL16</name><argument_list pos:start="27:28" pos:end="27:36">(<argument pos:start="27:29" pos:end="27:35"><expr pos:start="27:29" pos:end="27:35"><name pos:start="27:29" pos:end="27:31">buf</name> <operator pos:start="27:33" pos:end="27:33">+</operator> <literal type="number" pos:start="27:35" pos:end="27:35">3</literal></expr></argument>)</argument_list></call> <operator pos:start="27:38" pos:end="27:38">&amp;</operator> <literal type="number" pos:start="27:40" pos:end="27:45">0x3fff</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:46"><expr pos:start="28:9" pos:end="28:45"><name pos:start="28:9" pos:end="28:14">height</name>    <operator pos:start="28:19" pos:end="28:19">=</operator> <call pos:start="28:21" pos:end="28:36"><name pos:start="28:21" pos:end="28:27">AV_RL16</name><argument_list pos:start="28:28" pos:end="28:36">(<argument pos:start="28:29" pos:end="28:35"><expr pos:start="28:29" pos:end="28:35"><name pos:start="28:29" pos:end="28:31">buf</name> <operator pos:start="28:33" pos:end="28:33">+</operator> <literal type="number" pos:start="28:35" pos:end="28:35">5</literal></expr></argument>)</argument_list></call> <operator pos:start="28:38" pos:end="28:38">&amp;</operator> <literal type="number" pos:start="28:40" pos:end="28:45">0x3fff</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:14">hscale</name>    <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:23">buf</name><index pos:start="29:24" pos:end="29:26">[<expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">4</literal></expr>]</index></name> <operator pos:start="29:28" pos:end="29:29">&gt;&gt;</operator> <literal type="number" pos:start="29:31" pos:end="29:31">6</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:32"><expr pos:start="30:9" pos:end="30:31"><name pos:start="30:9" pos:end="30:14">vscale</name>    <operator pos:start="30:19" pos:end="30:19">=</operator> <name pos:start="30:21" pos:end="30:26"><name pos:start="30:21" pos:end="30:23">buf</name><index pos:start="30:24" pos:end="30:26">[<expr pos:start="30:25" pos:end="30:25"><literal type="number" pos:start="30:25" pos:end="30:25">6</literal></expr>]</index></name> <operator pos:start="30:28" pos:end="30:29">&gt;&gt;</operator> <literal type="number" pos:start="30:31" pos:end="30:31">6</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">buf</name>      <operator pos:start="31:18" pos:end="31:19">+=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">7</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:22"><expr pos:start="32:9" pos:end="32:21"><name pos:start="32:9" pos:end="32:16">buf_size</name> <operator pos:start="32:18" pos:end="32:19">-=</operator> <literal type="number" pos:start="32:21" pos:end="32:21">7</literal></expr>;</expr_stmt>
        <if_stmt pos:start="33:9" pos:end="34:57"><if pos:start="33:9" pos:end="34:57">if <condition pos:start="33:12" pos:end="33:29">(<expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:18">hscale</name> <operator pos:start="33:20" pos:end="33:21">||</operator> <name pos:start="33:23" pos:end="33:28">vscale</name></expr>)</condition><block type="pseudo" pos:start="34:13" pos:end="34:57"><block_content pos:start="34:13" pos:end="34:57">
            <expr_stmt pos:start="34:13" pos:end="34:57"><expr pos:start="34:13" pos:end="34:56"><call pos:start="34:13" pos:end="34:56"><name pos:start="34:13" pos:end="34:33">avpriv_request_sample</name><argument_list pos:start="34:34" pos:end="34:56">(<argument pos:start="34:35" pos:end="34:42"><expr pos:start="34:35" pos:end="34:42"><name pos:start="34:35" pos:end="34:42"><name pos:start="34:35" pos:end="34:35">s</name><operator pos:start="34:36" pos:end="34:37">-&gt;</operator><name pos:start="34:38" pos:end="34:42">avctx</name></name></expr></argument>, <argument pos:start="34:45" pos:end="34:55"><expr pos:start="34:45" pos:end="34:55"><literal type="string" pos:start="34:45" pos:end="34:55">"Upscaling"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:65"><expr pos:start="35:9" pos:end="35:64"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:24">update_golden</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:43"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:43">update_altref</name></name> <operator pos:start="35:45" pos:end="35:45">=</operator> <name pos:start="35:47" pos:end="35:64">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:41"><expr pos:start="36:9" pos:end="36:40"><call pos:start="36:9" pos:end="36:40"><name pos:start="36:9" pos:end="36:37">vp78_reset_probability_tables</name><argument_list pos:start="36:38" pos:end="36:40">(<argument pos:start="36:39" pos:end="36:39"><expr pos:start="36:39" pos:end="36:39"><name pos:start="36:39" pos:end="36:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="38:43"><expr pos:start="37:9" pos:end="38:42"><call pos:start="37:9" pos:end="38:42"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="38:42">(<argument pos:start="37:16" pos:end="37:33"><expr pos:start="37:16" pos:end="37:33"><name pos:start="37:16" pos:end="37:33"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">prob</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:33">pred16x16</name></name></expr></argument>, <argument pos:start="37:36" pos:end="37:59"><expr pos:start="37:36" pos:end="37:59"><name pos:start="37:36" pos:end="37:59">vp8_pred16x16_prob_inter</name></expr></argument>,
               <argument pos:start="38:16" pos:end="38:41"><expr pos:start="38:16" pos:end="38:41"><sizeof pos:start="38:16" pos:end="38:41">sizeof<argument_list pos:start="38:22" pos:end="38:41">(<argument pos:start="38:23" pos:end="38:40"><expr pos:start="38:23" pos:end="38:40"><name pos:start="38:23" pos:end="38:40"><name pos:start="38:23" pos:end="38:23">s</name><operator pos:start="38:24" pos:end="38:25">-&gt;</operator><name pos:start="38:26" pos:end="38:29">prob</name><operator pos:start="38:30" pos:end="38:31">-&gt;</operator><name pos:start="38:32" pos:end="38:40">pred16x16</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="40:42"><expr pos:start="39:9" pos:end="40:41"><call pos:start="39:9" pos:end="40:41"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="40:41">(<argument pos:start="39:16" pos:end="39:32"><expr pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">prob</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:32">pred8x8c</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:57">vp8_pred8x8c_prob_inter</name></expr></argument>,
               <argument pos:start="40:16" pos:end="40:40"><expr pos:start="40:16" pos:end="40:40"><sizeof pos:start="40:16" pos:end="40:40">sizeof<argument_list pos:start="40:22" pos:end="40:40">(<argument pos:start="40:23" pos:end="40:39"><expr pos:start="40:23" pos:end="40:39"><name pos:start="40:23" pos:end="40:39"><name pos:start="40:23" pos:end="40:23">s</name><operator pos:start="40:24" pos:end="40:25">-&gt;</operator><name pos:start="40:26" pos:end="40:29">prob</name><operator pos:start="40:30" pos:end="40:31">-&gt;</operator><name pos:start="40:32" pos:end="40:39">pred8x8c</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="42:37"><expr pos:start="41:9" pos:end="42:36"><call pos:start="41:9" pos:end="42:36"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="42:36">(<argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:22">prob</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:27">mvc</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:48"><expr pos:start="41:30" pos:end="41:48"><name pos:start="41:30" pos:end="41:48">vp8_mv_default_prob</name></expr></argument>,
               <argument pos:start="42:16" pos:end="42:35"><expr pos:start="42:16" pos:end="42:35"><sizeof pos:start="42:16" pos:end="42:35">sizeof<argument_list pos:start="42:22" pos:end="42:35">(<argument pos:start="42:23" pos:end="42:34"><expr pos:start="42:23" pos:end="42:34"><name pos:start="42:23" pos:end="42:34"><name pos:start="42:23" pos:end="42:23">s</name><operator pos:start="42:24" pos:end="42:25">-&gt;</operator><name pos:start="42:26" pos:end="42:29">prob</name><operator pos:start="42:30" pos:end="42:31">-&gt;</operator><name pos:start="42:32" pos:end="42:34">mvc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><call pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:14">memset</name><argument_list pos:start="43:15" pos:end="43:60">(<argument pos:start="43:16" pos:end="43:31"><expr pos:start="43:16" pos:end="43:31"><operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:31">segmentation</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:59"><expr pos:start="43:37" pos:end="43:59"><sizeof pos:start="43:37" pos:end="43:59">sizeof<argument_list pos:start="43:43" pos:end="43:59">(<argument pos:start="43:44" pos:end="43:58"><expr pos:start="43:44" pos:end="43:58"><name pos:start="43:44" pos:end="43:58"><name pos:start="43:44" pos:end="43:44">s</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:58">segmentation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:53"><expr pos:start="44:9" pos:end="44:52"><call pos:start="44:9" pos:end="44:52"><name pos:start="44:9" pos:end="44:14">memset</name><argument_list pos:start="44:15" pos:end="44:52">(<argument pos:start="44:16" pos:end="44:27"><expr pos:start="44:16" pos:end="44:27"><operator pos:start="44:16" pos:end="44:16">&amp;</operator><name pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:17">s</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:27">lf_delta</name></name></expr></argument>, <argument pos:start="44:30" pos:end="44:30"><expr pos:start="44:30" pos:end="44:30"><literal type="number" pos:start="44:30" pos:end="44:30">0</literal></expr></argument>, <argument pos:start="44:33" pos:end="44:51"><expr pos:start="44:33" pos:end="44:51"><sizeof pos:start="44:33" pos:end="44:51">sizeof<argument_list pos:start="44:39" pos:end="44:51">(<argument pos:start="44:40" pos:end="44:50"><expr pos:start="44:40" pos:end="44:50"><name pos:start="44:40" pos:end="44:50"><name pos:start="44:40" pos:end="44:40">s</name><operator pos:start="44:41" pos:end="44:42">-&gt;</operator><name pos:start="44:43" pos:end="44:50">lf_delta</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><call pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:30">ff_vp56_init_range_decoder</name><argument_list pos:start="45:31" pos:end="45:51">(<argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">c</name></expr></argument>, <argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:37">buf</name></expr></argument>, <argument pos:start="45:40" pos:end="45:50"><expr pos:start="45:40" pos:end="45:50"><name pos:start="45:40" pos:end="45:50">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:28"><expr pos:start="46:5" pos:end="46:27"><name pos:start="46:5" pos:end="46:7">buf</name>      <operator pos:start="46:14" pos:end="46:15">+=</operator> <name pos:start="46:17" pos:end="46:27">header_size</name></expr>;</expr_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:12">buf_size</name> <operator pos:start="47:14" pos:end="47:15">-=</operator> <name pos:start="47:17" pos:end="47:27">header_size</name></expr>;</expr_stmt>
    <if_stmt pos:start="48:5" pos:end="88:13"><if pos:start="48:5" pos:end="88:13">if <condition pos:start="48:8" pos:end="48:20">(<expr pos:start="48:9" pos:end="48:19"><name pos:start="48:9" pos:end="48:19"><name pos:start="48:9" pos:end="48:9">s</name><operator pos:start="48:10" pos:end="48:11">-&gt;</operator><name pos:start="48:12" pos:end="48:19">keyframe</name></name></expr>)</condition> <block pos:start="48:22" pos:end="88:13">{<block_content pos:start="49:9" pos:end="88:13">
        <expr_stmt pos:start="49:9" pos:end="49:39"><expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">colorspace</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <call pos:start="49:25" pos:end="49:38"><name pos:start="49:25" pos:end="49:35">vp8_rac_get</name><argument_list pos:start="49:36" pos:end="49:38">(<argument pos:start="49:37" pos:end="49:37"><expr pos:start="49:37" pos:end="49:37"><name pos:start="49:37" pos:end="49:37">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="50:9" pos:end="51:73"><if pos:start="50:9" pos:end="51:73">if <condition pos:start="50:12" pos:end="50:26">(<expr pos:start="50:13" pos:end="50:25"><name pos:start="50:13" pos:end="50:25"><name pos:start="50:13" pos:end="50:13">s</name><operator pos:start="50:14" pos:end="50:15">-&gt;</operator><name pos:start="50:16" pos:end="50:25">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:73"><block_content pos:start="51:13" pos:end="51:73">
            <expr_stmt pos:start="51:13" pos:end="51:73"><expr pos:start="51:13" pos:end="51:72"><call pos:start="51:13" pos:end="51:72"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:72">(<argument pos:start="51:20" pos:end="51:27"><expr pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">avctx</name></name></expr></argument>, <argument pos:start="51:30" pos:end="51:43"><expr pos:start="51:30" pos:end="51:43"><name pos:start="51:30" pos:end="51:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="51:46" pos:end="51:71"><expr pos:start="51:46" pos:end="51:71"><literal type="string" pos:start="51:46" pos:end="51:71">"Unspecified colorspace\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:38"><expr pos:start="52:9" pos:end="52:37"><name pos:start="52:9" pos:end="52:20"><name pos:start="52:9" pos:end="52:9">s</name><operator pos:start="52:10" pos:end="52:11">-&gt;</operator><name pos:start="52:12" pos:end="52:20">fullrange</name></name> <operator pos:start="52:22" pos:end="52:22">=</operator> <call pos:start="52:24" pos:end="52:37"><name pos:start="52:24" pos:end="52:34">vp8_rac_get</name><argument_list pos:start="52:35" pos:end="52:37">(<argument pos:start="52:36" pos:end="52:36"><expr pos:start="52:36" pos:end="52:36"><name pos:start="52:36" pos:end="52:36">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="53:5" pos:end="56:39"><if pos:start="53:5" pos:end="54:30">if <condition pos:start="53:8" pos:end="53:51">(<expr pos:start="53:9" pos:end="53:50"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:32"><name pos:start="53:10" pos:end="53:10">s</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:24">segmentation</name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:32">enabled</name></name> <operator pos:start="53:34" pos:end="53:34">=</operator> <call pos:start="53:36" pos:end="53:49"><name pos:start="53:36" pos:end="53:46">vp8_rac_get</name><argument_list pos:start="53:47" pos:end="53:49">(<argument pos:start="53:48" pos:end="53:48"><expr pos:start="53:48" pos:end="53:48"><name pos:start="53:48" pos:end="53:48">c</name></expr></argument>)</argument_list></call><operator pos:start="53:50" pos:end="53:50">)</operator></expr>)</condition><block type="pseudo" pos:start="54:9" pos:end="54:30"><block_content pos:start="54:9" pos:end="54:30">
        <expr_stmt pos:start="54:9" pos:end="54:30"><expr pos:start="54:9" pos:end="54:29"><call pos:start="54:9" pos:end="54:29"><name pos:start="54:9" pos:end="54:26">parse_segment_info</name><argument_list pos:start="54:27" pos:end="54:29">(<argument pos:start="54:28" pos:end="54:28"><expr pos:start="54:28" pos:end="54:28"><name pos:start="54:28" pos:end="54:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="55:5" pos:end="56:39">else<block type="pseudo" pos:start="56:9" pos:end="56:39"><block_content pos:start="56:9" pos:end="56:39">
        <expr_stmt pos:start="56:9" pos:end="56:39"><expr pos:start="56:9" pos:end="56:38"><name pos:start="56:9" pos:end="56:34"><name pos:start="56:9" pos:end="56:9">s</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:23">segmentation</name><operator pos:start="56:24" pos:end="56:24">.</operator><name pos:start="56:25" pos:end="56:34">update_map</name></name> <operator pos:start="56:36" pos:end="56:36">=</operator> <literal type="number" pos:start="56:38" pos:end="56:38">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="56:41" pos:end="56:82">// FIXME: move this to some init function?</comment>
    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:13">filter</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:20">simple</name></name>    <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:37">vp8_rac_get</name><argument_list pos:start="57:38" pos:end="57:40">(<argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="58:5" pos:end="58:49"><expr pos:start="58:5" pos:end="58:48"><name pos:start="58:5" pos:end="58:19"><name pos:start="58:5" pos:end="58:5">s</name><operator pos:start="58:6" pos:end="58:7">-&gt;</operator><name pos:start="58:8" pos:end="58:13">filter</name><operator pos:start="58:14" pos:end="58:14">.</operator><name pos:start="58:15" pos:end="58:19">level</name></name>     <operator pos:start="58:25" pos:end="58:25">=</operator> <call pos:start="58:27" pos:end="58:48"><name pos:start="58:27" pos:end="58:42">vp8_rac_get_uint</name><argument_list pos:start="58:43" pos:end="58:48">(<argument pos:start="58:44" pos:end="58:44"><expr pos:start="58:44" pos:end="58:44"><name pos:start="58:44" pos:end="58:44">c</name></expr></argument>, <argument pos:start="58:47" pos:end="58:47"><expr pos:start="58:47" pos:end="58:47"><literal type="number" pos:start="58:47" pos:end="58:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:13">filter</name><operator pos:start="59:14" pos:end="59:14">.</operator><name pos:start="59:15" pos:end="59:23">sharpness</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:48"><name pos:start="59:27" pos:end="59:42">vp8_rac_get_uint</name><argument_list pos:start="59:43" pos:end="59:48">(<argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><name pos:start="59:44" pos:end="59:44">c</name></expr></argument>, <argument pos:start="59:47" pos:end="59:47"><expr pos:start="59:47" pos:end="59:47"><literal type="number" pos:start="59:47" pos:end="59:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="60:5" pos:end="62:32"><if pos:start="60:5" pos:end="62:32">if <condition pos:start="60:8" pos:end="60:47">(<expr pos:start="60:9" pos:end="60:46"><operator pos:start="60:9" pos:end="60:9">(</operator><name pos:start="60:10" pos:end="60:28"><name pos:start="60:10" pos:end="60:10">s</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:20">lf_delta</name><operator pos:start="60:21" pos:end="60:21">.</operator><name pos:start="60:22" pos:end="60:28">enabled</name></name> <operator pos:start="60:30" pos:end="60:30">=</operator> <call pos:start="60:32" pos:end="60:45"><name pos:start="60:32" pos:end="60:42">vp8_rac_get</name><argument_list pos:start="60:43" pos:end="60:45">(<argument pos:start="60:44" pos:end="60:44"><expr pos:start="60:44" pos:end="60:44"><name pos:start="60:44" pos:end="60:44">c</name></expr></argument>)</argument_list></call><operator pos:start="60:46" pos:end="60:46">)</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="62:32"><block_content pos:start="61:9" pos:end="62:32">
        <if_stmt pos:start="61:9" pos:end="62:32"><if pos:start="61:9" pos:end="62:32">if <condition pos:start="61:12" pos:end="61:27">(<expr pos:start="61:13" pos:end="61:26"><call pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:23">vp8_rac_get</name><argument_list pos:start="61:24" pos:end="61:26">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="62:13" pos:end="62:32"><block_content pos:start="62:13" pos:end="62:32">
            <expr_stmt pos:start="62:13" pos:end="62:32"><expr pos:start="62:13" pos:end="62:31"><call pos:start="62:13" pos:end="62:31"><name pos:start="62:13" pos:end="62:28">update_lf_deltas</name><argument_list pos:start="62:29" pos:end="62:31">(<argument pos:start="62:30" pos:end="62:30"><expr pos:start="62:30" pos:end="62:30"><name pos:start="62:30" pos:end="62:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="63:5" pos:end="88:13"><if pos:start="63:5" pos:end="88:13">if <condition pos:start="63:8" pos:end="63:43">(<expr pos:start="63:9" pos:end="63:42"><call pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:24">setup_partitions</name><argument_list pos:start="63:25" pos:end="63:42">(<argument pos:start="63:26" pos:end="63:26"><expr pos:start="63:26" pos:end="63:26"><name pos:start="63:26" pos:end="63:26">s</name></expr></argument>, <argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">buf</name></expr></argument>, <argument pos:start="63:34" pos:end="63:41"><expr pos:start="63:34" pos:end="63:41"><name pos:start="63:34" pos:end="63:41">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:45" pos:end="88:13">{<block_content pos:start="64:9" pos:end="88:13">
        <expr_stmt pos:start="64:9" pos:end="64:63"><expr pos:start="64:9" pos:end="64:62"><call pos:start="64:9" pos:end="64:62"><name pos:start="64:9" pos:end="64:14">av_log</name><argument_list pos:start="64:15" pos:end="64:62">(<argument pos:start="64:16" pos:end="64:23"><expr pos:start="64:16" pos:end="64:23"><name pos:start="64:16" pos:end="64:23"><name pos:start="64:16" pos:end="64:16">s</name><operator pos:start="64:17" pos:end="64:18">-&gt;</operator><name pos:start="64:19" pos:end="64:23">avctx</name></name></expr></argument>, <argument pos:start="64:26" pos:end="64:37"><expr pos:start="64:26" pos:end="64:37"><name pos:start="64:26" pos:end="64:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="64:40" pos:end="64:61"><expr pos:start="64:40" pos:end="64:61"><literal type="string" pos:start="64:40" pos:end="64:61">"Invalid partitions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="65:5" pos:end="69:23"><if pos:start="65:5" pos:end="69:23">if <condition pos:start="65:8" pos:end="67:71">(<expr pos:start="65:9" pos:end="67:70"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:28"><name pos:start="65:10" pos:end="65:10">s</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:28">macroblocks_base</name></name> <operator pos:start="65:30" pos:end="65:31">||</operator> <comment type="block" pos:start="65:33" pos:end="65:49">/* first frame */</comment>
        <name pos:start="66:9" pos:end="66:13">width</name> <operator pos:start="66:15" pos:end="66:16">!=</operator> <name pos:start="66:18" pos:end="66:32"><name pos:start="66:18" pos:end="66:18">s</name><operator pos:start="66:19" pos:end="66:20">-&gt;</operator><name pos:start="66:21" pos:end="66:25">avctx</name><operator pos:start="66:26" pos:end="66:27">-&gt;</operator><name pos:start="66:28" pos:end="66:32">width</name></name> <operator pos:start="66:34" pos:end="66:35">||</operator> <name pos:start="66:37" pos:end="66:42">height</name> <operator pos:start="66:44" pos:end="66:45">!=</operator> <name pos:start="66:47" pos:end="66:62"><name pos:start="66:47" pos:end="66:47">s</name><operator pos:start="66:48" pos:end="66:49">-&gt;</operator><name pos:start="66:50" pos:end="66:54">avctx</name><operator pos:start="66:55" pos:end="66:56">-&gt;</operator><name pos:start="66:57" pos:end="66:62">height</name></name> <operator pos:start="66:64" pos:end="66:65">||</operator>
        <operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:14">width</name><operator pos:start="67:15" pos:end="67:15">+</operator><literal type="number" pos:start="67:16" pos:end="67:17">15</literal><operator pos:start="67:18" pos:end="67:18">)</operator><operator pos:start="67:19" pos:end="67:19">/</operator><literal type="number" pos:start="67:20" pos:end="67:21">16</literal> <operator pos:start="67:23" pos:end="67:24">!=</operator> <name pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:36">mb_width</name></name> <operator pos:start="67:38" pos:end="67:39">||</operator> <operator pos:start="67:41" pos:end="67:41">(</operator><name pos:start="67:42" pos:end="67:47">height</name><operator pos:start="67:48" pos:end="67:48">+</operator><literal type="number" pos:start="67:49" pos:end="67:50">15</literal><operator pos:start="67:51" pos:end="67:51">)</operator><operator pos:start="67:52" pos:end="67:52">/</operator><literal type="number" pos:start="67:53" pos:end="67:54">16</literal> <operator pos:start="67:56" pos:end="67:57">!=</operator> <name pos:start="67:59" pos:end="67:70"><name pos:start="67:59" pos:end="67:59">s</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:70">mb_height</name></name></expr>)</condition><block type="pseudo" pos:start="68:9" pos:end="69:23"><block_content pos:start="68:9" pos:end="69:23">
        <if_stmt pos:start="68:9" pos:end="69:23"><if pos:start="68:9" pos:end="69:23">if <condition pos:start="68:12" pos:end="68:64">(<expr pos:start="68:13" pos:end="68:63"><operator pos:start="68:13" pos:end="68:13">(</operator><name pos:start="68:14" pos:end="68:16">ret</name> <operator pos:start="68:18" pos:end="68:18">=</operator> <call pos:start="68:20" pos:end="68:58"><name pos:start="68:20" pos:end="68:40">vp8_update_dimensions</name><argument_list pos:start="68:41" pos:end="68:58">(<argument pos:start="68:42" pos:end="68:42"><expr pos:start="68:42" pos:end="68:42"><name pos:start="68:42" pos:end="68:42">s</name></expr></argument>, <argument pos:start="68:45" pos:end="68:49"><expr pos:start="68:45" pos:end="68:49"><name pos:start="68:45" pos:end="68:49">width</name></expr></argument>, <argument pos:start="68:52" pos:end="68:57"><expr pos:start="68:52" pos:end="68:57"><name pos:start="68:52" pos:end="68:57">height</name></expr></argument>)</argument_list></call><operator pos:start="68:59" pos:end="68:59">)</operator> <operator pos:start="68:61" pos:end="68:61">&lt;</operator> <literal type="number" pos:start="68:63" pos:end="68:63">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:23"><block_content pos:start="69:13" pos:end="69:23">
            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="70:5" pos:end="70:22"><expr pos:start="70:5" pos:end="70:21"><call pos:start="70:5" pos:end="70:21"><name pos:start="70:5" pos:end="70:18">vp8_get_quants</name><argument_list pos:start="70:19" pos:end="70:21">(<argument pos:start="70:20" pos:end="70:20"><expr pos:start="70:20" pos:end="70:20"><name pos:start="70:20" pos:end="70:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="71:5" pos:end="88:13"><if pos:start="71:5" pos:end="88:13">if <condition pos:start="71:8" pos:end="71:21">(<expr pos:start="71:9" pos:end="71:20"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:20"><name pos:start="71:10" pos:end="71:10">s</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">keyframe</name></name></expr>)</condition> <block pos:start="71:23" pos:end="88:13">{<block_content pos:start="72:9" pos:end="88:13">
        <expr_stmt pos:start="72:9" pos:end="72:23"><expr pos:start="72:9" pos:end="72:22"><call pos:start="72:9" pos:end="72:22"><name pos:start="72:9" pos:end="72:19">update_refs</name><argument_list pos:start="72:20" pos:end="72:22">(<argument pos:start="72:21" pos:end="72:21"><expr pos:start="72:21" pos:end="72:21"><name pos:start="72:21" pos:end="72:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="73:9" pos:end="73:71"><expr pos:start="73:9" pos:end="73:70"><name pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">sign_bias</name><index pos:start="73:21" pos:end="73:39">[<expr pos:start="73:22" pos:end="73:38"><name pos:start="73:22" pos:end="73:38">VP56_FRAME_GOLDEN</name></expr>]</index></name>               <operator pos:start="73:55" pos:end="73:55">=</operator> <call pos:start="73:57" pos:end="73:70"><name pos:start="73:57" pos:end="73:67">vp8_rac_get</name><argument_list pos:start="73:68" pos:end="73:70">(<argument pos:start="73:69" pos:end="73:69"><expr pos:start="73:69" pos:end="73:69"><name pos:start="73:69" pos:end="73:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:71"><expr pos:start="74:9" pos:end="74:70"><name pos:start="74:9" pos:end="74:53"><name pos:start="74:9" pos:end="74:9">s</name><operator pos:start="74:10" pos:end="74:11">-&gt;</operator><name pos:start="74:12" pos:end="74:20">sign_bias</name><index pos:start="74:21" pos:end="74:53">[<expr pos:start="74:22" pos:end="74:39"><name pos:start="74:22" pos:end="74:39">VP56_FRAME_GOLDEN2</name></expr> <comment type="block" pos:start="74:41" pos:end="74:52">/* altref */</comment>]</index></name> <operator pos:start="74:55" pos:end="74:55">=</operator> <call pos:start="74:57" pos:end="74:70"><name pos:start="74:57" pos:end="74:67">vp8_rac_get</name><argument_list pos:start="74:68" pos:end="74:70">(<argument pos:start="74:69" pos:end="74:69"><expr pos:start="74:69" pos:end="74:69"><name pos:start="74:69" pos:end="74:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="75:5" pos:end="75:72">// if we aren't saving this frame's probabilities for future frames,</comment>
    <comment type="line" pos:start="76:5" pos:end="76:47">// make a copy of the current probabilities</comment>
    <if_stmt pos:start="77:5" pos:end="78:32"><if pos:start="77:5" pos:end="78:32">if <condition pos:start="77:8" pos:end="77:52">(<expr pos:start="77:9" pos:end="77:51"><operator pos:start="77:9" pos:end="77:9">!</operator><operator pos:start="77:10" pos:end="77:10">(</operator><name pos:start="77:11" pos:end="77:33"><name pos:start="77:11" pos:end="77:11">s</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:33">update_probabilities</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <call pos:start="77:37" pos:end="77:50"><name pos:start="77:37" pos:end="77:47">vp8_rac_get</name><argument_list pos:start="77:48" pos:end="77:50">(<argument pos:start="77:49" pos:end="77:49"><expr pos:start="77:49" pos:end="77:49"><name pos:start="77:49" pos:end="77:49">c</name></expr></argument>)</argument_list></call><operator pos:start="77:51" pos:end="77:51">)</operator></expr>)</condition><block type="pseudo" pos:start="78:9" pos:end="78:32"><block_content pos:start="78:9" pos:end="78:32">
        <expr_stmt pos:start="78:9" pos:end="78:32"><expr pos:start="78:9" pos:end="78:31"><name pos:start="78:9" pos:end="78:18"><name pos:start="78:9" pos:end="78:9">s</name><operator pos:start="78:10" pos:end="78:11">-&gt;</operator><name pos:start="78:12" pos:end="78:15">prob</name><index pos:start="78:16" pos:end="78:18">[<expr pos:start="78:17" pos:end="78:17"><literal type="number" pos:start="78:17" pos:end="78:17">1</literal></expr>]</index></name> <operator pos:start="78:20" pos:end="78:20">=</operator> <name pos:start="78:22" pos:end="78:31"><name pos:start="78:22" pos:end="78:22">s</name><operator pos:start="78:23" pos:end="78:24">-&gt;</operator><name pos:start="78:25" pos:end="78:28">prob</name><index pos:start="78:29" pos:end="78:31">[<expr pos:start="78:30" pos:end="78:30"><literal type="number" pos:start="78:30" pos:end="78:30">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:51"><expr pos:start="79:5" pos:end="79:50"><name pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:18">update_last</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:32">keyframe</name></name> <operator pos:start="79:34" pos:end="79:35">||</operator> <call pos:start="79:37" pos:end="79:50"><name pos:start="79:37" pos:end="79:47">vp8_rac_get</name><argument_list pos:start="79:48" pos:end="79:50">(<argument pos:start="79:49" pos:end="79:49"><expr pos:start="79:49" pos:end="79:49"><name pos:start="79:49" pos:end="79:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:38"><expr pos:start="80:5" pos:end="80:37"><call pos:start="80:5" pos:end="80:37"><name pos:start="80:5" pos:end="80:34">vp78_update_probability_tables</name><argument_list pos:start="80:35" pos:end="80:37">(<argument pos:start="80:36" pos:end="80:36"><expr pos:start="80:36" pos:end="80:36"><name pos:start="80:36" pos:end="80:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="81:5" pos:end="82:49"><if pos:start="81:5" pos:end="82:49">if <condition pos:start="81:8" pos:end="81:45">(<expr pos:start="81:9" pos:end="81:44"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:26"><name pos:start="81:10" pos:end="81:10">s</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:26">mbskip_enabled</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <call pos:start="81:30" pos:end="81:43"><name pos:start="81:30" pos:end="81:40">vp8_rac_get</name><argument_list pos:start="81:41" pos:end="81:43">(<argument pos:start="81:42" pos:end="81:42"><expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">c</name></expr></argument>)</argument_list></call><operator pos:start="81:44" pos:end="81:44">)</operator></expr>)</condition><block type="pseudo" pos:start="82:9" pos:end="82:49"><block_content pos:start="82:9" pos:end="82:49">
        <expr_stmt pos:start="82:9" pos:end="82:49"><expr pos:start="82:9" pos:end="82:48"><name pos:start="82:9" pos:end="82:23"><name pos:start="82:9" pos:end="82:9">s</name><operator pos:start="82:10" pos:end="82:11">-&gt;</operator><name pos:start="82:12" pos:end="82:15">prob</name><operator pos:start="82:16" pos:end="82:17">-&gt;</operator><name pos:start="82:18" pos:end="82:23">mbskip</name></name> <operator pos:start="82:25" pos:end="82:25">=</operator> <call pos:start="82:27" pos:end="82:48"><name pos:start="82:27" pos:end="82:42">vp8_rac_get_uint</name><argument_list pos:start="82:43" pos:end="82:48">(<argument pos:start="82:44" pos:end="82:44"><expr pos:start="82:44" pos:end="82:44"><name pos:start="82:44" pos:end="82:44">c</name></expr></argument>, <argument pos:start="82:47" pos:end="82:47"><expr pos:start="82:47" pos:end="82:47"><literal type="number" pos:start="82:47" pos:end="82:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="83:5" pos:end="88:13"><if pos:start="83:5" pos:end="88:13">if <condition pos:start="83:8" pos:end="83:21">(<expr pos:start="83:9" pos:end="83:20"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:20"><name pos:start="83:10" pos:end="83:10">s</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">keyframe</name></name></expr>)</condition> <block pos:start="83:23" pos:end="88:13">{<block_content pos:start="84:9" pos:end="88:13">
        <expr_stmt pos:start="84:9" pos:end="84:49"><expr pos:start="84:9" pos:end="84:48"><name pos:start="84:9" pos:end="84:22"><name pos:start="84:9" pos:end="84:9">s</name><operator pos:start="84:10" pos:end="84:11">-&gt;</operator><name pos:start="84:12" pos:end="84:15">prob</name><operator pos:start="84:16" pos:end="84:17">-&gt;</operator><name pos:start="84:18" pos:end="84:22">intra</name></name>  <operator pos:start="84:25" pos:end="84:25">=</operator> <call pos:start="84:27" pos:end="84:48"><name pos:start="84:27" pos:end="84:42">vp8_rac_get_uint</name><argument_list pos:start="84:43" pos:end="84:48">(<argument pos:start="84:44" pos:end="84:44"><expr pos:start="84:44" pos:end="84:44"><name pos:start="84:44" pos:end="84:44">c</name></expr></argument>, <argument pos:start="84:47" pos:end="84:47"><expr pos:start="84:47" pos:end="84:47"><literal type="number" pos:start="84:47" pos:end="84:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="85:9" pos:end="85:49"><expr pos:start="85:9" pos:end="85:48"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:15">prob</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:21">last</name></name>   <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:48"><name pos:start="85:27" pos:end="85:42">vp8_rac_get_uint</name><argument_list pos:start="85:43" pos:end="85:48">(<argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">c</name></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="86:9" pos:end="86:49"><expr pos:start="86:9" pos:end="86:48"><name pos:start="86:9" pos:end="86:23"><name pos:start="86:9" pos:end="86:9">s</name><operator pos:start="86:10" pos:end="86:11">-&gt;</operator><name pos:start="86:12" pos:end="86:15">prob</name><operator pos:start="86:16" pos:end="86:17">-&gt;</operator><name pos:start="86:18" pos:end="86:23">golden</name></name> <operator pos:start="86:25" pos:end="86:25">=</operator> <call pos:start="86:27" pos:end="86:48"><name pos:start="86:27" pos:end="86:42">vp8_rac_get_uint</name><argument_list pos:start="86:43" pos:end="86:48">(<argument pos:start="86:44" pos:end="86:44"><expr pos:start="86:44" pos:end="86:44"><name pos:start="86:44" pos:end="86:44">c</name></expr></argument>, <argument pos:start="86:47" pos:end="86:47"><expr pos:start="86:47" pos:end="86:47"><literal type="number" pos:start="86:47" pos:end="86:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="87:9" pos:end="87:73"><expr pos:start="87:9" pos:end="87:72"><call pos:start="87:9" pos:end="87:72"><name pos:start="87:9" pos:end="87:55">vp78_update_pred16x16_pred8x8_mvc_probabilities</name><argument_list pos:start="87:56" pos:end="87:72">(<argument pos:start="87:57" pos:end="87:57"><expr pos:start="87:57" pos:end="87:57"><name pos:start="87:57" pos:end="87:57">s</name></expr></argument>, <argument pos:start="87:60" pos:end="87:71"><expr pos:start="87:60" pos:end="87:71"><name pos:start="87:60" pos:end="87:71">VP8_MVC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="88:5" pos:end="88:13">return <expr pos:start="88:12" pos:end="88:12"><literal type="number" pos:start="88:12" pos:end="88:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
