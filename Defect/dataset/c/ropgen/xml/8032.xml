<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8032.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">lance_init</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">SysBusDevice</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:54">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">SysBusPCNetState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">d</name> <init pos:start="7:25" pos:end="7:43">= <expr pos:start="7:27" pos:end="7:43"><call pos:start="7:27" pos:end="7:43"><name pos:start="7:27" pos:end="7:38">SYSBUS_PCNET</name><argument_list pos:start="7:39" pos:end="7:43">(<argument pos:start="7:40" pos:end="7:42"><expr pos:start="7:40" pos:end="7:42"><name pos:start="7:40" pos:end="7:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PCNetState</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:29">= <expr pos:start="9:21" pos:end="9:29"><operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:22">d</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:29">state</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:43"><expr pos:start="13:5" pos:end="15:42"><call pos:start="13:5" pos:end="15:42"><name pos:start="13:5" pos:end="13:25">memory_region_init_io</name><argument_list pos:start="13:26" pos:end="15:42">(<argument pos:start="13:27" pos:end="13:34"><expr pos:start="13:27" pos:end="13:34"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:34">mmio</name></name></expr></argument>, <argument pos:start="13:37" pos:end="13:45"><expr pos:start="13:37" pos:end="13:45"><call pos:start="13:37" pos:end="13:45"><name pos:start="13:37" pos:end="13:42">OBJECT</name><argument_list pos:start="13:43" pos:end="13:45">(<argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><name pos:start="13:44" pos:end="13:44">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:48" pos:end="13:61"><expr pos:start="13:48" pos:end="13:61"><operator pos:start="13:48" pos:end="13:48">&amp;</operator><name pos:start="13:49" pos:end="13:61">lance_mem_ops</name></expr></argument>, <argument pos:start="13:64" pos:end="13:64"><expr pos:start="13:64" pos:end="13:64"><name pos:start="13:64" pos:end="13:64">d</name></expr></argument>,

                          <argument pos:start="15:27" pos:end="15:38"><expr pos:start="15:27" pos:end="15:38"><literal type="string" pos:start="15:27" pos:end="15:38">"lance-mmio"</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><call pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:21">qdev_init_gpio_in</name><argument_list pos:start="19:22" pos:end="19:49">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">dev</name></expr></argument>, <argument pos:start="19:28" pos:end="19:45"><expr pos:start="19:28" pos:end="19:45"><name pos:start="19:28" pos:end="19:45">parent_lance_reset</name></expr></argument>, <argument pos:start="19:48" pos:end="19:48"><expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:20">sysbus_init_mmio</name><argument_list pos:start="23:21" pos:end="23:35">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">sbd</name></expr></argument>, <argument pos:start="23:27" pos:end="23:34"><expr pos:start="23:27" pos:end="23:34"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:34">mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:19">sysbus_init_irq</name><argument_list pos:start="27:20" pos:end="27:33">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">sbd</name></expr></argument>, <argument pos:start="27:26" pos:end="27:32"><expr pos:start="27:26" pos:end="27:32"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:32">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:20">phys_mem_read</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:40">ledma_memory_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:21">phys_mem_write</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:42">ledma_memory_write</name></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:54">return <expr pos:start="35:12" pos:end="35:53"><call pos:start="35:12" pos:end="35:53"><name pos:start="35:12" pos:end="35:28">pcnet_common_init</name><argument_list pos:start="35:29" pos:end="35:53">(<argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">dev</name></expr></argument>, <argument pos:start="35:35" pos:end="35:35"><expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">s</name></expr></argument>, <argument pos:start="35:38" pos:end="35:52"><expr pos:start="35:38" pos:end="35:52"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:52">net_lance_info</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
