<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11600.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">cmd_read_cdvd_capacity</name><parameter_list pos:start="1:35" pos:end="1:61">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">IDEState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:55">uint8_t</name><modifier pos:start="1:56" pos:end="1:56">*</modifier></type> <name pos:start="1:58" pos:end="1:60">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:33">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:26">total_sectors</name> <init pos:start="5:28" pos:end="5:47">= <expr pos:start="5:30" pos:end="5:47"><name pos:start="5:30" pos:end="5:42"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:42">nb_sectors</name></name> <operator pos:start="5:44" pos:end="5:45">&gt;&gt;</operator> <literal type="number" pos:start="5:47" pos:end="5:47">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:27">(<expr pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:21">total_sectors</name> <operator pos:start="9:23" pos:end="9:24">==</operator> <literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>)</condition> <block pos:start="9:29" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:72"><expr pos:start="11:9" pos:end="11:71"><call pos:start="11:9" pos:end="11:71"><name pos:start="11:9" pos:end="11:27">ide_atapi_cmd_error</name><argument_list pos:start="11:28" pos:end="11:71">(<argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><name pos:start="11:29" pos:end="11:29">s</name></expr></argument>, <argument pos:start="11:32" pos:end="11:46"><expr pos:start="11:32" pos:end="11:46"><name pos:start="11:32" pos:end="11:46">SENSE_NOT_READY</name></expr></argument>, <argument pos:start="11:49" pos:end="11:70"><expr pos:start="11:49" pos:end="11:70"><name pos:start="11:49" pos:end="11:70">ASC_MEDIUM_NOT_PRESENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:58">/* NOTE: it is really the number of sectors minus 1 */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:16">cpu_to_ube32</name><argument_list pos:start="21:17" pos:end="21:40">(<argument pos:start="21:18" pos:end="21:20"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:20">buf</name></expr></argument>, <argument pos:start="21:23" pos:end="21:39"><expr pos:start="21:23" pos:end="21:39"><name pos:start="21:23" pos:end="21:35">total_sectors</name> <operator pos:start="21:37" pos:end="21:37">-</operator> <literal type="number" pos:start="21:39" pos:end="21:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:16">cpu_to_ube32</name><argument_list pos:start="23:17" pos:end="23:31">(<argument pos:start="23:18" pos:end="23:24"><expr pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:20">buf</name> <operator pos:start="23:22" pos:end="23:22">+</operator> <literal type="number" pos:start="23:24" pos:end="23:24">4</literal></expr></argument>, <argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><literal type="number" pos:start="23:27" pos:end="23:30">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:23">ide_atapi_cmd_reply</name><argument_list pos:start="25:24" pos:end="25:32">(<argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">s</name></expr></argument>, <argument pos:start="25:28" pos:end="25:28"><expr pos:start="25:28" pos:end="25:28"><literal type="number" pos:start="25:28" pos:end="25:28">8</literal></expr></argument>, <argument pos:start="25:31" pos:end="25:31"><expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
