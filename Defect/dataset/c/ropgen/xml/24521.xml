<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24521.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">aasc_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:46">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">got_frame</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AascContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:18">s</name>     <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">compr</name></decl>, <decl pos:start="15:16" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:16">i</name></decl>, <decl pos:start="15:19" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:24">stride</name></decl>, <decl pos:start="15:27" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:29">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">frame</name><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:22">reference</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:104"><expr pos:start="21:5" pos:end="21:103"><name pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">frame</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:25">buffer_hints</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:49">FF_BUFFER_HINTS_VALID</name> <operator pos:start="21:51" pos:end="21:51">|</operator> <name pos:start="21:53" pos:end="21:76">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="21:78" pos:end="21:78">|</operator> <name pos:start="21:80" pos:end="21:103">FF_BUFFER_HINTS_REUSABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:58">(<expr pos:start="23:9" pos:end="23:57"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:12">ret</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:52"><name pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:20">avctx</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:34">reget_buffer</name></name><argument_list pos:start="23:35" pos:end="23:52">(<argument pos:start="23:36" pos:end="23:40"><expr pos:start="23:36" pos:end="23:40"><name pos:start="23:36" pos:end="23:40">avctx</name></expr></argument>, <argument pos:start="23:43" pos:end="23:51"><expr pos:start="23:43" pos:end="23:51"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:51"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:51">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="23:53" pos:end="23:53">)</operator> <operator pos:start="23:55" pos:end="23:55">&lt;</operator> <literal type="number" pos:start="23:57" pos:end="23:57">0</literal></expr>)</condition> <block pos:start="23:60" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:19">

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><call pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:62">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:61"><expr pos:start="25:37" pos:end="25:61"><literal type="string" pos:start="25:37" pos:end="25:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:9">compr</name>     <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:23">AV_RL32</name><argument_list pos:start="33:24" pos:end="33:28">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:7">buf</name>      <operator pos:start="35:14" pos:end="35:15">+=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:12">buf_size</name> <operator pos:start="37:14" pos:end="37:15">-=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">4</literal></expr>;</expr_stmt>

    <switch pos:start="39:5" pos:end="69:5">switch <condition pos:start="39:12" pos:end="39:18">(<expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:17">compr</name></expr>)</condition> <block pos:start="39:20" pos:end="69:5">{<block_content pos:start="41:5" pos:end="67:35">

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">0</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:14">stride</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <operator pos:start="43:18" pos:end="43:18">(</operator><name pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:23">avctx</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:30">width</name></name> <operator pos:start="43:32" pos:end="43:32">*</operator> <literal type="number" pos:start="43:34" pos:end="43:36">3</literal> <operator pos:start="43:36" pos:end="43:36">+</operator> <literal type="number" pos:start="43:38" pos:end="43:38">3</literal><operator pos:start="43:39" pos:end="43:39">)</operator> <operator pos:start="43:41" pos:end="43:41">&amp;</operator> <operator pos:start="43:43" pos:end="43:43">~</operator><literal type="number" pos:start="43:44" pos:end="43:44">3</literal></expr>;</expr_stmt>

        <for pos:start="45:9" pos:end="51:9">for <control pos:start="45:13" pos:end="45:48">(<init pos:start="45:14" pos:end="45:35"><expr pos:start="45:14" pos:end="45:34"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:22">avctx</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:30">height</name></name> <operator pos:start="45:32" pos:end="45:32">-</operator> <literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>;</init> <condition pos:start="45:37" pos:end="45:43"><expr pos:start="45:37" pos:end="45:42"><name pos:start="45:37" pos:end="45:37">i</name> <operator pos:start="45:39" pos:end="45:40">&gt;=</operator> <literal type="number" pos:start="45:42" pos:end="45:42">0</literal></expr>;</condition> <incr pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:45">i</name><operator pos:start="45:46" pos:end="45:47">--</operator></expr></incr>)</control> <block pos:start="45:50" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:26">

            <expr_stmt pos:start="47:13" pos:end="47:87"><expr pos:start="47:13" pos:end="47:86"><call pos:start="47:13" pos:end="47:86"><name pos:start="47:13" pos:end="47:18">memcpy</name><argument_list pos:start="47:19" pos:end="47:86">(<argument pos:start="47:20" pos:end="47:62"><expr pos:start="47:20" pos:end="47:62"><name pos:start="47:20" pos:end="47:35"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:27">frame</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:32">data</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><literal type="number" pos:start="47:34" pos:end="47:34">0</literal></expr>]</index></name> <operator pos:start="47:37" pos:end="47:37">+</operator> <name pos:start="47:39" pos:end="47:39">i</name> <operator pos:start="47:41" pos:end="47:41">*</operator> <name pos:start="47:43" pos:end="47:62"><name pos:start="47:43" pos:end="47:43">s</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:50">frame</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:59">linesize</name><index pos:start="47:60" pos:end="47:62">[<expr pos:start="47:61" pos:end="47:61"><literal type="number" pos:start="47:61" pos:end="47:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:65" pos:end="47:67"><expr pos:start="47:65" pos:end="47:67"><name pos:start="47:65" pos:end="47:67">buf</name></expr></argument>, <argument pos:start="47:70" pos:end="47:85"><expr pos:start="47:70" pos:end="47:85"><name pos:start="47:70" pos:end="47:81"><name pos:start="47:70" pos:end="47:74">avctx</name><operator pos:start="47:75" pos:end="47:76">-&gt;</operator><name pos:start="47:77" pos:end="47:81">width</name></name> <operator pos:start="47:83" pos:end="47:83">*</operator> <literal type="number" pos:start="47:85" pos:end="47:85">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:15">buf</name> <operator pos:start="49:17" pos:end="49:18">+=</operator> <name pos:start="49:20" pos:end="49:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">1</literal></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><call pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:24">bytestream2_init</name><argument_list pos:start="57:25" pos:end="57:55">(<argument pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:31"><operator pos:start="57:26" pos:end="57:26">&amp;</operator><name pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:31">gb</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:40"><expr pos:start="57:34" pos:end="57:40"><name pos:start="57:34" pos:end="57:36">buf</name> <operator pos:start="57:38" pos:end="57:38">-</operator> <literal type="number" pos:start="57:40" pos:end="57:40">4</literal></expr></argument>, <argument pos:start="57:43" pos:end="57:54"><expr pos:start="57:43" pos:end="57:54"><name pos:start="57:43" pos:end="57:50">buf_size</name> <operator pos:start="57:52" pos:end="57:52">+</operator> <literal type="number" pos:start="57:54" pos:end="57:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:65"><expr pos:start="59:9" pos:end="59:64"><call pos:start="59:9" pos:end="59:64"><name pos:start="59:9" pos:end="59:23">ff_msrle_decode</name><argument_list pos:start="59:24" pos:end="59:64">(<argument pos:start="59:25" pos:end="59:29"><expr pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:29">avctx</name></expr></argument>, <argument pos:start="59:32" pos:end="59:52"><expr pos:start="59:32" pos:end="59:52"><operator pos:start="59:32" pos:end="59:32">(</operator><name pos:start="59:33" pos:end="59:41">AVPicture</name><operator pos:start="59:42" pos:end="59:42">*</operator><operator pos:start="59:43" pos:end="59:43">)</operator><operator pos:start="59:44" pos:end="59:44">&amp;</operator><name pos:start="59:45" pos:end="59:52"><name pos:start="59:45" pos:end="59:45">s</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:52">frame</name></name></expr></argument>, <argument pos:start="59:55" pos:end="59:55"><expr pos:start="59:55" pos:end="59:55"><literal type="number" pos:start="59:55" pos:end="59:55">8</literal></expr></argument>, <argument pos:start="59:58" pos:end="59:63"><expr pos:start="59:58" pos:end="59:63"><operator pos:start="59:58" pos:end="59:58">&amp;</operator><name pos:start="59:59" pos:end="59:63"><name pos:start="59:59" pos:end="59:59">s</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <default pos:start="63:5" pos:end="63:12">default:</default>

        <expr_stmt pos:start="65:9" pos:end="65:76"><expr pos:start="65:9" pos:end="65:75"><call pos:start="65:9" pos:end="65:75"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:75">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:37" pos:end="65:67"><expr pos:start="65:37" pos:end="65:67"><literal type="string" pos:start="65:37" pos:end="65:67">"Unknown compression type %d\n"</literal></expr></argument>, <argument pos:start="65:70" pos:end="65:74"><expr pos:start="65:70" pos:end="65:74"><name pos:start="65:70" pos:end="65:74">compr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:35">return <expr pos:start="67:16" pos:end="67:34"><name pos:start="67:16" pos:end="67:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:14">got_frame</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><operator pos:start="75:5" pos:end="75:5">*</operator><operator pos:start="75:6" pos:end="75:6">(</operator><name pos:start="75:7" pos:end="75:13">AVFrame</name><operator pos:start="75:14" pos:end="75:14">*</operator><operator pos:start="75:15" pos:end="75:15">)</operator><name pos:start="75:16" pos:end="75:19">data</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:56">/* report that the buffer was completely consumed */</comment>

    <return pos:start="81:5" pos:end="81:20">return <expr pos:start="81:12" pos:end="81:19"><name pos:start="81:12" pos:end="81:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
