<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9644.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">avcodec_default_reget_buffer</name><parameter_list pos:start="1:33" pos:end="1:65">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:59">AVFrame</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pic</name></decl></parameter>)</parameter_list><block pos:start="1:66" pos:end="85:1">{<block_content pos:start="3:5" pos:end="83:13">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">AVFrame</name></type> <name pos:start="3:13" pos:end="3:20">temp_pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:48"><expr pos:start="9:5" pos:end="9:47"><call pos:start="9:5" pos:end="9:47"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:47">(<argument pos:start="9:12" pos:end="9:46"><expr pos:start="9:12" pos:end="9:46"><name pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:12">s</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:24">codec_type</name></name> <operator pos:start="9:26" pos:end="9:27">==</operator> <name pos:start="9:29" pos:end="9:46">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:106">(<expr pos:start="13:9" pos:end="13:105"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:11">pic</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">data</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>]</index></name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <operator pos:start="13:25" pos:end="13:25">(</operator><name pos:start="13:26" pos:end="13:35"><name pos:start="13:26" pos:end="13:28">pic</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:35">width</name></name> <operator pos:start="13:37" pos:end="13:38">!=</operator> <name pos:start="13:40" pos:end="13:47"><name pos:start="13:40" pos:end="13:40">s</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:47">width</name></name> <operator pos:start="13:49" pos:end="13:50">||</operator> <name pos:start="13:52" pos:end="13:62"><name pos:start="13:52" pos:end="13:54">pic</name><operator pos:start="13:55" pos:end="13:56">-&gt;</operator><name pos:start="13:57" pos:end="13:62">height</name></name> <operator pos:start="13:64" pos:end="13:65">!=</operator> <name pos:start="13:67" pos:end="13:75"><name pos:start="13:67" pos:end="13:67">s</name><operator pos:start="13:68" pos:end="13:69">-&gt;</operator><name pos:start="13:70" pos:end="13:75">height</name></name> <operator pos:start="13:77" pos:end="13:78">||</operator> <name pos:start="13:80" pos:end="13:90"><name pos:start="13:80" pos:end="13:82">pic</name><operator pos:start="13:83" pos:end="13:84">-&gt;</operator><name pos:start="13:85" pos:end="13:90">format</name></name> <operator pos:start="13:92" pos:end="13:93">!=</operator> <name pos:start="13:95" pos:end="13:104"><name pos:start="13:95" pos:end="13:95">s</name><operator pos:start="13:96" pos:end="13:97">-&gt;</operator><name pos:start="13:98" pos:end="13:104">pix_fmt</name></name><operator pos:start="13:105" pos:end="13:105">)</operator></expr>)</condition> <block pos:start="13:108" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:34">

        <expr_stmt pos:start="15:9" pos:end="17:128"><expr pos:start="15:9" pos:end="17:127"><call pos:start="15:9" pos:end="17:127"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="17:127">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">s</name></expr></argument>, <argument pos:start="15:19" pos:end="15:32"><expr pos:start="15:19" pos:end="15:32"><name pos:start="15:19" pos:end="15:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="15:35" pos:end="15:115"><expr pos:start="15:35" pos:end="15:115"><literal type="string" pos:start="15:35" pos:end="15:115">"Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n"</literal></expr></argument>,

               <argument pos:start="17:16" pos:end="17:25"><expr pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:18">pic</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:25">width</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:38"><expr pos:start="17:28" pos:end="17:38"><name pos:start="17:28" pos:end="17:38"><name pos:start="17:28" pos:end="17:30">pic</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:38">height</name></name></expr></argument>, <argument pos:start="17:41" pos:end="17:72"><expr pos:start="17:41" pos:end="17:72"><call pos:start="17:41" pos:end="17:72"><name pos:start="17:41" pos:end="17:59">av_get_pix_fmt_name</name><argument_list pos:start="17:60" pos:end="17:72">(<argument pos:start="17:61" pos:end="17:71"><expr pos:start="17:61" pos:end="17:71"><name pos:start="17:61" pos:end="17:71"><name pos:start="17:61" pos:end="17:63">pic</name><operator pos:start="17:64" pos:end="17:65">-&gt;</operator><name pos:start="17:66" pos:end="17:71">format</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:75" pos:end="17:82"><expr pos:start="17:75" pos:end="17:82"><name pos:start="17:75" pos:end="17:82"><name pos:start="17:75" pos:end="17:75">s</name><operator pos:start="17:76" pos:end="17:77">-&gt;</operator><name pos:start="17:78" pos:end="17:82">width</name></name></expr></argument>, <argument pos:start="17:85" pos:end="17:93"><expr pos:start="17:85" pos:end="17:93"><name pos:start="17:85" pos:end="17:93"><name pos:start="17:85" pos:end="17:85">s</name><operator pos:start="17:86" pos:end="17:87">-&gt;</operator><name pos:start="17:88" pos:end="17:93">height</name></name></expr></argument>, <argument pos:start="17:96" pos:end="17:126"><expr pos:start="17:96" pos:end="17:126"><call pos:start="17:96" pos:end="17:126"><name pos:start="17:96" pos:end="17:114">av_get_pix_fmt_name</name><argument_list pos:start="17:115" pos:end="17:126">(<argument pos:start="17:116" pos:end="17:125"><expr pos:start="17:116" pos:end="17:125"><name pos:start="17:116" pos:end="17:125"><name pos:start="17:116" pos:end="17:116">s</name><operator pos:start="17:117" pos:end="17:118">-&gt;</operator><name pos:start="17:119" pos:end="17:125">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:25">release_buffer</name></name><argument_list pos:start="19:26" pos:end="19:33">(<argument pos:start="19:27" pos:end="19:27"><expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">s</name></expr></argument>, <argument pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:32">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:43">/* If no picture return a new buffer */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if<condition pos:start="27:7" pos:end="27:28">(<expr pos:start="27:8" pos:end="27:27"><name pos:start="27:8" pos:end="27:19"><name pos:start="27:8" pos:end="27:10">pic</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:16">data</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>]</index></name> <operator pos:start="27:21" pos:end="27:22">==</operator> <name pos:start="27:24" pos:end="27:27">NULL</name></expr>)</condition> <block pos:start="27:30" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:37">

        <comment type="block" pos:start="29:9" pos:end="29:59">/* We will copy from buffer, so must be readable */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">pic</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:25">buffer_hints</name></name> <operator pos:start="31:27" pos:end="31:28">|=</operator> <name pos:start="31:30" pos:end="31:53">FF_BUFFER_HINTS_READABLE</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:37">return <expr pos:start="33:16" pos:end="33:36"><call pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:28">get_buffer</name></name><argument_list pos:start="33:29" pos:end="33:36">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">s</name></expr></argument>, <argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">pic</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:56">/* If internal buffer type return the same buffer */</comment>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if<condition pos:start="41:7" pos:end="41:44">(<expr pos:start="41:8" pos:end="41:43"><name pos:start="41:8" pos:end="41:16"><name pos:start="41:8" pos:end="41:10">pic</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:16">type</name></name> <operator pos:start="41:18" pos:end="41:19">==</operator> <name pos:start="41:21" pos:end="41:43">FF_BUFFER_TYPE_INTERNAL</name></expr>)</condition> <block pos:start="41:46" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:17">

        <if_stmt pos:start="43:9" pos:end="45:48"><if pos:start="43:9" pos:end="43:45">if<condition pos:start="43:11" pos:end="43:18">(<expr pos:start="43:12" pos:end="43:17"><name pos:start="43:12" pos:end="43:17"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:17">pkt</name></name></expr>)</condition><block type="pseudo" pos:start="43:20" pos:end="43:45"><block_content pos:start="43:20" pos:end="43:45"> <expr_stmt pos:start="43:20" pos:end="43:45"><expr pos:start="43:20" pos:end="43:44"><name pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:22">pic</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:31">pkt_pts</name></name><operator pos:start="43:32" pos:end="43:32">=</operator> <name pos:start="43:34" pos:end="43:44"><name pos:start="43:34" pos:end="43:34">s</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:39">pkt</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:44">pts</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="45:9" pos:end="45:48">else<block type="pseudo" pos:start="45:20" pos:end="45:48"><block_content pos:start="45:20" pos:end="45:48">       <expr_stmt pos:start="45:20" pos:end="45:48"><expr pos:start="45:20" pos:end="45:47"><name pos:start="45:20" pos:end="45:31"><name pos:start="45:20" pos:end="45:22">pic</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:31">pkt_pts</name></name><operator pos:start="45:32" pos:end="45:32">=</operator> <name pos:start="45:34" pos:end="45:47">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:11">pic</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:29">reordered_opaque</name></name><operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:50"><name pos:start="47:32" pos:end="47:32">s</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:50">reordered_opaque</name></name></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="59:7">/*

     * Not internal type and reget_buffer not overridden, emulate cr buffer

     */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:20"><expr pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:12">temp_pic</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <operator pos:start="61:16" pos:end="61:16">*</operator><name pos:start="61:17" pos:end="61:19">pic</name></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="65:43">for<control pos:start="63:8" pos:end="63:45">(<init pos:start="63:9" pos:end="63:14"><expr pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <literal type="number" pos:start="63:13" pos:end="63:13">0</literal></expr>;</init> <condition pos:start="63:16" pos:end="63:40"><expr pos:start="63:16" pos:end="63:39"><name pos:start="63:16" pos:end="63:16">i</name> <operator pos:start="63:18" pos:end="63:18">&lt;</operator> <name pos:start="63:20" pos:end="63:39">AV_NUM_DATA_POINTERS</name></expr>;</condition> <incr pos:start="63:42" pos:end="63:44"><expr pos:start="63:42" pos:end="63:44"><name pos:start="63:42" pos:end="63:42">i</name><operator pos:start="63:43" pos:end="63:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:9" pos:end="65:43"><block_content pos:start="65:9" pos:end="65:43">

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:11">pic</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">data</name><index pos:start="65:18" pos:end="65:20">[<expr pos:start="65:19" pos:end="65:19"><name pos:start="65:19" pos:end="65:19">i</name></expr>]</index></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:35"><name pos:start="65:24" pos:end="65:26">pic</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:32">base</name><index pos:start="65:33" pos:end="65:35">[<expr pos:start="65:34" pos:end="65:34"><name pos:start="65:34" pos:end="65:34">i</name></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <name pos:start="65:39" pos:end="65:42">NULL</name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:7">pic</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:15">opaque</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:22">NULL</name></expr>;</expr_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:28">/* Allocate new frame */</comment>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:30">(<expr pos:start="71:9" pos:end="71:29"><call pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:21">get_buffer</name></name><argument_list pos:start="71:22" pos:end="71:29">(<argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">s</name></expr></argument>, <argument pos:start="71:26" pos:end="71:28"><expr pos:start="71:26" pos:end="71:28"><name pos:start="71:26" pos:end="71:28">pic</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="75:5" pos:end="75:55">/* Copy image data from old buffer to new buffer */</comment>

    <expr_stmt pos:start="77:5" pos:end="79:24"><expr pos:start="77:5" pos:end="79:23"><call pos:start="77:5" pos:end="79:23"><name pos:start="77:5" pos:end="77:19">av_picture_copy</name><argument_list pos:start="77:20" pos:end="79:23">(<argument pos:start="77:21" pos:end="77:35"><expr pos:start="77:21" pos:end="77:35"><operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:30">AVPicture</name><operator pos:start="77:31" pos:end="77:31">*</operator><operator pos:start="77:32" pos:end="77:32">)</operator><name pos:start="77:33" pos:end="77:35">pic</name></expr></argument>, <argument pos:start="77:38" pos:end="77:58"><expr pos:start="77:38" pos:end="77:58"><operator pos:start="77:38" pos:end="77:38">(</operator><name pos:start="77:39" pos:end="77:47">AVPicture</name><operator pos:start="77:48" pos:end="77:48">*</operator><operator pos:start="77:49" pos:end="77:49">)</operator><operator pos:start="77:50" pos:end="77:50">&amp;</operator><name pos:start="77:51" pos:end="77:58">temp_pic</name></expr></argument>, <argument pos:start="77:61" pos:end="77:70"><expr pos:start="77:61" pos:end="77:70"><name pos:start="77:61" pos:end="77:70"><name pos:start="77:61" pos:end="77:61">s</name><operator pos:start="77:62" pos:end="77:63">-&gt;</operator><name pos:start="77:64" pos:end="77:70">pix_fmt</name></name></expr></argument>, <argument pos:start="77:73" pos:end="77:80"><expr pos:start="77:73" pos:end="77:80"><name pos:start="77:73" pos:end="77:80"><name pos:start="77:73" pos:end="77:73">s</name><operator pos:start="77:74" pos:end="77:75">-&gt;</operator><name pos:start="77:76" pos:end="77:80">width</name></name></expr></argument>,

             <argument pos:start="79:14" pos:end="79:22"><expr pos:start="79:14" pos:end="79:22"><name pos:start="79:14" pos:end="79:22"><name pos:start="79:14" pos:end="79:14">s</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:22">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:36"><expr pos:start="81:5" pos:end="81:35"><call pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:21">release_buffer</name></name><argument_list pos:start="81:22" pos:end="81:35">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:34"><expr pos:start="81:26" pos:end="81:34"><operator pos:start="81:26" pos:end="81:26">&amp;</operator><name pos:start="81:27" pos:end="81:34">temp_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="81:38" pos:end="81:57">// Release old frame</comment>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
