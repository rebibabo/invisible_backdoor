<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17339.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">raw_write</name><parameter_list pos:start="1:21" pos:end="3:56">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:50">int64_t</name></type> <name pos:start="1:52" pos:end="1:61">sector_num</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:39"><decl pos:start="3:22" pos:end="3:39"><type pos:start="3:22" pos:end="3:39"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:55">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:61">

    <if_stmt pos:start="7:5" pos:end="35:5"><if pos:start="7:5" pos:end="35:5">if <condition pos:start="7:8" pos:end="7:60">(<expr pos:start="7:9" pos:end="7:59"><call pos:start="7:9" pos:end="7:59"><name pos:start="7:9" pos:end="7:26">check_write_unsafe</name><argument_list pos:start="7:27" pos:end="7:59">(<argument pos:start="7:28" pos:end="7:29"><expr pos:start="7:28" pos:end="7:29"><name pos:start="7:28" pos:end="7:29">bs</name></expr></argument>, <argument pos:start="7:32" pos:end="7:41"><expr pos:start="7:32" pos:end="7:41"><name pos:start="7:32" pos:end="7:41">sector_num</name></expr></argument>, <argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:46">buf</name></expr></argument>, <argument pos:start="7:49" pos:end="7:58"><expr pos:start="7:49" pos:end="7:58"><name pos:start="7:49" pos:end="7:58">nb_sectors</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:62" pos:end="35:5">{<block_content pos:start="9:9" pos:end="33:25">

        <decl_stmt pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:50"><name pos:start="13:15" pos:end="13:41">raw_write_scrubbed_bootsect</name><argument_list pos:start="13:42" pos:end="13:50">(<argument pos:start="13:43" pos:end="13:44"><expr pos:start="13:43" pos:end="13:44"><name pos:start="13:43" pos:end="13:44">bs</name></expr></argument>, <argument pos:start="13:47" pos:end="13:49"><expr pos:start="13:47" pos:end="13:49"><name pos:start="13:47" pos:end="13:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">&lt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition> <block pos:start="15:22" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:23">

            <return pos:start="17:13" pos:end="17:23">return <expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:65"><expr pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:64"><name pos:start="23:15" pos:end="23:24">bdrv_write</name><argument_list pos:start="23:25" pos:end="23:64">(<argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:27">bs</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">file</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">1</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:47"><expr pos:start="23:39" pos:end="23:47"><name pos:start="23:39" pos:end="23:41">buf</name> <operator pos:start="23:43" pos:end="23:43">+</operator> <literal type="number" pos:start="23:45" pos:end="23:47">512</literal></expr></argument>, <argument pos:start="23:50" pos:end="23:63"><expr pos:start="23:50" pos:end="23:63"><name pos:start="23:50" pos:end="23:59">nb_sectors</name> <operator pos:start="23:61" pos:end="23:61">-</operator> <literal type="number" pos:start="23:63" pos:end="23:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:23">

            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <return pos:start="33:9" pos:end="33:25">return <expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:18">ret</name> <operator pos:start="33:20" pos:end="33:20">+</operator> <literal type="number" pos:start="33:22" pos:end="33:24">512</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:61">return <expr pos:start="39:12" pos:end="39:60"><call pos:start="39:12" pos:end="39:60"><name pos:start="39:12" pos:end="39:21">bdrv_write</name><argument_list pos:start="39:22" pos:end="39:60">(<argument pos:start="39:23" pos:end="39:30"><expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:24">bs</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:30">file</name></name></expr></argument>, <argument pos:start="39:33" pos:end="39:42"><expr pos:start="39:33" pos:end="39:42"><name pos:start="39:33" pos:end="39:42">sector_num</name></expr></argument>, <argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">buf</name></expr></argument>, <argument pos:start="39:50" pos:end="39:59"><expr pos:start="39:50" pos:end="39:59"><name pos:start="39:50" pos:end="39:59">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
