<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/529.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">decode_rlc_opc</name><parameter_list pos:start="1:27" pos:end="3:40">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">CPUTriCoreState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:61">DisasContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">ctx</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:35">uint32_t</name></type> <name pos:start="3:37" pos:end="3:39">op1</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:5">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:19">const16</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">r1</name></decl>, <decl pos:start="9:13" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">r2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:11">const16</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:51"><name pos:start="13:15" pos:end="13:38">MASK_OP_RLC_CONST16_SEXT</name><argument_list pos:start="13:39" pos:end="13:51">(<argument pos:start="13:40" pos:end="13:50"><expr pos:start="13:40" pos:end="13:50"><name pos:start="13:40" pos:end="13:50"><name pos:start="13:40" pos:end="13:42">ctx</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:50">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:6">r1</name>      <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:41"><name pos:start="15:15" pos:end="15:28">MASK_OP_RLC_S1</name><argument_list pos:start="15:29" pos:end="15:41">(<argument pos:start="15:30" pos:end="15:40"><expr pos:start="15:30" pos:end="15:40"><name pos:start="15:30" pos:end="15:40"><name pos:start="15:30" pos:end="15:32">ctx</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:6">r2</name>      <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:40"><name pos:start="17:15" pos:end="17:27">MASK_OP_RLC_D</name><argument_list pos:start="17:28" pos:end="17:40">(<argument pos:start="17:29" pos:end="17:39"><expr pos:start="17:29" pos:end="17:39"><name pos:start="17:29" pos:end="17:39"><name pos:start="17:29" pos:end="17:31">ctx</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="21:5" pos:end="105:5">switch <condition pos:start="21:12" pos:end="21:16">(<expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">op1</name></expr>)</condition> <block pos:start="21:18" pos:end="105:5">{<block_content pos:start="23:5" pos:end="103:14">

    <case pos:start="23:5" pos:end="23:26">case <expr pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:25">OPC1_32_RLC_ADDI</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><call pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:18">gen_addi_d</name><argument_list pos:start="25:19" pos:end="25:57">(<argument pos:start="25:20" pos:end="25:32"><expr pos:start="25:20" pos:end="25:32"><name pos:start="25:20" pos:end="25:32"><name pos:start="25:20" pos:end="25:28">cpu_gpr_d</name><index pos:start="25:29" pos:end="25:32">[<expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="25:35" pos:end="25:47"><expr pos:start="25:35" pos:end="25:47"><name pos:start="25:35" pos:end="25:47"><name pos:start="25:35" pos:end="25:43">cpu_gpr_d</name><index pos:start="25:44" pos:end="25:47">[<expr pos:start="25:45" pos:end="25:46"><name pos:start="25:45" pos:end="25:46">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="25:50" pos:end="25:56"><expr pos:start="25:50" pos:end="25:56"><name pos:start="25:50" pos:end="25:56">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:27">case <expr pos:start="29:10" pos:end="29:26"><name pos:start="29:10" pos:end="29:26">OPC1_32_RLC_ADDIH</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><call pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:18">gen_addi_d</name><argument_list pos:start="31:19" pos:end="31:63">(<argument pos:start="31:20" pos:end="31:32"><expr pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:28">cpu_gpr_d</name><index pos:start="31:29" pos:end="31:32">[<expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="31:35" pos:end="31:47"><expr pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:43">cpu_gpr_d</name><index pos:start="31:44" pos:end="31:47">[<expr pos:start="31:45" pos:end="31:46"><name pos:start="31:45" pos:end="31:46">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="31:50" pos:end="31:62"><expr pos:start="31:50" pos:end="31:62"><name pos:start="31:50" pos:end="31:56">const16</name> <operator pos:start="31:58" pos:end="31:59">&lt;&lt;</operator> <literal type="number" pos:start="31:61" pos:end="31:62">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:29">case <expr pos:start="35:10" pos:end="35:28"><name pos:start="35:10" pos:end="35:28">OPC1_32_RLC_ADDIH_A</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:23">tcg_gen_addi_tl</name><argument_list pos:start="37:24" pos:end="37:68">(<argument pos:start="37:25" pos:end="37:37"><expr pos:start="37:25" pos:end="37:37"><name pos:start="37:25" pos:end="37:37"><name pos:start="37:25" pos:end="37:33">cpu_gpr_a</name><index pos:start="37:34" pos:end="37:37">[<expr pos:start="37:35" pos:end="37:36"><name pos:start="37:35" pos:end="37:36">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="37:40" pos:end="37:52"><expr pos:start="37:40" pos:end="37:52"><name pos:start="37:40" pos:end="37:52"><name pos:start="37:40" pos:end="37:48">cpu_gpr_a</name><index pos:start="37:49" pos:end="37:52">[<expr pos:start="37:50" pos:end="37:51"><name pos:start="37:50" pos:end="37:51">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="37:55" pos:end="37:67"><expr pos:start="37:55" pos:end="37:67"><name pos:start="37:55" pos:end="37:61">const16</name> <operator pos:start="37:63" pos:end="37:64">&lt;&lt;</operator> <literal type="number" pos:start="37:66" pos:end="37:67">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:26">case <expr pos:start="41:10" pos:end="41:25"><name pos:start="41:10" pos:end="41:25">OPC1_32_RLC_MFCR</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:15">const16</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:50"><name pos:start="43:19" pos:end="43:37">MASK_OP_RLC_CONST16</name><argument_list pos:start="43:38" pos:end="43:50">(<argument pos:start="43:39" pos:end="43:49"><expr pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:41">ctx</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:16">gen_mfcr</name><argument_list pos:start="45:17" pos:end="45:45">(<argument pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:20">env</name></expr></argument>, <argument pos:start="45:23" pos:end="45:35"><expr pos:start="45:23" pos:end="45:35"><name pos:start="45:23" pos:end="45:35"><name pos:start="45:23" pos:end="45:31">cpu_gpr_d</name><index pos:start="45:32" pos:end="45:35">[<expr pos:start="45:33" pos:end="45:34"><name pos:start="45:33" pos:end="45:34">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="45:38" pos:end="45:44"><expr pos:start="45:38" pos:end="45:44"><name pos:start="45:38" pos:end="45:44">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:25">case <expr pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:24">OPC1_32_RLC_MOV</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><call pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:23">tcg_gen_movi_tl</name><argument_list pos:start="51:24" pos:end="51:47">(<argument pos:start="51:25" pos:end="51:37"><expr pos:start="51:25" pos:end="51:37"><name pos:start="51:25" pos:end="51:37"><name pos:start="51:25" pos:end="51:33">cpu_gpr_d</name><index pos:start="51:34" pos:end="51:37">[<expr pos:start="51:35" pos:end="51:36"><name pos:start="51:35" pos:end="51:36">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="51:40" pos:end="51:46"><expr pos:start="51:40" pos:end="51:46"><name pos:start="51:40" pos:end="51:46">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:28">case <expr pos:start="55:10" pos:end="55:27"><name pos:start="55:10" pos:end="55:27">OPC1_32_RLC_MOV_64</name></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="73:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="57:53">(<expr pos:start="57:13" pos:end="57:52"><call pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:27">tricore_feature</name><argument_list pos:start="57:28" pos:end="57:52">(<argument pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:31">env</name></expr></argument>, <argument pos:start="57:34" pos:end="57:51"><expr pos:start="57:34" pos:end="57:51"><name pos:start="57:34" pos:end="57:51">TRICORE_FEATURE_16</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:55" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:60">

            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:32">(<expr pos:start="59:17" pos:end="59:31"><operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:19">r2</name> <operator pos:start="59:21" pos:end="59:21">&amp;</operator> <literal type="number" pos:start="59:23" pos:end="59:25">0x1</literal><operator pos:start="59:26" pos:end="59:26">)</operator> <operator pos:start="59:28" pos:end="59:29">!=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr>)</condition> <block pos:start="59:34" pos:end="63:13">{<block_content>

                <comment type="block" pos:start="61:17" pos:end="61:42">/* TODO: raise OPD trap */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:52"><expr pos:start="65:13" pos:end="65:51"><call pos:start="65:13" pos:end="65:51"><name pos:start="65:13" pos:end="65:27">tcg_gen_movi_tl</name><argument_list pos:start="65:28" pos:end="65:51">(<argument pos:start="65:29" pos:end="65:41"><expr pos:start="65:29" pos:end="65:41"><name pos:start="65:29" pos:end="65:41"><name pos:start="65:29" pos:end="65:37">cpu_gpr_d</name><index pos:start="65:38" pos:end="65:41">[<expr pos:start="65:39" pos:end="65:40"><name pos:start="65:39" pos:end="65:40">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="65:44" pos:end="65:50"><expr pos:start="65:44" pos:end="65:50"><name pos:start="65:44" pos:end="65:50">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:60"><expr pos:start="67:13" pos:end="67:59"><call pos:start="67:13" pos:end="67:59"><name pos:start="67:13" pos:end="67:27">tcg_gen_movi_tl</name><argument_list pos:start="67:28" pos:end="67:59">(<argument pos:start="67:29" pos:end="67:43"><expr pos:start="67:29" pos:end="67:43"><name pos:start="67:29" pos:end="67:43"><name pos:start="67:29" pos:end="67:37">cpu_gpr_d</name><index pos:start="67:38" pos:end="67:43">[<expr pos:start="67:39" pos:end="67:42"><name pos:start="67:39" pos:end="67:40">r2</name><operator pos:start="67:41" pos:end="67:41">+</operator><literal type="number" pos:start="67:42" pos:end="67:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:46" pos:end="67:58"><expr pos:start="67:46" pos:end="67:58"><name pos:start="67:46" pos:end="67:52">const16</name> <operator pos:start="67:54" pos:end="67:55">&gt;&gt;</operator> <literal type="number" pos:start="67:57" pos:end="67:58">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="73:9">else <block pos:start="69:16" pos:end="73:9">{<block_content>

            <comment type="block" pos:start="71:13" pos:end="71:49">/* TODO: raise illegal opcode trap */</comment>

        </block_content>}</block></else></if_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:27">case <expr pos:start="77:10" pos:end="77:26"><name pos:start="77:10" pos:end="77:26">OPC1_32_RLC_MOV_U</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:51"><expr pos:start="79:9" pos:end="79:50"><name pos:start="79:9" pos:end="79:15">const16</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:50"><name pos:start="79:19" pos:end="79:37">MASK_OP_RLC_CONST16</name><argument_list pos:start="79:38" pos:end="79:50">(<argument pos:start="79:39" pos:end="79:49"><expr pos:start="79:39" pos:end="79:49"><name pos:start="79:39" pos:end="79:49"><name pos:start="79:39" pos:end="79:41">ctx</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:48"><expr pos:start="81:9" pos:end="81:47"><call pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:23">tcg_gen_movi_tl</name><argument_list pos:start="81:24" pos:end="81:47">(<argument pos:start="81:25" pos:end="81:37"><expr pos:start="81:25" pos:end="81:37"><name pos:start="81:25" pos:end="81:37"><name pos:start="81:25" pos:end="81:33">cpu_gpr_d</name><index pos:start="81:34" pos:end="81:37">[<expr pos:start="81:35" pos:end="81:36"><name pos:start="81:35" pos:end="81:36">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="81:40" pos:end="81:46"><expr pos:start="81:40" pos:end="81:46"><name pos:start="81:40" pos:end="81:46">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:27">case <expr pos:start="85:10" pos:end="85:26"><name pos:start="85:10" pos:end="85:26">OPC1_32_RLC_MOV_H</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:54"><expr pos:start="87:9" pos:end="87:53"><call pos:start="87:9" pos:end="87:53"><name pos:start="87:9" pos:end="87:23">tcg_gen_movi_tl</name><argument_list pos:start="87:24" pos:end="87:53">(<argument pos:start="87:25" pos:end="87:37"><expr pos:start="87:25" pos:end="87:37"><name pos:start="87:25" pos:end="87:37"><name pos:start="87:25" pos:end="87:33">cpu_gpr_d</name><index pos:start="87:34" pos:end="87:37">[<expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="87:40" pos:end="87:52"><expr pos:start="87:40" pos:end="87:52"><name pos:start="87:40" pos:end="87:46">const16</name> <operator pos:start="87:48" pos:end="87:49">&lt;&lt;</operator> <literal type="number" pos:start="87:51" pos:end="87:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:28">case <expr pos:start="91:10" pos:end="91:27"><name pos:start="91:10" pos:end="91:27">OPC1_32_RLC_MOVH_A</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:54"><expr pos:start="93:9" pos:end="93:53"><call pos:start="93:9" pos:end="93:53"><name pos:start="93:9" pos:end="93:23">tcg_gen_movi_tl</name><argument_list pos:start="93:24" pos:end="93:53">(<argument pos:start="93:25" pos:end="93:37"><expr pos:start="93:25" pos:end="93:37"><name pos:start="93:25" pos:end="93:37"><name pos:start="93:25" pos:end="93:33">cpu_gpr_a</name><index pos:start="93:34" pos:end="93:37">[<expr pos:start="93:35" pos:end="93:36"><name pos:start="93:35" pos:end="93:36">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="93:40" pos:end="93:52"><expr pos:start="93:40" pos:end="93:52"><name pos:start="93:40" pos:end="93:46">const16</name> <operator pos:start="93:48" pos:end="93:49">&lt;&lt;</operator> <literal type="number" pos:start="93:51" pos:end="93:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:26">case <expr pos:start="97:10" pos:end="97:25"><name pos:start="97:10" pos:end="97:25">OPC1_32_RLC_MTCR</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:51"><expr pos:start="99:9" pos:end="99:50"><name pos:start="99:9" pos:end="99:15">const16</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:50"><name pos:start="99:19" pos:end="99:37">MASK_OP_RLC_CONST16</name><argument_list pos:start="99:38" pos:end="99:50">(<argument pos:start="99:39" pos:end="99:49"><expr pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:41">ctx</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:51"><expr pos:start="101:9" pos:end="101:50"><call pos:start="101:9" pos:end="101:50"><name pos:start="101:9" pos:end="101:16">gen_mtcr</name><argument_list pos:start="101:17" pos:end="101:50">(<argument pos:start="101:18" pos:end="101:20"><expr pos:start="101:18" pos:end="101:20"><name pos:start="101:18" pos:end="101:20">env</name></expr></argument>, <argument pos:start="101:23" pos:end="101:25"><expr pos:start="101:23" pos:end="101:25"><name pos:start="101:23" pos:end="101:25">ctx</name></expr></argument>, <argument pos:start="101:28" pos:end="101:40"><expr pos:start="101:28" pos:end="101:40"><name pos:start="101:28" pos:end="101:40"><name pos:start="101:28" pos:end="101:36">cpu_gpr_d</name><index pos:start="101:37" pos:end="101:40">[<expr pos:start="101:38" pos:end="101:39"><name pos:start="101:38" pos:end="101:39">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="101:43" pos:end="101:49"><expr pos:start="101:43" pos:end="101:49"><name pos:start="101:43" pos:end="101:49">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
