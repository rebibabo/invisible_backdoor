<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/822.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">set_guest_connected</name><parameter_list pos:start="1:32" pos:end="1:76">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:54"><name pos:start="1:33" pos:end="1:48">VirtIOSerialPort</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">port</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:75"><decl pos:start="1:57" pos:end="1:75"><type pos:start="1:57" pos:end="1:75"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:75">guest_connected</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">VirtConsole</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">vcon</name> <init pos:start="5:23" pos:end="5:44">= <expr pos:start="5:25" pos:end="5:44"><call pos:start="5:25" pos:end="5:44"><name pos:start="5:25" pos:end="5:38">VIRTIO_CONSOLE</name><argument_list pos:start="5:39" pos:end="5:44">(<argument pos:start="5:40" pos:end="5:43"><expr pos:start="5:40" pos:end="5:43"><name pos:start="5:40" pos:end="5:43">port</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><call pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:29">DEVICE</name><argument_list pos:start="7:30" pos:end="7:35">(<argument pos:start="7:31" pos:end="7:34"><expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">port</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:12">vcon</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">chr</name></name></expr>)</condition> <block pos:start="11:20" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:57">

        <expr_stmt pos:start="13:9" pos:end="13:57"><expr pos:start="13:9" pos:end="13:56"><call pos:start="13:9" pos:end="13:56"><name pos:start="13:9" pos:end="13:28">qemu_chr_fe_set_open</name><argument_list pos:start="13:29" pos:end="13:56">(<argument pos:start="13:30" pos:end="13:38"><expr pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:33">vcon</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:38">chr</name></name></expr></argument>, <argument pos:start="13:41" pos:end="13:55"><expr pos:start="13:41" pos:end="13:55"><name pos:start="13:41" pos:end="13:55">guest_connected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">dev</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:15">id</name></name></expr>)</condition> <block pos:start="19:18" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:54">

        <expr_stmt pos:start="21:9" pos:end="23:54"><expr pos:start="21:9" pos:end="23:53"><call pos:start="21:9" pos:end="23:53"><name pos:start="21:9" pos:end="21:39">qapi_event_send_vserport_change</name><argument_list pos:start="21:40" pos:end="23:53">(<argument pos:start="21:41" pos:end="21:47"><expr pos:start="21:41" pos:end="21:47"><name pos:start="21:41" pos:end="21:47"><name pos:start="21:41" pos:end="21:43">dev</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:47">id</name></name></expr></argument>, <argument pos:start="21:50" pos:end="21:64"><expr pos:start="21:50" pos:end="21:64"><name pos:start="21:50" pos:end="21:64">guest_connected</name></expr></argument>,

                                        <argument pos:start="23:41" pos:end="23:52"><expr pos:start="23:41" pos:end="23:52"><operator pos:start="23:41" pos:end="23:41">&amp;</operator><name pos:start="23:42" pos:end="23:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
