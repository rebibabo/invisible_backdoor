<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6086.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mux_chr_write</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">CharDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">chr</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">buf</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:74"><decl pos:start="1:68" pos:end="1:74"><type pos:start="1:68" pos:end="1:74"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:74">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">MuxDriver</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:30">= <expr pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:22">chr</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:30">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="71:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:10">d</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:22">timestamps</name></name></expr>)</condition> <block pos:start="9:25" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:50">

        <expr_stmt pos:start="11:9" pos:end="11:50"><expr pos:start="11:9" pos:end="11:49"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:49"><name pos:start="11:15" pos:end="11:31"><name pos:start="11:15" pos:end="11:15">d</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:20">drv</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:31">chr_write</name></name><argument_list pos:start="11:32" pos:end="11:49">(<argument pos:start="11:33" pos:end="11:38"><expr pos:start="11:33" pos:end="11:38"><name pos:start="11:33" pos:end="11:38"><name pos:start="11:33" pos:end="11:33">d</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:38">drv</name></name></expr></argument>, <argument pos:start="11:41" pos:end="11:43"><expr pos:start="11:41" pos:end="11:43"><name pos:start="11:41" pos:end="11:43">buf</name></expr></argument>, <argument pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="71:5">else <block pos:start="13:12" pos:end="71:5">{<block_content pos:start="15:9" pos:end="69:9">

        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</expr_stmt>

        <for pos:start="21:9" pos:end="69:9">for <control pos:start="21:13" pos:end="21:33">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:27">len</name></expr>;</condition> <incr pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:30">i</name><operator pos:start="21:31" pos:end="21:32">++</operator></expr></incr>)</control> <block pos:start="21:35" pos:end="69:9">{<block_content pos:start="23:13" pos:end="67:13">

            <if_stmt pos:start="23:13" pos:end="59:13"><if pos:start="23:13" pos:end="59:13">if <condition pos:start="23:16" pos:end="23:29">(<expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">d</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">linestart</name></name></expr>)</condition> <block pos:start="23:31" pos:end="59:13">{<block_content pos:start="25:17" pos:end="57:33">

                <decl_stmt pos:start="25:17" pos:end="25:30"><decl pos:start="25:17" pos:end="25:29"><type pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:20">char</name></type> <name pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:25">buf1</name><index pos:start="25:26" pos:end="25:29">[<expr pos:start="25:27" pos:end="25:28"><literal type="number" pos:start="25:27" pos:end="25:28">64</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="27:17" pos:end="27:27"><decl pos:start="27:17" pos:end="27:26"><type pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:23">int64_t</name></type> <name pos:start="27:25" pos:end="27:26">ti</name></decl>;</decl_stmt>

                <decl_stmt pos:start="29:17" pos:end="29:25"><decl pos:start="29:17" pos:end="29:24"><type pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">int</name></type> <name pos:start="29:21" pos:end="29:24">secs</name></decl>;</decl_stmt>



                <expr_stmt pos:start="33:17" pos:end="33:46"><expr pos:start="33:17" pos:end="33:45"><name pos:start="33:17" pos:end="33:18">ti</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:45"><name pos:start="33:22" pos:end="33:35">qemu_get_clock</name><argument_list pos:start="33:36" pos:end="33:45">(<argument pos:start="33:37" pos:end="33:44"><expr pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:44">rt_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="35:17" pos:end="37:45"><if pos:start="35:17" pos:end="37:45">if <condition pos:start="35:20" pos:end="35:46">(<expr pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:21">d</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:39">timestamps_start</name></name> <operator pos:start="35:41" pos:end="35:42">==</operator> <operator pos:start="35:44" pos:end="35:44">-</operator><literal type="number" pos:start="35:45" pos:end="35:45">1</literal></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:45"><block_content pos:start="37:21" pos:end="37:45">

                    <expr_stmt pos:start="37:21" pos:end="37:45"><expr pos:start="37:21" pos:end="37:44"><name pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:21">d</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:39">timestamps_start</name></name> <operator pos:start="37:41" pos:end="37:41">=</operator> <name pos:start="37:43" pos:end="37:44">ti</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:42"><expr pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:18">ti</name> <operator pos:start="39:20" pos:end="39:21">-=</operator> <name pos:start="39:23" pos:end="39:41"><name pos:start="39:23" pos:end="39:23">d</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:41">timestamps_start</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:33"><expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:20">secs</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:25">ti</name> <operator pos:start="41:27" pos:end="41:27">/</operator> <literal type="number" pos:start="41:29" pos:end="41:32">1000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="53:43"><expr pos:start="43:17" pos:end="53:42"><call pos:start="43:17" pos:end="53:42"><name pos:start="43:17" pos:end="43:24">snprintf</name><argument_list pos:start="43:25" pos:end="53:42">(<argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">buf1</name></expr></argument>, <argument pos:start="43:32" pos:end="43:43"><expr pos:start="43:32" pos:end="43:43"><sizeof pos:start="43:32" pos:end="43:43">sizeof<argument_list pos:start="43:38" pos:end="43:43">(<argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                         <argument pos:start="45:26" pos:end="45:49"><expr pos:start="45:26" pos:end="45:49"><literal type="string" pos:start="45:26" pos:end="45:49">"[%02d:%02d:%02d.%03d] "</literal></expr></argument>,

                         <argument pos:start="47:26" pos:end="47:36"><expr pos:start="47:26" pos:end="47:36"><name pos:start="47:26" pos:end="47:29">secs</name> <operator pos:start="47:31" pos:end="47:31">/</operator> <literal type="number" pos:start="47:33" pos:end="47:36">3600</literal></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:41"><expr pos:start="49:26" pos:end="49:41"><operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:30">secs</name> <operator pos:start="49:32" pos:end="49:32">/</operator> <literal type="number" pos:start="49:34" pos:end="49:35">60</literal><operator pos:start="49:36" pos:end="49:36">)</operator> <operator pos:start="49:38" pos:end="49:38">%</operator> <literal type="number" pos:start="49:40" pos:end="49:41">60</literal></expr></argument>,

                         <argument pos:start="51:26" pos:end="51:34"><expr pos:start="51:26" pos:end="51:34"><name pos:start="51:26" pos:end="51:29">secs</name> <operator pos:start="51:31" pos:end="51:31">%</operator> <literal type="number" pos:start="51:33" pos:end="51:34">60</literal></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:41"><expr pos:start="53:26" pos:end="53:41"><operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:29">int</name><operator pos:start="53:30" pos:end="53:30">)</operator><operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:33">ti</name> <operator pos:start="53:35" pos:end="53:35">%</operator> <literal type="number" pos:start="53:37" pos:end="53:40">1000</literal><operator pos:start="53:41" pos:end="53:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:73"><expr pos:start="55:17" pos:end="55:72"><call pos:start="55:17" pos:end="55:72"><name pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:17">d</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:22">drv</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:33">chr_write</name></name><argument_list pos:start="55:34" pos:end="55:72">(<argument pos:start="55:35" pos:end="55:40"><expr pos:start="55:35" pos:end="55:40"><name pos:start="55:35" pos:end="55:40"><name pos:start="55:35" pos:end="55:35">d</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">drv</name></name></expr></argument>, <argument pos:start="55:43" pos:end="55:57"><expr pos:start="55:43" pos:end="55:57"><operator pos:start="55:43" pos:end="55:43">(</operator><name pos:start="55:44" pos:end="55:50">uint8_t</name> <operator pos:start="55:52" pos:end="55:52">*</operator><operator pos:start="55:53" pos:end="55:53">)</operator><name pos:start="55:54" pos:end="55:57">buf1</name></expr></argument>, <argument pos:start="55:60" pos:end="55:71"><expr pos:start="55:60" pos:end="55:71"><call pos:start="55:60" pos:end="55:71"><name pos:start="55:60" pos:end="55:65">strlen</name><argument_list pos:start="55:66" pos:end="55:71">(<argument pos:start="55:67" pos:end="55:70"><expr pos:start="55:67" pos:end="55:70"><name pos:start="55:67" pos:end="55:70">buf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:33"><expr pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:17">d</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">linestart</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <literal type="number" pos:start="57:32" pos:end="57:32">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:55"><expr pos:start="61:13" pos:end="61:54"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:18">+=</operator> <call pos:start="61:20" pos:end="61:54"><name pos:start="61:20" pos:end="61:36"><name pos:start="61:20" pos:end="61:20">d</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:25">drv</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:36">chr_write</name></name><argument_list pos:start="61:37" pos:end="61:54">(<argument pos:start="61:38" pos:end="61:43"><expr pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:38">d</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:43">drv</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:50"><expr pos:start="61:46" pos:end="61:50"><name pos:start="61:46" pos:end="61:48">buf</name><operator pos:start="61:49" pos:end="61:49">+</operator><name pos:start="61:50" pos:end="61:50">i</name></expr></argument>, <argument pos:start="61:53" pos:end="61:53"><expr pos:start="61:53" pos:end="61:53"><literal type="number" pos:start="61:53" pos:end="61:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="67:13"><if pos:start="63:13" pos:end="67:13">if <condition pos:start="63:16" pos:end="63:31">(<expr pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:19">buf</name><index pos:start="63:20" pos:end="63:22">[<expr pos:start="63:21" pos:end="63:21"><name pos:start="63:21" pos:end="63:21">i</name></expr>]</index></name> <operator pos:start="63:24" pos:end="63:25">==</operator> <literal type="char" pos:start="63:27" pos:end="63:30">'\n'</literal></expr>)</condition> <block pos:start="63:33" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:33">

                <expr_stmt pos:start="65:17" pos:end="65:33"><expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:17">d</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:28">linestart</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <literal type="number" pos:start="65:32" pos:end="65:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
