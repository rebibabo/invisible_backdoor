<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21188.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">encode_picture_lossless</name><parameter_list pos:start="1:35" pos:end="2:72">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">AVPacket</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pkt</name></decl></parameter>,
                                   <parameter pos:start="2:36" pos:end="2:54"><decl pos:start="2:36" pos:end="2:54"><type pos:start="2:36" pos:end="2:54"><specifier pos:start="2:36" pos:end="2:40">const</specifier> <name pos:start="2:42" pos:end="2:48">AVFrame</name> <modifier pos:start="2:50" pos:end="2:50">*</modifier></type><name pos:start="2:51" pos:end="2:54">pict</name></decl></parameter>, <parameter pos:start="2:57" pos:end="2:71"><decl pos:start="2:57" pos:end="2:71"><type pos:start="2:57" pos:end="2:71"><name pos:start="2:57" pos:end="2:59">int</name> <modifier pos:start="2:61" pos:end="2:61">*</modifier></type><name pos:start="2:62" pos:end="2:71">got_packet</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="119:13">{<block_content pos:start="4:5" pos:end="119:13">
    <decl_stmt pos:start="4:5" pos:end="4:48"><decl pos:start="4:5" pos:end="4:47"><type pos:start="4:5" pos:end="4:26"><name pos:start="4:5" pos:end="4:18">MpegEncContext</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier> <specifier pos:start="4:22" pos:end="4:26">const</specifier></type> <name pos:start="4:28" pos:end="4:28">s</name> <init pos:start="4:30" pos:end="4:47">= <expr pos:start="4:32" pos:end="4:47"><name pos:start="4:32" pos:end="4:47"><name pos:start="4:32" pos:end="4:36">avctx</name><operator pos:start="4:37" pos:end="4:38">-&gt;</operator><name pos:start="4:39" pos:end="4:47">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:16">MJpegContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier> <specifier pos:start="5:20" pos:end="5:24">const</specifier></type> <name pos:start="5:26" pos:end="5:26">m</name> <init pos:start="5:28" pos:end="5:41">= <expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">mjpeg_ctx</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:30"><decl pos:start="6:5" pos:end="6:29"><type pos:start="6:5" pos:end="6:13"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:13">int</name></type> <name pos:start="6:15" pos:end="6:19">width</name><init pos:start="6:20" pos:end="6:29">= <expr pos:start="6:22" pos:end="6:29"><name pos:start="6:22" pos:end="6:29"><name pos:start="6:22" pos:end="6:22">s</name><operator pos:start="6:23" pos:end="6:24">-&gt;</operator><name pos:start="6:25" pos:end="6:29">width</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:20">height</name><init pos:start="7:21" pos:end="7:31">= <expr pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:31">height</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:46"><decl pos:start="8:5" pos:end="8:45"><type pos:start="8:5" pos:end="8:19"><name pos:start="8:5" pos:end="8:11">AVFrame</name> <modifier pos:start="8:13" pos:end="8:13">*</modifier> <specifier pos:start="8:15" pos:end="8:19">const</specifier></type> <name pos:start="8:21" pos:end="8:21">p</name> <init pos:start="8:23" pos:end="8:45">= <expr pos:start="8:25" pos:end="8:45"><operator pos:start="8:25" pos:end="8:25">&amp;</operator><name pos:start="8:26" pos:end="8:45"><name pos:start="8:26" pos:end="8:26">s</name><operator pos:start="8:27" pos:end="8:28">-&gt;</operator><name pos:start="8:29" pos:end="8:43">current_picture</name><operator pos:start="8:44" pos:end="8:44">.</operator><name pos:start="8:45" pos:end="8:45">f</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:23">predictor</name><init pos:start="9:24" pos:end="9:51">= <expr pos:start="9:26" pos:end="9:51"><name pos:start="9:26" pos:end="9:49"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:49">prediction_method</name></name><operator pos:start="9:50" pos:end="9:50">+</operator><literal type="number" pos:start="9:51" pos:end="9:51">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:83"><decl pos:start="10:5" pos:end="10:82"><type pos:start="10:5" pos:end="10:13"><specifier pos:start="10:5" pos:end="10:9">const</specifier> <name pos:start="10:11" pos:end="10:13">int</name></type> <name pos:start="10:15" pos:end="10:22">mb_width</name>  <init pos:start="10:25" pos:end="10:82">= <expr pos:start="10:27" pos:end="10:82"><operator pos:start="10:27" pos:end="10:27">(</operator><name pos:start="10:28" pos:end="10:32">width</name>  <operator pos:start="10:35" pos:end="10:35">+</operator> <name pos:start="10:37" pos:end="10:55"><name pos:start="10:37" pos:end="10:37">s</name><operator pos:start="10:38" pos:end="10:39">-&gt;</operator><name pos:start="10:40" pos:end="10:52">mjpeg_hsample</name><index pos:start="10:53" pos:end="10:55">[<expr pos:start="10:54" pos:end="10:54"><literal type="number" pos:start="10:54" pos:end="10:54">0</literal></expr>]</index></name> <operator pos:start="10:57" pos:end="10:57">-</operator> <literal type="number" pos:start="10:59" pos:end="10:59">1</literal><operator pos:start="10:60" pos:end="10:60">)</operator> <operator pos:start="10:62" pos:end="10:62">/</operator> <name pos:start="10:64" pos:end="10:82"><name pos:start="10:64" pos:end="10:64">s</name><operator pos:start="10:65" pos:end="10:66">-&gt;</operator><name pos:start="10:67" pos:end="10:79">mjpeg_hsample</name><index pos:start="10:80" pos:end="10:82">[<expr pos:start="10:81" pos:end="10:81"><literal type="number" pos:start="10:81" pos:end="10:81">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:83"><decl pos:start="11:5" pos:end="11:82"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:23">mb_height</name> <init pos:start="11:25" pos:end="11:82">= <expr pos:start="11:27" pos:end="11:82"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:33">height</name> <operator pos:start="11:35" pos:end="11:35">+</operator> <name pos:start="11:37" pos:end="11:55"><name pos:start="11:37" pos:end="11:37">s</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:52">mjpeg_vsample</name><index pos:start="11:53" pos:end="11:55">[<expr pos:start="11:54" pos:end="11:54"><literal type="number" pos:start="11:54" pos:end="11:54">0</literal></expr>]</index></name> <operator pos:start="11:57" pos:end="11:57">-</operator> <literal type="number" pos:start="11:59" pos:end="11:59">1</literal><operator pos:start="11:60" pos:end="11:60">)</operator> <operator pos:start="11:62" pos:end="11:62">/</operator> <name pos:start="11:64" pos:end="11:82"><name pos:start="11:64" pos:end="11:64">s</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:79">mjpeg_vsample</name><index pos:start="11:80" pos:end="11:82">[<expr pos:start="11:81" pos:end="11:81"><literal type="number" pos:start="11:81" pos:end="11:81">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:47"><decl pos:start="12:5" pos:end="12:11"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:11">ret</name></decl>, <decl pos:start="12:14" pos:end="12:46"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:14" pos:end="12:25">max_pkt_size</name> <init pos:start="12:27" pos:end="12:46">= <expr pos:start="12:29" pos:end="12:46"><name pos:start="12:29" pos:end="12:46">FF_MIN_BUFFER_SIZE</name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="13:5" pos:end="119:13"><if pos:start="13:5" pos:end="14:47">if <condition pos:start="13:8" pos:end="13:42">(<expr pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:22">pix_fmt</name></name> <operator pos:start="13:24" pos:end="13:25">==</operator> <name pos:start="13:27" pos:end="13:41">AV_PIX_FMT_BGRA</name></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:47"><block_content pos:start="14:9" pos:end="14:47">
        <expr_stmt pos:start="14:9" pos:end="14:47"><expr pos:start="14:9" pos:end="14:46"><name pos:start="14:9" pos:end="14:20">max_pkt_size</name> <operator pos:start="14:22" pos:end="14:23">+=</operator> <name pos:start="14:25" pos:end="14:29">width</name> <operator pos:start="14:31" pos:end="14:31">*</operator> <name pos:start="14:33" pos:end="14:38">height</name> <operator pos:start="14:40" pos:end="14:40">*</operator> <literal type="number" pos:start="14:42" pos:end="14:42">3</literal> <operator pos:start="14:44" pos:end="14:44">*</operator> <literal type="number" pos:start="14:46" pos:end="14:46">4</literal></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="15:5" pos:end="119:13">else <block pos:start="15:10" pos:end="119:13">{<block_content pos:start="16:9" pos:end="119:13">
        <expr_stmt pos:start="16:9" pos:end="17:68"><expr pos:start="16:9" pos:end="17:67"><name pos:start="16:9" pos:end="16:20">max_pkt_size</name> <operator pos:start="16:22" pos:end="16:23">+=</operator> <name pos:start="16:25" pos:end="16:32">mb_width</name> <operator pos:start="16:34" pos:end="16:34">*</operator> <name pos:start="16:36" pos:end="16:44">mb_height</name> <operator pos:start="16:46" pos:end="16:46">*</operator> <literal type="number" pos:start="16:48" pos:end="16:48">3</literal> <operator pos:start="16:50" pos:end="16:50">*</operator> <literal type="number" pos:start="16:52" pos:end="16:52">4</literal>
                        <operator pos:start="17:25" pos:end="17:25">*</operator> <name pos:start="17:27" pos:end="17:45"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:42">mjpeg_hsample</name><index pos:start="17:43" pos:end="17:45">[<expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">0</literal></expr>]</index></name> <operator pos:start="17:47" pos:end="17:47">*</operator> <name pos:start="17:49" pos:end="17:67"><name pos:start="17:49" pos:end="17:49">s</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:64">mjpeg_vsample</name><index pos:start="17:65" pos:end="17:67">[<expr pos:start="17:66" pos:end="17:66"><literal type="number" pos:start="17:66" pos:end="17:66">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="19:48"><if pos:start="18:5" pos:end="19:48">if <condition pos:start="18:8" pos:end="18:63">(<expr pos:start="18:9" pos:end="18:62"><operator pos:start="18:9" pos:end="18:9">(</operator><name pos:start="18:10" pos:end="18:12">ret</name> <operator pos:start="18:14" pos:end="18:14">=</operator> <call pos:start="18:16" pos:end="18:57"><name pos:start="18:16" pos:end="18:31">ff_alloc_packet2</name><argument_list pos:start="18:32" pos:end="18:57">(<argument pos:start="18:33" pos:end="18:37"><expr pos:start="18:33" pos:end="18:37"><name pos:start="18:33" pos:end="18:37">avctx</name></expr></argument>, <argument pos:start="18:40" pos:end="18:42"><expr pos:start="18:40" pos:end="18:42"><name pos:start="18:40" pos:end="18:42">pkt</name></expr></argument>, <argument pos:start="18:45" pos:end="18:56"><expr pos:start="18:45" pos:end="18:56"><name pos:start="18:45" pos:end="18:56">max_pkt_size</name></expr></argument>)</argument_list></call><operator pos:start="18:58" pos:end="18:58">)</operator> <operator pos:start="18:60" pos:end="18:60">&lt;</operator> <literal type="number" pos:start="18:62" pos:end="18:62">0</literal></expr>)</condition><block type="pseudo" pos:start="19:5" pos:end="19:48"><block_content pos:start="19:5" pos:end="19:48">
    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><call pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:17">init_put_bits</name><argument_list pos:start="19:18" pos:end="19:47">(<argument pos:start="19:19" pos:end="19:24"><expr pos:start="19:19" pos:end="19:24"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:24">pb</name></name></expr></argument>, <argument pos:start="19:27" pos:end="19:35"><expr pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:29">pkt</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">data</name></name></expr></argument>, <argument pos:start="19:38" pos:end="19:46"><expr pos:start="19:38" pos:end="19:46"><name pos:start="19:38" pos:end="19:46"><name pos:start="19:38" pos:end="19:40">pkt</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:46">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:15"><expr pos:start="20:5" pos:end="20:14"><operator pos:start="20:5" pos:end="20:5">*</operator><name pos:start="20:6" pos:end="20:6">p</name> <operator pos:start="20:8" pos:end="20:8">=</operator> <operator pos:start="20:10" pos:end="20:10">*</operator><name pos:start="20:11" pos:end="20:14">pict</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:5">p</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">pict_type</name></name><operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:35">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:20"><expr pos:start="22:5" pos:end="22:19"><name pos:start="22:5" pos:end="22:16"><name pos:start="22:5" pos:end="22:5">p</name><operator pos:start="22:6" pos:end="22:7">-&gt;</operator><name pos:start="22:8" pos:end="22:16">key_frame</name></name><operator pos:start="22:17" pos:end="22:17">=</operator> <literal type="number" pos:start="22:19" pos:end="22:19">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><call pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:34">ff_mjpeg_encode_picture_header</name><argument_list pos:start="23:35" pos:end="23:37">(<argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:43"><expr pos:start="24:5" pos:end="24:42"><name pos:start="24:5" pos:end="24:18"><name pos:start="24:5" pos:end="24:5">s</name><operator pos:start="24:6" pos:end="24:7">-&gt;</operator><name pos:start="24:8" pos:end="24:18">header_bits</name></name><operator pos:start="24:19" pos:end="24:19">=</operator> <call pos:start="24:21" pos:end="24:42"><name pos:start="24:21" pos:end="24:34">put_bits_count</name><argument_list pos:start="24:35" pos:end="24:42">(<argument pos:start="24:36" pos:end="24:41"><expr pos:start="24:36" pos:end="24:41"><operator pos:start="24:36" pos:end="24:36">&amp;</operator><name pos:start="24:37" pos:end="24:41"><name pos:start="24:37" pos:end="24:37">s</name><operator pos:start="24:38" pos:end="24:39">-&gt;</operator><name pos:start="24:40" pos:end="24:41">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="119:13"><if pos:start="25:5" pos:end="119:13">if<condition pos:start="25:7" pos:end="27:46">(<expr pos:start="25:8" pos:end="27:45"><name pos:start="25:8" pos:end="25:21"><name pos:start="25:8" pos:end="25:12">avctx</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">pix_fmt</name></name> <operator pos:start="25:23" pos:end="25:24">==</operator> <name pos:start="25:26" pos:end="25:40">AV_PIX_FMT_BGR0</name>
        <operator pos:start="26:9" pos:end="26:10">||</operator> <name pos:start="26:12" pos:end="26:25"><name pos:start="26:12" pos:end="26:16">avctx</name><operator pos:start="26:17" pos:end="26:18">-&gt;</operator><name pos:start="26:19" pos:end="26:25">pix_fmt</name></name> <operator pos:start="26:27" pos:end="26:28">==</operator> <name pos:start="26:30" pos:end="26:44">AV_PIX_FMT_BGRA</name>
        <operator pos:start="27:9" pos:end="27:10">||</operator> <name pos:start="27:12" pos:end="27:25"><name pos:start="27:12" pos:end="27:16">avctx</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:25">pix_fmt</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <name pos:start="27:30" pos:end="27:45">AV_PIX_FMT_BGR24</name></expr>)</condition><block pos:start="27:47" pos:end="119:13">{<block_content pos:start="28:9" pos:end="119:13">
        <decl_stmt pos:start="28:9" pos:end="28:20"><decl pos:start="28:9" pos:end="28:13"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">x</name></decl>, <decl pos:start="28:16" pos:end="28:16"><type ref="prev" pos:start="28:9" pos:end="28:11"/><name pos:start="28:16" pos:end="28:16">y</name></decl>, <decl pos:start="28:19" pos:end="28:19"><type ref="prev" pos:start="28:9" pos:end="28:11"/><name pos:start="28:19" pos:end="28:19">i</name></decl>;</decl_stmt>
        <decl_stmt pos:start="29:9" pos:end="29:43"><decl pos:start="29:9" pos:end="29:42"><type pos:start="29:9" pos:end="29:17"><specifier pos:start="29:9" pos:end="29:13">const</specifier> <name pos:start="29:15" pos:end="29:17">int</name></type> <name pos:start="29:19" pos:end="29:26">linesize</name><init pos:start="29:27" pos:end="29:42">= <expr pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:29">p</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:39">linesize</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:57"><expr pos:start="30:9" pos:end="30:56"><call pos:start="30:9" pos:end="30:26"><name pos:start="30:9" pos:end="30:16">uint16_t</name> <argument_list pos:start="30:18" pos:end="30:26">(<argument pos:start="30:19" pos:end="30:25"><expr pos:start="30:19" pos:end="30:25"><operator pos:start="30:19" pos:end="30:19">*</operator><name pos:start="30:20" pos:end="30:25">buffer</name></expr></argument>)</argument_list></call><index pos:start="30:27" pos:end="30:29">[<expr pos:start="30:28" pos:end="30:28"><literal type="number" pos:start="30:28" pos:end="30:28">4</literal></expr>]</index><operator pos:start="30:30" pos:end="30:30">=</operator> <operator pos:start="30:32" pos:end="30:32">(</operator><name pos:start="30:33" pos:end="30:36">void</name> <operator pos:start="30:38" pos:end="30:38">*</operator><operator pos:start="30:39" pos:end="30:39">)</operator> <name pos:start="30:41" pos:end="30:56"><name pos:start="30:41" pos:end="30:41">s</name><operator pos:start="30:42" pos:end="30:43">-&gt;</operator><name pos:start="30:44" pos:end="30:56">rd_scratchpad</name></name></expr>;</expr_stmt>
        <decl_stmt pos:start="31:9" pos:end="31:40"><decl pos:start="31:9" pos:end="31:19"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">left</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">3</literal></expr>]</index></name></decl>, <decl pos:start="31:22" pos:end="31:27"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:24">top</name><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">3</literal></expr>]</index></name></decl>, <decl pos:start="31:30" pos:end="31:39"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:30" pos:end="31:39"><name pos:start="31:30" pos:end="31:36">topleft</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">3</literal></expr>]</index></name></decl>;</decl_stmt>
        <for pos:start="32:9" pos:end="119:13">for<control pos:start="32:12" pos:end="32:26">(<init pos:start="32:13" pos:end="32:16"><expr pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:13">i</name><operator pos:start="32:14" pos:end="32:14">=</operator><literal type="number" pos:start="32:15" pos:end="32:15">0</literal></expr>;</init> <condition pos:start="32:18" pos:end="32:21"><expr pos:start="32:18" pos:end="32:20"><name pos:start="32:18" pos:end="32:18">i</name><operator pos:start="32:19" pos:end="32:19">&lt;</operator><literal type="number" pos:start="32:20" pos:end="32:20">3</literal></expr>;</condition> <incr pos:start="32:23" pos:end="32:25"><expr pos:start="32:23" pos:end="32:25"><name pos:start="32:23" pos:end="32:23">i</name><operator pos:start="32:24" pos:end="32:25">++</operator></expr></incr>)</control><block pos:start="32:27" pos:end="119:13">{<block_content pos:start="33:13" pos:end="119:13">
            <expr_stmt pos:start="33:13" pos:end="33:39"><expr pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:18">buffer</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>]</index><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">i</name></expr>]</index></name><operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal> <operator pos:start="33:29" pos:end="33:30">&lt;&lt;</operator> <operator pos:start="33:32" pos:end="33:32">(</operator><literal type="number" pos:start="33:33" pos:end="33:35">9</literal> <operator pos:start="33:35" pos:end="33:35">-</operator> <literal type="number" pos:start="33:37" pos:end="33:37">1</literal><operator pos:start="33:38" pos:end="33:38">)</operator></expr>;</expr_stmt>
        <for pos:start="34:9" pos:end="119:13">for<control pos:start="34:12" pos:end="34:35">(<init pos:start="34:13" pos:end="34:18"><expr pos:start="34:13" pos:end="34:17"><name pos:start="34:13" pos:end="34:13">y</name> <operator pos:start="34:15" pos:end="34:15">=</operator> <literal type="number" pos:start="34:17" pos:end="34:17">0</literal></expr>;</init> <condition pos:start="34:20" pos:end="34:30"><expr pos:start="34:20" pos:end="34:29"><name pos:start="34:20" pos:end="34:20">y</name> <operator pos:start="34:22" pos:end="34:22">&lt;</operator> <name pos:start="34:24" pos:end="34:29">height</name></expr>;</condition> <incr pos:start="34:32" pos:end="34:34"><expr pos:start="34:32" pos:end="34:34"><name pos:start="34:32" pos:end="34:32">y</name><operator pos:start="34:33" pos:end="34:34">++</operator></expr></incr>)</control> <block pos:start="34:37" pos:end="119:13">{<block_content pos:start="35:13" pos:end="119:13">
            <decl_stmt pos:start="35:13" pos:end="35:60"><decl pos:start="35:13" pos:end="35:59"><type pos:start="35:13" pos:end="35:21"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:21">int</name></type> <name pos:start="35:23" pos:end="35:40">modified_predictor</name><init pos:start="35:41" pos:end="35:59">= <expr pos:start="35:43" pos:end="35:59"><ternary pos:start="35:43" pos:end="35:59"><condition pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:43"><name pos:start="35:43" pos:end="35:43">y</name></expr> ?</condition><then pos:start="35:47" pos:end="35:55"> <expr pos:start="35:47" pos:end="35:55"><name pos:start="35:47" pos:end="35:55">predictor</name></expr> </then><else pos:start="35:57" pos:end="35:59">: <expr pos:start="35:59" pos:end="35:59"><literal type="number" pos:start="35:59" pos:end="35:59">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="36:13" pos:end="36:55"><decl pos:start="36:13" pos:end="36:54"><type pos:start="36:13" pos:end="36:21"><name pos:start="36:13" pos:end="36:19">uint8_t</name> <modifier pos:start="36:21" pos:end="36:21">*</modifier></type><name pos:start="36:22" pos:end="36:24">ptr</name> <init pos:start="36:26" pos:end="36:54">= <expr pos:start="36:28" pos:end="36:54"><name pos:start="36:28" pos:end="36:37"><name pos:start="36:28" pos:end="36:28">p</name><operator pos:start="36:29" pos:end="36:30">-&gt;</operator><name pos:start="36:31" pos:end="36:34">data</name><index pos:start="36:35" pos:end="36:37">[<expr pos:start="36:36" pos:end="36:36"><literal type="number" pos:start="36:36" pos:end="36:36">0</literal></expr>]</index></name> <operator pos:start="36:39" pos:end="36:39">+</operator> <operator pos:start="36:41" pos:end="36:41">(</operator><name pos:start="36:42" pos:end="36:49">linesize</name> <operator pos:start="36:51" pos:end="36:51">*</operator> <name pos:start="36:53" pos:end="36:53">y</name><operator pos:start="36:54" pos:end="36:54">)</operator></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="37:13" pos:end="119:13"><if pos:start="37:13" pos:end="119:13">if<condition pos:start="37:15" pos:end="37:83">(<expr pos:start="37:16" pos:end="37:82"><name pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:20">pb</name><operator pos:start="37:21" pos:end="37:21">.</operator><name pos:start="37:22" pos:end="37:28">buf_end</name></name> <operator pos:start="37:30" pos:end="37:30">-</operator> <name pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:32">s</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:36">pb</name><operator pos:start="37:37" pos:end="37:37">.</operator><name pos:start="37:38" pos:end="37:40">buf</name></name> <operator pos:start="37:42" pos:end="37:42">-</operator> <operator pos:start="37:44" pos:end="37:44">(</operator><call pos:start="37:45" pos:end="37:66"><name pos:start="37:45" pos:end="37:58">put_bits_count</name><argument_list pos:start="37:59" pos:end="37:66">(<argument pos:start="37:60" pos:end="37:65"><expr pos:start="37:60" pos:end="37:65"><operator pos:start="37:60" pos:end="37:60">&amp;</operator><name pos:start="37:61" pos:end="37:65"><name pos:start="37:61" pos:end="37:61">s</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:65">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="37:67" pos:end="37:68">&gt;&gt;</operator><literal type="number" pos:start="37:69" pos:end="37:69">3</literal><operator pos:start="37:70" pos:end="37:70">)</operator> <operator pos:start="37:72" pos:end="37:72">&lt;</operator> <name pos:start="37:74" pos:end="37:78">width</name><operator pos:start="37:79" pos:end="37:79">*</operator><literal type="number" pos:start="37:80" pos:end="37:80">3</literal><operator pos:start="37:81" pos:end="37:81">*</operator><literal type="number" pos:start="37:82" pos:end="37:82">4</literal></expr>)</condition><block pos:start="37:84" pos:end="119:13">{<block_content pos:start="38:17" pos:end="119:13">
                <expr_stmt pos:start="38:17" pos:end="38:76"><expr pos:start="38:17" pos:end="38:75"><call pos:start="38:17" pos:end="38:75"><name pos:start="38:17" pos:end="38:22">av_log</name><argument_list pos:start="38:23" pos:end="38:75">(<argument pos:start="38:24" pos:end="38:31"><expr pos:start="38:24" pos:end="38:31"><name pos:start="38:24" pos:end="38:31"><name pos:start="38:24" pos:end="38:24">s</name><operator pos:start="38:25" pos:end="38:26">-&gt;</operator><name pos:start="38:27" pos:end="38:31">avctx</name></name></expr></argument>, <argument pos:start="38:34" pos:end="38:45"><expr pos:start="38:34" pos:end="38:45"><name pos:start="38:34" pos:end="38:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="38:48" pos:end="38:74"><expr pos:start="38:48" pos:end="38:74"><literal type="string" pos:start="38:48" pos:end="38:74">"encoded frame too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="39:17" pos:end="39:26">return <expr pos:start="39:24" pos:end="39:25"><operator pos:start="39:24" pos:end="39:24">-</operator><literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr>;</return>
            <for pos:start="40:13" pos:end="119:13">for<control pos:start="40:16" pos:end="40:30">(<init pos:start="40:17" pos:end="40:20"><expr pos:start="40:17" pos:end="40:19"><name pos:start="40:17" pos:end="40:17">i</name><operator pos:start="40:18" pos:end="40:18">=</operator><literal type="number" pos:start="40:19" pos:end="40:19">0</literal></expr>;</init> <condition pos:start="40:22" pos:end="40:25"><expr pos:start="40:22" pos:end="40:24"><name pos:start="40:22" pos:end="40:22">i</name><operator pos:start="40:23" pos:end="40:23">&lt;</operator><literal type="number" pos:start="40:24" pos:end="40:24">3</literal></expr>;</condition> <incr pos:start="40:27" pos:end="40:29"><expr pos:start="40:27" pos:end="40:29"><name pos:start="40:27" pos:end="40:27">i</name><operator pos:start="40:28" pos:end="40:29">++</operator></expr></incr>)</control><block pos:start="40:31" pos:end="119:13">{<block_content pos:start="41:17" pos:end="119:13">
                <expr_stmt pos:start="41:17" pos:end="41:58"><expr pos:start="41:17" pos:end="41:57"><name pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:19">top</name><index pos:start="41:20" pos:end="41:22">[<expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">i</name></expr>]</index></name><operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:28">left</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr>]</index></name><operator pos:start="41:32" pos:end="41:32">=</operator> <name pos:start="41:34" pos:end="41:43"><name pos:start="41:34" pos:end="41:40">topleft</name><index pos:start="41:41" pos:end="41:43">[<expr pos:start="41:42" pos:end="41:42"><name pos:start="41:42" pos:end="41:42">i</name></expr>]</index></name><operator pos:start="41:44" pos:end="41:44">=</operator> <name pos:start="41:46" pos:end="41:57"><name pos:start="41:46" pos:end="41:51">buffer</name><index pos:start="41:52" pos:end="41:54">[<expr pos:start="41:53" pos:end="41:53"><literal type="number" pos:start="41:53" pos:end="41:53">0</literal></expr>]</index><index pos:start="41:55" pos:end="41:57">[<expr pos:start="41:56" pos:end="41:56"><name pos:start="41:56" pos:end="41:56">i</name></expr>]</index></name></expr>;</expr_stmt>
            <for pos:start="42:13" pos:end="119:13">for<control pos:start="42:16" pos:end="42:38">(<init pos:start="42:17" pos:end="42:22"><expr pos:start="42:17" pos:end="42:21"><name pos:start="42:17" pos:end="42:17">x</name> <operator pos:start="42:19" pos:end="42:19">=</operator> <literal type="number" pos:start="42:21" pos:end="42:21">0</literal></expr>;</init> <condition pos:start="42:24" pos:end="42:33"><expr pos:start="42:24" pos:end="42:32"><name pos:start="42:24" pos:end="42:24">x</name> <operator pos:start="42:26" pos:end="42:26">&lt;</operator> <name pos:start="42:28" pos:end="42:32">width</name></expr>;</condition> <incr pos:start="42:35" pos:end="42:37"><expr pos:start="42:35" pos:end="42:37"><name pos:start="42:35" pos:end="42:35">x</name><operator pos:start="42:36" pos:end="42:37">++</operator></expr></incr>)</control> <block pos:start="42:40" pos:end="119:13">{<block_content pos:start="43:17" pos:end="119:13">
                <if_stmt pos:start="43:17" pos:end="119:13"><if pos:start="43:17" pos:end="47:17">if<condition pos:start="43:19" pos:end="43:54">(<expr pos:start="43:20" pos:end="43:53"><name pos:start="43:20" pos:end="43:33"><name pos:start="43:20" pos:end="43:24">avctx</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:33">pix_fmt</name></name> <operator pos:start="43:35" pos:end="43:36">==</operator> <name pos:start="43:38" pos:end="43:53">AV_PIX_FMT_BGR24</name></expr>)</condition><block pos:start="43:55" pos:end="47:17">{<block_content pos:start="44:21" pos:end="46:79">
                    <expr_stmt pos:start="44:21" pos:end="44:67"><expr pos:start="44:21" pos:end="44:66"><name pos:start="44:21" pos:end="44:32"><name pos:start="44:21" pos:end="44:26">buffer</name><index pos:start="44:27" pos:end="44:29">[<expr pos:start="44:28" pos:end="44:28"><name pos:start="44:28" pos:end="44:28">x</name></expr>]</index><index pos:start="44:30" pos:end="44:32">[<expr pos:start="44:31" pos:end="44:31"><literal type="number" pos:start="44:31" pos:end="44:31">1</literal></expr>]</index></name> <operator pos:start="44:34" pos:end="44:34">=</operator> <name pos:start="44:36" pos:end="44:45"><name pos:start="44:36" pos:end="44:38">ptr</name><index pos:start="44:39" pos:end="44:45">[<expr pos:start="44:40" pos:end="44:44"><literal type="number" pos:start="44:40" pos:end="44:40">3</literal><operator pos:start="44:41" pos:end="44:41">*</operator><name pos:start="44:42" pos:end="44:42">x</name><operator pos:start="44:43" pos:end="44:43">+</operator><literal type="number" pos:start="44:44" pos:end="44:44">0</literal></expr>]</index></name> <operator pos:start="44:47" pos:end="44:47">-</operator> <name pos:start="44:49" pos:end="44:58"><name pos:start="44:49" pos:end="44:51">ptr</name><index pos:start="44:52" pos:end="44:58">[<expr pos:start="44:53" pos:end="44:57"><literal type="number" pos:start="44:53" pos:end="44:53">3</literal><operator pos:start="44:54" pos:end="44:54">*</operator><name pos:start="44:55" pos:end="44:55">x</name><operator pos:start="44:56" pos:end="44:56">+</operator><literal type="number" pos:start="44:57" pos:end="44:57">1</literal></expr>]</index></name> <operator pos:start="44:60" pos:end="44:60">+</operator> <literal type="number" pos:start="44:62" pos:end="44:66">0x100</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="45:21" pos:end="45:67"><expr pos:start="45:21" pos:end="45:66"><name pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:26">buffer</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">x</name></expr>]</index><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">2</literal></expr>]</index></name> <operator pos:start="45:34" pos:end="45:34">=</operator> <name pos:start="45:36" pos:end="45:45"><name pos:start="45:36" pos:end="45:38">ptr</name><index pos:start="45:39" pos:end="45:45">[<expr pos:start="45:40" pos:end="45:44"><literal type="number" pos:start="45:40" pos:end="45:40">3</literal><operator pos:start="45:41" pos:end="45:41">*</operator><name pos:start="45:42" pos:end="45:42">x</name><operator pos:start="45:43" pos:end="45:43">+</operator><literal type="number" pos:start="45:44" pos:end="45:44">2</literal></expr>]</index></name> <operator pos:start="45:47" pos:end="45:47">-</operator> <name pos:start="45:49" pos:end="45:58"><name pos:start="45:49" pos:end="45:51">ptr</name><index pos:start="45:52" pos:end="45:58">[<expr pos:start="45:53" pos:end="45:57"><literal type="number" pos:start="45:53" pos:end="45:53">3</literal><operator pos:start="45:54" pos:end="45:54">*</operator><name pos:start="45:55" pos:end="45:55">x</name><operator pos:start="45:56" pos:end="45:56">+</operator><literal type="number" pos:start="45:57" pos:end="45:57">1</literal></expr>]</index></name> <operator pos:start="45:60" pos:end="45:60">+</operator> <literal type="number" pos:start="45:62" pos:end="45:66">0x100</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="46:21" pos:end="46:79"><expr pos:start="46:21" pos:end="46:78"><name pos:start="46:21" pos:end="46:32"><name pos:start="46:21" pos:end="46:26">buffer</name><index pos:start="46:27" pos:end="46:29">[<expr pos:start="46:28" pos:end="46:28"><name pos:start="46:28" pos:end="46:28">x</name></expr>]</index><index pos:start="46:30" pos:end="46:32">[<expr pos:start="46:31" pos:end="46:31"><literal type="number" pos:start="46:31" pos:end="46:31">0</literal></expr>]</index></name> <operator pos:start="46:34" pos:end="46:34">=</operator> <operator pos:start="46:36" pos:end="46:36">(</operator><name pos:start="46:37" pos:end="46:46"><name pos:start="46:37" pos:end="46:39">ptr</name><index pos:start="46:40" pos:end="46:46">[<expr pos:start="46:41" pos:end="46:45"><literal type="number" pos:start="46:41" pos:end="46:41">3</literal><operator pos:start="46:42" pos:end="46:42">*</operator><name pos:start="46:43" pos:end="46:43">x</name><operator pos:start="46:44" pos:end="46:44">+</operator><literal type="number" pos:start="46:45" pos:end="46:45">0</literal></expr>]</index></name> <operator pos:start="46:48" pos:end="46:48">+</operator> <literal type="number" pos:start="46:50" pos:end="46:50">2</literal><operator pos:start="46:51" pos:end="46:51">*</operator><name pos:start="46:52" pos:end="46:61"><name pos:start="46:52" pos:end="46:54">ptr</name><index pos:start="46:55" pos:end="46:61">[<expr pos:start="46:56" pos:end="46:60"><literal type="number" pos:start="46:56" pos:end="46:56">3</literal><operator pos:start="46:57" pos:end="46:57">*</operator><name pos:start="46:58" pos:end="46:58">x</name><operator pos:start="46:59" pos:end="46:59">+</operator><literal type="number" pos:start="46:60" pos:end="46:60">1</literal></expr>]</index></name> <operator pos:start="46:63" pos:end="46:63">+</operator> <name pos:start="46:65" pos:end="46:74"><name pos:start="46:65" pos:end="46:67">ptr</name><index pos:start="46:68" pos:end="46:74">[<expr pos:start="46:69" pos:end="46:73"><literal type="number" pos:start="46:69" pos:end="46:69">3</literal><operator pos:start="46:70" pos:end="46:70">*</operator><name pos:start="46:71" pos:end="46:71">x</name><operator pos:start="46:72" pos:end="46:72">+</operator><literal type="number" pos:start="46:73" pos:end="46:73">2</literal></expr>]</index></name><operator pos:start="46:75" pos:end="46:75">)</operator><operator pos:start="46:76" pos:end="46:77">&gt;&gt;</operator><literal type="number" pos:start="46:78" pos:end="46:78">2</literal></expr>;</expr_stmt>
                </block_content>}</block></if><else pos:start="47:18" pos:end="119:13">else<block pos:start="47:22" pos:end="119:13">{<block_content pos:start="48:17" pos:end="119:13">
                <expr_stmt pos:start="48:17" pos:end="48:63"><expr pos:start="48:17" pos:end="48:62"><name pos:start="48:17" pos:end="48:28"><name pos:start="48:17" pos:end="48:22">buffer</name><index pos:start="48:23" pos:end="48:25">[<expr pos:start="48:24" pos:end="48:24"><name pos:start="48:24" pos:end="48:24">x</name></expr>]</index><index pos:start="48:26" pos:end="48:28">[<expr pos:start="48:27" pos:end="48:27"><literal type="number" pos:start="48:27" pos:end="48:27">1</literal></expr>]</index></name> <operator pos:start="48:30" pos:end="48:30">=</operator> <name pos:start="48:32" pos:end="48:41"><name pos:start="48:32" pos:end="48:34">ptr</name><index pos:start="48:35" pos:end="48:41">[<expr pos:start="48:36" pos:end="48:40"><literal type="number" pos:start="48:36" pos:end="48:36">4</literal><operator pos:start="48:37" pos:end="48:37">*</operator><name pos:start="48:38" pos:end="48:38">x</name><operator pos:start="48:39" pos:end="48:39">+</operator><literal type="number" pos:start="48:40" pos:end="48:40">0</literal></expr>]</index></name> <operator pos:start="48:43" pos:end="48:43">-</operator> <name pos:start="48:45" pos:end="48:54"><name pos:start="48:45" pos:end="48:47">ptr</name><index pos:start="48:48" pos:end="48:54">[<expr pos:start="48:49" pos:end="48:53"><literal type="number" pos:start="48:49" pos:end="48:49">4</literal><operator pos:start="48:50" pos:end="48:50">*</operator><name pos:start="48:51" pos:end="48:51">x</name><operator pos:start="48:52" pos:end="48:52">+</operator><literal type="number" pos:start="48:53" pos:end="48:53">1</literal></expr>]</index></name> <operator pos:start="48:56" pos:end="48:56">+</operator> <literal type="number" pos:start="48:58" pos:end="48:62">0x100</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="49:17" pos:end="49:63"><expr pos:start="49:17" pos:end="49:62"><name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:22">buffer</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">x</name></expr>]</index><index pos:start="49:26" pos:end="49:28">[<expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">2</literal></expr>]</index></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <name pos:start="49:32" pos:end="49:41"><name pos:start="49:32" pos:end="49:34">ptr</name><index pos:start="49:35" pos:end="49:41">[<expr pos:start="49:36" pos:end="49:40"><literal type="number" pos:start="49:36" pos:end="49:36">4</literal><operator pos:start="49:37" pos:end="49:37">*</operator><name pos:start="49:38" pos:end="49:38">x</name><operator pos:start="49:39" pos:end="49:39">+</operator><literal type="number" pos:start="49:40" pos:end="49:40">2</literal></expr>]</index></name> <operator pos:start="49:43" pos:end="49:43">-</operator> <name pos:start="49:45" pos:end="49:54"><name pos:start="49:45" pos:end="49:47">ptr</name><index pos:start="49:48" pos:end="49:54">[<expr pos:start="49:49" pos:end="49:53"><literal type="number" pos:start="49:49" pos:end="49:49">4</literal><operator pos:start="49:50" pos:end="49:50">*</operator><name pos:start="49:51" pos:end="49:51">x</name><operator pos:start="49:52" pos:end="49:52">+</operator><literal type="number" pos:start="49:53" pos:end="49:53">1</literal></expr>]</index></name> <operator pos:start="49:56" pos:end="49:56">+</operator> <literal type="number" pos:start="49:58" pos:end="49:62">0x100</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="50:17" pos:end="50:75"><expr pos:start="50:17" pos:end="50:74"><name pos:start="50:17" pos:end="50:28"><name pos:start="50:17" pos:end="50:22">buffer</name><index pos:start="50:23" pos:end="50:25">[<expr pos:start="50:24" pos:end="50:24"><name pos:start="50:24" pos:end="50:24">x</name></expr>]</index><index pos:start="50:26" pos:end="50:28">[<expr pos:start="50:27" pos:end="50:27"><literal type="number" pos:start="50:27" pos:end="50:27">0</literal></expr>]</index></name> <operator pos:start="50:30" pos:end="50:30">=</operator> <operator pos:start="50:32" pos:end="50:32">(</operator><name pos:start="50:33" pos:end="50:42"><name pos:start="50:33" pos:end="50:35">ptr</name><index pos:start="50:36" pos:end="50:42">[<expr pos:start="50:37" pos:end="50:41"><literal type="number" pos:start="50:37" pos:end="50:37">4</literal><operator pos:start="50:38" pos:end="50:38">*</operator><name pos:start="50:39" pos:end="50:39">x</name><operator pos:start="50:40" pos:end="50:40">+</operator><literal type="number" pos:start="50:41" pos:end="50:41">0</literal></expr>]</index></name> <operator pos:start="50:44" pos:end="50:44">+</operator> <literal type="number" pos:start="50:46" pos:end="50:46">2</literal><operator pos:start="50:47" pos:end="50:47">*</operator><name pos:start="50:48" pos:end="50:57"><name pos:start="50:48" pos:end="50:50">ptr</name><index pos:start="50:51" pos:end="50:57">[<expr pos:start="50:52" pos:end="50:56"><literal type="number" pos:start="50:52" pos:end="50:52">4</literal><operator pos:start="50:53" pos:end="50:53">*</operator><name pos:start="50:54" pos:end="50:54">x</name><operator pos:start="50:55" pos:end="50:55">+</operator><literal type="number" pos:start="50:56" pos:end="50:56">1</literal></expr>]</index></name> <operator pos:start="50:59" pos:end="50:59">+</operator> <name pos:start="50:61" pos:end="50:70"><name pos:start="50:61" pos:end="50:63">ptr</name><index pos:start="50:64" pos:end="50:70">[<expr pos:start="50:65" pos:end="50:69"><literal type="number" pos:start="50:65" pos:end="50:65">4</literal><operator pos:start="50:66" pos:end="50:66">*</operator><name pos:start="50:67" pos:end="50:67">x</name><operator pos:start="50:68" pos:end="50:68">+</operator><literal type="number" pos:start="50:69" pos:end="50:69">2</literal></expr>]</index></name><operator pos:start="50:71" pos:end="50:71">)</operator><operator pos:start="50:72" pos:end="50:73">&gt;&gt;</operator><literal type="number" pos:start="50:74" pos:end="50:74">2</literal></expr>;</expr_stmt>
                <for pos:start="51:17" pos:end="62:5">for<control pos:start="51:20" pos:end="51:32">(<init pos:start="51:21" pos:end="51:24"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:21">i</name><operator pos:start="51:22" pos:end="51:22">=</operator><literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>;</init><condition pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:25">i</name><operator pos:start="51:26" pos:end="51:26">&lt;</operator><literal type="number" pos:start="51:27" pos:end="51:27">3</literal></expr>;</condition><incr pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:29">i</name><operator pos:start="51:30" pos:end="51:31">++</operator></expr></incr>)</control> <block pos:start="51:34" pos:end="62:5">{<block_content pos:start="52:21" pos:end="61:110">
                    <decl_stmt pos:start="52:21" pos:end="52:35"><decl pos:start="52:21" pos:end="52:28"><type pos:start="52:21" pos:end="52:23"><name pos:start="52:21" pos:end="52:23">int</name></type> <name pos:start="52:25" pos:end="52:28">pred</name></decl>, <decl pos:start="52:31" pos:end="52:34"><type ref="prev" pos:start="52:21" pos:end="52:23"/><name pos:start="52:31" pos:end="52:34">diff</name></decl>;</decl_stmt>
                    <expr_stmt pos:start="53:21" pos:end="53:83"><expr pos:start="53:21" pos:end="53:82"><call pos:start="53:21" pos:end="53:82"><name pos:start="53:21" pos:end="53:27">PREDICT</name><argument_list pos:start="53:28" pos:end="53:82">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">pred</name></expr></argument>, <argument pos:start="53:35" pos:end="53:44"><expr pos:start="53:35" pos:end="53:44"><name pos:start="53:35" pos:end="53:44"><name pos:start="53:35" pos:end="53:41">topleft</name><index pos:start="53:42" pos:end="53:44">[<expr pos:start="53:43" pos:end="53:43"><name pos:start="53:43" pos:end="53:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:47" pos:end="53:52"><expr pos:start="53:47" pos:end="53:52"><name pos:start="53:47" pos:end="53:52"><name pos:start="53:47" pos:end="53:49">top</name><index pos:start="53:50" pos:end="53:52">[<expr pos:start="53:51" pos:end="53:51"><name pos:start="53:51" pos:end="53:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:55" pos:end="53:61"><expr pos:start="53:55" pos:end="53:61"><name pos:start="53:55" pos:end="53:61"><name pos:start="53:55" pos:end="53:58">left</name><index pos:start="53:59" pos:end="53:61">[<expr pos:start="53:60" pos:end="53:60"><name pos:start="53:60" pos:end="53:60">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:64" pos:end="53:81"><expr pos:start="53:64" pos:end="53:81"><name pos:start="53:64" pos:end="53:81">modified_predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="54:21" pos:end="54:39"><expr pos:start="54:21" pos:end="54:38"><name pos:start="54:21" pos:end="54:30"><name pos:start="54:21" pos:end="54:27">topleft</name><index pos:start="54:28" pos:end="54:30">[<expr pos:start="54:29" pos:end="54:29"><name pos:start="54:29" pos:end="54:29">i</name></expr>]</index></name><operator pos:start="54:31" pos:end="54:31">=</operator> <name pos:start="54:33" pos:end="54:38"><name pos:start="54:33" pos:end="54:35">top</name><index pos:start="54:36" pos:end="54:38">[<expr pos:start="54:37" pos:end="54:37"><name pos:start="54:37" pos:end="54:37">i</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="55:21" pos:end="55:43"><expr pos:start="55:21" pos:end="55:42"><name pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:23">top</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">i</name></expr>]</index></name><operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:34">buffer</name><index pos:start="55:35" pos:end="55:39">[<expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">x</name><operator pos:start="55:37" pos:end="55:37">+</operator><literal type="number" pos:start="55:38" pos:end="55:38">1</literal></expr>]</index><index pos:start="55:40" pos:end="55:42">[<expr pos:start="55:41" pos:end="55:41"><name pos:start="55:41" pos:end="55:41">i</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="56:21" pos:end="56:42"><expr pos:start="56:21" pos:end="56:41"><name pos:start="56:21" pos:end="56:27"><name pos:start="56:21" pos:end="56:24">left</name><index pos:start="56:25" pos:end="56:27">[<expr pos:start="56:26" pos:end="56:26"><name pos:start="56:26" pos:end="56:26">i</name></expr>]</index></name><operator pos:start="56:28" pos:end="56:28">=</operator> <name pos:start="56:30" pos:end="56:41"><name pos:start="56:30" pos:end="56:35">buffer</name><index pos:start="56:36" pos:end="56:38">[<expr pos:start="56:37" pos:end="56:37"><name pos:start="56:37" pos:end="56:37">x</name></expr>]</index><index pos:start="56:39" pos:end="56:41">[<expr pos:start="56:40" pos:end="56:40"><name pos:start="56:40" pos:end="56:40">i</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="57:21" pos:end="57:67"><expr pos:start="57:21" pos:end="57:66"><name pos:start="57:21" pos:end="57:24">diff</name><operator pos:start="57:25" pos:end="57:25">=</operator> <operator pos:start="57:27" pos:end="57:27">(</operator><operator pos:start="57:28" pos:end="57:28">(</operator><name pos:start="57:29" pos:end="57:35"><name pos:start="57:29" pos:end="57:32">left</name><index pos:start="57:33" pos:end="57:35">[<expr pos:start="57:34" pos:end="57:34"><name pos:start="57:34" pos:end="57:34">i</name></expr>]</index></name> <operator pos:start="57:37" pos:end="57:37">-</operator> <name pos:start="57:39" pos:end="57:42">pred</name> <operator pos:start="57:44" pos:end="57:44">+</operator> <literal type="number" pos:start="57:46" pos:end="57:50">0x100</literal><operator pos:start="57:51" pos:end="57:51">)</operator><operator pos:start="57:52" pos:end="57:52">&amp;</operator><literal type="number" pos:start="57:53" pos:end="57:57">0x1FF</literal><operator pos:start="57:58" pos:end="57:58">)</operator> <operator pos:start="57:60" pos:end="57:60">-</operator> <literal type="number" pos:start="57:62" pos:end="57:66">0x100</literal></expr>;</expr_stmt>
                    <if_stmt pos:start="58:21" pos:end="61:110"><if pos:start="58:21" pos:end="59:106">if<condition pos:start="58:23" pos:end="58:28">(<expr pos:start="58:24" pos:end="58:27"><name pos:start="58:24" pos:end="58:24">i</name><operator pos:start="58:25" pos:end="58:26">==</operator><literal type="number" pos:start="58:27" pos:end="58:27">0</literal></expr>)</condition><block type="pseudo" pos:start="59:25" pos:end="59:106"><block_content pos:start="59:25" pos:end="59:106">
                        <expr_stmt pos:start="59:25" pos:end="59:106"><expr pos:start="59:25" pos:end="59:105"><call pos:start="59:25" pos:end="59:105"><name pos:start="59:25" pos:end="59:42">ff_mjpeg_encode_dc</name><argument_list pos:start="59:43" pos:end="59:105">(<argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><name pos:start="59:44" pos:end="59:44">s</name></expr></argument>, <argument pos:start="59:47" pos:end="59:50"><expr pos:start="59:47" pos:end="59:50"><name pos:start="59:47" pos:end="59:50">diff</name></expr></argument>, <argument pos:start="59:53" pos:end="59:77"><expr pos:start="59:53" pos:end="59:77"><name pos:start="59:53" pos:end="59:77"><name pos:start="59:53" pos:end="59:53">m</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:77">huff_size_dc_luminance</name></name></expr></argument>, <argument pos:start="59:80" pos:end="59:104"><expr pos:start="59:80" pos:end="59:104"><name pos:start="59:80" pos:end="59:104"><name pos:start="59:80" pos:end="59:80">m</name><operator pos:start="59:81" pos:end="59:82">-&gt;</operator><name pos:start="59:83" pos:end="59:104">huff_code_dc_luminance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="59:108" pos:end="59:119">//FIXME ugly</comment>
                    <else pos:start="60:21" pos:end="61:110">else<block type="pseudo" pos:start="61:25" pos:end="61:110"><block_content pos:start="61:25" pos:end="61:110">
                        <expr_stmt pos:start="61:25" pos:end="61:110"><expr pos:start="61:25" pos:end="61:109"><call pos:start="61:25" pos:end="61:109"><name pos:start="61:25" pos:end="61:42">ff_mjpeg_encode_dc</name><argument_list pos:start="61:43" pos:end="61:109">(<argument pos:start="61:44" pos:end="61:44"><expr pos:start="61:44" pos:end="61:44"><name pos:start="61:44" pos:end="61:44">s</name></expr></argument>, <argument pos:start="61:47" pos:end="61:50"><expr pos:start="61:47" pos:end="61:50"><name pos:start="61:47" pos:end="61:50">diff</name></expr></argument>, <argument pos:start="61:53" pos:end="61:79"><expr pos:start="61:53" pos:end="61:79"><name pos:start="61:53" pos:end="61:79"><name pos:start="61:53" pos:end="61:53">m</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:79">huff_size_dc_chrominance</name></name></expr></argument>, <argument pos:start="61:82" pos:end="61:108"><expr pos:start="61:82" pos:end="61:108"><name pos:start="61:82" pos:end="61:108"><name pos:start="61:82" pos:end="61:82">m</name><operator pos:start="61:83" pos:end="61:84">-&gt;</operator><name pos:start="61:85" pos:end="61:108">huff_code_dc_chrominance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></for><if_stmt pos:start="62:6" pos:end="119:13"><else pos:start="62:6" pos:end="119:13">else<block pos:start="62:10" pos:end="119:13">{<block_content pos:start="63:9" pos:end="119:13">
        <decl_stmt pos:start="63:9" pos:end="63:26"><decl pos:start="63:9" pos:end="63:16"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:16">mb_x</name></decl>, <decl pos:start="63:19" pos:end="63:22"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:19" pos:end="63:22">mb_y</name></decl>, <decl pos:start="63:25" pos:end="63:25"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:25" pos:end="63:25">i</name></decl>;</decl_stmt>
        <for pos:start="64:9" pos:end="119:13">for<control pos:start="64:12" pos:end="64:47">(<init pos:start="64:13" pos:end="64:21"><expr pos:start="64:13" pos:end="64:20"><name pos:start="64:13" pos:end="64:16">mb_y</name> <operator pos:start="64:18" pos:end="64:18">=</operator> <literal type="number" pos:start="64:20" pos:end="64:20">0</literal></expr>;</init> <condition pos:start="64:23" pos:end="64:39"><expr pos:start="64:23" pos:end="64:38"><name pos:start="64:23" pos:end="64:26">mb_y</name> <operator pos:start="64:28" pos:end="64:28">&lt;</operator> <name pos:start="64:30" pos:end="64:38">mb_height</name></expr>;</condition> <incr pos:start="64:41" pos:end="64:46"><expr pos:start="64:41" pos:end="64:46"><name pos:start="64:41" pos:end="64:44">mb_y</name><operator pos:start="64:45" pos:end="64:46">++</operator></expr></incr>)</control> <block pos:start="64:49" pos:end="119:13">{<block_content pos:start="65:13" pos:end="119:13">
            <if_stmt pos:start="65:13" pos:end="119:13"><if pos:start="65:13" pos:end="119:13">if<condition pos:start="65:15" pos:end="65:134">(<expr pos:start="65:16" pos:end="65:133"><name pos:start="65:16" pos:end="65:28"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:20">pb</name><operator pos:start="65:21" pos:end="65:21">.</operator><name pos:start="65:22" pos:end="65:28">buf_end</name></name> <operator pos:start="65:30" pos:end="65:30">-</operator> <name pos:start="65:32" pos:end="65:40"><name pos:start="65:32" pos:end="65:32">s</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:36">pb</name><operator pos:start="65:37" pos:end="65:37">.</operator><name pos:start="65:38" pos:end="65:40">buf</name></name> <operator pos:start="65:42" pos:end="65:42">-</operator> <operator pos:start="65:44" pos:end="65:44">(</operator><call pos:start="65:45" pos:end="65:66"><name pos:start="65:45" pos:end="65:58">put_bits_count</name><argument_list pos:start="65:59" pos:end="65:66">(<argument pos:start="65:60" pos:end="65:65"><expr pos:start="65:60" pos:end="65:65"><operator pos:start="65:60" pos:end="65:60">&amp;</operator><name pos:start="65:61" pos:end="65:65"><name pos:start="65:61" pos:end="65:61">s</name><operator pos:start="65:62" pos:end="65:63">-&gt;</operator><name pos:start="65:64" pos:end="65:65">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="65:67" pos:end="65:68">&gt;&gt;</operator><literal type="number" pos:start="65:69" pos:end="65:69">3</literal><operator pos:start="65:70" pos:end="65:70">)</operator> <operator pos:start="65:72" pos:end="65:72">&lt;</operator> <name pos:start="65:74" pos:end="65:81">mb_width</name> <operator pos:start="65:83" pos:end="65:83">*</operator> <literal type="number" pos:start="65:85" pos:end="65:85">4</literal> <operator pos:start="65:87" pos:end="65:87">*</operator> <literal type="number" pos:start="65:89" pos:end="65:89">3</literal> <operator pos:start="65:91" pos:end="65:91">*</operator> <name pos:start="65:93" pos:end="65:111"><name pos:start="65:93" pos:end="65:93">s</name><operator pos:start="65:94" pos:end="65:95">-&gt;</operator><name pos:start="65:96" pos:end="65:108">mjpeg_hsample</name><index pos:start="65:109" pos:end="65:111">[<expr pos:start="65:110" pos:end="65:110"><literal type="number" pos:start="65:110" pos:end="65:110">0</literal></expr>]</index></name> <operator pos:start="65:113" pos:end="65:113">*</operator> <name pos:start="65:115" pos:end="65:133"><name pos:start="65:115" pos:end="65:115">s</name><operator pos:start="65:116" pos:end="65:117">-&gt;</operator><name pos:start="65:118" pos:end="65:130">mjpeg_vsample</name><index pos:start="65:131" pos:end="65:133">[<expr pos:start="65:132" pos:end="65:132"><literal type="number" pos:start="65:132" pos:end="65:132">0</literal></expr>]</index></name></expr>)</condition><block pos:start="65:135" pos:end="119:13">{<block_content pos:start="66:17" pos:end="119:13">
                <expr_stmt pos:start="66:17" pos:end="66:76"><expr pos:start="66:17" pos:end="66:75"><call pos:start="66:17" pos:end="66:75"><name pos:start="66:17" pos:end="66:22">av_log</name><argument_list pos:start="66:23" pos:end="66:75">(<argument pos:start="66:24" pos:end="66:31"><expr pos:start="66:24" pos:end="66:31"><name pos:start="66:24" pos:end="66:31"><name pos:start="66:24" pos:end="66:24">s</name><operator pos:start="66:25" pos:end="66:26">-&gt;</operator><name pos:start="66:27" pos:end="66:31">avctx</name></name></expr></argument>, <argument pos:start="66:34" pos:end="66:45"><expr pos:start="66:34" pos:end="66:45"><name pos:start="66:34" pos:end="66:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="66:48" pos:end="66:74"><expr pos:start="66:48" pos:end="66:74"><literal type="string" pos:start="66:48" pos:end="66:74">"encoded frame too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="67:17" pos:end="67:26">return <expr pos:start="67:24" pos:end="67:25"><operator pos:start="67:24" pos:end="67:24">-</operator><literal type="number" pos:start="67:25" pos:end="67:25">1</literal></expr>;</return>
            <for pos:start="68:13" pos:end="119:13">for<control pos:start="68:16" pos:end="68:50">(<init pos:start="68:17" pos:end="68:25"><expr pos:start="68:17" pos:end="68:24"><name pos:start="68:17" pos:end="68:20">mb_x</name> <operator pos:start="68:22" pos:end="68:22">=</operator> <literal type="number" pos:start="68:24" pos:end="68:24">0</literal></expr>;</init> <condition pos:start="68:27" pos:end="68:42"><expr pos:start="68:27" pos:end="68:41"><name pos:start="68:27" pos:end="68:30">mb_x</name> <operator pos:start="68:32" pos:end="68:32">&lt;</operator> <name pos:start="68:34" pos:end="68:41">mb_width</name></expr>;</condition> <incr pos:start="68:44" pos:end="68:49"><expr pos:start="68:44" pos:end="68:49"><name pos:start="68:44" pos:end="68:47">mb_x</name><operator pos:start="68:48" pos:end="68:49">++</operator></expr></incr>)</control> <block pos:start="68:52" pos:end="119:13">{<block_content pos:start="69:17" pos:end="119:13">
                <if_stmt pos:start="69:17" pos:end="119:13"><if pos:start="69:17" pos:end="119:13">if<condition pos:start="69:19" pos:end="69:38">(<expr pos:start="69:20" pos:end="69:37"><name pos:start="69:20" pos:end="69:23">mb_x</name><operator pos:start="69:24" pos:end="69:25">==</operator><literal type="number" pos:start="69:26" pos:end="69:26">0</literal> <operator pos:start="69:28" pos:end="69:29">||</operator> <name pos:start="69:31" pos:end="69:34">mb_y</name><operator pos:start="69:35" pos:end="69:36">==</operator><literal type="number" pos:start="69:37" pos:end="69:37">0</literal></expr>)</condition><block pos:start="69:39" pos:end="119:13">{<block_content pos:start="70:21" pos:end="119:13">
                    <for pos:start="70:21" pos:end="119:13">for<control pos:start="70:24" pos:end="70:36">(<init pos:start="70:25" pos:end="70:28"><expr pos:start="70:25" pos:end="70:27"><name pos:start="70:25" pos:end="70:25">i</name><operator pos:start="70:26" pos:end="70:26">=</operator><literal type="number" pos:start="70:27" pos:end="70:27">0</literal></expr>;</init><condition pos:start="70:29" pos:end="70:32"><expr pos:start="70:29" pos:end="70:31"><name pos:start="70:29" pos:end="70:29">i</name><operator pos:start="70:30" pos:end="70:30">&lt;</operator><literal type="number" pos:start="70:31" pos:end="70:31">3</literal></expr>;</condition><incr pos:start="70:33" pos:end="70:35"><expr pos:start="70:33" pos:end="70:35"><name pos:start="70:33" pos:end="70:33">i</name><operator pos:start="70:34" pos:end="70:35">++</operator></expr></incr>)</control> <block pos:start="70:38" pos:end="119:13">{<block_content pos:start="71:25" pos:end="119:13">
                        <decl_stmt pos:start="71:25" pos:end="71:37"><decl pos:start="71:25" pos:end="71:36"><type pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:31">uint8_t</name> <modifier pos:start="71:33" pos:end="71:33">*</modifier></type><name pos:start="71:34" pos:end="71:36">ptr</name></decl>;</decl_stmt>
                        <decl_stmt pos:start="72:25" pos:end="72:49"><decl pos:start="72:25" pos:end="72:29"><type pos:start="72:25" pos:end="72:27"><name pos:start="72:25" pos:end="72:27">int</name></type> <name pos:start="72:29" pos:end="72:29">x</name></decl>, <decl pos:start="72:32" pos:end="72:32"><type ref="prev" pos:start="72:25" pos:end="72:27"/><name pos:start="72:32" pos:end="72:32">y</name></decl>, <decl pos:start="72:35" pos:end="72:35"><type ref="prev" pos:start="72:25" pos:end="72:27"/><name pos:start="72:35" pos:end="72:35">h</name></decl>, <decl pos:start="72:38" pos:end="72:38"><type ref="prev" pos:start="72:25" pos:end="72:27"/><name pos:start="72:38" pos:end="72:38">v</name></decl>, <decl pos:start="72:41" pos:end="72:48"><type ref="prev" pos:start="72:25" pos:end="72:27"/><name pos:start="72:41" pos:end="72:48">linesize</name></decl>;</decl_stmt>
                        <expr_stmt pos:start="73:25" pos:end="73:48"><expr pos:start="73:25" pos:end="73:47"><name pos:start="73:25" pos:end="73:25">h</name> <operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:47"><name pos:start="73:29" pos:end="73:29">s</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:44">mjpeg_hsample</name><index pos:start="73:45" pos:end="73:47">[<expr pos:start="73:46" pos:end="73:46"><name pos:start="73:46" pos:end="73:46">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="74:25" pos:end="74:48"><expr pos:start="74:25" pos:end="74:47"><name pos:start="74:25" pos:end="74:25">v</name> <operator pos:start="74:27" pos:end="74:27">=</operator> <name pos:start="74:29" pos:end="74:47"><name pos:start="74:29" pos:end="74:29">s</name><operator pos:start="74:30" pos:end="74:31">-&gt;</operator><name pos:start="74:32" pos:end="74:44">mjpeg_vsample</name><index pos:start="74:45" pos:end="74:47">[<expr pos:start="74:46" pos:end="74:46"><name pos:start="74:46" pos:end="74:46">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="75:25" pos:end="75:49"><expr pos:start="75:25" pos:end="75:48"><name pos:start="75:25" pos:end="75:32">linesize</name><operator pos:start="75:33" pos:end="75:33">=</operator> <name pos:start="75:35" pos:end="75:48"><name pos:start="75:35" pos:end="75:35">p</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:45">linesize</name><index pos:start="75:46" pos:end="75:48">[<expr pos:start="75:47" pos:end="75:47"><name pos:start="75:47" pos:end="75:47">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <for pos:start="76:25" pos:end="119:13">for<control pos:start="76:28" pos:end="76:42">(<init pos:start="76:29" pos:end="76:32"><expr pos:start="76:29" pos:end="76:31"><name pos:start="76:29" pos:end="76:29">y</name><operator pos:start="76:30" pos:end="76:30">=</operator><literal type="number" pos:start="76:31" pos:end="76:31">0</literal></expr>;</init> <condition pos:start="76:34" pos:end="76:37"><expr pos:start="76:34" pos:end="76:36"><name pos:start="76:34" pos:end="76:34">y</name><operator pos:start="76:35" pos:end="76:35">&lt;</operator><name pos:start="76:36" pos:end="76:36">v</name></expr>;</condition> <incr pos:start="76:39" pos:end="76:41"><expr pos:start="76:39" pos:end="76:41"><name pos:start="76:39" pos:end="76:39">y</name><operator pos:start="76:40" pos:end="76:41">++</operator></expr></incr>)</control><block pos:start="76:43" pos:end="119:13">{<block_content pos:start="77:29" pos:end="119:13">
                            <for pos:start="77:29" pos:end="119:13">for<control pos:start="77:32" pos:end="77:46">(<init pos:start="77:33" pos:end="77:36"><expr pos:start="77:33" pos:end="77:35"><name pos:start="77:33" pos:end="77:33">x</name><operator pos:start="77:34" pos:end="77:34">=</operator><literal type="number" pos:start="77:35" pos:end="77:35">0</literal></expr>;</init> <condition pos:start="77:38" pos:end="77:41"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:38">x</name><operator pos:start="77:39" pos:end="77:39">&lt;</operator><name pos:start="77:40" pos:end="77:40">h</name></expr>;</condition> <incr pos:start="77:43" pos:end="77:45"><expr pos:start="77:43" pos:end="77:45"><name pos:start="77:43" pos:end="77:43">x</name><operator pos:start="77:44" pos:end="77:45">++</operator></expr></incr>)</control><block pos:start="77:47" pos:end="119:13">{<block_content pos:start="78:33" pos:end="119:13">
                                <decl_stmt pos:start="78:33" pos:end="78:41"><decl pos:start="78:33" pos:end="78:40"><type pos:start="78:33" pos:end="78:35"><name pos:start="78:33" pos:end="78:35">int</name></type> <name pos:start="78:37" pos:end="78:40">pred</name></decl>;</decl_stmt>
                                <expr_stmt pos:start="79:33" pos:end="79:96"><expr pos:start="79:33" pos:end="79:95"><name pos:start="79:33" pos:end="79:35">ptr</name> <operator pos:start="79:37" pos:end="79:37">=</operator> <name pos:start="79:39" pos:end="79:48"><name pos:start="79:39" pos:end="79:39">p</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:45">data</name><index pos:start="79:46" pos:end="79:48">[<expr pos:start="79:47" pos:end="79:47"><name pos:start="79:47" pos:end="79:47">i</name></expr>]</index></name> <operator pos:start="79:50" pos:end="79:50">+</operator> <operator pos:start="79:52" pos:end="79:52">(</operator><name pos:start="79:53" pos:end="79:60">linesize</name> <operator pos:start="79:62" pos:end="79:62">*</operator> <operator pos:start="79:64" pos:end="79:64">(</operator><name pos:start="79:65" pos:end="79:65">v</name> <operator pos:start="79:67" pos:end="79:67">*</operator> <name pos:start="79:69" pos:end="79:72">mb_y</name> <operator pos:start="79:74" pos:end="79:74">+</operator> <name pos:start="79:76" pos:end="79:76">y</name><operator pos:start="79:77" pos:end="79:77">)</operator><operator pos:start="79:78" pos:end="79:78">)</operator> <operator pos:start="79:80" pos:end="79:80">+</operator> <operator pos:start="79:82" pos:end="79:82">(</operator><name pos:start="79:83" pos:end="79:83">h</name> <operator pos:start="79:85" pos:end="79:85">*</operator> <name pos:start="79:87" pos:end="79:90">mb_x</name> <operator pos:start="79:92" pos:end="79:92">+</operator> <name pos:start="79:94" pos:end="79:94">x</name><operator pos:start="79:95" pos:end="79:95">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="79:98" pos:end="79:123">//FIXME optimize this crap</comment>
                                <if_stmt pos:start="80:33" pos:end="119:13"><if pos:start="80:33" pos:end="119:13">if<condition pos:start="80:35" pos:end="80:51">(<expr pos:start="80:36" pos:end="80:50"><name pos:start="80:36" pos:end="80:36">y</name><operator pos:start="80:37" pos:end="80:38">==</operator><literal type="number" pos:start="80:39" pos:end="80:39">0</literal> <operator pos:start="80:41" pos:end="80:42">&amp;&amp;</operator> <name pos:start="80:44" pos:end="80:47">mb_y</name><operator pos:start="80:48" pos:end="80:49">==</operator><literal type="number" pos:start="80:50" pos:end="80:50">0</literal></expr>)</condition><block pos:start="80:52" pos:end="119:13">{<block_content pos:start="81:37" pos:end="119:13">
                                    <if_stmt pos:start="81:37" pos:end="85:33"><if pos:start="81:37" pos:end="83:37">if<condition pos:start="81:39" pos:end="81:55">(<expr pos:start="81:40" pos:end="81:54"><name pos:start="81:40" pos:end="81:40">x</name><operator pos:start="81:41" pos:end="81:42">==</operator><literal type="number" pos:start="81:43" pos:end="81:43">0</literal> <operator pos:start="81:45" pos:end="81:46">&amp;&amp;</operator> <name pos:start="81:48" pos:end="81:51">mb_x</name><operator pos:start="81:52" pos:end="81:53">==</operator><literal type="number" pos:start="81:54" pos:end="81:54">0</literal></expr>)</condition><block pos:start="81:56" pos:end="83:37">{<block_content pos:start="82:41" pos:end="82:50">
                                        <expr_stmt pos:start="82:41" pos:end="82:50"><expr pos:start="82:41" pos:end="82:49"><name pos:start="82:41" pos:end="82:44">pred</name><operator pos:start="82:45" pos:end="82:45">=</operator> <literal type="number" pos:start="82:47" pos:end="82:49">128</literal></expr>;</expr_stmt>
                                    </block_content>}</block></if><else pos:start="83:38" pos:end="85:33">else<block pos:start="83:42" pos:end="85:33">{<block_content pos:start="84:41" pos:end="84:54">
                                        <expr_stmt pos:start="84:41" pos:end="84:54"><expr pos:start="84:41" pos:end="84:53"><name pos:start="84:41" pos:end="84:44">pred</name><operator pos:start="84:45" pos:end="84:45">=</operator> <name pos:start="84:47" pos:end="84:53"><name pos:start="84:47" pos:end="84:49">ptr</name><index pos:start="84:50" pos:end="84:53">[<expr pos:start="84:51" pos:end="84:52"><operator pos:start="84:51" pos:end="84:51">-</operator><literal type="number" pos:start="84:52" pos:end="84:52">1</literal></expr>]</index></name></expr>;</expr_stmt>
                                </block_content>}</block></else></if_stmt><if_stmt pos:start="85:34" pos:end="119:13"><else pos:start="85:34" pos:end="119:13">else<block pos:start="85:38" pos:end="119:13">{<block_content pos:start="86:37" pos:end="119:13">
                                    <if_stmt pos:start="86:37" pos:end="94:17"><if pos:start="86:37" pos:end="88:37">if<condition pos:start="86:39" pos:end="86:55">(<expr pos:start="86:40" pos:end="86:54"><name pos:start="86:40" pos:end="86:40">x</name><operator pos:start="86:41" pos:end="86:42">==</operator><literal type="number" pos:start="86:43" pos:end="86:43">0</literal> <operator pos:start="86:45" pos:end="86:46">&amp;&amp;</operator> <name pos:start="86:48" pos:end="86:51">mb_x</name><operator pos:start="86:52" pos:end="86:53">==</operator><literal type="number" pos:start="86:54" pos:end="86:54">0</literal></expr>)</condition><block pos:start="86:56" pos:end="88:37">{<block_content pos:start="87:41" pos:end="87:61">
                                        <expr_stmt pos:start="87:41" pos:end="87:61"><expr pos:start="87:41" pos:end="87:60"><name pos:start="87:41" pos:end="87:44">pred</name><operator pos:start="87:45" pos:end="87:45">=</operator> <name pos:start="87:47" pos:end="87:60"><name pos:start="87:47" pos:end="87:49">ptr</name><index pos:start="87:50" pos:end="87:60">[<expr pos:start="87:51" pos:end="87:59"><operator pos:start="87:51" pos:end="87:51">-</operator><name pos:start="87:52" pos:end="87:59">linesize</name></expr>]</index></name></expr>;</expr_stmt>
                                    </block_content>}</block></if><else pos:start="88:38" pos:end="94:17">else<block pos:start="88:42" pos:end="94:17">{<block_content pos:start="89:41" pos:end="93:129">
                                        <expr_stmt pos:start="89:41" pos:end="89:108"><expr pos:start="89:41" pos:end="89:107"><call pos:start="89:41" pos:end="89:107"><name pos:start="89:41" pos:end="89:47">PREDICT</name><argument_list pos:start="89:48" pos:end="89:107">(<argument pos:start="89:49" pos:end="89:52"><expr pos:start="89:49" pos:end="89:52"><name pos:start="89:49" pos:end="89:52">pred</name></expr></argument>, <argument pos:start="89:55" pos:end="89:70"><expr pos:start="89:55" pos:end="89:70"><name pos:start="89:55" pos:end="89:70"><name pos:start="89:55" pos:end="89:57">ptr</name><index pos:start="89:58" pos:end="89:70">[<expr pos:start="89:59" pos:end="89:69"><operator pos:start="89:59" pos:end="89:59">-</operator><name pos:start="89:60" pos:end="89:67">linesize</name><operator pos:start="89:68" pos:end="89:68">-</operator><literal type="number" pos:start="89:69" pos:end="89:69">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:73" pos:end="89:86"><expr pos:start="89:73" pos:end="89:86"><name pos:start="89:73" pos:end="89:86"><name pos:start="89:73" pos:end="89:75">ptr</name><index pos:start="89:76" pos:end="89:86">[<expr pos:start="89:77" pos:end="89:85"><operator pos:start="89:77" pos:end="89:77">-</operator><name pos:start="89:78" pos:end="89:85">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="89:89" pos:end="89:95"><expr pos:start="89:89" pos:end="89:95"><name pos:start="89:89" pos:end="89:95"><name pos:start="89:89" pos:end="89:91">ptr</name><index pos:start="89:92" pos:end="89:95">[<expr pos:start="89:93" pos:end="89:94"><operator pos:start="89:93" pos:end="89:93">-</operator><literal type="number" pos:start="89:94" pos:end="89:94">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:98" pos:end="89:106"><expr pos:start="89:98" pos:end="89:106"><name pos:start="89:98" pos:end="89:106">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <if_stmt pos:start="90:33" pos:end="93:129"><if pos:start="90:33" pos:end="91:125">if<condition pos:start="90:35" pos:end="90:40">(<expr pos:start="90:36" pos:end="90:39"><name pos:start="90:36" pos:end="90:36">i</name><operator pos:start="90:37" pos:end="90:38">==</operator><literal type="number" pos:start="90:39" pos:end="90:39">0</literal></expr>)</condition><block type="pseudo" pos:start="91:37" pos:end="91:125"><block_content pos:start="91:37" pos:end="91:125">
                                    <expr_stmt pos:start="91:37" pos:end="91:125"><expr pos:start="91:37" pos:end="91:124"><call pos:start="91:37" pos:end="91:124"><name pos:start="91:37" pos:end="91:54">ff_mjpeg_encode_dc</name><argument_list pos:start="91:55" pos:end="91:124">(<argument pos:start="91:56" pos:end="91:56"><expr pos:start="91:56" pos:end="91:56"><name pos:start="91:56" pos:end="91:56">s</name></expr></argument>, <argument pos:start="91:59" pos:end="91:69"><expr pos:start="91:59" pos:end="91:69"><operator pos:start="91:59" pos:end="91:59">*</operator><name pos:start="91:60" pos:end="91:62">ptr</name> <operator pos:start="91:64" pos:end="91:64">-</operator> <name pos:start="91:66" pos:end="91:69">pred</name></expr></argument>, <argument pos:start="91:72" pos:end="91:96"><expr pos:start="91:72" pos:end="91:96"><name pos:start="91:72" pos:end="91:96"><name pos:start="91:72" pos:end="91:72">m</name><operator pos:start="91:73" pos:end="91:74">-&gt;</operator><name pos:start="91:75" pos:end="91:96">huff_size_dc_luminance</name></name></expr></argument>, <argument pos:start="91:99" pos:end="91:123"><expr pos:start="91:99" pos:end="91:123"><name pos:start="91:99" pos:end="91:123"><name pos:start="91:99" pos:end="91:99">m</name><operator pos:start="91:100" pos:end="91:101">-&gt;</operator><name pos:start="91:102" pos:end="91:123">huff_code_dc_luminance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="91:127" pos:end="91:138">//FIXME ugly</comment>
                                <else pos:start="92:33" pos:end="93:129">else<block type="pseudo" pos:start="93:37" pos:end="93:129"><block_content pos:start="93:37" pos:end="93:129">
                                    <expr_stmt pos:start="93:37" pos:end="93:129"><expr pos:start="93:37" pos:end="93:128"><call pos:start="93:37" pos:end="93:128"><name pos:start="93:37" pos:end="93:54">ff_mjpeg_encode_dc</name><argument_list pos:start="93:55" pos:end="93:128">(<argument pos:start="93:56" pos:end="93:56"><expr pos:start="93:56" pos:end="93:56"><name pos:start="93:56" pos:end="93:56">s</name></expr></argument>, <argument pos:start="93:59" pos:end="93:69"><expr pos:start="93:59" pos:end="93:69"><operator pos:start="93:59" pos:end="93:59">*</operator><name pos:start="93:60" pos:end="93:62">ptr</name> <operator pos:start="93:64" pos:end="93:64">-</operator> <name pos:start="93:66" pos:end="93:69">pred</name></expr></argument>, <argument pos:start="93:72" pos:end="93:98"><expr pos:start="93:72" pos:end="93:98"><name pos:start="93:72" pos:end="93:98"><name pos:start="93:72" pos:end="93:72">m</name><operator pos:start="93:73" pos:end="93:74">-&gt;</operator><name pos:start="93:75" pos:end="93:98">huff_size_dc_chrominance</name></name></expr></argument>, <argument pos:start="93:101" pos:end="93:127"><expr pos:start="93:101" pos:end="93:127"><name pos:start="93:101" pos:end="93:127"><name pos:start="93:101" pos:end="93:101">m</name><operator pos:start="93:102" pos:end="93:103">-&gt;</operator><name pos:start="93:104" pos:end="93:127">huff_code_dc_chrominance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                </block_content>}</block></else></if_stmt><if_stmt pos:start="94:18" pos:end="119:13"><else pos:start="94:18" pos:end="119:13">else<block pos:start="94:22" pos:end="119:13">{<block_content pos:start="95:21" pos:end="119:13">
                    <for pos:start="95:21" pos:end="119:13">for<control pos:start="95:24" pos:end="95:36">(<init pos:start="95:25" pos:end="95:28"><expr pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:25">i</name><operator pos:start="95:26" pos:end="95:26">=</operator><literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr>;</init><condition pos:start="95:29" pos:end="95:32"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:29">i</name><operator pos:start="95:30" pos:end="95:30">&lt;</operator><literal type="number" pos:start="95:31" pos:end="95:31">3</literal></expr>;</condition><incr pos:start="95:33" pos:end="95:35"><expr pos:start="95:33" pos:end="95:35"><name pos:start="95:33" pos:end="95:33">i</name><operator pos:start="95:34" pos:end="95:35">++</operator></expr></incr>)</control> <block pos:start="95:38" pos:end="119:13">{<block_content pos:start="96:25" pos:end="119:13">
                        <decl_stmt pos:start="96:25" pos:end="96:37"><decl pos:start="96:25" pos:end="96:36"><type pos:start="96:25" pos:end="96:33"><name pos:start="96:25" pos:end="96:31">uint8_t</name> <modifier pos:start="96:33" pos:end="96:33">*</modifier></type><name pos:start="96:34" pos:end="96:36">ptr</name></decl>;</decl_stmt>
                        <decl_stmt pos:start="97:25" pos:end="97:49"><decl pos:start="97:25" pos:end="97:29"><type pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:27">int</name></type> <name pos:start="97:29" pos:end="97:29">x</name></decl>, <decl pos:start="97:32" pos:end="97:32"><type ref="prev" pos:start="97:25" pos:end="97:27"/><name pos:start="97:32" pos:end="97:32">y</name></decl>, <decl pos:start="97:35" pos:end="97:35"><type ref="prev" pos:start="97:25" pos:end="97:27"/><name pos:start="97:35" pos:end="97:35">h</name></decl>, <decl pos:start="97:38" pos:end="97:38"><type ref="prev" pos:start="97:25" pos:end="97:27"/><name pos:start="97:38" pos:end="97:38">v</name></decl>, <decl pos:start="97:41" pos:end="97:48"><type ref="prev" pos:start="97:25" pos:end="97:27"/><name pos:start="97:41" pos:end="97:48">linesize</name></decl>;</decl_stmt>
                        <expr_stmt pos:start="98:25" pos:end="98:48"><expr pos:start="98:25" pos:end="98:47"><name pos:start="98:25" pos:end="98:25">h</name> <operator pos:start="98:27" pos:end="98:27">=</operator> <name pos:start="98:29" pos:end="98:47"><name pos:start="98:29" pos:end="98:29">s</name><operator pos:start="98:30" pos:end="98:31">-&gt;</operator><name pos:start="98:32" pos:end="98:44">mjpeg_hsample</name><index pos:start="98:45" pos:end="98:47">[<expr pos:start="98:46" pos:end="98:46"><name pos:start="98:46" pos:end="98:46">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="99:25" pos:end="99:48"><expr pos:start="99:25" pos:end="99:47"><name pos:start="99:25" pos:end="99:25">v</name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:47"><name pos:start="99:29" pos:end="99:29">s</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:44">mjpeg_vsample</name><index pos:start="99:45" pos:end="99:47">[<expr pos:start="99:46" pos:end="99:46"><name pos:start="99:46" pos:end="99:46">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="100:25" pos:end="100:49"><expr pos:start="100:25" pos:end="100:48"><name pos:start="100:25" pos:end="100:32">linesize</name><operator pos:start="100:33" pos:end="100:33">=</operator> <name pos:start="100:35" pos:end="100:48"><name pos:start="100:35" pos:end="100:35">p</name><operator pos:start="100:36" pos:end="100:37">-&gt;</operator><name pos:start="100:38" pos:end="100:45">linesize</name><index pos:start="100:46" pos:end="100:48">[<expr pos:start="100:47" pos:end="100:47"><name pos:start="100:47" pos:end="100:47">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <for pos:start="101:25" pos:end="119:13">for<control pos:start="101:28" pos:end="101:42">(<init pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:31"><name pos:start="101:29" pos:end="101:29">y</name><operator pos:start="101:30" pos:end="101:30">=</operator><literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr>;</init> <condition pos:start="101:34" pos:end="101:37"><expr pos:start="101:34" pos:end="101:36"><name pos:start="101:34" pos:end="101:34">y</name><operator pos:start="101:35" pos:end="101:35">&lt;</operator><name pos:start="101:36" pos:end="101:36">v</name></expr>;</condition> <incr pos:start="101:39" pos:end="101:41"><expr pos:start="101:39" pos:end="101:41"><name pos:start="101:39" pos:end="101:39">y</name><operator pos:start="101:40" pos:end="101:41">++</operator></expr></incr>)</control><block pos:start="101:43" pos:end="119:13">{<block_content pos:start="102:29" pos:end="119:13">
                            <for pos:start="102:29" pos:end="119:13">for<control pos:start="102:32" pos:end="102:46">(<init pos:start="102:33" pos:end="102:36"><expr pos:start="102:33" pos:end="102:35"><name pos:start="102:33" pos:end="102:33">x</name><operator pos:start="102:34" pos:end="102:34">=</operator><literal type="number" pos:start="102:35" pos:end="102:35">0</literal></expr>;</init> <condition pos:start="102:38" pos:end="102:41"><expr pos:start="102:38" pos:end="102:40"><name pos:start="102:38" pos:end="102:38">x</name><operator pos:start="102:39" pos:end="102:39">&lt;</operator><name pos:start="102:40" pos:end="102:40">h</name></expr>;</condition> <incr pos:start="102:43" pos:end="102:45"><expr pos:start="102:43" pos:end="102:45"><name pos:start="102:43" pos:end="102:43">x</name><operator pos:start="102:44" pos:end="102:45">++</operator></expr></incr>)</control><block pos:start="102:47" pos:end="119:13">{<block_content pos:start="103:33" pos:end="119:13">
                                <decl_stmt pos:start="103:33" pos:end="103:41"><decl pos:start="103:33" pos:end="103:40"><type pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">int</name></type> <name pos:start="103:37" pos:end="103:40">pred</name></decl>;</decl_stmt>
                                <expr_stmt pos:start="104:33" pos:end="104:96"><expr pos:start="104:33" pos:end="104:95"><name pos:start="104:33" pos:end="104:35">ptr</name> <operator pos:start="104:37" pos:end="104:37">=</operator> <name pos:start="104:39" pos:end="104:48"><name pos:start="104:39" pos:end="104:39">p</name><operator pos:start="104:40" pos:end="104:41">-&gt;</operator><name pos:start="104:42" pos:end="104:45">data</name><index pos:start="104:46" pos:end="104:48">[<expr pos:start="104:47" pos:end="104:47"><name pos:start="104:47" pos:end="104:47">i</name></expr>]</index></name> <operator pos:start="104:50" pos:end="104:50">+</operator> <operator pos:start="104:52" pos:end="104:52">(</operator><name pos:start="104:53" pos:end="104:60">linesize</name> <operator pos:start="104:62" pos:end="104:62">*</operator> <operator pos:start="104:64" pos:end="104:64">(</operator><name pos:start="104:65" pos:end="104:65">v</name> <operator pos:start="104:67" pos:end="104:67">*</operator> <name pos:start="104:69" pos:end="104:72">mb_y</name> <operator pos:start="104:74" pos:end="104:74">+</operator> <name pos:start="104:76" pos:end="104:76">y</name><operator pos:start="104:77" pos:end="104:77">)</operator><operator pos:start="104:78" pos:end="104:78">)</operator> <operator pos:start="104:80" pos:end="104:80">+</operator> <operator pos:start="104:82" pos:end="104:82">(</operator><name pos:start="104:83" pos:end="104:83">h</name> <operator pos:start="104:85" pos:end="104:85">*</operator> <name pos:start="104:87" pos:end="104:90">mb_x</name> <operator pos:start="104:92" pos:end="104:92">+</operator> <name pos:start="104:94" pos:end="104:94">x</name><operator pos:start="104:95" pos:end="104:95">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="104:98" pos:end="104:123">//FIXME optimize this crap</comment>
                                <expr_stmt pos:start="105:33" pos:end="105:100"><expr pos:start="105:33" pos:end="105:99"><call pos:start="105:33" pos:end="105:99"><name pos:start="105:33" pos:end="105:39">PREDICT</name><argument_list pos:start="105:40" pos:end="105:99">(<argument pos:start="105:41" pos:end="105:44"><expr pos:start="105:41" pos:end="105:44"><name pos:start="105:41" pos:end="105:44">pred</name></expr></argument>, <argument pos:start="105:47" pos:end="105:62"><expr pos:start="105:47" pos:end="105:62"><name pos:start="105:47" pos:end="105:62"><name pos:start="105:47" pos:end="105:49">ptr</name><index pos:start="105:50" pos:end="105:62">[<expr pos:start="105:51" pos:end="105:61"><operator pos:start="105:51" pos:end="105:51">-</operator><name pos:start="105:52" pos:end="105:59">linesize</name><operator pos:start="105:60" pos:end="105:60">-</operator><literal type="number" pos:start="105:61" pos:end="105:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:65" pos:end="105:78"><expr pos:start="105:65" pos:end="105:78"><name pos:start="105:65" pos:end="105:78"><name pos:start="105:65" pos:end="105:67">ptr</name><index pos:start="105:68" pos:end="105:78">[<expr pos:start="105:69" pos:end="105:77"><operator pos:start="105:69" pos:end="105:69">-</operator><name pos:start="105:70" pos:end="105:77">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="105:81" pos:end="105:87"><expr pos:start="105:81" pos:end="105:87"><name pos:start="105:81" pos:end="105:87"><name pos:start="105:81" pos:end="105:83">ptr</name><index pos:start="105:84" pos:end="105:87">[<expr pos:start="105:85" pos:end="105:86"><operator pos:start="105:85" pos:end="105:85">-</operator><literal type="number" pos:start="105:86" pos:end="105:86">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:90" pos:end="105:98"><expr pos:start="105:90" pos:end="105:98"><name pos:start="105:90" pos:end="105:98">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <if_stmt pos:start="106:33" pos:end="109:129"><if pos:start="106:33" pos:end="107:125">if<condition pos:start="106:35" pos:end="106:40">(<expr pos:start="106:36" pos:end="106:39"><name pos:start="106:36" pos:end="106:36">i</name><operator pos:start="106:37" pos:end="106:38">==</operator><literal type="number" pos:start="106:39" pos:end="106:39">0</literal></expr>)</condition><block type="pseudo" pos:start="107:37" pos:end="107:125"><block_content pos:start="107:37" pos:end="107:125">
                                    <expr_stmt pos:start="107:37" pos:end="107:125"><expr pos:start="107:37" pos:end="107:124"><call pos:start="107:37" pos:end="107:124"><name pos:start="107:37" pos:end="107:54">ff_mjpeg_encode_dc</name><argument_list pos:start="107:55" pos:end="107:124">(<argument pos:start="107:56" pos:end="107:56"><expr pos:start="107:56" pos:end="107:56"><name pos:start="107:56" pos:end="107:56">s</name></expr></argument>, <argument pos:start="107:59" pos:end="107:69"><expr pos:start="107:59" pos:end="107:69"><operator pos:start="107:59" pos:end="107:59">*</operator><name pos:start="107:60" pos:end="107:62">ptr</name> <operator pos:start="107:64" pos:end="107:64">-</operator> <name pos:start="107:66" pos:end="107:69">pred</name></expr></argument>, <argument pos:start="107:72" pos:end="107:96"><expr pos:start="107:72" pos:end="107:96"><name pos:start="107:72" pos:end="107:96"><name pos:start="107:72" pos:end="107:72">m</name><operator pos:start="107:73" pos:end="107:74">-&gt;</operator><name pos:start="107:75" pos:end="107:96">huff_size_dc_luminance</name></name></expr></argument>, <argument pos:start="107:99" pos:end="107:123"><expr pos:start="107:99" pos:end="107:123"><name pos:start="107:99" pos:end="107:123"><name pos:start="107:99" pos:end="107:99">m</name><operator pos:start="107:100" pos:end="107:101">-&gt;</operator><name pos:start="107:102" pos:end="107:123">huff_code_dc_luminance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="107:127" pos:end="107:138">//FIXME ugly</comment>
                                <else pos:start="108:33" pos:end="109:129">else<block type="pseudo" pos:start="109:37" pos:end="109:129"><block_content pos:start="109:37" pos:end="109:129">
                                    <expr_stmt pos:start="109:37" pos:end="109:129"><expr pos:start="109:37" pos:end="109:128"><call pos:start="109:37" pos:end="109:128"><name pos:start="109:37" pos:end="109:54">ff_mjpeg_encode_dc</name><argument_list pos:start="109:55" pos:end="109:128">(<argument pos:start="109:56" pos:end="109:56"><expr pos:start="109:56" pos:end="109:56"><name pos:start="109:56" pos:end="109:56">s</name></expr></argument>, <argument pos:start="109:59" pos:end="109:69"><expr pos:start="109:59" pos:end="109:69"><operator pos:start="109:59" pos:end="109:59">*</operator><name pos:start="109:60" pos:end="109:62">ptr</name> <operator pos:start="109:64" pos:end="109:64">-</operator> <name pos:start="109:66" pos:end="109:69">pred</name></expr></argument>, <argument pos:start="109:72" pos:end="109:98"><expr pos:start="109:72" pos:end="109:98"><name pos:start="109:72" pos:end="109:98"><name pos:start="109:72" pos:end="109:72">m</name><operator pos:start="109:73" pos:end="109:74">-&gt;</operator><name pos:start="109:75" pos:end="109:98">huff_size_dc_chrominance</name></name></expr></argument>, <argument pos:start="109:101" pos:end="109:127"><expr pos:start="109:101" pos:end="109:127"><name pos:start="109:101" pos:end="109:127"><name pos:start="109:101" pos:end="109:101">m</name><operator pos:start="109:102" pos:end="109:103">-&gt;</operator><name pos:start="109:104" pos:end="109:127">huff_code_dc_chrominance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="110:5" pos:end="110:13"><expr pos:start="110:5" pos:end="110:12"><call pos:start="110:5" pos:end="110:12"><name pos:start="110:5" pos:end="110:10">emms_c</name><argument_list pos:start="110:11" pos:end="110:12">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="111:5" pos:end="111:50"><expr pos:start="111:5" pos:end="111:49"><call pos:start="111:5" pos:end="111:49"><name pos:start="111:5" pos:end="111:14">av_assert0</name><argument_list pos:start="111:15" pos:end="111:49">(<argument pos:start="111:16" pos:end="111:48"><expr pos:start="111:16" pos:end="111:48"><name pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:25">esc_pos</name></name> <operator pos:start="111:27" pos:end="111:28">==</operator> <name pos:start="111:30" pos:end="111:43"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:43">header_bits</name></name> <operator pos:start="111:45" pos:end="111:46">&gt;&gt;</operator> <literal type="number" pos:start="111:48" pos:end="111:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="112:5" pos:end="112:32"><expr pos:start="112:5" pos:end="112:31"><call pos:start="112:5" pos:end="112:31"><name pos:start="112:5" pos:end="112:28">ff_mjpeg_encode_stuffing</name><argument_list pos:start="112:29" pos:end="112:31">(<argument pos:start="112:30" pos:end="112:30"><expr pos:start="112:30" pos:end="112:30"><name pos:start="112:30" pos:end="112:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="113:5" pos:end="113:39"><expr pos:start="113:5" pos:end="113:38"><call pos:start="113:5" pos:end="113:38"><name pos:start="113:5" pos:end="113:35">ff_mjpeg_encode_picture_trailer</name><argument_list pos:start="113:36" pos:end="113:38">(<argument pos:start="113:37" pos:end="113:37"><expr pos:start="113:37" pos:end="113:37"><name pos:start="113:37" pos:end="113:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="114:5" pos:end="114:24"><expr pos:start="114:5" pos:end="114:23"><name pos:start="114:5" pos:end="114:21"><name pos:start="114:5" pos:end="114:5">s</name><operator pos:start="114:6" pos:end="114:7">-&gt;</operator><name pos:start="114:8" pos:end="114:21">picture_number</name></name><operator pos:start="114:22" pos:end="114:23">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="115:5" pos:end="115:27"><expr pos:start="115:5" pos:end="115:26"><call pos:start="115:5" pos:end="115:26"><name pos:start="115:5" pos:end="115:18">flush_put_bits</name><argument_list pos:start="115:19" pos:end="115:26">(<argument pos:start="115:20" pos:end="115:25"><expr pos:start="115:20" pos:end="115:25"><operator pos:start="115:20" pos:end="115:20">&amp;</operator><name pos:start="115:21" pos:end="115:25"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="116:5" pos:end="116:51"><expr pos:start="116:5" pos:end="116:50"><name pos:start="116:5" pos:end="116:13"><name pos:start="116:5" pos:end="116:7">pkt</name><operator pos:start="116:8" pos:end="116:9">-&gt;</operator><name pos:start="116:10" pos:end="116:13">size</name></name>   <operator pos:start="116:17" pos:end="116:17">=</operator> <call pos:start="116:19" pos:end="116:38"><name pos:start="116:19" pos:end="116:30">put_bits_ptr</name><argument_list pos:start="116:31" pos:end="116:38">(<argument pos:start="116:32" pos:end="116:37"><expr pos:start="116:32" pos:end="116:37"><operator pos:start="116:32" pos:end="116:32">&amp;</operator><name pos:start="116:33" pos:end="116:37"><name pos:start="116:33" pos:end="116:33">s</name><operator pos:start="116:34" pos:end="116:35">-&gt;</operator><name pos:start="116:36" pos:end="116:37">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="116:40" pos:end="116:40">-</operator> <name pos:start="116:42" pos:end="116:50"><name pos:start="116:42" pos:end="116:42">s</name><operator pos:start="116:43" pos:end="116:44">-&gt;</operator><name pos:start="116:45" pos:end="116:46">pb</name><operator pos:start="116:47" pos:end="116:47">.</operator><name pos:start="116:48" pos:end="116:50">buf</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:14"><name pos:start="117:5" pos:end="117:7">pkt</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:14">flags</name></name> <operator pos:start="117:16" pos:end="117:17">|=</operator> <name pos:start="117:19" pos:end="117:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>
    <expr_stmt pos:start="118:5" pos:end="118:20"><expr pos:start="118:5" pos:end="118:19"><operator pos:start="118:5" pos:end="118:5">*</operator><name pos:start="118:6" pos:end="118:15">got_packet</name> <operator pos:start="118:17" pos:end="118:17">=</operator> <literal type="number" pos:start="118:19" pos:end="118:19">1</literal></expr>;</expr_stmt>
    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></function>
<comment type="line" pos:start="120:1" pos:end="120:42">//    return (put_bits_count(&amp;f-&gt;pb)+7)/8;</comment></unit>
