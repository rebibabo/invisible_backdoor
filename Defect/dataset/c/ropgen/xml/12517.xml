<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12517.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_waiti</name><parameter_list pos:start="1:22" pos:end="1:54">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">dc</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">uint32_t</name></type> <name pos:start="1:50" pos:end="1:53">imm4</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:36">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TCGv_i32</name></type> <name pos:start="5:14" pos:end="5:15">pc</name> <init pos:start="5:17" pos:end="5:44">= <expr pos:start="5:19" pos:end="5:44"><call pos:start="5:19" pos:end="5:44"><name pos:start="5:19" pos:end="5:31">tcg_const_i32</name><argument_list pos:start="5:32" pos:end="5:44">(<argument pos:start="5:33" pos:end="5:43"><expr pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:34">dc</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:43">next_pc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:21">intlevel</name> <init pos:start="7:23" pos:end="7:43">= <expr pos:start="7:25" pos:end="7:43"><call pos:start="7:25" pos:end="7:43"><name pos:start="7:25" pos:end="7:37">tcg_const_i32</name><argument_list pos:start="7:38" pos:end="7:43">(<argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">imm4</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:10">dc</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:14">tb</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:22">cflags</name></name> <operator pos:start="11:24" pos:end="11:24">&amp;</operator> <name pos:start="11:26" pos:end="11:38">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="11:41" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:23">

        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><call pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:20">gen_io_start</name><argument_list pos:start="13:21" pos:end="13:22">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><call pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:20">gen_helper_waiti</name><argument_list pos:start="17:21" pos:end="17:43">(<argument pos:start="17:22" pos:end="17:28"><expr pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:28">cpu_env</name></expr></argument>, <argument pos:start="17:31" pos:end="17:32"><expr pos:start="17:31" pos:end="17:32"><name pos:start="17:31" pos:end="17:32">pc</name></expr></argument>, <argument pos:start="17:35" pos:end="17:42"><expr pos:start="17:35" pos:end="17:42"><name pos:start="17:35" pos:end="17:42">intlevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:39">(<expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:10">dc</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:14">tb</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">cflags</name></name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <name pos:start="19:26" pos:end="19:38">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="19:41" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:21">

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><call pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:18">gen_io_end</name><argument_list pos:start="21:19" pos:end="21:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:17">tcg_temp_free</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><call pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:17">tcg_temp_free</name><argument_list pos:start="27:18" pos:end="27:27">(<argument pos:start="27:19" pos:end="27:26"><expr pos:start="27:19" pos:end="27:26"><name pos:start="27:19" pos:end="27:26">intlevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:28">gen_jumpi_check_loop_end</name><argument_list pos:start="29:29" pos:end="29:35">(<argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">dc</name></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
