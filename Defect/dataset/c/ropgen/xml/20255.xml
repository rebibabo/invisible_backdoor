<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20255.c" pos:tabs="8"><function pos:start="1:1" pos:end="509:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">opt_output_file</name><parameter_list pos:start="1:27" pos:end="1:65">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">opt</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="509:1">{<block_content pos:start="5:5" pos:end="507:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVOutputFormat</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:32">file_oformat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">OutputStream</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:15">InputStream</name>  <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">ist</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:27"><if pos:start="17:5" pos:end="19:27">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:15">strcmp</name><argument_list pos:start="17:16" pos:end="17:30">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">filename</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="string" pos:start="17:27" pos:end="17:29">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:27"><block_content pos:start="19:9" pos:end="19:27">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:16">filename</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="string" pos:start="19:20" pos:end="19:26">"pipe:"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:81"><expr pos:start="23:5" pos:end="23:80"><name pos:start="23:5" pos:end="23:7">err</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:80"><name pos:start="23:11" pos:end="23:40">avformat_alloc_output_context2</name><argument_list pos:start="23:41" pos:end="23:80">(<argument pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><operator pos:start="23:42" pos:end="23:42">&amp;</operator><name pos:start="23:43" pos:end="23:44">oc</name></expr></argument>, <argument pos:start="23:47" pos:end="23:50"><expr pos:start="23:47" pos:end="23:50"><name pos:start="23:47" pos:end="23:50">NULL</name></expr></argument>, <argument pos:start="23:53" pos:end="23:69"><expr pos:start="23:53" pos:end="23:69"><name pos:start="23:53" pos:end="23:69">last_asked_format</name></expr></argument>, <argument pos:start="23:72" pos:end="23:79"><expr pos:start="23:72" pos:end="23:79"><name pos:start="23:72" pos:end="23:79">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:21">last_asked_format</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:28">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">oc</name></expr>)</condition> <block pos:start="27:14" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:24">

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><call pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:19">print_error</name><argument_list pos:start="29:20" pos:end="29:34">(<argument pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:28">filename</name></expr></argument>, <argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><call pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:20">exit_program</name><argument_list pos:start="31:21" pos:end="31:23">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:16">file_oformat</name><operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:29"><name pos:start="35:19" pos:end="35:20">oc</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:29">oformat</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="199:5"><if pos:start="39:5" pos:end="57:5">if <condition pos:start="39:8" pos:end="41:45">(<expr pos:start="39:9" pos:end="41:44"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:42"><name pos:start="39:10" pos:end="39:15">strcmp</name><argument_list pos:start="39:16" pos:end="39:42">(<argument pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:28">file_oformat</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">name</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:41"><expr pos:start="39:37" pos:end="39:41"><literal type="string" pos:start="39:37" pos:end="39:41">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:44" pos:end="39:45">&amp;&amp;</operator>

        <call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:19">av_strstart</name><argument_list pos:start="41:20" pos:end="41:44">(<argument pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:28">filename</name></expr></argument>, <argument pos:start="41:31" pos:end="41:37"><expr pos:start="41:31" pos:end="41:37"><literal type="string" pos:start="41:31" pos:end="41:37">"http:"</literal></expr></argument>, <argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><name pos:start="41:40" pos:end="41:43">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:47" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <comment type="block" pos:start="43:9" pos:end="45:38">/* special case for files sent to ffserver: we get the stream

           parameters from ffserver */</comment>

        <decl_stmt pos:start="47:9" pos:end="47:54"><decl pos:start="47:9" pos:end="47:53"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:15">err</name> <init pos:start="47:17" pos:end="47:53">= <expr pos:start="47:19" pos:end="47:53"><call pos:start="47:19" pos:end="47:53"><name pos:start="47:19" pos:end="47:39">read_ffserver_streams</name><argument_list pos:start="47:40" pos:end="47:53">(<argument pos:start="47:41" pos:end="47:42"><expr pos:start="47:41" pos:end="47:42"><name pos:start="47:41" pos:end="47:42">oc</name></expr></argument>, <argument pos:start="47:45" pos:end="47:52"><expr pos:start="47:45" pos:end="47:52"><name pos:start="47:45" pos:end="47:52">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:28">

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><call pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:23">print_error</name><argument_list pos:start="51:24" pos:end="51:38">(<argument pos:start="51:25" pos:end="51:32"><expr pos:start="51:25" pos:end="51:32"><name pos:start="51:25" pos:end="51:32">filename</name></expr></argument>, <argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><name pos:start="51:35" pos:end="51:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:28"><expr pos:start="53:13" pos:end="53:27"><call pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:24">exit_program</name><argument_list pos:start="53:25" pos:end="53:27">(<argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="151:5">else if <condition pos:start="57:15" pos:end="57:31">(<expr pos:start="57:16" pos:end="57:30"><operator pos:start="57:16" pos:end="57:16">!</operator><name pos:start="57:17" pos:end="57:30">nb_stream_maps</name></expr>)</condition> <block pos:start="57:33" pos:end="151:5">{<block_content pos:start="79:9" pos:end="147:9">

        <comment type="block" pos:start="59:9" pos:end="59:49">/* pick the "best" stream of each type */</comment>

<cpp:define pos:start="61:1" pos:end="73:9">#<cpp:directive pos:start="61:2" pos:end="61:7">define</cpp:directive> <cpp:macro pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:18">NEW_STREAM</name><parameter_list pos:start="61:19" pos:end="61:31">(<parameter pos:start="61:20" pos:end="61:23"><type pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">type</name></type></parameter>, <parameter pos:start="61:26" pos:end="61:30"><type pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:30">index</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="63:9" pos:end="73:9">if (index &gt;= 0) {\

            ost = new_ ## type ## _stream(oc);\

            ost-&gt;source_index = index;\

            ost-&gt;sync_ist     = &amp;input_streams[index];\

            input_streams[index].discard = 0;\

        }</cpp:value></cpp:define>



        <comment type="block" pos:start="77:9" pos:end="77:39">/* video: highest resolution */</comment>

        <if_stmt pos:start="79:9" pos:end="101:9"><if pos:start="79:9" pos:end="101:9">if <condition pos:start="79:12" pos:end="79:72">(<expr pos:start="79:13" pos:end="79:71"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:26">video_disable</name> <operator pos:start="79:28" pos:end="79:29">&amp;&amp;</operator> <name pos:start="79:31" pos:end="79:54"><name pos:start="79:31" pos:end="79:32">oc</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:41">oformat</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:54">video_codec</name></name> <operator pos:start="79:56" pos:end="79:57">!=</operator> <name pos:start="79:59" pos:end="79:71">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="79:74" pos:end="101:9">{<block_content pos:start="81:13" pos:end="99:35">

            <decl_stmt pos:start="81:13" pos:end="81:35"><decl pos:start="81:13" pos:end="81:24"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:20">area</name> <init pos:start="81:22" pos:end="81:24">= <expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr></init></decl>, <decl pos:start="81:27" pos:end="81:34"><type ref="prev" pos:start="81:13" pos:end="81:15"/><name pos:start="81:27" pos:end="81:29">idx</name> <init pos:start="81:31" pos:end="81:34">= <expr pos:start="81:33" pos:end="81:34"><operator pos:start="81:33" pos:end="81:33">-</operator><literal type="number" pos:start="81:34" pos:end="81:34">1</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="83:13" pos:end="97:13">for <control pos:start="83:17" pos:end="83:50">(<init pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">i</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</init> <condition pos:start="83:25" pos:end="83:45"><expr pos:start="83:25" pos:end="83:44"><name pos:start="83:25" pos:end="83:25">i</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <name pos:start="83:29" pos:end="83:44">nb_input_streams</name></expr>;</condition> <incr pos:start="83:47" pos:end="83:49"><expr pos:start="83:47" pos:end="83:49"><name pos:start="83:47" pos:end="83:47">i</name><operator pos:start="83:48" pos:end="83:49">++</operator></expr></incr>)</control> <block pos:start="83:52" pos:end="97:13">{<block_content pos:start="85:17" pos:end="95:17">

                <expr_stmt pos:start="85:17" pos:end="85:40"><expr pos:start="85:17" pos:end="85:39"><name pos:start="85:17" pos:end="85:19">ist</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">&amp;</operator><name pos:start="85:24" pos:end="85:39"><name pos:start="85:24" pos:end="85:36">input_streams</name><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="87:17" pos:end="95:17"><if pos:start="87:17" pos:end="95:17">if <condition pos:start="87:20" pos:end="89:74">(<expr pos:start="87:21" pos:end="89:73"><name pos:start="87:21" pos:end="87:46"><name pos:start="87:21" pos:end="87:23">ist</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:27">st</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:34">codec</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:46">codec_type</name></name> <operator pos:start="87:48" pos:end="87:49">==</operator> <name pos:start="87:51" pos:end="87:68">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="87:70" pos:end="87:71">&amp;&amp;</operator>

                    <name pos:start="89:21" pos:end="89:41"><name pos:start="89:21" pos:end="89:23">ist</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:27">st</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:34">codec</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:41">width</name></name> <operator pos:start="89:43" pos:end="89:43">*</operator> <name pos:start="89:45" pos:end="89:66"><name pos:start="89:45" pos:end="89:47">ist</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:51">st</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:58">codec</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:66">height</name></name> <operator pos:start="89:68" pos:end="89:68">&gt;</operator> <name pos:start="89:70" pos:end="89:73">area</name></expr>)</condition> <block pos:start="89:76" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:28">

                    <expr_stmt pos:start="91:21" pos:end="91:74"><expr pos:start="91:21" pos:end="91:73"><name pos:start="91:21" pos:end="91:24">area</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:48"><name pos:start="91:28" pos:end="91:30">ist</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:34">st</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:41">codec</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:48">width</name></name> <operator pos:start="91:50" pos:end="91:50">*</operator> <name pos:start="91:52" pos:end="91:73"><name pos:start="91:52" pos:end="91:54">ist</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:58">st</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:65">codec</name><operator pos:start="91:66" pos:end="91:67">-&gt;</operator><name pos:start="91:68" pos:end="91:73">height</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:28"><expr pos:start="93:21" pos:end="93:27"><name pos:start="93:21" pos:end="93:23">idx</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:27">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="99:13" pos:end="99:35"><expr pos:start="99:13" pos:end="99:34"><call pos:start="99:13" pos:end="99:34"><name pos:start="99:13" pos:end="99:22">NEW_STREAM</name><argument_list pos:start="99:23" pos:end="99:34">(<argument pos:start="99:24" pos:end="99:28"><expr pos:start="99:24" pos:end="99:28"><name pos:start="99:24" pos:end="99:28">video</name></expr></argument>, <argument pos:start="99:31" pos:end="99:33"><expr pos:start="99:31" pos:end="99:33"><name pos:start="99:31" pos:end="99:33">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="105:9" pos:end="105:34">/* audio: most channels */</comment>

        <if_stmt pos:start="107:9" pos:end="129:9"><if pos:start="107:9" pos:end="129:9">if <condition pos:start="107:12" pos:end="107:72">(<expr pos:start="107:13" pos:end="107:71"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:26">audio_disable</name> <operator pos:start="107:28" pos:end="107:29">&amp;&amp;</operator> <name pos:start="107:31" pos:end="107:54"><name pos:start="107:31" pos:end="107:32">oc</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:41">oformat</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:54">audio_codec</name></name> <operator pos:start="107:56" pos:end="107:57">!=</operator> <name pos:start="107:59" pos:end="107:71">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="107:74" pos:end="129:9">{<block_content pos:start="109:13" pos:end="127:35">

            <decl_stmt pos:start="109:13" pos:end="109:39"><decl pos:start="109:13" pos:end="109:28"><type pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">int</name></type> <name pos:start="109:17" pos:end="109:24">channels</name> <init pos:start="109:26" pos:end="109:28">= <expr pos:start="109:28" pos:end="109:28"><literal type="number" pos:start="109:28" pos:end="109:28">0</literal></expr></init></decl>, <decl pos:start="109:31" pos:end="109:38"><type ref="prev" pos:start="109:13" pos:end="109:15"/><name pos:start="109:31" pos:end="109:33">idx</name> <init pos:start="109:35" pos:end="109:38">= <expr pos:start="109:37" pos:end="109:38"><operator pos:start="109:37" pos:end="109:37">-</operator><literal type="number" pos:start="109:38" pos:end="109:38">1</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="111:13" pos:end="125:13">for <control pos:start="111:17" pos:end="111:50">(<init pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:22"><name pos:start="111:18" pos:end="111:18">i</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</init> <condition pos:start="111:25" pos:end="111:45"><expr pos:start="111:25" pos:end="111:44"><name pos:start="111:25" pos:end="111:25">i</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <name pos:start="111:29" pos:end="111:44">nb_input_streams</name></expr>;</condition> <incr pos:start="111:47" pos:end="111:49"><expr pos:start="111:47" pos:end="111:49"><name pos:start="111:47" pos:end="111:47">i</name><operator pos:start="111:48" pos:end="111:49">++</operator></expr></incr>)</control> <block pos:start="111:52" pos:end="125:13">{<block_content pos:start="113:17" pos:end="123:17">

                <expr_stmt pos:start="113:17" pos:end="113:40"><expr pos:start="113:17" pos:end="113:39"><name pos:start="113:17" pos:end="113:19">ist</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <operator pos:start="113:23" pos:end="113:23">&amp;</operator><name pos:start="113:24" pos:end="113:39"><name pos:start="113:24" pos:end="113:36">input_streams</name><index pos:start="113:37" pos:end="113:39">[<expr pos:start="113:38" pos:end="113:38"><name pos:start="113:38" pos:end="113:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="123:17"><if pos:start="115:17" pos:end="123:17">if <condition pos:start="115:20" pos:end="117:56">(<expr pos:start="115:21" pos:end="117:55"><name pos:start="115:21" pos:end="115:46"><name pos:start="115:21" pos:end="115:23">ist</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">st</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:34">codec</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:46">codec_type</name></name> <operator pos:start="115:48" pos:end="115:49">==</operator> <name pos:start="115:51" pos:end="115:68">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="115:70" pos:end="115:71">&amp;&amp;</operator>

                    <name pos:start="117:21" pos:end="117:44"><name pos:start="117:21" pos:end="117:23">ist</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:27">st</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:34">codec</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:44">channels</name></name> <operator pos:start="117:46" pos:end="117:46">&gt;</operator> <name pos:start="117:48" pos:end="117:55">channels</name></expr>)</condition> <block pos:start="117:58" pos:end="123:17">{<block_content pos:start="119:21" pos:end="121:28">

                    <expr_stmt pos:start="119:21" pos:end="119:56"><expr pos:start="119:21" pos:end="119:55"><name pos:start="119:21" pos:end="119:28">channels</name> <operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:55"><name pos:start="119:32" pos:end="119:34">ist</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:38">st</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:45">codec</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:55">channels</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:28"><expr pos:start="121:21" pos:end="121:27"><name pos:start="121:21" pos:end="121:23">idx</name> <operator pos:start="121:25" pos:end="121:25">=</operator> <name pos:start="121:27" pos:end="121:27">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="127:13" pos:end="127:35"><expr pos:start="127:13" pos:end="127:34"><call pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:22">NEW_STREAM</name><argument_list pos:start="127:23" pos:end="127:34">(<argument pos:start="127:24" pos:end="127:28"><expr pos:start="127:24" pos:end="127:28"><name pos:start="127:24" pos:end="127:28">audio</name></expr></argument>, <argument pos:start="127:31" pos:end="127:33"><expr pos:start="127:31" pos:end="127:33"><name pos:start="127:31" pos:end="127:33">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="133:9" pos:end="133:35">/* subtitles: pick first */</comment>

        <if_stmt pos:start="135:9" pos:end="147:9"><if pos:start="135:9" pos:end="147:9">if <condition pos:start="135:12" pos:end="135:78">(<expr pos:start="135:13" pos:end="135:77"><operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:29">subtitle_disable</name> <operator pos:start="135:31" pos:end="135:32">&amp;&amp;</operator> <name pos:start="135:34" pos:end="135:60"><name pos:start="135:34" pos:end="135:35">oc</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:44">oformat</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:60">subtitle_codec</name></name> <operator pos:start="135:62" pos:end="135:63">!=</operator> <name pos:start="135:65" pos:end="135:77">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="135:80" pos:end="147:9">{<block_content pos:start="137:13" pos:end="145:17">

            <for pos:start="137:13" pos:end="145:17">for <control pos:start="137:17" pos:end="137:50">(<init pos:start="137:18" pos:end="137:23"><expr pos:start="137:18" pos:end="137:22"><name pos:start="137:18" pos:end="137:18">i</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <literal type="number" pos:start="137:22" pos:end="137:22">0</literal></expr>;</init> <condition pos:start="137:25" pos:end="137:45"><expr pos:start="137:25" pos:end="137:44"><name pos:start="137:25" pos:end="137:25">i</name> <operator pos:start="137:27" pos:end="137:27">&lt;</operator> <name pos:start="137:29" pos:end="137:44">nb_input_streams</name></expr>;</condition> <incr pos:start="137:47" pos:end="137:49"><expr pos:start="137:47" pos:end="137:49"><name pos:start="137:47" pos:end="137:47">i</name><operator pos:start="137:48" pos:end="137:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:17" pos:end="145:17"><block_content pos:start="139:17" pos:end="145:17">

                <if_stmt pos:start="139:17" pos:end="145:17"><if pos:start="139:17" pos:end="145:17">if <condition pos:start="139:20" pos:end="139:84">(<expr pos:start="139:21" pos:end="139:83"><name pos:start="139:21" pos:end="139:36"><name pos:start="139:21" pos:end="139:33">input_streams</name><index pos:start="139:34" pos:end="139:36">[<expr pos:start="139:35" pos:end="139:35"><name pos:start="139:35" pos:end="139:35">i</name></expr>]</index></name><operator pos:start="139:37" pos:end="139:37">.</operator><name pos:start="139:38" pos:end="139:58"><name pos:start="139:38" pos:end="139:39">st</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:46">codec</name><operator pos:start="139:47" pos:end="139:48">-&gt;</operator><name pos:start="139:49" pos:end="139:58">codec_type</name></name> <operator pos:start="139:60" pos:end="139:61">==</operator> <name pos:start="139:63" pos:end="139:83">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="139:86" pos:end="145:17">{<block_content pos:start="141:21" pos:end="143:26">

                    <expr_stmt pos:start="141:21" pos:end="141:44"><expr pos:start="141:21" pos:end="141:43"><call pos:start="141:21" pos:end="141:43"><name pos:start="141:21" pos:end="141:30">NEW_STREAM</name><argument_list pos:start="141:31" pos:end="141:43">(<argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:39">subtitle</name></expr></argument>, <argument pos:start="141:42" pos:end="141:42"><expr pos:start="141:42" pos:end="141:42"><name pos:start="141:42" pos:end="141:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="143:21" pos:end="143:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="149:9" pos:end="149:37">/* do something with data? */</comment>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="199:5">else <block pos:start="151:12" pos:end="199:5">{<block_content pos:start="153:9" pos:end="197:9">

        <for pos:start="153:9" pos:end="197:9">for <control pos:start="153:13" pos:end="153:44">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:39"><expr pos:start="153:21" pos:end="153:38"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:38">nb_stream_maps</name></expr>;</condition> <incr pos:start="153:41" pos:end="153:43"><expr pos:start="153:41" pos:end="153:43"><name pos:start="153:41" pos:end="153:41">i</name><operator pos:start="153:42" pos:end="153:43">++</operator></expr></incr>)</control> <block pos:start="153:46" pos:end="197:9">{<block_content pos:start="155:13" pos:end="195:29">

            <decl_stmt pos:start="155:13" pos:end="155:45"><decl pos:start="155:13" pos:end="155:44"><type pos:start="155:13" pos:end="155:23"><name pos:start="155:13" pos:end="155:21">StreamMap</name> <modifier pos:start="155:23" pos:end="155:23">*</modifier></type><name pos:start="155:24" pos:end="155:26">map</name> <init pos:start="155:28" pos:end="155:44">= <expr pos:start="155:30" pos:end="155:44"><operator pos:start="155:30" pos:end="155:30">&amp;</operator><name pos:start="155:31" pos:end="155:44"><name pos:start="155:31" pos:end="155:41">stream_maps</name><index pos:start="155:42" pos:end="155:44">[<expr pos:start="155:43" pos:end="155:43"><name pos:start="155:43" pos:end="155:43">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="159:13" pos:end="161:25"><if pos:start="159:13" pos:end="161:25">if <condition pos:start="159:16" pos:end="159:30">(<expr pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:19">map</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:29">disabled</name></name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:25"><block_content pos:start="161:17" pos:end="161:25">

                <continue pos:start="161:17" pos:end="161:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="165:13" pos:end="165:93"><expr pos:start="165:13" pos:end="165:92"><name pos:start="165:13" pos:end="165:15">ist</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <operator pos:start="165:19" pos:end="165:19">&amp;</operator><name pos:start="165:20" pos:end="165:92"><name pos:start="165:20" pos:end="165:32">input_streams</name><index pos:start="165:33" pos:end="165:92">[<expr pos:start="165:34" pos:end="165:91"><name pos:start="165:34" pos:end="165:61"><name pos:start="165:34" pos:end="165:44">input_files</name><index pos:start="165:45" pos:end="165:61">[<expr pos:start="165:46" pos:end="165:60"><name pos:start="165:46" pos:end="165:60"><name pos:start="165:46" pos:end="165:48">map</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:60">file_index</name></name></expr>]</index></name><operator pos:start="165:62" pos:end="165:62">.</operator><name pos:start="165:63" pos:end="165:71">ist_index</name> <operator pos:start="165:73" pos:end="165:73">+</operator> <name pos:start="165:75" pos:end="165:91"><name pos:start="165:75" pos:end="165:77">map</name><operator pos:start="165:78" pos:end="165:79">-&gt;</operator><name pos:start="165:80" pos:end="165:91">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <switch pos:start="167:13" pos:end="185:13">switch <condition pos:start="167:20" pos:end="167:47">(<expr pos:start="167:21" pos:end="167:46"><name pos:start="167:21" pos:end="167:46"><name pos:start="167:21" pos:end="167:23">ist</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:27">st</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:34">codec</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:46">codec_type</name></name></expr>)</condition> <block pos:start="167:49" pos:end="185:13">{<block_content pos:start="169:13" pos:end="183:32">

            <case pos:start="169:13" pos:end="169:36">case <expr pos:start="169:18" pos:end="169:35"><name pos:start="169:18" pos:end="169:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>    <expr_stmt pos:start="169:41" pos:end="169:67"><expr pos:start="169:41" pos:end="169:66"><name pos:start="169:41" pos:end="169:43">ost</name> <operator pos:start="169:45" pos:end="169:45">=</operator> <call pos:start="169:47" pos:end="169:66"><name pos:start="169:47" pos:end="169:62">new_video_stream</name><argument_list pos:start="169:63" pos:end="169:66">(<argument pos:start="169:64" pos:end="169:65"><expr pos:start="169:64" pos:end="169:65"><name pos:start="169:64" pos:end="169:65">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="169:72" pos:end="169:77">break;</break>

            <case pos:start="171:13" pos:end="171:36">case <expr pos:start="171:18" pos:end="171:35"><name pos:start="171:18" pos:end="171:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>    <expr_stmt pos:start="171:41" pos:end="171:67"><expr pos:start="171:41" pos:end="171:66"><name pos:start="171:41" pos:end="171:43">ost</name> <operator pos:start="171:45" pos:end="171:45">=</operator> <call pos:start="171:47" pos:end="171:66"><name pos:start="171:47" pos:end="171:62">new_audio_stream</name><argument_list pos:start="171:63" pos:end="171:66">(<argument pos:start="171:64" pos:end="171:65"><expr pos:start="171:64" pos:end="171:65"><name pos:start="171:64" pos:end="171:65">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="171:72" pos:end="171:77">break;</break>

            <case pos:start="173:13" pos:end="173:39">case <expr pos:start="173:18" pos:end="173:38"><name pos:start="173:18" pos:end="173:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case> <expr_stmt pos:start="173:41" pos:end="173:70"><expr pos:start="173:41" pos:end="173:69"><name pos:start="173:41" pos:end="173:43">ost</name> <operator pos:start="173:45" pos:end="173:45">=</operator> <call pos:start="173:47" pos:end="173:69"><name pos:start="173:47" pos:end="173:65">new_subtitle_stream</name><argument_list pos:start="173:66" pos:end="173:69">(<argument pos:start="173:67" pos:end="173:68"><expr pos:start="173:67" pos:end="173:68"><name pos:start="173:67" pos:end="173:68">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="173:72" pos:end="173:77">break;</break>

            <case pos:start="175:13" pos:end="175:35">case <expr pos:start="175:18" pos:end="175:34"><name pos:start="175:18" pos:end="175:34">AVMEDIA_TYPE_DATA</name></expr>:</case>     <expr_stmt pos:start="175:41" pos:end="175:66"><expr pos:start="175:41" pos:end="175:65"><name pos:start="175:41" pos:end="175:43">ost</name> <operator pos:start="175:45" pos:end="175:45">=</operator> <call pos:start="175:47" pos:end="175:65"><name pos:start="175:47" pos:end="175:61">new_data_stream</name><argument_list pos:start="175:62" pos:end="175:65">(<argument pos:start="175:63" pos:end="175:64"><expr pos:start="175:63" pos:end="175:64"><name pos:start="175:63" pos:end="175:64">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <break pos:start="175:72" pos:end="175:77">break;</break>

            <default pos:start="177:13" pos:end="177:20">default:</default>

                <expr_stmt pos:start="179:17" pos:end="181:59"><expr pos:start="179:17" pos:end="181:58"><call pos:start="179:17" pos:end="181:58"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="181:58">(<argument pos:start="179:24" pos:end="179:27"><expr pos:start="179:24" pos:end="179:27"><name pos:start="179:24" pos:end="179:27">NULL</name></expr></argument>, <argument pos:start="179:30" pos:end="179:41"><expr pos:start="179:30" pos:end="179:41"><name pos:start="179:30" pos:end="179:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:44" pos:end="179:91"><expr pos:start="179:44" pos:end="179:91"><literal type="string" pos:start="179:44" pos:end="179:91">"Cannot map stream #%d.%d - unsupported type.\n"</literal></expr></argument>,

                       <argument pos:start="181:24" pos:end="181:38"><expr pos:start="181:24" pos:end="181:38"><name pos:start="181:24" pos:end="181:38"><name pos:start="181:24" pos:end="181:26">map</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:38">file_index</name></name></expr></argument>, <argument pos:start="181:41" pos:end="181:57"><expr pos:start="181:41" pos:end="181:57"><name pos:start="181:41" pos:end="181:57"><name pos:start="181:41" pos:end="181:43">map</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:57">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:32"><expr pos:start="183:17" pos:end="183:31"><call pos:start="183:17" pos:end="183:31"><name pos:start="183:17" pos:end="183:28">exit_program</name><argument_list pos:start="183:29" pos:end="183:31">(<argument pos:start="183:30" pos:end="183:30"><expr pos:start="183:30" pos:end="183:30"><literal type="number" pos:start="183:30" pos:end="183:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <expr_stmt pos:start="189:13" pos:end="189:91"><expr pos:start="189:13" pos:end="189:90"><name pos:start="189:13" pos:end="189:29"><name pos:start="189:13" pos:end="189:15">ost</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:29">source_index</name></name> <operator pos:start="189:31" pos:end="189:31">=</operator> <name pos:start="189:33" pos:end="189:60"><name pos:start="189:33" pos:end="189:43">input_files</name><index pos:start="189:44" pos:end="189:60">[<expr pos:start="189:45" pos:end="189:59"><name pos:start="189:45" pos:end="189:59"><name pos:start="189:45" pos:end="189:47">map</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:59">file_index</name></name></expr>]</index></name><operator pos:start="189:61" pos:end="189:61">.</operator><name pos:start="189:62" pos:end="189:70">ist_index</name> <operator pos:start="189:72" pos:end="189:72">+</operator> <name pos:start="189:74" pos:end="189:90"><name pos:start="189:74" pos:end="189:76">map</name><operator pos:start="189:77" pos:end="189:78">-&gt;</operator><name pos:start="189:79" pos:end="189:90">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="193:67"><expr pos:start="191:13" pos:end="193:66"><name pos:start="191:13" pos:end="191:25"><name pos:start="191:13" pos:end="191:15">ost</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:25">sync_ist</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <operator pos:start="191:29" pos:end="191:29">&amp;</operator><name pos:start="191:30" pos:end="193:66"><name pos:start="191:30" pos:end="191:42">input_streams</name><index pos:start="191:43" pos:end="193:66">[<expr pos:start="191:44" pos:end="193:65"><name pos:start="191:44" pos:end="191:76"><name pos:start="191:44" pos:end="191:54">input_files</name><index pos:start="191:55" pos:end="191:76">[<expr pos:start="191:56" pos:end="191:75"><name pos:start="191:56" pos:end="191:75"><name pos:start="191:56" pos:end="191:58">map</name><operator pos:start="191:59" pos:end="191:60">-&gt;</operator><name pos:start="191:61" pos:end="191:75">sync_file_index</name></name></expr>]</index></name><operator pos:start="191:77" pos:end="191:77">.</operator><name pos:start="191:78" pos:end="191:86">ist_index</name> <operator pos:start="191:88" pos:end="191:88">+</operator>

                                           <name pos:start="193:44" pos:end="193:65"><name pos:start="193:44" pos:end="193:46">map</name><operator pos:start="193:47" pos:end="193:48">-&gt;</operator><name pos:start="193:49" pos:end="193:65">sync_stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:29"><expr pos:start="195:13" pos:end="195:28"><name pos:start="195:13" pos:end="195:24"><name pos:start="195:13" pos:end="195:15">ist</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:24">discard</name></name> <operator pos:start="195:26" pos:end="195:26">=</operator> <literal type="number" pos:start="195:28" pos:end="195:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:45"><expr pos:start="203:5" pos:end="203:44"><call pos:start="203:5" pos:end="203:44"><name pos:start="203:5" pos:end="203:16">av_dict_copy</name><argument_list pos:start="203:17" pos:end="203:44">(<argument pos:start="203:18" pos:end="203:30"><expr pos:start="203:18" pos:end="203:30"><operator pos:start="203:18" pos:end="203:18">&amp;</operator><name pos:start="203:19" pos:end="203:30"><name pos:start="203:19" pos:end="203:20">oc</name><operator pos:start="203:21" pos:end="203:22">-&gt;</operator><name pos:start="203:23" pos:end="203:30">metadata</name></name></expr></argument>, <argument pos:start="203:33" pos:end="203:40"><expr pos:start="203:33" pos:end="203:40"><name pos:start="203:33" pos:end="203:40">metadata</name></expr></argument>, <argument pos:start="203:43" pos:end="203:43"><expr pos:start="203:43" pos:end="203:43"><literal type="number" pos:start="203:43" pos:end="203:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:28"><expr pos:start="205:5" pos:end="205:27"><call pos:start="205:5" pos:end="205:27"><name pos:start="205:5" pos:end="205:16">av_dict_free</name><argument_list pos:start="205:17" pos:end="205:27">(<argument pos:start="205:18" pos:end="205:26"><expr pos:start="205:18" pos:end="205:26"><operator pos:start="205:18" pos:end="205:18">&amp;</operator><name pos:start="205:19" pos:end="205:26">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="211:5" pos:end="213:24"><if pos:start="211:5" pos:end="213:24">if <condition pos:start="211:8" pos:end="211:37">(<expr pos:start="211:9" pos:end="211:36"><name pos:start="211:9" pos:end="211:23">nb_output_files</name> <operator pos:start="211:25" pos:end="211:26">==</operator> <name pos:start="211:28" pos:end="211:36">MAX_FILES</name></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:24"><block_content pos:start="213:9" pos:end="213:24">

        <expr_stmt pos:start="213:9" pos:end="213:24"><expr pos:start="213:9" pos:end="213:23"><call pos:start="213:9" pos:end="213:23"><name pos:start="213:9" pos:end="213:20">exit_program</name><argument_list pos:start="213:21" pos:end="213:23">(<argument pos:start="213:22" pos:end="213:22"><expr pos:start="213:22" pos:end="213:22"><literal type="number" pos:start="213:22" pos:end="213:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>                <comment type="block" pos:start="213:41" pos:end="213:117">/* a temporary hack until all the other MAX_FILES-sized arrays are removed */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:106"><expr pos:start="215:5" pos:end="215:105"><name pos:start="215:5" pos:end="215:16">output_files</name> <operator pos:start="215:18" pos:end="215:18">=</operator> <call pos:start="215:20" pos:end="215:105"><name pos:start="215:20" pos:end="215:29">grow_array</name><argument_list pos:start="215:30" pos:end="215:105">(<argument pos:start="215:31" pos:end="215:42"><expr pos:start="215:31" pos:end="215:42"><name pos:start="215:31" pos:end="215:42">output_files</name></expr></argument>, <argument pos:start="215:45" pos:end="215:65"><expr pos:start="215:45" pos:end="215:65"><sizeof pos:start="215:45" pos:end="215:65">sizeof<argument_list pos:start="215:51" pos:end="215:65">(<argument pos:start="215:52" pos:end="215:64"><expr pos:start="215:52" pos:end="215:64"><operator pos:start="215:52" pos:end="215:52">*</operator><name pos:start="215:53" pos:end="215:64">output_files</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="215:68" pos:end="215:83"><expr pos:start="215:68" pos:end="215:83"><operator pos:start="215:68" pos:end="215:68">&amp;</operator><name pos:start="215:69" pos:end="215:83">nb_output_files</name></expr></argument>, <argument pos:start="215:86" pos:end="215:104"><expr pos:start="215:86" pos:end="215:104"><name pos:start="215:86" pos:end="215:100">nb_output_files</name> <operator pos:start="215:102" pos:end="215:102">+</operator> <literal type="number" pos:start="215:104" pos:end="215:104">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:53"><expr pos:start="217:5" pos:end="217:52"><name pos:start="217:5" pos:end="217:37"><name pos:start="217:5" pos:end="217:16">output_files</name><index pos:start="217:17" pos:end="217:37">[<expr pos:start="217:18" pos:end="217:36"><name pos:start="217:18" pos:end="217:32">nb_output_files</name> <operator pos:start="217:34" pos:end="217:34">-</operator> <literal type="number" pos:start="217:36" pos:end="217:36">1</literal></expr>]</index></name><operator pos:start="217:38" pos:end="217:38">.</operator><name pos:start="217:39" pos:end="217:41">ctx</name>       <operator pos:start="217:49" pos:end="217:49">=</operator> <name pos:start="217:51" pos:end="217:52">oc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:85"><expr pos:start="219:5" pos:end="219:84"><name pos:start="219:5" pos:end="219:37"><name pos:start="219:5" pos:end="219:16">output_files</name><index pos:start="219:17" pos:end="219:37">[<expr pos:start="219:18" pos:end="219:36"><name pos:start="219:18" pos:end="219:32">nb_output_files</name> <operator pos:start="219:34" pos:end="219:34">-</operator> <literal type="number" pos:start="219:36" pos:end="219:36">1</literal></expr>]</index></name><operator pos:start="219:38" pos:end="219:38">.</operator><name pos:start="219:39" pos:end="219:47">ost_index</name> <operator pos:start="219:49" pos:end="219:49">=</operator> <name pos:start="219:51" pos:end="219:67">nb_output_streams</name> <operator pos:start="219:69" pos:end="219:69">-</operator> <name pos:start="219:71" pos:end="219:84"><name pos:start="219:71" pos:end="219:72">oc</name><operator pos:start="219:73" pos:end="219:74">-&gt;</operator><name pos:start="219:75" pos:end="219:84">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:74"><expr pos:start="221:5" pos:end="221:73"><call pos:start="221:5" pos:end="221:73"><name pos:start="221:5" pos:end="221:16">av_dict_copy</name><argument_list pos:start="221:17" pos:end="221:73">(<argument pos:start="221:18" pos:end="221:56"><expr pos:start="221:18" pos:end="221:56"><operator pos:start="221:18" pos:end="221:18">&amp;</operator><name pos:start="221:19" pos:end="221:51"><name pos:start="221:19" pos:end="221:30">output_files</name><index pos:start="221:31" pos:end="221:51">[<expr pos:start="221:32" pos:end="221:50"><name pos:start="221:32" pos:end="221:46">nb_output_files</name> <operator pos:start="221:48" pos:end="221:48">-</operator> <literal type="number" pos:start="221:50" pos:end="221:50">1</literal></expr>]</index></name><operator pos:start="221:52" pos:end="221:52">.</operator><name pos:start="221:53" pos:end="221:56">opts</name></expr></argument>, <argument pos:start="221:59" pos:end="221:69"><expr pos:start="221:59" pos:end="221:69"><name pos:start="221:59" pos:end="221:69">format_opts</name></expr></argument>, <argument pos:start="221:72" pos:end="221:72"><expr pos:start="221:72" pos:end="221:72"><literal type="number" pos:start="221:72" pos:end="221:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="225:5" pos:end="225:63">/* check filename in case of an image number is expected */</comment>

    <if_stmt pos:start="227:5" pos:end="237:5"><if pos:start="227:5" pos:end="237:5">if <condition pos:start="227:8" pos:end="227:46">(<expr pos:start="227:9" pos:end="227:45"><name pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:10">oc</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:19">oformat</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:26">flags</name></name> <operator pos:start="227:28" pos:end="227:28">&amp;</operator> <name pos:start="227:30" pos:end="227:45">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="227:48" pos:end="237:5">{<block_content pos:start="229:9" pos:end="235:9">

        <if_stmt pos:start="229:9" pos:end="235:9"><if pos:start="229:9" pos:end="235:9">if <condition pos:start="229:12" pos:end="229:51">(<expr pos:start="229:13" pos:end="229:50"><operator pos:start="229:13" pos:end="229:13">!</operator><call pos:start="229:14" pos:end="229:50"><name pos:start="229:14" pos:end="229:36">av_filename_number_test</name><argument_list pos:start="229:37" pos:end="229:50">(<argument pos:start="229:38" pos:end="229:49"><expr pos:start="229:38" pos:end="229:49"><name pos:start="229:38" pos:end="229:49"><name pos:start="229:38" pos:end="229:39">oc</name><operator pos:start="229:40" pos:end="229:41">-&gt;</operator><name pos:start="229:42" pos:end="229:49">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="229:53" pos:end="235:9">{<block_content pos:start="231:13" pos:end="233:28">

            <expr_stmt pos:start="231:13" pos:end="231:55"><expr pos:start="231:13" pos:end="231:54"><call pos:start="231:13" pos:end="231:54"><name pos:start="231:13" pos:end="231:23">print_error</name><argument_list pos:start="231:24" pos:end="231:54">(<argument pos:start="231:25" pos:end="231:36"><expr pos:start="231:25" pos:end="231:36"><name pos:start="231:25" pos:end="231:36"><name pos:start="231:25" pos:end="231:26">oc</name><operator pos:start="231:27" pos:end="231:28">-&gt;</operator><name pos:start="231:29" pos:end="231:36">filename</name></name></expr></argument>, <argument pos:start="231:39" pos:end="231:53"><expr pos:start="231:39" pos:end="231:53"><call pos:start="231:39" pos:end="231:53"><name pos:start="231:39" pos:end="231:45">AVERROR</name><argument_list pos:start="231:46" pos:end="231:53">(<argument pos:start="231:47" pos:end="231:52"><expr pos:start="231:47" pos:end="231:52"><name pos:start="231:47" pos:end="231:52">EINVAL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:28"><expr pos:start="233:13" pos:end="233:27"><call pos:start="233:13" pos:end="233:27"><name pos:start="233:13" pos:end="233:24">exit_program</name><argument_list pos:start="233:25" pos:end="233:27">(<argument pos:start="233:26" pos:end="233:26"><expr pos:start="233:26" pos:end="233:26"><literal type="number" pos:start="233:26" pos:end="233:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="241:5" pos:end="295:5"><if pos:start="241:5" pos:end="295:5">if <condition pos:start="241:8" pos:end="241:45">(<expr pos:start="241:9" pos:end="241:44"><operator pos:start="241:9" pos:end="241:9">!</operator><operator pos:start="241:10" pos:end="241:10">(</operator><name pos:start="241:11" pos:end="241:28"><name pos:start="241:11" pos:end="241:12">oc</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:21">oformat</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:28">flags</name></name> <operator pos:start="241:30" pos:end="241:30">&amp;</operator> <name pos:start="241:32" pos:end="241:43">AVFMT_NOFILE</name><operator pos:start="241:44" pos:end="241:44">)</operator></expr>)</condition> <block pos:start="241:47" pos:end="295:5">{<block_content pos:start="245:9" pos:end="293:9">

        <comment type="block" pos:start="243:9" pos:end="243:71">/* test if it already exists to avoid loosing precious files */</comment>

        <if_stmt pos:start="245:9" pos:end="281:9"><if pos:start="245:9" pos:end="281:9">if <condition pos:start="245:12" pos:end="251:51">(<expr pos:start="245:13" pos:end="251:50"><operator pos:start="245:13" pos:end="245:13">!</operator><name pos:start="245:14" pos:end="245:27">file_overwrite</name> <operator pos:start="245:29" pos:end="245:30">&amp;&amp;</operator>

            <operator pos:start="247:13" pos:end="247:13">(</operator><call pos:start="247:14" pos:end="247:34"><name pos:start="247:14" pos:end="247:19">strchr</name><argument_list pos:start="247:20" pos:end="247:34">(<argument pos:start="247:21" pos:end="247:28"><expr pos:start="247:21" pos:end="247:28"><name pos:start="247:21" pos:end="247:28">filename</name></expr></argument>, <argument pos:start="247:31" pos:end="247:33"><expr pos:start="247:31" pos:end="247:33"><literal type="char" pos:start="247:31" pos:end="247:33">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="247:36" pos:end="247:37">==</operator> <name pos:start="247:39" pos:end="247:42">NULL</name> <operator pos:start="247:44" pos:end="247:45">||</operator>

             <name pos:start="249:14" pos:end="249:24"><name pos:start="249:14" pos:end="249:21">filename</name><index pos:start="249:22" pos:end="249:24">[<expr pos:start="249:23" pos:end="249:23"><literal type="number" pos:start="249:23" pos:end="249:23">1</literal></expr>]</index></name> <operator pos:start="249:26" pos:end="249:27">==</operator> <literal type="char" pos:start="249:29" pos:end="249:31">':'</literal> <operator pos:start="249:33" pos:end="249:34">||</operator>

             <call pos:start="251:14" pos:end="251:49"><name pos:start="251:14" pos:end="251:24">av_strstart</name><argument_list pos:start="251:25" pos:end="251:49">(<argument pos:start="251:26" pos:end="251:33"><expr pos:start="251:26" pos:end="251:33"><name pos:start="251:26" pos:end="251:33">filename</name></expr></argument>, <argument pos:start="251:36" pos:end="251:42"><expr pos:start="251:36" pos:end="251:42"><literal type="string" pos:start="251:36" pos:end="251:42">"file:"</literal></expr></argument>, <argument pos:start="251:45" pos:end="251:48"><expr pos:start="251:45" pos:end="251:48"><name pos:start="251:45" pos:end="251:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="251:50" pos:end="251:50">)</operator></expr>)</condition> <block pos:start="251:53" pos:end="281:9">{<block_content pos:start="253:13" pos:end="279:13">

            <if_stmt pos:start="253:13" pos:end="279:13"><if pos:start="253:13" pos:end="279:13">if <condition pos:start="253:16" pos:end="253:45">(<expr pos:start="253:17" pos:end="253:44"><call pos:start="253:17" pos:end="253:39"><name pos:start="253:17" pos:end="253:26">avio_check</name><argument_list pos:start="253:27" pos:end="253:39">(<argument pos:start="253:28" pos:end="253:35"><expr pos:start="253:28" pos:end="253:35"><name pos:start="253:28" pos:end="253:35">filename</name></expr></argument>, <argument pos:start="253:38" pos:end="253:38"><expr pos:start="253:38" pos:end="253:38"><literal type="number" pos:start="253:38" pos:end="253:38">0</literal></expr></argument>)</argument_list></call> <operator pos:start="253:41" pos:end="253:42">==</operator> <literal type="number" pos:start="253:44" pos:end="253:44">0</literal></expr>)</condition> <block pos:start="253:47" pos:end="279:13">{<block_content pos:start="255:17" pos:end="277:17">

                <if_stmt pos:start="255:17" pos:end="277:17"><if pos:start="255:17" pos:end="269:17">if <condition pos:start="255:20" pos:end="255:33">(<expr pos:start="255:21" pos:end="255:32"><operator pos:start="255:21" pos:end="255:21">!</operator><name pos:start="255:22" pos:end="255:32">using_stdin</name></expr>)</condition> <block pos:start="255:35" pos:end="269:17">{<block_content pos:start="257:21" pos:end="267:21">

                    <expr_stmt pos:start="257:21" pos:end="257:93"><expr pos:start="257:21" pos:end="257:92"><call pos:start="257:21" pos:end="257:92"><name pos:start="257:21" pos:end="257:27">fprintf</name><argument_list pos:start="257:28" pos:end="257:92">(<argument pos:start="257:29" pos:end="257:34"><expr pos:start="257:29" pos:end="257:34"><name pos:start="257:29" pos:end="257:34">stderr</name></expr></argument>,<argument pos:start="257:36" pos:end="257:81"><expr pos:start="257:36" pos:end="257:81"><literal type="string" pos:start="257:36" pos:end="257:81">"File '%s' already exists. Overwrite ? [y/N] "</literal></expr></argument>, <argument pos:start="257:84" pos:end="257:91"><expr pos:start="257:84" pos:end="257:91"><name pos:start="257:84" pos:end="257:91">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:35"><expr pos:start="259:21" pos:end="259:34"><call pos:start="259:21" pos:end="259:34"><name pos:start="259:21" pos:end="259:26">fflush</name><argument_list pos:start="259:27" pos:end="259:34">(<argument pos:start="259:28" pos:end="259:33"><expr pos:start="259:28" pos:end="259:33"><name pos:start="259:28" pos:end="259:33">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="261:21" pos:end="267:21"><if pos:start="261:21" pos:end="267:21">if <condition pos:start="261:24" pos:end="261:38">(<expr pos:start="261:25" pos:end="261:37"><operator pos:start="261:25" pos:end="261:25">!</operator><call pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:35">read_yesno</name><argument_list pos:start="261:36" pos:end="261:37">()</argument_list></call></expr>)</condition> <block pos:start="261:40" pos:end="267:21">{<block_content pos:start="263:25" pos:end="265:40">

                        <expr_stmt pos:start="263:25" pos:end="263:71"><expr pos:start="263:25" pos:end="263:70"><call pos:start="263:25" pos:end="263:70"><name pos:start="263:25" pos:end="263:31">fprintf</name><argument_list pos:start="263:32" pos:end="263:70">(<argument pos:start="263:33" pos:end="263:38"><expr pos:start="263:33" pos:end="263:38"><name pos:start="263:33" pos:end="263:38">stderr</name></expr></argument>, <argument pos:start="263:41" pos:end="263:69"><expr pos:start="263:41" pos:end="263:69"><literal type="string" pos:start="263:41" pos:end="263:69">"Not overwriting - exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="265:25" pos:end="265:40"><expr pos:start="265:25" pos:end="265:39"><call pos:start="265:25" pos:end="265:39"><name pos:start="265:25" pos:end="265:36">exit_program</name><argument_list pos:start="265:37" pos:end="265:39">(<argument pos:start="265:38" pos:end="265:38"><expr pos:start="265:38" pos:end="265:38"><literal type="number" pos:start="265:38" pos:end="265:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if>

                <else pos:start="271:17" pos:end="277:17">else <block pos:start="271:22" pos:end="277:17">{<block_content pos:start="273:21" pos:end="275:36">

                    <expr_stmt pos:start="273:21" pos:end="273:85"><expr pos:start="273:21" pos:end="273:84"><call pos:start="273:21" pos:end="273:84"><name pos:start="273:21" pos:end="273:27">fprintf</name><argument_list pos:start="273:28" pos:end="273:84">(<argument pos:start="273:29" pos:end="273:34"><expr pos:start="273:29" pos:end="273:34"><name pos:start="273:29" pos:end="273:34">stderr</name></expr></argument>,<argument pos:start="273:36" pos:end="273:73"><expr pos:start="273:36" pos:end="273:73"><literal type="string" pos:start="273:36" pos:end="273:73">"File '%s' already exists. Exiting.\n"</literal></expr></argument>, <argument pos:start="273:76" pos:end="273:83"><expr pos:start="273:76" pos:end="273:83"><name pos:start="273:76" pos:end="273:83">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="275:21" pos:end="275:36"><expr pos:start="275:21" pos:end="275:35"><call pos:start="275:21" pos:end="275:35"><name pos:start="275:21" pos:end="275:32">exit_program</name><argument_list pos:start="275:33" pos:end="275:35">(<argument pos:start="275:34" pos:end="275:34"><expr pos:start="275:34" pos:end="275:34"><literal type="number" pos:start="275:34" pos:end="275:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="285:9" pos:end="285:27">/* open the file */</comment>

        <if_stmt pos:start="287:9" pos:end="293:9"><if pos:start="287:9" pos:end="293:9">if <condition pos:start="287:12" pos:end="287:70">(<expr pos:start="287:13" pos:end="287:69"><operator pos:start="287:13" pos:end="287:13">(</operator><name pos:start="287:14" pos:end="287:16">err</name> <operator pos:start="287:18" pos:end="287:18">=</operator> <call pos:start="287:20" pos:end="287:64"><name pos:start="287:20" pos:end="287:28">avio_open</name><argument_list pos:start="287:29" pos:end="287:64">(<argument pos:start="287:30" pos:end="287:36"><expr pos:start="287:30" pos:end="287:36"><operator pos:start="287:30" pos:end="287:30">&amp;</operator><name pos:start="287:31" pos:end="287:36"><name pos:start="287:31" pos:end="287:32">oc</name><operator pos:start="287:33" pos:end="287:34">-&gt;</operator><name pos:start="287:35" pos:end="287:36">pb</name></name></expr></argument>, <argument pos:start="287:39" pos:end="287:46"><expr pos:start="287:39" pos:end="287:46"><name pos:start="287:39" pos:end="287:46">filename</name></expr></argument>, <argument pos:start="287:49" pos:end="287:63"><expr pos:start="287:49" pos:end="287:63"><name pos:start="287:49" pos:end="287:63">AVIO_FLAG_WRITE</name></expr></argument>)</argument_list></call><operator pos:start="287:65" pos:end="287:65">)</operator> <operator pos:start="287:67" pos:end="287:67">&lt;</operator> <literal type="number" pos:start="287:69" pos:end="287:69">0</literal></expr>)</condition> <block pos:start="287:72" pos:end="293:9">{<block_content pos:start="289:13" pos:end="291:28">

            <expr_stmt pos:start="289:13" pos:end="289:39"><expr pos:start="289:13" pos:end="289:38"><call pos:start="289:13" pos:end="289:38"><name pos:start="289:13" pos:end="289:23">print_error</name><argument_list pos:start="289:24" pos:end="289:38">(<argument pos:start="289:25" pos:end="289:32"><expr pos:start="289:25" pos:end="289:32"><name pos:start="289:25" pos:end="289:32">filename</name></expr></argument>, <argument pos:start="289:35" pos:end="289:37"><expr pos:start="289:35" pos:end="289:37"><name pos:start="289:35" pos:end="289:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:28"><expr pos:start="291:13" pos:end="291:27"><call pos:start="291:13" pos:end="291:27"><name pos:start="291:13" pos:end="291:24">exit_program</name><argument_list pos:start="291:25" pos:end="291:27">(<argument pos:start="291:26" pos:end="291:26"><expr pos:start="291:26" pos:end="291:26"><literal type="number" pos:start="291:26" pos:end="291:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="299:5" pos:end="299:49"><expr pos:start="299:5" pos:end="299:48"><name pos:start="299:5" pos:end="299:15"><name pos:start="299:5" pos:end="299:6">oc</name><operator pos:start="299:7" pos:end="299:8">-&gt;</operator><name pos:start="299:9" pos:end="299:15">preload</name></name><operator pos:start="299:16" pos:end="299:16">=</operator> <operator pos:start="299:18" pos:end="299:18">(</operator><name pos:start="299:19" pos:end="299:21">int</name><operator pos:start="299:22" pos:end="299:22">)</operator><operator pos:start="299:23" pos:end="299:23">(</operator><name pos:start="299:24" pos:end="299:34">mux_preload</name><operator pos:start="299:35" pos:end="299:35">*</operator><name pos:start="299:36" pos:end="299:47">AV_TIME_BASE</name><operator pos:start="299:48" pos:end="299:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:53"><expr pos:start="301:5" pos:end="301:52"><name pos:start="301:5" pos:end="301:17"><name pos:start="301:5" pos:end="301:6">oc</name><operator pos:start="301:7" pos:end="301:8">-&gt;</operator><name pos:start="301:9" pos:end="301:17">max_delay</name></name><operator pos:start="301:18" pos:end="301:18">=</operator> <operator pos:start="301:20" pos:end="301:20">(</operator><name pos:start="301:21" pos:end="301:23">int</name><operator pos:start="301:24" pos:end="301:24">)</operator><operator pos:start="301:25" pos:end="301:25">(</operator><name pos:start="301:26" pos:end="301:38">mux_max_delay</name><operator pos:start="301:39" pos:end="301:39">*</operator><name pos:start="301:40" pos:end="301:51">AV_TIME_BASE</name><operator pos:start="301:52" pos:end="301:52">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="305:5" pos:end="311:5"><if pos:start="305:5" pos:end="311:5">if <condition pos:start="305:8" pos:end="305:25">(<expr pos:start="305:9" pos:end="305:24"><name pos:start="305:9" pos:end="305:19">loop_output</name> <operator pos:start="305:21" pos:end="305:22">&gt;=</operator> <literal type="number" pos:start="305:24" pos:end="305:24">0</literal></expr>)</condition> <block pos:start="305:27" pos:end="311:5">{<block_content pos:start="307:9" pos:end="309:38">

        <expr_stmt pos:start="307:9" pos:end="307:80"><expr pos:start="307:9" pos:end="307:79"><call pos:start="307:9" pos:end="307:79"><name pos:start="307:9" pos:end="307:14">av_log</name><argument_list pos:start="307:15" pos:end="307:79">(<argument pos:start="307:16" pos:end="307:19"><expr pos:start="307:16" pos:end="307:19"><name pos:start="307:16" pos:end="307:19">NULL</name></expr></argument>, <argument pos:start="307:22" pos:end="307:35"><expr pos:start="307:22" pos:end="307:35"><name pos:start="307:22" pos:end="307:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="307:38" pos:end="307:78"><expr pos:start="307:38" pos:end="307:78"><literal type="string" pos:start="307:38" pos:end="307:78">"-loop_output is deprecated, use -loop\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:38"><expr pos:start="309:9" pos:end="309:37"><name pos:start="309:9" pos:end="309:23"><name pos:start="309:9" pos:end="309:10">oc</name><operator pos:start="309:11" pos:end="309:12">-&gt;</operator><name pos:start="309:13" pos:end="309:23">loop_output</name></name> <operator pos:start="309:25" pos:end="309:25">=</operator> <name pos:start="309:27" pos:end="309:37">loop_output</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="315:5" pos:end="315:23">/* copy chapters */</comment>

    <if_stmt pos:start="317:5" pos:end="345:5"><if pos:start="317:5" pos:end="345:5">if <condition pos:start="317:8" pos:end="317:46">(<expr pos:start="317:9" pos:end="317:45"><name pos:start="317:9" pos:end="317:27">chapters_input_file</name> <operator pos:start="317:29" pos:end="317:30">&gt;=</operator> <name pos:start="317:32" pos:end="317:45">nb_input_files</name></expr>)</condition> <block pos:start="317:48" pos:end="345:5">{<block_content pos:start="319:9" pos:end="343:9">

        <if_stmt pos:start="319:9" pos:end="343:9"><if pos:start="319:9" pos:end="335:9">if <condition pos:start="319:12" pos:end="319:43">(<expr pos:start="319:13" pos:end="319:42"><name pos:start="319:13" pos:end="319:31">chapters_input_file</name> <operator pos:start="319:33" pos:end="319:34">==</operator> <name pos:start="319:36" pos:end="319:42">INT_MAX</name></expr>)</condition> <block pos:start="319:45" pos:end="335:9">{<block_content pos:start="323:13" pos:end="333:17">

            <comment type="block" pos:start="321:13" pos:end="321:70">/* copy chapters from the first input file that has them*/</comment>

            <expr_stmt pos:start="323:13" pos:end="323:37"><expr pos:start="323:13" pos:end="323:36"><name pos:start="323:13" pos:end="323:31">chapters_input_file</name> <operator pos:start="323:33" pos:end="323:33">=</operator> <operator pos:start="323:35" pos:end="323:35">-</operator><literal type="number" pos:start="323:36" pos:end="323:36">1</literal></expr>;</expr_stmt>

            <for pos:start="325:13" pos:end="333:17">for <control pos:start="325:17" pos:end="325:48">(<init pos:start="325:18" pos:end="325:23"><expr pos:start="325:18" pos:end="325:22"><name pos:start="325:18" pos:end="325:18">i</name> <operator pos:start="325:20" pos:end="325:20">=</operator> <literal type="number" pos:start="325:22" pos:end="325:22">0</literal></expr>;</init> <condition pos:start="325:25" pos:end="325:43"><expr pos:start="325:25" pos:end="325:42"><name pos:start="325:25" pos:end="325:25">i</name> <operator pos:start="325:27" pos:end="325:27">&lt;</operator> <name pos:start="325:29" pos:end="325:42">nb_input_files</name></expr>;</condition> <incr pos:start="325:45" pos:end="325:47"><expr pos:start="325:45" pos:end="325:47"><name pos:start="325:45" pos:end="325:45">i</name><operator pos:start="325:46" pos:end="325:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="327:17" pos:end="333:17"><block_content pos:start="327:17" pos:end="333:17">

                <if_stmt pos:start="327:17" pos:end="333:17"><if pos:start="327:17" pos:end="333:17">if <condition pos:start="327:20" pos:end="327:52">(<expr pos:start="327:21" pos:end="327:51"><name pos:start="327:21" pos:end="327:34"><name pos:start="327:21" pos:end="327:31">input_files</name><index pos:start="327:32" pos:end="327:34">[<expr pos:start="327:33" pos:end="327:33"><name pos:start="327:33" pos:end="327:33">i</name></expr>]</index></name><operator pos:start="327:35" pos:end="327:35">.</operator><name pos:start="327:36" pos:end="327:51"><name pos:start="327:36" pos:end="327:38">ctx</name><operator pos:start="327:39" pos:end="327:40">-&gt;</operator><name pos:start="327:41" pos:end="327:51">nb_chapters</name></name></expr>)</condition> <block pos:start="327:54" pos:end="333:17">{<block_content pos:start="329:21" pos:end="331:26">

                    <expr_stmt pos:start="329:21" pos:end="329:44"><expr pos:start="329:21" pos:end="329:43"><name pos:start="329:21" pos:end="329:39">chapters_input_file</name> <operator pos:start="329:41" pos:end="329:41">=</operator> <name pos:start="329:43" pos:end="329:43">i</name></expr>;</expr_stmt>

                    <break pos:start="331:21" pos:end="331:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="335:11" pos:end="343:9">else <block pos:start="335:16" pos:end="343:9">{<block_content pos:start="337:13" pos:end="341:28">

            <expr_stmt pos:start="337:13" pos:end="339:40"><expr pos:start="337:13" pos:end="339:39"><call pos:start="337:13" pos:end="339:39"><name pos:start="337:13" pos:end="337:18">av_log</name><argument_list pos:start="337:19" pos:end="339:39">(<argument pos:start="337:20" pos:end="337:23"><expr pos:start="337:20" pos:end="337:23"><name pos:start="337:20" pos:end="337:23">NULL</name></expr></argument>, <argument pos:start="337:26" pos:end="337:37"><expr pos:start="337:26" pos:end="337:37"><name pos:start="337:26" pos:end="337:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="337:40" pos:end="337:90"><expr pos:start="337:40" pos:end="337:90"><literal type="string" pos:start="337:40" pos:end="337:90">"Invalid input file index %d in chapter mapping.\n"</literal></expr></argument>,

                   <argument pos:start="339:20" pos:end="339:38"><expr pos:start="339:20" pos:end="339:38"><name pos:start="339:20" pos:end="339:38">chapters_input_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:28"><expr pos:start="341:13" pos:end="341:27"><call pos:start="341:13" pos:end="341:27"><name pos:start="341:13" pos:end="341:24">exit_program</name><argument_list pos:start="341:25" pos:end="341:27">(<argument pos:start="341:26" pos:end="341:26"><expr pos:start="341:26" pos:end="341:26"><literal type="number" pos:start="341:26" pos:end="341:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="347:5" pos:end="349:64"><if pos:start="347:5" pos:end="349:64">if <condition pos:start="347:8" pos:end="347:33">(<expr pos:start="347:9" pos:end="347:32"><name pos:start="347:9" pos:end="347:27">chapters_input_file</name> <operator pos:start="347:29" pos:end="347:30">&gt;=</operator> <literal type="number" pos:start="347:32" pos:end="347:32">0</literal></expr>)</condition><block type="pseudo" pos:start="349:9" pos:end="349:64"><block_content pos:start="349:9" pos:end="349:64">

        <expr_stmt pos:start="349:9" pos:end="349:64"><expr pos:start="349:9" pos:end="349:63"><call pos:start="349:9" pos:end="349:63"><name pos:start="349:9" pos:end="349:21">copy_chapters</name><argument_list pos:start="349:22" pos:end="349:63">(<argument pos:start="349:23" pos:end="349:41"><expr pos:start="349:23" pos:end="349:41"><name pos:start="349:23" pos:end="349:41">chapters_input_file</name></expr></argument>, <argument pos:start="349:44" pos:end="349:62"><expr pos:start="349:44" pos:end="349:62"><name pos:start="349:44" pos:end="349:58">nb_output_files</name> <operator pos:start="349:60" pos:end="349:60">-</operator> <literal type="number" pos:start="349:62" pos:end="349:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="353:5" pos:end="353:23">/* copy metadata */</comment>

    <for pos:start="355:5" pos:end="441:5">for <control pos:start="355:9" pos:end="355:43">(<init pos:start="355:10" pos:end="355:15"><expr pos:start="355:10" pos:end="355:14"><name pos:start="355:10" pos:end="355:10">i</name> <operator pos:start="355:12" pos:end="355:12">=</operator> <literal type="number" pos:start="355:14" pos:end="355:14">0</literal></expr>;</init> <condition pos:start="355:17" pos:end="355:38"><expr pos:start="355:17" pos:end="355:37"><name pos:start="355:17" pos:end="355:17">i</name> <operator pos:start="355:19" pos:end="355:19">&lt;</operator> <name pos:start="355:21" pos:end="355:37">nb_meta_data_maps</name></expr>;</condition> <incr pos:start="355:40" pos:end="355:42"><expr pos:start="355:40" pos:end="355:42"><name pos:start="355:40" pos:end="355:40">i</name><operator pos:start="355:41" pos:end="355:42">++</operator></expr></incr>)</control> <block pos:start="355:45" pos:end="441:5">{<block_content pos:start="357:9" pos:end="439:64">

        <decl_stmt pos:start="357:9" pos:end="357:34"><decl pos:start="357:9" pos:end="357:33"><type pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:23">AVFormatContext</name> <modifier pos:start="357:25" pos:end="357:25">*</modifier></type><name pos:start="357:26" pos:end="357:33"><name pos:start="357:26" pos:end="357:30">files</name><index pos:start="357:31" pos:end="357:33">[<expr pos:start="357:32" pos:end="357:32"><literal type="number" pos:start="357:32" pos:end="357:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="359:9" pos:end="359:34"><decl pos:start="359:9" pos:end="359:33"><type pos:start="359:9" pos:end="359:26"><name pos:start="359:9" pos:end="359:20">AVDictionary</name>    <modifier pos:start="359:25" pos:end="359:25">*</modifier><modifier pos:start="359:26" pos:end="359:26">*</modifier></type><name pos:start="359:27" pos:end="359:33"><name pos:start="359:27" pos:end="359:30">meta</name><index pos:start="359:31" pos:end="359:33">[<expr pos:start="359:32" pos:end="359:32"><literal type="number" pos:start="359:32" pos:end="359:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="361:9" pos:end="376:0"><decl pos:start="361:9" pos:end="361:13"><type pos:start="361:9" pos:end="361:11"><name pos:start="361:9" pos:end="361:11">int</name></type> <name pos:start="361:13" pos:end="361:13">j</name></decl>;</decl_stmt>



<cpp:define pos:start="365:1" pos:end="375:9">#<cpp:directive pos:start="365:2" pos:end="365:7">define</cpp:directive> <cpp:macro pos:start="365:9" pos:end="365:51"><name pos:start="365:9" pos:end="365:28">METADATA_CHECK_INDEX</name><parameter_list pos:start="365:29" pos:end="365:51">(<parameter pos:start="365:30" pos:end="365:34"><type pos:start="365:30" pos:end="365:34"><name pos:start="365:30" pos:end="365:34">index</name></type></parameter>, <parameter pos:start="365:37" pos:end="365:44"><type pos:start="365:37" pos:end="365:44"><name pos:start="365:37" pos:end="365:44">nb_elems</name></type></parameter>, <parameter pos:start="365:47" pos:end="365:50"><type pos:start="365:47" pos:end="365:50"><name pos:start="365:47" pos:end="365:50">desc</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="367:9" pos:end="375:9">if ((index) &lt; 0 || (index) &gt;= (nb_elems)) {\

            av_log(NULL, AV_LOG_ERROR, "Invalid %s index %d while processing metadata maps\n",\

                     (desc), (index));\

            exit_program(1);\

        }</cpp:value></cpp:define>



        <decl_stmt pos:start="379:9" pos:end="379:54"><decl pos:start="379:9" pos:end="379:53"><type pos:start="379:9" pos:end="379:11"><name pos:start="379:9" pos:end="379:11">int</name></type> <name pos:start="379:13" pos:end="379:25">in_file_index</name> <init pos:start="379:27" pos:end="379:53">= <expr pos:start="379:29" pos:end="379:53"><name pos:start="379:29" pos:end="379:48"><name pos:start="379:29" pos:end="379:42">meta_data_maps</name><index pos:start="379:43" pos:end="379:45">[<expr pos:start="379:44" pos:end="379:44"><name pos:start="379:44" pos:end="379:44">i</name></expr>]</index><index pos:start="379:46" pos:end="379:48">[<expr pos:start="379:47" pos:end="379:47"><literal type="number" pos:start="379:47" pos:end="379:47">1</literal></expr>]</index></name><operator pos:start="379:49" pos:end="379:49">.</operator><name pos:start="379:50" pos:end="379:53">file</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="381:9" pos:end="383:21"><if pos:start="381:9" pos:end="383:21">if <condition pos:start="381:12" pos:end="381:30">(<expr pos:start="381:13" pos:end="381:29"><name pos:start="381:13" pos:end="381:25">in_file_index</name> <operator pos:start="381:27" pos:end="381:27">&lt;</operator> <literal type="number" pos:start="381:29" pos:end="381:29">0</literal></expr>)</condition><block type="pseudo" pos:start="383:13" pos:end="383:21"><block_content pos:start="383:13" pos:end="383:21">

            <continue pos:start="383:13" pos:end="383:21">continue;</continue></block_content></block></if></if_stmt>

        <macro pos:start="385:9" pos:end="385:73"><name pos:start="385:9" pos:end="385:28">METADATA_CHECK_INDEX</name><argument_list pos:start="385:29" pos:end="385:73">(<argument pos:start="385:30" pos:end="385:42">in_file_index</argument>, <argument pos:start="385:45" pos:end="385:58">nb_input_files</argument>, <argument pos:start="385:61" pos:end="385:72"><literal type="string" pos:start="385:61" pos:end="385:72">"input file"</literal></argument>)</argument_list></macro>



        <expr_stmt pos:start="389:9" pos:end="389:22"><expr pos:start="389:9" pos:end="389:21"><name pos:start="389:9" pos:end="389:16"><name pos:start="389:9" pos:end="389:13">files</name><index pos:start="389:14" pos:end="389:16">[<expr pos:start="389:15" pos:end="389:15"><literal type="number" pos:start="389:15" pos:end="389:15">0</literal></expr>]</index></name> <operator pos:start="389:18" pos:end="389:18">=</operator> <name pos:start="389:20" pos:end="389:21">oc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:50"><expr pos:start="391:9" pos:end="391:49"><name pos:start="391:9" pos:end="391:16"><name pos:start="391:9" pos:end="391:13">files</name><index pos:start="391:14" pos:end="391:16">[<expr pos:start="391:15" pos:end="391:15"><literal type="number" pos:start="391:15" pos:end="391:15">1</literal></expr>]</index></name> <operator pos:start="391:18" pos:end="391:18">=</operator> <name pos:start="391:20" pos:end="391:45"><name pos:start="391:20" pos:end="391:30">input_files</name><index pos:start="391:31" pos:end="391:45">[<expr pos:start="391:32" pos:end="391:44"><name pos:start="391:32" pos:end="391:44">in_file_index</name></expr>]</index></name><operator pos:start="391:46" pos:end="391:46">.</operator><name pos:start="391:47" pos:end="391:49">ctx</name></expr>;</expr_stmt>



        <for pos:start="395:9" pos:end="435:9">for <control pos:start="395:13" pos:end="395:31">(<init pos:start="395:14" pos:end="395:19"><expr pos:start="395:14" pos:end="395:18"><name pos:start="395:14" pos:end="395:14">j</name> <operator pos:start="395:16" pos:end="395:16">=</operator> <literal type="number" pos:start="395:18" pos:end="395:18">0</literal></expr>;</init> <condition pos:start="395:21" pos:end="395:26"><expr pos:start="395:21" pos:end="395:25"><name pos:start="395:21" pos:end="395:21">j</name> <operator pos:start="395:23" pos:end="395:23">&lt;</operator> <literal type="number" pos:start="395:25" pos:end="395:25">2</literal></expr>;</condition> <incr pos:start="395:28" pos:end="395:30"><expr pos:start="395:28" pos:end="395:30"><name pos:start="395:28" pos:end="395:28">j</name><operator pos:start="395:29" pos:end="395:30">++</operator></expr></incr>)</control> <block pos:start="395:33" pos:end="435:9">{<block_content pos:start="397:13" pos:end="433:13">

            <decl_stmt pos:start="397:13" pos:end="397:53"><decl pos:start="397:13" pos:end="397:52"><type pos:start="397:13" pos:end="397:25"><name pos:start="397:13" pos:end="397:23">MetadataMap</name> <modifier pos:start="397:25" pos:end="397:25">*</modifier></type><name pos:start="397:26" pos:end="397:28">map</name> <init pos:start="397:30" pos:end="397:52">= <expr pos:start="397:32" pos:end="397:52"><operator pos:start="397:32" pos:end="397:32">&amp;</operator><name pos:start="397:33" pos:end="397:52"><name pos:start="397:33" pos:end="397:46">meta_data_maps</name><index pos:start="397:47" pos:end="397:49">[<expr pos:start="397:48" pos:end="397:48"><name pos:start="397:48" pos:end="397:48">i</name></expr>]</index><index pos:start="397:50" pos:end="397:52">[<expr pos:start="397:51" pos:end="397:51"><name pos:start="397:51" pos:end="397:51">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <switch pos:start="401:13" pos:end="433:13">switch <condition pos:start="401:20" pos:end="401:30">(<expr pos:start="401:21" pos:end="401:29"><name pos:start="401:21" pos:end="401:29"><name pos:start="401:21" pos:end="401:23">map</name><operator pos:start="401:24" pos:end="401:25">-&gt;</operator><name pos:start="401:26" pos:end="401:29">type</name></name></expr>)</condition> <block pos:start="401:32" pos:end="433:13">{<block_content pos:start="403:13" pos:end="431:22">

            <case pos:start="403:13" pos:end="403:21">case <expr pos:start="403:18" pos:end="403:20"><literal type="char" pos:start="403:18" pos:end="403:20">'g'</literal></expr>:</case>

                <expr_stmt pos:start="405:17" pos:end="405:46"><expr pos:start="405:17" pos:end="405:45"><name pos:start="405:17" pos:end="405:23"><name pos:start="405:17" pos:end="405:20">meta</name><index pos:start="405:21" pos:end="405:23">[<expr pos:start="405:22" pos:end="405:22"><name pos:start="405:22" pos:end="405:22">j</name></expr>]</index></name> <operator pos:start="405:25" pos:end="405:25">=</operator> <operator pos:start="405:27" pos:end="405:27">&amp;</operator><name pos:start="405:28" pos:end="405:35"><name pos:start="405:28" pos:end="405:32">files</name><index pos:start="405:33" pos:end="405:35">[<expr pos:start="405:34" pos:end="405:34"><name pos:start="405:34" pos:end="405:34">j</name></expr>]</index></name><operator pos:start="405:36" pos:end="405:37">-&gt;</operator><name pos:start="405:38" pos:end="405:45">metadata</name></expr>;</expr_stmt>

                <break pos:start="407:17" pos:end="407:22">break;</break>

            <case pos:start="409:13" pos:end="409:21">case <expr pos:start="409:18" pos:end="409:20"><literal type="char" pos:start="409:18" pos:end="409:20">'s'</literal></expr>:</case>

                <macro pos:start="411:17" pos:end="411:80"><name pos:start="411:17" pos:end="411:36">METADATA_CHECK_INDEX</name><argument_list pos:start="411:37" pos:end="411:80">(<argument pos:start="411:38" pos:end="411:47">map-&gt;index</argument>, <argument pos:start="411:50" pos:end="411:69">files[j]-&gt;nb_streams</argument>, <argument pos:start="411:72" pos:end="411:79"><literal type="string" pos:start="411:72" pos:end="411:79">"stream"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="413:17" pos:end="413:67"><expr pos:start="413:17" pos:end="413:66"><name pos:start="413:17" pos:end="413:23"><name pos:start="413:17" pos:end="413:20">meta</name><index pos:start="413:21" pos:end="413:23">[<expr pos:start="413:22" pos:end="413:22"><name pos:start="413:22" pos:end="413:22">j</name></expr>]</index></name> <operator pos:start="413:25" pos:end="413:25">=</operator> <operator pos:start="413:27" pos:end="413:27">&amp;</operator><name pos:start="413:28" pos:end="413:35"><name pos:start="413:28" pos:end="413:32">files</name><index pos:start="413:33" pos:end="413:35">[<expr pos:start="413:34" pos:end="413:34"><name pos:start="413:34" pos:end="413:34">j</name></expr>]</index></name><operator pos:start="413:36" pos:end="413:37">-&gt;</operator><name pos:start="413:38" pos:end="413:56"><name pos:start="413:38" pos:end="413:44">streams</name><index pos:start="413:45" pos:end="413:56">[<expr pos:start="413:46" pos:end="413:55"><name pos:start="413:46" pos:end="413:55"><name pos:start="413:46" pos:end="413:48">map</name><operator pos:start="413:49" pos:end="413:50">-&gt;</operator><name pos:start="413:51" pos:end="413:55">index</name></name></expr>]</index></name><operator pos:start="413:57" pos:end="413:58">-&gt;</operator><name pos:start="413:59" pos:end="413:66">metadata</name></expr>;</expr_stmt>

                <break pos:start="415:17" pos:end="415:22">break;</break>

            <case pos:start="417:13" pos:end="417:21">case <expr pos:start="417:18" pos:end="417:20"><literal type="char" pos:start="417:18" pos:end="417:20">'c'</literal></expr>:</case>

                <macro pos:start="419:17" pos:end="419:82"><name pos:start="419:17" pos:end="419:36">METADATA_CHECK_INDEX</name><argument_list pos:start="419:37" pos:end="419:82">(<argument pos:start="419:38" pos:end="419:47">map-&gt;index</argument>, <argument pos:start="419:50" pos:end="419:70">files[j]-&gt;nb_chapters</argument>, <argument pos:start="419:73" pos:end="419:81"><literal type="string" pos:start="419:73" pos:end="419:81">"chapter"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="421:17" pos:end="421:68"><expr pos:start="421:17" pos:end="421:67"><name pos:start="421:17" pos:end="421:23"><name pos:start="421:17" pos:end="421:20">meta</name><index pos:start="421:21" pos:end="421:23">[<expr pos:start="421:22" pos:end="421:22"><name pos:start="421:22" pos:end="421:22">j</name></expr>]</index></name> <operator pos:start="421:25" pos:end="421:25">=</operator> <operator pos:start="421:27" pos:end="421:27">&amp;</operator><name pos:start="421:28" pos:end="421:35"><name pos:start="421:28" pos:end="421:32">files</name><index pos:start="421:33" pos:end="421:35">[<expr pos:start="421:34" pos:end="421:34"><name pos:start="421:34" pos:end="421:34">j</name></expr>]</index></name><operator pos:start="421:36" pos:end="421:37">-&gt;</operator><name pos:start="421:38" pos:end="421:57"><name pos:start="421:38" pos:end="421:45">chapters</name><index pos:start="421:46" pos:end="421:57">[<expr pos:start="421:47" pos:end="421:56"><name pos:start="421:47" pos:end="421:56"><name pos:start="421:47" pos:end="421:49">map</name><operator pos:start="421:50" pos:end="421:51">-&gt;</operator><name pos:start="421:52" pos:end="421:56">index</name></name></expr>]</index></name><operator pos:start="421:58" pos:end="421:59">-&gt;</operator><name pos:start="421:60" pos:end="421:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="423:17" pos:end="423:22">break;</break>

            <case pos:start="425:13" pos:end="425:21">case <expr pos:start="425:18" pos:end="425:20"><literal type="char" pos:start="425:18" pos:end="425:20">'p'</literal></expr>:</case>

                <macro pos:start="427:17" pos:end="427:82"><name pos:start="427:17" pos:end="427:36">METADATA_CHECK_INDEX</name><argument_list pos:start="427:37" pos:end="427:82">(<argument pos:start="427:38" pos:end="427:47">map-&gt;index</argument>, <argument pos:start="427:50" pos:end="427:70">files[j]-&gt;nb_programs</argument>, <argument pos:start="427:73" pos:end="427:81"><literal type="string" pos:start="427:73" pos:end="427:81">"program"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="429:17" pos:end="429:68"><expr pos:start="429:17" pos:end="429:67"><name pos:start="429:17" pos:end="429:23"><name pos:start="429:17" pos:end="429:20">meta</name><index pos:start="429:21" pos:end="429:23">[<expr pos:start="429:22" pos:end="429:22"><name pos:start="429:22" pos:end="429:22">j</name></expr>]</index></name> <operator pos:start="429:25" pos:end="429:25">=</operator> <operator pos:start="429:27" pos:end="429:27">&amp;</operator><name pos:start="429:28" pos:end="429:35"><name pos:start="429:28" pos:end="429:32">files</name><index pos:start="429:33" pos:end="429:35">[<expr pos:start="429:34" pos:end="429:34"><name pos:start="429:34" pos:end="429:34">j</name></expr>]</index></name><operator pos:start="429:36" pos:end="429:37">-&gt;</operator><name pos:start="429:38" pos:end="429:57"><name pos:start="429:38" pos:end="429:45">programs</name><index pos:start="429:46" pos:end="429:57">[<expr pos:start="429:47" pos:end="429:56"><name pos:start="429:47" pos:end="429:56"><name pos:start="429:47" pos:end="429:49">map</name><operator pos:start="429:50" pos:end="429:51">-&gt;</operator><name pos:start="429:52" pos:end="429:56">index</name></name></expr>]</index></name><operator pos:start="429:58" pos:end="429:59">-&gt;</operator><name pos:start="429:60" pos:end="429:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="431:17" pos:end="431:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>



        <expr_stmt pos:start="439:9" pos:end="439:64"><expr pos:start="439:9" pos:end="439:63"><call pos:start="439:9" pos:end="439:63"><name pos:start="439:9" pos:end="439:20">av_dict_copy</name><argument_list pos:start="439:21" pos:end="439:63">(<argument pos:start="439:22" pos:end="439:28"><expr pos:start="439:22" pos:end="439:28"><name pos:start="439:22" pos:end="439:28"><name pos:start="439:22" pos:end="439:25">meta</name><index pos:start="439:26" pos:end="439:28">[<expr pos:start="439:27" pos:end="439:27"><literal type="number" pos:start="439:27" pos:end="439:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:31" pos:end="439:38"><expr pos:start="439:31" pos:end="439:38"><operator pos:start="439:31" pos:end="439:31">*</operator><name pos:start="439:32" pos:end="439:38"><name pos:start="439:32" pos:end="439:35">meta</name><index pos:start="439:36" pos:end="439:38">[<expr pos:start="439:37" pos:end="439:37"><literal type="number" pos:start="439:37" pos:end="439:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:41" pos:end="439:62"><expr pos:start="439:41" pos:end="439:62"><name pos:start="439:41" pos:end="439:62">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="445:5" pos:end="445:41">/* copy global metadata by default */</comment>

    <if_stmt pos:start="447:5" pos:end="451:45"><if pos:start="447:5" pos:end="451:45">if <condition pos:start="447:8" pos:end="447:51">(<expr pos:start="447:9" pos:end="447:50"><name pos:start="447:9" pos:end="447:32">metadata_global_autocopy</name> <operator pos:start="447:34" pos:end="447:35">&amp;&amp;</operator> <name pos:start="447:37" pos:end="447:50">nb_input_files</name></expr>)</condition><block type="pseudo" pos:start="449:9" pos:end="451:45"><block_content pos:start="449:9" pos:end="451:45">

        <expr_stmt pos:start="449:9" pos:end="451:45"><expr pos:start="449:9" pos:end="451:44"><call pos:start="449:9" pos:end="451:44"><name pos:start="449:9" pos:end="449:20">av_dict_copy</name><argument_list pos:start="449:21" pos:end="451:44">(<argument pos:start="449:22" pos:end="449:34"><expr pos:start="449:22" pos:end="449:34"><operator pos:start="449:22" pos:end="449:22">&amp;</operator><name pos:start="449:23" pos:end="449:34"><name pos:start="449:23" pos:end="449:24">oc</name><operator pos:start="449:25" pos:end="449:26">-&gt;</operator><name pos:start="449:27" pos:end="449:34">metadata</name></name></expr></argument>, <argument pos:start="449:37" pos:end="449:64"><expr pos:start="449:37" pos:end="449:64"><name pos:start="449:37" pos:end="449:50"><name pos:start="449:37" pos:end="449:47">input_files</name><index pos:start="449:48" pos:end="449:50">[<expr pos:start="449:49" pos:end="449:49"><literal type="number" pos:start="449:49" pos:end="449:49">0</literal></expr>]</index></name><operator pos:start="449:51" pos:end="449:51">.</operator><name pos:start="449:52" pos:end="449:64"><name pos:start="449:52" pos:end="449:54">ctx</name><operator pos:start="449:55" pos:end="449:56">-&gt;</operator><name pos:start="449:57" pos:end="449:64">metadata</name></name></expr></argument>,

                     <argument pos:start="451:22" pos:end="451:43"><expr pos:start="451:22" pos:end="451:43"><name pos:start="451:22" pos:end="451:43">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="453:5" pos:end="461:9"><if pos:start="453:5" pos:end="461:9">if <condition pos:start="453:8" pos:end="453:34">(<expr pos:start="453:9" pos:end="453:33"><name pos:start="453:9" pos:end="453:33">metadata_streams_autocopy</name></expr>)</condition><block type="pseudo" pos:start="455:9" pos:end="461:9"><block_content pos:start="455:9" pos:end="461:9">

        <for pos:start="455:9" pos:end="461:9">for <control pos:start="455:13" pos:end="455:89">(<init pos:start="455:14" pos:end="455:61"><expr pos:start="455:14" pos:end="455:60"><name pos:start="455:14" pos:end="455:14">i</name> <operator pos:start="455:16" pos:end="455:16">=</operator> <name pos:start="455:18" pos:end="455:50"><name pos:start="455:18" pos:end="455:29">output_files</name><index pos:start="455:30" pos:end="455:50">[<expr pos:start="455:31" pos:end="455:49"><name pos:start="455:31" pos:end="455:45">nb_output_files</name> <operator pos:start="455:47" pos:end="455:47">-</operator> <literal type="number" pos:start="455:49" pos:end="455:49">1</literal></expr>]</index></name><operator pos:start="455:51" pos:end="455:51">.</operator><name pos:start="455:52" pos:end="455:60">ost_index</name></expr>;</init> <condition pos:start="455:63" pos:end="455:84"><expr pos:start="455:63" pos:end="455:83"><name pos:start="455:63" pos:end="455:63">i</name> <operator pos:start="455:65" pos:end="455:65">&lt;</operator> <name pos:start="455:67" pos:end="455:83">nb_output_streams</name></expr>;</condition> <incr pos:start="455:86" pos:end="455:88"><expr pos:start="455:86" pos:end="455:88"><name pos:start="455:86" pos:end="455:86">i</name><operator pos:start="455:87" pos:end="455:88">++</operator></expr></incr>)</control> <block pos:start="455:91" pos:end="461:9">{<block_content pos:start="457:13" pos:end="459:101">

            <decl_stmt pos:start="457:13" pos:end="457:78"><decl pos:start="457:13" pos:end="457:77"><type pos:start="457:13" pos:end="457:25"><name pos:start="457:13" pos:end="457:23">InputStream</name> <modifier pos:start="457:25" pos:end="457:25">*</modifier></type><name pos:start="457:26" pos:end="457:28">ist</name> <init pos:start="457:30" pos:end="457:77">= <expr pos:start="457:32" pos:end="457:77"><operator pos:start="457:32" pos:end="457:32">&amp;</operator><name pos:start="457:33" pos:end="457:77"><name pos:start="457:33" pos:end="457:45">input_streams</name><index pos:start="457:46" pos:end="457:77">[<expr pos:start="457:47" pos:end="457:76"><name pos:start="457:47" pos:end="457:63"><name pos:start="457:47" pos:end="457:60">output_streams</name><index pos:start="457:61" pos:end="457:63">[<expr pos:start="457:62" pos:end="457:62"><name pos:start="457:62" pos:end="457:62">i</name></expr>]</index></name><operator pos:start="457:64" pos:end="457:64">.</operator><name pos:start="457:65" pos:end="457:76">source_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:101"><expr pos:start="459:13" pos:end="459:100"><call pos:start="459:13" pos:end="459:100"><name pos:start="459:13" pos:end="459:24">av_dict_copy</name><argument_list pos:start="459:25" pos:end="459:100">(<argument pos:start="459:26" pos:end="459:56"><expr pos:start="459:26" pos:end="459:56"><operator pos:start="459:26" pos:end="459:26">&amp;</operator><name pos:start="459:27" pos:end="459:43"><name pos:start="459:27" pos:end="459:40">output_streams</name><index pos:start="459:41" pos:end="459:43">[<expr pos:start="459:42" pos:end="459:42"><name pos:start="459:42" pos:end="459:42">i</name></expr>]</index></name><operator pos:start="459:44" pos:end="459:44">.</operator><name pos:start="459:45" pos:end="459:56"><name pos:start="459:45" pos:end="459:46">st</name><operator pos:start="459:47" pos:end="459:48">-&gt;</operator><name pos:start="459:49" pos:end="459:56">metadata</name></name></expr></argument>, <argument pos:start="459:59" pos:end="459:75"><expr pos:start="459:59" pos:end="459:75"><name pos:start="459:59" pos:end="459:75"><name pos:start="459:59" pos:end="459:61">ist</name><operator pos:start="459:62" pos:end="459:63">-&gt;</operator><name pos:start="459:64" pos:end="459:65">st</name><operator pos:start="459:66" pos:end="459:67">-&gt;</operator><name pos:start="459:68" pos:end="459:75">metadata</name></name></expr></argument>, <argument pos:start="459:78" pos:end="459:99"><expr pos:start="459:78" pos:end="459:99"><name pos:start="459:78" pos:end="459:99">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <expr_stmt pos:start="465:5" pos:end="465:39"><expr pos:start="465:5" pos:end="465:38"><name pos:start="465:5" pos:end="465:14">frame_rate</name>    <operator pos:start="465:19" pos:end="465:19">=</operator> <operator pos:start="465:21" pos:end="465:21">(</operator><name pos:start="465:22" pos:end="465:31">AVRational</name><operator pos:start="465:32" pos:end="465:32">)</operator><block pos:start="465:33" pos:end="465:38">{<expr pos:start="465:34" pos:end="465:34"><literal type="number" pos:start="465:34" pos:end="465:34">0</literal></expr>, <expr pos:start="465:37" pos:end="465:37"><literal type="number" pos:start="465:37" pos:end="465:37">0</literal></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:22"><expr pos:start="467:5" pos:end="467:21"><name pos:start="467:5" pos:end="467:15">frame_width</name>   <operator pos:start="467:19" pos:end="467:19">=</operator> <literal type="number" pos:start="467:21" pos:end="467:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:22"><expr pos:start="469:5" pos:end="469:21"><name pos:start="469:5" pos:end="469:16">frame_height</name>  <operator pos:start="469:19" pos:end="469:19">=</operator> <literal type="number" pos:start="469:21" pos:end="469:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:26"><expr pos:start="471:5" pos:end="471:25"><name pos:start="471:5" pos:end="471:21">audio_sample_rate</name> <operator pos:start="471:23" pos:end="471:23">=</operator> <literal type="number" pos:start="471:25" pos:end="471:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:26"><expr pos:start="473:5" pos:end="473:25"><name pos:start="473:5" pos:end="473:18">audio_channels</name>    <operator pos:start="473:23" pos:end="473:23">=</operator> <literal type="number" pos:start="473:25" pos:end="473:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:43"><expr pos:start="475:5" pos:end="475:42"><name pos:start="475:5" pos:end="475:20">audio_sample_fmt</name>  <operator pos:start="475:23" pos:end="475:23">=</operator> <name pos:start="475:25" pos:end="475:42">AV_SAMPLE_FMT_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:34"><expr pos:start="477:5" pos:end="477:33"><name pos:start="477:5" pos:end="477:23">chapters_input_file</name> <operator pos:start="477:25" pos:end="477:25">=</operator> <name pos:start="477:27" pos:end="477:33">INT_MAX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="481:5" pos:end="481:30"><expr pos:start="481:5" pos:end="481:29"><call pos:start="481:5" pos:end="481:29"><name pos:start="481:5" pos:end="481:12">av_freep</name><argument_list pos:start="481:13" pos:end="481:29">(<argument pos:start="481:14" pos:end="481:28"><expr pos:start="481:14" pos:end="481:28"><operator pos:start="481:14" pos:end="481:14">&amp;</operator><name pos:start="481:15" pos:end="481:28">meta_data_maps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="483:5" pos:end="483:26"><expr pos:start="483:5" pos:end="483:25"><name pos:start="483:5" pos:end="483:21">nb_meta_data_maps</name> <operator pos:start="483:23" pos:end="483:23">=</operator> <literal type="number" pos:start="483:25" pos:end="483:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="485:5" pos:end="485:35"><expr pos:start="485:5" pos:end="485:34"><name pos:start="485:5" pos:end="485:28">metadata_global_autocopy</name>   <operator pos:start="485:32" pos:end="485:32">=</operator> <literal type="number" pos:start="485:34" pos:end="485:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="487:5" pos:end="487:35"><expr pos:start="487:5" pos:end="487:34"><name pos:start="487:5" pos:end="487:29">metadata_streams_autocopy</name>  <operator pos:start="487:32" pos:end="487:32">=</operator> <literal type="number" pos:start="487:34" pos:end="487:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="489:5" pos:end="489:35"><expr pos:start="489:5" pos:end="489:34"><name pos:start="489:5" pos:end="489:30">metadata_chapters_autocopy</name> <operator pos:start="489:32" pos:end="489:32">=</operator> <literal type="number" pos:start="489:34" pos:end="489:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="491:5" pos:end="491:27"><expr pos:start="491:5" pos:end="491:26"><call pos:start="491:5" pos:end="491:26"><name pos:start="491:5" pos:end="491:12">av_freep</name><argument_list pos:start="491:13" pos:end="491:26">(<argument pos:start="491:14" pos:end="491:25"><expr pos:start="491:14" pos:end="491:25"><operator pos:start="491:14" pos:end="491:14">&amp;</operator><name pos:start="491:15" pos:end="491:25">stream_maps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="493:5" pos:end="493:23"><expr pos:start="493:5" pos:end="493:22"><name pos:start="493:5" pos:end="493:18">nb_stream_maps</name> <operator pos:start="493:20" pos:end="493:20">=</operator> <literal type="number" pos:start="493:22" pos:end="493:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="497:5" pos:end="497:31"><expr pos:start="497:5" pos:end="497:30"><call pos:start="497:5" pos:end="497:30"><name pos:start="497:5" pos:end="497:16">av_dict_free</name><argument_list pos:start="497:17" pos:end="497:30">(<argument pos:start="497:18" pos:end="497:29"><expr pos:start="497:18" pos:end="497:29"><operator pos:start="497:18" pos:end="497:18">&amp;</operator><name pos:start="497:19" pos:end="497:29">codec_names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="501:5" pos:end="501:33"><expr pos:start="501:5" pos:end="501:32"><call pos:start="501:5" pos:end="501:32"><name pos:start="501:5" pos:end="501:12">av_freep</name><argument_list pos:start="501:13" pos:end="501:32">(<argument pos:start="501:14" pos:end="501:31"><expr pos:start="501:14" pos:end="501:31"><operator pos:start="501:14" pos:end="501:14">&amp;</operator><name pos:start="501:15" pos:end="501:31">forced_key_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:18"><expr pos:start="503:5" pos:end="503:17"><call pos:start="503:5" pos:end="503:17"><name pos:start="503:5" pos:end="503:15">uninit_opts</name><argument_list pos:start="503:16" pos:end="503:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:16"><expr pos:start="505:5" pos:end="505:15"><call pos:start="505:5" pos:end="505:15"><name pos:start="505:5" pos:end="505:13">init_opts</name><argument_list pos:start="505:14" pos:end="505:15">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="507:5" pos:end="507:13">return <expr pos:start="507:12" pos:end="507:12"><literal type="number" pos:start="507:12" pos:end="507:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
