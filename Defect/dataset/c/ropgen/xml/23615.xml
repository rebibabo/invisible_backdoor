<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23615.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">assign_device</name><parameter_list pos:start="1:25" pos:end="1:45">(<parameter pos:start="1:26" pos:end="1:44"><decl pos:start="1:26" pos:end="1:44"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:39">AssignedDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">flags</name> <init pos:start="5:20" pos:end="5:48">= <expr pos:start="5:22" pos:end="5:48"><name pos:start="5:22" pos:end="5:48">KVM_DEV_ASSIGN_ENABLE_IOMMU</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">r</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:58">/* Only pass non-zero PCI segment to capable module */</comment>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="15:25">(<expr pos:start="13:9" pos:end="15:24"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:60"><name pos:start="13:10" pos:end="13:28">kvm_check_extension</name><argument_list pos:start="13:29" pos:end="13:60">(<argument pos:start="13:30" pos:end="13:38"><expr pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:38">kvm_state</name></expr></argument>, <argument pos:start="13:41" pos:end="13:59"><expr pos:start="13:41" pos:end="13:59"><name pos:start="13:41" pos:end="13:59">KVM_CAP_PCI_SEGMENT</name></expr></argument>)</argument_list></call> <operator pos:start="13:62" pos:end="13:63">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:11">dev</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:17">host</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:24">domain</name></name></expr>)</condition> <block pos:start="15:27" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:23">

        <expr_stmt pos:start="17:9" pos:end="19:63"><expr pos:start="17:9" pos:end="19:62"><call pos:start="17:9" pos:end="19:62"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="19:62">(<argument pos:start="17:22" pos:end="19:61"><expr pos:start="17:22" pos:end="19:61"><literal type="string" pos:start="17:22" pos:end="17:71">"Can't assign device inside non-zero PCI segment "</literal>

                     <literal type="string" pos:start="19:22" pos:end="19:61">"as this KVM module doesn't support it."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">ENODEV</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:55">(<expr pos:start="27:9" pos:end="27:54"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:54"><name pos:start="27:10" pos:end="27:28">kvm_check_extension</name><argument_list pos:start="27:29" pos:end="27:54">(<argument pos:start="27:30" pos:end="27:38"><expr pos:start="27:30" pos:end="27:38"><name pos:start="27:30" pos:end="27:38">kvm_state</name></expr></argument>, <argument pos:start="27:41" pos:end="27:53"><expr pos:start="27:41" pos:end="27:53"><name pos:start="27:41" pos:end="27:53">KVM_CAP_IOMMU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:57" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:23">

        <expr_stmt pos:start="29:9" pos:end="31:39"><expr pos:start="29:9" pos:end="31:38"><call pos:start="29:9" pos:end="31:38"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="31:38">(<argument pos:start="29:22" pos:end="29:70"><expr pos:start="29:22" pos:end="29:70"><literal type="string" pos:start="29:22" pos:end="29:70">"No IOMMU found.  Unable to assign device \"%s\""</literal></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:37"><expr pos:start="31:22" pos:end="31:37"><name pos:start="31:22" pos:end="31:37"><name pos:start="31:22" pos:end="31:24">dev</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:29">dev</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:34">qdev</name><operator pos:start="31:35" pos:end="31:35">.</operator><name pos:start="31:36" pos:end="31:37">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:23">return <expr pos:start="33:16" pos:end="33:22"><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:22">ENODEV</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="41:32">(<expr pos:start="39:9" pos:end="41:31"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">dev</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">features</name></name> <operator pos:start="39:23" pos:end="39:23">&amp;</operator> <name pos:start="39:25" pos:end="39:55">ASSIGNED_DEVICE_SHARE_INTX_MASK</name> <operator pos:start="39:57" pos:end="39:58">&amp;&amp;</operator>

        <call pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:29">kvm_has_intx_set_mask</name><argument_list pos:start="41:30" pos:end="41:31">()</argument_list></call></expr>)</condition> <block pos:start="41:34" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:40">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:13">flags</name> <operator pos:start="43:15" pos:end="43:16">|=</operator> <name pos:start="43:18" pos:end="43:39">KVM_DEV_ASSIGN_PCI_2_3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:5">r</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <call pos:start="49:9" pos:end="49:73"><name pos:start="49:9" pos:end="49:29">kvm_device_pci_assign</name><argument_list pos:start="49:30" pos:end="49:73">(<argument pos:start="49:31" pos:end="49:39"><expr pos:start="49:31" pos:end="49:39"><name pos:start="49:31" pos:end="49:39">kvm_state</name></expr></argument>, <argument pos:start="49:42" pos:end="49:51"><expr pos:start="49:42" pos:end="49:51"><operator pos:start="49:42" pos:end="49:42">&amp;</operator><name pos:start="49:43" pos:end="49:51"><name pos:start="49:43" pos:end="49:45">dev</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:51">host</name></name></expr></argument>, <argument pos:start="49:54" pos:end="49:58"><expr pos:start="49:54" pos:end="49:58"><name pos:start="49:54" pos:end="49:58">flags</name></expr></argument>, <argument pos:start="49:61" pos:end="49:72"><expr pos:start="49:61" pos:end="49:72"><operator pos:start="49:61" pos:end="49:61">&amp;</operator><name pos:start="49:62" pos:end="49:72"><name pos:start="49:62" pos:end="49:64">dev</name><operator pos:start="49:65" pos:end="49:66">-&gt;</operator><name pos:start="49:67" pos:end="49:72">dev_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="83:5"><if pos:start="51:5" pos:end="83:5">if <condition pos:start="51:8" pos:end="51:14">(<expr pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">r</name> <operator pos:start="51:11" pos:end="51:11">&lt;</operator> <literal type="number" pos:start="51:13" pos:end="51:13">0</literal></expr>)</condition> <block pos:start="51:16" pos:end="83:5">{<block_content pos:start="53:9" pos:end="81:9">

        <switch pos:start="53:9" pos:end="81:9">switch <condition pos:start="53:16" pos:end="53:18">(<expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">r</name></expr>)</condition> <block pos:start="53:20" pos:end="81:9">{<block_content pos:start="55:9" pos:end="79:18">

        <case pos:start="55:9" pos:end="55:20">case <expr pos:start="55:14" pos:end="55:19"><operator pos:start="55:14" pos:end="55:14">-</operator><name pos:start="55:15" pos:end="55:19">EBUSY</name></expr>:</case> <block pos:start="55:22" pos:end="71:9">{<block_content pos:start="57:13" pos:end="69:18">

            <decl_stmt pos:start="57:13" pos:end="57:24"><decl pos:start="57:13" pos:end="57:23"><type pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:16">char</name> <modifier pos:start="57:18" pos:end="57:18">*</modifier></type><name pos:start="57:19" pos:end="57:23">cause</name></decl>;</decl_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:17">cause</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:46"><name pos:start="61:21" pos:end="61:41">assign_failed_examine</name><argument_list pos:start="61:42" pos:end="61:46">(<argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:45">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="65:64"><expr pos:start="63:13" pos:end="65:63"><call pos:start="63:13" pos:end="65:63"><name pos:start="63:13" pos:end="63:24">error_report</name><argument_list pos:start="63:25" pos:end="65:63">(<argument pos:start="63:26" pos:end="63:66"><expr pos:start="63:26" pos:end="63:66"><literal type="string" pos:start="63:26" pos:end="63:66">"Failed to assign device \"%s\" : %s\n%s"</literal></expr></argument>,

                         <argument pos:start="65:26" pos:end="65:41"><expr pos:start="65:26" pos:end="65:41"><name pos:start="65:26" pos:end="65:41"><name pos:start="65:26" pos:end="65:28">dev</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:33">dev</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:38">qdev</name><operator pos:start="65:39" pos:end="65:39">.</operator><name pos:start="65:40" pos:end="65:41">id</name></name></expr></argument>, <argument pos:start="65:44" pos:end="65:55"><expr pos:start="65:44" pos:end="65:55"><call pos:start="65:44" pos:end="65:55"><name pos:start="65:44" pos:end="65:51">strerror</name><argument_list pos:start="65:52" pos:end="65:55">(<argument pos:start="65:53" pos:end="65:54"><expr pos:start="65:53" pos:end="65:54"><operator pos:start="65:53" pos:end="65:53">-</operator><name pos:start="65:54" pos:end="65:54">r</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:58" pos:end="65:62"><expr pos:start="65:58" pos:end="65:62"><name pos:start="65:58" pos:end="65:62">cause</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><call pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:18">g_free</name><argument_list pos:start="67:19" pos:end="67:25">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">cause</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block>

        <default pos:start="73:9" pos:end="73:16">default:</default>

            <expr_stmt pos:start="75:13" pos:end="77:57"><expr pos:start="75:13" pos:end="77:56"><call pos:start="75:13" pos:end="77:56"><name pos:start="75:13" pos:end="75:24">error_report</name><argument_list pos:start="75:25" pos:end="77:56">(<argument pos:start="75:26" pos:end="75:62"><expr pos:start="75:26" pos:end="75:62"><literal type="string" pos:start="75:26" pos:end="75:62">"Failed to assign device \"%s\" : %s"</literal></expr></argument>,

                         <argument pos:start="77:26" pos:end="77:41"><expr pos:start="77:26" pos:end="77:41"><name pos:start="77:26" pos:end="77:41"><name pos:start="77:26" pos:end="77:28">dev</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:33">dev</name><operator pos:start="77:34" pos:end="77:34">.</operator><name pos:start="77:35" pos:end="77:38">qdev</name><operator pos:start="77:39" pos:end="77:39">.</operator><name pos:start="77:40" pos:end="77:41">id</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:55"><expr pos:start="77:44" pos:end="77:55"><call pos:start="77:44" pos:end="77:55"><name pos:start="77:44" pos:end="77:51">strerror</name><argument_list pos:start="77:52" pos:end="77:55">(<argument pos:start="77:53" pos:end="77:54"><expr pos:start="77:53" pos:end="77:54"><operator pos:start="77:53" pos:end="77:53">-</operator><name pos:start="77:54" pos:end="77:54">r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><name pos:start="85:12" pos:end="85:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
