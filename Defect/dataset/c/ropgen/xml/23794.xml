<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23794.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">flv_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:15">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:20">type</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:26">size</name></decl>, <decl pos:start="5:29" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:31">pts</name></decl>, <decl pos:start="5:34" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:38">flags</name></decl>, <decl pos:start="5:41" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:41" pos:end="5:48">is_audio</name></decl>, <decl pos:start="5:51" pos:end="5:54"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:51" pos:end="5:54">next</name></decl>, <decl pos:start="5:57" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:57" pos:end="5:59">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>



 <for pos:start="11:2" pos:end="121:2">for<control pos:start="11:5" pos:end="11:8">(<init pos:start="11:6" pos:end="11:6">;</init><condition pos:start="11:7" pos:end="11:7">;</condition><incr/>)</control><block pos:start="11:9" pos:end="121:2">{<block_content pos:start="13:5" pos:end="119:10">

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">pos</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:19">url_ftell</name><argument_list pos:start="13:20" pos:end="13:26">(<argument pos:start="13:21" pos:end="13:25"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:13">url_fskip</name><argument_list pos:start="15:14" pos:end="15:23">(<argument pos:start="15:15" pos:end="15:19"><expr pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:19">pb</name></name></expr></argument>, <argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:26" pos:end="15:54">/* size of previous packet */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:26"><name pos:start="17:12" pos:end="17:19">get_byte</name><argument_list pos:start="17:20" pos:end="17:26">(<argument pos:start="17:21" pos:end="17:25"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:8">size</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:19">get_be24</name><argument_list pos:start="19:20" pos:end="19:26">(<argument pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:7">pts</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:25"><name pos:start="21:11" pos:end="21:18">get_be24</name><argument_list pos:start="21:19" pos:end="21:25">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:24">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">pts</name> <operator pos:start="23:9" pos:end="23:10">|=</operator> <call pos:start="23:12" pos:end="23:26"><name pos:start="23:12" pos:end="23:19">get_byte</name><argument_list pos:start="23:20" pos:end="23:26">(<argument pos:start="23:21" pos:end="23:25"><expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:25">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:28" pos:end="23:29">&lt;&lt;</operator> <literal type="number" pos:start="23:31" pos:end="23:32">24</literal></expr>;</expr_stmt>

<comment type="line" pos:start="25:1" pos:end="25:77">//    av_log(s, AV_LOG_DEBUG, "type:%d, size:%d, pts:%d\n", type, size, pts);</comment>

    <if_stmt pos:start="27:5" pos:end="29:28"><if pos:start="27:5" pos:end="29:28">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><call pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:16">url_feof</name><argument_list pos:start="27:17" pos:end="27:23">(<argument pos:start="27:18" pos:end="27:22"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">s</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:22">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:28"><block_content pos:start="29:9" pos:end="29:28">

        <return pos:start="29:9" pos:end="29:28">return <expr pos:start="29:16" pos:end="29:27"><call pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:13">url_fskip</name><argument_list pos:start="31:14" pos:end="31:23">(<argument pos:start="31:15" pos:end="31:19"><expr pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:19">pb</name></name></expr></argument>, <argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:26" pos:end="31:50">/* stream id, always 0 */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:9">flags</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="39:17"><if pos:start="37:5" pos:end="39:17">if<condition pos:start="37:7" pos:end="37:17">(<expr pos:start="37:8" pos:end="37:16"><name pos:start="37:8" pos:end="37:11">size</name> <operator pos:start="37:13" pos:end="37:14">==</operator> <literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:17"><block_content pos:start="39:9" pos:end="39:17">

        <continue pos:start="39:9" pos:end="39:17">continue;</continue></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:8">next</name><operator pos:start="43:9" pos:end="43:9">=</operator> <name pos:start="43:11" pos:end="43:14">size</name> <operator pos:start="43:16" pos:end="43:16">+</operator> <call pos:start="43:18" pos:end="43:33"><name pos:start="43:18" pos:end="43:26">url_ftell</name><argument_list pos:start="43:27" pos:end="43:33">(<argument pos:start="43:28" pos:end="43:32"><expr pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="73:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:35">(<expr pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:12">type</name> <operator pos:start="47:14" pos:end="47:15">==</operator> <name pos:start="47:17" pos:end="47:34">FLV_TAG_TYPE_AUDIO</name></expr>)</condition> <block pos:start="47:37" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:32">

        <expr_stmt pos:start="49:9" pos:end="49:19"><expr pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:16">is_audio</name><operator pos:start="49:17" pos:end="49:17">=</operator><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:13">flags</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:24">get_byte</name><argument_list pos:start="51:25" pos:end="51:31">(<argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:26">s</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="59:5">else if <condition pos:start="53:15" pos:end="53:42">(<expr pos:start="53:16" pos:end="53:41"><name pos:start="53:16" pos:end="53:19">type</name> <operator pos:start="53:21" pos:end="53:22">==</operator> <name pos:start="53:24" pos:end="53:41">FLV_TAG_TYPE_VIDEO</name></expr>)</condition> <block pos:start="53:44" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:32">

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:16">is_audio</name><operator pos:start="55:17" pos:end="55:17">=</operator><literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:13">flags</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:24">get_byte</name><argument_list pos:start="57:25" pos:end="57:31">(<argument pos:start="57:26" pos:end="57:30"><expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="73:5">else <block pos:start="59:12" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:17">

        <if_stmt pos:start="61:9" pos:end="67:108"><if pos:start="61:9" pos:end="63:39">if <condition pos:start="61:12" pos:end="61:55">(<expr pos:start="61:13" pos:end="61:54"><name pos:start="61:13" pos:end="61:16">type</name> <operator pos:start="61:18" pos:end="61:19">==</operator> <name pos:start="61:21" pos:end="61:37">FLV_TAG_TYPE_META</name> <operator pos:start="61:39" pos:end="61:40">&amp;&amp;</operator> <name pos:start="61:42" pos:end="61:45">size</name> <operator pos:start="61:47" pos:end="61:47">&gt;</operator> <literal type="number" pos:start="61:49" pos:end="61:51">13</literal><operator pos:start="61:51" pos:end="61:51">+</operator><literal type="number" pos:start="61:52" pos:end="61:53">1</literal><operator pos:start="61:53" pos:end="61:53">+</operator><literal type="number" pos:start="61:54" pos:end="61:54">4</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:39"><block_content pos:start="63:13" pos:end="63:39">

            <expr_stmt pos:start="63:13" pos:end="63:39"><expr pos:start="63:13" pos:end="63:38"><call pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:29">flv_read_metabody</name><argument_list pos:start="63:30" pos:end="63:38">(<argument pos:start="63:31" pos:end="63:31"><expr pos:start="63:31" pos:end="63:31"><name pos:start="63:31" pos:end="63:31">s</name></expr></argument>, <argument pos:start="63:34" pos:end="63:37"><expr pos:start="63:34" pos:end="63:37"><name pos:start="63:34" pos:end="63:37">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:108">else<block type="pseudo" pos:start="67:13" pos:end="67:108"><block_content pos:start="67:13" pos:end="67:108"> <comment type="block" pos:start="65:14" pos:end="65:30">/* skip packet */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:108"><expr pos:start="67:13" pos:end="67:107"><call pos:start="67:13" pos:end="67:107"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:107">(<argument pos:start="67:20" pos:end="67:20"><expr pos:start="67:20" pos:end="67:20"><name pos:start="67:20" pos:end="67:20">s</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:87"><expr pos:start="67:37" pos:end="67:87"><literal type="string" pos:start="67:37" pos:end="67:87">"skipping flv packet: type %d, size %d, flags %d\n"</literal></expr></argument>, <argument pos:start="67:90" pos:end="67:93"><expr pos:start="67:90" pos:end="67:93"><name pos:start="67:90" pos:end="67:93">type</name></expr></argument>, <argument pos:start="67:96" pos:end="67:99"><expr pos:start="67:96" pos:end="67:99"><name pos:start="67:96" pos:end="67:99">size</name></expr></argument>, <argument pos:start="67:102" pos:end="67:106"><expr pos:start="67:102" pos:end="67:106"><name pos:start="67:102" pos:end="67:106">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><call pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:17">url_fseek</name><argument_list pos:start="69:18" pos:end="69:40">(<argument pos:start="69:19" pos:end="69:23"><expr pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:19">s</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:23">pb</name></name></expr></argument>, <argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><name pos:start="69:26" pos:end="69:29">next</name></expr></argument>, <argument pos:start="69:32" pos:end="69:39"><expr pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <continue pos:start="71:9" pos:end="71:17">continue;</continue>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:25">/* now find stream */</comment>

    <for pos:start="79:5" pos:end="87:5">for<control pos:start="79:8" pos:end="79:32">(<init pos:start="79:9" pos:end="79:12"><expr pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:9">i</name><operator pos:start="79:10" pos:end="79:10">=</operator><literal type="number" pos:start="79:11" pos:end="79:11">0</literal></expr>;</init><condition pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:13">i</name><operator pos:start="79:14" pos:end="79:14">&lt;</operator><name pos:start="79:15" pos:end="79:27"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:27">nb_streams</name></name></expr>;</condition><incr pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:29">i</name><operator pos:start="79:30" pos:end="79:31">++</operator></expr></incr>)</control> <block pos:start="79:34" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:18">

        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:10">st</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <name pos:start="81:14" pos:end="81:26"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:23">streams</name><index pos:start="81:24" pos:end="81:26">[<expr pos:start="81:25" pos:end="81:25"><name pos:start="81:25" pos:end="81:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:31">(<expr pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:14">st</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:18">id</name></name> <operator pos:start="83:20" pos:end="83:21">==</operator> <name pos:start="83:23" pos:end="83:30">is_audio</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if<condition pos:start="89:7" pos:end="89:26">(<expr pos:start="89:8" pos:end="89:25"><name pos:start="89:8" pos:end="89:8">i</name> <operator pos:start="89:10" pos:end="89:11">==</operator> <name pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:25">nb_streams</name></name></expr>)</condition><block pos:start="89:27" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:43">

        <expr_stmt pos:start="91:9" pos:end="91:55"><expr pos:start="91:9" pos:end="91:54"><call pos:start="91:9" pos:end="91:54"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:54">(<argument pos:start="91:16" pos:end="91:19"><expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">NULL</name></expr></argument>, <argument pos:start="91:22" pos:end="91:33"><expr pos:start="91:22" pos:end="91:33"><name pos:start="91:22" pos:end="91:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:36" pos:end="91:53"><expr pos:start="91:36" pos:end="91:53"><literal type="string" pos:start="91:36" pos:end="91:53">"invalid stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:10">st</name><operator pos:start="93:11" pos:end="93:11">=</operator> <call pos:start="93:13" pos:end="93:38"><name pos:start="93:13" pos:end="93:25">create_stream</name><argument_list pos:start="93:26" pos:end="93:38">(<argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">s</name></expr></argument>, <argument pos:start="93:30" pos:end="93:37"><expr pos:start="93:30" pos:end="93:37"><name pos:start="93:30" pos:end="93:37">is_audio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:43"><expr pos:start="95:9" pos:end="95:42"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:20">ctx_flags</name></name> <operator pos:start="95:22" pos:end="95:23">&amp;=</operator> <operator pos:start="95:25" pos:end="95:25">~</operator><name pos:start="95:26" pos:end="95:42">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="99:1" pos:end="99:78">//    av_log(NULL, AV_LOG_DEBUG, "%d %X %d \n", is_audio, flags, st-&gt;discard);</comment>

    <if_stmt pos:start="101:5" pos:end="113:5"><if pos:start="101:5" pos:end="113:5">if<condition pos:start="101:7" pos:end="107:8">(  <expr pos:start="101:10" pos:end="105:38"><operator pos:start="101:10" pos:end="101:10">(</operator><name pos:start="101:11" pos:end="101:21"><name pos:start="101:11" pos:end="101:12">st</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:21">discard</name></name> <operator pos:start="101:23" pos:end="101:24">&gt;=</operator> <name pos:start="101:26" pos:end="101:41">AVDISCARD_NONKEY</name> <operator pos:start="101:43" pos:end="101:44">&amp;&amp;</operator> <operator pos:start="101:46" pos:end="101:46">!</operator><operator pos:start="101:47" pos:end="101:47">(</operator><operator pos:start="101:48" pos:end="101:48">(</operator><name pos:start="101:49" pos:end="101:53">flags</name> <operator pos:start="101:55" pos:end="101:55">&amp;</operator> <name pos:start="101:57" pos:end="101:80">FLV_VIDEO_FRAMETYPE_MASK</name><operator pos:start="101:81" pos:end="101:81">)</operator> <operator pos:start="101:83" pos:end="101:84">==</operator> <name pos:start="101:86" pos:end="101:98">FLV_FRAME_KEY</name> <operator pos:start="101:100" pos:end="101:101">||</operator>         <name pos:start="101:111" pos:end="101:118">is_audio</name><operator pos:start="101:119" pos:end="101:119">)</operator><operator pos:start="101:120" pos:end="101:120">)</operator>

       <operator pos:start="103:8" pos:end="103:9">||</operator><operator pos:start="103:10" pos:end="103:10">(</operator><name pos:start="103:11" pos:end="103:21"><name pos:start="103:11" pos:end="103:12">st</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:21">discard</name></name> <operator pos:start="103:23" pos:end="103:24">&gt;=</operator> <name pos:start="103:26" pos:end="103:40">AVDISCARD_BIDIR</name>  <operator pos:start="103:43" pos:end="103:44">&amp;&amp;</operator>  <operator pos:start="103:47" pos:end="103:47">(</operator><operator pos:start="103:48" pos:end="103:48">(</operator><name pos:start="103:49" pos:end="103:53">flags</name> <operator pos:start="103:55" pos:end="103:55">&amp;</operator> <name pos:start="103:57" pos:end="103:80">FLV_VIDEO_FRAMETYPE_MASK</name><operator pos:start="103:81" pos:end="103:81">)</operator> <operator pos:start="103:83" pos:end="103:84">==</operator> <name pos:start="103:86" pos:end="103:105">FLV_FRAME_DISP_INTER</name> <operator pos:start="103:107" pos:end="103:108">&amp;&amp;</operator> <operator pos:start="103:110" pos:end="103:110">!</operator><name pos:start="103:111" pos:end="103:118">is_audio</name><operator pos:start="103:119" pos:end="103:119">)</operator><operator pos:start="103:120" pos:end="103:120">)</operator>

       <operator pos:start="105:8" pos:end="105:9">||</operator> <name pos:start="105:11" pos:end="105:21"><name pos:start="105:11" pos:end="105:12">st</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:21">discard</name></name> <operator pos:start="105:23" pos:end="105:24">&gt;=</operator> <name pos:start="105:26" pos:end="105:38">AVDISCARD_ALL</name></expr>

       )</condition><block pos:start="107:9" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:17">

        <expr_stmt pos:start="109:9" pos:end="109:41"><expr pos:start="109:9" pos:end="109:40"><call pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:17">url_fseek</name><argument_list pos:start="109:18" pos:end="109:40">(<argument pos:start="109:19" pos:end="109:23"><expr pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">pb</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:29"><expr pos:start="109:26" pos:end="109:29"><name pos:start="109:26" pos:end="109:29">next</name></expr></argument>, <argument pos:start="109:32" pos:end="109:39"><expr pos:start="109:32" pos:end="109:39"><name pos:start="109:32" pos:end="109:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <continue pos:start="111:9" pos:end="111:17">continue;</continue>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:68"><if pos:start="115:5" pos:end="117:68">if <condition pos:start="115:8" pos:end="115:60">(<expr pos:start="115:9" pos:end="115:59"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:14">flags</name> <operator pos:start="115:16" pos:end="115:16">&amp;</operator> <name pos:start="115:18" pos:end="115:41">FLV_VIDEO_FRAMETYPE_MASK</name><operator pos:start="115:42" pos:end="115:42">)</operator> <operator pos:start="115:44" pos:end="115:45">==</operator> <name pos:start="115:47" pos:end="115:59">FLV_FRAME_KEY</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:68"><block_content pos:start="117:9" pos:end="117:68">

        <expr_stmt pos:start="117:9" pos:end="117:68"><expr pos:start="117:9" pos:end="117:67"><call pos:start="117:9" pos:end="117:67"><name pos:start="117:9" pos:end="117:26">av_add_index_entry</name><argument_list pos:start="117:27" pos:end="117:67">(<argument pos:start="117:28" pos:end="117:29"><expr pos:start="117:28" pos:end="117:29"><name pos:start="117:28" pos:end="117:29">st</name></expr></argument>, <argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">pos</name></expr></argument>, <argument pos:start="117:37" pos:end="117:39"><expr pos:start="117:37" pos:end="117:39"><name pos:start="117:37" pos:end="117:39">pts</name></expr></argument>, <argument pos:start="117:42" pos:end="117:45"><expr pos:start="117:42" pos:end="117:45"><name pos:start="117:42" pos:end="117:45">size</name></expr></argument>, <argument pos:start="117:48" pos:end="117:48"><expr pos:start="117:48" pos:end="117:48"><literal type="number" pos:start="117:48" pos:end="117:48">0</literal></expr></argument>, <argument pos:start="117:51" pos:end="117:66"><expr pos:start="117:51" pos:end="117:66"><name pos:start="117:51" pos:end="117:66">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <break pos:start="119:5" pos:end="119:10">break;</break>

 </block_content>}</block></for>



    <comment type="line" pos:start="125:5" pos:end="125:110">// if not streamed and no duration from metadata then seek to end to find the duration from the timestamps</comment>

    <if_stmt pos:start="127:5" pos:end="149:5"><if pos:start="127:5" pos:end="149:5">if<condition pos:start="127:7" pos:end="127:62">(<expr pos:start="127:8" pos:end="127:61"><operator pos:start="127:8" pos:end="127:8">!</operator><call pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:23">url_is_streamed</name><argument_list pos:start="127:24" pos:end="127:30">(<argument pos:start="127:25" pos:end="127:29"><expr pos:start="127:25" pos:end="127:29"><name pos:start="127:25" pos:end="127:29"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:29">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="127:32" pos:end="127:33">&amp;&amp;</operator> <name pos:start="127:35" pos:end="127:45"><name pos:start="127:35" pos:end="127:35">s</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:45">duration</name></name><operator pos:start="127:46" pos:end="127:47">==</operator><name pos:start="127:48" pos:end="127:61">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="127:63" pos:end="149:5">{<block_content pos:start="129:9" pos:end="147:40">

        <decl_stmt pos:start="129:9" pos:end="129:17"><decl pos:start="129:9" pos:end="129:16"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:16">size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:40"><decl pos:start="131:9" pos:end="131:39"><type pos:start="131:9" pos:end="131:17"><specifier pos:start="131:9" pos:end="131:13">const</specifier> <name pos:start="131:15" pos:end="131:17">int</name></type> <name pos:start="131:19" pos:end="131:21">pos</name><init pos:start="131:22" pos:end="131:39">= <expr pos:start="131:24" pos:end="131:39"><call pos:start="131:24" pos:end="131:39"><name pos:start="131:24" pos:end="131:32">url_ftell</name><argument_list pos:start="131:33" pos:end="131:39">(<argument pos:start="131:34" pos:end="131:38"><expr pos:start="131:34" pos:end="131:38"><name pos:start="131:34" pos:end="131:38"><name pos:start="131:34" pos:end="131:34">s</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:42"><decl pos:start="133:9" pos:end="133:41"><type pos:start="133:9" pos:end="133:17"><specifier pos:start="133:9" pos:end="133:13">const</specifier> <name pos:start="133:15" pos:end="133:17">int</name></type> <name pos:start="133:19" pos:end="133:23">fsize</name><init pos:start="133:24" pos:end="133:41">= <expr pos:start="133:26" pos:end="133:41"><call pos:start="133:26" pos:end="133:41"><name pos:start="133:26" pos:end="133:34">url_fsize</name><argument_list pos:start="133:35" pos:end="133:41">(<argument pos:start="133:36" pos:end="133:40"><expr pos:start="133:36" pos:end="133:40"><name pos:start="133:36" pos:end="133:40"><name pos:start="133:36" pos:end="133:36">s</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:40">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><call pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:17">url_fseek</name><argument_list pos:start="135:18" pos:end="135:43">(<argument pos:start="135:19" pos:end="135:23"><expr pos:start="135:19" pos:end="135:23"><name pos:start="135:19" pos:end="135:23"><name pos:start="135:19" pos:end="135:19">s</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:23">pb</name></name></expr></argument>, <argument pos:start="135:26" pos:end="135:32"><expr pos:start="135:26" pos:end="135:32"><name pos:start="135:26" pos:end="135:30">fsize</name><operator pos:start="135:31" pos:end="135:31">-</operator><literal type="number" pos:start="135:32" pos:end="135:32">4</literal></expr></argument>, <argument pos:start="135:35" pos:end="135:42"><expr pos:start="135:35" pos:end="135:42"><name pos:start="135:35" pos:end="135:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:30"><expr pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:12">size</name><operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:29"><name pos:start="137:15" pos:end="137:22">get_be32</name><argument_list pos:start="137:23" pos:end="137:29">(<argument pos:start="137:24" pos:end="137:28"><expr pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:24">s</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:49"><expr pos:start="139:9" pos:end="139:48"><call pos:start="139:9" pos:end="139:48"><name pos:start="139:9" pos:end="139:17">url_fseek</name><argument_list pos:start="139:18" pos:end="139:48">(<argument pos:start="139:19" pos:end="139:23"><expr pos:start="139:19" pos:end="139:23"><name pos:start="139:19" pos:end="139:23"><name pos:start="139:19" pos:end="139:19">s</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:23">pb</name></name></expr></argument>, <argument pos:start="139:26" pos:end="139:37"><expr pos:start="139:26" pos:end="139:37"><name pos:start="139:26" pos:end="139:30">fsize</name><operator pos:start="139:31" pos:end="139:31">-</operator><literal type="number" pos:start="139:32" pos:end="139:33">3</literal><operator pos:start="139:33" pos:end="139:33">-</operator><name pos:start="139:34" pos:end="139:37">size</name></expr></argument>, <argument pos:start="139:40" pos:end="139:47"><expr pos:start="139:40" pos:end="139:47"><name pos:start="139:40" pos:end="139:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="145:9"><if pos:start="141:9" pos:end="145:9">if<condition pos:start="141:11" pos:end="141:40">(<expr pos:start="141:12" pos:end="141:39"><name pos:start="141:12" pos:end="141:15">size</name> <operator pos:start="141:17" pos:end="141:18">==</operator> <call pos:start="141:20" pos:end="141:34"><name pos:start="141:20" pos:end="141:27">get_be24</name><argument_list pos:start="141:28" pos:end="141:34">(<argument pos:start="141:29" pos:end="141:33"><expr pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:29">s</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:36" pos:end="141:36">+</operator> <literal type="number" pos:start="141:38" pos:end="141:39">11</literal></expr>)</condition><block pos:start="141:41" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:72">

            <expr_stmt pos:start="143:13" pos:end="143:72"><expr pos:start="143:13" pos:end="143:71"><name pos:start="143:13" pos:end="143:23"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:23">duration</name></name><operator pos:start="143:24" pos:end="143:24">=</operator> <call pos:start="143:26" pos:end="143:40"><name pos:start="143:26" pos:end="143:33">get_be24</name><argument_list pos:start="143:34" pos:end="143:40">(<argument pos:start="143:35" pos:end="143:39"><expr pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:35">s</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="143:42" pos:end="143:42">*</operator> <operator pos:start="143:44" pos:end="143:44">(</operator><name pos:start="143:45" pos:end="143:51">int64_t</name><operator pos:start="143:52" pos:end="143:52">)</operator><name pos:start="143:53" pos:end="143:64">AV_TIME_BASE</name> <operator pos:start="143:66" pos:end="143:66">/</operator> <literal type="number" pos:start="143:68" pos:end="143:71">1000</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:40"><expr pos:start="147:9" pos:end="147:39"><call pos:start="147:9" pos:end="147:39"><name pos:start="147:9" pos:end="147:17">url_fseek</name><argument_list pos:start="147:18" pos:end="147:39">(<argument pos:start="147:19" pos:end="147:23"><expr pos:start="147:19" pos:end="147:23"><name pos:start="147:19" pos:end="147:23"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:23">pb</name></name></expr></argument>, <argument pos:start="147:26" pos:end="147:28"><expr pos:start="147:26" pos:end="147:28"><name pos:start="147:26" pos:end="147:28">pos</name></expr></argument>, <argument pos:start="147:31" pos:end="147:38"><expr pos:start="147:31" pos:end="147:38"><name pos:start="147:31" pos:end="147:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="177:5"><if pos:start="153:5" pos:end="173:5">if<condition pos:start="153:7" pos:end="153:16">(<expr pos:start="153:8" pos:end="153:15"><name pos:start="153:8" pos:end="153:15">is_audio</name></expr>)</condition><block pos:start="153:17" pos:end="173:5">{<block_content pos:start="155:9" pos:end="171:9">

        <if_stmt pos:start="155:9" pos:end="171:9"><if pos:start="155:9" pos:end="171:9">if<condition pos:start="155:11" pos:end="155:117">(<expr pos:start="155:12" pos:end="155:116"><operator pos:start="155:12" pos:end="155:12">!</operator><name pos:start="155:13" pos:end="155:34"><name pos:start="155:13" pos:end="155:14">st</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:21">codec</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:34">sample_rate</name></name> <operator pos:start="155:36" pos:end="155:37">||</operator> <operator pos:start="155:39" pos:end="155:39">!</operator><name pos:start="155:40" pos:end="155:65"><name pos:start="155:40" pos:end="155:41">st</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:48">codec</name><operator pos:start="155:49" pos:end="155:50">-&gt;</operator><name pos:start="155:51" pos:end="155:65">bits_per_sample</name></name> <operator pos:start="155:67" pos:end="155:68">||</operator> <operator pos:start="155:70" pos:end="155:70">(</operator><operator pos:start="155:71" pos:end="155:71">!</operator><name pos:start="155:72" pos:end="155:90"><name pos:start="155:72" pos:end="155:73">st</name><operator pos:start="155:74" pos:end="155:75">-&gt;</operator><name pos:start="155:76" pos:end="155:80">codec</name><operator pos:start="155:81" pos:end="155:82">-&gt;</operator><name pos:start="155:83" pos:end="155:90">codec_id</name></name> <operator pos:start="155:92" pos:end="155:93">&amp;&amp;</operator> <operator pos:start="155:95" pos:end="155:95">!</operator><name pos:start="155:96" pos:end="155:115"><name pos:start="155:96" pos:end="155:97">st</name><operator pos:start="155:98" pos:end="155:99">-&gt;</operator><name pos:start="155:100" pos:end="155:104">codec</name><operator pos:start="155:105" pos:end="155:106">-&gt;</operator><name pos:start="155:107" pos:end="155:115">codec_tag</name></name><operator pos:start="155:116" pos:end="155:116">)</operator></expr>)</condition> <block pos:start="155:119" pos:end="171:9">{<block_content pos:start="157:13" pos:end="169:71">

            <expr_stmt pos:start="157:13" pos:end="157:89"><expr pos:start="157:13" pos:end="157:88"><name pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:14">st</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:21">codec</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:31">channels</name></name> <operator pos:start="157:33" pos:end="157:33">=</operator> <ternary pos:start="157:35" pos:end="157:88"><condition pos:start="157:35" pos:end="157:82"><expr pos:start="157:35" pos:end="157:80"><operator pos:start="157:35" pos:end="157:35">(</operator><name pos:start="157:36" pos:end="157:40">flags</name> <operator pos:start="157:42" pos:end="157:42">&amp;</operator> <name pos:start="157:44" pos:end="157:65">FLV_AUDIO_CHANNEL_MASK</name><operator pos:start="157:66" pos:end="157:66">)</operator> <operator pos:start="157:68" pos:end="157:69">==</operator> <name pos:start="157:71" pos:end="157:80">FLV_STEREO</name></expr> ?</condition><then pos:start="157:84" pos:end="157:84"> <expr pos:start="157:84" pos:end="157:84"><literal type="number" pos:start="157:84" pos:end="157:84">2</literal></expr> </then><else pos:start="157:86" pos:end="157:88">: <expr pos:start="157:88" pos:end="157:88"><literal type="number" pos:start="157:88" pos:end="157:88">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="165:126"><if pos:start="159:13" pos:end="161:45">if<condition pos:start="159:15" pos:end="159:83">(<expr pos:start="159:16" pos:end="159:82"><operator pos:start="159:16" pos:end="159:16">(</operator><name pos:start="159:17" pos:end="159:21">flags</name> <operator pos:start="159:23" pos:end="159:23">&amp;</operator> <name pos:start="159:25" pos:end="159:46">FLV_AUDIO_CODECID_MASK</name><operator pos:start="159:47" pos:end="159:47">)</operator> <operator pos:start="159:49" pos:end="159:50">==</operator> <name pos:start="159:52" pos:end="159:82">FLV_CODECID_NELLYMOSER_8HZ_MONO</name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:45"><block_content pos:start="161:17" pos:end="161:45">

                <expr_stmt pos:start="161:17" pos:end="161:45"><expr pos:start="161:17" pos:end="161:44"><name pos:start="161:17" pos:end="161:38"><name pos:start="161:17" pos:end="161:18">st</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:25">codec</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:38">sample_rate</name></name><operator pos:start="161:39" pos:end="161:39">=</operator> <literal type="number" pos:start="161:41" pos:end="161:44">8000</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="163:13" pos:end="165:126">else<block type="pseudo" pos:start="165:17" pos:end="165:126"><block_content pos:start="165:17" pos:end="165:126">

                <expr_stmt pos:start="165:17" pos:end="165:126"><expr pos:start="165:17" pos:end="165:125"><name pos:start="165:17" pos:end="165:38"><name pos:start="165:17" pos:end="165:18">st</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:25">codec</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:38">sample_rate</name></name> <operator pos:start="165:40" pos:end="165:40">=</operator> <operator pos:start="165:42" pos:end="165:42">(</operator><literal type="number" pos:start="165:43" pos:end="165:47">44100</literal> <operator pos:start="165:49" pos:end="165:50">&lt;&lt;</operator> <operator pos:start="165:52" pos:end="165:52">(</operator><operator pos:start="165:53" pos:end="165:53">(</operator><name pos:start="165:54" pos:end="165:58">flags</name> <operator pos:start="165:60" pos:end="165:60">&amp;</operator> <name pos:start="165:62" pos:end="165:86">FLV_AUDIO_SAMPLERATE_MASK</name><operator pos:start="165:87" pos:end="165:87">)</operator> <operator pos:start="165:89" pos:end="165:90">&gt;&gt;</operator> <name pos:start="165:92" pos:end="165:118">FLV_AUDIO_SAMPLERATE_OFFSET</name><operator pos:start="165:119" pos:end="165:119">)</operator> <operator pos:start="165:121" pos:end="165:122">&gt;&gt;</operator> <literal type="number" pos:start="165:124" pos:end="165:124">3</literal><operator pos:start="165:125" pos:end="165:125">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:86"><expr pos:start="167:13" pos:end="167:85"><name pos:start="167:13" pos:end="167:38"><name pos:start="167:13" pos:end="167:14">st</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:21">codec</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:38">bits_per_sample</name></name> <operator pos:start="167:40" pos:end="167:40">=</operator> <ternary pos:start="167:42" pos:end="167:85"><condition pos:start="167:42" pos:end="167:78"><expr pos:start="167:42" pos:end="167:76"><operator pos:start="167:42" pos:end="167:42">(</operator><name pos:start="167:43" pos:end="167:47">flags</name> <operator pos:start="167:49" pos:end="167:49">&amp;</operator> <name pos:start="167:51" pos:end="167:75">FLV_AUDIO_SAMPLESIZE_MASK</name><operator pos:start="167:76" pos:end="167:76">)</operator></expr> ?</condition><then pos:start="167:80" pos:end="167:81"> <expr pos:start="167:80" pos:end="167:81"><literal type="number" pos:start="167:80" pos:end="167:81">16</literal></expr> </then><else pos:start="167:83" pos:end="167:85">: <expr pos:start="167:85" pos:end="167:85"><literal type="number" pos:start="167:85" pos:end="167:85">8</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:71"><expr pos:start="169:13" pos:end="169:70"><call pos:start="169:13" pos:end="169:70"><name pos:start="169:13" pos:end="169:31">flv_set_audio_codec</name><argument_list pos:start="169:32" pos:end="169:70">(<argument pos:start="169:33" pos:end="169:33"><expr pos:start="169:33" pos:end="169:33"><name pos:start="169:33" pos:end="169:33">s</name></expr></argument>, <argument pos:start="169:36" pos:end="169:37"><expr pos:start="169:36" pos:end="169:37"><name pos:start="169:36" pos:end="169:37">st</name></expr></argument>, <argument pos:start="169:40" pos:end="169:69"><expr pos:start="169:40" pos:end="169:69"><name pos:start="169:40" pos:end="169:44">flags</name> <operator pos:start="169:46" pos:end="169:46">&amp;</operator> <name pos:start="169:48" pos:end="169:69">FLV_AUDIO_CODECID_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="173:6" pos:end="177:5">else<block pos:start="173:10" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:75">

        <expr_stmt pos:start="175:9" pos:end="175:75"><expr pos:start="175:9" pos:end="175:74"><name pos:start="175:9" pos:end="175:12">size</name> <operator pos:start="175:14" pos:end="175:15">-=</operator> <call pos:start="175:17" pos:end="175:74"><name pos:start="175:17" pos:end="175:35">flv_set_video_codec</name><argument_list pos:start="175:36" pos:end="175:74">(<argument pos:start="175:37" pos:end="175:37"><expr pos:start="175:37" pos:end="175:37"><name pos:start="175:37" pos:end="175:37">s</name></expr></argument>, <argument pos:start="175:40" pos:end="175:41"><expr pos:start="175:40" pos:end="175:41"><name pos:start="175:40" pos:end="175:41">st</name></expr></argument>, <argument pos:start="175:44" pos:end="175:73"><expr pos:start="175:44" pos:end="175:73"><name pos:start="175:44" pos:end="175:48">flags</name> <operator pos:start="175:50" pos:end="175:50">&amp;</operator> <name pos:start="175:52" pos:end="175:73">FLV_VIDEO_CODECID_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:45"><expr pos:start="181:5" pos:end="181:44"><name pos:start="181:5" pos:end="181:7">ret</name><operator pos:start="181:8" pos:end="181:8">=</operator> <call pos:start="181:10" pos:end="181:44"><name pos:start="181:10" pos:end="181:22">av_get_packet</name><argument_list pos:start="181:23" pos:end="181:44">(<argument pos:start="181:24" pos:end="181:28"><expr pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:24">s</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:28">pb</name></name></expr></argument>, <argument pos:start="181:31" pos:end="181:33"><expr pos:start="181:31" pos:end="181:33"><name pos:start="181:31" pos:end="181:33">pkt</name></expr></argument>, <argument pos:start="181:36" pos:end="181:43"><expr pos:start="181:36" pos:end="181:43"><name pos:start="181:36" pos:end="181:39">size</name> <operator pos:start="181:41" pos:end="181:41">-</operator> <literal type="number" pos:start="181:43" pos:end="181:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="187:5"><if pos:start="183:5" pos:end="187:5">if <condition pos:start="183:8" pos:end="183:17">(<expr pos:start="183:9" pos:end="183:16"><name pos:start="183:9" pos:end="183:11">ret</name> <operator pos:start="183:13" pos:end="183:14">&lt;=</operator> <literal type="number" pos:start="183:16" pos:end="183:16">0</literal></expr>)</condition> <block pos:start="183:19" pos:end="187:5">{<block_content pos:start="185:9" pos:end="185:28">

        <return pos:start="185:9" pos:end="185:28">return <expr pos:start="185:16" pos:end="185:27"><call pos:start="185:16" pos:end="185:27"><name pos:start="185:16" pos:end="185:22">AVERROR</name><argument_list pos:start="185:23" pos:end="185:27">(<argument pos:start="185:24" pos:end="185:26"><expr pos:start="185:24" pos:end="185:26"><name pos:start="185:24" pos:end="185:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="189:5" pos:end="191:16">/* note: we need to modify the packet size here to handle the last

       packet */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:20"><expr pos:start="193:5" pos:end="193:19"><name pos:start="193:5" pos:end="193:13"><name pos:start="193:5" pos:end="193:7">pkt</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:13">size</name></name> <operator pos:start="193:15" pos:end="193:15">=</operator> <name pos:start="193:17" pos:end="193:19">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:19"><expr pos:start="195:5" pos:end="195:18"><name pos:start="195:5" pos:end="195:12"><name pos:start="195:5" pos:end="195:7">pkt</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:12">pts</name></name> <operator pos:start="195:14" pos:end="195:14">=</operator> <name pos:start="195:16" pos:end="195:18">pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:34"><expr pos:start="197:5" pos:end="197:33"><name pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:7">pkt</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:21">stream_index</name></name> <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:33"><name pos:start="197:25" pos:end="197:26">st</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:33">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="201:5" pos:end="203:35"><if pos:start="201:5" pos:end="203:35">if <condition pos:start="201:8" pos:end="201:74">(<expr pos:start="201:9" pos:end="201:73"><name pos:start="201:9" pos:end="201:16">is_audio</name> <operator pos:start="201:18" pos:end="201:19">||</operator> <operator pos:start="201:21" pos:end="201:21">(</operator><operator pos:start="201:22" pos:end="201:22">(</operator><name pos:start="201:23" pos:end="201:27">flags</name> <operator pos:start="201:29" pos:end="201:29">&amp;</operator> <name pos:start="201:31" pos:end="201:54">FLV_VIDEO_FRAMETYPE_MASK</name><operator pos:start="201:55" pos:end="201:55">)</operator> <operator pos:start="201:57" pos:end="201:58">==</operator> <name pos:start="201:60" pos:end="201:72">FLV_FRAME_KEY</name><operator pos:start="201:73" pos:end="201:73">)</operator></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:35"><block_content pos:start="203:9" pos:end="203:35">

        <expr_stmt pos:start="203:9" pos:end="203:35"><expr pos:start="203:9" pos:end="203:34"><name pos:start="203:9" pos:end="203:18"><name pos:start="203:9" pos:end="203:11">pkt</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:18">flags</name></name> <operator pos:start="203:20" pos:end="203:21">|=</operator> <name pos:start="203:23" pos:end="203:34">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="207:5" pos:end="207:15">return <expr pos:start="207:12" pos:end="207:14"><name pos:start="207:12" pos:end="207:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
