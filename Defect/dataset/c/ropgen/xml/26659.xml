<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26659.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:51">vaapi_encode_mjpeg_init_internal</name><parameter_list pos:start="1:52" pos:end="1:74">(<parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:66">AVCodecContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="15:6"><decl pos:start="5:5" pos:end="15:5"><type pos:start="5:5" pos:end="5:31"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:31">VAConfigAttrib</name></type> <name pos:start="5:33" pos:end="5:59"><name pos:start="5:33" pos:end="5:57">default_config_attributes</name><index pos:start="5:58" pos:end="5:59">[]</index></name> <init pos:start="5:61" pos:end="15:5">= <expr pos:start="5:63" pos:end="15:5"><block pos:start="5:63" pos:end="15:5">{

        <expr pos:start="7:9" pos:end="9:40"><block pos:start="7:9" pos:end="9:40">{ <expr pos:start="7:11" pos:end="7:41"><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:15">type</name>  <operator pos:start="7:18" pos:end="7:18">=</operator> <name pos:start="7:20" pos:end="7:41">VAConfigAttribRTFormat</name></expr>,

          <expr pos:start="9:11" pos:end="9:38"><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:16">value</name> <operator pos:start="9:18" pos:end="9:18">=</operator> <name pos:start="9:20" pos:end="9:38">VA_RT_FORMAT_YUV420</name></expr> }</block></expr>,

        <expr pos:start="11:9" pos:end="13:50"><block pos:start="11:9" pos:end="13:50">{ <expr pos:start="11:11" pos:end="11:49"><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:15">type</name>  <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:49">VAConfigAttribEncPackedHeaders</name></expr>,

          <expr pos:start="13:11" pos:end="13:48"><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:16">value</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:48">VA_ENC_PACKED_HEADER_SEQUENCE</name></expr> }</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:53"><decl pos:start="19:5" pos:end="19:52"><type pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:22">VAAPIEncodeContext</name>       <modifier pos:start="19:30" pos:end="19:30">*</modifier></type><name pos:start="19:31" pos:end="19:33">ctx</name> <init pos:start="19:35" pos:end="19:52">= <expr pos:start="19:37" pos:end="19:52"><name pos:start="19:37" pos:end="19:52"><name pos:start="19:37" pos:end="19:41">avctx</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:52">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:51"><decl pos:start="21:5" pos:end="21:50"><type pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:27">VAAPIEncodeMJPEGContext</name> <modifier pos:start="21:29" pos:end="21:29">*</modifier></type><name pos:start="21:30" pos:end="21:33">priv</name> <init pos:start="21:35" pos:end="21:50">= <expr pos:start="21:37" pos:end="21:50"><name pos:start="21:37" pos:end="21:50"><name pos:start="21:37" pos:end="21:39">ctx</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:50">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:7">ctx</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:19">va_profile</name></name>    <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:46">VAProfileJPEGBaseline</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:22">va_entrypoint</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:47">VAEntrypointEncPicture</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:20">input_width</name></name>    <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:31">avctx</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:38">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:21">input_height</name></name>   <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:31">avctx</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:39">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:22">aligned_width</name></name>  <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:55"><name pos:start="37:27" pos:end="37:33">FFALIGN</name><argument_list pos:start="37:34" pos:end="37:55">(<argument pos:start="37:35" pos:end="37:50"><expr pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:37">ctx</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:50">input_width</name></name></expr></argument>,  <argument pos:start="37:54" pos:end="37:54"><expr pos:start="37:54" pos:end="37:54"><literal type="number" pos:start="37:54" pos:end="37:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:23">aligned_height</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:55"><name pos:start="39:27" pos:end="39:33">FFALIGN</name><argument_list pos:start="39:34" pos:end="39:55">(<argument pos:start="39:35" pos:end="39:51"><expr pos:start="39:35" pos:end="39:51"><name pos:start="39:35" pos:end="39:51"><name pos:start="39:35" pos:end="39:37">ctx</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:51">input_height</name></name></expr></argument>, <argument pos:start="39:54" pos:end="39:54"><expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="49:5">for <control pos:start="43:9" pos:end="43:67">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:62"><expr pos:start="43:17" pos:end="43:61"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <call pos:start="43:21" pos:end="43:61"><name pos:start="43:21" pos:end="43:34">FF_ARRAY_ELEMS</name><argument_list pos:start="43:35" pos:end="43:61">(<argument pos:start="43:36" pos:end="43:60"><expr pos:start="43:36" pos:end="43:60"><name pos:start="43:36" pos:end="43:60">default_config_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="43:64" pos:end="43:66"><expr pos:start="43:64" pos:end="43:66"><name pos:start="43:64" pos:end="43:64">i</name><operator pos:start="43:65" pos:end="43:66">++</operator></expr></incr>)</control> <block pos:start="43:69" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:41">

        <expr_stmt pos:start="45:9" pos:end="47:41"><expr pos:start="45:9" pos:end="47:40"><name pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:11">ctx</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:30">config_attributes</name><index pos:start="45:31" pos:end="45:59">[<expr pos:start="45:32" pos:end="45:58"><name pos:start="45:32" pos:end="45:56"><name pos:start="45:32" pos:end="45:34">ctx</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:56">nb_config_attributes</name></name><operator pos:start="45:57" pos:end="45:58">++</operator></expr>]</index></name> <operator pos:start="45:61" pos:end="45:61">=</operator>

            <name pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:37">default_config_attributes</name><index pos:start="47:38" pos:end="47:40">[<expr pos:start="47:39" pos:end="47:39"><name pos:start="47:39" pos:end="47:39">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:8">priv</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:17">quality</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:41"><name pos:start="53:21" pos:end="53:25">avctx</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:41">global_quality</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:49">(<expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:12">priv</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:21">quality</name></name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">1</literal> <operator pos:start="55:27" pos:end="55:28">||</operator> <name pos:start="55:30" pos:end="55:42"><name pos:start="55:30" pos:end="55:33">priv</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:42">quality</name></name> <operator pos:start="55:44" pos:end="55:44">&gt;</operator> <literal type="number" pos:start="55:46" pos:end="55:48">100</literal></expr>)</condition> <block pos:start="55:51" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:31">

        <expr_stmt pos:start="57:9" pos:end="59:52"><expr pos:start="57:9" pos:end="59:51"><call pos:start="57:9" pos:end="59:51"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="59:51">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20">avctx</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="59:35"><expr pos:start="57:37" pos:end="59:35"><literal type="string" pos:start="57:37" pos:end="57:63">"Invalid quality value %d "</literal>

               <literal type="string" pos:start="59:16" pos:end="59:35">"(must be 1-100).\n"</literal></expr></argument>, <argument pos:start="59:38" pos:end="59:50"><expr pos:start="59:38" pos:end="59:50"><name pos:start="59:38" pos:end="59:50"><name pos:start="59:38" pos:end="59:41">priv</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:50">quality</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:42"><expr pos:start="67:5" pos:end="67:41"><call pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:34">vaapi_encode_mjpeg_init_tables</name><argument_list pos:start="67:35" pos:end="67:41">(<argument pos:start="67:36" pos:end="67:40"><expr pos:start="67:36" pos:end="67:40"><name pos:start="67:36" pos:end="67:40">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
