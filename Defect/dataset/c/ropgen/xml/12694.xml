<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12694.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">spapr_drc_attach</name><parameter_list pos:start="1:22" pos:end="3:57">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:38">sPAPRDRConnector</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">drc</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:56">DeviceState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">d</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:70"><decl pos:start="1:62" pos:end="1:70"><type pos:start="1:62" pos:end="1:70"><name pos:start="1:62" pos:end="1:65">void</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">fdt</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:42"><decl pos:start="3:23" pos:end="3:42"><type pos:start="3:23" pos:end="3:42"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:42">fdt_start_offset</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:49">Error</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier><modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:44">

    <expr_stmt pos:start="7:5" pos:end="7:49"><expr pos:start="7:5" pos:end="7:48"><call pos:start="7:5" pos:end="7:48"><name pos:start="7:5" pos:end="7:26">trace_spapr_drc_attach</name><argument_list pos:start="7:27" pos:end="7:48">(<argument pos:start="7:28" pos:end="7:47"><expr pos:start="7:28" pos:end="7:47"><call pos:start="7:28" pos:end="7:47"><name pos:start="7:28" pos:end="7:42">spapr_drc_index</name><argument_list pos:start="7:43" pos:end="7:47">(<argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:46">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:66">(<expr pos:start="11:9" pos:end="11:65"><name pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:11">drc</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:28">isolation_state</name></name> <operator pos:start="11:30" pos:end="11:31">!=</operator> <name pos:start="11:33" pos:end="11:65">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>)</condition> <block pos:start="11:68" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:73"><expr pos:start="13:9" pos:end="13:72"><call pos:start="13:9" pos:end="13:72"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="13:72">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:71"><expr pos:start="13:26" pos:end="13:71"><literal type="string" pos:start="13:26" pos:end="13:71">"an attached device is still awaiting release"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:59">(<expr pos:start="19:9" pos:end="19:58"><call pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:22">spapr_drc_type</name><argument_list pos:start="19:23" pos:end="19:27">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">drc</name></expr></argument>)</argument_list></call> <operator pos:start="19:29" pos:end="19:30">==</operator> <name pos:start="19:32" pos:end="19:58">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="19:61" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:76">

        <expr_stmt pos:start="21:9" pos:end="21:76"><expr pos:start="21:9" pos:end="21:75"><call pos:start="21:9" pos:end="21:75"><name pos:start="21:9" pos:end="21:16">g_assert</name><argument_list pos:start="21:17" pos:end="21:75">(<argument pos:start="21:18" pos:end="21:74"><expr pos:start="21:18" pos:end="21:74"><name pos:start="21:18" pos:end="21:38"><name pos:start="21:18" pos:end="21:20">drc</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:38">allocation_state</name></name> <operator pos:start="21:40" pos:end="21:41">==</operator> <name pos:start="21:43" pos:end="21:74">SPAPR_DR_ALLOCATION_STATE_USABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:17">(<argument pos:start="25:14" pos:end="25:16"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:16">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">drc</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">dev</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:16">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:7">drc</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">fdt</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:18">fdt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:7">drc</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:25">fdt_start_offset</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:44">fdt_start_offset</name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:59">(<expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:22">spapr_drc_type</name><argument_list pos:start="37:23" pos:end="37:27">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">drc</name></expr></argument>)</argument_list></call> <operator pos:start="37:29" pos:end="37:30">!=</operator> <name pos:start="37:32" pos:end="37:58">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="37:61" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:40">

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:11">drc</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:32">awaiting_allocation</name></name> <operator pos:start="39:34" pos:end="39:34">=</operator> <name pos:start="39:36" pos:end="39:39">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="51:44"><expr pos:start="45:5" pos:end="51:43"><call pos:start="45:5" pos:end="51:43"><name pos:start="45:5" pos:end="45:28">object_property_add_link</name><argument_list pos:start="45:29" pos:end="51:43">(<argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><call pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:35">OBJECT</name><argument_list pos:start="45:36" pos:end="45:40">(<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">drc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:43" pos:end="45:50"><expr pos:start="45:43" pos:end="45:50"><literal type="string" pos:start="45:43" pos:end="45:50">"device"</literal></expr></argument>,

                             <argument pos:start="47:30" pos:end="47:66"><expr pos:start="47:30" pos:end="47:66"><call pos:start="47:30" pos:end="47:66"><name pos:start="47:30" pos:end="47:48">object_get_typename</name><argument_list pos:start="47:49" pos:end="47:66">(<argument pos:start="47:50" pos:end="47:65"><expr pos:start="47:50" pos:end="47:65"><call pos:start="47:50" pos:end="47:65"><name pos:start="47:50" pos:end="47:55">OBJECT</name><argument_list pos:start="47:56" pos:end="47:65">(<argument pos:start="47:57" pos:end="47:64"><expr pos:start="47:57" pos:end="47:64"><name pos:start="47:57" pos:end="47:64"><name pos:start="47:57" pos:end="47:59">drc</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:64">dev</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="49:30" pos:end="49:51"><expr pos:start="49:30" pos:end="49:51"><operator pos:start="49:30" pos:end="49:30">(</operator><name pos:start="49:31" pos:end="49:36">Object</name> <operator pos:start="49:38" pos:end="49:38">*</operator><operator pos:start="49:39" pos:end="49:39">*</operator><operator pos:start="49:40" pos:end="49:40">)</operator><operator pos:start="49:41" pos:end="49:41">(</operator><operator pos:start="49:42" pos:end="49:42">&amp;</operator><name pos:start="49:43" pos:end="49:50"><name pos:start="49:43" pos:end="49:45">drc</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:50">dev</name></name><operator pos:start="49:51" pos:end="49:51">)</operator></expr></argument>,

                             <argument pos:start="51:30" pos:end="51:33"><expr pos:start="51:30" pos:end="51:33"><name pos:start="51:30" pos:end="51:33">NULL</name></expr></argument>, <argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">0</literal></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
