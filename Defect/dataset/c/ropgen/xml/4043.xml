<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4043.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">vmdk_read</name><parameter_list pos:start="1:21" pos:end="3:49">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:50">int64_t</name></type> <name pos:start="1:52" pos:end="1:61">sector_num</name></decl></parameter>, 

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:27">uint8_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">buf</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVVmdkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">index_in_cluster</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">n</name></decl>, <decl pos:start="9:30" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:32">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:27">cluster_offset</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="63:5">while <condition pos:start="15:11" pos:end="15:26">(<expr pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:21">nb_sectors</name> <operator pos:start="15:23" pos:end="15:23">&gt;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr>)</condition> <block pos:start="15:28" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:23">

        <expr_stmt pos:start="17:9" pos:end="17:68"><expr pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:22">cluster_offset</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:67"><name pos:start="17:26" pos:end="17:43">get_cluster_offset</name><argument_list pos:start="17:44" pos:end="17:67">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">bs</name></expr></argument>, <argument pos:start="17:49" pos:end="17:63"><expr pos:start="17:49" pos:end="17:63"><name pos:start="17:49" pos:end="17:58">sector_num</name> <operator pos:start="17:60" pos:end="17:61">&lt;&lt;</operator> <literal type="number" pos:start="17:63" pos:end="17:63">9</literal></expr></argument>, <argument pos:start="17:66" pos:end="17:66"><expr pos:start="17:66" pos:end="17:66"><literal type="number" pos:start="17:66" pos:end="17:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:59"><expr pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:24">index_in_cluster</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:37">sector_num</name> <operator pos:start="19:39" pos:end="19:39">%</operator> <name pos:start="19:41" pos:end="19:58"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:58">cluster_sectors</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:9">n</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:30">cluster_sectors</name></name> <operator pos:start="21:32" pos:end="21:32">-</operator> <name pos:start="21:34" pos:end="21:49">index_in_cluster</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:27"><if pos:start="23:9" pos:end="25:27">if <condition pos:start="23:12" pos:end="23:27">(<expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:13">n</name> <operator pos:start="23:15" pos:end="23:15">&gt;</operator> <name pos:start="23:17" pos:end="23:26">nb_sectors</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:27"><block_content pos:start="25:13" pos:end="25:27">

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">n</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:26">nb_sectors</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="55:9"><if pos:start="27:9" pos:end="49:9">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:27">cluster_offset</name></expr>)</condition> <block pos:start="27:30" pos:end="49:9">{<block_content pos:start="31:13" pos:end="47:13">

            <comment type="line" pos:start="29:13" pos:end="29:54">// try to read from parent image, if exist</comment>

            <if_stmt pos:start="31:13" pos:end="47:13"><if pos:start="31:13" pos:end="43:13">if <condition pos:start="31:16" pos:end="31:34">(<expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">hd</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:33">backing_hd</name></name></expr>)</condition> <block pos:start="31:36" pos:end="43:13">{<block_content pos:start="33:17" pos:end="41:30">

                <if_stmt pos:start="33:17" pos:end="35:30"><if pos:start="33:17" pos:end="35:30">if <condition pos:start="33:20" pos:end="33:43">(<expr pos:start="33:21" pos:end="33:42"><operator pos:start="33:21" pos:end="33:21">!</operator><call pos:start="33:22" pos:end="33:42"><name pos:start="33:22" pos:end="33:38">vmdk_is_cid_valid</name><argument_list pos:start="33:39" pos:end="33:42">(<argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><name pos:start="33:40" pos:end="33:41">bs</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:30"><block_content pos:start="35:21" pos:end="35:30">

                    <return pos:start="35:21" pos:end="35:30">return <expr pos:start="35:28" pos:end="35:29"><operator pos:start="35:28" pos:end="35:28">-</operator><literal type="number" pos:start="35:29" pos:end="35:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:71"><expr pos:start="37:17" pos:end="37:70"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:70"><name pos:start="37:23" pos:end="37:31">bdrv_read</name><argument_list pos:start="37:32" pos:end="37:70">(<argument pos:start="37:33" pos:end="37:49"><expr pos:start="37:33" pos:end="37:49"><name pos:start="37:33" pos:end="37:49"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">hd</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:49">backing_hd</name></name></expr></argument>, <argument pos:start="37:52" pos:end="37:61"><expr pos:start="37:52" pos:end="37:61"><name pos:start="37:52" pos:end="37:61">sector_num</name></expr></argument>, <argument pos:start="37:64" pos:end="37:66"><expr pos:start="37:64" pos:end="37:66"><name pos:start="37:64" pos:end="37:66">buf</name></expr></argument>, <argument pos:start="37:69" pos:end="37:69"><expr pos:start="37:69" pos:end="37:69"><name pos:start="37:69" pos:end="37:69">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="39:17" pos:end="41:30"><if pos:start="39:17" pos:end="41:30">if <condition pos:start="39:20" pos:end="39:28">(<expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:23">ret</name> <operator pos:start="39:25" pos:end="39:25">&lt;</operator> <literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>)</condition><block type="pseudo" pos:start="41:21" pos:end="41:30"><block_content pos:start="41:21" pos:end="41:30">

                    <return pos:start="41:21" pos:end="41:30">return <expr pos:start="41:28" pos:end="41:29"><operator pos:start="41:28" pos:end="41:28">-</operator><literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="47:13">else <block pos:start="43:20" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:40">

                <expr_stmt pos:start="45:17" pos:end="45:40"><expr pos:start="45:17" pos:end="45:39"><call pos:start="45:17" pos:end="45:39"><name pos:start="45:17" pos:end="45:22">memset</name><argument_list pos:start="45:23" pos:end="45:39">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">buf</name></expr></argument>, <argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr></argument>, <argument pos:start="45:32" pos:end="45:38"><expr pos:start="45:32" pos:end="45:38"><literal type="number" pos:start="45:32" pos:end="45:34">512</literal> <operator pos:start="45:36" pos:end="45:36">*</operator> <name pos:start="45:38" pos:end="45:38">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="55:9">else <block pos:start="49:16" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:26">

            <if_stmt pos:start="51:13" pos:end="53:26"><if pos:start="51:13" pos:end="53:26">if<condition pos:start="51:15" pos:end="51:99">(<expr pos:start="51:16" pos:end="51:98"><call pos:start="51:16" pos:end="51:87"><name pos:start="51:16" pos:end="51:25">bdrv_pread</name><argument_list pos:start="51:26" pos:end="51:87">(<argument pos:start="51:27" pos:end="51:31"><expr pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:31">hd</name></name></expr></argument>, <argument pos:start="51:34" pos:end="51:72"><expr pos:start="51:34" pos:end="51:72"><name pos:start="51:34" pos:end="51:47">cluster_offset</name> <operator pos:start="51:49" pos:end="51:49">+</operator> <name pos:start="51:51" pos:end="51:66">index_in_cluster</name> <operator pos:start="51:68" pos:end="51:68">*</operator> <literal type="number" pos:start="51:70" pos:end="51:72">512</literal></expr></argument>, <argument pos:start="51:75" pos:end="51:77"><expr pos:start="51:75" pos:end="51:77"><name pos:start="51:75" pos:end="51:77">buf</name></expr></argument>, <argument pos:start="51:80" pos:end="51:86"><expr pos:start="51:80" pos:end="51:86"><name pos:start="51:80" pos:end="51:80">n</name> <operator pos:start="51:82" pos:end="51:82">*</operator> <literal type="number" pos:start="51:84" pos:end="51:86">512</literal></expr></argument>)</argument_list></call> <operator pos:start="51:89" pos:end="51:90">!=</operator> <name pos:start="51:92" pos:end="51:92">n</name> <operator pos:start="51:94" pos:end="51:94">*</operator> <literal type="number" pos:start="51:96" pos:end="51:98">512</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:26"><block_content pos:start="53:17" pos:end="53:26">

                <return pos:start="53:17" pos:end="53:26">return <expr pos:start="53:24" pos:end="53:25"><operator pos:start="53:24" pos:end="53:24">-</operator><literal type="number" pos:start="53:25" pos:end="53:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:18">nb_sectors</name> <operator pos:start="57:20" pos:end="57:21">-=</operator> <name pos:start="57:23" pos:end="57:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:18">sector_num</name> <operator pos:start="59:20" pos:end="59:21">+=</operator> <name pos:start="59:23" pos:end="59:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:23"><expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <name pos:start="61:16" pos:end="61:16">n</name> <operator pos:start="61:18" pos:end="61:18">*</operator> <literal type="number" pos:start="61:20" pos:end="61:22">512</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
