<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14017.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:1"><type pos:start="1:1" pos:end="1:33"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:31"><name pos:start="1:14" pos:end="1:19">struct</name> <name pos:start="1:21" pos:end="1:31">URLProtocol</name></name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:50">url_find_protocol</name><parameter_list pos:start="1:51" pos:end="1:72">(<parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:63"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="76:1">{<block_content pos:start="5:5" pos:end="71:25">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:21">URLProtocol</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier><modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:33">protocols</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:18">proto_str</name><index pos:start="7:19" pos:end="7:23">[<expr pos:start="7:20" pos:end="7:22"><literal type="number" pos:start="7:20" pos:end="7:22">128</literal></expr>]</index></name></decl>, <decl pos:start="7:26" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:26" pos:end="7:42"><name pos:start="7:26" pos:end="7:37">proto_nested</name><index pos:start="7:38" pos:end="7:42">[<expr pos:start="7:39" pos:end="7:41"><literal type="number" pos:start="7:39" pos:end="7:41">128</literal></expr>]</index></name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:48">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:20">proto_len</name> <init pos:start="9:22" pos:end="9:57">= <expr pos:start="9:24" pos:end="9:57"><call pos:start="9:24" pos:end="9:57"><name pos:start="9:24" pos:end="9:29">strspn</name><argument_list pos:start="9:30" pos:end="9:57">(<argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:38">filename</name></expr></argument>, <argument pos:start="9:41" pos:end="9:56"><expr pos:start="9:41" pos:end="9:56"><name pos:start="9:41" pos:end="9:56">URL_SCHEME_CHARS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="27:60"><if pos:start="15:5" pos:end="21:34">if <condition pos:start="15:8" pos:end="19:30">(<expr pos:start="15:9" pos:end="19:29"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:16">filename</name><index pos:start="15:17" pos:end="15:27">[<expr pos:start="15:18" pos:end="15:26"><name pos:start="15:18" pos:end="15:26">proto_len</name></expr>]</index></name> <operator pos:start="15:29" pos:end="15:30">!=</operator> <literal type="char" pos:start="15:32" pos:end="15:34">':'</literal> <operator pos:start="15:36" pos:end="15:37">&amp;&amp;</operator>

        <operator pos:start="17:9" pos:end="17:9">(</operator><call pos:start="17:10" pos:end="17:41"><name pos:start="17:10" pos:end="17:16">strncmp</name><argument_list pos:start="17:17" pos:end="17:41">(<argument pos:start="17:18" pos:end="17:25"><expr pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:25">filename</name></expr></argument>, <argument pos:start="17:28" pos:end="17:37"><expr pos:start="17:28" pos:end="17:37"><literal type="string" pos:start="17:28" pos:end="17:37">"subfile,"</literal></expr></argument>, <argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">8</literal></expr></argument>)</argument_list></call> <operator pos:start="17:43" pos:end="17:44">||</operator> <operator pos:start="17:46" pos:end="17:46">!</operator><call pos:start="17:47" pos:end="17:83"><name pos:start="17:47" pos:end="17:52">strchr</name><argument_list pos:start="17:53" pos:end="17:83">(<argument pos:start="17:54" pos:end="17:77"><expr pos:start="17:54" pos:end="17:77"><name pos:start="17:54" pos:end="17:61">filename</name> <operator pos:start="17:63" pos:end="17:63">+</operator> <name pos:start="17:65" pos:end="17:73">proto_len</name> <operator pos:start="17:75" pos:end="17:75">+</operator> <literal type="number" pos:start="17:77" pos:end="17:77">1</literal></expr></argument>, <argument pos:start="17:80" pos:end="17:82"><expr pos:start="17:80" pos:end="17:82"><literal type="char" pos:start="17:80" pos:end="17:82">':'</literal></expr></argument>)</argument_list></call><operator pos:start="17:84" pos:end="17:84">)</operator> <operator pos:start="17:86" pos:end="17:87">||</operator>

        <call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:19">is_dos_path</name><argument_list pos:start="19:20" pos:end="19:29">(<argument pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:28"><name pos:start="19:21" pos:end="19:28">filename</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:34"><block_content pos:start="21:9" pos:end="21:34">

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:14">strcpy</name><argument_list pos:start="21:15" pos:end="21:33">(<argument pos:start="21:16" pos:end="21:24"><expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:24">proto_str</name></expr></argument>, <argument pos:start="21:27" pos:end="21:32"><expr pos:start="21:27" pos:end="21:32"><literal type="string" pos:start="21:27" pos:end="21:32">"file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="27:60">else<block type="pseudo" pos:start="25:9" pos:end="27:60"><block_content pos:start="25:9" pos:end="27:60">

        <expr_stmt pos:start="25:9" pos:end="27:60"><expr pos:start="25:9" pos:end="27:59"><call pos:start="25:9" pos:end="27:59"><name pos:start="25:9" pos:end="25:18">av_strlcpy</name><argument_list pos:start="25:19" pos:end="27:59">(<argument pos:start="25:20" pos:end="25:28"><expr pos:start="25:20" pos:end="25:28"><name pos:start="25:20" pos:end="25:28">proto_str</name></expr></argument>, <argument pos:start="25:31" pos:end="25:38"><expr pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:38">filename</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:58"><expr pos:start="27:20" pos:end="27:58"><call pos:start="27:20" pos:end="27:58"><name pos:start="27:20" pos:end="27:24">FFMIN</name><argument_list pos:start="27:25" pos:end="27:58">(<argument pos:start="27:26" pos:end="27:38"><expr pos:start="27:26" pos:end="27:38"><name pos:start="27:26" pos:end="27:34">proto_len</name> <operator pos:start="27:36" pos:end="27:36">+</operator> <literal type="number" pos:start="27:38" pos:end="27:38">1</literal></expr></argument>, <argument pos:start="27:41" pos:end="27:57"><expr pos:start="27:41" pos:end="27:57"><sizeof pos:start="27:41" pos:end="27:57">sizeof<argument_list pos:start="27:47" pos:end="27:57">(<argument pos:start="27:48" pos:end="27:56"><expr pos:start="27:48" pos:end="27:56"><name pos:start="27:48" pos:end="27:56">proto_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:20"><if pos:start="31:5" pos:end="33:20">if <condition pos:start="31:8" pos:end="31:39">(<expr pos:start="31:9" pos:end="31:38"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ptr</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:37"><name pos:start="31:16" pos:end="31:21">strchr</name><argument_list pos:start="31:22" pos:end="31:37">(<argument pos:start="31:23" pos:end="31:31"><expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">proto_str</name></expr></argument>, <argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><literal type="char" pos:start="31:34" pos:end="31:36">','</literal></expr></argument>)</argument_list></call><operator pos:start="31:38" pos:end="31:38">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:20"><block_content pos:start="33:9" pos:end="33:20">

        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:12">ptr</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="char" pos:start="33:16" pos:end="33:19">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><call pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:14">av_strlcpy</name><argument_list pos:start="35:15" pos:end="35:61">(<argument pos:start="35:16" pos:end="35:27"><expr pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:27">proto_nested</name></expr></argument>, <argument pos:start="35:30" pos:end="35:38"><expr pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:38">proto_str</name></expr></argument>, <argument pos:start="35:41" pos:end="35:60"><expr pos:start="35:41" pos:end="35:60"><sizeof pos:start="35:41" pos:end="35:60">sizeof<argument_list pos:start="35:47" pos:end="35:60">(<argument pos:start="35:48" pos:end="35:59"><expr pos:start="35:48" pos:end="35:59"><name pos:start="35:48" pos:end="35:59">proto_nested</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:20"><if pos:start="37:5" pos:end="39:20">if <condition pos:start="37:8" pos:end="37:42">(<expr pos:start="37:9" pos:end="37:41"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:12">ptr</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:40"><name pos:start="37:16" pos:end="37:21">strchr</name><argument_list pos:start="37:22" pos:end="37:40">(<argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">proto_nested</name></expr></argument>, <argument pos:start="37:37" pos:end="37:39"><expr pos:start="37:37" pos:end="37:39"><literal type="char" pos:start="37:37" pos:end="37:39">'+'</literal></expr></argument>)</argument_list></call><operator pos:start="37:41" pos:end="37:41">)</operator></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:20"><block_content pos:start="39:9" pos:end="39:20">

        <expr_stmt pos:start="39:9" pos:end="39:20"><expr pos:start="39:9" pos:end="39:19"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:12">ptr</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <literal type="char" pos:start="39:16" pos:end="39:19">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:13">protocols</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:35">ffurl_get_protocols</name><argument_list pos:start="43:36" pos:end="43:47">(<argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">NULL</name></expr></argument>, <argument pos:start="43:43" pos:end="43:46"><expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="69:5">for <control pos:start="47:9" pos:end="47:34">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:29"><expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:25">protocols</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:31">i</name><operator pos:start="47:32" pos:end="47:33">++</operator></expr></incr>)</control> <block pos:start="47:36" pos:end="69:5">{<block_content pos:start="49:13" pos:end="67:9">

            <decl_stmt pos:start="49:13" pos:end="49:49"><decl pos:start="49:13" pos:end="49:48"><type pos:start="49:13" pos:end="49:31"><specifier pos:start="49:13" pos:end="49:17">const</specifier> <name pos:start="49:19" pos:end="49:29">URLProtocol</name> <modifier pos:start="49:31" pos:end="49:31">*</modifier></type><name pos:start="49:32" pos:end="49:33">up</name> <init pos:start="49:35" pos:end="49:48">= <expr pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:45">protocols</name><index pos:start="49:46" pos:end="49:48">[<expr pos:start="49:47" pos:end="49:47"><name pos:start="49:47" pos:end="49:47">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:41">(<expr pos:start="51:13" pos:end="51:40"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:40"><name pos:start="51:14" pos:end="51:19">strcmp</name><argument_list pos:start="51:20" pos:end="51:40">(<argument pos:start="51:21" pos:end="51:29"><expr pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:29">proto_str</name></expr></argument>, <argument pos:start="51:32" pos:end="51:39"><expr pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:33">up</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:39">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:43" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><call pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:20">av_freep</name><argument_list pos:start="53:21" pos:end="53:32">(<argument pos:start="53:22" pos:end="53:31"><expr pos:start="53:22" pos:end="53:31"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:31">protocols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><name pos:start="55:20" pos:end="55:21">up</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="61:44">(<expr pos:start="59:13" pos:end="61:43"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:14">up</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">flags</name></name> <operator pos:start="59:23" pos:end="59:23">&amp;</operator> <name pos:start="59:25" pos:end="59:55">URL_PROTOCOL_FLAG_NESTED_SCHEME</name> <operator pos:start="59:57" pos:end="59:58">&amp;&amp;</operator>

            <operator pos:start="61:13" pos:end="61:13">!</operator><call pos:start="61:14" pos:end="61:43"><name pos:start="61:14" pos:end="61:19">strcmp</name><argument_list pos:start="61:20" pos:end="61:43">(<argument pos:start="61:21" pos:end="61:32"><expr pos:start="61:21" pos:end="61:32"><name pos:start="61:21" pos:end="61:32">proto_nested</name></expr></argument>, <argument pos:start="61:35" pos:end="61:42"><expr pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:36">up</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:42">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:46" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><call pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:20">av_freep</name><argument_list pos:start="63:21" pos:end="63:32">(<argument pos:start="63:22" pos:end="63:31"><expr pos:start="63:22" pos:end="63:31"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:31">protocols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">up</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="71:5" pos:end="71:25"><expr pos:start="71:5" pos:end="71:24"><call pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:24">(<argument pos:start="71:14" pos:end="71:23"><expr pos:start="71:14" pos:end="71:23"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:23">protocols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




</block_content>}</block></function></unit>
