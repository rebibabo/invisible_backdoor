<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11380.c" pos:tabs="8"><function pos:start="1:1" pos:end="425:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:32">ff_rate_control_init</name><parameter_list pos:start="1:33" pos:end="1:51">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:47">MpegEncContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="425:1">{<block_content pos:start="5:5" pos:end="423:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">RateControlContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">rcc</name> <init pos:start="5:29" pos:end="5:44">= <expr pos:start="5:31" pos:end="5:44"><operator pos:start="5:31" pos:end="5:31">&amp;</operator><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:32">s</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:44">rc_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="65:6"><decl pos:start="9:5" pos:end="65:5"><type pos:start="9:5" pos:end="9:29"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:21">char</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier> <specifier pos:start="9:25" pos:end="9:29">const</specifier></type> <name pos:start="9:31" pos:end="9:43"><name pos:start="9:31" pos:end="9:41">const_names</name><index pos:start="9:42" pos:end="9:43">[]</index></name> <init pos:start="9:45" pos:end="65:5">= <expr pos:start="9:47" pos:end="65:5"><block pos:start="9:47" pos:end="65:5">{

        <expr pos:start="11:9" pos:end="11:12"><literal type="string" pos:start="11:9" pos:end="11:12">"PI"</literal></expr>,

        <expr pos:start="13:9" pos:end="13:11"><literal type="string" pos:start="13:9" pos:end="13:11">"E"</literal></expr>,

        <expr pos:start="15:9" pos:end="15:14"><literal type="string" pos:start="15:9" pos:end="15:14">"iTex"</literal></expr>,

        <expr pos:start="17:9" pos:end="17:14"><literal type="string" pos:start="17:9" pos:end="17:14">"pTex"</literal></expr>,

        <expr pos:start="19:9" pos:end="19:13"><literal type="string" pos:start="19:9" pos:end="19:13">"tex"</literal></expr>,

        <expr pos:start="21:9" pos:end="21:12"><literal type="string" pos:start="21:9" pos:end="21:12">"mv"</literal></expr>,

        <expr pos:start="23:9" pos:end="23:15"><literal type="string" pos:start="23:9" pos:end="23:15">"fCode"</literal></expr>,

        <expr pos:start="25:9" pos:end="25:16"><literal type="string" pos:start="25:9" pos:end="25:16">"iCount"</literal></expr>,

        <expr pos:start="27:9" pos:end="27:15"><literal type="string" pos:start="27:9" pos:end="27:15">"mcVar"</literal></expr>,

        <expr pos:start="29:9" pos:end="29:13"><literal type="string" pos:start="29:9" pos:end="29:13">"var"</literal></expr>,

        <expr pos:start="31:9" pos:end="31:13"><literal type="string" pos:start="31:9" pos:end="31:13">"isI"</literal></expr>,

        <expr pos:start="33:9" pos:end="33:13"><literal type="string" pos:start="33:9" pos:end="33:13">"isP"</literal></expr>,

        <expr pos:start="35:9" pos:end="35:13"><literal type="string" pos:start="35:9" pos:end="35:13">"isB"</literal></expr>,

        <expr pos:start="37:9" pos:end="37:15"><literal type="string" pos:start="37:9" pos:end="37:15">"avgQP"</literal></expr>,

        <expr pos:start="39:9" pos:end="39:15"><literal type="string" pos:start="39:9" pos:end="39:15">"qComp"</literal></expr>,

<cpp:if pos:start="41:1" pos:end="41:5">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:5"><literal type="number" pos:start="41:5" pos:end="41:5">0</literal></expr></cpp:if>

        "lastIQP",

        "lastPQP",

        "lastBQP",

        "nextNonBQP",

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

        <expr pos:start="53:9" pos:end="53:18"><literal type="string" pos:start="53:9" pos:end="53:18">"avgIITex"</literal></expr>,

        <expr pos:start="55:9" pos:end="55:18"><literal type="string" pos:start="55:9" pos:end="55:18">"avgPITex"</literal></expr>,

        <expr pos:start="57:9" pos:end="57:18"><literal type="string" pos:start="57:9" pos:end="57:18">"avgPPTex"</literal></expr>,

        <expr pos:start="59:9" pos:end="59:18"><literal type="string" pos:start="59:9" pos:end="59:18">"avgBPTex"</literal></expr>,

        <expr pos:start="61:9" pos:end="61:16"><literal type="string" pos:start="61:9" pos:end="61:16">"avgTex"</literal></expr>,

        <expr pos:start="63:9" pos:end="63:12"><name pos:start="63:9" pos:end="63:12">NULL</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="67:5" pos:end="75:6"><expr pos:start="67:5" pos:end="75:5"><specifier pos:start="67:5" pos:end="67:10">static</specifier> <call pos:start="67:12" pos:end="67:51"><call pos:start="67:12" pos:end="67:35"><name pos:start="67:12" pos:end="67:17">double</name> <argument_list pos:start="67:19" pos:end="67:35">(<argument pos:start="67:20" pos:end="67:34"><expr pos:start="67:20" pos:end="67:34"><operator pos:start="67:20" pos:end="67:20">*</operator> <specifier pos:start="67:22" pos:end="67:26">const</specifier> <name pos:start="67:28" pos:end="67:34"><name pos:start="67:28" pos:end="67:32">func1</name><index pos:start="67:33" pos:end="67:34">[]</index></name></expr></argument>)</argument_list></call><argument_list pos:start="67:36" pos:end="67:51">(<argument pos:start="67:37" pos:end="67:42"><expr pos:start="67:37" pos:end="67:42"><name pos:start="67:37" pos:end="67:40">void</name> <operator pos:start="67:42" pos:end="67:42">*</operator></expr></argument>, <argument pos:start="67:45" pos:end="67:50"><expr pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:50">double</name></expr></argument>)</argument_list></call> <operator pos:start="67:53" pos:end="67:53">=</operator> <block pos:start="67:55" pos:end="75:5">{

        <expr pos:start="69:9" pos:end="69:23"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:13">void</name> <operator pos:start="69:15" pos:end="69:15">*</operator><operator pos:start="69:16" pos:end="69:16">)</operator><name pos:start="69:17" pos:end="69:23">bits2qp</name></expr>,

        <expr pos:start="71:9" pos:end="71:23"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:13">void</name> <operator pos:start="71:15" pos:end="71:15">*</operator><operator pos:start="71:16" pos:end="71:16">)</operator><name pos:start="71:17" pos:end="71:23">qp2bits</name></expr>,

        <expr pos:start="73:9" pos:end="73:12"><name pos:start="73:9" pos:end="73:12">NULL</name></expr>

    }</block></expr>;</expr_stmt>

    <decl_stmt pos:start="77:5" pos:end="85:6"><decl pos:start="77:5" pos:end="85:5"><type pos:start="77:5" pos:end="77:29"><specifier pos:start="77:5" pos:end="77:10">static</specifier> <specifier pos:start="77:12" pos:end="77:16">const</specifier> <name pos:start="77:18" pos:end="77:21">char</name> <modifier pos:start="77:23" pos:end="77:23">*</modifier> <specifier pos:start="77:25" pos:end="77:29">const</specifier></type> <name pos:start="77:31" pos:end="77:43"><name pos:start="77:31" pos:end="77:41">func1_names</name><index pos:start="77:42" pos:end="77:43">[]</index></name> <init pos:start="77:45" pos:end="85:5">= <expr pos:start="77:47" pos:end="85:5"><block pos:start="77:47" pos:end="85:5">{

        <expr pos:start="79:9" pos:end="79:17"><literal type="string" pos:start="79:9" pos:end="79:17">"bits2qp"</literal></expr>,

        <expr pos:start="81:9" pos:end="81:17"><literal type="string" pos:start="81:9" pos:end="81:17">"qp2bits"</literal></expr>,

        <expr pos:start="83:9" pos:end="83:12"><name pos:start="83:9" pos:end="83:12">NULL</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:13"><expr pos:start="87:5" pos:end="87:12"><call pos:start="87:5" pos:end="87:12"><name pos:start="87:5" pos:end="87:10">emms_c</name><argument_list pos:start="87:11" pos:end="87:12">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="101:5"><if pos:start="91:5" pos:end="101:5">if <condition pos:start="91:8" pos:end="91:72">(<expr pos:start="91:9" pos:end="91:71"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:43"><name pos:start="91:10" pos:end="91:10">s</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:17">avctx</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:43">rc_max_available_vbv_use</name></name> <operator pos:start="91:45" pos:end="91:46">&amp;&amp;</operator> <name pos:start="91:48" pos:end="91:71"><name pos:start="91:48" pos:end="91:48">s</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:55">avctx</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:71">rc_buffer_size</name></name></expr>)</condition> <block pos:start="91:74" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:53">

        <if_stmt pos:start="93:9" pos:end="99:53"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:34">(<expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:20">avctx</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:33">rc_max_rate</name></name></expr>)</condition> <block pos:start="93:36" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:138">

            <expr_stmt pos:start="95:13" pos:end="95:138"><expr pos:start="95:13" pos:end="95:137"><name pos:start="95:13" pos:end="95:46"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:20">avctx</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:46">rc_max_available_vbv_use</name></name> <operator pos:start="95:48" pos:end="95:48">=</operator> <call pos:start="95:50" pos:end="95:137"><name pos:start="95:50" pos:end="95:57">av_clipf</name><argument_list pos:start="95:58" pos:end="95:137">(<argument pos:start="95:59" pos:end="95:124"><expr pos:start="95:59" pos:end="95:124"><name pos:start="95:59" pos:end="95:79"><name pos:start="95:59" pos:end="95:59">s</name><operator pos:start="95:60" pos:end="95:61">-&gt;</operator><name pos:start="95:62" pos:end="95:66">avctx</name><operator pos:start="95:67" pos:end="95:68">-&gt;</operator><name pos:start="95:69" pos:end="95:79">rc_max_rate</name></name><operator pos:start="95:80" pos:end="95:80">/</operator><operator pos:start="95:81" pos:end="95:81">(</operator><name pos:start="95:82" pos:end="95:105"><name pos:start="95:82" pos:end="95:82">s</name><operator pos:start="95:83" pos:end="95:84">-&gt;</operator><name pos:start="95:85" pos:end="95:89">avctx</name><operator pos:start="95:90" pos:end="95:91">-&gt;</operator><name pos:start="95:92" pos:end="95:105">rc_buffer_size</name></name><operator pos:start="95:106" pos:end="95:106">*</operator><call pos:start="95:107" pos:end="95:123"><name pos:start="95:107" pos:end="95:113">get_fps</name><argument_list pos:start="95:114" pos:end="95:123">(<argument pos:start="95:115" pos:end="95:122"><expr pos:start="95:115" pos:end="95:122"><name pos:start="95:115" pos:end="95:122"><name pos:start="95:115" pos:end="95:115">s</name><operator pos:start="95:116" pos:end="95:117">-&gt;</operator><name pos:start="95:118" pos:end="95:122">avctx</name></name></expr></argument>)</argument_list></call><operator pos:start="95:124" pos:end="95:124">)</operator></expr></argument>, <argument pos:start="95:127" pos:end="95:131"><expr pos:start="95:127" pos:end="95:131"><literal type="number" pos:start="95:127" pos:end="95:129">1.0</literal><operator pos:start="95:130" pos:end="95:130">/</operator><literal type="number" pos:start="95:131" pos:end="95:131">3</literal></expr></argument>, <argument pos:start="95:134" pos:end="95:136"><expr pos:start="95:134" pos:end="95:136"><literal type="number" pos:start="95:134" pos:end="95:136">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="97:11" pos:end="99:53">else<block type="pseudo" pos:start="99:13" pos:end="99:53"><block_content pos:start="99:13" pos:end="99:53">

            <expr_stmt pos:start="99:13" pos:end="99:53"><expr pos:start="99:13" pos:end="99:52"><name pos:start="99:13" pos:end="99:46"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:20">avctx</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:46">rc_max_available_vbv_use</name></name> <operator pos:start="99:48" pos:end="99:48">=</operator> <literal type="number" pos:start="99:50" pos:end="99:52">1.0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="111:49"><expr pos:start="105:5" pos:end="111:48"><name pos:start="105:5" pos:end="105:7">res</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="111:48"><name pos:start="105:11" pos:end="105:23">av_expr_parse</name><argument_list pos:start="105:24" pos:end="111:48">(<argument pos:start="105:25" pos:end="105:40"><expr pos:start="105:25" pos:end="105:40"><operator pos:start="105:25" pos:end="105:25">&amp;</operator><name pos:start="105:26" pos:end="105:40"><name pos:start="105:26" pos:end="105:28">rcc</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:40">rc_eq_eval</name></name></expr></argument>,

                        <argument pos:start="107:25" pos:end="107:57"><expr pos:start="107:25" pos:end="107:57"><ternary pos:start="107:25" pos:end="107:57"><condition pos:start="107:25" pos:end="107:34"><expr pos:start="107:25" pos:end="107:32"><name pos:start="107:25" pos:end="107:32"><name pos:start="107:25" pos:end="107:25">s</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:32">rc_eq</name></name></expr> ?</condition><then pos:start="107:36" pos:end="107:43"> <expr pos:start="107:36" pos:end="107:43"><name pos:start="107:36" pos:end="107:43"><name pos:start="107:36" pos:end="107:36">s</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:43">rc_eq</name></name></expr> </then><else pos:start="107:45" pos:end="107:57">: <expr pos:start="107:47" pos:end="107:57"><literal type="string" pos:start="107:47" pos:end="107:57">"tex^qComp"</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="109:25" pos:end="109:35"><expr pos:start="109:25" pos:end="109:35"><name pos:start="109:25" pos:end="109:35">const_names</name></expr></argument>, <argument pos:start="109:38" pos:end="109:48"><expr pos:start="109:38" pos:end="109:48"><name pos:start="109:38" pos:end="109:48">func1_names</name></expr></argument>, <argument pos:start="109:51" pos:end="109:55"><expr pos:start="109:51" pos:end="109:55"><name pos:start="109:51" pos:end="109:55">func1</name></expr></argument>,

                        <argument pos:start="111:25" pos:end="111:28"><expr pos:start="111:25" pos:end="111:28"><name pos:start="111:25" pos:end="111:28">NULL</name></expr></argument>, <argument pos:start="111:31" pos:end="111:34"><expr pos:start="111:31" pos:end="111:34"><name pos:start="111:31" pos:end="111:34">NULL</name></expr></argument>, <argument pos:start="111:37" pos:end="111:37"><expr pos:start="111:37" pos:end="111:37"><literal type="number" pos:start="111:37" pos:end="111:37">0</literal></expr></argument>, <argument pos:start="111:40" pos:end="111:47"><expr pos:start="111:40" pos:end="111:47"><name pos:start="111:40" pos:end="111:47"><name pos:start="111:40" pos:end="111:40">s</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:47">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:16">(<expr pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">res</name> <operator pos:start="113:13" pos:end="113:13">&lt;</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>)</condition> <block pos:start="113:18" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:19">

        <expr_stmt pos:start="115:9" pos:end="115:81"><expr pos:start="115:9" pos:end="115:80"><call pos:start="115:9" pos:end="115:80"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="115:80">(<argument pos:start="115:16" pos:end="115:23"><expr pos:start="115:16" pos:end="115:23"><name pos:start="115:16" pos:end="115:23"><name pos:start="115:16" pos:end="115:16">s</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:23">avctx</name></name></expr></argument>, <argument pos:start="115:26" pos:end="115:37"><expr pos:start="115:26" pos:end="115:37"><name pos:start="115:26" pos:end="115:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:40" pos:end="115:69"><expr pos:start="115:40" pos:end="115:69"><literal type="string" pos:start="115:40" pos:end="115:69">"Error parsing rc_eq \"%s\"\n"</literal></expr></argument>, <argument pos:start="115:72" pos:end="115:79"><expr pos:start="115:72" pos:end="115:79"><name pos:start="115:72" pos:end="115:79"><name pos:start="115:72" pos:end="115:72">s</name><operator pos:start="115:73" pos:end="115:74">-&gt;</operator><name pos:start="115:75" pos:end="115:79">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:19">return <expr pos:start="117:16" pos:end="117:18"><name pos:start="117:16" pos:end="117:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="123:5" pos:end="147:5">for <control pos:start="123:9" pos:end="123:27">(<init pos:start="123:10" pos:end="123:15"><expr pos:start="123:10" pos:end="123:14"><name pos:start="123:10" pos:end="123:10">i</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <literal type="number" pos:start="123:14" pos:end="123:14">0</literal></expr>;</init> <condition pos:start="123:17" pos:end="123:22"><expr pos:start="123:17" pos:end="123:21"><name pos:start="123:17" pos:end="123:17">i</name> <operator pos:start="123:19" pos:end="123:19">&lt;</operator> <literal type="number" pos:start="123:21" pos:end="123:21">5</literal></expr>;</condition> <incr pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:24">i</name><operator pos:start="123:25" pos:end="123:26">++</operator></expr></incr>)</control> <block pos:start="123:29" pos:end="147:5">{<block_content pos:start="125:9" pos:end="145:51">

        <expr_stmt pos:start="125:9" pos:end="125:48"><expr pos:start="125:9" pos:end="125:47"><name pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:11">rcc</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:17">pred</name><index pos:start="125:18" pos:end="125:20">[<expr pos:start="125:19" pos:end="125:19"><name pos:start="125:19" pos:end="125:19">i</name></expr>]</index></name><operator pos:start="125:21" pos:end="125:21">.</operator><name pos:start="125:22" pos:end="125:26">coeff</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <name pos:start="125:30" pos:end="125:41">FF_QP2LAMBDA</name> <operator pos:start="125:43" pos:end="125:43">*</operator> <literal type="number" pos:start="125:45" pos:end="125:47">7.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:11">rcc</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:17">pred</name><index pos:start="127:18" pos:end="127:20">[<expr pos:start="127:19" pos:end="127:19"><name pos:start="127:19" pos:end="127:19">i</name></expr>]</index></name><operator pos:start="127:21" pos:end="127:21">.</operator><name pos:start="127:22" pos:end="127:26">count</name> <operator pos:start="127:28" pos:end="127:28">=</operator> <literal type="number" pos:start="127:30" pos:end="127:32">1.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:11">rcc</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:17">pred</name><index pos:start="129:18" pos:end="129:20">[<expr pos:start="129:19" pos:end="129:19"><name pos:start="129:19" pos:end="129:19">i</name></expr>]</index></name><operator pos:start="129:21" pos:end="129:21">.</operator><name pos:start="129:22" pos:end="129:26">decay</name> <operator pos:start="129:28" pos:end="129:28">=</operator> <literal type="number" pos:start="129:30" pos:end="129:32">0.4</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="141:32"><expr pos:start="133:9" pos:end="141:31"><name pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:11">rcc</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:23">i_cplx_sum</name> <index pos:start="133:25" pos:end="133:27">[<expr pos:start="133:26" pos:end="133:26"><name pos:start="133:26" pos:end="133:26">i</name></expr>]</index></name> <operator pos:start="133:29" pos:end="133:29">=</operator>

        <name pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:11">rcc</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:23">p_cplx_sum</name> <index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><name pos:start="135:26" pos:end="135:26">i</name></expr>]</index></name> <operator pos:start="135:29" pos:end="135:29">=</operator>

        <name pos:start="137:9" pos:end="137:27"><name pos:start="137:9" pos:end="137:11">rcc</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:24">mv_bits_sum</name><index pos:start="137:25" pos:end="137:27">[<expr pos:start="137:26" pos:end="137:26"><name pos:start="137:26" pos:end="137:26">i</name></expr>]</index></name> <operator pos:start="137:29" pos:end="137:29">=</operator>

        <name pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:11">rcc</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:23">qscale_sum</name> <index pos:start="139:25" pos:end="139:27">[<expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">i</name></expr>]</index></name> <operator pos:start="139:29" pos:end="139:29">=</operator>

        <name pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:11">rcc</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:24">frame_count</name><index pos:start="141:25" pos:end="141:27">[<expr pos:start="141:26" pos:end="141:26"><name pos:start="141:26" pos:end="141:26">i</name></expr>]</index></name> <operator pos:start="141:29" pos:end="141:29">=</operator> <literal type="number" pos:start="141:31" pos:end="141:31">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="141:34" pos:end="141:71">// 1 is better because of 1/0 and such</comment>



        <expr_stmt pos:start="145:9" pos:end="145:51"><expr pos:start="145:9" pos:end="145:50"><name pos:start="145:9" pos:end="145:31"><name pos:start="145:9" pos:end="145:11">rcc</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:28">last_qscale_for</name><index pos:start="145:29" pos:end="145:31">[<expr pos:start="145:30" pos:end="145:30"><name pos:start="145:30" pos:end="145:30">i</name></expr>]</index></name> <operator pos:start="145:33" pos:end="145:33">=</operator> <name pos:start="145:35" pos:end="145:46">FF_QP2LAMBDA</name> <operator pos:start="145:48" pos:end="145:48">*</operator> <literal type="number" pos:start="145:50" pos:end="145:50">5</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="149:5" pos:end="149:62"><expr pos:start="149:5" pos:end="149:61"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:7">rcc</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:21">buffer_index</name></name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:61"><name pos:start="149:25" pos:end="149:25">s</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:32">avctx</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:61">rc_initial_buffer_occupancy</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="153:61"><if pos:start="151:5" pos:end="153:61">if <condition pos:start="151:8" pos:end="151:27">(<expr pos:start="151:9" pos:end="151:26"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:26"><name pos:start="151:10" pos:end="151:12">rcc</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:26">buffer_index</name></name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:61"><block_content pos:start="153:9" pos:end="153:61">

        <expr_stmt pos:start="153:9" pos:end="153:61"><expr pos:start="153:9" pos:end="153:60"><name pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:11">rcc</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:25">buffer_index</name></name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:52"><name pos:start="153:29" pos:end="153:29">s</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:36">avctx</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:52">rc_buffer_size</name></name> <operator pos:start="153:54" pos:end="153:54">*</operator> <literal type="number" pos:start="153:56" pos:end="153:56">3</literal> <operator pos:start="153:58" pos:end="153:58">/</operator> <literal type="number" pos:start="153:60" pos:end="153:60">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="305:5"><if pos:start="157:5" pos:end="305:5">if <condition pos:start="157:8" pos:end="157:36">(<expr pos:start="157:9" pos:end="157:35"><name pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:16">flags</name></name> <operator pos:start="157:18" pos:end="157:18">&amp;</operator> <name pos:start="157:20" pos:end="157:35">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="157:38" pos:end="305:5">{<block_content pos:start="159:9" pos:end="303:9">

        <decl_stmt pos:start="159:9" pos:end="159:14"><decl pos:start="159:9" pos:end="159:13"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:16"><decl pos:start="161:9" pos:end="161:15"><type pos:start="161:9" pos:end="161:14"><name pos:start="161:9" pos:end="161:12">char</name> <modifier pos:start="161:14" pos:end="161:14">*</modifier></type><name pos:start="161:15" pos:end="161:15">p</name></decl>;</decl_stmt>



        <comment type="block" pos:start="165:9" pos:end="165:33">/* find number of pics */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:31"><expr pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:9">p</name> <operator pos:start="167:11" pos:end="167:11">=</operator> <name pos:start="167:13" pos:end="167:30"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:20">avctx</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:30">stats_in</name></name></expr>;</expr_stmt>

        <for pos:start="169:9" pos:end="171:35">for <control pos:start="169:13" pos:end="169:28">(<init pos:start="169:14" pos:end="169:20"><expr pos:start="169:14" pos:end="169:19"><name pos:start="169:14" pos:end="169:14">i</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <operator pos:start="169:18" pos:end="169:18">-</operator><literal type="number" pos:start="169:19" pos:end="169:19">1</literal></expr>;</init> <condition pos:start="169:22" pos:end="169:23"><expr pos:start="169:22" pos:end="169:22"><name pos:start="169:22" pos:end="169:22">p</name></expr>;</condition> <incr pos:start="169:25" pos:end="169:27"><expr pos:start="169:25" pos:end="169:27"><name pos:start="169:25" pos:end="169:25">i</name><operator pos:start="169:26" pos:end="169:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:13" pos:end="171:35"><block_content pos:start="171:13" pos:end="171:35">

            <expr_stmt pos:start="171:13" pos:end="171:35"><expr pos:start="171:13" pos:end="171:34"><name pos:start="171:13" pos:end="171:13">p</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <call pos:start="171:17" pos:end="171:34"><name pos:start="171:17" pos:end="171:22">strchr</name><argument_list pos:start="171:23" pos:end="171:34">(<argument pos:start="171:24" pos:end="171:28"><expr pos:start="171:24" pos:end="171:28"><name pos:start="171:24" pos:end="171:24">p</name> <operator pos:start="171:26" pos:end="171:26">+</operator> <literal type="number" pos:start="171:28" pos:end="171:28">1</literal></expr></argument>, <argument pos:start="171:31" pos:end="171:33"><expr pos:start="171:31" pos:end="171:33"><literal type="char" pos:start="171:31" pos:end="171:33">';'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="173:9" pos:end="173:29"><expr pos:start="173:9" pos:end="173:28"><name pos:start="173:9" pos:end="173:9">i</name> <operator pos:start="173:11" pos:end="173:12">+=</operator> <name pos:start="173:14" pos:end="173:28"><name pos:start="173:14" pos:end="173:14">s</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:28">max_b_frames</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="177:22"><if pos:start="175:9" pos:end="177:22">if <condition pos:start="175:12" pos:end="175:62">(<expr pos:start="175:13" pos:end="175:61"><name pos:start="175:13" pos:end="175:13">i</name> <operator pos:start="175:15" pos:end="175:16">&lt;=</operator> <literal type="number" pos:start="175:18" pos:end="175:18">0</literal> <operator pos:start="175:20" pos:end="175:21">||</operator> <name pos:start="175:23" pos:end="175:23">i</name> <operator pos:start="175:25" pos:end="175:26">&gt;=</operator> <name pos:start="175:28" pos:end="175:34">INT_MAX</name> <operator pos:start="175:36" pos:end="175:36">/</operator> <sizeof pos:start="175:38" pos:end="175:61">sizeof<argument_list pos:start="175:44" pos:end="175:61">(<argument pos:start="175:45" pos:end="175:60"><expr pos:start="175:45" pos:end="175:60"><name pos:start="175:45" pos:end="175:60">RateControlEntry</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:22"><block_content pos:start="177:13" pos:end="177:22">

            <return pos:start="177:13" pos:end="177:22">return <expr pos:start="177:20" pos:end="177:21"><operator pos:start="177:20" pos:end="177:20">-</operator><literal type="number" pos:start="177:21" pos:end="177:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:68"><expr pos:start="179:9" pos:end="179:67"><name pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:11">rcc</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:18">entry</name></name>       <operator pos:start="179:26" pos:end="179:26">=</operator> <call pos:start="179:28" pos:end="179:67"><name pos:start="179:28" pos:end="179:37">av_mallocz</name><argument_list pos:start="179:38" pos:end="179:67">(<argument pos:start="179:39" pos:end="179:66"><expr pos:start="179:39" pos:end="179:66"><name pos:start="179:39" pos:end="179:39">i</name> <operator pos:start="179:41" pos:end="179:41">*</operator> <sizeof pos:start="179:43" pos:end="179:66">sizeof<argument_list pos:start="179:49" pos:end="179:66">(<argument pos:start="179:50" pos:end="179:65"><expr pos:start="179:50" pos:end="179:65"><name pos:start="179:50" pos:end="179:65">RateControlEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:29"><expr pos:start="183:9" pos:end="183:28"><name pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:11">rcc</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:24">num_entries</name></name> <operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:28">i</name></expr>;</expr_stmt>



        <comment type="block" pos:start="187:9" pos:end="189:80">/* init all to skipped p frames

         * (with b frames we might have a not encoded frame at the end FIXME) */</comment>

        <for pos:start="191:9" pos:end="205:9">for <control pos:start="191:13" pos:end="191:46">(<init pos:start="191:14" pos:end="191:19"><expr pos:start="191:14" pos:end="191:18"><name pos:start="191:14" pos:end="191:14">i</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <literal type="number" pos:start="191:18" pos:end="191:18">0</literal></expr>;</init> <condition pos:start="191:21" pos:end="191:41"><expr pos:start="191:21" pos:end="191:40"><name pos:start="191:21" pos:end="191:21">i</name> <operator pos:start="191:23" pos:end="191:23">&lt;</operator> <name pos:start="191:25" pos:end="191:40"><name pos:start="191:25" pos:end="191:27">rcc</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:40">num_entries</name></name></expr>;</condition> <incr pos:start="191:43" pos:end="191:45"><expr pos:start="191:43" pos:end="191:45"><name pos:start="191:43" pos:end="191:43">i</name><operator pos:start="191:44" pos:end="191:45">++</operator></expr></incr>)</control> <block pos:start="191:48" pos:end="205:9">{<block_content pos:start="193:13" pos:end="203:46">

            <decl_stmt pos:start="193:13" pos:end="193:51"><decl pos:start="193:13" pos:end="193:50"><type pos:start="193:13" pos:end="193:30"><name pos:start="193:13" pos:end="193:28">RateControlEntry</name> <modifier pos:start="193:30" pos:end="193:30">*</modifier></type><name pos:start="193:31" pos:end="193:33">rce</name> <init pos:start="193:35" pos:end="193:50">= <expr pos:start="193:37" pos:end="193:50"><operator pos:start="193:37" pos:end="193:37">&amp;</operator><name pos:start="193:38" pos:end="193:50"><name pos:start="193:38" pos:end="193:40">rcc</name><operator pos:start="193:41" pos:end="193:42">-&gt;</operator><name pos:start="193:43" pos:end="193:47">entry</name><index pos:start="193:48" pos:end="193:50">[<expr pos:start="193:49" pos:end="193:49"><name pos:start="193:49" pos:end="193:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:69"><expr pos:start="197:13" pos:end="197:68"><name pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:15">rce</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:26">pict_type</name></name>  <operator pos:start="197:29" pos:end="197:29">=</operator> <name pos:start="197:31" pos:end="197:48"><name pos:start="197:31" pos:end="197:33">rce</name><operator pos:start="197:34" pos:end="197:35">-&gt;</operator><name pos:start="197:36" pos:end="197:48">new_pict_type</name></name> <operator pos:start="197:50" pos:end="197:50">=</operator> <name pos:start="197:52" pos:end="197:68">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:68"><expr pos:start="199:13" pos:end="199:67"><name pos:start="199:13" pos:end="199:23"><name pos:start="199:13" pos:end="199:15">rce</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:23">qscale</name></name>     <operator pos:start="199:29" pos:end="199:29">=</operator> <name pos:start="199:31" pos:end="199:45"><name pos:start="199:31" pos:end="199:33">rce</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:45">new_qscale</name></name>    <operator pos:start="199:50" pos:end="199:50">=</operator> <name pos:start="199:52" pos:end="199:63">FF_QP2LAMBDA</name> <operator pos:start="199:65" pos:end="199:65">*</operator> <literal type="number" pos:start="199:67" pos:end="199:67">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:45"><expr pos:start="201:13" pos:end="201:44"><name pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:15">rce</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:26">misc_bits</name></name>  <operator pos:start="201:29" pos:end="201:29">=</operator> <name pos:start="201:31" pos:end="201:39"><name pos:start="201:31" pos:end="201:31">s</name><operator pos:start="201:32" pos:end="201:33">-&gt;</operator><name pos:start="201:34" pos:end="201:39">mb_num</name></name> <operator pos:start="201:41" pos:end="201:41">+</operator> <literal type="number" pos:start="201:43" pos:end="201:44">10</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:46"><expr pos:start="203:13" pos:end="203:45"><name pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:15">rce</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:27">mb_var_sum</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <name pos:start="203:31" pos:end="203:39"><name pos:start="203:31" pos:end="203:31">s</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:39">mb_num</name></name> <operator pos:start="203:41" pos:end="203:41">*</operator> <literal type="number" pos:start="203:43" pos:end="203:45">100</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="209:9" pos:end="209:24">/* read stats */</comment>

        <expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:9">p</name> <operator pos:start="211:11" pos:end="211:11">=</operator> <name pos:start="211:13" pos:end="211:30"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:20">avctx</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:30">stats_in</name></name></expr>;</expr_stmt>

        <for pos:start="213:9" pos:end="275:9">for <control pos:start="213:13" pos:end="213:64">(<init pos:start="213:14" pos:end="213:19"><expr pos:start="213:14" pos:end="213:18"><name pos:start="213:14" pos:end="213:14">i</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="number" pos:start="213:18" pos:end="213:18">0</literal></expr>;</init> <condition pos:start="213:21" pos:end="213:59"><expr pos:start="213:21" pos:end="213:58"><name pos:start="213:21" pos:end="213:21">i</name> <operator pos:start="213:23" pos:end="213:23">&lt;</operator> <name pos:start="213:25" pos:end="213:40"><name pos:start="213:25" pos:end="213:27">rcc</name><operator pos:start="213:28" pos:end="213:29">-&gt;</operator><name pos:start="213:30" pos:end="213:40">num_entries</name></name> <operator pos:start="213:42" pos:end="213:42">-</operator> <name pos:start="213:44" pos:end="213:58"><name pos:start="213:44" pos:end="213:44">s</name><operator pos:start="213:45" pos:end="213:46">-&gt;</operator><name pos:start="213:47" pos:end="213:58">max_b_frames</name></name></expr>;</condition> <incr pos:start="213:61" pos:end="213:63"><expr pos:start="213:61" pos:end="213:63"><name pos:start="213:61" pos:end="213:61">i</name><operator pos:start="213:62" pos:end="213:63">++</operator></expr></incr>)</control> <block pos:start="213:66" pos:end="275:9">{<block_content pos:start="215:13" pos:end="273:21">

            <decl_stmt pos:start="215:13" pos:end="215:34"><decl pos:start="215:13" pos:end="215:33"><type pos:start="215:13" pos:end="215:30"><name pos:start="215:13" pos:end="215:28">RateControlEntry</name> <modifier pos:start="215:30" pos:end="215:30">*</modifier></type><name pos:start="215:31" pos:end="215:33">rce</name></decl>;</decl_stmt>

            <decl_stmt pos:start="217:13" pos:end="217:31"><decl pos:start="217:13" pos:end="217:30"><type pos:start="217:13" pos:end="217:15"><name pos:start="217:13" pos:end="217:15">int</name></type> <name pos:start="217:17" pos:end="217:30">picture_number</name></decl>;</decl_stmt>

            <decl_stmt pos:start="219:13" pos:end="219:18"><decl pos:start="219:13" pos:end="219:17"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:17">e</name></decl>;</decl_stmt>

            <decl_stmt pos:start="221:13" pos:end="221:23"><decl pos:start="221:13" pos:end="221:22"><type pos:start="221:13" pos:end="221:18"><name pos:start="221:13" pos:end="221:16">char</name> <modifier pos:start="221:18" pos:end="221:18">*</modifier></type><name pos:start="221:19" pos:end="221:22">next</name></decl>;</decl_stmt>



            <expr_stmt pos:start="225:13" pos:end="225:34"><expr pos:start="225:13" pos:end="225:33"><name pos:start="225:13" pos:end="225:16">next</name> <operator pos:start="225:18" pos:end="225:18">=</operator> <call pos:start="225:20" pos:end="225:33"><name pos:start="225:20" pos:end="225:25">strchr</name><argument_list pos:start="225:26" pos:end="225:33">(<argument pos:start="225:27" pos:end="225:27"><expr pos:start="225:27" pos:end="225:27"><name pos:start="225:27" pos:end="225:27">p</name></expr></argument>, <argument pos:start="225:30" pos:end="225:32"><expr pos:start="225:30" pos:end="225:32"><literal type="char" pos:start="225:30" pos:end="225:32">';'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="227:13" pos:end="233:13"><if pos:start="227:13" pos:end="233:13">if <condition pos:start="227:16" pos:end="227:21">(<expr pos:start="227:17" pos:end="227:20"><name pos:start="227:17" pos:end="227:20">next</name></expr>)</condition> <block pos:start="227:23" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:23">

                <expr_stmt pos:start="229:17" pos:end="229:28"><expr pos:start="229:17" pos:end="229:27"><operator pos:start="229:17" pos:end="229:17">(</operator><operator pos:start="229:18" pos:end="229:18">*</operator><name pos:start="229:19" pos:end="229:22">next</name><operator pos:start="229:23" pos:end="229:23">)</operator> <operator pos:start="229:25" pos:end="229:25">=</operator> <literal type="number" pos:start="229:27" pos:end="229:27">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="229:30" pos:end="229:106">// sscanf in unbelievably slow on looong strings // FIXME copy / do not write</comment>

                <expr_stmt pos:start="231:17" pos:end="231:23"><expr pos:start="231:17" pos:end="231:22"><name pos:start="231:17" pos:end="231:20">next</name><operator pos:start="231:21" pos:end="231:22">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:54"><expr pos:start="235:13" pos:end="235:53"><name pos:start="235:13" pos:end="235:13">e</name> <operator pos:start="235:15" pos:end="235:15">=</operator> <call pos:start="235:17" pos:end="235:53"><name pos:start="235:17" pos:end="235:22">sscanf</name><argument_list pos:start="235:23" pos:end="235:53">(<argument pos:start="235:24" pos:end="235:24"><expr pos:start="235:24" pos:end="235:24"><name pos:start="235:24" pos:end="235:24">p</name></expr></argument>, <argument pos:start="235:27" pos:end="235:35"><expr pos:start="235:27" pos:end="235:35"><literal type="string" pos:start="235:27" pos:end="235:35">" in:%d "</literal></expr></argument>, <argument pos:start="235:38" pos:end="235:52"><expr pos:start="235:38" pos:end="235:52"><operator pos:start="235:38" pos:end="235:38">&amp;</operator><name pos:start="235:39" pos:end="235:52">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="239:13" pos:end="239:40"><expr pos:start="239:13" pos:end="239:39"><call pos:start="239:13" pos:end="239:39"><name pos:start="239:13" pos:end="239:18">assert</name><argument_list pos:start="239:19" pos:end="239:39">(<argument pos:start="239:20" pos:end="239:38"><expr pos:start="239:20" pos:end="239:38"><name pos:start="239:20" pos:end="239:33">picture_number</name> <operator pos:start="239:35" pos:end="239:36">&gt;=</operator> <literal type="number" pos:start="239:38" pos:end="239:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:54"><expr pos:start="241:13" pos:end="241:53"><call pos:start="241:13" pos:end="241:53"><name pos:start="241:13" pos:end="241:18">assert</name><argument_list pos:start="241:19" pos:end="241:53">(<argument pos:start="241:20" pos:end="241:52"><expr pos:start="241:20" pos:end="241:52"><name pos:start="241:20" pos:end="241:33">picture_number</name> <operator pos:start="241:35" pos:end="241:35">&lt;</operator> <name pos:start="241:37" pos:end="241:52"><name pos:start="241:37" pos:end="241:39">rcc</name><operator pos:start="241:40" pos:end="241:41">-&gt;</operator><name pos:start="241:42" pos:end="241:52">num_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:46"><expr pos:start="243:13" pos:end="243:45"><name pos:start="243:13" pos:end="243:15">rce</name> <operator pos:start="243:17" pos:end="243:17">=</operator> <operator pos:start="243:19" pos:end="243:19">&amp;</operator><name pos:start="243:20" pos:end="243:45"><name pos:start="243:20" pos:end="243:22">rcc</name><operator pos:start="243:23" pos:end="243:24">-&gt;</operator><name pos:start="243:25" pos:end="243:29">entry</name><index pos:start="243:30" pos:end="243:45">[<expr pos:start="243:31" pos:end="243:44"><name pos:start="243:31" pos:end="243:44">picture_number</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="247:13" pos:end="257:76"><expr pos:start="247:13" pos:end="257:75"><name pos:start="247:13" pos:end="247:13">e</name> <operator pos:start="247:15" pos:end="247:16">+=</operator> <call pos:start="247:18" pos:end="257:75"><name pos:start="247:18" pos:end="247:23">sscanf</name><argument_list pos:start="247:24" pos:end="257:75">(<argument pos:start="247:25" pos:end="247:25"><expr pos:start="247:25" pos:end="247:25"><name pos:start="247:25" pos:end="247:25">p</name></expr></argument>, <argument pos:start="247:28" pos:end="247:168"><expr pos:start="247:28" pos:end="247:168"><literal type="string" pos:start="247:28" pos:end="247:114">" in:%*d out:%*d type:%d q:%f itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%"</literal><name pos:start="247:115" pos:end="247:120">SCNd64</name><literal type="string" pos:start="247:121" pos:end="247:128">" var:%"</literal><name pos:start="247:129" pos:end="247:134">SCNd64</name><literal type="string" pos:start="247:135" pos:end="247:168">" icount:%d skipcount:%d hbits:%d"</literal></expr></argument>,

                        <argument pos:start="249:25" pos:end="249:39"><expr pos:start="249:25" pos:end="249:39"><operator pos:start="249:25" pos:end="249:25">&amp;</operator><name pos:start="249:26" pos:end="249:39"><name pos:start="249:26" pos:end="249:28">rce</name><operator pos:start="249:29" pos:end="249:30">-&gt;</operator><name pos:start="249:31" pos:end="249:39">pict_type</name></name></expr></argument>, <argument pos:start="249:42" pos:end="249:53"><expr pos:start="249:42" pos:end="249:53"><operator pos:start="249:42" pos:end="249:42">&amp;</operator><name pos:start="249:43" pos:end="249:53"><name pos:start="249:43" pos:end="249:45">rce</name><operator pos:start="249:46" pos:end="249:47">-&gt;</operator><name pos:start="249:48" pos:end="249:53">qscale</name></name></expr></argument>, <argument pos:start="249:56" pos:end="249:71"><expr pos:start="249:56" pos:end="249:71"><operator pos:start="249:56" pos:end="249:56">&amp;</operator><name pos:start="249:57" pos:end="249:71"><name pos:start="249:57" pos:end="249:59">rce</name><operator pos:start="249:60" pos:end="249:61">-&gt;</operator><name pos:start="249:62" pos:end="249:71">i_tex_bits</name></name></expr></argument>, <argument pos:start="249:74" pos:end="249:89"><expr pos:start="249:74" pos:end="249:89"><operator pos:start="249:74" pos:end="249:74">&amp;</operator><name pos:start="249:75" pos:end="249:89"><name pos:start="249:75" pos:end="249:77">rce</name><operator pos:start="249:78" pos:end="249:79">-&gt;</operator><name pos:start="249:80" pos:end="249:89">p_tex_bits</name></name></expr></argument>,

                        <argument pos:start="251:25" pos:end="251:37"><expr pos:start="251:25" pos:end="251:37"><operator pos:start="251:25" pos:end="251:25">&amp;</operator><name pos:start="251:26" pos:end="251:37"><name pos:start="251:26" pos:end="251:28">rce</name><operator pos:start="251:29" pos:end="251:30">-&gt;</operator><name pos:start="251:31" pos:end="251:37">mv_bits</name></name></expr></argument>, <argument pos:start="251:40" pos:end="251:54"><expr pos:start="251:40" pos:end="251:54"><operator pos:start="251:40" pos:end="251:40">&amp;</operator><name pos:start="251:41" pos:end="251:54"><name pos:start="251:41" pos:end="251:43">rce</name><operator pos:start="251:44" pos:end="251:45">-&gt;</operator><name pos:start="251:46" pos:end="251:54">misc_bits</name></name></expr></argument>,

                        <argument pos:start="253:25" pos:end="253:36"><expr pos:start="253:25" pos:end="253:36"><operator pos:start="253:25" pos:end="253:25">&amp;</operator><name pos:start="253:26" pos:end="253:36"><name pos:start="253:26" pos:end="253:28">rce</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:36">f_code</name></name></expr></argument>, <argument pos:start="253:39" pos:end="253:50"><expr pos:start="253:39" pos:end="253:50"><operator pos:start="253:39" pos:end="253:39">&amp;</operator><name pos:start="253:40" pos:end="253:50"><name pos:start="253:40" pos:end="253:42">rce</name><operator pos:start="253:43" pos:end="253:44">-&gt;</operator><name pos:start="253:45" pos:end="253:50">b_code</name></name></expr></argument>,

                        <argument pos:start="255:25" pos:end="255:43"><expr pos:start="255:25" pos:end="255:43"><operator pos:start="255:25" pos:end="255:25">&amp;</operator><name pos:start="255:26" pos:end="255:43"><name pos:start="255:26" pos:end="255:28">rce</name><operator pos:start="255:29" pos:end="255:30">-&gt;</operator><name pos:start="255:31" pos:end="255:43">mc_mb_var_sum</name></name></expr></argument>, <argument pos:start="255:46" pos:end="255:61"><expr pos:start="255:46" pos:end="255:61"><operator pos:start="255:46" pos:end="255:46">&amp;</operator><name pos:start="255:47" pos:end="255:61"><name pos:start="255:47" pos:end="255:49">rce</name><operator pos:start="255:50" pos:end="255:51">-&gt;</operator><name pos:start="255:52" pos:end="255:61">mb_var_sum</name></name></expr></argument>,

                        <argument pos:start="257:25" pos:end="257:37"><expr pos:start="257:25" pos:end="257:37"><operator pos:start="257:25" pos:end="257:25">&amp;</operator><name pos:start="257:26" pos:end="257:37"><name pos:start="257:26" pos:end="257:28">rce</name><operator pos:start="257:29" pos:end="257:30">-&gt;</operator><name pos:start="257:31" pos:end="257:37">i_count</name></name></expr></argument>, <argument pos:start="257:40" pos:end="257:55"><expr pos:start="257:40" pos:end="257:55"><operator pos:start="257:40" pos:end="257:40">&amp;</operator><name pos:start="257:41" pos:end="257:55"><name pos:start="257:41" pos:end="257:43">rce</name><operator pos:start="257:44" pos:end="257:45">-&gt;</operator><name pos:start="257:46" pos:end="257:55">skip_count</name></name></expr></argument>, <argument pos:start="257:58" pos:end="257:74"><expr pos:start="257:58" pos:end="257:74"><operator pos:start="257:58" pos:end="257:58">&amp;</operator><name pos:start="257:59" pos:end="257:74"><name pos:start="257:59" pos:end="257:61">rce</name><operator pos:start="257:62" pos:end="257:63">-&gt;</operator><name pos:start="257:64" pos:end="257:74">header_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="259:13" pos:end="269:13"><if pos:start="259:13" pos:end="269:13">if <condition pos:start="259:16" pos:end="259:24">(<expr pos:start="259:17" pos:end="259:23"><name pos:start="259:17" pos:end="259:17">e</name> <operator pos:start="259:19" pos:end="259:20">!=</operator> <literal type="number" pos:start="259:22" pos:end="259:23">14</literal></expr>)</condition> <block pos:start="259:26" pos:end="269:13">{<block_content pos:start="261:17" pos:end="267:26">

                <expr_stmt pos:start="261:17" pos:end="265:29"><expr pos:start="261:17" pos:end="265:28"><call pos:start="261:17" pos:end="265:28"><name pos:start="261:17" pos:end="261:22">av_log</name><argument_list pos:start="261:23" pos:end="265:28">(<argument pos:start="261:24" pos:end="261:31"><expr pos:start="261:24" pos:end="261:31"><name pos:start="261:24" pos:end="261:31"><name pos:start="261:24" pos:end="261:24">s</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:31">avctx</name></name></expr></argument>, <argument pos:start="261:34" pos:end="261:45"><expr pos:start="261:34" pos:end="261:45"><name pos:start="261:34" pos:end="261:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="263:24" pos:end="263:75"><expr pos:start="263:24" pos:end="263:75"><literal type="string" pos:start="263:24" pos:end="263:75">"statistics are damaged at line %d, parser out=%d\n"</literal></expr></argument>,

                       <argument pos:start="265:24" pos:end="265:24"><expr pos:start="265:24" pos:end="265:24"><name pos:start="265:24" pos:end="265:24">i</name></expr></argument>, <argument pos:start="265:27" pos:end="265:27"><expr pos:start="265:27" pos:end="265:27"><name pos:start="265:27" pos:end="265:27">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="267:17" pos:end="267:26">return <expr pos:start="267:24" pos:end="267:25"><operator pos:start="267:24" pos:end="267:24">-</operator><literal type="number" pos:start="267:25" pos:end="267:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="273:13" pos:end="273:21"><expr pos:start="273:13" pos:end="273:20"><name pos:start="273:13" pos:end="273:13">p</name> <operator pos:start="273:15" pos:end="273:15">=</operator> <name pos:start="273:17" pos:end="273:20">next</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="279:9" pos:end="281:22"><if pos:start="279:9" pos:end="281:22">if <condition pos:start="279:12" pos:end="279:30">(<expr pos:start="279:13" pos:end="279:29"><call pos:start="279:13" pos:end="279:25"><name pos:start="279:13" pos:end="279:22">init_pass2</name><argument_list pos:start="279:23" pos:end="279:25">(<argument pos:start="279:24" pos:end="279:24"><expr pos:start="279:24" pos:end="279:24"><name pos:start="279:24" pos:end="279:24">s</name></expr></argument>)</argument_list></call> <operator pos:start="279:27" pos:end="279:27">&lt;</operator> <literal type="number" pos:start="279:29" pos:end="279:29">0</literal></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:22"><block_content pos:start="281:13" pos:end="281:22">

            <return pos:start="281:13" pos:end="281:22">return <expr pos:start="281:20" pos:end="281:21"><operator pos:start="281:20" pos:end="281:20">-</operator><literal type="number" pos:start="281:21" pos:end="281:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="line" pos:start="285:9" pos:end="285:34">// FIXME maybe move to end</comment>

        <if_stmt pos:start="287:9" pos:end="303:9"><if pos:start="287:9" pos:end="303:9">if <condition pos:start="287:12" pos:end="287:90">(<expr pos:start="287:13" pos:end="287:89"><operator pos:start="287:13" pos:end="287:13">(</operator><name pos:start="287:14" pos:end="287:21"><name pos:start="287:14" pos:end="287:14">s</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:21">flags</name></name> <operator pos:start="287:23" pos:end="287:23">&amp;</operator> <name pos:start="287:25" pos:end="287:40">CODEC_FLAG_PASS2</name><operator pos:start="287:41" pos:end="287:41">)</operator> <operator pos:start="287:43" pos:end="287:44">&amp;&amp;</operator> <name pos:start="287:46" pos:end="287:66"><name pos:start="287:46" pos:end="287:46">s</name><operator pos:start="287:47" pos:end="287:48">-&gt;</operator><name pos:start="287:49" pos:end="287:53">avctx</name><operator pos:start="287:54" pos:end="287:55">-&gt;</operator><name pos:start="287:56" pos:end="287:66">rc_strategy</name></name> <operator pos:start="287:68" pos:end="287:69">==</operator> <name pos:start="287:71" pos:end="287:89">FF_RC_STRATEGY_XVID</name></expr>)</condition> <block pos:start="287:92" pos:end="303:9">{<block_content pos:start="291:13" pos:end="302:0">

<cpp:if pos:start="289:1" pos:end="289:18">#<cpp:directive pos:start="289:2" pos:end="289:3">if</cpp:directive> <expr pos:start="289:5" pos:end="289:18"><name pos:start="289:5" pos:end="289:18">CONFIG_LIBXVID</name></expr></cpp:if>

            <return pos:start="291:13" pos:end="294:0">return <expr pos:start="291:20" pos:end="291:47"><call pos:start="291:20" pos:end="291:47"><name pos:start="291:20" pos:end="291:44">ff_xvid_rate_control_init</name><argument_list pos:start="291:45" pos:end="291:47">(<argument pos:start="291:46" pos:end="291:46"><expr pos:start="291:46" pos:end="291:46"><name pos:start="291:46" pos:end="291:46">s</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:else pos:start="293:1" pos:end="293:5">#<cpp:directive pos:start="293:2" pos:end="293:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="295:13" pos:end="297:89"><expr pos:start="295:13" pos:end="297:88"><call pos:start="295:13" pos:end="297:88"><name pos:start="295:13" pos:end="295:18">av_log</name><argument_list pos:start="295:19" pos:end="297:88">(<argument pos:start="295:20" pos:end="295:27"><expr pos:start="295:20" pos:end="295:27"><name pos:start="295:20" pos:end="295:27"><name pos:start="295:20" pos:end="295:20">s</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:27">avctx</name></name></expr></argument>, <argument pos:start="295:30" pos:end="295:41"><expr pos:start="295:30" pos:end="295:41"><name pos:start="295:30" pos:end="295:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="297:20" pos:end="297:87"><expr pos:start="297:20" pos:end="297:87"><literal type="string" pos:start="297:20" pos:end="297:87">"Xvid ratecontrol requires libavcodec compiled with Xvid support.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="299:13" pos:end="302:0">return <expr pos:start="299:20" pos:end="299:21"><operator pos:start="299:20" pos:end="299:20">-</operator><literal type="number" pos:start="299:21" pos:end="299:21">1</literal></expr>;</return>

<cpp:endif pos:start="301:1" pos:end="301:6">#<cpp:directive pos:start="301:2" pos:end="301:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="309:5" pos:end="419:5"><if pos:start="309:5" pos:end="419:5">if <condition pos:start="309:8" pos:end="309:39">(<expr pos:start="309:9" pos:end="309:38"><operator pos:start="309:9" pos:end="309:9">!</operator><operator pos:start="309:10" pos:end="309:10">(</operator><name pos:start="309:11" pos:end="309:18"><name pos:start="309:11" pos:end="309:11">s</name><operator pos:start="309:12" pos:end="309:13">-&gt;</operator><name pos:start="309:14" pos:end="309:18">flags</name></name> <operator pos:start="309:20" pos:end="309:20">&amp;</operator> <name pos:start="309:22" pos:end="309:37">CODEC_FLAG_PASS2</name><operator pos:start="309:38" pos:end="309:38">)</operator></expr>)</condition> <block pos:start="309:41" pos:end="419:5">{<block_content pos:start="311:9" pos:end="417:9">

        <expr_stmt pos:start="311:9" pos:end="311:39"><expr pos:start="311:9" pos:end="311:38"><name pos:start="311:9" pos:end="311:28"><name pos:start="311:9" pos:end="311:11">rcc</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:28">short_term_qsum</name></name>   <operator pos:start="311:32" pos:end="311:32">=</operator> <literal type="number" pos:start="311:34" pos:end="311:38">0.001</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:39"><expr pos:start="313:9" pos:end="313:38"><name pos:start="313:9" pos:end="313:30"><name pos:start="313:9" pos:end="313:11">rcc</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:30">short_term_qcount</name></name> <operator pos:start="313:32" pos:end="313:32">=</operator> <literal type="number" pos:start="313:34" pos:end="313:38">0.001</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="317:9" pos:end="317:44"><expr pos:start="317:9" pos:end="317:43"><name pos:start="317:9" pos:end="317:35"><name pos:start="317:9" pos:end="317:11">rcc</name><operator pos:start="317:12" pos:end="317:13">-&gt;</operator><name pos:start="317:14" pos:end="317:35">pass1_rc_eq_output_sum</name></name> <operator pos:start="317:37" pos:end="317:37">=</operator> <literal type="number" pos:start="317:39" pos:end="317:43">0.001</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:44"><expr pos:start="319:9" pos:end="319:43"><name pos:start="319:9" pos:end="319:30"><name pos:start="319:9" pos:end="319:11">rcc</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:30">pass1_wanted_bits</name></name>      <operator pos:start="319:37" pos:end="319:37">=</operator> <literal type="number" pos:start="319:39" pos:end="319:43">0.001</literal></expr>;</expr_stmt>



        <if_stmt pos:start="323:9" pos:end="329:9"><if pos:start="323:9" pos:end="329:9">if <condition pos:start="323:12" pos:end="323:34">(<expr pos:start="323:13" pos:end="323:33"><name pos:start="323:13" pos:end="323:27"><name pos:start="323:13" pos:end="323:13">s</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:20">avctx</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:27">qblur</name></name> <operator pos:start="323:29" pos:end="323:29">&gt;</operator> <literal type="number" pos:start="323:31" pos:end="323:33">1.0</literal></expr>)</condition> <block pos:start="323:36" pos:end="329:9">{<block_content pos:start="325:13" pos:end="327:22">

            <expr_stmt pos:start="325:13" pos:end="325:64"><expr pos:start="325:13" pos:end="325:63"><call pos:start="325:13" pos:end="325:63"><name pos:start="325:13" pos:end="325:18">av_log</name><argument_list pos:start="325:19" pos:end="325:63">(<argument pos:start="325:20" pos:end="325:27"><expr pos:start="325:20" pos:end="325:27"><name pos:start="325:20" pos:end="325:27"><name pos:start="325:20" pos:end="325:20">s</name><operator pos:start="325:21" pos:end="325:22">-&gt;</operator><name pos:start="325:23" pos:end="325:27">avctx</name></name></expr></argument>, <argument pos:start="325:30" pos:end="325:41"><expr pos:start="325:30" pos:end="325:41"><name pos:start="325:30" pos:end="325:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="325:44" pos:end="325:62"><expr pos:start="325:44" pos:end="325:62"><literal type="string" pos:start="325:44" pos:end="325:62">"qblur too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="327:13" pos:end="327:22">return <expr pos:start="327:20" pos:end="327:21"><operator pos:start="327:20" pos:end="327:20">-</operator><literal type="number" pos:start="327:21" pos:end="327:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="331:9" pos:end="331:59">/* init stuff with the user specified complexity */</comment>

        <if_stmt pos:start="333:9" pos:end="417:9"><if pos:start="333:9" pos:end="417:9">if <condition pos:start="333:12" pos:end="333:31">(<expr pos:start="333:13" pos:end="333:30"><name pos:start="333:13" pos:end="333:30"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:30">rc_initial_cplx</name></name></expr>)</condition> <block pos:start="333:33" pos:end="417:9">{<block_content pos:start="335:13" pos:end="415:13">

            <for pos:start="335:13" pos:end="415:13">for <control pos:start="335:17" pos:end="335:41">(<init pos:start="335:18" pos:end="335:23"><expr pos:start="335:18" pos:end="335:22"><name pos:start="335:18" pos:end="335:18">i</name> <operator pos:start="335:20" pos:end="335:20">=</operator> <literal type="number" pos:start="335:22" pos:end="335:22">0</literal></expr>;</init> <condition pos:start="335:25" pos:end="335:36"><expr pos:start="335:25" pos:end="335:35"><name pos:start="335:25" pos:end="335:25">i</name> <operator pos:start="335:27" pos:end="335:27">&lt;</operator> <literal type="number" pos:start="335:29" pos:end="335:30">60</literal> <operator pos:start="335:32" pos:end="335:32">*</operator> <literal type="number" pos:start="335:34" pos:end="335:35">30</literal></expr>;</condition> <incr pos:start="335:38" pos:end="335:40"><expr pos:start="335:38" pos:end="335:40"><name pos:start="335:38" pos:end="335:38">i</name><operator pos:start="335:39" pos:end="335:40">++</operator></expr></incr>)</control> <block pos:start="335:43" pos:end="415:13">{<block_content pos:start="337:17" pos:end="413:74">

                <decl_stmt pos:start="337:17" pos:end="337:83"><decl pos:start="337:17" pos:end="337:82"><type pos:start="337:17" pos:end="337:22"><name pos:start="337:17" pos:end="337:22">double</name></type> <name pos:start="337:24" pos:end="337:27">bits</name> <init pos:start="337:29" pos:end="337:82">= <expr pos:start="337:31" pos:end="337:82"><name pos:start="337:31" pos:end="337:48"><name pos:start="337:31" pos:end="337:31">s</name><operator pos:start="337:32" pos:end="337:33">-&gt;</operator><name pos:start="337:34" pos:end="337:48">rc_initial_cplx</name></name> <operator pos:start="337:50" pos:end="337:50">*</operator> <operator pos:start="337:52" pos:end="337:52">(</operator><name pos:start="337:53" pos:end="337:53">i</name> <operator pos:start="337:55" pos:end="337:55">/</operator> <literal type="number" pos:start="337:57" pos:end="337:65">10000.0</literal> <operator pos:start="337:65" pos:end="337:65">+</operator> <literal type="number" pos:start="337:67" pos:end="337:69">1.0</literal><operator pos:start="337:70" pos:end="337:70">)</operator> <operator pos:start="337:72" pos:end="337:72">*</operator> <name pos:start="337:74" pos:end="337:82"><name pos:start="337:74" pos:end="337:74">s</name><operator pos:start="337:75" pos:end="337:76">-&gt;</operator><name pos:start="337:77" pos:end="337:82">mb_num</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="339:17" pos:end="339:37"><decl pos:start="339:17" pos:end="339:36"><type pos:start="339:17" pos:end="339:32"><name pos:start="339:17" pos:end="339:32">RateControlEntry</name></type> <name pos:start="339:34" pos:end="339:36">rce</name></decl>;</decl_stmt>



                <if_stmt pos:start="343:17" pos:end="353:54"><if pos:start="343:17" pos:end="345:54">if <condition pos:start="343:20" pos:end="343:53">(<expr pos:start="343:21" pos:end="343:52"><name pos:start="343:21" pos:end="343:21">i</name> <operator pos:start="343:23" pos:end="343:23">%</operator> <operator pos:start="343:25" pos:end="343:25">(</operator><operator pos:start="343:26" pos:end="343:26">(</operator><name pos:start="343:27" pos:end="343:37"><name pos:start="343:27" pos:end="343:27">s</name><operator pos:start="343:28" pos:end="343:29">-&gt;</operator><name pos:start="343:30" pos:end="343:37">gop_size</name></name> <operator pos:start="343:39" pos:end="343:39">+</operator> <literal type="number" pos:start="343:41" pos:end="343:41">3</literal><operator pos:start="343:42" pos:end="343:42">)</operator> <operator pos:start="343:44" pos:end="343:44">/</operator> <literal type="number" pos:start="343:46" pos:end="343:46">4</literal><operator pos:start="343:47" pos:end="343:47">)</operator> <operator pos:start="343:49" pos:end="343:50">==</operator> <literal type="number" pos:start="343:52" pos:end="343:52">0</literal></expr>)</condition><block type="pseudo" pos:start="345:21" pos:end="345:54"><block_content pos:start="345:21" pos:end="345:54">

                    <expr_stmt pos:start="345:21" pos:end="345:54"><expr pos:start="345:21" pos:end="345:53"><name pos:start="345:21" pos:end="345:33"><name pos:start="345:21" pos:end="345:23">rce</name><operator pos:start="345:24" pos:end="345:24">.</operator><name pos:start="345:25" pos:end="345:33">pict_type</name></name> <operator pos:start="345:35" pos:end="345:35">=</operator> <name pos:start="345:37" pos:end="345:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="347:17" pos:end="349:54">else if <condition pos:start="347:25" pos:end="347:51">(<expr pos:start="347:26" pos:end="347:50"><name pos:start="347:26" pos:end="347:26">i</name> <operator pos:start="347:28" pos:end="347:28">%</operator> <operator pos:start="347:30" pos:end="347:30">(</operator><name pos:start="347:31" pos:end="347:45"><name pos:start="347:31" pos:end="347:31">s</name><operator pos:start="347:32" pos:end="347:33">-&gt;</operator><name pos:start="347:34" pos:end="347:45">max_b_frames</name></name> <operator pos:start="347:47" pos:end="347:47">+</operator> <literal type="number" pos:start="347:49" pos:end="347:49">1</literal><operator pos:start="347:50" pos:end="347:50">)</operator></expr>)</condition><block type="pseudo" pos:start="349:21" pos:end="349:54"><block_content pos:start="349:21" pos:end="349:54">

                    <expr_stmt pos:start="349:21" pos:end="349:54"><expr pos:start="349:21" pos:end="349:53"><name pos:start="349:21" pos:end="349:33"><name pos:start="349:21" pos:end="349:23">rce</name><operator pos:start="349:24" pos:end="349:24">.</operator><name pos:start="349:25" pos:end="349:33">pict_type</name></name> <operator pos:start="349:35" pos:end="349:35">=</operator> <name pos:start="349:37" pos:end="349:53">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="351:17" pos:end="353:54">else<block type="pseudo" pos:start="353:21" pos:end="353:54"><block_content pos:start="353:21" pos:end="353:54">

                    <expr_stmt pos:start="353:21" pos:end="353:54"><expr pos:start="353:21" pos:end="353:53"><name pos:start="353:21" pos:end="353:33"><name pos:start="353:21" pos:end="353:23">rce</name><operator pos:start="353:24" pos:end="353:24">.</operator><name pos:start="353:25" pos:end="353:33">pict_type</name></name> <operator pos:start="353:35" pos:end="353:35">=</operator> <name pos:start="353:37" pos:end="353:53">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="357:17" pos:end="357:50"><expr pos:start="357:17" pos:end="357:49"><name pos:start="357:17" pos:end="357:33"><name pos:start="357:17" pos:end="357:19">rce</name><operator pos:start="357:20" pos:end="357:20">.</operator><name pos:start="357:21" pos:end="357:33">new_pict_type</name></name> <operator pos:start="357:35" pos:end="357:35">=</operator> <name pos:start="357:37" pos:end="357:49"><name pos:start="357:37" pos:end="357:39">rce</name><operator pos:start="357:40" pos:end="357:40">.</operator><name pos:start="357:41" pos:end="357:49">pict_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:62"><expr pos:start="359:17" pos:end="359:61"><name pos:start="359:17" pos:end="359:33"><name pos:start="359:17" pos:end="359:19">rce</name><operator pos:start="359:20" pos:end="359:20">.</operator><name pos:start="359:21" pos:end="359:33">mc_mb_var_sum</name></name> <operator pos:start="359:35" pos:end="359:35">=</operator> <name pos:start="359:37" pos:end="359:40">bits</name> <operator pos:start="359:42" pos:end="359:42">*</operator> <name pos:start="359:44" pos:end="359:52"><name pos:start="359:44" pos:end="359:44">s</name><operator pos:start="359:45" pos:end="359:46">-&gt;</operator><name pos:start="359:47" pos:end="359:52">mb_num</name></name> <operator pos:start="359:54" pos:end="359:54">/</operator> <literal type="number" pos:start="359:56" pos:end="359:61">100000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:46"><expr pos:start="361:17" pos:end="361:45"><name pos:start="361:17" pos:end="361:30"><name pos:start="361:17" pos:end="361:19">rce</name><operator pos:start="361:20" pos:end="361:20">.</operator><name pos:start="361:21" pos:end="361:30">mb_var_sum</name></name>    <operator pos:start="361:35" pos:end="361:35">=</operator> <name pos:start="361:37" pos:end="361:45"><name pos:start="361:37" pos:end="361:37">s</name><operator pos:start="361:38" pos:end="361:39">-&gt;</operator><name pos:start="361:40" pos:end="361:45">mb_num</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="365:17" pos:end="365:49"><expr pos:start="365:17" pos:end="365:48"><name pos:start="365:17" pos:end="365:26"><name pos:start="365:17" pos:end="365:19">rce</name><operator pos:start="365:20" pos:end="365:20">.</operator><name pos:start="365:21" pos:end="365:26">qscale</name></name>    <operator pos:start="365:31" pos:end="365:31">=</operator> <name pos:start="365:33" pos:end="365:44">FF_QP2LAMBDA</name> <operator pos:start="365:46" pos:end="365:46">*</operator> <literal type="number" pos:start="365:48" pos:end="365:48">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:34"><expr pos:start="367:17" pos:end="367:33"><name pos:start="367:17" pos:end="367:26"><name pos:start="367:17" pos:end="367:19">rce</name><operator pos:start="367:20" pos:end="367:20">.</operator><name pos:start="367:21" pos:end="367:26">f_code</name></name>    <operator pos:start="367:31" pos:end="367:31">=</operator> <literal type="number" pos:start="367:33" pos:end="367:33">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:34"><expr pos:start="369:17" pos:end="369:33"><name pos:start="369:17" pos:end="369:26"><name pos:start="369:17" pos:end="369:19">rce</name><operator pos:start="369:20" pos:end="369:20">.</operator><name pos:start="369:21" pos:end="369:26">b_code</name></name>    <operator pos:start="369:31" pos:end="369:31">=</operator> <literal type="number" pos:start="369:33" pos:end="369:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:34"><expr pos:start="371:17" pos:end="371:33"><name pos:start="371:17" pos:end="371:29"><name pos:start="371:17" pos:end="371:19">rce</name><operator pos:start="371:20" pos:end="371:20">.</operator><name pos:start="371:21" pos:end="371:29">misc_bits</name></name> <operator pos:start="371:31" pos:end="371:31">=</operator> <literal type="number" pos:start="371:33" pos:end="371:33">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="375:17" pos:end="395:17"><if pos:start="375:17" pos:end="385:17">if <condition pos:start="375:20" pos:end="375:54">(<expr pos:start="375:21" pos:end="375:53"><name pos:start="375:21" pos:end="375:32"><name pos:start="375:21" pos:end="375:21">s</name><operator pos:start="375:22" pos:end="375:23">-&gt;</operator><name pos:start="375:24" pos:end="375:32">pict_type</name></name> <operator pos:start="375:34" pos:end="375:35">==</operator> <name pos:start="375:37" pos:end="375:53">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="375:56" pos:end="385:17">{<block_content pos:start="377:21" pos:end="383:39">

                    <expr_stmt pos:start="377:21" pos:end="377:47"><expr pos:start="377:21" pos:end="377:46"><name pos:start="377:21" pos:end="377:31"><name pos:start="377:21" pos:end="377:23">rce</name><operator pos:start="377:24" pos:end="377:24">.</operator><name pos:start="377:25" pos:end="377:31">i_count</name></name>    <operator pos:start="377:36" pos:end="377:36">=</operator> <name pos:start="377:38" pos:end="377:46"><name pos:start="377:38" pos:end="377:38">s</name><operator pos:start="377:39" pos:end="377:40">-&gt;</operator><name pos:start="377:41" pos:end="377:46">mb_num</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="379:21" pos:end="379:42"><expr pos:start="379:21" pos:end="379:41"><name pos:start="379:21" pos:end="379:34"><name pos:start="379:21" pos:end="379:23">rce</name><operator pos:start="379:24" pos:end="379:24">.</operator><name pos:start="379:25" pos:end="379:34">i_tex_bits</name></name> <operator pos:start="379:36" pos:end="379:36">=</operator> <name pos:start="379:38" pos:end="379:41">bits</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="381:21" pos:end="381:39"><expr pos:start="381:21" pos:end="381:38"><name pos:start="381:21" pos:end="381:34"><name pos:start="381:21" pos:end="381:23">rce</name><operator pos:start="381:24" pos:end="381:24">.</operator><name pos:start="381:25" pos:end="381:34">p_tex_bits</name></name> <operator pos:start="381:36" pos:end="381:36">=</operator> <literal type="number" pos:start="381:38" pos:end="381:38">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:39"><expr pos:start="383:21" pos:end="383:38"><name pos:start="383:21" pos:end="383:31"><name pos:start="383:21" pos:end="383:23">rce</name><operator pos:start="383:24" pos:end="383:24">.</operator><name pos:start="383:25" pos:end="383:31">mv_bits</name></name>    <operator pos:start="383:36" pos:end="383:36">=</operator> <literal type="number" pos:start="383:38" pos:end="383:38">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="385:19" pos:end="395:17">else <block pos:start="385:24" pos:end="395:17">{<block_content pos:start="387:21" pos:end="393:48">

                    <expr_stmt pos:start="387:21" pos:end="387:39"><expr pos:start="387:21" pos:end="387:38"><name pos:start="387:21" pos:end="387:31"><name pos:start="387:21" pos:end="387:23">rce</name><operator pos:start="387:24" pos:end="387:24">.</operator><name pos:start="387:25" pos:end="387:31">i_count</name></name>    <operator pos:start="387:36" pos:end="387:36">=</operator> <literal type="number" pos:start="387:38" pos:end="387:38">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="387:41" pos:end="387:71">// FIXME we do know this approx</comment>

                    <expr_stmt pos:start="389:21" pos:end="389:39"><expr pos:start="389:21" pos:end="389:38"><name pos:start="389:21" pos:end="389:34"><name pos:start="389:21" pos:end="389:23">rce</name><operator pos:start="389:24" pos:end="389:24">.</operator><name pos:start="389:25" pos:end="389:34">i_tex_bits</name></name> <operator pos:start="389:36" pos:end="389:36">=</operator> <literal type="number" pos:start="389:38" pos:end="389:38">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="391:21" pos:end="391:48"><expr pos:start="391:21" pos:end="391:47"><name pos:start="391:21" pos:end="391:34"><name pos:start="391:21" pos:end="391:23">rce</name><operator pos:start="391:24" pos:end="391:24">.</operator><name pos:start="391:25" pos:end="391:34">p_tex_bits</name></name> <operator pos:start="391:36" pos:end="391:36">=</operator> <name pos:start="391:38" pos:end="391:41">bits</name> <operator pos:start="391:43" pos:end="391:43">*</operator> <literal type="number" pos:start="391:45" pos:end="391:47">0.9</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="393:21" pos:end="393:48"><expr pos:start="393:21" pos:end="393:47"><name pos:start="393:21" pos:end="393:31"><name pos:start="393:21" pos:end="393:23">rce</name><operator pos:start="393:24" pos:end="393:24">.</operator><name pos:start="393:25" pos:end="393:31">mv_bits</name></name>    <operator pos:start="393:36" pos:end="393:36">=</operator> <name pos:start="393:38" pos:end="393:41">bits</name> <operator pos:start="393:43" pos:end="393:43">*</operator> <literal type="number" pos:start="393:45" pos:end="393:47">0.1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:79"><expr pos:start="397:17" pos:end="397:78"><name pos:start="397:17" pos:end="397:46"><name pos:start="397:17" pos:end="397:19">rcc</name><operator pos:start="397:20" pos:end="397:21">-&gt;</operator><name pos:start="397:22" pos:end="397:31">i_cplx_sum</name><index pos:start="397:32" pos:end="397:46">[<expr pos:start="397:33" pos:end="397:45"><name pos:start="397:33" pos:end="397:45"><name pos:start="397:33" pos:end="397:35">rce</name><operator pos:start="397:36" pos:end="397:36">.</operator><name pos:start="397:37" pos:end="397:45">pict_type</name></name></expr>]</index></name>  <operator pos:start="397:49" pos:end="397:50">+=</operator> <name pos:start="397:52" pos:end="397:65"><name pos:start="397:52" pos:end="397:54">rce</name><operator pos:start="397:55" pos:end="397:55">.</operator><name pos:start="397:56" pos:end="397:65">i_tex_bits</name></name> <operator pos:start="397:67" pos:end="397:67">*</operator> <name pos:start="397:69" pos:end="397:78"><name pos:start="397:69" pos:end="397:71">rce</name><operator pos:start="397:72" pos:end="397:72">.</operator><name pos:start="397:73" pos:end="397:78">qscale</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:79"><expr pos:start="399:17" pos:end="399:78"><name pos:start="399:17" pos:end="399:46"><name pos:start="399:17" pos:end="399:19">rcc</name><operator pos:start="399:20" pos:end="399:21">-&gt;</operator><name pos:start="399:22" pos:end="399:31">p_cplx_sum</name><index pos:start="399:32" pos:end="399:46">[<expr pos:start="399:33" pos:end="399:45"><name pos:start="399:33" pos:end="399:45"><name pos:start="399:33" pos:end="399:35">rce</name><operator pos:start="399:36" pos:end="399:36">.</operator><name pos:start="399:37" pos:end="399:45">pict_type</name></name></expr>]</index></name>  <operator pos:start="399:49" pos:end="399:50">+=</operator> <name pos:start="399:52" pos:end="399:65"><name pos:start="399:52" pos:end="399:54">rce</name><operator pos:start="399:55" pos:end="399:55">.</operator><name pos:start="399:56" pos:end="399:65">p_tex_bits</name></name> <operator pos:start="399:67" pos:end="399:67">*</operator> <name pos:start="399:69" pos:end="399:78"><name pos:start="399:69" pos:end="399:71">rce</name><operator pos:start="399:72" pos:end="399:72">.</operator><name pos:start="399:73" pos:end="399:78">qscale</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:63"><expr pos:start="401:17" pos:end="401:62"><name pos:start="401:17" pos:end="401:47"><name pos:start="401:17" pos:end="401:19">rcc</name><operator pos:start="401:20" pos:end="401:21">-&gt;</operator><name pos:start="401:22" pos:end="401:32">mv_bits_sum</name><index pos:start="401:33" pos:end="401:47">[<expr pos:start="401:34" pos:end="401:46"><name pos:start="401:34" pos:end="401:46"><name pos:start="401:34" pos:end="401:36">rce</name><operator pos:start="401:37" pos:end="401:37">.</operator><name pos:start="401:38" pos:end="401:46">pict_type</name></name></expr>]</index></name> <operator pos:start="401:49" pos:end="401:50">+=</operator> <name pos:start="401:52" pos:end="401:62"><name pos:start="401:52" pos:end="401:54">rce</name><operator pos:start="401:55" pos:end="401:55">.</operator><name pos:start="401:56" pos:end="401:62">mv_bits</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="403:50"><expr pos:start="403:17" pos:end="403:49"><name pos:start="403:17" pos:end="403:47"><name pos:start="403:17" pos:end="403:19">rcc</name><operator pos:start="403:20" pos:end="403:21">-&gt;</operator><name pos:start="403:22" pos:end="403:32">frame_count</name><index pos:start="403:33" pos:end="403:47">[<expr pos:start="403:34" pos:end="403:46"><name pos:start="403:34" pos:end="403:46"><name pos:start="403:34" pos:end="403:36">rce</name><operator pos:start="403:37" pos:end="403:37">.</operator><name pos:start="403:38" pos:end="403:46">pict_type</name></name></expr>]</index></name><operator pos:start="403:48" pos:end="403:49">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="407:17" pos:end="407:93"><expr pos:start="407:17" pos:end="407:92"><call pos:start="407:17" pos:end="407:92"><name pos:start="407:17" pos:end="407:26">get_qscale</name><argument_list pos:start="407:27" pos:end="407:92">(<argument pos:start="407:28" pos:end="407:28"><expr pos:start="407:28" pos:end="407:28"><name pos:start="407:28" pos:end="407:28">s</name></expr></argument>, <argument pos:start="407:31" pos:end="407:34"><expr pos:start="407:31" pos:end="407:34"><operator pos:start="407:31" pos:end="407:31">&amp;</operator><name pos:start="407:32" pos:end="407:34">rce</name></expr></argument>, <argument pos:start="407:37" pos:end="407:88"><expr pos:start="407:37" pos:end="407:88"><name pos:start="407:37" pos:end="407:58"><name pos:start="407:37" pos:end="407:39">rcc</name><operator pos:start="407:40" pos:end="407:41">-&gt;</operator><name pos:start="407:42" pos:end="407:58">pass1_wanted_bits</name></name> <operator pos:start="407:60" pos:end="407:60">/</operator> <name pos:start="407:62" pos:end="407:88"><name pos:start="407:62" pos:end="407:64">rcc</name><operator pos:start="407:65" pos:end="407:66">-&gt;</operator><name pos:start="407:67" pos:end="407:88">pass1_rc_eq_output_sum</name></name></expr></argument>, <argument pos:start="407:91" pos:end="407:91"><expr pos:start="407:91" pos:end="407:91"><name pos:start="407:91" pos:end="407:91">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="line" pos:start="411:17" pos:end="411:61">// FIXME misbehaves a little for variable fps</comment>

                <expr_stmt pos:start="413:17" pos:end="413:74"><expr pos:start="413:17" pos:end="413:73"><name pos:start="413:17" pos:end="413:38"><name pos:start="413:17" pos:end="413:19">rcc</name><operator pos:start="413:20" pos:end="413:21">-&gt;</operator><name pos:start="413:22" pos:end="413:38">pass1_wanted_bits</name></name> <operator pos:start="413:40" pos:end="413:41">+=</operator> <name pos:start="413:43" pos:end="413:53"><name pos:start="413:43" pos:end="413:43">s</name><operator pos:start="413:44" pos:end="413:45">-&gt;</operator><name pos:start="413:46" pos:end="413:53">bit_rate</name></name> <operator pos:start="413:55" pos:end="413:55">/</operator> <call pos:start="413:57" pos:end="413:73"><name pos:start="413:57" pos:end="413:63">get_fps</name><argument_list pos:start="413:64" pos:end="413:73">(<argument pos:start="413:65" pos:end="413:72"><expr pos:start="413:65" pos:end="413:72"><name pos:start="413:65" pos:end="413:72"><name pos:start="413:65" pos:end="413:65">s</name><operator pos:start="413:66" pos:end="413:67">-&gt;</operator><name pos:start="413:68" pos:end="413:72">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="423:5" pos:end="423:13">return <expr pos:start="423:12" pos:end="423:12"><literal type="number" pos:start="423:12" pos:end="423:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
