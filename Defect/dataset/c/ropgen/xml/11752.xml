<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11752.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">compute_pkt_fields2</name><parameter_list pos:start="1:32" pos:end="1:60">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:40">AVStream</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">st</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">AVPacket</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">pkt</name></decl></parameter>)</parameter_list><block pos:start="1:61" pos:end="133:1">{<block_content pos:start="3:5" pos:end="131:5">

    <decl_stmt pos:start="3:5" pos:end="3:73"><decl pos:start="3:5" pos:end="3:72"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:16">b_frames</name> <init pos:start="3:18" pos:end="3:72">= <expr pos:start="3:20" pos:end="3:72"><call pos:start="3:20" pos:end="3:72"><name pos:start="3:20" pos:end="3:24">FFMAX</name><argument_list pos:start="3:25" pos:end="3:72">(<argument pos:start="3:26" pos:end="3:47"><expr pos:start="3:26" pos:end="3:47"><name pos:start="3:26" pos:end="3:47"><name pos:start="3:26" pos:end="3:27">st</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:34">codec</name><operator pos:start="3:35" pos:end="3:35">.</operator><name pos:start="3:36" pos:end="3:47">has_b_frames</name></name></expr></argument>, <argument pos:start="3:50" pos:end="3:71"><expr pos:start="3:50" pos:end="3:71"><name pos:start="3:50" pos:end="3:71"><name pos:start="3:50" pos:end="3:51">st</name><operator pos:start="3:52" pos:end="3:53">-&gt;</operator><name pos:start="3:54" pos:end="3:58">codec</name><operator pos:start="3:59" pos:end="3:59">.</operator><name pos:start="3:60" pos:end="3:71">max_b_frames</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">num</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">den</name></decl>, <decl pos:start="5:19" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:28">frame_size</name></decl>;</decl_stmt>



<comment type="line" pos:start="9:1" pos:end="9:177">//    av_log(NULL, AV_LOG_DEBUG, "av_write_frame: pts:%lld dts:%lld cur_dts:%lld b:%d size:%d st:%d\n", pkt-&gt;pts, pkt-&gt;dts, st-&gt;cur_dts, b_frames, pkt-&gt;size, pkt-&gt;stream_index);</comment>

    

<comment type="block" pos:start="13:1" pos:end="15:20">/*    if(pkt-&gt;pts == AV_NOPTS_VALUE &amp;&amp; pkt-&gt;dts == AV_NOPTS_VALUE)

        return -1;*/</comment>

            

    <if_stmt pos:start="19:5" pos:end="21:102"><if pos:start="19:5" pos:end="21:102">if<condition pos:start="19:7" pos:end="19:34">(<expr pos:start="19:8" pos:end="19:33"><name pos:start="19:8" pos:end="19:15"><name pos:start="19:8" pos:end="19:10">pkt</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:15">pts</name></name> <operator pos:start="19:17" pos:end="19:18">!=</operator> <name pos:start="19:20" pos:end="19:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:102"><block_content pos:start="21:9" pos:end="21:102">

        <expr_stmt pos:start="21:9" pos:end="21:102"><expr pos:start="21:9" pos:end="21:101"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">pkt</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">pts</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:101"><name pos:start="21:20" pos:end="21:29">av_rescale</name><argument_list pos:start="21:30" pos:end="21:101">(<argument pos:start="21:31" pos:end="21:38"><expr pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:33">pkt</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:38">pts</name></name></expr></argument>, <argument pos:start="21:41" pos:end="21:57"><expr pos:start="21:41" pos:end="21:57"><name pos:start="21:41" pos:end="21:57"><name pos:start="21:41" pos:end="21:42">st</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:53">time_base</name><operator pos:start="21:54" pos:end="21:54">.</operator><name pos:start="21:55" pos:end="21:57">den</name></name></expr></argument>, <argument pos:start="21:60" pos:end="21:100"><expr pos:start="21:60" pos:end="21:100"><name pos:start="21:60" pos:end="21:71">AV_TIME_BASE</name> <operator pos:start="21:73" pos:end="21:73">*</operator> <operator pos:start="21:75" pos:end="21:75">(</operator><name pos:start="21:76" pos:end="21:82">int64_t</name><operator pos:start="21:83" pos:end="21:83">)</operator><name pos:start="21:84" pos:end="21:100"><name pos:start="21:84" pos:end="21:85">st</name><operator pos:start="21:86" pos:end="21:87">-&gt;</operator><name pos:start="21:88" pos:end="21:96">time_base</name><operator pos:start="21:97" pos:end="21:97">.</operator><name pos:start="21:98" pos:end="21:100">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:102"><if pos:start="23:5" pos:end="25:102">if<condition pos:start="23:7" pos:end="23:34">(<expr pos:start="23:8" pos:end="23:33"><name pos:start="23:8" pos:end="23:15"><name pos:start="23:8" pos:end="23:10">pkt</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">dts</name></name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <name pos:start="23:20" pos:end="23:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:102"><block_content pos:start="25:9" pos:end="25:102">

        <expr_stmt pos:start="25:9" pos:end="25:102"><expr pos:start="25:9" pos:end="25:101"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">pkt</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:16">dts</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:101"><name pos:start="25:20" pos:end="25:29">av_rescale</name><argument_list pos:start="25:30" pos:end="25:101">(<argument pos:start="25:31" pos:end="25:38"><expr pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:33">pkt</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:38">dts</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:57"><expr pos:start="25:41" pos:end="25:57"><name pos:start="25:41" pos:end="25:57"><name pos:start="25:41" pos:end="25:42">st</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:53">time_base</name><operator pos:start="25:54" pos:end="25:54">.</operator><name pos:start="25:55" pos:end="25:57">den</name></name></expr></argument>, <argument pos:start="25:60" pos:end="25:100"><expr pos:start="25:60" pos:end="25:100"><name pos:start="25:60" pos:end="25:71">AV_TIME_BASE</name> <operator pos:start="25:73" pos:end="25:73">*</operator> <operator pos:start="25:75" pos:end="25:75">(</operator><name pos:start="25:76" pos:end="25:82">int64_t</name><operator pos:start="25:83" pos:end="25:83">)</operator><name pos:start="25:84" pos:end="25:100"><name pos:start="25:84" pos:end="25:85">st</name><operator pos:start="25:86" pos:end="25:87">-&gt;</operator><name pos:start="25:88" pos:end="25:96">time_base</name><operator pos:start="25:97" pos:end="25:97">.</operator><name pos:start="25:98" pos:end="25:100">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:24">/* duration field */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:108"><expr pos:start="31:5" pos:end="31:107"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:7">pkt</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:17">duration</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:107"><name pos:start="31:21" pos:end="31:30">av_rescale</name><argument_list pos:start="31:31" pos:end="31:107">(<argument pos:start="31:32" pos:end="31:44"><expr pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:34">pkt</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:44">duration</name></name></expr></argument>, <argument pos:start="31:47" pos:end="31:63"><expr pos:start="31:47" pos:end="31:63"><name pos:start="31:47" pos:end="31:63"><name pos:start="31:47" pos:end="31:48">st</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:59">time_base</name><operator pos:start="31:60" pos:end="31:60">.</operator><name pos:start="31:61" pos:end="31:63">den</name></name></expr></argument>, <argument pos:start="31:66" pos:end="31:106"><expr pos:start="31:66" pos:end="31:106"><name pos:start="31:66" pos:end="31:77">AV_TIME_BASE</name> <operator pos:start="31:79" pos:end="31:79">*</operator> <operator pos:start="31:81" pos:end="31:81">(</operator><name pos:start="31:82" pos:end="31:88">int64_t</name><operator pos:start="31:89" pos:end="31:89">)</operator><name pos:start="31:90" pos:end="31:106"><name pos:start="31:90" pos:end="31:91">st</name><operator pos:start="31:92" pos:end="31:93">-&gt;</operator><name pos:start="31:94" pos:end="31:102">time_base</name><operator pos:start="31:103" pos:end="31:103">.</operator><name pos:start="31:104" pos:end="31:106">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:11">pkt</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:21">duration</name></name> <operator pos:start="33:23" pos:end="33:24">==</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>)</condition> <block pos:start="33:29" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <expr_stmt pos:start="35:9" pos:end="35:58"><expr pos:start="35:9" pos:end="35:57"><call pos:start="35:9" pos:end="35:57"><name pos:start="35:9" pos:end="35:30">compute_frame_duration</name><argument_list pos:start="35:31" pos:end="35:57">(<argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><operator pos:start="35:32" pos:end="35:32">&amp;</operator><name pos:start="35:33" pos:end="35:35">num</name></expr></argument>, <argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:41">den</name></expr></argument>, <argument pos:start="35:44" pos:end="35:45"><expr pos:start="35:44" pos:end="35:45"><name pos:start="35:44" pos:end="35:45">st</name></expr></argument>, <argument pos:start="35:48" pos:end="35:51"><expr pos:start="35:48" pos:end="35:51"><name pos:start="35:48" pos:end="35:51">NULL</name></expr></argument>, <argument pos:start="35:54" pos:end="35:56"><expr pos:start="35:54" pos:end="35:56"><name pos:start="35:54" pos:end="35:56">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">den</name> <operator pos:start="37:17" pos:end="37:18">&amp;&amp;</operator> <name pos:start="37:20" pos:end="37:22">num</name></expr>)</condition> <block pos:start="37:25" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:110">

            <expr_stmt pos:start="39:13" pos:end="39:110"><expr pos:start="39:13" pos:end="39:109"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:15">pkt</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:25">duration</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <call pos:start="39:29" pos:end="39:109"><name pos:start="39:29" pos:end="39:38">av_rescale</name><argument_list pos:start="39:39" pos:end="39:109">(<argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">1</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:74"><expr pos:start="39:43" pos:end="39:74"><name pos:start="39:43" pos:end="39:45">num</name> <operator pos:start="39:47" pos:end="39:47">*</operator> <operator pos:start="39:49" pos:end="39:49">(</operator><name pos:start="39:50" pos:end="39:56">int64_t</name><operator pos:start="39:57" pos:end="39:57">)</operator><name pos:start="39:58" pos:end="39:74"><name pos:start="39:58" pos:end="39:59">st</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:70">time_base</name><operator pos:start="39:71" pos:end="39:71">.</operator><name pos:start="39:72" pos:end="39:74">den</name></name></expr></argument>, <argument pos:start="39:77" pos:end="39:108"><expr pos:start="39:77" pos:end="39:108"><name pos:start="39:77" pos:end="39:79">den</name> <operator pos:start="39:81" pos:end="39:81">*</operator> <operator pos:start="39:83" pos:end="39:83">(</operator><name pos:start="39:84" pos:end="39:90">int64_t</name><operator pos:start="39:91" pos:end="39:91">)</operator><name pos:start="39:92" pos:end="39:108"><name pos:start="39:92" pos:end="39:93">st</name><operator pos:start="39:94" pos:end="39:95">-&gt;</operator><name pos:start="39:96" pos:end="39:104">time_base</name><operator pos:start="39:105" pos:end="39:105">.</operator><name pos:start="39:106" pos:end="39:108">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="47:5" pos:end="47:70">//XXX/FIXME this is a temporary hack until all encoders output pts</comment>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if<condition pos:start="49:7" pos:end="49:96">(<expr pos:start="49:8" pos:end="49:95"><operator pos:start="49:8" pos:end="49:8">(</operator><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:11">pkt</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">pts</name></name> <operator pos:start="49:18" pos:end="49:19">==</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal> <operator pos:start="49:23" pos:end="49:24">||</operator> <name pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:28">pkt</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:33">pts</name></name> <operator pos:start="49:35" pos:end="49:36">==</operator> <name pos:start="49:38" pos:end="49:51">AV_NOPTS_VALUE</name><operator pos:start="49:52" pos:end="49:52">)</operator> <operator pos:start="49:54" pos:end="49:55">&amp;&amp;</operator> <name pos:start="49:57" pos:end="49:64"><name pos:start="49:57" pos:end="49:59">pkt</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:64">dts</name></name> <operator pos:start="49:66" pos:end="49:67">==</operator> <name pos:start="49:69" pos:end="49:82">AV_NOPTS_VALUE</name> <operator pos:start="49:84" pos:end="49:85">&amp;&amp;</operator> <operator pos:start="49:87" pos:end="49:87">!</operator><name pos:start="49:88" pos:end="49:95">b_frames</name></expr>)</condition><block pos:start="49:97" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:30">

        <expr_stmt pos:start="51:9" pos:end="55:30"><expr pos:start="51:9" pos:end="55:29"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">pkt</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:16">dts</name></name><operator pos:start="51:17" pos:end="51:17">=</operator>

<comment type="line" pos:start="53:1" pos:end="53:32">//        pkt-&gt;pts= st-&gt;cur_dts;</comment>

        <name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">pts</name></name><operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:29"><name pos:start="55:19" pos:end="55:20">st</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:25">pts</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:29">val</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="61:5" pos:end="61:32">//calculate dts from pts    </comment>

    <if_stmt pos:start="63:5" pos:end="87:5"><if pos:start="63:5" pos:end="87:5">if<condition pos:start="63:7" pos:end="63:64">(<expr pos:start="63:8" pos:end="63:63"><name pos:start="63:8" pos:end="63:15"><name pos:start="63:8" pos:end="63:10">pkt</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:15">pts</name></name> <operator pos:start="63:17" pos:end="63:18">!=</operator> <name pos:start="63:20" pos:end="63:33">AV_NOPTS_VALUE</name> <operator pos:start="63:35" pos:end="63:36">&amp;&amp;</operator> <name pos:start="63:38" pos:end="63:45"><name pos:start="63:38" pos:end="63:40">pkt</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:45">dts</name></name> <operator pos:start="63:47" pos:end="63:48">==</operator> <name pos:start="63:50" pos:end="63:63">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="63:65" pos:end="87:5">{<block_content pos:start="65:9" pos:end="85:31">

        <if_stmt pos:start="65:9" pos:end="85:31"><if pos:start="65:9" pos:end="83:9">if<condition pos:start="65:11" pos:end="65:20">(<expr pos:start="65:12" pos:end="65:19"><name pos:start="65:12" pos:end="65:19">b_frames</name></expr>)</condition><block pos:start="65:21" pos:end="83:9">{<block_content pos:start="67:13" pos:end="81:35">

            <if_stmt pos:start="67:13" pos:end="71:13"><if pos:start="67:13" pos:end="71:13">if<condition pos:start="67:15" pos:end="67:49">(<expr pos:start="67:16" pos:end="67:48"><name pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:17">st</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:30">last_IP_pts</name></name> <operator pos:start="67:32" pos:end="67:33">==</operator> <name pos:start="67:35" pos:end="67:48">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="67:50" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:48">

                <expr_stmt pos:start="69:17" pos:end="69:48"><expr pos:start="69:17" pos:end="69:47"><name pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:18">st</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:31">last_IP_pts</name></name><operator pos:start="69:32" pos:end="69:32">=</operator> <operator pos:start="69:34" pos:end="69:34">-</operator><name pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:37">pkt</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:47">duration</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="73:13" pos:end="81:35"><if pos:start="73:13" pos:end="79:13">if<condition pos:start="73:15" pos:end="73:42">(<expr pos:start="73:16" pos:end="73:41"><name pos:start="73:16" pos:end="73:30"><name pos:start="73:16" pos:end="73:17">st</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:30">last_IP_pts</name></name> <operator pos:start="73:32" pos:end="73:32">&lt;</operator> <name pos:start="73:34" pos:end="73:41"><name pos:start="73:34" pos:end="73:36">pkt</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:41">pts</name></name></expr>)</condition><block pos:start="73:43" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:42">

                <expr_stmt pos:start="75:17" pos:end="75:42"><expr pos:start="75:17" pos:end="75:41"><name pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:19">pkt</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:24">dts</name></name><operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:41"><name pos:start="75:27" pos:end="75:28">st</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:41">last_IP_pts</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:42"><expr pos:start="77:17" pos:end="77:41"><name pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:18">st</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:31">last_IP_pts</name></name><operator pos:start="77:32" pos:end="77:32">=</operator> <name pos:start="77:34" pos:end="77:41"><name pos:start="77:34" pos:end="77:36">pkt</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:41">pts</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="79:14" pos:end="81:35">else<block type="pseudo" pos:start="81:17" pos:end="81:35"><block_content pos:start="81:17" pos:end="81:35">

                <expr_stmt pos:start="81:17" pos:end="81:35"><expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:19">pkt</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:24">dts</name></name><operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:34"><name pos:start="81:27" pos:end="81:29">pkt</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:34">pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if><else pos:start="83:10" pos:end="85:31">else<block type="pseudo" pos:start="85:13" pos:end="85:31"><block_content pos:start="85:13" pos:end="85:31">

            <expr_stmt pos:start="85:13" pos:end="85:31"><expr pos:start="85:13" pos:end="85:30"><name pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">pkt</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:20">dts</name></name><operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:30"><name pos:start="85:23" pos:end="85:25">pkt</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:30">pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    

<comment type="line" pos:start="91:1" pos:end="91:94">//    av_log(NULL, AV_LOG_DEBUG, "av_write_frame: pts2:%lld dts2:%lld\n", pkt-&gt;pts, pkt-&gt;dts);</comment>

    <expr_stmt pos:start="93:5" pos:end="93:26"><expr pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:6">st</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:15">cur_dts</name></name><operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:25"><name pos:start="93:18" pos:end="93:20">pkt</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:25">dts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:26"><expr pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:6">st</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:11">pts</name><operator pos:start="95:12" pos:end="95:12">.</operator><name pos:start="95:13" pos:end="95:15">val</name></name><operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:25"><name pos:start="95:18" pos:end="95:20">pkt</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:25">dts</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:20">/* update pts */</comment>

    <switch pos:start="101:5" pos:end="131:5">switch <condition pos:start="101:12" pos:end="101:33">(<expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:14">st</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:21">codec</name><operator pos:start="101:22" pos:end="101:22">.</operator><name pos:start="101:23" pos:end="101:32">codec_type</name></name></expr>)</condition> <block pos:start="101:35" pos:end="131:5">{<block_content pos:start="103:5" pos:end="129:14">

    <case pos:start="103:5" pos:end="103:26">case <expr pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:25">CODEC_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:65"><expr pos:start="105:9" pos:end="105:64"><name pos:start="105:9" pos:end="105:18">frame_size</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <call pos:start="105:22" pos:end="105:64"><name pos:start="105:22" pos:end="105:41">get_audio_frame_size</name><argument_list pos:start="105:42" pos:end="105:64">(<argument pos:start="105:43" pos:end="105:52"><expr pos:start="105:43" pos:end="105:52"><operator pos:start="105:43" pos:end="105:43">&amp;</operator><name pos:start="105:44" pos:end="105:52"><name pos:start="105:44" pos:end="105:45">st</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:52">codec</name></name></expr></argument>, <argument pos:start="105:55" pos:end="105:63"><expr pos:start="105:55" pos:end="105:63"><name pos:start="105:55" pos:end="105:63"><name pos:start="105:55" pos:end="105:57">pkt</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:63">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="109:9" pos:end="111:83">/* HACK/FIXME, we skip the initial 0-size packets as they are most likely equal to the encoder delay,

           but it would be better if we had the real timestamps from the encoder */</comment>

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:89">(<expr pos:start="113:13" pos:end="113:88"><name pos:start="113:13" pos:end="113:22">frame_size</name> <operator pos:start="113:24" pos:end="113:25">&gt;=</operator> <literal type="number" pos:start="113:27" pos:end="113:27">0</literal> <operator pos:start="113:29" pos:end="113:30">&amp;&amp;</operator> <operator pos:start="113:32" pos:end="113:32">(</operator><name pos:start="113:33" pos:end="113:41"><name pos:start="113:33" pos:end="113:35">pkt</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:41">size</name></name> <operator pos:start="113:43" pos:end="113:44">||</operator> <name pos:start="113:46" pos:end="113:56"><name pos:start="113:46" pos:end="113:47">st</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:52">pts</name><operator pos:start="113:53" pos:end="113:53">.</operator><name pos:start="113:54" pos:end="113:56">num</name></name><operator pos:start="113:57" pos:end="113:58">!=</operator><name pos:start="113:59" pos:end="113:69"><name pos:start="113:59" pos:end="113:60">st</name><operator pos:start="113:61" pos:end="113:62">-&gt;</operator><name pos:start="113:63" pos:end="113:65">pts</name><operator pos:start="113:66" pos:end="113:66">.</operator><name pos:start="113:67" pos:end="113:69">den</name></name><operator pos:start="113:70" pos:end="113:71">&gt;&gt;</operator><literal type="number" pos:start="113:72" pos:end="113:72">1</literal> <operator pos:start="113:74" pos:end="113:75">||</operator> <name pos:start="113:77" pos:end="113:87"><name pos:start="113:77" pos:end="113:78">st</name><operator pos:start="113:79" pos:end="113:80">-&gt;</operator><name pos:start="113:81" pos:end="113:83">pts</name><operator pos:start="113:84" pos:end="113:84">.</operator><name pos:start="113:85" pos:end="113:87">val</name></name><operator pos:start="113:88" pos:end="113:88">)</operator></expr>)</condition> <block pos:start="113:91" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:75">

            <expr_stmt pos:start="115:13" pos:end="115:75"><expr pos:start="115:13" pos:end="115:74"><call pos:start="115:13" pos:end="115:74"><name pos:start="115:13" pos:end="115:23">av_frac_add</name><argument_list pos:start="115:24" pos:end="115:74">(<argument pos:start="115:25" pos:end="115:32"><expr pos:start="115:25" pos:end="115:32"><operator pos:start="115:25" pos:end="115:25">&amp;</operator><name pos:start="115:26" pos:end="115:32"><name pos:start="115:26" pos:end="115:27">st</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:32">pts</name></name></expr></argument>, <argument pos:start="115:35" pos:end="115:73"><expr pos:start="115:35" pos:end="115:73"><operator pos:start="115:35" pos:end="115:35">(</operator><name pos:start="115:36" pos:end="115:42">int64_t</name><operator pos:start="115:43" pos:end="115:43">)</operator><name pos:start="115:44" pos:end="115:60"><name pos:start="115:44" pos:end="115:45">st</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:56">time_base</name><operator pos:start="115:57" pos:end="115:57">.</operator><name pos:start="115:58" pos:end="115:60">den</name></name> <operator pos:start="115:62" pos:end="115:62">*</operator> <name pos:start="115:64" pos:end="115:73">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:26">case <expr pos:start="121:10" pos:end="121:25"><name pos:start="121:10" pos:end="121:25">CODEC_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:86"><expr pos:start="123:9" pos:end="123:85"><call pos:start="123:9" pos:end="123:85"><name pos:start="123:9" pos:end="123:19">av_frac_add</name><argument_list pos:start="123:20" pos:end="123:85">(<argument pos:start="123:21" pos:end="123:28"><expr pos:start="123:21" pos:end="123:28"><operator pos:start="123:21" pos:end="123:21">&amp;</operator><name pos:start="123:22" pos:end="123:28"><name pos:start="123:22" pos:end="123:23">st</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:28">pts</name></name></expr></argument>, <argument pos:start="123:31" pos:end="123:84"><expr pos:start="123:31" pos:end="123:84"><operator pos:start="123:31" pos:end="123:31">(</operator><name pos:start="123:32" pos:end="123:38">int64_t</name><operator pos:start="123:39" pos:end="123:39">)</operator><name pos:start="123:40" pos:end="123:56"><name pos:start="123:40" pos:end="123:41">st</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:52">time_base</name><operator pos:start="123:53" pos:end="123:53">.</operator><name pos:start="123:54" pos:end="123:56">den</name></name> <operator pos:start="123:58" pos:end="123:58">*</operator> <name pos:start="123:60" pos:end="123:84"><name pos:start="123:60" pos:end="123:61">st</name><operator pos:start="123:62" pos:end="123:63">-&gt;</operator><name pos:start="123:64" pos:end="123:68">codec</name><operator pos:start="123:69" pos:end="123:69">.</operator><name pos:start="123:70" pos:end="123:84">frame_rate_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    <default pos:start="127:5" pos:end="127:12">default:</default>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
