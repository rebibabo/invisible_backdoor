<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20747.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:72"><name pos:start="1:1" pos:end="1:9">get_field</name> <argument_list pos:start="1:11" pos:end="3:72">(<argument pos:start="1:12" pos:end="1:36">const unsigned char *data</argument>, <argument pos:start="1:39" pos:end="1:71">enum floatformat_byteorders order</argument>,

           <argument pos:start="3:12" pos:end="3:33">unsigned int total_len</argument>, <argument pos:start="3:36" pos:end="3:53">unsigned int start</argument>, <argument pos:start="3:56" pos:end="3:71">unsigned int len</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:3" pos:end="75:16">

  <decl_stmt pos:start="7:3" pos:end="7:23"><decl pos:start="7:3" pos:end="7:22"><type pos:start="7:3" pos:end="7:15"><name pos:start="7:3" pos:end="7:10">unsigned</name> <name pos:start="7:12" pos:end="7:15">long</name></type> <name pos:start="7:17" pos:end="7:22">result</name></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:24"><decl pos:start="9:3" pos:end="9:23"><type pos:start="9:3" pos:end="9:14"><name pos:start="9:3" pos:end="9:10">unsigned</name> <name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:23">cur_byte</name></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:19"><decl pos:start="11:3" pos:end="11:18"><type pos:start="11:3" pos:end="11:5"><name pos:start="11:3" pos:end="11:5">int</name></type> <name pos:start="11:7" pos:end="11:18">cur_bitshift</name></decl>;</decl_stmt>



  <comment type="block" pos:start="15:3" pos:end="15:58">/* Start at the least significant part of the field.  */</comment>

  <expr_stmt pos:start="17:3" pos:end="17:50"><expr pos:start="17:3" pos:end="17:49"><name pos:start="17:3" pos:end="17:10">cur_byte</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">(</operator><name pos:start="17:15" pos:end="17:19">start</name> <operator pos:start="17:21" pos:end="17:21">+</operator> <name pos:start="17:23" pos:end="17:25">len</name><operator pos:start="17:26" pos:end="17:26">)</operator> <operator pos:start="17:28" pos:end="17:28">/</operator> <name pos:start="17:30" pos:end="17:49">FLOATFORMAT_CHAR_BIT</name></expr>;</expr_stmt>

  <if_stmt pos:start="19:3" pos:end="21:65"><if pos:start="19:3" pos:end="21:65">if <condition pos:start="19:6" pos:end="19:34">(<expr pos:start="19:7" pos:end="19:33"><name pos:start="19:7" pos:end="19:11">order</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <name pos:start="19:16" pos:end="19:33">floatformat_little</name></expr>)</condition><block type="pseudo" pos:start="21:5" pos:end="21:65"><block_content pos:start="21:5" pos:end="21:65">

    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:12">cur_byte</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:25">total_len</name> <operator pos:start="21:27" pos:end="21:27">/</operator> <name pos:start="21:29" pos:end="21:48">FLOATFORMAT_CHAR_BIT</name><operator pos:start="21:49" pos:end="21:49">)</operator> <operator pos:start="21:51" pos:end="21:51">-</operator> <name pos:start="21:53" pos:end="21:60">cur_byte</name> <operator pos:start="21:62" pos:end="21:62">-</operator> <literal type="number" pos:start="21:64" pos:end="21:64">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

  <expr_stmt pos:start="23:3" pos:end="25:66"><expr pos:start="23:3" pos:end="25:65"><name pos:start="23:3" pos:end="23:14">cur_bitshift</name> <operator pos:start="23:16" pos:end="23:16">=</operator>

    <operator pos:start="25:5" pos:end="25:5">(</operator><operator pos:start="25:6" pos:end="25:6">(</operator><name pos:start="25:7" pos:end="25:11">start</name> <operator pos:start="25:13" pos:end="25:13">+</operator> <name pos:start="25:15" pos:end="25:17">len</name><operator pos:start="25:18" pos:end="25:18">)</operator> <operator pos:start="25:20" pos:end="25:20">%</operator> <name pos:start="25:22" pos:end="25:41">FLOATFORMAT_CHAR_BIT</name><operator pos:start="25:42" pos:end="25:42">)</operator> <operator pos:start="25:44" pos:end="25:44">-</operator> <name pos:start="25:46" pos:end="25:65">FLOATFORMAT_CHAR_BIT</name></expr>;</expr_stmt>

  <expr_stmt pos:start="27:3" pos:end="27:49"><expr pos:start="27:3" pos:end="27:48"><name pos:start="27:3" pos:end="27:8">result</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">*</operator><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:17">data</name> <operator pos:start="27:19" pos:end="27:19">+</operator> <name pos:start="27:21" pos:end="27:28">cur_byte</name><operator pos:start="27:29" pos:end="27:29">)</operator> <operator pos:start="27:31" pos:end="27:32">&gt;&gt;</operator> <operator pos:start="27:34" pos:end="27:34">(</operator><operator pos:start="27:35" pos:end="27:35">-</operator><name pos:start="27:36" pos:end="27:47">cur_bitshift</name><operator pos:start="27:48" pos:end="27:48">)</operator></expr>;</expr_stmt>

  <expr_stmt pos:start="29:3" pos:end="29:39"><expr pos:start="29:3" pos:end="29:38"><name pos:start="29:3" pos:end="29:14">cur_bitshift</name> <operator pos:start="29:16" pos:end="29:17">+=</operator> <name pos:start="29:19" pos:end="29:38">FLOATFORMAT_CHAR_BIT</name></expr>;</expr_stmt>

  <if_stmt pos:start="31:3" pos:end="37:15"><if pos:start="31:3" pos:end="33:15">if <condition pos:start="31:6" pos:end="31:34">(<expr pos:start="31:7" pos:end="31:33"><name pos:start="31:7" pos:end="31:11">order</name> <operator pos:start="31:13" pos:end="31:14">==</operator> <name pos:start="31:16" pos:end="31:33">floatformat_little</name></expr>)</condition><block type="pseudo" pos:start="33:5" pos:end="33:15"><block_content pos:start="33:5" pos:end="33:15">

    <expr_stmt pos:start="33:5" pos:end="33:15"><expr pos:start="33:5" pos:end="33:14"><operator pos:start="33:5" pos:end="33:6">++</operator><name pos:start="33:7" pos:end="33:14">cur_byte</name></expr>;</expr_stmt></block_content></block></if>

  <else pos:start="35:3" pos:end="37:15">else<block type="pseudo" pos:start="37:5" pos:end="37:15"><block_content pos:start="37:5" pos:end="37:15">

    <expr_stmt pos:start="37:5" pos:end="37:15"><expr pos:start="37:5" pos:end="37:14"><operator pos:start="37:5" pos:end="37:6">--</operator><name pos:start="37:7" pos:end="37:14">cur_byte</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



  <comment type="block" pos:start="41:3" pos:end="41:61">/* Move towards the most significant part of the field.  */</comment>

  <while pos:start="43:3" pos:end="73:5">while <condition pos:start="43:9" pos:end="43:43">(<expr pos:start="43:10" pos:end="43:42"><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:18">unsigned</name> <name pos:start="43:20" pos:end="43:22">int</name><operator pos:start="43:23" pos:end="43:23">)</operator> <name pos:start="43:25" pos:end="43:36">cur_bitshift</name> <operator pos:start="43:38" pos:end="43:38">&lt;</operator> <name pos:start="43:40" pos:end="43:42">len</name></expr>)</condition>

    <block pos:start="45:5" pos:end="73:5">{<block_content pos:start="47:7" pos:end="71:19">

      <if_stmt pos:start="47:7" pos:end="61:53"><if pos:start="47:7" pos:end="57:28">if <condition pos:start="47:10" pos:end="47:52">(<expr pos:start="47:11" pos:end="47:51"><name pos:start="47:11" pos:end="47:13">len</name> <operator pos:start="47:15" pos:end="47:15">-</operator> <name pos:start="47:17" pos:end="47:28">cur_bitshift</name> <operator pos:start="47:30" pos:end="47:30">&lt;</operator> <name pos:start="47:32" pos:end="47:51">FLOATFORMAT_CHAR_BIT</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="57:28"><block_content pos:start="53:9" pos:end="57:28">

	<comment type="block" pos:start="49:9" pos:end="51:26">/* This is the last byte; zero out the bits which are not part of

	   this field.  */</comment>

	<expr_stmt pos:start="53:9" pos:end="57:28"><expr pos:start="53:9" pos:end="57:27"><name pos:start="53:9" pos:end="53:14">result</name> <operator pos:start="53:16" pos:end="53:17">|=</operator>

	  <operator pos:start="55:11" pos:end="55:11">(</operator><operator pos:start="55:12" pos:end="55:12">*</operator><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:17">data</name> <operator pos:start="55:19" pos:end="55:19">+</operator> <name pos:start="55:21" pos:end="55:28">cur_byte</name><operator pos:start="55:29" pos:end="55:29">)</operator> <operator pos:start="55:31" pos:end="55:31">&amp;</operator> <operator pos:start="55:33" pos:end="55:33">(</operator><operator pos:start="55:34" pos:end="55:34">(</operator><literal type="number" pos:start="55:35" pos:end="55:35">1</literal> <operator pos:start="55:37" pos:end="55:38">&lt;&lt;</operator> <operator pos:start="55:40" pos:end="55:40">(</operator><name pos:start="55:41" pos:end="55:43">len</name> <operator pos:start="55:45" pos:end="55:45">-</operator> <name pos:start="55:47" pos:end="55:58">cur_bitshift</name><operator pos:start="55:59" pos:end="55:59">)</operator><operator pos:start="55:60" pos:end="55:60">)</operator> <operator pos:start="55:62" pos:end="55:62">-</operator> <literal type="number" pos:start="55:64" pos:end="55:64">1</literal><operator pos:start="55:65" pos:end="55:65">)</operator><operator pos:start="55:66" pos:end="55:66">)</operator>

	    <operator pos:start="57:13" pos:end="57:14">&lt;&lt;</operator> <name pos:start="57:16" pos:end="57:27">cur_bitshift</name></expr>;</expr_stmt></block_content></block></if>

      <else pos:start="59:7" pos:end="61:53">else<block type="pseudo" pos:start="61:9" pos:end="61:53"><block_content pos:start="61:9" pos:end="61:53">

	<expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:14">result</name> <operator pos:start="61:16" pos:end="61:17">|=</operator> <operator pos:start="61:19" pos:end="61:19">*</operator><operator pos:start="61:20" pos:end="61:20">(</operator><name pos:start="61:21" pos:end="61:24">data</name> <operator pos:start="61:26" pos:end="61:26">+</operator> <name pos:start="61:28" pos:end="61:35">cur_byte</name><operator pos:start="61:36" pos:end="61:36">)</operator> <operator pos:start="61:38" pos:end="61:39">&lt;&lt;</operator> <name pos:start="61:41" pos:end="61:52">cur_bitshift</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

      <expr_stmt pos:start="63:7" pos:end="63:43"><expr pos:start="63:7" pos:end="63:42"><name pos:start="63:7" pos:end="63:18">cur_bitshift</name> <operator pos:start="63:20" pos:end="63:21">+=</operator> <name pos:start="63:23" pos:end="63:42">FLOATFORMAT_CHAR_BIT</name></expr>;</expr_stmt>

      <if_stmt pos:start="65:7" pos:end="71:19"><if pos:start="65:7" pos:end="67:19">if <condition pos:start="65:10" pos:end="65:38">(<expr pos:start="65:11" pos:end="65:37"><name pos:start="65:11" pos:end="65:15">order</name> <operator pos:start="65:17" pos:end="65:18">==</operator> <name pos:start="65:20" pos:end="65:37">floatformat_little</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:19"><block_content pos:start="67:9" pos:end="67:19">

	<expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><operator pos:start="67:9" pos:end="67:10">++</operator><name pos:start="67:11" pos:end="67:18">cur_byte</name></expr>;</expr_stmt></block_content></block></if>

      <else pos:start="69:7" pos:end="71:19">else<block type="pseudo" pos:start="71:9" pos:end="71:19"><block_content pos:start="71:9" pos:end="71:19">

	<expr_stmt pos:start="71:9" pos:end="71:19"><expr pos:start="71:9" pos:end="71:18"><operator pos:start="71:9" pos:end="71:10">--</operator><name pos:start="71:11" pos:end="71:18">cur_byte</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></while>

  <return pos:start="75:3" pos:end="75:16">return <expr pos:start="75:10" pos:end="75:15"><name pos:start="75:10" pos:end="75:15">result</name></expr>;</return>

</block_content>}</block>
</unit>
