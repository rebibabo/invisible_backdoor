<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1544.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:35">rtas_event_log_contains</name><parameter_list pos:start="1:36" pos:end="1:56">(<parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:44"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:55">event_mask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:17">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">sPAPREventLogEntry</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:29">entry</name> <init pos:start="5:31" pos:end="5:36">= <expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:40">/* we only queue EPOW events atm. */</comment>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:19">event_mask</name> <operator pos:start="11:21" pos:end="11:21">&amp;</operator> <name pos:start="11:23" pos:end="11:37">EVENT_MASK_EPOW</name><operator pos:start="11:38" pos:end="11:38">)</operator> <operator pos:start="11:40" pos:end="11:41">==</operator> <literal type="number" pos:start="11:43" pos:end="11:43">0</literal></expr>)</condition> <block pos:start="11:46" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:21">

        <return pos:start="13:9" pos:end="13:21">return <expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:18">QTAILQ_FOREACH</name><argument_list pos:start="19:19" pos:end="19:55">(<argument pos:start="19:20" pos:end="19:24">entry</argument>, <argument pos:start="19:27" pos:end="19:48">&amp;spapr-&gt;pending_events</argument>, <argument pos:start="19:51" pos:end="19:54">next</argument>)</argument_list></macro> <block pos:start="19:57" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <comment type="block" pos:start="21:9" pos:end="21:69">/* EPOW and hotplug events are surfaced in the same manner */</comment>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="25:53">(<expr pos:start="23:13" pos:end="25:52"><name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:17">entry</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">log_type</name></name> <operator pos:start="23:29" pos:end="23:30">==</operator> <name pos:start="23:32" pos:end="23:49">RTAS_LOG_TYPE_EPOW</name> <operator pos:start="23:51" pos:end="23:52">||</operator>

            <name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:17">entry</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">log_type</name></name> <operator pos:start="25:29" pos:end="25:30">==</operator> <name pos:start="25:32" pos:end="25:52">RTAS_LOG_TYPE_HOTPLUG</name></expr>)</condition> <block pos:start="25:55" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:24">

            <return pos:start="27:13" pos:end="27:24">return <expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="35:5" pos:end="35:17">return <expr pos:start="35:12" pos:end="35:16"><name pos:start="35:12" pos:end="35:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
