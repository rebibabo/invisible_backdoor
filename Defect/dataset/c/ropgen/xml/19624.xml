<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19624.c" pos:tabs="8"><function pos:start="1:1" pos:end="451:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:50">quantize_and_encode_band_cost_ESC_mips</name><parameter_list pos:start="1:51" pos:end="9:83">(<parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><name pos:start="1:52" pos:end="1:71"><name pos:start="1:52" pos:end="1:57">struct</name> <name pos:start="1:59" pos:end="1:71">AACEncContext</name></name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:74">s</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:68"><decl pos:start="3:52" pos:end="3:68"><type pos:start="3:52" pos:end="3:68"><name pos:start="3:52" pos:end="3:64">PutBitContext</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:68">pb</name></decl></parameter>, <parameter pos:start="3:71" pos:end="3:85"><decl pos:start="3:71" pos:end="3:85"><type pos:start="3:71" pos:end="3:85"><specifier pos:start="3:71" pos:end="3:75">const</specifier> <name pos:start="3:77" pos:end="3:81">float</name> <modifier pos:start="3:83" pos:end="3:83">*</modifier></type><name pos:start="3:84" pos:end="3:85">in</name></decl></parameter>, <parameter pos:start="3:88" pos:end="3:97"><decl pos:start="3:88" pos:end="3:97"><type pos:start="3:88" pos:end="3:97"><name pos:start="3:88" pos:end="3:92">float</name> <modifier pos:start="3:94" pos:end="3:94">*</modifier></type><name pos:start="3:95" pos:end="3:97">out</name></decl></parameter>,

                                                   <parameter pos:start="5:52" pos:end="5:70"><decl pos:start="5:52" pos:end="5:70"><type pos:start="5:52" pos:end="5:70"><specifier pos:start="5:52" pos:end="5:56">const</specifier> <name pos:start="5:58" pos:end="5:62">float</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:70">scaled</name></decl></parameter>, <parameter pos:start="5:73" pos:end="5:80"><decl pos:start="5:73" pos:end="5:80"><type pos:start="5:73" pos:end="5:80"><name pos:start="5:73" pos:end="5:75">int</name></type> <name pos:start="5:77" pos:end="5:80">size</name></decl></parameter>, <parameter pos:start="5:83" pos:end="5:95"><decl pos:start="5:83" pos:end="5:95"><type pos:start="5:83" pos:end="5:95"><name pos:start="5:83" pos:end="5:85">int</name></type> <name pos:start="5:87" pos:end="5:95">scale_idx</name></decl></parameter>,

                                                   <parameter pos:start="7:52" pos:end="7:57"><decl pos:start="7:52" pos:end="7:57"><type pos:start="7:52" pos:end="7:57"><name pos:start="7:52" pos:end="7:54">int</name></type> <name pos:start="7:56" pos:end="7:57">cb</name></decl></parameter>, <parameter pos:start="7:60" pos:end="7:77"><decl pos:start="7:60" pos:end="7:77"><type pos:start="7:60" pos:end="7:77"><specifier pos:start="7:60" pos:end="7:64">const</specifier> <name pos:start="7:66" pos:end="7:70">float</name></type> <name pos:start="7:72" pos:end="7:77">lambda</name></decl></parameter>, <parameter pos:start="7:80" pos:end="7:96"><decl pos:start="7:80" pos:end="7:96"><type pos:start="7:80" pos:end="7:96"><specifier pos:start="7:80" pos:end="7:84">const</specifier> <name pos:start="7:86" pos:end="7:90">float</name></type> <name pos:start="7:92" pos:end="7:96">uplim</name></decl></parameter>,

                                                   <parameter pos:start="9:52" pos:end="9:60"><decl pos:start="9:52" pos:end="9:60"><type pos:start="9:52" pos:end="9:60"><name pos:start="9:52" pos:end="9:54">int</name> <modifier pos:start="9:56" pos:end="9:56">*</modifier></type><name pos:start="9:57" pos:end="9:60">bits</name></decl></parameter>, <parameter pos:start="9:63" pos:end="9:82"><decl pos:start="9:63" pos:end="9:82"><type pos:start="9:63" pos:end="9:82"><specifier pos:start="9:63" pos:end="9:67">const</specifier> <name pos:start="9:69" pos:end="9:73">float</name></type> <name pos:start="9:75" pos:end="9:82">ROUNDING</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="451:1">{<block_content pos:start="13:5" pos:end="449:5">

    <decl_stmt pos:start="13:5" pos:end="13:99"><decl pos:start="13:5" pos:end="13:98"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">float</name></type> <name pos:start="13:17" pos:end="13:19">Q34</name> <init pos:start="13:21" pos:end="13:98">= <expr pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:40">ff_aac_pow34sf_tab</name><index pos:start="13:41" pos:end="13:98">[<expr pos:start="13:42" pos:end="13:97"><name pos:start="13:42" pos:end="13:53">POW_SF2_ZERO</name> <operator pos:start="13:55" pos:end="13:55">-</operator> <name pos:start="13:57" pos:end="13:65">scale_idx</name> <operator pos:start="13:67" pos:end="13:67">+</operator> <name pos:start="13:69" pos:end="13:81">SCALE_ONE_POS</name> <operator pos:start="13:83" pos:end="13:83">-</operator> <name pos:start="13:85" pos:end="13:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:99"><decl pos:start="15:5" pos:end="15:98"><type pos:start="15:5" pos:end="15:15"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">float</name></type> <name pos:start="15:17" pos:end="15:18">IQ</name>  <init pos:start="15:21" pos:end="15:98">= <expr pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:39">ff_aac_pow2sf_tab</name> <index pos:start="15:41" pos:end="15:98">[<expr pos:start="15:42" pos:end="15:97"><name pos:start="15:42" pos:end="15:53">POW_SF2_ZERO</name> <operator pos:start="15:55" pos:end="15:55">+</operator> <name pos:start="15:57" pos:end="15:65">scale_idx</name> <operator pos:start="15:67" pos:end="15:67">-</operator> <name pos:start="15:69" pos:end="15:81">SCALE_ONE_POS</name> <operator pos:start="15:83" pos:end="15:83">+</operator> <name pos:start="15:85" pos:end="15:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">qc1</name></decl>, <decl pos:start="19:14" pos:end="19:16"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:16">qc2</name></decl>, <decl pos:start="19:19" pos:end="19:21"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:21">qc3</name></decl>, <decl pos:start="19:24" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:26">qc4</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:64"><decl pos:start="23:5" pos:end="23:63"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:11">uint8_t</name>  <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:20">p_bits</name>    <init pos:start="23:25" pos:end="23:63">= <expr pos:start="23:27" pos:end="23:63"><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:34">uint8_t</name><operator pos:start="23:35" pos:end="23:35">*</operator> <operator pos:start="23:37" pos:end="23:37">)</operator><name pos:start="23:38" pos:end="23:63"><name pos:start="23:38" pos:end="23:57">ff_aac_spectral_bits</name><index pos:start="23:58" pos:end="23:63">[<expr pos:start="23:59" pos:end="23:62"><name pos:start="23:59" pos:end="23:60">cb</name><operator pos:start="23:61" pos:end="23:61">-</operator><literal type="number" pos:start="23:62" pos:end="23:62">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:65"><decl pos:start="25:5" pos:end="25:64"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">uint16_t</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:21">p_codes</name>   <init pos:start="25:25" pos:end="25:64">= <expr pos:start="25:27" pos:end="25:64"><operator pos:start="25:27" pos:end="25:27">(</operator><name pos:start="25:28" pos:end="25:35">uint16_t</name><operator pos:start="25:36" pos:end="25:36">*</operator><operator pos:start="25:37" pos:end="25:37">)</operator><name pos:start="25:38" pos:end="25:64"><name pos:start="25:38" pos:end="25:58">ff_aac_spectral_codes</name><index pos:start="25:59" pos:end="25:64">[<expr pos:start="25:60" pos:end="25:63"><name pos:start="25:60" pos:end="25:61">cb</name><operator pos:start="25:62" pos:end="25:62">-</operator><literal type="number" pos:start="25:63" pos:end="25:63">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:67"><decl pos:start="27:5" pos:end="27:66"><type pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:9">float</name>    <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:23">p_vectors</name> <init pos:start="27:25" pos:end="27:66">= <expr pos:start="27:27" pos:end="27:66"><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:32">float</name><operator pos:start="27:33" pos:end="27:33">*</operator>   <operator pos:start="27:37" pos:end="27:37">)</operator><name pos:start="27:38" pos:end="27:66"><name pos:start="27:38" pos:end="27:60">ff_aac_codebook_vectors</name><index pos:start="27:61" pos:end="27:66">[<expr pos:start="27:62" pos:end="27:65"><name pos:start="27:62" pos:end="27:63">cb</name><operator pos:start="27:64" pos:end="27:64">-</operator><literal type="number" pos:start="27:65" pos:end="27:65">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:15">abs_pow34_v</name><argument_list pos:start="31:16" pos:end="31:36">(<argument pos:start="31:17" pos:end="31:25"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:25">scoefs</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">in</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:10">scaled</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">scoefs</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="449:5"><if pos:start="37:5" pos:end="209:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:10">cb</name> <operator pos:start="37:12" pos:end="37:12">&lt;</operator> <literal type="number" pos:start="37:14" pos:end="37:15">11</literal></expr>)</condition> <block pos:start="37:18" pos:end="209:5">{<block_content pos:start="39:9" pos:end="207:9">

        <for pos:start="39:9" pos:end="207:9">for <control pos:start="39:13" pos:end="39:37">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:29"><expr pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:21">i</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:28">size</name></expr>;</condition> <incr pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:31">i</name> <operator pos:start="39:33" pos:end="39:34">+=</operator> <literal type="number" pos:start="39:36" pos:end="39:36">4</literal></expr></incr>)</control> <block pos:start="39:39" pos:end="207:9">{<block_content pos:start="41:13" pos:end="205:13">

            <decl_stmt pos:start="41:13" pos:end="41:62"><decl pos:start="41:13" pos:end="41:22"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:22">curidx</name></decl>, <decl pos:start="41:25" pos:end="41:31"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:25" pos:end="41:31">curidx2</name></decl>, <decl pos:start="41:34" pos:end="41:38"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:34" pos:end="41:38">sign1</name></decl>, <decl pos:start="41:41" pos:end="41:46"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:41" pos:end="41:46">count1</name></decl>, <decl pos:start="41:49" pos:end="41:53"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:49" pos:end="41:53">sign2</name></decl>, <decl pos:start="41:56" pos:end="41:61"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:56" pos:end="41:61">count2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:40"><decl pos:start="43:13" pos:end="43:39"><type pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:15">int</name> <modifier pos:start="43:17" pos:end="43:17">*</modifier></type><name pos:start="43:18" pos:end="43:23">in_int</name> <init pos:start="43:25" pos:end="43:39">= <expr pos:start="43:27" pos:end="43:39"><operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:30">int</name> <operator pos:start="43:32" pos:end="43:32">*</operator><operator pos:start="43:33" pos:end="43:33">)</operator><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:39"><name pos:start="43:35" pos:end="43:36">in</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:27"><decl pos:start="45:13" pos:end="45:26"><type pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19">uint8_t</name></type> <name pos:start="45:21" pos:end="45:26">v_bits</name></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:33"><decl pos:start="47:13" pos:end="47:32"><type pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:20">unsigned</name> <name pos:start="47:22" pos:end="47:24">int</name></type> <name pos:start="47:26" pos:end="47:32">v_codes</name></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:35"><decl pos:start="49:13" pos:end="49:18"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:18">t0</name></decl>, <decl pos:start="49:21" pos:end="49:22"><type ref="prev" pos:start="49:13" pos:end="49:15"/><name pos:start="49:21" pos:end="49:22">t1</name></decl>, <decl pos:start="49:25" pos:end="49:26"><type ref="prev" pos:start="49:13" pos:end="49:15"/><name pos:start="49:25" pos:end="49:26">t2</name></decl>, <decl pos:start="49:29" pos:end="49:30"><type ref="prev" pos:start="49:13" pos:end="49:15"/><name pos:start="49:29" pos:end="49:30">t3</name></decl>, <decl pos:start="49:33" pos:end="49:34"><type ref="prev" pos:start="49:13" pos:end="49:15"/><name pos:start="49:33" pos:end="49:34">t4</name></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:37"><decl pos:start="51:13" pos:end="51:29"><type pos:start="51:13" pos:end="51:25"><specifier pos:start="51:13" pos:end="51:17">const</specifier> <name pos:start="51:19" pos:end="51:23">float</name> <modifier pos:start="51:25" pos:end="51:25">*</modifier></type><name pos:start="51:26" pos:end="51:29">vec1</name></decl>, <decl pos:start="51:32" pos:end="51:36"><type ref="prev" pos:start="51:13" pos:end="51:25"><modifier pos:start="51:32" pos:end="51:32">*</modifier></type><name pos:start="51:33" pos:end="51:36">vec2</name></decl>;</decl_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:47"><expr pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:15">qc1</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:29"><name pos:start="55:19" pos:end="55:24">scaled</name><index pos:start="55:25" pos:end="55:29">[<expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">i</name></expr>  ]</index></name> <operator pos:start="55:31" pos:end="55:31">*</operator> <name pos:start="55:33" pos:end="55:35">Q34</name> <operator pos:start="55:37" pos:end="55:37">+</operator> <name pos:start="55:39" pos:end="55:46">ROUNDING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:47"><expr pos:start="57:13" pos:end="57:46"><name pos:start="57:13" pos:end="57:15">qc2</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:29"><name pos:start="57:19" pos:end="57:24">scaled</name><index pos:start="57:25" pos:end="57:29">[<expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:26">i</name><operator pos:start="57:27" pos:end="57:27">+</operator><literal type="number" pos:start="57:28" pos:end="57:28">1</literal></expr>]</index></name> <operator pos:start="57:31" pos:end="57:31">*</operator> <name pos:start="57:33" pos:end="57:35">Q34</name> <operator pos:start="57:37" pos:end="57:37">+</operator> <name pos:start="57:39" pos:end="57:46">ROUNDING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:47"><expr pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:15">qc3</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:29"><name pos:start="59:19" pos:end="59:24">scaled</name><index pos:start="59:25" pos:end="59:29">[<expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:26">i</name><operator pos:start="59:27" pos:end="59:27">+</operator><literal type="number" pos:start="59:28" pos:end="59:28">2</literal></expr>]</index></name> <operator pos:start="59:31" pos:end="59:31">*</operator> <name pos:start="59:33" pos:end="59:35">Q34</name> <operator pos:start="59:37" pos:end="59:37">+</operator> <name pos:start="59:39" pos:end="59:46">ROUNDING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:15">qc4</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:29"><name pos:start="61:19" pos:end="61:24">scaled</name><index pos:start="61:25" pos:end="61:29">[<expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:26">i</name><operator pos:start="61:27" pos:end="61:27">+</operator><literal type="number" pos:start="61:28" pos:end="61:28">3</literal></expr>]</index></name> <operator pos:start="61:31" pos:end="61:31">*</operator> <name pos:start="61:33" pos:end="61:35">Q34</name> <operator pos:start="61:37" pos:end="61:37">+</operator> <name pos:start="61:39" pos:end="61:46">ROUNDING</name></expr>;</expr_stmt>



            <asm pos:start="65:13" pos:end="161:14">__asm__ <specifier pos:start="65:21" pos:end="65:28">volatile</specifier> (

                ".set push                                  \n\t"

                ".set noreorder                             \n\t"



                "ori        %[t4],      $zero,      16      \n\t"

                "ori        %[sign1],   $zero,      0       \n\t"

                "ori        %[sign2],   $zero,      0       \n\t"

                "slt        %[t0],      %[t4],      %[qc1]  \n\t"

                "slt        %[t1],      %[t4],      %[qc2]  \n\t"

                "slt        %[t2],      %[t4],      %[qc3]  \n\t"

                "slt        %[t3],      %[t4],      %[qc4]  \n\t"

                "movn       %[qc1],     %[t4],      %[t0]   \n\t"

                "movn       %[qc2],     %[t4],      %[t1]   \n\t"

                "movn       %[qc3],     %[t4],      %[t2]   \n\t"

                "movn       %[qc4],     %[t4],      %[t3]   \n\t"

                "lw         %[t0],      0(%[in_int])        \n\t"

                "lw         %[t1],      4(%[in_int])        \n\t"

                "lw         %[t2],      8(%[in_int])        \n\t"

                "lw         %[t3],      12(%[in_int])       \n\t"

                "slt        %[t0],      %[t0],      $zero   \n\t"

                "movn       %[sign1],   %[t0],      %[qc1]  \n\t"

                "slt        %[t2],      %[t2],      $zero   \n\t"

                "movn       %[sign2],   %[t2],      %[qc3]  \n\t"

                "slt        %[t1],      %[t1],      $zero   \n\t"

                "sll        %[t0],      %[sign1],   1       \n\t"

                "or         %[t0],      %[t0],      %[t1]   \n\t"

                "movn       %[sign1],   %[t0],      %[qc2]  \n\t"

                "slt        %[t3],      %[t3],      $zero   \n\t"

                "sll        %[t0],      %[sign2],   1       \n\t"

                "or         %[t0],      %[t0],      %[t3]   \n\t"

                "movn       %[sign2],   %[t0],      %[qc4]  \n\t"

                "slt        %[count1],  $zero,      %[qc1]  \n\t"

                "slt        %[t1],      $zero,      %[qc2]  \n\t"

                "slt        %[count2],  $zero,      %[qc3]  \n\t"

                "slt        %[t2],      $zero,      %[qc4]  \n\t"

                "addu       %[count1],  %[count1],  %[t1]   \n\t"

                "addu       %[count2],  %[count2],  %[t2]   \n\t"



                ".set pop                                   \n\t"



                : [qc1]"+r"(qc1), [qc2]"+r"(qc2),

                  [qc3]"+r"(qc3), [qc4]"+r"(qc4),

                  [sign1]"=&amp;r"(sign1), [count1]"=&amp;r"(count1),

                  [sign2]"=&amp;r"(sign2), [count2]"=&amp;r"(count2),

                  [t0]"=&amp;r"(t0), [t1]"=&amp;r"(t1), [t2]"=&amp;r"(t2), [t3]"=&amp;r"(t3),

                  [t4]"=&amp;r"(t4)

                : [in_int]"r"(in_int)

                : "memory"

            );</asm>



            <expr_stmt pos:start="165:13" pos:end="165:30"><expr pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:18">curidx</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:23">17</literal> <operator pos:start="165:25" pos:end="165:25">*</operator> <name pos:start="165:27" pos:end="165:29">qc1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:26"><expr pos:start="167:13" pos:end="167:25"><name pos:start="167:13" pos:end="167:18">curidx</name> <operator pos:start="167:20" pos:end="167:21">+=</operator> <name pos:start="167:23" pos:end="167:25">qc2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:31"><expr pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:19">curidx2</name> <operator pos:start="169:21" pos:end="169:21">=</operator> <literal type="number" pos:start="169:23" pos:end="169:24">17</literal> <operator pos:start="169:26" pos:end="169:26">*</operator> <name pos:start="169:28" pos:end="169:30">qc3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:27"><expr pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:19">curidx2</name> <operator pos:start="171:21" pos:end="171:22">+=</operator> <name pos:start="171:24" pos:end="171:26">qc4</name></expr>;</expr_stmt>



            <expr_stmt pos:start="175:13" pos:end="175:58"><expr pos:start="175:13" pos:end="175:57"><name pos:start="175:13" pos:end="175:19">v_codes</name> <operator pos:start="175:21" pos:end="175:21">=</operator> <operator pos:start="175:23" pos:end="175:23">(</operator><name pos:start="175:24" pos:end="175:38"><name pos:start="175:24" pos:end="175:30">p_codes</name><index pos:start="175:31" pos:end="175:38">[<expr pos:start="175:32" pos:end="175:37"><name pos:start="175:32" pos:end="175:37">curidx</name></expr>]</index></name> <operator pos:start="175:40" pos:end="175:41">&lt;&lt;</operator> <name pos:start="175:43" pos:end="175:48">count1</name><operator pos:start="175:49" pos:end="175:49">)</operator> <operator pos:start="175:51" pos:end="175:51">|</operator> <name pos:start="175:53" pos:end="175:57">sign1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:46"><expr pos:start="177:13" pos:end="177:45"><name pos:start="177:13" pos:end="177:18">v_bits</name>  <operator pos:start="177:21" pos:end="177:21">=</operator> <name pos:start="177:23" pos:end="177:36"><name pos:start="177:23" pos:end="177:28">p_bits</name><index pos:start="177:29" pos:end="177:36">[<expr pos:start="177:30" pos:end="177:35"><name pos:start="177:30" pos:end="177:35">curidx</name></expr>]</index></name> <operator pos:start="177:38" pos:end="177:38">+</operator> <name pos:start="177:40" pos:end="177:45">count1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:42"><expr pos:start="179:13" pos:end="179:41"><call pos:start="179:13" pos:end="179:41"><name pos:start="179:13" pos:end="179:20">put_bits</name><argument_list pos:start="179:21" pos:end="179:41">(<argument pos:start="179:22" pos:end="179:23"><expr pos:start="179:22" pos:end="179:23"><name pos:start="179:22" pos:end="179:23">pb</name></expr></argument>, <argument pos:start="179:26" pos:end="179:31"><expr pos:start="179:26" pos:end="179:31"><name pos:start="179:26" pos:end="179:31">v_bits</name></expr></argument>, <argument pos:start="179:34" pos:end="179:40"><expr pos:start="179:34" pos:end="179:40"><name pos:start="179:34" pos:end="179:40">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="183:13" pos:end="183:59"><expr pos:start="183:13" pos:end="183:58"><name pos:start="183:13" pos:end="183:19">v_codes</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <operator pos:start="183:23" pos:end="183:23">(</operator><name pos:start="183:24" pos:end="183:39"><name pos:start="183:24" pos:end="183:30">p_codes</name><index pos:start="183:31" pos:end="183:39">[<expr pos:start="183:32" pos:end="183:38"><name pos:start="183:32" pos:end="183:38">curidx2</name></expr>]</index></name> <operator pos:start="183:41" pos:end="183:42">&lt;&lt;</operator> <name pos:start="183:44" pos:end="183:49">count2</name><operator pos:start="183:50" pos:end="183:50">)</operator> <operator pos:start="183:52" pos:end="183:52">|</operator> <name pos:start="183:54" pos:end="183:58">sign2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:47"><expr pos:start="185:13" pos:end="185:46"><name pos:start="185:13" pos:end="185:18">v_bits</name>  <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:37"><name pos:start="185:23" pos:end="185:28">p_bits</name><index pos:start="185:29" pos:end="185:37">[<expr pos:start="185:30" pos:end="185:36"><name pos:start="185:30" pos:end="185:36">curidx2</name></expr>]</index></name> <operator pos:start="185:39" pos:end="185:39">+</operator> <name pos:start="185:41" pos:end="185:46">count2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:42"><expr pos:start="187:13" pos:end="187:41"><call pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:20">put_bits</name><argument_list pos:start="187:21" pos:end="187:41">(<argument pos:start="187:22" pos:end="187:23"><expr pos:start="187:22" pos:end="187:23"><name pos:start="187:22" pos:end="187:23">pb</name></expr></argument>, <argument pos:start="187:26" pos:end="187:31"><expr pos:start="187:26" pos:end="187:31"><name pos:start="187:26" pos:end="187:31">v_bits</name></expr></argument>, <argument pos:start="187:34" pos:end="187:40"><expr pos:start="187:34" pos:end="187:40"><name pos:start="187:34" pos:end="187:40">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="191:13" pos:end="205:13"><if pos:start="191:13" pos:end="205:13">if <condition pos:start="191:16" pos:end="191:20">(<expr pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:19">out</name></expr>)</condition> <block pos:start="191:22" pos:end="205:13">{<block_content pos:start="193:16" pos:end="203:59">

               <expr_stmt pos:start="193:16" pos:end="193:44"><expr pos:start="193:16" pos:end="193:43"><name pos:start="193:16" pos:end="193:19">vec1</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <operator pos:start="193:23" pos:end="193:23">&amp;</operator><name pos:start="193:24" pos:end="193:43"><name pos:start="193:24" pos:end="193:32">p_vectors</name><index pos:start="193:33" pos:end="193:43">[<expr pos:start="193:34" pos:end="193:41"><name pos:start="193:34" pos:end="193:39">curidx</name><operator pos:start="193:40" pos:end="193:40">*</operator><literal type="number" pos:start="193:41" pos:end="193:41">2</literal></expr> ]</index></name></expr>;</expr_stmt>

               <expr_stmt pos:start="195:16" pos:end="195:44"><expr pos:start="195:16" pos:end="195:43"><name pos:start="195:16" pos:end="195:19">vec2</name> <operator pos:start="195:21" pos:end="195:21">=</operator> <operator pos:start="195:23" pos:end="195:23">&amp;</operator><name pos:start="195:24" pos:end="195:43"><name pos:start="195:24" pos:end="195:32">p_vectors</name><index pos:start="195:33" pos:end="195:43">[<expr pos:start="195:34" pos:end="195:42"><name pos:start="195:34" pos:end="195:40">curidx2</name><operator pos:start="195:41" pos:end="195:41">*</operator><literal type="number" pos:start="195:42" pos:end="195:42">2</literal></expr>]</index></name></expr>;</expr_stmt>

               <expr_stmt pos:start="197:16" pos:end="197:59"><expr pos:start="197:16" pos:end="197:58"><name pos:start="197:16" pos:end="197:23"><name pos:start="197:16" pos:end="197:18">out</name><index pos:start="197:19" pos:end="197:23">[<expr pos:start="197:20" pos:end="197:22"><name pos:start="197:20" pos:end="197:20">i</name><operator pos:start="197:21" pos:end="197:21">+</operator><literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>]</index></name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:58"><name pos:start="197:27" pos:end="197:35">copysignf</name><argument_list pos:start="197:36" pos:end="197:58">(<argument pos:start="197:37" pos:end="197:48"><expr pos:start="197:37" pos:end="197:48"><name pos:start="197:37" pos:end="197:43"><name pos:start="197:37" pos:end="197:40">vec1</name><index pos:start="197:41" pos:end="197:43">[<expr pos:start="197:42" pos:end="197:42"><literal type="number" pos:start="197:42" pos:end="197:42">0</literal></expr>]</index></name> <operator pos:start="197:45" pos:end="197:45">*</operator> <name pos:start="197:47" pos:end="197:48">IQ</name></expr></argument>, <argument pos:start="197:51" pos:end="197:57"><expr pos:start="197:51" pos:end="197:57"><name pos:start="197:51" pos:end="197:57"><name pos:start="197:51" pos:end="197:52">in</name><index pos:start="197:53" pos:end="197:57">[<expr pos:start="197:54" pos:end="197:56"><name pos:start="197:54" pos:end="197:54">i</name><operator pos:start="197:55" pos:end="197:55">+</operator><literal type="number" pos:start="197:56" pos:end="197:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <expr_stmt pos:start="199:16" pos:end="199:59"><expr pos:start="199:16" pos:end="199:58"><name pos:start="199:16" pos:end="199:23"><name pos:start="199:16" pos:end="199:18">out</name><index pos:start="199:19" pos:end="199:23">[<expr pos:start="199:20" pos:end="199:22"><name pos:start="199:20" pos:end="199:20">i</name><operator pos:start="199:21" pos:end="199:21">+</operator><literal type="number" pos:start="199:22" pos:end="199:22">1</literal></expr>]</index></name> <operator pos:start="199:25" pos:end="199:25">=</operator> <call pos:start="199:27" pos:end="199:58"><name pos:start="199:27" pos:end="199:35">copysignf</name><argument_list pos:start="199:36" pos:end="199:58">(<argument pos:start="199:37" pos:end="199:48"><expr pos:start="199:37" pos:end="199:48"><name pos:start="199:37" pos:end="199:43"><name pos:start="199:37" pos:end="199:40">vec1</name><index pos:start="199:41" pos:end="199:43">[<expr pos:start="199:42" pos:end="199:42"><literal type="number" pos:start="199:42" pos:end="199:42">1</literal></expr>]</index></name> <operator pos:start="199:45" pos:end="199:45">*</operator> <name pos:start="199:47" pos:end="199:48">IQ</name></expr></argument>, <argument pos:start="199:51" pos:end="199:57"><expr pos:start="199:51" pos:end="199:57"><name pos:start="199:51" pos:end="199:57"><name pos:start="199:51" pos:end="199:52">in</name><index pos:start="199:53" pos:end="199:57">[<expr pos:start="199:54" pos:end="199:56"><name pos:start="199:54" pos:end="199:54">i</name><operator pos:start="199:55" pos:end="199:55">+</operator><literal type="number" pos:start="199:56" pos:end="199:56">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <expr_stmt pos:start="201:16" pos:end="201:59"><expr pos:start="201:16" pos:end="201:58"><name pos:start="201:16" pos:end="201:23"><name pos:start="201:16" pos:end="201:18">out</name><index pos:start="201:19" pos:end="201:23">[<expr pos:start="201:20" pos:end="201:22"><name pos:start="201:20" pos:end="201:20">i</name><operator pos:start="201:21" pos:end="201:21">+</operator><literal type="number" pos:start="201:22" pos:end="201:22">2</literal></expr>]</index></name> <operator pos:start="201:25" pos:end="201:25">=</operator> <call pos:start="201:27" pos:end="201:58"><name pos:start="201:27" pos:end="201:35">copysignf</name><argument_list pos:start="201:36" pos:end="201:58">(<argument pos:start="201:37" pos:end="201:48"><expr pos:start="201:37" pos:end="201:48"><name pos:start="201:37" pos:end="201:43"><name pos:start="201:37" pos:end="201:40">vec2</name><index pos:start="201:41" pos:end="201:43">[<expr pos:start="201:42" pos:end="201:42"><literal type="number" pos:start="201:42" pos:end="201:42">0</literal></expr>]</index></name> <operator pos:start="201:45" pos:end="201:45">*</operator> <name pos:start="201:47" pos:end="201:48">IQ</name></expr></argument>, <argument pos:start="201:51" pos:end="201:57"><expr pos:start="201:51" pos:end="201:57"><name pos:start="201:51" pos:end="201:57"><name pos:start="201:51" pos:end="201:52">in</name><index pos:start="201:53" pos:end="201:57">[<expr pos:start="201:54" pos:end="201:56"><name pos:start="201:54" pos:end="201:54">i</name><operator pos:start="201:55" pos:end="201:55">+</operator><literal type="number" pos:start="201:56" pos:end="201:56">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <expr_stmt pos:start="203:16" pos:end="203:59"><expr pos:start="203:16" pos:end="203:58"><name pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:18">out</name><index pos:start="203:19" pos:end="203:23">[<expr pos:start="203:20" pos:end="203:22"><name pos:start="203:20" pos:end="203:20">i</name><operator pos:start="203:21" pos:end="203:21">+</operator><literal type="number" pos:start="203:22" pos:end="203:22">3</literal></expr>]</index></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:58"><name pos:start="203:27" pos:end="203:35">copysignf</name><argument_list pos:start="203:36" pos:end="203:58">(<argument pos:start="203:37" pos:end="203:48"><expr pos:start="203:37" pos:end="203:48"><name pos:start="203:37" pos:end="203:43"><name pos:start="203:37" pos:end="203:40">vec2</name><index pos:start="203:41" pos:end="203:43">[<expr pos:start="203:42" pos:end="203:42"><literal type="number" pos:start="203:42" pos:end="203:42">1</literal></expr>]</index></name> <operator pos:start="203:45" pos:end="203:45">*</operator> <name pos:start="203:47" pos:end="203:48">IQ</name></expr></argument>, <argument pos:start="203:51" pos:end="203:57"><expr pos:start="203:51" pos:end="203:57"><name pos:start="203:51" pos:end="203:57"><name pos:start="203:51" pos:end="203:52">in</name><index pos:start="203:53" pos:end="203:57">[<expr pos:start="203:54" pos:end="203:56"><name pos:start="203:54" pos:end="203:54">i</name><operator pos:start="203:55" pos:end="203:55">+</operator><literal type="number" pos:start="203:56" pos:end="203:56">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="449:5">else <block pos:start="209:12" pos:end="449:5">{<block_content pos:start="211:9" pos:end="447:9">

        <for pos:start="211:9" pos:end="447:9">for <control pos:start="211:13" pos:end="211:37">(<init pos:start="211:14" pos:end="211:19"><expr pos:start="211:14" pos:end="211:18"><name pos:start="211:14" pos:end="211:14">i</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="number" pos:start="211:18" pos:end="211:18">0</literal></expr>;</init> <condition pos:start="211:21" pos:end="211:29"><expr pos:start="211:21" pos:end="211:28"><name pos:start="211:21" pos:end="211:21">i</name> <operator pos:start="211:23" pos:end="211:23">&lt;</operator> <name pos:start="211:25" pos:end="211:28">size</name></expr>;</condition> <incr pos:start="211:31" pos:end="211:36"><expr pos:start="211:31" pos:end="211:36"><name pos:start="211:31" pos:end="211:31">i</name> <operator pos:start="211:33" pos:end="211:34">+=</operator> <literal type="number" pos:start="211:36" pos:end="211:36">4</literal></expr></incr>)</control> <block pos:start="211:39" pos:end="447:9">{<block_content pos:start="213:13" pos:end="445:13">

            <decl_stmt pos:start="213:13" pos:end="213:62"><decl pos:start="213:13" pos:end="213:22"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:22">curidx</name></decl>, <decl pos:start="213:25" pos:end="213:31"><type ref="prev" pos:start="213:13" pos:end="213:15"/><name pos:start="213:25" pos:end="213:31">curidx2</name></decl>, <decl pos:start="213:34" pos:end="213:38"><type ref="prev" pos:start="213:13" pos:end="213:15"/><name pos:start="213:34" pos:end="213:38">sign1</name></decl>, <decl pos:start="213:41" pos:end="213:46"><type ref="prev" pos:start="213:13" pos:end="213:15"/><name pos:start="213:41" pos:end="213:46">count1</name></decl>, <decl pos:start="213:49" pos:end="213:53"><type ref="prev" pos:start="213:13" pos:end="213:15"/><name pos:start="213:49" pos:end="213:53">sign2</name></decl>, <decl pos:start="213:56" pos:end="213:61"><type ref="prev" pos:start="213:13" pos:end="213:15"/><name pos:start="213:56" pos:end="213:61">count2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="215:13" pos:end="215:40"><decl pos:start="215:13" pos:end="215:39"><type pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:15">int</name> <modifier pos:start="215:17" pos:end="215:17">*</modifier></type><name pos:start="215:18" pos:end="215:23">in_int</name> <init pos:start="215:25" pos:end="215:39">= <expr pos:start="215:27" pos:end="215:39"><operator pos:start="215:27" pos:end="215:27">(</operator><name pos:start="215:28" pos:end="215:30">int</name> <operator pos:start="215:32" pos:end="215:32">*</operator><operator pos:start="215:33" pos:end="215:33">)</operator><operator pos:start="215:34" pos:end="215:34">&amp;</operator><name pos:start="215:35" pos:end="215:39"><name pos:start="215:35" pos:end="215:36">in</name><index pos:start="215:37" pos:end="215:39">[<expr pos:start="215:38" pos:end="215:38"><name pos:start="215:38" pos:end="215:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="217:13" pos:end="217:27"><decl pos:start="217:13" pos:end="217:26"><type pos:start="217:13" pos:end="217:19"><name pos:start="217:13" pos:end="217:19">uint8_t</name></type> <name pos:start="217:21" pos:end="217:26">v_bits</name></decl>;</decl_stmt>

            <decl_stmt pos:start="219:13" pos:end="219:33"><decl pos:start="219:13" pos:end="219:32"><type pos:start="219:13" pos:end="219:24"><name pos:start="219:13" pos:end="219:20">unsigned</name> <name pos:start="219:22" pos:end="219:24">int</name></type> <name pos:start="219:26" pos:end="219:32">v_codes</name></decl>;</decl_stmt>

            <decl_stmt pos:start="221:13" pos:end="221:31"><decl pos:start="221:13" pos:end="221:18"><type pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">int</name></type> <name pos:start="221:17" pos:end="221:18">c1</name></decl>, <decl pos:start="221:21" pos:end="221:22"><type ref="prev" pos:start="221:13" pos:end="221:15"/><name pos:start="221:21" pos:end="221:22">c2</name></decl>, <decl pos:start="221:25" pos:end="221:26"><type ref="prev" pos:start="221:13" pos:end="221:15"/><name pos:start="221:25" pos:end="221:26">c3</name></decl>, <decl pos:start="221:29" pos:end="221:30"><type ref="prev" pos:start="221:13" pos:end="221:15"/><name pos:start="221:29" pos:end="221:30">c4</name></decl>;</decl_stmt>

            <decl_stmt pos:start="223:13" pos:end="223:35"><decl pos:start="223:13" pos:end="223:18"><type pos:start="223:13" pos:end="223:15"><name pos:start="223:13" pos:end="223:15">int</name></type> <name pos:start="223:17" pos:end="223:18">t0</name></decl>, <decl pos:start="223:21" pos:end="223:22"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:21" pos:end="223:22">t1</name></decl>, <decl pos:start="223:25" pos:end="223:26"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:25" pos:end="223:26">t2</name></decl>, <decl pos:start="223:29" pos:end="223:30"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:29" pos:end="223:30">t3</name></decl>, <decl pos:start="223:33" pos:end="223:34"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:33" pos:end="223:34">t4</name></decl>;</decl_stmt>

            <decl_stmt pos:start="225:13" pos:end="225:37"><decl pos:start="225:13" pos:end="225:29"><type pos:start="225:13" pos:end="225:25"><specifier pos:start="225:13" pos:end="225:17">const</specifier> <name pos:start="225:19" pos:end="225:23">float</name> <modifier pos:start="225:25" pos:end="225:25">*</modifier></type><name pos:start="225:26" pos:end="225:29">vec1</name></decl>, <decl pos:start="225:32" pos:end="225:36"><type ref="prev" pos:start="225:13" pos:end="225:25"><modifier pos:start="225:32" pos:end="225:32">*</modifier></type><name pos:start="225:33" pos:end="225:36">vec2</name></decl>;</decl_stmt>



            <expr_stmt pos:start="229:13" pos:end="229:47"><expr pos:start="229:13" pos:end="229:46"><name pos:start="229:13" pos:end="229:15">qc1</name> <operator pos:start="229:17" pos:end="229:17">=</operator> <name pos:start="229:19" pos:end="229:29"><name pos:start="229:19" pos:end="229:24">scaled</name><index pos:start="229:25" pos:end="229:29">[<expr pos:start="229:26" pos:end="229:26"><name pos:start="229:26" pos:end="229:26">i</name></expr>  ]</index></name> <operator pos:start="229:31" pos:end="229:31">*</operator> <name pos:start="229:33" pos:end="229:35">Q34</name> <operator pos:start="229:37" pos:end="229:37">+</operator> <name pos:start="229:39" pos:end="229:46">ROUNDING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:47"><expr pos:start="231:13" pos:end="231:46"><name pos:start="231:13" pos:end="231:15">qc2</name> <operator pos:start="231:17" pos:end="231:17">=</operator> <name pos:start="231:19" pos:end="231:29"><name pos:start="231:19" pos:end="231:24">scaled</name><index pos:start="231:25" pos:end="231:29">[<expr pos:start="231:26" pos:end="231:28"><name pos:start="231:26" pos:end="231:26">i</name><operator pos:start="231:27" pos:end="231:27">+</operator><literal type="number" pos:start="231:28" pos:end="231:28">1</literal></expr>]</index></name> <operator pos:start="231:31" pos:end="231:31">*</operator> <name pos:start="231:33" pos:end="231:35">Q34</name> <operator pos:start="231:37" pos:end="231:37">+</operator> <name pos:start="231:39" pos:end="231:46">ROUNDING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:47"><expr pos:start="233:13" pos:end="233:46"><name pos:start="233:13" pos:end="233:15">qc3</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <name pos:start="233:19" pos:end="233:29"><name pos:start="233:19" pos:end="233:24">scaled</name><index pos:start="233:25" pos:end="233:29">[<expr pos:start="233:26" pos:end="233:28"><name pos:start="233:26" pos:end="233:26">i</name><operator pos:start="233:27" pos:end="233:27">+</operator><literal type="number" pos:start="233:28" pos:end="233:28">2</literal></expr>]</index></name> <operator pos:start="233:31" pos:end="233:31">*</operator> <name pos:start="233:33" pos:end="233:35">Q34</name> <operator pos:start="233:37" pos:end="233:37">+</operator> <name pos:start="233:39" pos:end="233:46">ROUNDING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:47"><expr pos:start="235:13" pos:end="235:46"><name pos:start="235:13" pos:end="235:15">qc4</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <name pos:start="235:19" pos:end="235:29"><name pos:start="235:19" pos:end="235:24">scaled</name><index pos:start="235:25" pos:end="235:29">[<expr pos:start="235:26" pos:end="235:28"><name pos:start="235:26" pos:end="235:26">i</name><operator pos:start="235:27" pos:end="235:27">+</operator><literal type="number" pos:start="235:28" pos:end="235:28">3</literal></expr>]</index></name> <operator pos:start="235:31" pos:end="235:31">*</operator> <name pos:start="235:33" pos:end="235:35">Q34</name> <operator pos:start="235:37" pos:end="235:37">+</operator> <name pos:start="235:39" pos:end="235:46">ROUNDING</name></expr>;</expr_stmt>



            <asm pos:start="239:13" pos:end="355:14">__asm__ <specifier pos:start="239:21" pos:end="239:28">volatile</specifier> (

                ".set push                                  \n\t"

                ".set noreorder                             \n\t"



                "ori        %[t4],      $zero,      16      \n\t"

                "ori        %[sign1],   $zero,      0       \n\t"

                "ori        %[sign2],   $zero,      0       \n\t"

                "shll_s.w   %[c1],      %[qc1],     18      \n\t"

                "shll_s.w   %[c2],      %[qc2],     18      \n\t"

                "shll_s.w   %[c3],      %[qc3],     18      \n\t"

                "shll_s.w   %[c4],      %[qc4],     18      \n\t"

                "srl        %[c1],      %[c1],      18      \n\t"

                "srl        %[c2],      %[c2],      18      \n\t"

                "srl        %[c3],      %[c3],      18      \n\t"

                "srl        %[c4],      %[c4],      18      \n\t"

                "slt        %[t0],      %[t4],      %[qc1]  \n\t"

                "slt        %[t1],      %[t4],      %[qc2]  \n\t"

                "slt        %[t2],      %[t4],      %[qc3]  \n\t"

                "slt        %[t3],      %[t4],      %[qc4]  \n\t"

                "movn       %[qc1],     %[t4],      %[t0]   \n\t"

                "movn       %[qc2],     %[t4],      %[t1]   \n\t"

                "movn       %[qc3],     %[t4],      %[t2]   \n\t"

                "movn       %[qc4],     %[t4],      %[t3]   \n\t"

                "lw         %[t0],      0(%[in_int])        \n\t"

                "lw         %[t1],      4(%[in_int])        \n\t"

                "lw         %[t2],      8(%[in_int])        \n\t"

                "lw         %[t3],      12(%[in_int])       \n\t"

                "slt        %[t0],      %[t0],      $zero   \n\t"

                "movn       %[sign1],   %[t0],      %[qc1]  \n\t"

                "slt        %[t2],      %[t2],      $zero   \n\t"

                "movn       %[sign2],   %[t2],      %[qc3]  \n\t"

                "slt        %[t1],      %[t1],      $zero   \n\t"

                "sll        %[t0],      %[sign1],   1       \n\t"

                "or         %[t0],      %[t0],      %[t1]   \n\t"

                "movn       %[sign1],   %[t0],      %[qc2]  \n\t"

                "slt        %[t3],      %[t3],      $zero   \n\t"

                "sll        %[t0],      %[sign2],   1       \n\t"

                "or         %[t0],      %[t0],      %[t3]   \n\t"

                "movn       %[sign2],   %[t0],      %[qc4]  \n\t"

                "slt        %[count1],  $zero,      %[qc1]  \n\t"

                "slt        %[t1],      $zero,      %[qc2]  \n\t"

                "slt        %[count2],  $zero,      %[qc3]  \n\t"

                "slt        %[t2],      $zero,      %[qc4]  \n\t"

                "addu       %[count1],  %[count1],  %[t1]   \n\t"

                "addu       %[count2],  %[count2],  %[t2]   \n\t"



                ".set pop                                   \n\t"



                : [qc1]"+r"(qc1), [qc2]"+r"(qc2),

                  [qc3]"+r"(qc3), [qc4]"+r"(qc4),

                  [sign1]"=&amp;r"(sign1), [count1]"=&amp;r"(count1),

                  [sign2]"=&amp;r"(sign2), [count2]"=&amp;r"(count2),

                  [c1]"=&amp;r"(c1), [c2]"=&amp;r"(c2),

                  [c3]"=&amp;r"(c3), [c4]"=&amp;r"(c4),

                  [t0]"=&amp;r"(t0), [t1]"=&amp;r"(t1), [t2]"=&amp;r"(t2), [t3]"=&amp;r"(t3),

                  [t4]"=&amp;r"(t4)

                : [in_int]"r"(in_int)

                : "memory"

            );</asm>



            <expr_stmt pos:start="359:13" pos:end="359:30"><expr pos:start="359:13" pos:end="359:29"><name pos:start="359:13" pos:end="359:18">curidx</name> <operator pos:start="359:20" pos:end="359:20">=</operator> <literal type="number" pos:start="359:22" pos:end="359:23">17</literal> <operator pos:start="359:25" pos:end="359:25">*</operator> <name pos:start="359:27" pos:end="359:29">qc1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:26"><expr pos:start="361:13" pos:end="361:25"><name pos:start="361:13" pos:end="361:18">curidx</name> <operator pos:start="361:20" pos:end="361:21">+=</operator> <name pos:start="361:23" pos:end="361:25">qc2</name></expr>;</expr_stmt>



            <expr_stmt pos:start="365:13" pos:end="365:31"><expr pos:start="365:13" pos:end="365:30"><name pos:start="365:13" pos:end="365:19">curidx2</name> <operator pos:start="365:21" pos:end="365:21">=</operator> <literal type="number" pos:start="365:23" pos:end="365:24">17</literal> <operator pos:start="365:26" pos:end="365:26">*</operator> <name pos:start="365:28" pos:end="365:30">qc3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:27"><expr pos:start="367:13" pos:end="367:26"><name pos:start="367:13" pos:end="367:19">curidx2</name> <operator pos:start="367:21" pos:end="367:22">+=</operator> <name pos:start="367:24" pos:end="367:26">qc4</name></expr>;</expr_stmt>



            <expr_stmt pos:start="371:13" pos:end="371:58"><expr pos:start="371:13" pos:end="371:57"><name pos:start="371:13" pos:end="371:19">v_codes</name> <operator pos:start="371:21" pos:end="371:21">=</operator> <operator pos:start="371:23" pos:end="371:23">(</operator><name pos:start="371:24" pos:end="371:38"><name pos:start="371:24" pos:end="371:30">p_codes</name><index pos:start="371:31" pos:end="371:38">[<expr pos:start="371:32" pos:end="371:37"><name pos:start="371:32" pos:end="371:37">curidx</name></expr>]</index></name> <operator pos:start="371:40" pos:end="371:41">&lt;&lt;</operator> <name pos:start="371:43" pos:end="371:48">count1</name><operator pos:start="371:49" pos:end="371:49">)</operator> <operator pos:start="371:51" pos:end="371:51">|</operator> <name pos:start="371:53" pos:end="371:57">sign1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:46"><expr pos:start="373:13" pos:end="373:45"><name pos:start="373:13" pos:end="373:18">v_bits</name>  <operator pos:start="373:21" pos:end="373:21">=</operator> <name pos:start="373:23" pos:end="373:36"><name pos:start="373:23" pos:end="373:28">p_bits</name><index pos:start="373:29" pos:end="373:36">[<expr pos:start="373:30" pos:end="373:35"><name pos:start="373:30" pos:end="373:35">curidx</name></expr>]</index></name> <operator pos:start="373:38" pos:end="373:38">+</operator> <name pos:start="373:40" pos:end="373:45">count1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:42"><expr pos:start="375:13" pos:end="375:41"><call pos:start="375:13" pos:end="375:41"><name pos:start="375:13" pos:end="375:20">put_bits</name><argument_list pos:start="375:21" pos:end="375:41">(<argument pos:start="375:22" pos:end="375:23"><expr pos:start="375:22" pos:end="375:23"><name pos:start="375:22" pos:end="375:23">pb</name></expr></argument>, <argument pos:start="375:26" pos:end="375:31"><expr pos:start="375:26" pos:end="375:31"><name pos:start="375:26" pos:end="375:31">v_bits</name></expr></argument>, <argument pos:start="375:34" pos:end="375:40"><expr pos:start="375:34" pos:end="375:40"><name pos:start="375:34" pos:end="375:40">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="379:13" pos:end="387:13"><if pos:start="379:13" pos:end="387:13">if <condition pos:start="379:16" pos:end="379:47">(<expr pos:start="379:17" pos:end="379:46"><name pos:start="379:17" pos:end="379:37"><name pos:start="379:17" pos:end="379:25">p_vectors</name><index pos:start="379:26" pos:end="379:37">[<expr pos:start="379:27" pos:end="379:34"><name pos:start="379:27" pos:end="379:32">curidx</name><operator pos:start="379:33" pos:end="379:33">*</operator><literal type="number" pos:start="379:34" pos:end="379:34">2</literal></expr>  ]</index></name> <operator pos:start="379:39" pos:end="379:40">==</operator> <literal type="number" pos:start="379:42" pos:end="379:46">64.0f</literal></expr>)</condition> <block pos:start="379:49" pos:end="387:13">{<block_content pos:start="381:17" pos:end="385:51">

                <decl_stmt pos:start="381:17" pos:end="381:38"><decl pos:start="381:17" pos:end="381:37"><type pos:start="381:17" pos:end="381:19"><name pos:start="381:17" pos:end="381:19">int</name></type> <name pos:start="381:21" pos:end="381:23">len</name> <init pos:start="381:25" pos:end="381:37">= <expr pos:start="381:27" pos:end="381:37"><call pos:start="381:27" pos:end="381:37"><name pos:start="381:27" pos:end="381:33">av_log2</name><argument_list pos:start="381:34" pos:end="381:37">(<argument pos:start="381:35" pos:end="381:36"><expr pos:start="381:35" pos:end="381:36"><name pos:start="381:35" pos:end="381:36">c1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="383:17" pos:end="383:84"><expr pos:start="383:17" pos:end="383:83"><name pos:start="383:17" pos:end="383:23">v_codes</name> <operator pos:start="383:25" pos:end="383:25">=</operator> <operator pos:start="383:27" pos:end="383:27">(</operator><operator pos:start="383:28" pos:end="383:28">(</operator><operator pos:start="383:29" pos:end="383:29">(</operator><literal type="number" pos:start="383:30" pos:end="383:30">1</literal> <operator pos:start="383:32" pos:end="383:33">&lt;&lt;</operator> <operator pos:start="383:35" pos:end="383:35">(</operator><name pos:start="383:36" pos:end="383:38">len</name> <operator pos:start="383:40" pos:end="383:40">-</operator> <literal type="number" pos:start="383:42" pos:end="383:42">3</literal><operator pos:start="383:43" pos:end="383:43">)</operator><operator pos:start="383:44" pos:end="383:44">)</operator> <operator pos:start="383:46" pos:end="383:46">-</operator> <literal type="number" pos:start="383:48" pos:end="383:48">2</literal><operator pos:start="383:49" pos:end="383:49">)</operator> <operator pos:start="383:51" pos:end="383:52">&lt;&lt;</operator> <name pos:start="383:54" pos:end="383:56">len</name><operator pos:start="383:57" pos:end="383:57">)</operator> <operator pos:start="383:59" pos:end="383:59">|</operator> <operator pos:start="383:61" pos:end="383:61">(</operator><name pos:start="383:62" pos:end="383:63">c1</name> <operator pos:start="383:65" pos:end="383:65">&amp;</operator> <operator pos:start="383:67" pos:end="383:67">(</operator><operator pos:start="383:68" pos:end="383:68">(</operator><literal type="number" pos:start="383:69" pos:end="383:69">1</literal> <operator pos:start="383:71" pos:end="383:72">&lt;&lt;</operator> <name pos:start="383:74" pos:end="383:76">len</name><operator pos:start="383:77" pos:end="383:77">)</operator> <operator pos:start="383:79" pos:end="383:79">-</operator> <literal type="number" pos:start="383:81" pos:end="383:81">1</literal><operator pos:start="383:82" pos:end="383:82">)</operator><operator pos:start="383:83" pos:end="383:83">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="385:17" pos:end="385:51"><expr pos:start="385:17" pos:end="385:50"><call pos:start="385:17" pos:end="385:50"><name pos:start="385:17" pos:end="385:24">put_bits</name><argument_list pos:start="385:25" pos:end="385:50">(<argument pos:start="385:26" pos:end="385:27"><expr pos:start="385:26" pos:end="385:27"><name pos:start="385:26" pos:end="385:27">pb</name></expr></argument>, <argument pos:start="385:30" pos:end="385:40"><expr pos:start="385:30" pos:end="385:40"><name pos:start="385:30" pos:end="385:32">len</name> <operator pos:start="385:34" pos:end="385:34">*</operator> <literal type="number" pos:start="385:36" pos:end="385:38">2</literal> <operator pos:start="385:38" pos:end="385:38">-</operator> <literal type="number" pos:start="385:40" pos:end="385:40">3</literal></expr></argument>, <argument pos:start="385:43" pos:end="385:49"><expr pos:start="385:43" pos:end="385:49"><name pos:start="385:43" pos:end="385:49">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="389:13" pos:end="397:13"><if pos:start="389:13" pos:end="397:13">if <condition pos:start="389:16" pos:end="389:47">(<expr pos:start="389:17" pos:end="389:46"><name pos:start="389:17" pos:end="389:37"><name pos:start="389:17" pos:end="389:25">p_vectors</name><index pos:start="389:26" pos:end="389:37">[<expr pos:start="389:27" pos:end="389:36"><name pos:start="389:27" pos:end="389:32">curidx</name><operator pos:start="389:33" pos:end="389:33">*</operator><literal type="number" pos:start="389:34" pos:end="389:34">2</literal><operator pos:start="389:35" pos:end="389:35">+</operator><literal type="number" pos:start="389:36" pos:end="389:36">1</literal></expr>]</index></name> <operator pos:start="389:39" pos:end="389:40">==</operator> <literal type="number" pos:start="389:42" pos:end="389:46">64.0f</literal></expr>)</condition> <block pos:start="389:49" pos:end="397:13">{<block_content pos:start="391:17" pos:end="395:47">

                <decl_stmt pos:start="391:17" pos:end="391:38"><decl pos:start="391:17" pos:end="391:37"><type pos:start="391:17" pos:end="391:19"><name pos:start="391:17" pos:end="391:19">int</name></type> <name pos:start="391:21" pos:end="391:23">len</name> <init pos:start="391:25" pos:end="391:37">= <expr pos:start="391:27" pos:end="391:37"><call pos:start="391:27" pos:end="391:37"><name pos:start="391:27" pos:end="391:33">av_log2</name><argument_list pos:start="391:34" pos:end="391:37">(<argument pos:start="391:35" pos:end="391:36"><expr pos:start="391:35" pos:end="391:36"><name pos:start="391:35" pos:end="391:36">c2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:84"><expr pos:start="393:17" pos:end="393:83"><name pos:start="393:17" pos:end="393:23">v_codes</name> <operator pos:start="393:25" pos:end="393:25">=</operator> <operator pos:start="393:27" pos:end="393:27">(</operator><operator pos:start="393:28" pos:end="393:28">(</operator><operator pos:start="393:29" pos:end="393:29">(</operator><literal type="number" pos:start="393:30" pos:end="393:30">1</literal> <operator pos:start="393:32" pos:end="393:33">&lt;&lt;</operator> <operator pos:start="393:35" pos:end="393:35">(</operator><name pos:start="393:36" pos:end="393:38">len</name> <operator pos:start="393:40" pos:end="393:40">-</operator> <literal type="number" pos:start="393:42" pos:end="393:42">3</literal><operator pos:start="393:43" pos:end="393:43">)</operator><operator pos:start="393:44" pos:end="393:44">)</operator> <operator pos:start="393:46" pos:end="393:46">-</operator> <literal type="number" pos:start="393:48" pos:end="393:48">2</literal><operator pos:start="393:49" pos:end="393:49">)</operator> <operator pos:start="393:51" pos:end="393:52">&lt;&lt;</operator> <name pos:start="393:54" pos:end="393:56">len</name><operator pos:start="393:57" pos:end="393:57">)</operator> <operator pos:start="393:59" pos:end="393:59">|</operator> <operator pos:start="393:61" pos:end="393:61">(</operator><name pos:start="393:62" pos:end="393:63">c2</name> <operator pos:start="393:65" pos:end="393:65">&amp;</operator> <operator pos:start="393:67" pos:end="393:67">(</operator><operator pos:start="393:68" pos:end="393:68">(</operator><literal type="number" pos:start="393:69" pos:end="393:69">1</literal> <operator pos:start="393:71" pos:end="393:72">&lt;&lt;</operator> <name pos:start="393:74" pos:end="393:76">len</name><operator pos:start="393:77" pos:end="393:77">)</operator> <operator pos:start="393:79" pos:end="393:79">-</operator> <literal type="number" pos:start="393:81" pos:end="393:81">1</literal><operator pos:start="393:82" pos:end="393:82">)</operator><operator pos:start="393:83" pos:end="393:83">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="395:17" pos:end="395:47"><expr pos:start="395:17" pos:end="395:46"><call pos:start="395:17" pos:end="395:46"><name pos:start="395:17" pos:end="395:24">put_bits</name><argument_list pos:start="395:25" pos:end="395:46">(<argument pos:start="395:26" pos:end="395:27"><expr pos:start="395:26" pos:end="395:27"><name pos:start="395:26" pos:end="395:27">pb</name></expr></argument>, <argument pos:start="395:30" pos:end="395:36"><expr pos:start="395:30" pos:end="395:36"><name pos:start="395:30" pos:end="395:32">len</name><operator pos:start="395:33" pos:end="395:33">*</operator><literal type="number" pos:start="395:34" pos:end="395:35">2</literal><operator pos:start="395:35" pos:end="395:35">-</operator><literal type="number" pos:start="395:36" pos:end="395:36">3</literal></expr></argument>, <argument pos:start="395:39" pos:end="395:45"><expr pos:start="395:39" pos:end="395:45"><name pos:start="395:39" pos:end="395:45">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="401:13" pos:end="401:59"><expr pos:start="401:13" pos:end="401:58"><name pos:start="401:13" pos:end="401:19">v_codes</name> <operator pos:start="401:21" pos:end="401:21">=</operator> <operator pos:start="401:23" pos:end="401:23">(</operator><name pos:start="401:24" pos:end="401:39"><name pos:start="401:24" pos:end="401:30">p_codes</name><index pos:start="401:31" pos:end="401:39">[<expr pos:start="401:32" pos:end="401:38"><name pos:start="401:32" pos:end="401:38">curidx2</name></expr>]</index></name> <operator pos:start="401:41" pos:end="401:42">&lt;&lt;</operator> <name pos:start="401:44" pos:end="401:49">count2</name><operator pos:start="401:50" pos:end="401:50">)</operator> <operator pos:start="401:52" pos:end="401:52">|</operator> <name pos:start="401:54" pos:end="401:58">sign2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:47"><expr pos:start="403:13" pos:end="403:46"><name pos:start="403:13" pos:end="403:18">v_bits</name>  <operator pos:start="403:21" pos:end="403:21">=</operator> <name pos:start="403:23" pos:end="403:37"><name pos:start="403:23" pos:end="403:28">p_bits</name><index pos:start="403:29" pos:end="403:37">[<expr pos:start="403:30" pos:end="403:36"><name pos:start="403:30" pos:end="403:36">curidx2</name></expr>]</index></name> <operator pos:start="403:39" pos:end="403:39">+</operator> <name pos:start="403:41" pos:end="403:46">count2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:42"><expr pos:start="405:13" pos:end="405:41"><call pos:start="405:13" pos:end="405:41"><name pos:start="405:13" pos:end="405:20">put_bits</name><argument_list pos:start="405:21" pos:end="405:41">(<argument pos:start="405:22" pos:end="405:23"><expr pos:start="405:22" pos:end="405:23"><name pos:start="405:22" pos:end="405:23">pb</name></expr></argument>, <argument pos:start="405:26" pos:end="405:31"><expr pos:start="405:26" pos:end="405:31"><name pos:start="405:26" pos:end="405:31">v_bits</name></expr></argument>, <argument pos:start="405:34" pos:end="405:40"><expr pos:start="405:34" pos:end="405:40"><name pos:start="405:34" pos:end="405:40">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="409:13" pos:end="417:13"><if pos:start="409:13" pos:end="417:13">if <condition pos:start="409:16" pos:end="409:48">(<expr pos:start="409:17" pos:end="409:47"><name pos:start="409:17" pos:end="409:38"><name pos:start="409:17" pos:end="409:25">p_vectors</name><index pos:start="409:26" pos:end="409:38">[<expr pos:start="409:27" pos:end="409:35"><name pos:start="409:27" pos:end="409:33">curidx2</name><operator pos:start="409:34" pos:end="409:34">*</operator><literal type="number" pos:start="409:35" pos:end="409:35">2</literal></expr>  ]</index></name> <operator pos:start="409:40" pos:end="409:41">==</operator> <literal type="number" pos:start="409:43" pos:end="409:47">64.0f</literal></expr>)</condition> <block pos:start="409:50" pos:end="417:13">{<block_content pos:start="411:17" pos:end="415:50">

                <decl_stmt pos:start="411:17" pos:end="411:38"><decl pos:start="411:17" pos:end="411:37"><type pos:start="411:17" pos:end="411:19"><name pos:start="411:17" pos:end="411:19">int</name></type> <name pos:start="411:21" pos:end="411:23">len</name> <init pos:start="411:25" pos:end="411:37">= <expr pos:start="411:27" pos:end="411:37"><call pos:start="411:27" pos:end="411:37"><name pos:start="411:27" pos:end="411:33">av_log2</name><argument_list pos:start="411:34" pos:end="411:37">(<argument pos:start="411:35" pos:end="411:36"><expr pos:start="411:35" pos:end="411:36"><name pos:start="411:35" pos:end="411:36">c3</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:84"><expr pos:start="413:17" pos:end="413:83"><name pos:start="413:17" pos:end="413:23">v_codes</name> <operator pos:start="413:25" pos:end="413:25">=</operator> <operator pos:start="413:27" pos:end="413:27">(</operator><operator pos:start="413:28" pos:end="413:28">(</operator><operator pos:start="413:29" pos:end="413:29">(</operator><literal type="number" pos:start="413:30" pos:end="413:30">1</literal> <operator pos:start="413:32" pos:end="413:33">&lt;&lt;</operator> <operator pos:start="413:35" pos:end="413:35">(</operator><name pos:start="413:36" pos:end="413:38">len</name> <operator pos:start="413:40" pos:end="413:40">-</operator> <literal type="number" pos:start="413:42" pos:end="413:42">3</literal><operator pos:start="413:43" pos:end="413:43">)</operator><operator pos:start="413:44" pos:end="413:44">)</operator> <operator pos:start="413:46" pos:end="413:46">-</operator> <literal type="number" pos:start="413:48" pos:end="413:48">2</literal><operator pos:start="413:49" pos:end="413:49">)</operator> <operator pos:start="413:51" pos:end="413:52">&lt;&lt;</operator> <name pos:start="413:54" pos:end="413:56">len</name><operator pos:start="413:57" pos:end="413:57">)</operator> <operator pos:start="413:59" pos:end="413:59">|</operator> <operator pos:start="413:61" pos:end="413:61">(</operator><name pos:start="413:62" pos:end="413:63">c3</name> <operator pos:start="413:65" pos:end="413:65">&amp;</operator> <operator pos:start="413:67" pos:end="413:67">(</operator><operator pos:start="413:68" pos:end="413:68">(</operator><literal type="number" pos:start="413:69" pos:end="413:69">1</literal> <operator pos:start="413:71" pos:end="413:72">&lt;&lt;</operator> <name pos:start="413:74" pos:end="413:76">len</name><operator pos:start="413:77" pos:end="413:77">)</operator> <operator pos:start="413:79" pos:end="413:79">-</operator> <literal type="number" pos:start="413:81" pos:end="413:81">1</literal><operator pos:start="413:82" pos:end="413:82">)</operator><operator pos:start="413:83" pos:end="413:83">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:50"><expr pos:start="415:17" pos:end="415:49"><call pos:start="415:17" pos:end="415:49"><name pos:start="415:17" pos:end="415:24">put_bits</name><argument_list pos:start="415:25" pos:end="415:49">(<argument pos:start="415:26" pos:end="415:27"><expr pos:start="415:26" pos:end="415:27"><name pos:start="415:26" pos:end="415:27">pb</name></expr></argument>, <argument pos:start="415:30" pos:end="415:39"><expr pos:start="415:30" pos:end="415:39"><name pos:start="415:30" pos:end="415:32">len</name><operator pos:start="415:33" pos:end="415:33">*</operator> <literal type="number" pos:start="415:35" pos:end="415:37">2</literal> <operator pos:start="415:37" pos:end="415:37">-</operator> <literal type="number" pos:start="415:39" pos:end="415:39">3</literal></expr></argument>, <argument pos:start="415:42" pos:end="415:48"><expr pos:start="415:42" pos:end="415:48"><name pos:start="415:42" pos:end="415:48">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="419:13" pos:end="427:13"><if pos:start="419:13" pos:end="427:13">if <condition pos:start="419:16" pos:end="419:48">(<expr pos:start="419:17" pos:end="419:47"><name pos:start="419:17" pos:end="419:38"><name pos:start="419:17" pos:end="419:25">p_vectors</name><index pos:start="419:26" pos:end="419:38">[<expr pos:start="419:27" pos:end="419:37"><name pos:start="419:27" pos:end="419:33">curidx2</name><operator pos:start="419:34" pos:end="419:34">*</operator><literal type="number" pos:start="419:35" pos:end="419:35">2</literal><operator pos:start="419:36" pos:end="419:36">+</operator><literal type="number" pos:start="419:37" pos:end="419:37">1</literal></expr>]</index></name> <operator pos:start="419:40" pos:end="419:41">==</operator> <literal type="number" pos:start="419:43" pos:end="419:47">64.0f</literal></expr>)</condition> <block pos:start="419:50" pos:end="427:13">{<block_content pos:start="421:17" pos:end="425:51">

                <decl_stmt pos:start="421:17" pos:end="421:38"><decl pos:start="421:17" pos:end="421:37"><type pos:start="421:17" pos:end="421:19"><name pos:start="421:17" pos:end="421:19">int</name></type> <name pos:start="421:21" pos:end="421:23">len</name> <init pos:start="421:25" pos:end="421:37">= <expr pos:start="421:27" pos:end="421:37"><call pos:start="421:27" pos:end="421:37"><name pos:start="421:27" pos:end="421:33">av_log2</name><argument_list pos:start="421:34" pos:end="421:37">(<argument pos:start="421:35" pos:end="421:36"><expr pos:start="421:35" pos:end="421:36"><name pos:start="421:35" pos:end="421:36">c4</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:84"><expr pos:start="423:17" pos:end="423:83"><name pos:start="423:17" pos:end="423:23">v_codes</name> <operator pos:start="423:25" pos:end="423:25">=</operator> <operator pos:start="423:27" pos:end="423:27">(</operator><operator pos:start="423:28" pos:end="423:28">(</operator><operator pos:start="423:29" pos:end="423:29">(</operator><literal type="number" pos:start="423:30" pos:end="423:30">1</literal> <operator pos:start="423:32" pos:end="423:33">&lt;&lt;</operator> <operator pos:start="423:35" pos:end="423:35">(</operator><name pos:start="423:36" pos:end="423:38">len</name> <operator pos:start="423:40" pos:end="423:40">-</operator> <literal type="number" pos:start="423:42" pos:end="423:42">3</literal><operator pos:start="423:43" pos:end="423:43">)</operator><operator pos:start="423:44" pos:end="423:44">)</operator> <operator pos:start="423:46" pos:end="423:46">-</operator> <literal type="number" pos:start="423:48" pos:end="423:48">2</literal><operator pos:start="423:49" pos:end="423:49">)</operator> <operator pos:start="423:51" pos:end="423:52">&lt;&lt;</operator> <name pos:start="423:54" pos:end="423:56">len</name><operator pos:start="423:57" pos:end="423:57">)</operator> <operator pos:start="423:59" pos:end="423:59">|</operator> <operator pos:start="423:61" pos:end="423:61">(</operator><name pos:start="423:62" pos:end="423:63">c4</name> <operator pos:start="423:65" pos:end="423:65">&amp;</operator> <operator pos:start="423:67" pos:end="423:67">(</operator><operator pos:start="423:68" pos:end="423:68">(</operator><literal type="number" pos:start="423:69" pos:end="423:69">1</literal> <operator pos:start="423:71" pos:end="423:72">&lt;&lt;</operator> <name pos:start="423:74" pos:end="423:76">len</name><operator pos:start="423:77" pos:end="423:77">)</operator> <operator pos:start="423:79" pos:end="423:79">-</operator> <literal type="number" pos:start="423:81" pos:end="423:81">1</literal><operator pos:start="423:82" pos:end="423:82">)</operator><operator pos:start="423:83" pos:end="423:83">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:51"><expr pos:start="425:17" pos:end="425:50"><call pos:start="425:17" pos:end="425:50"><name pos:start="425:17" pos:end="425:24">put_bits</name><argument_list pos:start="425:25" pos:end="425:50">(<argument pos:start="425:26" pos:end="425:27"><expr pos:start="425:26" pos:end="425:27"><name pos:start="425:26" pos:end="425:27">pb</name></expr></argument>, <argument pos:start="425:30" pos:end="425:40"><expr pos:start="425:30" pos:end="425:40"><name pos:start="425:30" pos:end="425:32">len</name> <operator pos:start="425:34" pos:end="425:34">*</operator> <literal type="number" pos:start="425:36" pos:end="425:38">2</literal> <operator pos:start="425:38" pos:end="425:38">-</operator> <literal type="number" pos:start="425:40" pos:end="425:40">3</literal></expr></argument>, <argument pos:start="425:43" pos:end="425:49"><expr pos:start="425:43" pos:end="425:49"><name pos:start="425:43" pos:end="425:49">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="431:13" pos:end="445:13"><if pos:start="431:13" pos:end="445:13">if <condition pos:start="431:16" pos:end="431:20">(<expr pos:start="431:17" pos:end="431:19"><name pos:start="431:17" pos:end="431:19">out</name></expr>)</condition> <block pos:start="431:22" pos:end="445:13">{<block_content pos:start="433:16" pos:end="443:66">

               <expr_stmt pos:start="433:16" pos:end="433:43"><expr pos:start="433:16" pos:end="433:42"><name pos:start="433:16" pos:end="433:19">vec1</name> <operator pos:start="433:21" pos:end="433:21">=</operator> <operator pos:start="433:23" pos:end="433:23">&amp;</operator><name pos:start="433:24" pos:end="433:42"><name pos:start="433:24" pos:end="433:32">p_vectors</name><index pos:start="433:33" pos:end="433:42">[<expr pos:start="433:34" pos:end="433:41"><name pos:start="433:34" pos:end="433:39">curidx</name><operator pos:start="433:40" pos:end="433:40">*</operator><literal type="number" pos:start="433:41" pos:end="433:41">2</literal></expr>]</index></name></expr>;</expr_stmt>

               <expr_stmt pos:start="435:16" pos:end="435:44"><expr pos:start="435:16" pos:end="435:43"><name pos:start="435:16" pos:end="435:19">vec2</name> <operator pos:start="435:21" pos:end="435:21">=</operator> <operator pos:start="435:23" pos:end="435:23">&amp;</operator><name pos:start="435:24" pos:end="435:43"><name pos:start="435:24" pos:end="435:32">p_vectors</name><index pos:start="435:33" pos:end="435:43">[<expr pos:start="435:34" pos:end="435:42"><name pos:start="435:34" pos:end="435:40">curidx2</name><operator pos:start="435:41" pos:end="435:41">*</operator><literal type="number" pos:start="435:42" pos:end="435:42">2</literal></expr>]</index></name></expr>;</expr_stmt>

               <expr_stmt pos:start="437:16" pos:end="437:66"><expr pos:start="437:16" pos:end="437:65"><name pos:start="437:16" pos:end="437:23"><name pos:start="437:16" pos:end="437:18">out</name><index pos:start="437:19" pos:end="437:23">[<expr pos:start="437:20" pos:end="437:22"><name pos:start="437:20" pos:end="437:20">i</name><operator pos:start="437:21" pos:end="437:21">+</operator><literal type="number" pos:start="437:22" pos:end="437:22">0</literal></expr>]</index></name> <operator pos:start="437:25" pos:end="437:25">=</operator> <call pos:start="437:27" pos:end="437:65"><name pos:start="437:27" pos:end="437:35">copysignf</name><argument_list pos:start="437:36" pos:end="437:65">(<argument pos:start="437:37" pos:end="437:55"><expr pos:start="437:37" pos:end="437:55"><name pos:start="437:37" pos:end="437:38">c1</name> <operator pos:start="437:40" pos:end="437:40">*</operator> <call pos:start="437:42" pos:end="437:50"><name pos:start="437:42" pos:end="437:46">cbrtf</name><argument_list pos:start="437:47" pos:end="437:50">(<argument pos:start="437:48" pos:end="437:49"><expr pos:start="437:48" pos:end="437:49"><name pos:start="437:48" pos:end="437:49">c1</name></expr></argument>)</argument_list></call> <operator pos:start="437:52" pos:end="437:52">*</operator> <name pos:start="437:54" pos:end="437:55">IQ</name></expr></argument>, <argument pos:start="437:58" pos:end="437:64"><expr pos:start="437:58" pos:end="437:64"><name pos:start="437:58" pos:end="437:64"><name pos:start="437:58" pos:end="437:59">in</name><index pos:start="437:60" pos:end="437:64">[<expr pos:start="437:61" pos:end="437:63"><name pos:start="437:61" pos:end="437:61">i</name><operator pos:start="437:62" pos:end="437:62">+</operator><literal type="number" pos:start="437:63" pos:end="437:63">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <expr_stmt pos:start="439:16" pos:end="439:66"><expr pos:start="439:16" pos:end="439:65"><name pos:start="439:16" pos:end="439:23"><name pos:start="439:16" pos:end="439:18">out</name><index pos:start="439:19" pos:end="439:23">[<expr pos:start="439:20" pos:end="439:22"><name pos:start="439:20" pos:end="439:20">i</name><operator pos:start="439:21" pos:end="439:21">+</operator><literal type="number" pos:start="439:22" pos:end="439:22">1</literal></expr>]</index></name> <operator pos:start="439:25" pos:end="439:25">=</operator> <call pos:start="439:27" pos:end="439:65"><name pos:start="439:27" pos:end="439:35">copysignf</name><argument_list pos:start="439:36" pos:end="439:65">(<argument pos:start="439:37" pos:end="439:55"><expr pos:start="439:37" pos:end="439:55"><name pos:start="439:37" pos:end="439:38">c2</name> <operator pos:start="439:40" pos:end="439:40">*</operator> <call pos:start="439:42" pos:end="439:50"><name pos:start="439:42" pos:end="439:46">cbrtf</name><argument_list pos:start="439:47" pos:end="439:50">(<argument pos:start="439:48" pos:end="439:49"><expr pos:start="439:48" pos:end="439:49"><name pos:start="439:48" pos:end="439:49">c2</name></expr></argument>)</argument_list></call> <operator pos:start="439:52" pos:end="439:52">*</operator> <name pos:start="439:54" pos:end="439:55">IQ</name></expr></argument>, <argument pos:start="439:58" pos:end="439:64"><expr pos:start="439:58" pos:end="439:64"><name pos:start="439:58" pos:end="439:64"><name pos:start="439:58" pos:end="439:59">in</name><index pos:start="439:60" pos:end="439:64">[<expr pos:start="439:61" pos:end="439:63"><name pos:start="439:61" pos:end="439:61">i</name><operator pos:start="439:62" pos:end="439:62">+</operator><literal type="number" pos:start="439:63" pos:end="439:63">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <expr_stmt pos:start="441:16" pos:end="441:66"><expr pos:start="441:16" pos:end="441:65"><name pos:start="441:16" pos:end="441:23"><name pos:start="441:16" pos:end="441:18">out</name><index pos:start="441:19" pos:end="441:23">[<expr pos:start="441:20" pos:end="441:22"><name pos:start="441:20" pos:end="441:20">i</name><operator pos:start="441:21" pos:end="441:21">+</operator><literal type="number" pos:start="441:22" pos:end="441:22">2</literal></expr>]</index></name> <operator pos:start="441:25" pos:end="441:25">=</operator> <call pos:start="441:27" pos:end="441:65"><name pos:start="441:27" pos:end="441:35">copysignf</name><argument_list pos:start="441:36" pos:end="441:65">(<argument pos:start="441:37" pos:end="441:55"><expr pos:start="441:37" pos:end="441:55"><name pos:start="441:37" pos:end="441:38">c3</name> <operator pos:start="441:40" pos:end="441:40">*</operator> <call pos:start="441:42" pos:end="441:50"><name pos:start="441:42" pos:end="441:46">cbrtf</name><argument_list pos:start="441:47" pos:end="441:50">(<argument pos:start="441:48" pos:end="441:49"><expr pos:start="441:48" pos:end="441:49"><name pos:start="441:48" pos:end="441:49">c3</name></expr></argument>)</argument_list></call> <operator pos:start="441:52" pos:end="441:52">*</operator> <name pos:start="441:54" pos:end="441:55">IQ</name></expr></argument>, <argument pos:start="441:58" pos:end="441:64"><expr pos:start="441:58" pos:end="441:64"><name pos:start="441:58" pos:end="441:64"><name pos:start="441:58" pos:end="441:59">in</name><index pos:start="441:60" pos:end="441:64">[<expr pos:start="441:61" pos:end="441:63"><name pos:start="441:61" pos:end="441:61">i</name><operator pos:start="441:62" pos:end="441:62">+</operator><literal type="number" pos:start="441:63" pos:end="441:63">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <expr_stmt pos:start="443:16" pos:end="443:66"><expr pos:start="443:16" pos:end="443:65"><name pos:start="443:16" pos:end="443:23"><name pos:start="443:16" pos:end="443:18">out</name><index pos:start="443:19" pos:end="443:23">[<expr pos:start="443:20" pos:end="443:22"><name pos:start="443:20" pos:end="443:20">i</name><operator pos:start="443:21" pos:end="443:21">+</operator><literal type="number" pos:start="443:22" pos:end="443:22">3</literal></expr>]</index></name> <operator pos:start="443:25" pos:end="443:25">=</operator> <call pos:start="443:27" pos:end="443:65"><name pos:start="443:27" pos:end="443:35">copysignf</name><argument_list pos:start="443:36" pos:end="443:65">(<argument pos:start="443:37" pos:end="443:55"><expr pos:start="443:37" pos:end="443:55"><name pos:start="443:37" pos:end="443:38">c4</name> <operator pos:start="443:40" pos:end="443:40">*</operator> <call pos:start="443:42" pos:end="443:50"><name pos:start="443:42" pos:end="443:46">cbrtf</name><argument_list pos:start="443:47" pos:end="443:50">(<argument pos:start="443:48" pos:end="443:49"><expr pos:start="443:48" pos:end="443:49"><name pos:start="443:48" pos:end="443:49">c4</name></expr></argument>)</argument_list></call> <operator pos:start="443:52" pos:end="443:52">*</operator> <name pos:start="443:54" pos:end="443:55">IQ</name></expr></argument>, <argument pos:start="443:58" pos:end="443:64"><expr pos:start="443:58" pos:end="443:64"><name pos:start="443:58" pos:end="443:64"><name pos:start="443:58" pos:end="443:59">in</name><index pos:start="443:60" pos:end="443:64">[<expr pos:start="443:61" pos:end="443:63"><name pos:start="443:61" pos:end="443:61">i</name><operator pos:start="443:62" pos:end="443:62">+</operator><literal type="number" pos:start="443:63" pos:end="443:63">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
