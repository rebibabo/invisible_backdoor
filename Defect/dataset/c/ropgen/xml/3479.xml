<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3479.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:54"><name pos:start="1:1" pos:end="1:18">iscsi_aio_ioctl_cb</name><argument_list pos:start="1:19" pos:end="3:54">(<argument pos:start="1:20" pos:end="1:46">struct iscsi_context *iscsi</argument>, <argument pos:start="1:49" pos:end="1:58">int status</argument>,

                     <argument pos:start="3:22" pos:end="3:39">void *command_data</argument>, <argument pos:start="3:42" pos:end="3:53">void *opaque</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:53">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IscsiAIOCB</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">acb</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:11">acb</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:21">canceled</name></name></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:24">qemu_aio_release</name><argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:7">acb</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:15">status</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:14">status</name> <operator pos:start="23:16" pos:end="23:16">&lt;</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition> <block pos:start="23:21" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:27">

        <expr_stmt pos:start="25:9" pos:end="27:45"><expr pos:start="25:9" pos:end="27:44"><call pos:start="25:9" pos:end="27:44"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="27:44">(<argument pos:start="25:22" pos:end="25:62"><expr pos:start="25:22" pos:end="25:62"><literal type="string" pos:start="25:22" pos:end="25:62">"Failed to ioctl(SG_IO) to iSCSI lun. %s"</literal></expr></argument>,

                     <argument pos:start="27:22" pos:end="27:43"><expr pos:start="27:22" pos:end="27:43"><call pos:start="27:22" pos:end="27:43"><name pos:start="27:22" pos:end="27:36">iscsi_get_error</name><argument_list pos:start="27:37" pos:end="27:43">(<argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:42">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:11">acb</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:19">status</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">-</operator><name pos:start="29:24" pos:end="29:26">EIO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:32"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:7">acb</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">ioh</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:27">driver_status</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">acb</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:12">ioh</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:25">host_status</name></name>   <operator pos:start="37:29" pos:end="37:29">=</operator> <literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="44:0"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:7">acb</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:12">ioh</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:19">resid</name></name>         <operator pos:start="39:29" pos:end="39:29">=</operator> <literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr>;</expr_stmt>



<cpp:define pos:start="43:1" pos:end="43:35">#<cpp:directive pos:start="43:2" pos:end="43:7">define</cpp:directive> <cpp:macro pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:27">SG_ERR_DRIVER_SENSE</name></cpp:macro>    <cpp:value pos:start="43:32" pos:end="43:35">0x08</cpp:value></cpp:define>



    <if_stmt pos:start="47:5" pos:end="65:5"><if pos:start="47:5" pos:end="65:5">if <condition pos:start="47:8" pos:end="47:77">(<expr pos:start="47:9" pos:end="47:76"><name pos:start="47:9" pos:end="47:14">status</name> <operator pos:start="47:16" pos:end="47:17">==</operator> <name pos:start="47:19" pos:end="47:45">SCSI_STATUS_CHECK_CONDITION</name> <operator pos:start="47:47" pos:end="47:48">&amp;&amp;</operator> <name pos:start="47:50" pos:end="47:71"><name pos:start="47:50" pos:end="47:52">acb</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:58">task</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:66">datain</name><operator pos:start="47:67" pos:end="47:67">.</operator><name pos:start="47:68" pos:end="47:71">size</name></name> <operator pos:start="47:73" pos:end="47:74">&gt;=</operator> <literal type="number" pos:start="47:76" pos:end="47:76">2</literal></expr>)</condition> <block pos:start="47:79" pos:end="65:5">{<block_content pos:start="49:9" pos:end="63:62">

        <decl_stmt pos:start="49:9" pos:end="49:15"><decl pos:start="49:9" pos:end="49:14"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:14">ss</name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:55"><expr pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:11">acb</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">ioh</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:31">driver_status</name></name> <operator pos:start="53:33" pos:end="53:34">|=</operator> <name pos:start="53:36" pos:end="53:54">SG_ERR_DRIVER_SENSE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:57"><expr pos:start="57:9" pos:end="57:56"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:11">acb</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:16">ioh</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:27">sb_len_wr</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:52"><name pos:start="57:31" pos:end="57:33">acb</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:39">task</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:47">datain</name><operator pos:start="57:48" pos:end="57:48">.</operator><name pos:start="57:49" pos:end="57:52">size</name></name> <operator pos:start="57:54" pos:end="57:54">-</operator> <literal type="number" pos:start="57:56" pos:end="57:56">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="61:55"><expr pos:start="59:9" pos:end="61:54"><name pos:start="59:9" pos:end="59:10">ss</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <ternary pos:start="59:14" pos:end="61:54"><condition pos:start="59:14" pos:end="59:59"><expr pos:start="59:14" pos:end="59:57"><operator pos:start="59:14" pos:end="59:14">(</operator><name pos:start="59:15" pos:end="59:33"><name pos:start="59:15" pos:end="59:17">acb</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">ioh</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:33">mx_sb_len</name></name> <operator pos:start="59:35" pos:end="59:36">&gt;=</operator> <name pos:start="59:38" pos:end="59:56"><name pos:start="59:38" pos:end="59:40">acb</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:45">ioh</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:56">sb_len_wr</name></name><operator pos:start="59:57" pos:end="59:57">)</operator></expr> ?</condition><then pos:start="61:14" pos:end="61:32">

             <expr pos:start="61:14" pos:end="61:32"><name pos:start="61:14" pos:end="61:32"><name pos:start="61:14" pos:end="61:16">acb</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:21">ioh</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:32">mx_sb_len</name></name></expr> </then><else pos:start="61:34" pos:end="61:54">: <expr pos:start="61:36" pos:end="61:54"><name pos:start="61:36" pos:end="61:54"><name pos:start="61:36" pos:end="61:38">acb</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:43">ioh</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:54">sb_len_wr</name></name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:62"><expr pos:start="63:9" pos:end="63:61"><call pos:start="63:9" pos:end="63:61"><name pos:start="63:9" pos:end="63:14">memcpy</name><argument_list pos:start="63:15" pos:end="63:61">(<argument pos:start="63:16" pos:end="63:28"><expr pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:18">acb</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:23">ioh</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:28">sbp</name></name></expr></argument>, <argument pos:start="63:31" pos:end="63:56"><expr pos:start="63:31" pos:end="63:56"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:56"><name pos:start="63:32" pos:end="63:34">acb</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:40">task</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:48">datain</name><operator pos:start="63:49" pos:end="63:49">.</operator><name pos:start="63:50" pos:end="63:53">data</name><index pos:start="63:54" pos:end="63:56">[<expr pos:start="63:55" pos:end="63:55"><literal type="number" pos:start="63:55" pos:end="63:55">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:59" pos:end="63:60"><expr pos:start="63:59" pos:end="63:60"><name pos:start="63:59" pos:end="63:60">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:53"><expr pos:start="69:5" pos:end="69:52"><call pos:start="69:5" pos:end="69:52"><name pos:start="69:5" pos:end="69:21">iscsi_schedule_bh</name><argument_list pos:start="69:22" pos:end="69:52">(<argument pos:start="69:23" pos:end="69:46"><expr pos:start="69:23" pos:end="69:46"><name pos:start="69:23" pos:end="69:46">iscsi_readv_writev_bh_cb</name></expr></argument>, <argument pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:51">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
