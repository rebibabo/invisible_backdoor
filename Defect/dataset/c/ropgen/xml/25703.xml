<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25703.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stts</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:27">entries</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">duration</name><init pos:start="11:21" pos:end="11:22">=<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:30">total_sample_count</name><init pos:start="13:31" pos:end="13:32">=<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">get_byte</name><argument_list pos:start="17:13" pos:end="17:16">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:19" pos:end="17:31">/* version */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><call pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">get_be24</name><argument_list pos:start="19:13" pos:end="19:16">(<argument pos:start="19:14" pos:end="19:15"><expr pos:start="19:14" pos:end="19:15"><name pos:start="19:14" pos:end="19:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:19" pos:end="19:29">/* flags */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:11">entries</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:26"><name pos:start="21:15" pos:end="21:22">get_be32</name><argument_list pos:start="21:23" pos:end="21:26">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:82"><expr pos:start="25:5" pos:end="25:81"><call pos:start="25:5" pos:end="25:81"><name pos:start="25:5" pos:end="25:11">dprintf</name><argument_list pos:start="25:12" pos:end="25:81">(<argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">c</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:17">fc</name></name></expr></argument>, <argument pos:start="25:20" pos:end="25:50"><expr pos:start="25:20" pos:end="25:50"><literal type="string" pos:start="25:20" pos:end="25:50">"track[%i].stts.entries = %i\n"</literal></expr></argument>, <argument pos:start="25:53" pos:end="25:71"><expr pos:start="25:53" pos:end="25:71"><name pos:start="25:53" pos:end="25:69"><name pos:start="25:53" pos:end="25:53">c</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:57">fc</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:69">nb_streams</name></name><operator pos:start="25:70" pos:end="25:70">-</operator><literal type="number" pos:start="25:71" pos:end="25:71">1</literal></expr></argument>, <argument pos:start="25:74" pos:end="25:80"><expr pos:start="25:74" pos:end="25:80"><name pos:start="25:74" pos:end="25:80">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if<condition pos:start="29:7" pos:end="29:52">(<expr pos:start="29:8" pos:end="29:51"><name pos:start="29:8" pos:end="29:14">entries</name> <operator pos:start="29:16" pos:end="29:17">&gt;=</operator> <name pos:start="29:19" pos:end="29:26">UINT_MAX</name> <operator pos:start="29:28" pos:end="29:28">/</operator> <sizeof pos:start="29:30" pos:end="29:51">sizeof<argument_list pos:start="29:36" pos:end="29:51">(<argument pos:start="29:37" pos:end="29:50"><expr pos:start="29:37" pos:end="29:50"><operator pos:start="29:37" pos:end="29:37">*</operator><name pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:39">sc</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:50">stts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:64"><expr pos:start="33:5" pos:end="33:63"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">sc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:17">stts_data</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:63"><name pos:start="33:21" pos:end="33:29">av_malloc</name><argument_list pos:start="33:30" pos:end="33:63">(<argument pos:start="33:31" pos:end="33:62"><expr pos:start="33:31" pos:end="33:62"><name pos:start="33:31" pos:end="33:37">entries</name> <operator pos:start="33:39" pos:end="33:39">*</operator> <sizeof pos:start="33:41" pos:end="33:62">sizeof<argument_list pos:start="33:47" pos:end="33:62">(<argument pos:start="33:48" pos:end="33:61"><expr pos:start="33:48" pos:end="33:61"><operator pos:start="33:48" pos:end="33:48">*</operator><name pos:start="33:49" pos:end="33:61"><name pos:start="33:49" pos:end="33:50">sc</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:61">stts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:11">sc</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">stts_data</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:6">sc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:18">stts_count</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:28">entries</name></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="69:5">for<control pos:start="43:8" pos:end="43:28">(<init pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:9">i</name><operator pos:start="43:10" pos:end="43:10">=</operator><literal type="number" pos:start="43:11" pos:end="43:11">0</literal></expr>;</init> <condition pos:start="43:14" pos:end="43:23"><expr pos:start="43:14" pos:end="43:22"><name pos:start="43:14" pos:end="43:14">i</name><operator pos:start="43:15" pos:end="43:15">&lt;</operator><name pos:start="43:16" pos:end="43:22">entries</name></expr>;</condition> <incr pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:25">i</name><operator pos:start="43:26" pos:end="43:27">++</operator></expr></incr>)</control> <block pos:start="43:30" pos:end="69:5">{<block_content pos:start="45:9" pos:end="67:41">

        <decl_stmt pos:start="45:9" pos:end="45:28"><decl pos:start="45:9" pos:end="45:27"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:27">sample_duration</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:25"><decl pos:start="47:9" pos:end="47:24"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:24">sample_count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:20">sample_count</name><operator pos:start="51:21" pos:end="51:21">=</operator><call pos:start="51:22" pos:end="51:33"><name pos:start="51:22" pos:end="51:29">get_be32</name><argument_list pos:start="51:30" pos:end="51:33">(<argument pos:start="51:31" pos:end="51:32"><expr pos:start="51:31" pos:end="51:32"><name pos:start="51:31" pos:end="51:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:23">sample_duration</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:34">get_be32</name><argument_list pos:start="53:35" pos:end="53:38">(<argument pos:start="53:36" pos:end="53:37"><expr pos:start="53:36" pos:end="53:37"><name pos:start="53:36" pos:end="53:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:10">sc</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:21">stts_data</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr>]</index></name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:30">count</name><operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:44">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:10">sc</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:21">stts_data</name><index pos:start="57:22" pos:end="57:24">[<expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">i</name></expr>]</index></name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:33">duration</name><operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:50">sample_duration</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:93"><expr pos:start="61:9" pos:end="61:92"><call pos:start="61:9" pos:end="61:92"><name pos:start="61:9" pos:end="61:15">dprintf</name><argument_list pos:start="61:16" pos:end="61:92">(<argument pos:start="61:17" pos:end="61:21"><expr pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:17">c</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:21">fc</name></name></expr></argument>, <argument pos:start="61:24" pos:end="61:62"><expr pos:start="61:24" pos:end="61:62"><literal type="string" pos:start="61:24" pos:end="61:62">"sample_count=%d, sample_duration=%d\n"</literal></expr></argument>,<argument pos:start="61:64" pos:end="61:75"><expr pos:start="61:64" pos:end="61:75"><name pos:start="61:64" pos:end="61:75">sample_count</name></expr></argument>,<argument pos:start="61:77" pos:end="61:91"><expr pos:start="61:77" pos:end="61:91"><name pos:start="61:77" pos:end="61:91">sample_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:56"><expr pos:start="65:9" pos:end="65:55"><name pos:start="65:9" pos:end="65:16">duration</name><operator pos:start="65:17" pos:end="65:18">+=</operator><operator pos:start="65:19" pos:end="65:19">(</operator><name pos:start="65:20" pos:end="65:26">int64_t</name><operator pos:start="65:27" pos:end="65:27">)</operator><name pos:start="65:28" pos:end="65:42">sample_duration</name><operator pos:start="65:43" pos:end="65:43">*</operator><name pos:start="65:44" pos:end="65:55">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:26">total_sample_count</name><operator pos:start="67:27" pos:end="67:28">+=</operator><name pos:start="67:29" pos:end="67:40">sample_count</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="73:5" pos:end="73:38"><expr pos:start="73:5" pos:end="73:37"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:6">st</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:17">nb_frames</name></name><operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:37">total_sample_count</name></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:31"><if pos:start="75:5" pos:end="77:31">if<condition pos:start="75:7" pos:end="75:16">(<expr pos:start="75:8" pos:end="75:15"><name pos:start="75:8" pos:end="75:15">duration</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:31"><block_content pos:start="77:9" pos:end="77:31">

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:20">duration</name></name><operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:30">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
