<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16971.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">xan_decode_chroma</name><parameter_list pos:start="1:29" pos:end="1:68">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">XanContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">U</name></decl>, <decl pos:start="9:17" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">V</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:23">chroma_off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">val</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">uval</name></decl>, <decl pos:start="13:20" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:23">vval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">src</name></decl>, <decl pos:start="17:25" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:19"><modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:32">src_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:24">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">mode</name></decl>, <decl pos:start="21:15" pos:end="21:20"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:15" pos:end="21:20">offset</name></decl>, <decl pos:start="21:23" pos:end="21:30"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:23" pos:end="21:30">dec_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:14">chroma_off</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:33"><name pos:start="25:18" pos:end="25:24">AV_RL32</name><argument_list pos:start="25:25" pos:end="25:33">(<argument pos:start="25:26" pos:end="25:32"><expr pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:28">buf</name> <operator pos:start="25:30" pos:end="25:30">+</operator> <literal type="number" pos:start="25:32" pos:end="25:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:19">chroma_off</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:39">(<expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:18">chroma_off</name> <operator pos:start="31:20" pos:end="31:20">+</operator> <literal type="number" pos:start="31:22" pos:end="31:23">10</literal> <operator pos:start="31:25" pos:end="31:26">&gt;=</operator> <name pos:start="31:28" pos:end="31:38"><name pos:start="31:28" pos:end="31:32">avpkt</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:38">size</name></name></expr>)</condition> <block pos:start="31:41" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><call pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:70">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:69"><expr pos:start="33:37" pos:end="33:69"><literal type="string" pos:start="33:37" pos:end="33:69">"Invalid chroma block position\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:7">src</name>    <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:24"><name pos:start="39:14" pos:end="39:18">avpkt</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:24">data</name></name> <operator pos:start="39:26" pos:end="39:26">+</operator> <literal type="number" pos:start="39:28" pos:end="39:30">4</literal> <operator pos:start="39:30" pos:end="39:30">+</operator> <name pos:start="39:32" pos:end="39:41">chroma_off</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:21"><expr pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:9">table</name>  <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:16">src</name> <operator pos:start="41:18" pos:end="41:18">+</operator> <literal type="number" pos:start="41:20" pos:end="41:20">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:8">mode</name>   <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:38"><name pos:start="43:14" pos:end="43:32">bytestream_get_le16</name><argument_list pos:start="43:33" pos:end="43:38">(<argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:37">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:10">offset</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:38"><name pos:start="45:14" pos:end="45:32">bytestream_get_le16</name><argument_list pos:start="45:33" pos:end="45:38">(<argument pos:start="45:34" pos:end="45:37"><expr pos:start="45:34" pos:end="45:37"><operator pos:start="45:34" pos:end="45:34">&amp;</operator><name pos:start="45:35" pos:end="45:37">src</name></expr></argument>)</argument_list></call> <operator pos:start="45:40" pos:end="45:40">*</operator> <literal type="number" pos:start="45:42" pos:end="45:42">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:50">(<expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:11">src</name> <operator pos:start="49:13" pos:end="49:13">-</operator> <name pos:start="49:15" pos:end="49:25"><name pos:start="49:15" pos:end="49:19">avpkt</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:25">data</name></name> <operator pos:start="49:27" pos:end="49:28">&gt;=</operator> <name pos:start="49:30" pos:end="49:40"><name pos:start="49:30" pos:end="49:34">avpkt</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">size</name></name> <operator pos:start="49:42" pos:end="49:42">-</operator> <name pos:start="49:44" pos:end="49:49">offset</name></expr>)</condition> <block pos:start="49:52" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:69"><expr pos:start="51:9" pos:end="51:68"><call pos:start="51:9" pos:end="51:68"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:68">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:67"><expr pos:start="51:37" pos:end="51:67"><literal type="string" pos:start="51:37" pos:end="51:67">"Invalid chroma block offset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><call pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:48">(<argument pos:start="59:12" pos:end="59:28"><expr pos:start="59:12" pos:end="59:28"><name pos:start="59:12" pos:end="59:28"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:28">scratch_buffer</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:31"><expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr></argument>, <argument pos:start="59:34" pos:end="59:47"><expr pos:start="59:34" pos:end="59:47"><name pos:start="59:34" pos:end="59:47"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:47">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:70"><expr pos:start="61:5" pos:end="63:69"><name pos:start="61:5" pos:end="61:12">dec_size</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="63:69"><name pos:start="61:16" pos:end="61:25">xan_unpack</name><argument_list pos:start="61:26" pos:end="63:69">(<argument pos:start="61:27" pos:end="61:43"><expr pos:start="61:27" pos:end="61:43"><name pos:start="61:27" pos:end="61:43"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:43">scratch_buffer</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:59"><expr pos:start="61:46" pos:end="61:59"><name pos:start="61:46" pos:end="61:59"><name pos:start="61:46" pos:end="61:46">s</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:59">buffer_size</name></name></expr></argument>, <argument pos:start="61:62" pos:end="61:73"><expr pos:start="61:62" pos:end="61:73"><name pos:start="61:62" pos:end="61:64">src</name> <operator pos:start="61:66" pos:end="61:66">+</operator> <name pos:start="61:68" pos:end="61:73">offset</name></expr></argument>,

                          <argument pos:start="63:27" pos:end="63:68"><expr pos:start="63:27" pos:end="63:68"><name pos:start="63:27" pos:end="63:37"><name pos:start="63:27" pos:end="63:31">avpkt</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:37">size</name></name> <operator pos:start="63:39" pos:end="63:39">-</operator> <name pos:start="63:41" pos:end="63:46">offset</name> <operator pos:start="63:48" pos:end="63:48">-</operator> <operator pos:start="63:50" pos:end="63:50">(</operator><name pos:start="63:51" pos:end="63:53">src</name> <operator pos:start="63:55" pos:end="63:55">-</operator> <name pos:start="63:57" pos:end="63:67"><name pos:start="63:57" pos:end="63:61">avpkt</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:67">data</name></name><operator pos:start="63:68" pos:end="63:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:16">dec_size</name> <operator pos:start="65:18" pos:end="65:18">&lt;</operator> <literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>)</condition> <block pos:start="65:23" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:64">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:63"><expr pos:start="67:37" pos:end="67:63"><literal type="string" pos:start="67:37" pos:end="67:63">"Chroma unpacking failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:5">U</name> <operator pos:start="75:7" pos:end="75:7">=</operator> <name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">pic</name><operator pos:start="75:15" pos:end="75:15">.</operator><name pos:start="75:16" pos:end="75:19">data</name><index pos:start="75:20" pos:end="75:22">[<expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:5">V</name> <operator pos:start="77:7" pos:end="77:7">=</operator> <name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:14">pic</name><operator pos:start="77:15" pos:end="77:15">.</operator><name pos:start="77:16" pos:end="77:19">data</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:32"><expr pos:start="79:5" pos:end="79:31"><name pos:start="79:5" pos:end="79:7">src</name>     <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:31"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:31">scratch_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:11">src_end</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:17">src</name> <operator pos:start="81:19" pos:end="81:19">+</operator> <name pos:start="81:21" pos:end="81:28">dec_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="157:5"><if pos:start="83:5" pos:end="117:5">if <condition pos:start="83:8" pos:end="83:13">(<expr pos:start="83:9" pos:end="83:12"><name pos:start="83:9" pos:end="83:12">mode</name></expr>)</condition> <block pos:start="83:15" pos:end="117:5">{<block_content pos:start="85:9" pos:end="115:9">

        <for pos:start="85:9" pos:end="115:9">for <control pos:start="85:13" pos:end="85:48">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">j</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:43"><expr pos:start="85:21" pos:end="85:42"><name pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:21">j</name> <argument_list type="generic" pos:start="85:23" pos:end="85:39">&lt; <argument pos:start="85:25" pos:end="85:37"><expr pos:start="85:25" pos:end="85:37"><name pos:start="85:25" pos:end="85:37"><name pos:start="85:25" pos:end="85:29">avctx</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:37">height</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="85:40" pos:end="85:40">&gt;</operator> <literal type="number" pos:start="85:42" pos:end="85:42">1</literal></expr>;</condition> <incr pos:start="85:45" pos:end="85:47"><expr pos:start="85:45" pos:end="85:47"><name pos:start="85:45" pos:end="85:45">j</name><operator pos:start="85:46" pos:end="85:47">++</operator></expr></incr>)</control> <block pos:start="85:50" pos:end="115:9">{<block_content pos:start="87:13" pos:end="113:36">

            <for pos:start="87:13" pos:end="109:13">for <control pos:start="87:17" pos:end="87:51">(<init pos:start="87:18" pos:end="87:23"><expr pos:start="87:18" pos:end="87:22"><name pos:start="87:18" pos:end="87:18">i</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</init> <condition pos:start="87:25" pos:end="87:46"><expr pos:start="87:25" pos:end="87:45"><name pos:start="87:25" pos:end="87:42"><name pos:start="87:25" pos:end="87:25">i</name> <argument_list type="generic" pos:start="87:27" pos:end="87:42">&lt; <argument pos:start="87:29" pos:end="87:40"><expr pos:start="87:29" pos:end="87:40"><name pos:start="87:29" pos:end="87:40"><name pos:start="87:29" pos:end="87:33">avctx</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:40">width</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="87:43" pos:end="87:43">&gt;</operator> <literal type="number" pos:start="87:45" pos:end="87:45">1</literal></expr>;</condition> <incr pos:start="87:48" pos:end="87:50"><expr pos:start="87:48" pos:end="87:50"><name pos:start="87:48" pos:end="87:48">i</name><operator pos:start="87:49" pos:end="87:50">++</operator></expr></incr>)</control> <block pos:start="87:53" pos:end="109:13">{<block_content pos:start="89:17" pos:end="107:29">

                <expr_stmt pos:start="89:17" pos:end="89:29"><expr pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:19">val</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <operator pos:start="89:23" pos:end="89:23">*</operator><name pos:start="89:24" pos:end="89:26">src</name><operator pos:start="89:27" pos:end="89:28">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="91:17" pos:end="103:17"><if pos:start="91:17" pos:end="103:17">if <condition pos:start="91:20" pos:end="91:24">(<expr pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">val</name></expr>)</condition> <block pos:start="91:26" pos:end="103:17">{<block_content pos:start="93:21" pos:end="101:46">

                    <expr_stmt pos:start="93:21" pos:end="93:55"><expr pos:start="93:21" pos:end="93:54"><name pos:start="93:21" pos:end="93:23">val</name>  <operator pos:start="93:26" pos:end="93:26">=</operator> <call pos:start="93:28" pos:end="93:54"><name pos:start="93:28" pos:end="93:34">AV_RL16</name><argument_list pos:start="93:35" pos:end="93:54">(<argument pos:start="93:36" pos:end="93:53"><expr pos:start="93:36" pos:end="93:53"><name pos:start="93:36" pos:end="93:40">table</name> <operator pos:start="93:42" pos:end="93:42">+</operator> <operator pos:start="93:44" pos:end="93:44">(</operator><name pos:start="93:45" pos:end="93:47">val</name> <operator pos:start="93:49" pos:end="93:50">&lt;&lt;</operator> <literal type="number" pos:start="93:52" pos:end="93:52">1</literal><operator pos:start="93:53" pos:end="93:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:45"><expr pos:start="95:21" pos:end="95:44"><name pos:start="95:21" pos:end="95:24">uval</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <operator pos:start="95:28" pos:end="95:28">(</operator><name pos:start="95:29" pos:end="95:31">val</name> <operator pos:start="95:33" pos:end="95:34">&gt;&gt;</operator> <literal type="number" pos:start="95:36" pos:end="95:36">3</literal><operator pos:start="95:37" pos:end="95:37">)</operator> <operator pos:start="95:39" pos:end="95:39">&amp;</operator> <literal type="number" pos:start="95:41" pos:end="95:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:45"><expr pos:start="97:21" pos:end="97:44"><name pos:start="97:21" pos:end="97:24">vval</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <operator pos:start="97:28" pos:end="97:28">(</operator><name pos:start="97:29" pos:end="97:31">val</name> <operator pos:start="97:33" pos:end="97:34">&gt;&gt;</operator> <literal type="number" pos:start="97:36" pos:end="97:36">8</literal><operator pos:start="97:37" pos:end="97:37">)</operator> <operator pos:start="97:39" pos:end="97:39">&amp;</operator> <literal type="number" pos:start="97:41" pos:end="97:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:46"><expr pos:start="99:21" pos:end="99:45"><name pos:start="99:21" pos:end="99:24"><name pos:start="99:21" pos:end="99:21">U</name><index pos:start="99:22" pos:end="99:24">[<expr pos:start="99:23" pos:end="99:23"><name pos:start="99:23" pos:end="99:23">i</name></expr>]</index></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:31">uval</name> <operator pos:start="99:33" pos:end="99:33">|</operator> <operator pos:start="99:35" pos:end="99:35">(</operator><name pos:start="99:36" pos:end="99:39">uval</name> <operator pos:start="99:41" pos:end="99:42">&gt;&gt;</operator> <literal type="number" pos:start="99:44" pos:end="99:44">5</literal><operator pos:start="99:45" pos:end="99:45">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:46"><expr pos:start="101:21" pos:end="101:45"><name pos:start="101:21" pos:end="101:24"><name pos:start="101:21" pos:end="101:21">V</name><index pos:start="101:22" pos:end="101:24">[<expr pos:start="101:23" pos:end="101:23"><name pos:start="101:23" pos:end="101:23">i</name></expr>]</index></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:31">vval</name> <operator pos:start="101:33" pos:end="101:33">|</operator> <operator pos:start="101:35" pos:end="101:35">(</operator><name pos:start="101:36" pos:end="101:39">vval</name> <operator pos:start="101:41" pos:end="101:42">&gt;&gt;</operator> <literal type="number" pos:start="101:44" pos:end="101:44">5</literal><operator pos:start="101:45" pos:end="101:45">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="105:17" pos:end="107:29"><if pos:start="105:17" pos:end="107:29">if <condition pos:start="105:20" pos:end="105:35">(<expr pos:start="105:21" pos:end="105:34"><name pos:start="105:21" pos:end="105:23">src</name> <operator pos:start="105:25" pos:end="105:26">==</operator> <name pos:start="105:28" pos:end="105:34">src_end</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:29"><block_content pos:start="107:21" pos:end="107:29">

                    <return pos:start="107:21" pos:end="107:29">return <expr pos:start="107:28" pos:end="107:28"><literal type="number" pos:start="107:28" pos:end="107:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:13">U</name> <operator pos:start="111:15" pos:end="111:16">+=</operator> <name pos:start="111:18" pos:end="111:35"><name pos:start="111:18" pos:end="111:18">s</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:23">pic</name><operator pos:start="111:24" pos:end="111:24">.</operator><name pos:start="111:25" pos:end="111:32">linesize</name><index pos:start="111:33" pos:end="111:35">[<expr pos:start="111:34" pos:end="111:34"><literal type="number" pos:start="111:34" pos:end="111:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:13">V</name> <operator pos:start="113:15" pos:end="113:16">+=</operator> <name pos:start="113:18" pos:end="113:35"><name pos:start="113:18" pos:end="113:18">s</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:23">pic</name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:32">linesize</name><index pos:start="113:33" pos:end="113:35">[<expr pos:start="113:34" pos:end="113:34"><literal type="number" pos:start="113:34" pos:end="113:34">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="157:5">else <block pos:start="117:12" pos:end="157:5">{<block_content pos:start="119:9" pos:end="155:9">

        <decl_stmt pos:start="119:9" pos:end="119:45"><decl pos:start="119:9" pos:end="119:44"><type pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:15">uint8_t</name> <modifier pos:start="119:17" pos:end="119:17">*</modifier></type><name pos:start="119:18" pos:end="119:19">U2</name> <init pos:start="119:21" pos:end="119:44">= <expr pos:start="119:23" pos:end="119:44"><name pos:start="119:23" pos:end="119:23">U</name> <operator pos:start="119:25" pos:end="119:25">+</operator> <name pos:start="119:27" pos:end="119:44"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:32">pic</name><operator pos:start="119:33" pos:end="119:33">.</operator><name pos:start="119:34" pos:end="119:41">linesize</name><index pos:start="119:42" pos:end="119:44">[<expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:45"><decl pos:start="121:9" pos:end="121:44"><type pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:15">uint8_t</name> <modifier pos:start="121:17" pos:end="121:17">*</modifier></type><name pos:start="121:18" pos:end="121:19">V2</name> <init pos:start="121:21" pos:end="121:44">= <expr pos:start="121:23" pos:end="121:44"><name pos:start="121:23" pos:end="121:23">V</name> <operator pos:start="121:25" pos:end="121:25">+</operator> <name pos:start="121:27" pos:end="121:44"><name pos:start="121:27" pos:end="121:27">s</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:32">pic</name><operator pos:start="121:33" pos:end="121:33">.</operator><name pos:start="121:34" pos:end="121:41">linesize</name><index pos:start="121:42" pos:end="121:44">[<expr pos:start="121:43" pos:end="121:43"><literal type="number" pos:start="121:43" pos:end="121:43">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="125:9" pos:end="155:9">for <control pos:start="125:13" pos:end="125:48">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">j</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:43"><expr pos:start="125:21" pos:end="125:42"><name pos:start="125:21" pos:end="125:39"><name pos:start="125:21" pos:end="125:21">j</name> <argument_list type="generic" pos:start="125:23" pos:end="125:39">&lt; <argument pos:start="125:25" pos:end="125:37"><expr pos:start="125:25" pos:end="125:37"><name pos:start="125:25" pos:end="125:37"><name pos:start="125:25" pos:end="125:29">avctx</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:37">height</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="125:40" pos:end="125:40">&gt;</operator> <literal type="number" pos:start="125:42" pos:end="125:42">2</literal></expr>;</condition> <incr pos:start="125:45" pos:end="125:47"><expr pos:start="125:45" pos:end="125:47"><name pos:start="125:45" pos:end="125:45">j</name><operator pos:start="125:46" pos:end="125:47">++</operator></expr></incr>)</control> <block pos:start="125:50" pos:end="155:9">{<block_content pos:start="127:13" pos:end="153:41">

            <for pos:start="127:13" pos:end="145:13">for <control pos:start="127:17" pos:end="127:54">(<init pos:start="127:18" pos:end="127:23"><expr pos:start="127:18" pos:end="127:22"><name pos:start="127:18" pos:end="127:18">i</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr>;</init> <condition pos:start="127:25" pos:end="127:46"><expr pos:start="127:25" pos:end="127:45"><name pos:start="127:25" pos:end="127:42"><name pos:start="127:25" pos:end="127:25">i</name> <argument_list type="generic" pos:start="127:27" pos:end="127:42">&lt; <argument pos:start="127:29" pos:end="127:40"><expr pos:start="127:29" pos:end="127:40"><name pos:start="127:29" pos:end="127:40"><name pos:start="127:29" pos:end="127:33">avctx</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:40">width</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="127:43" pos:end="127:43">&gt;</operator> <literal type="number" pos:start="127:45" pos:end="127:45">1</literal></expr>;</condition> <incr pos:start="127:48" pos:end="127:53"><expr pos:start="127:48" pos:end="127:53"><name pos:start="127:48" pos:end="127:48">i</name> <operator pos:start="127:50" pos:end="127:51">+=</operator> <literal type="number" pos:start="127:53" pos:end="127:53">2</literal></expr></incr>)</control> <block pos:start="127:56" pos:end="145:13">{<block_content pos:start="129:17" pos:end="143:17">

                <expr_stmt pos:start="129:17" pos:end="129:29"><expr pos:start="129:17" pos:end="129:28"><name pos:start="129:17" pos:end="129:19">val</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <operator pos:start="129:23" pos:end="129:23">*</operator><name pos:start="129:24" pos:end="129:26">src</name><operator pos:start="129:27" pos:end="129:28">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="131:17" pos:end="143:17"><if pos:start="131:17" pos:end="143:17">if <condition pos:start="131:20" pos:end="131:24">(<expr pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">val</name></expr>)</condition> <block pos:start="131:26" pos:end="143:17">{<block_content pos:start="133:21" pos:end="141:73">

                    <expr_stmt pos:start="133:21" pos:end="133:55"><expr pos:start="133:21" pos:end="133:54"><name pos:start="133:21" pos:end="133:23">val</name>  <operator pos:start="133:26" pos:end="133:26">=</operator> <call pos:start="133:28" pos:end="133:54"><name pos:start="133:28" pos:end="133:34">AV_RL16</name><argument_list pos:start="133:35" pos:end="133:54">(<argument pos:start="133:36" pos:end="133:53"><expr pos:start="133:36" pos:end="133:53"><name pos:start="133:36" pos:end="133:40">table</name> <operator pos:start="133:42" pos:end="133:42">+</operator> <operator pos:start="133:44" pos:end="133:44">(</operator><name pos:start="133:45" pos:end="133:47">val</name> <operator pos:start="133:49" pos:end="133:50">&lt;&lt;</operator> <literal type="number" pos:start="133:52" pos:end="133:52">1</literal><operator pos:start="133:53" pos:end="133:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:45"><expr pos:start="135:21" pos:end="135:44"><name pos:start="135:21" pos:end="135:24">uval</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <operator pos:start="135:28" pos:end="135:28">(</operator><name pos:start="135:29" pos:end="135:31">val</name> <operator pos:start="135:33" pos:end="135:34">&gt;&gt;</operator> <literal type="number" pos:start="135:36" pos:end="135:36">3</literal><operator pos:start="135:37" pos:end="135:37">)</operator> <operator pos:start="135:39" pos:end="135:39">&amp;</operator> <literal type="number" pos:start="135:41" pos:end="135:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:45"><expr pos:start="137:21" pos:end="137:44"><name pos:start="137:21" pos:end="137:24">vval</name> <operator pos:start="137:26" pos:end="137:26">=</operator> <operator pos:start="137:28" pos:end="137:28">(</operator><name pos:start="137:29" pos:end="137:31">val</name> <operator pos:start="137:33" pos:end="137:34">&gt;&gt;</operator> <literal type="number" pos:start="137:36" pos:end="137:36">8</literal><operator pos:start="137:37" pos:end="137:37">)</operator> <operator pos:start="137:39" pos:end="137:39">&amp;</operator> <literal type="number" pos:start="137:41" pos:end="137:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:73"><expr pos:start="139:21" pos:end="139:72"><name pos:start="139:21" pos:end="139:24"><name pos:start="139:21" pos:end="139:21">U</name><index pos:start="139:22" pos:end="139:24">[<expr pos:start="139:23" pos:end="139:23"><name pos:start="139:23" pos:end="139:23">i</name></expr>]</index></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:33"><name pos:start="139:28" pos:end="139:28">U</name><index pos:start="139:29" pos:end="139:33">[<expr pos:start="139:30" pos:end="139:32"><name pos:start="139:30" pos:end="139:30">i</name><operator pos:start="139:31" pos:end="139:31">+</operator><literal type="number" pos:start="139:32" pos:end="139:32">1</literal></expr>]</index></name> <operator pos:start="139:35" pos:end="139:35">=</operator> <name pos:start="139:37" pos:end="139:41"><name pos:start="139:37" pos:end="139:38">U2</name><index pos:start="139:39" pos:end="139:41">[<expr pos:start="139:40" pos:end="139:40"><name pos:start="139:40" pos:end="139:40">i</name></expr>]</index></name> <operator pos:start="139:43" pos:end="139:43">=</operator> <name pos:start="139:45" pos:end="139:51"><name pos:start="139:45" pos:end="139:46">U2</name><index pos:start="139:47" pos:end="139:51">[<expr pos:start="139:48" pos:end="139:50"><name pos:start="139:48" pos:end="139:48">i</name><operator pos:start="139:49" pos:end="139:49">+</operator><literal type="number" pos:start="139:50" pos:end="139:50">1</literal></expr>]</index></name> <operator pos:start="139:53" pos:end="139:53">=</operator> <name pos:start="139:55" pos:end="139:58">uval</name> <operator pos:start="139:60" pos:end="139:60">|</operator> <operator pos:start="139:62" pos:end="139:62">(</operator><name pos:start="139:63" pos:end="139:66">uval</name> <operator pos:start="139:68" pos:end="139:69">&gt;&gt;</operator> <literal type="number" pos:start="139:71" pos:end="139:71">5</literal><operator pos:start="139:72" pos:end="139:72">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:73"><expr pos:start="141:21" pos:end="141:72"><name pos:start="141:21" pos:end="141:24"><name pos:start="141:21" pos:end="141:21">V</name><index pos:start="141:22" pos:end="141:24">[<expr pos:start="141:23" pos:end="141:23"><name pos:start="141:23" pos:end="141:23">i</name></expr>]</index></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:33"><name pos:start="141:28" pos:end="141:28">V</name><index pos:start="141:29" pos:end="141:33">[<expr pos:start="141:30" pos:end="141:32"><name pos:start="141:30" pos:end="141:30">i</name><operator pos:start="141:31" pos:end="141:31">+</operator><literal type="number" pos:start="141:32" pos:end="141:32">1</literal></expr>]</index></name> <operator pos:start="141:35" pos:end="141:35">=</operator> <name pos:start="141:37" pos:end="141:41"><name pos:start="141:37" pos:end="141:38">V2</name><index pos:start="141:39" pos:end="141:41">[<expr pos:start="141:40" pos:end="141:40"><name pos:start="141:40" pos:end="141:40">i</name></expr>]</index></name> <operator pos:start="141:43" pos:end="141:43">=</operator> <name pos:start="141:45" pos:end="141:51"><name pos:start="141:45" pos:end="141:46">V2</name><index pos:start="141:47" pos:end="141:51">[<expr pos:start="141:48" pos:end="141:50"><name pos:start="141:48" pos:end="141:48">i</name><operator pos:start="141:49" pos:end="141:49">+</operator><literal type="number" pos:start="141:50" pos:end="141:50">1</literal></expr>]</index></name> <operator pos:start="141:53" pos:end="141:53">=</operator> <name pos:start="141:55" pos:end="141:58">vval</name> <operator pos:start="141:60" pos:end="141:60">|</operator> <operator pos:start="141:62" pos:end="141:62">(</operator><name pos:start="141:63" pos:end="141:66">vval</name> <operator pos:start="141:68" pos:end="141:69">&gt;&gt;</operator> <literal type="number" pos:start="141:71" pos:end="141:71">5</literal><operator pos:start="141:72" pos:end="141:72">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="147:13" pos:end="147:41"><expr pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:13">U</name>  <operator pos:start="147:16" pos:end="147:17">+=</operator> <name pos:start="147:19" pos:end="147:36"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:24">pic</name><operator pos:start="147:25" pos:end="147:25">.</operator><name pos:start="147:26" pos:end="147:33">linesize</name><index pos:start="147:34" pos:end="147:36">[<expr pos:start="147:35" pos:end="147:35"><literal type="number" pos:start="147:35" pos:end="147:35">1</literal></expr>]</index></name> <operator pos:start="147:38" pos:end="147:38">*</operator> <literal type="number" pos:start="147:40" pos:end="147:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:41"><expr pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:13">V</name>  <operator pos:start="149:16" pos:end="149:17">+=</operator> <name pos:start="149:19" pos:end="149:36"><name pos:start="149:19" pos:end="149:19">s</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:24">pic</name><operator pos:start="149:25" pos:end="149:25">.</operator><name pos:start="149:26" pos:end="149:33">linesize</name><index pos:start="149:34" pos:end="149:36">[<expr pos:start="149:35" pos:end="149:35"><literal type="number" pos:start="149:35" pos:end="149:35">2</literal></expr>]</index></name> <operator pos:start="149:38" pos:end="149:38">*</operator> <literal type="number" pos:start="149:40" pos:end="149:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:41"><expr pos:start="151:13" pos:end="151:40"><name pos:start="151:13" pos:end="151:14">U2</name> <operator pos:start="151:16" pos:end="151:17">+=</operator> <name pos:start="151:19" pos:end="151:36"><name pos:start="151:19" pos:end="151:19">s</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:24">pic</name><operator pos:start="151:25" pos:end="151:25">.</operator><name pos:start="151:26" pos:end="151:33">linesize</name><index pos:start="151:34" pos:end="151:36">[<expr pos:start="151:35" pos:end="151:35"><literal type="number" pos:start="151:35" pos:end="151:35">1</literal></expr>]</index></name> <operator pos:start="151:38" pos:end="151:38">*</operator> <literal type="number" pos:start="151:40" pos:end="151:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:41"><expr pos:start="153:13" pos:end="153:40"><name pos:start="153:13" pos:end="153:14">V2</name> <operator pos:start="153:16" pos:end="153:17">+=</operator> <name pos:start="153:19" pos:end="153:36"><name pos:start="153:19" pos:end="153:19">s</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:24">pic</name><operator pos:start="153:25" pos:end="153:25">.</operator><name pos:start="153:26" pos:end="153:33">linesize</name><index pos:start="153:34" pos:end="153:36">[<expr pos:start="153:35" pos:end="153:35"><literal type="number" pos:start="153:35" pos:end="153:35">2</literal></expr>]</index></name> <operator pos:start="153:38" pos:end="153:38">*</operator> <literal type="number" pos:start="153:40" pos:end="153:40">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
