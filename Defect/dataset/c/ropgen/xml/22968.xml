<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22968.c" pos:tabs="8"><function pos:start="1:1" pos:end="112:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">imc_decode_block</name><parameter_list pos:start="1:28" pos:end="1:73">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:61">IMCContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">q</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:72"><decl pos:start="1:67" pos:end="1:72"><type pos:start="1:67" pos:end="1:72"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:72">ch</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="112:13">{<block_content pos:start="3:5" pos:end="112:13">
    <decl_stmt pos:start="3:5" pos:end="3:27"><decl pos:start="3:5" pos:end="3:26"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:26">stream_format_code</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:27"><decl pos:start="4:5" pos:end="4:15"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:15">imc_hdr</name></decl>, <decl pos:start="4:18" pos:end="4:18"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:18" pos:end="4:18">i</name></decl>, <decl pos:start="4:21" pos:end="4:21"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:21" pos:end="4:21">j</name></decl>, <decl pos:start="4:24" pos:end="4:26"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:24" pos:end="4:26">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">flag</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:12">bits</name></decl>, <decl pos:start="6:15" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:15" pos:end="6:20">summer</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">counter</name></decl>, <decl pos:start="7:18" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:26">bitscount</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:38"><decl pos:start="8:5" pos:end="8:37"><type pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:14">IMCChannel</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:21">chctx</name> <init pos:start="8:23" pos:end="8:37">= <expr pos:start="8:25" pos:end="8:37"><name pos:start="8:25" pos:end="8:32"><name pos:start="8:25" pos:end="8:25">q</name><operator pos:start="8:26" pos:end="8:27">-&gt;</operator><name pos:start="8:28" pos:end="8:32">chctx</name></name> <operator pos:start="8:34" pos:end="8:34">+</operator> <name pos:start="8:36" pos:end="8:37">ch</name></expr></init></decl>;</decl_stmt>
    <comment type="block" pos:start="9:5" pos:end="9:32">/* Check the frame header */</comment>
    <expr_stmt pos:start="10:5" pos:end="10:34"><expr pos:start="10:5" pos:end="10:33"><name pos:start="10:5" pos:end="10:11">imc_hdr</name> <operator pos:start="10:13" pos:end="10:13">=</operator> <call pos:start="10:15" pos:end="10:33"><name pos:start="10:15" pos:end="10:22">get_bits</name><argument_list pos:start="10:23" pos:end="10:33">(<argument pos:start="10:24" pos:end="10:29"><expr pos:start="10:24" pos:end="10:29"><operator pos:start="10:24" pos:end="10:24">&amp;</operator><name pos:start="10:25" pos:end="10:29"><name pos:start="10:25" pos:end="10:25">q</name><operator pos:start="10:26" pos:end="10:27">-&gt;</operator><name pos:start="10:28" pos:end="10:29">gb</name></name></expr></argument>, <argument pos:start="10:32" pos:end="10:32"><expr pos:start="10:32" pos:end="10:32"><literal type="number" pos:start="10:32" pos:end="10:32">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="112:13"><if pos:start="11:5" pos:end="112:13">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:15">imc_hdr</name> <operator pos:start="11:17" pos:end="11:17">&amp;</operator> <literal type="number" pos:start="11:19" pos:end="11:22">0x18</literal></expr>)</condition> <block pos:start="11:25" pos:end="112:13">{<block_content pos:start="12:9" pos:end="112:13">
        <expr_stmt pos:start="12:9" pos:end="12:68"><expr pos:start="12:9" pos:end="12:67"><call pos:start="12:9" pos:end="12:67"><name pos:start="12:9" pos:end="12:14">av_log</name><argument_list pos:start="12:15" pos:end="12:67">(<argument pos:start="12:16" pos:end="12:20"><expr pos:start="12:16" pos:end="12:20"><name pos:start="12:16" pos:end="12:20">avctx</name></expr></argument>, <argument pos:start="12:23" pos:end="12:34"><expr pos:start="12:23" pos:end="12:34"><name pos:start="12:23" pos:end="12:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="12:37" pos:end="12:66"><expr pos:start="12:37" pos:end="12:66"><literal type="string" pos:start="12:37" pos:end="12:66">"frame header check failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:58"><expr pos:start="13:9" pos:end="13:57"><call pos:start="13:9" pos:end="13:57"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:57">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:47"><expr pos:start="13:37" pos:end="13:47"><literal type="string" pos:start="13:37" pos:end="13:47">"got %X.\n"</literal></expr></argument>, <argument pos:start="13:50" pos:end="13:56"><expr pos:start="13:50" pos:end="13:56"><name pos:start="13:50" pos:end="13:56">imc_hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:45"><expr pos:start="14:5" pos:end="14:44"><name pos:start="14:5" pos:end="14:22">stream_format_code</name> <operator pos:start="14:24" pos:end="14:24">=</operator> <call pos:start="14:26" pos:end="14:44"><name pos:start="14:26" pos:end="14:33">get_bits</name><argument_list pos:start="14:34" pos:end="14:44">(<argument pos:start="14:35" pos:end="14:40"><expr pos:start="14:35" pos:end="14:40"><operator pos:start="14:35" pos:end="14:35">&amp;</operator><name pos:start="14:36" pos:end="14:40"><name pos:start="14:36" pos:end="14:36">q</name><operator pos:start="14:37" pos:end="14:38">-&gt;</operator><name pos:start="14:39" pos:end="14:40">gb</name></name></expr></argument>, <argument pos:start="14:43" pos:end="14:43"><expr pos:start="14:43" pos:end="14:43"><literal type="number" pos:start="14:43" pos:end="14:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="112:13"><if pos:start="15:5" pos:end="112:13">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:26">stream_format_code</name> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <literal type="number" pos:start="15:30" pos:end="15:30">1</literal></expr>)</condition> <block pos:start="15:33" pos:end="112:13">{<block_content pos:start="16:9" pos:end="112:13">
        <expr_stmt pos:start="16:9" pos:end="17:50"><expr pos:start="16:9" pos:end="17:49"><call pos:start="16:9" pos:end="17:49"><name pos:start="16:9" pos:end="16:29">av_log_ask_for_sample</name><argument_list pos:start="16:30" pos:end="17:49">(<argument pos:start="16:31" pos:end="16:35"><expr pos:start="16:31" pos:end="16:35"><name pos:start="16:31" pos:end="16:35">avctx</name></expr></argument>, <argument pos:start="16:38" pos:end="16:74"><expr pos:start="16:38" pos:end="16:74"><literal type="string" pos:start="16:38" pos:end="16:74">"Stream format %X is not supported\n"</literal></expr></argument>,
                              <argument pos:start="17:31" pos:end="17:48"><expr pos:start="17:31" pos:end="17:48"><name pos:start="17:31" pos:end="17:48">stream_format_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="18:9" pos:end="18:36">return <expr pos:start="18:16" pos:end="18:35"><name pos:start="18:16" pos:end="18:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <if_stmt pos:start="19:5" pos:end="20:33"><if pos:start="19:5" pos:end="20:33">if <condition pos:start="19:8" pos:end="19:34">(<expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:26">stream_format_code</name> <operator pos:start="19:28" pos:end="19:28">&amp;</operator> <literal type="number" pos:start="19:30" pos:end="19:33">0x04</literal></expr>)</condition><block type="pseudo" pos:start="20:9" pos:end="20:33"><block_content pos:start="20:9" pos:end="20:33">
        <expr_stmt pos:start="20:9" pos:end="20:33"><expr pos:start="20:9" pos:end="20:32"><name pos:start="20:9" pos:end="20:28"><name pos:start="20:9" pos:end="20:13">chctx</name><operator pos:start="20:14" pos:end="20:15">-&gt;</operator><name pos:start="20:16" pos:end="20:28">decoder_reset</name></name> <operator pos:start="20:30" pos:end="20:30">=</operator> <literal type="number" pos:start="20:32" pos:end="20:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="21:5" pos:end="112:13"><if pos:start="21:5" pos:end="112:13">if <condition pos:start="21:8" pos:end="21:29">(<expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:13">chctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:28">decoder_reset</name></name></expr>)</condition> <block pos:start="21:31" pos:end="112:13">{<block_content pos:start="22:9" pos:end="112:13">
        <for pos:start="22:9" pos:end="23:38">for <control pos:start="22:13" pos:end="22:35">(<init pos:start="22:14" pos:end="22:19"><expr pos:start="22:14" pos:end="22:18"><name pos:start="22:14" pos:end="22:14">i</name> <operator pos:start="22:16" pos:end="22:16">=</operator> <literal type="number" pos:start="22:18" pos:end="22:18">0</literal></expr>;</init> <condition pos:start="22:21" pos:end="22:30"><expr pos:start="22:21" pos:end="22:29"><name pos:start="22:21" pos:end="22:21">i</name> <operator pos:start="22:23" pos:end="22:23">&lt;</operator> <name pos:start="22:25" pos:end="22:29">BANDS</name></expr>;</condition> <incr pos:start="22:32" pos:end="22:34"><expr pos:start="22:32" pos:end="22:34"><name pos:start="22:32" pos:end="22:32">i</name><operator pos:start="22:33" pos:end="22:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:13" pos:end="23:38"><block_content pos:start="23:13" pos:end="23:38">
            <expr_stmt pos:start="23:13" pos:end="23:38"><expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:31"><name pos:start="23:13" pos:end="23:17">chctx</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">old_floor</name><index pos:start="23:29" pos:end="23:31">[<expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">i</name></expr>]</index></name> <operator pos:start="23:33" pos:end="23:33">=</operator> <literal type="number" pos:start="23:35" pos:end="23:37">1.0</literal></expr>;</expr_stmt></block_content></block></for>
        <for pos:start="24:9" pos:end="25:36">for <control pos:start="24:13" pos:end="24:36">(<init pos:start="24:14" pos:end="24:19"><expr pos:start="24:14" pos:end="24:18"><name pos:start="24:14" pos:end="24:14">i</name> <operator pos:start="24:16" pos:end="24:16">=</operator> <literal type="number" pos:start="24:18" pos:end="24:18">0</literal></expr>;</init> <condition pos:start="24:21" pos:end="24:31"><expr pos:start="24:21" pos:end="24:30"><name pos:start="24:21" pos:end="24:21">i</name> <operator pos:start="24:23" pos:end="24:23">&lt;</operator> <name pos:start="24:25" pos:end="24:30">COEFFS</name></expr>;</condition> <incr pos:start="24:33" pos:end="24:35"><expr pos:start="24:33" pos:end="24:35"><name pos:start="24:33" pos:end="24:33">i</name><operator pos:start="24:34" pos:end="24:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:13" pos:end="25:36"><block_content pos:start="25:13" pos:end="25:36">
            <expr_stmt pos:start="25:13" pos:end="25:36"><expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:17">chctx</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:28">CWdecoded</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">i</name></expr>]</index></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="26:9" pos:end="26:33"><expr pos:start="26:9" pos:end="26:32"><name pos:start="26:9" pos:end="26:28"><name pos:start="26:9" pos:end="26:13">chctx</name><operator pos:start="26:14" pos:end="26:15">-&gt;</operator><name pos:start="26:16" pos:end="26:28">decoder_reset</name></name> <operator pos:start="26:30" pos:end="26:30">=</operator> <literal type="number" pos:start="26:32" pos:end="26:32">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:8">flag</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:28"><name pos:start="27:12" pos:end="27:20">get_bits1</name><argument_list pos:start="27:21" pos:end="27:28">(<argument pos:start="27:22" pos:end="27:27"><expr pos:start="27:22" pos:end="27:27"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:23">q</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:70"><expr pos:start="28:5" pos:end="28:69"><call pos:start="28:5" pos:end="28:69"><name pos:start="28:5" pos:end="28:25">imc_read_level_coeffs</name><argument_list pos:start="28:26" pos:end="28:69">(<argument pos:start="28:27" pos:end="28:27"><expr pos:start="28:27" pos:end="28:27"><name pos:start="28:27" pos:end="28:27">q</name></expr></argument>, <argument pos:start="28:30" pos:end="28:47"><expr pos:start="28:30" pos:end="28:47"><name pos:start="28:30" pos:end="28:47">stream_format_code</name></expr></argument>, <argument pos:start="28:50" pos:end="28:68"><expr pos:start="28:50" pos:end="28:68"><name pos:start="28:50" pos:end="28:68"><name pos:start="28:50" pos:end="28:54">chctx</name><operator pos:start="28:55" pos:end="28:56">-&gt;</operator><name pos:start="28:57" pos:end="28:68">levlCoeffBuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="29:5" pos:end="34:75"><if pos:start="29:5" pos:end="31:74">if <condition pos:start="29:8" pos:end="29:33">(<expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:26">stream_format_code</name> <operator pos:start="29:28" pos:end="29:28">&amp;</operator> <literal type="number" pos:start="29:30" pos:end="29:32">0x4</literal></expr>)</condition><block type="pseudo" pos:start="30:9" pos:end="31:74"><block_content pos:start="30:9" pos:end="31:74">
        <expr_stmt pos:start="30:9" pos:end="31:74"><expr pos:start="30:9" pos:end="31:73"><call pos:start="30:9" pos:end="31:73"><name pos:start="30:9" pos:end="30:37">imc_decode_level_coefficients</name><argument_list pos:start="30:38" pos:end="31:73">(<argument pos:start="30:39" pos:end="30:39"><expr pos:start="30:39" pos:end="30:39"><name pos:start="30:39" pos:end="30:39">q</name></expr></argument>, <argument pos:start="30:42" pos:end="30:60"><expr pos:start="30:42" pos:end="30:60"><name pos:start="30:42" pos:end="30:60"><name pos:start="30:42" pos:end="30:46">chctx</name><operator pos:start="30:47" pos:end="30:48">-&gt;</operator><name pos:start="30:49" pos:end="30:60">levlCoeffBuf</name></name></expr></argument>,
                                      <argument pos:start="31:39" pos:end="31:54"><expr pos:start="31:39" pos:end="31:54"><name pos:start="31:39" pos:end="31:54"><name pos:start="31:39" pos:end="31:43">chctx</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:54">flcoeffs1</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:72"><expr pos:start="31:57" pos:end="31:72"><name pos:start="31:57" pos:end="31:72"><name pos:start="31:57" pos:end="31:61">chctx</name><operator pos:start="31:62" pos:end="31:63">-&gt;</operator><name pos:start="31:64" pos:end="31:72">flcoeffs2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="32:5" pos:end="34:75">else<block type="pseudo" pos:start="33:9" pos:end="34:75"><block_content pos:start="33:9" pos:end="34:75">
        <expr_stmt pos:start="33:9" pos:end="34:75"><expr pos:start="33:9" pos:end="34:74"><call pos:start="33:9" pos:end="34:74"><name pos:start="33:9" pos:end="33:38">imc_decode_level_coefficients2</name><argument_list pos:start="33:39" pos:end="34:74">(<argument pos:start="33:40" pos:end="33:40"><expr pos:start="33:40" pos:end="33:40"><name pos:start="33:40" pos:end="33:40">q</name></expr></argument>, <argument pos:start="33:43" pos:end="33:61"><expr pos:start="33:43" pos:end="33:61"><name pos:start="33:43" pos:end="33:61"><name pos:start="33:43" pos:end="33:47">chctx</name><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:61">levlCoeffBuf</name></name></expr></argument>, <argument pos:start="33:64" pos:end="33:79"><expr pos:start="33:64" pos:end="33:79"><name pos:start="33:64" pos:end="33:79"><name pos:start="33:64" pos:end="33:68">chctx</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:79">old_floor</name></name></expr></argument>,
                                       <argument pos:start="34:40" pos:end="34:55"><expr pos:start="34:40" pos:end="34:55"><name pos:start="34:40" pos:end="34:55"><name pos:start="34:40" pos:end="34:44">chctx</name><operator pos:start="34:45" pos:end="34:46">-&gt;</operator><name pos:start="34:47" pos:end="34:55">flcoeffs1</name></name></expr></argument>, <argument pos:start="34:58" pos:end="34:73"><expr pos:start="34:58" pos:end="34:73"><name pos:start="34:58" pos:end="34:73"><name pos:start="34:58" pos:end="34:62">chctx</name><operator pos:start="34:63" pos:end="34:64">-&gt;</operator><name pos:start="34:65" pos:end="34:73">flcoeffs2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:67"><expr pos:start="35:5" pos:end="35:66"><call pos:start="35:5" pos:end="35:66"><name pos:start="35:5" pos:end="35:10">memcpy</name><argument_list pos:start="35:11" pos:end="35:66">(<argument pos:start="35:12" pos:end="35:27"><expr pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:16">chctx</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:27">old_floor</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:45"><expr pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:34">chctx</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:45">flcoeffs1</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:65"><expr pos:start="35:48" pos:end="35:65"><literal type="number" pos:start="35:48" pos:end="35:49">32</literal> <operator pos:start="35:51" pos:end="35:51">*</operator> <sizeof pos:start="35:53" pos:end="35:65">sizeof<argument_list pos:start="35:59" pos:end="35:65">(<argument pos:start="35:60" pos:end="35:64"><expr pos:start="35:60" pos:end="35:64"><name pos:start="35:60" pos:end="35:64">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:16"><expr pos:start="36:5" pos:end="36:15"><name pos:start="36:5" pos:end="36:11">counter</name> <operator pos:start="36:13" pos:end="36:13">=</operator> <literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr>;</expr_stmt>
    <for pos:start="37:5" pos:end="112:13">for <control pos:start="37:9" pos:end="37:31">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:26"><expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:25">BANDS</name></expr>;</condition> <incr pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:28">i</name><operator pos:start="37:29" pos:end="37:30">++</operator></expr></incr>)</control> <block pos:start="37:33" pos:end="112:13">{<block_content pos:start="38:9" pos:end="112:13">
        <if_stmt pos:start="38:9" pos:end="42:65"><if pos:start="38:9" pos:end="41:9">if <condition pos:start="38:12" pos:end="38:41">(<expr pos:start="38:13" pos:end="38:40"><name pos:start="38:13" pos:end="38:34"><name pos:start="38:13" pos:end="38:17">chctx</name><operator pos:start="38:18" pos:end="38:19">-&gt;</operator><name pos:start="38:20" pos:end="38:31">levlCoeffBuf</name><index pos:start="38:32" pos:end="38:34">[<expr pos:start="38:33" pos:end="38:33"><name pos:start="38:33" pos:end="38:33">i</name></expr>]</index></name> <operator pos:start="38:36" pos:end="38:37">==</operator> <literal type="number" pos:start="38:39" pos:end="38:40">16</literal></expr>)</condition> <block pos:start="38:43" pos:end="41:9">{<block_content pos:start="39:13" pos:end="40:22">
            <expr_stmt pos:start="39:13" pos:end="39:37"><expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:17">chctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:29">bandWidthT</name><index pos:start="39:30" pos:end="39:32">[<expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">i</name></expr>]</index></name> <operator pos:start="39:34" pos:end="39:34">=</operator> <literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="40:13" pos:end="40:22"><expr pos:start="40:13" pos:end="40:21"><name pos:start="40:13" pos:end="40:19">counter</name><operator pos:start="40:20" pos:end="40:21">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="41:11" pos:end="42:65">else<block type="pseudo" pos:start="42:13" pos:end="42:65"><block_content pos:start="42:13" pos:end="42:65">
            <expr_stmt pos:start="42:13" pos:end="42:65"><expr pos:start="42:13" pos:end="42:64"><name pos:start="42:13" pos:end="42:32"><name pos:start="42:13" pos:end="42:17">chctx</name><operator pos:start="42:18" pos:end="42:19">-&gt;</operator><name pos:start="42:20" pos:end="42:29">bandWidthT</name><index pos:start="42:30" pos:end="42:32">[<expr pos:start="42:31" pos:end="42:31"><name pos:start="42:31" pos:end="42:31">i</name></expr>]</index></name> <operator pos:start="42:34" pos:end="42:34">=</operator> <name pos:start="42:36" pos:end="42:50"><name pos:start="42:36" pos:end="42:43">band_tab</name><index pos:start="42:44" pos:end="42:50">[<expr pos:start="42:45" pos:end="42:49"><name pos:start="42:45" pos:end="42:45">i</name> <operator pos:start="42:47" pos:end="42:47">+</operator> <literal type="number" pos:start="42:49" pos:end="42:49">1</literal></expr>]</index></name> <operator pos:start="42:52" pos:end="42:52">-</operator> <name pos:start="42:54" pos:end="42:64"><name pos:start="42:54" pos:end="42:61">band_tab</name><index pos:start="42:62" pos:end="42:64">[<expr pos:start="42:63" pos:end="42:63"><name pos:start="42:63" pos:end="42:63">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:56"><expr pos:start="43:5" pos:end="43:55"><call pos:start="43:5" pos:end="43:55"><name pos:start="43:5" pos:end="43:10">memset</name><argument_list pos:start="43:11" pos:end="43:55">(<argument pos:start="43:12" pos:end="43:30"><expr pos:start="43:12" pos:end="43:30"><name pos:start="43:12" pos:end="43:30"><name pos:start="43:12" pos:end="43:16">chctx</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:30">bandFlagsBuf</name></name></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:54"><expr pos:start="43:36" pos:end="43:54"><name pos:start="43:36" pos:end="43:40">BANDS</name> <operator pos:start="43:42" pos:end="43:42">*</operator> <sizeof pos:start="43:44" pos:end="43:54">sizeof<argument_list pos:start="43:50" pos:end="43:54">(<argument pos:start="43:51" pos:end="43:53"><expr pos:start="43:51" pos:end="43:53"><name pos:start="43:51" pos:end="43:53">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="44:5" pos:end="112:13">for <control pos:start="44:9" pos:end="44:35">(<init pos:start="44:10" pos:end="44:15"><expr pos:start="44:10" pos:end="44:14"><name pos:start="44:10" pos:end="44:10">i</name> <operator pos:start="44:12" pos:end="44:12">=</operator> <literal type="number" pos:start="44:14" pos:end="44:14">0</literal></expr>;</init> <condition pos:start="44:17" pos:end="44:30"><expr pos:start="44:17" pos:end="44:29"><name pos:start="44:17" pos:end="44:17">i</name> <operator pos:start="44:19" pos:end="44:19">&lt;</operator> <name pos:start="44:21" pos:end="44:25">BANDS</name> <operator pos:start="44:27" pos:end="44:27">-</operator> <literal type="number" pos:start="44:29" pos:end="44:29">1</literal></expr>;</condition> <incr pos:start="44:32" pos:end="44:34"><expr pos:start="44:32" pos:end="44:34"><name pos:start="44:32" pos:end="44:32">i</name><operator pos:start="44:33" pos:end="44:34">++</operator></expr></incr>)</control> <block pos:start="44:37" pos:end="112:13">{<block_content pos:start="45:9" pos:end="112:13">
        <if_stmt pos:start="45:9" pos:end="46:55"><if pos:start="45:9" pos:end="46:55">if <condition pos:start="45:12" pos:end="45:33">(<expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:17">chctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">bandWidthT</name><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="46:13" pos:end="46:55"><block_content pos:start="46:13" pos:end="46:55">
            <expr_stmt pos:start="46:13" pos:end="46:55"><expr pos:start="46:13" pos:end="46:54"><name pos:start="46:13" pos:end="46:34"><name pos:start="46:13" pos:end="46:17">chctx</name><operator pos:start="46:18" pos:end="46:19">-&gt;</operator><name pos:start="46:20" pos:end="46:31">bandFlagsBuf</name><index pos:start="46:32" pos:end="46:34">[<expr pos:start="46:33" pos:end="46:33"><name pos:start="46:33" pos:end="46:33">i</name></expr>]</index></name> <operator pos:start="46:36" pos:end="46:36">=</operator> <call pos:start="46:38" pos:end="46:54"><name pos:start="46:38" pos:end="46:46">get_bits1</name><argument_list pos:start="46:47" pos:end="46:54">(<argument pos:start="46:48" pos:end="46:53"><expr pos:start="46:48" pos:end="46:53"><operator pos:start="46:48" pos:end="46:48">&amp;</operator><name pos:start="46:49" pos:end="46:53"><name pos:start="46:49" pos:end="46:49">q</name><operator pos:start="46:50" pos:end="46:51">-&gt;</operator><name pos:start="46:52" pos:end="46:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:119"><expr pos:start="47:5" pos:end="47:118"><call pos:start="47:5" pos:end="47:118"><name pos:start="47:5" pos:end="47:24">imc_calculate_coeffs</name><argument_list pos:start="47:25" pos:end="47:118">(<argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">q</name></expr></argument>, <argument pos:start="47:29" pos:end="47:44"><expr pos:start="47:29" pos:end="47:44"><name pos:start="47:29" pos:end="47:44"><name pos:start="47:29" pos:end="47:33">chctx</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:44">flcoeffs1</name></name></expr></argument>, <argument pos:start="47:47" pos:end="47:62"><expr pos:start="47:47" pos:end="47:62"><name pos:start="47:47" pos:end="47:62"><name pos:start="47:47" pos:end="47:51">chctx</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:62">flcoeffs2</name></name></expr></argument>, <argument pos:start="47:65" pos:end="47:81"><expr pos:start="47:65" pos:end="47:81"><name pos:start="47:65" pos:end="47:81"><name pos:start="47:65" pos:end="47:69">chctx</name><operator pos:start="47:70" pos:end="47:71">-&gt;</operator><name pos:start="47:72" pos:end="47:81">bandWidthT</name></name></expr></argument>, <argument pos:start="47:84" pos:end="47:99"><expr pos:start="47:84" pos:end="47:99"><name pos:start="47:84" pos:end="47:99"><name pos:start="47:84" pos:end="47:88">chctx</name><operator pos:start="47:89" pos:end="47:90">-&gt;</operator><name pos:start="47:91" pos:end="47:99">flcoeffs3</name></name></expr></argument>, <argument pos:start="47:102" pos:end="47:117"><expr pos:start="47:102" pos:end="47:117"><name pos:start="47:102" pos:end="47:117"><name pos:start="47:102" pos:end="47:106">chctx</name><operator pos:start="47:107" pos:end="47:108">-&gt;</operator><name pos:start="47:109" pos:end="47:117">flcoeffs5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:18"><expr pos:start="48:5" pos:end="48:17"><name pos:start="48:5" pos:end="48:13">bitscount</name> <operator pos:start="48:15" pos:end="48:15">=</operator> <literal type="number" pos:start="48:17" pos:end="48:17">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="49:5" pos:end="49:63">/* first 4 bands will be assigned 5 bits per coefficient */</comment>
    <if_stmt pos:start="50:5" pos:end="112:13"><if pos:start="50:5" pos:end="112:13">if <condition pos:start="50:8" pos:end="50:33">(<expr pos:start="50:9" pos:end="50:32"><name pos:start="50:9" pos:end="50:26">stream_format_code</name> <operator pos:start="50:28" pos:end="50:28">&amp;</operator> <literal type="number" pos:start="50:30" pos:end="50:32">0x2</literal></expr>)</condition> <block pos:start="50:35" pos:end="112:13">{<block_content pos:start="51:9" pos:end="112:13">
        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:17">bitscount</name> <operator pos:start="51:19" pos:end="51:20">+=</operator> <literal type="number" pos:start="51:22" pos:end="51:23">15</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:32"><expr pos:start="52:9" pos:end="52:31"><name pos:start="52:9" pos:end="52:27"><name pos:start="52:9" pos:end="52:13">chctx</name><operator pos:start="52:14" pos:end="52:15">-&gt;</operator><name pos:start="52:16" pos:end="52:24">bitsBandT</name><index pos:start="52:25" pos:end="52:27">[<expr pos:start="52:26" pos:end="52:26"><literal type="number" pos:start="52:26" pos:end="52:26">0</literal></expr>]</index></name> <operator pos:start="52:29" pos:end="52:29">=</operator> <literal type="number" pos:start="52:31" pos:end="52:31">5</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:13">chctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">CWlengthT</name><index pos:start="53:25" pos:end="53:27">[<expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>]</index></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <literal type="number" pos:start="53:31" pos:end="53:31">5</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:32"><expr pos:start="54:9" pos:end="54:31"><name pos:start="54:9" pos:end="54:27"><name pos:start="54:9" pos:end="54:13">chctx</name><operator pos:start="54:14" pos:end="54:15">-&gt;</operator><name pos:start="54:16" pos:end="54:24">CWlengthT</name><index pos:start="54:25" pos:end="54:27">[<expr pos:start="54:26" pos:end="54:26"><literal type="number" pos:start="54:26" pos:end="54:26">1</literal></expr>]</index></name> <operator pos:start="54:29" pos:end="54:29">=</operator> <literal type="number" pos:start="54:31" pos:end="54:31">5</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:13">chctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">CWlengthT</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">2</literal></expr>]</index></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">5</literal></expr>;</expr_stmt>
        <for pos:start="56:9" pos:end="112:13">for <control pos:start="56:13" pos:end="56:31">(<init pos:start="56:14" pos:end="56:19"><expr pos:start="56:14" pos:end="56:18"><name pos:start="56:14" pos:end="56:14">i</name> <operator pos:start="56:16" pos:end="56:16">=</operator> <literal type="number" pos:start="56:18" pos:end="56:18">1</literal></expr>;</init> <condition pos:start="56:21" pos:end="56:26"><expr pos:start="56:21" pos:end="56:25"><name pos:start="56:21" pos:end="56:21">i</name> <operator pos:start="56:23" pos:end="56:23">&lt;</operator> <literal type="number" pos:start="56:25" pos:end="56:25">4</literal></expr>;</condition> <incr pos:start="56:28" pos:end="56:30"><expr pos:start="56:28" pos:end="56:30"><name pos:start="56:28" pos:end="56:28">i</name><operator pos:start="56:29" pos:end="56:30">++</operator></expr></incr>)</control> <block pos:start="56:33" pos:end="112:13">{<block_content pos:start="57:13" pos:end="112:13">
            <expr_stmt pos:start="57:13" pos:end="57:58"><expr pos:start="57:13" pos:end="57:57"><name pos:start="57:13" pos:end="57:16">bits</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <ternary pos:start="57:20" pos:end="57:57"><condition pos:start="57:20" pos:end="57:51"><expr pos:start="57:20" pos:end="57:49"><operator pos:start="57:20" pos:end="57:20">(</operator><name pos:start="57:21" pos:end="57:42"><name pos:start="57:21" pos:end="57:25">chctx</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:39">levlCoeffBuf</name><index pos:start="57:40" pos:end="57:42">[<expr pos:start="57:41" pos:end="57:41"><name pos:start="57:41" pos:end="57:41">i</name></expr>]</index></name> <operator pos:start="57:44" pos:end="57:45">==</operator> <literal type="number" pos:start="57:47" pos:end="57:48">16</literal><operator pos:start="57:49" pos:end="57:49">)</operator></expr> ?</condition><then pos:start="57:53" pos:end="57:53"> <expr pos:start="57:53" pos:end="57:53"><literal type="number" pos:start="57:53" pos:end="57:53">0</literal></expr> </then><else pos:start="57:55" pos:end="57:57">: <expr pos:start="57:57" pos:end="57:57"><literal type="number" pos:start="57:57" pos:end="57:57">5</literal></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:39"><expr pos:start="58:13" pos:end="58:38"><name pos:start="58:13" pos:end="58:31"><name pos:start="58:13" pos:end="58:17">chctx</name><operator pos:start="58:18" pos:end="58:19">-&gt;</operator><name pos:start="58:20" pos:end="58:28">bitsBandT</name><index pos:start="58:29" pos:end="58:31">[<expr pos:start="58:30" pos:end="58:30"><name pos:start="58:30" pos:end="58:30">i</name></expr>]</index></name> <operator pos:start="58:33" pos:end="58:33">=</operator> <name pos:start="58:35" pos:end="58:38">bits</name></expr>;</expr_stmt>
            <for pos:start="59:13" pos:end="112:13">for <control pos:start="59:17" pos:end="59:59">(<init pos:start="59:18" pos:end="59:33"><expr pos:start="59:18" pos:end="59:32"><name pos:start="59:18" pos:end="59:18">j</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:32"><name pos:start="59:22" pos:end="59:29">band_tab</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><name pos:start="59:31" pos:end="59:31">i</name></expr>]</index></name></expr>;</init> <condition pos:start="59:35" pos:end="59:54"><expr pos:start="59:35" pos:end="59:53"><name pos:start="59:35" pos:end="59:35">j</name> <operator pos:start="59:37" pos:end="59:37">&lt;</operator> <name pos:start="59:39" pos:end="59:53"><name pos:start="59:39" pos:end="59:46">band_tab</name><index pos:start="59:47" pos:end="59:53">[<expr pos:start="59:48" pos:end="59:52"><name pos:start="59:48" pos:end="59:48">i</name> <operator pos:start="59:50" pos:end="59:50">+</operator> <literal type="number" pos:start="59:52" pos:end="59:52">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="59:56" pos:end="59:58"><expr pos:start="59:56" pos:end="59:58"><name pos:start="59:56" pos:end="59:56">j</name><operator pos:start="59:57" pos:end="59:58">++</operator></expr></incr>)</control> <block pos:start="59:61" pos:end="112:13">{<block_content pos:start="60:17" pos:end="112:13">
                <expr_stmt pos:start="60:17" pos:end="60:43"><expr pos:start="60:17" pos:end="60:42"><name pos:start="60:17" pos:end="60:35"><name pos:start="60:17" pos:end="60:21">chctx</name><operator pos:start="60:22" pos:end="60:23">-&gt;</operator><name pos:start="60:24" pos:end="60:32">CWlengthT</name><index pos:start="60:33" pos:end="60:35">[<expr pos:start="60:34" pos:end="60:34"><name pos:start="60:34" pos:end="60:34">j</name></expr>]</index></name> <operator pos:start="60:37" pos:end="60:37">=</operator> <name pos:start="60:39" pos:end="60:42">bits</name></expr>;</expr_stmt>
                <expr_stmt pos:start="61:17" pos:end="61:39"><expr pos:start="61:17" pos:end="61:38"><name pos:start="61:17" pos:end="61:25">bitscount</name>      <operator pos:start="61:32" pos:end="61:33">+=</operator> <name pos:start="61:35" pos:end="61:38">bits</name></expr>;</expr_stmt>
    <if_stmt pos:start="62:5" pos:end="112:13"><if pos:start="62:5" pos:end="112:13">if <condition pos:start="62:8" pos:end="62:43">(<expr pos:start="62:9" pos:end="62:42"><name pos:start="62:9" pos:end="62:23"><name pos:start="62:9" pos:end="62:13">avctx</name><operator pos:start="62:14" pos:end="62:15">-&gt;</operator><name pos:start="62:16" pos:end="62:23">codec_id</name></name> <operator pos:start="62:25" pos:end="62:26">==</operator> <name pos:start="62:28" pos:end="62:42">AV_CODEC_ID_IAC</name></expr>)</condition> <block pos:start="62:45" pos:end="112:13">{<block_content pos:start="63:9" pos:end="112:13">
        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:17">bitscount</name> <operator pos:start="63:19" pos:end="63:20">+=</operator> <operator pos:start="63:22" pos:end="63:22">!</operator><operator pos:start="63:23" pos:end="63:23">!</operator><name pos:start="63:24" pos:end="63:51"><name pos:start="63:24" pos:end="63:28">chctx</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:40">bandWidthT</name><index pos:start="63:41" pos:end="63:51">[<expr pos:start="63:42" pos:end="63:50"><name pos:start="63:42" pos:end="63:46">BANDS</name> <operator pos:start="63:48" pos:end="63:48">-</operator> <literal type="number" pos:start="63:50" pos:end="63:50">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="64:9" pos:end="65:28"><if pos:start="64:9" pos:end="65:28">if <condition pos:start="64:12" pos:end="64:40">(<expr pos:start="64:13" pos:end="64:39"><operator pos:start="64:13" pos:end="64:13">!</operator><operator pos:start="64:14" pos:end="64:14">(</operator><name pos:start="64:15" pos:end="64:32">stream_format_code</name> <operator pos:start="64:34" pos:end="64:34">&amp;</operator> <literal type="number" pos:start="64:36" pos:end="64:38">0x2</literal><operator pos:start="64:39" pos:end="64:39">)</operator></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:28"><block_content pos:start="65:13" pos:end="65:28">
            <expr_stmt pos:start="65:13" pos:end="65:28"><expr pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:21">bitscount</name> <operator pos:start="65:23" pos:end="65:24">+=</operator> <literal type="number" pos:start="65:26" pos:end="65:27">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="66:5" pos:end="112:13"><if pos:start="66:5" pos:end="112:13">if <condition pos:start="66:8" pos:end="68:41">(<expr pos:start="66:9" pos:end="68:40"><operator pos:start="66:9" pos:end="66:9">(</operator><name pos:start="66:10" pos:end="66:12">ret</name> <operator pos:start="66:14" pos:end="66:14">=</operator> <call pos:start="66:16" pos:end="68:35"><name pos:start="66:16" pos:end="66:29">bit_allocation</name><argument_list pos:start="66:30" pos:end="68:35">(<argument pos:start="66:31" pos:end="66:31"><expr pos:start="66:31" pos:end="66:31"><name pos:start="66:31" pos:end="66:31">q</name></expr></argument>, <argument pos:start="66:34" pos:end="66:38"><expr pos:start="66:34" pos:end="66:38"><name pos:start="66:34" pos:end="66:38">chctx</name></expr></argument>, <argument pos:start="66:41" pos:end="66:58"><expr pos:start="66:41" pos:end="66:58"><name pos:start="66:41" pos:end="66:58">stream_format_code</name></expr></argument>,
                              <argument pos:start="67:31" pos:end="67:70"><expr pos:start="67:31" pos:end="67:70"><literal type="number" pos:start="67:31" pos:end="67:35">512</literal> <operator pos:start="67:35" pos:end="67:35">-</operator> <name pos:start="67:37" pos:end="67:45">bitscount</name> <operator pos:start="67:47" pos:end="67:47">-</operator> <call pos:start="67:49" pos:end="67:70"><name pos:start="67:49" pos:end="67:62">get_bits_count</name><argument_list pos:start="67:63" pos:end="67:70">(<argument pos:start="67:64" pos:end="67:69"><expr pos:start="67:64" pos:end="67:69"><operator pos:start="67:64" pos:end="67:64">&amp;</operator><name pos:start="67:65" pos:end="67:69"><name pos:start="67:65" pos:end="67:65">q</name><operator pos:start="67:66" pos:end="67:67">-&gt;</operator><name pos:start="67:68" pos:end="67:69">gb</name></name></expr></argument>)</argument_list></call></expr></argument>,
                              <argument pos:start="68:31" pos:end="68:34"><expr pos:start="68:31" pos:end="68:34"><name pos:start="68:31" pos:end="68:34">flag</name></expr></argument>)</argument_list></call><operator pos:start="68:36" pos:end="68:36">)</operator> <operator pos:start="68:38" pos:end="68:38">&lt;</operator> <literal type="number" pos:start="68:40" pos:end="68:40">0</literal></expr>)</condition> <block pos:start="68:43" pos:end="112:13">{<block_content pos:start="69:9" pos:end="112:13">
        <expr_stmt pos:start="69:9" pos:end="69:64"><expr pos:start="69:9" pos:end="69:63"><call pos:start="69:9" pos:end="69:63"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:63">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:62"><expr pos:start="69:37" pos:end="69:62"><literal type="string" pos:start="69:37" pos:end="69:62">"Bit allocations failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:33"><expr pos:start="70:9" pos:end="70:32"><name pos:start="70:9" pos:end="70:28"><name pos:start="70:9" pos:end="70:13">chctx</name><operator pos:start="70:14" pos:end="70:15">-&gt;</operator><name pos:start="70:16" pos:end="70:28">decoder_reset</name></name> <operator pos:start="70:30" pos:end="70:30">=</operator> <literal type="number" pos:start="70:32" pos:end="70:32">1</literal></expr>;</expr_stmt>
        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>
    <for pos:start="72:5" pos:end="112:13">for <control pos:start="72:9" pos:end="72:31">(<init pos:start="72:10" pos:end="72:15"><expr pos:start="72:10" pos:end="72:14"><name pos:start="72:10" pos:end="72:10">i</name> <operator pos:start="72:12" pos:end="72:12">=</operator> <literal type="number" pos:start="72:14" pos:end="72:14">0</literal></expr>;</init> <condition pos:start="72:17" pos:end="72:26"><expr pos:start="72:17" pos:end="72:25"><name pos:start="72:17" pos:end="72:17">i</name> <operator pos:start="72:19" pos:end="72:19">&lt;</operator> <name pos:start="72:21" pos:end="72:25">BANDS</name></expr>;</condition> <incr pos:start="72:28" pos:end="72:30"><expr pos:start="72:28" pos:end="72:30"><name pos:start="72:28" pos:end="72:28">i</name><operator pos:start="72:29" pos:end="72:30">++</operator></expr></incr>)</control> <block pos:start="72:33" pos:end="112:13">{<block_content pos:start="73:9" pos:end="112:13">
        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:13">chctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:24">sumLenArr</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">i</name></expr>]</index></name>   <operator pos:start="73:31" pos:end="73:31">=</operator> <literal type="number" pos:start="73:33" pos:end="73:33">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:34"><expr pos:start="74:9" pos:end="74:33"><name pos:start="74:9" pos:end="74:29"><name pos:start="74:9" pos:end="74:13">chctx</name><operator pos:start="74:14" pos:end="74:15">-&gt;</operator><name pos:start="74:16" pos:end="74:26">skipFlagRaw</name><index pos:start="74:27" pos:end="74:29">[<expr pos:start="74:28" pos:end="74:28"><name pos:start="74:28" pos:end="74:28">i</name></expr>]</index></name> <operator pos:start="74:31" pos:end="74:31">=</operator> <literal type="number" pos:start="74:33" pos:end="74:33">0</literal></expr>;</expr_stmt>
        <for pos:start="75:9" pos:end="76:55">for <control pos:start="75:13" pos:end="75:55">(<init pos:start="75:14" pos:end="75:29"><expr pos:start="75:14" pos:end="75:28"><name pos:start="75:14" pos:end="75:14">j</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:28"><name pos:start="75:18" pos:end="75:25">band_tab</name><index pos:start="75:26" pos:end="75:28">[<expr pos:start="75:27" pos:end="75:27"><name pos:start="75:27" pos:end="75:27">i</name></expr>]</index></name></expr>;</init> <condition pos:start="75:31" pos:end="75:50"><expr pos:start="75:31" pos:end="75:49"><name pos:start="75:31" pos:end="75:31">j</name> <operator pos:start="75:33" pos:end="75:33">&lt;</operator> <name pos:start="75:35" pos:end="75:49"><name pos:start="75:35" pos:end="75:42">band_tab</name><index pos:start="75:43" pos:end="75:49">[<expr pos:start="75:44" pos:end="75:48"><name pos:start="75:44" pos:end="75:44">i</name> <operator pos:start="75:46" pos:end="75:46">+</operator> <literal type="number" pos:start="75:48" pos:end="75:48">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:52">j</name><operator pos:start="75:53" pos:end="75:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="76:13" pos:end="76:55"><block_content pos:start="76:13" pos:end="76:55">
            <expr_stmt pos:start="76:13" pos:end="76:55"><expr pos:start="76:13" pos:end="76:54"><name pos:start="76:13" pos:end="76:31"><name pos:start="76:13" pos:end="76:17">chctx</name><operator pos:start="76:18" pos:end="76:19">-&gt;</operator><name pos:start="76:20" pos:end="76:28">sumLenArr</name><index pos:start="76:29" pos:end="76:31">[<expr pos:start="76:30" pos:end="76:30"><name pos:start="76:30" pos:end="76:30">i</name></expr>]</index></name> <operator pos:start="76:33" pos:end="76:34">+=</operator> <name pos:start="76:36" pos:end="76:54"><name pos:start="76:36" pos:end="76:40">chctx</name><operator pos:start="76:41" pos:end="76:42">-&gt;</operator><name pos:start="76:43" pos:end="76:51">CWlengthT</name><index pos:start="76:52" pos:end="76:54">[<expr pos:start="76:53" pos:end="76:53"><name pos:start="76:53" pos:end="76:53">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <if_stmt pos:start="77:9" pos:end="79:42"><if pos:start="77:9" pos:end="79:42">if <condition pos:start="77:12" pos:end="77:35">(<expr pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:17">chctx</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:31">bandFlagsBuf</name><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="78:13" pos:end="79:42"><block_content pos:start="78:13" pos:end="79:42">
            <if_stmt pos:start="78:13" pos:end="79:42"><if pos:start="78:13" pos:end="79:42">if <condition pos:start="78:16" pos:end="78:109">(<expr pos:start="78:17" pos:end="78:108"><operator pos:start="78:17" pos:end="78:17">(</operator><operator pos:start="78:18" pos:end="78:18">(</operator><operator pos:start="78:19" pos:end="78:19">(</operator><name pos:start="78:20" pos:end="78:34"><name pos:start="78:20" pos:end="78:27">band_tab</name><index pos:start="78:28" pos:end="78:34">[<expr pos:start="78:29" pos:end="78:33"><name pos:start="78:29" pos:end="78:29">i</name> <operator pos:start="78:31" pos:end="78:31">+</operator> <literal type="number" pos:start="78:33" pos:end="78:33">1</literal></expr>]</index></name> <operator pos:start="78:36" pos:end="78:36">-</operator> <name pos:start="78:38" pos:end="78:48"><name pos:start="78:38" pos:end="78:45">band_tab</name><index pos:start="78:46" pos:end="78:48">[<expr pos:start="78:47" pos:end="78:47"><name pos:start="78:47" pos:end="78:47">i</name></expr>]</index></name><operator pos:start="78:49" pos:end="78:49">)</operator> <operator pos:start="78:51" pos:end="78:51">*</operator> <literal type="number" pos:start="78:53" pos:end="78:55">1.5</literal><operator pos:start="78:56" pos:end="78:56">)</operator> <operator pos:start="78:58" pos:end="78:58">&gt;</operator> <name pos:start="78:60" pos:end="78:78"><name pos:start="78:60" pos:end="78:64">chctx</name><operator pos:start="78:65" pos:end="78:66">-&gt;</operator><name pos:start="78:67" pos:end="78:75">sumLenArr</name><index pos:start="78:76" pos:end="78:78">[<expr pos:start="78:77" pos:end="78:77"><name pos:start="78:77" pos:end="78:77">i</name></expr>]</index></name><operator pos:start="78:79" pos:end="78:79">)</operator> <operator pos:start="78:81" pos:end="78:82">&amp;&amp;</operator> <operator pos:start="78:84" pos:end="78:84">(</operator><name pos:start="78:85" pos:end="78:103"><name pos:start="78:85" pos:end="78:89">chctx</name><operator pos:start="78:90" pos:end="78:91">-&gt;</operator><name pos:start="78:92" pos:end="78:100">sumLenArr</name><index pos:start="78:101" pos:end="78:103">[<expr pos:start="78:102" pos:end="78:102"><name pos:start="78:102" pos:end="78:102">i</name></expr>]</index></name> <operator pos:start="78:105" pos:end="78:105">&gt;</operator> <literal type="number" pos:start="78:107" pos:end="78:107">0</literal><operator pos:start="78:108" pos:end="78:108">)</operator></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:42"><block_content pos:start="79:17" pos:end="79:42">
                <expr_stmt pos:start="79:17" pos:end="79:42"><expr pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:21">chctx</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:34">skipFlagRaw</name><index pos:start="79:35" pos:end="79:37">[<expr pos:start="79:36" pos:end="79:36"><name pos:start="79:36" pos:end="79:36">i</name></expr>]</index></name> <operator pos:start="79:39" pos:end="79:39">=</operator> <literal type="number" pos:start="79:41" pos:end="79:41">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:33"><expr pos:start="80:5" pos:end="80:32"><call pos:start="80:5" pos:end="80:32"><name pos:start="80:5" pos:end="80:22">imc_get_skip_coeff</name><argument_list pos:start="80:23" pos:end="80:32">(<argument pos:start="80:24" pos:end="80:24"><expr pos:start="80:24" pos:end="80:24"><name pos:start="80:24" pos:end="80:24">q</name></expr></argument>, <argument pos:start="80:27" pos:end="80:31"><expr pos:start="80:27" pos:end="80:31"><name pos:start="80:27" pos:end="80:31">chctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="81:5" pos:end="112:13">for <control pos:start="81:9" pos:end="81:31">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:26"><expr pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:25">BANDS</name></expr>;</condition> <incr pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><name pos:start="81:28" pos:end="81:28">i</name><operator pos:start="81:29" pos:end="81:30">++</operator></expr></incr>)</control> <block pos:start="81:33" pos:end="112:13">{<block_content pos:start="82:9" pos:end="112:13">
        <expr_stmt pos:start="82:9" pos:end="82:50"><expr pos:start="82:9" pos:end="82:49"><name pos:start="82:9" pos:end="82:27"><name pos:start="82:9" pos:end="82:13">chctx</name><operator pos:start="82:14" pos:end="82:15">-&gt;</operator><name pos:start="82:16" pos:end="82:24">flcoeffs6</name><index pos:start="82:25" pos:end="82:27">[<expr pos:start="82:26" pos:end="82:26"><name pos:start="82:26" pos:end="82:26">i</name></expr>]</index></name> <operator pos:start="82:29" pos:end="82:29">=</operator> <name pos:start="82:31" pos:end="82:49"><name pos:start="82:31" pos:end="82:35">chctx</name><operator pos:start="82:36" pos:end="82:37">-&gt;</operator><name pos:start="82:38" pos:end="82:46">flcoeffs1</name><index pos:start="82:47" pos:end="82:49">[<expr pos:start="82:48" pos:end="82:48"><name pos:start="82:48" pos:end="82:48">i</name></expr>]</index></name></expr>;</expr_stmt>
        <comment type="block" pos:start="83:9" pos:end="83:66">/* band has flag set and at least one coded coefficient */</comment>
        <if_stmt pos:start="84:9" pos:end="112:13"><if pos:start="84:9" pos:end="112:13">if <condition pos:start="84:12" pos:end="84:97">(<expr pos:start="84:13" pos:end="84:96"><name pos:start="84:13" pos:end="84:34"><name pos:start="84:13" pos:end="84:17">chctx</name><operator pos:start="84:18" pos:end="84:19">-&gt;</operator><name pos:start="84:20" pos:end="84:31">bandFlagsBuf</name><index pos:start="84:32" pos:end="84:34">[<expr pos:start="84:33" pos:end="84:33"><name pos:start="84:33" pos:end="84:33">i</name></expr>]</index></name> <operator pos:start="84:36" pos:end="84:37">&amp;&amp;</operator> <operator pos:start="84:39" pos:end="84:39">(</operator><name pos:start="84:40" pos:end="84:54"><name pos:start="84:40" pos:end="84:47">band_tab</name><index pos:start="84:48" pos:end="84:54">[<expr pos:start="84:49" pos:end="84:53"><name pos:start="84:49" pos:end="84:49">i</name> <operator pos:start="84:51" pos:end="84:51">+</operator> <literal type="number" pos:start="84:53" pos:end="84:53">1</literal></expr>]</index></name> <operator pos:start="84:56" pos:end="84:56">-</operator> <name pos:start="84:58" pos:end="84:68"><name pos:start="84:58" pos:end="84:65">band_tab</name><index pos:start="84:66" pos:end="84:68">[<expr pos:start="84:67" pos:end="84:67"><name pos:start="84:67" pos:end="84:67">i</name></expr>]</index></name><operator pos:start="84:69" pos:end="84:69">)</operator> <operator pos:start="84:71" pos:end="84:72">!=</operator> <name pos:start="84:74" pos:end="84:96"><name pos:start="84:74" pos:end="84:78">chctx</name><operator pos:start="84:79" pos:end="84:80">-&gt;</operator><name pos:start="84:81" pos:end="84:93">skipFlagCount</name><index pos:start="84:94" pos:end="84:96">[<expr pos:start="84:95" pos:end="84:95"><name pos:start="84:95" pos:end="84:95">i</name></expr>]</index></name></expr>)</condition> <block pos:start="84:99" pos:end="112:13">{<block_content pos:start="85:13" pos:end="112:13">
            <expr_stmt pos:start="85:13" pos:end="86:106"><expr pos:start="85:13" pos:end="86:105"><name pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:17">chctx</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:28">flcoeffs6</name><index pos:start="85:29" pos:end="85:31">[<expr pos:start="85:30" pos:end="85:30"><name pos:start="85:30" pos:end="85:30">i</name></expr>]</index></name> <operator pos:start="85:33" pos:end="85:34">*=</operator> <name pos:start="85:36" pos:end="85:78"><name pos:start="85:36" pos:end="85:36">q</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:46">sqrt_tab</name><index pos:start="85:47" pos:end="85:78">[ <expr pos:start="85:49" pos:end="85:77"><name pos:start="85:49" pos:end="85:63"><name pos:start="85:49" pos:end="85:56">band_tab</name><index pos:start="85:57" pos:end="85:63">[<expr pos:start="85:58" pos:end="85:62"><name pos:start="85:58" pos:end="85:58">i</name> <operator pos:start="85:60" pos:end="85:60">+</operator> <literal type="number" pos:start="85:62" pos:end="85:62">1</literal></expr>]</index></name> <operator pos:start="85:65" pos:end="85:65">-</operator> <name pos:start="85:67" pos:end="85:77"><name pos:start="85:67" pos:end="85:74">band_tab</name><index pos:start="85:75" pos:end="85:77">[<expr pos:start="85:76" pos:end="85:76"><name pos:start="85:76" pos:end="85:76">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="85:80" pos:end="85:80">/</operator>
                                   <name pos:start="86:36" pos:end="86:105"><name pos:start="86:36" pos:end="86:36">q</name><operator pos:start="86:37" pos:end="86:38">-&gt;</operator><name pos:start="86:39" pos:end="86:46">sqrt_tab</name><index pos:start="86:47" pos:end="86:105">[<expr pos:start="86:48" pos:end="86:104"><operator pos:start="86:48" pos:end="86:48">(</operator><name pos:start="86:49" pos:end="86:63"><name pos:start="86:49" pos:end="86:56">band_tab</name><index pos:start="86:57" pos:end="86:63">[<expr pos:start="86:58" pos:end="86:62"><name pos:start="86:58" pos:end="86:58">i</name> <operator pos:start="86:60" pos:end="86:60">+</operator> <literal type="number" pos:start="86:62" pos:end="86:62">1</literal></expr>]</index></name> <operator pos:start="86:65" pos:end="86:65">-</operator> <name pos:start="86:67" pos:end="86:77"><name pos:start="86:67" pos:end="86:74">band_tab</name><index pos:start="86:75" pos:end="86:77">[<expr pos:start="86:76" pos:end="86:76"><name pos:start="86:76" pos:end="86:76">i</name></expr>]</index></name> <operator pos:start="86:79" pos:end="86:79">-</operator> <name pos:start="86:81" pos:end="86:103"><name pos:start="86:81" pos:end="86:85">chctx</name><operator pos:start="86:86" pos:end="86:87">-&gt;</operator><name pos:start="86:88" pos:end="86:100">skipFlagCount</name><index pos:start="86:101" pos:end="86:103">[<expr pos:start="86:102" pos:end="86:102"><name pos:start="86:102" pos:end="86:102">i</name></expr>]</index></name><operator pos:start="86:104" pos:end="86:104">)</operator></expr>]</index></name></expr>;</expr_stmt>
    <comment type="block" pos:start="87:5" pos:end="87:68">/* calculate bits left, bits needed and adjust bit allocation */</comment>
    <expr_stmt pos:start="88:5" pos:end="88:22"><expr pos:start="88:5" pos:end="88:21"><name pos:start="88:5" pos:end="88:8">bits</name> <operator pos:start="88:10" pos:end="88:10">=</operator> <name pos:start="88:12" pos:end="88:17">summer</name> <operator pos:start="88:19" pos:end="88:19">=</operator> <literal type="number" pos:start="88:21" pos:end="88:21">0</literal></expr>;</expr_stmt>
    <for pos:start="89:5" pos:end="112:13">for <control pos:start="89:9" pos:end="89:31">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:26"><expr pos:start="89:17" pos:end="89:25"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:25">BANDS</name></expr>;</condition> <incr pos:start="89:28" pos:end="89:30"><expr pos:start="89:28" pos:end="89:30"><name pos:start="89:28" pos:end="89:28">i</name><operator pos:start="89:29" pos:end="89:30">++</operator></expr></incr>)</control> <block pos:start="89:33" pos:end="112:13">{<block_content pos:start="90:9" pos:end="112:13">
        <if_stmt pos:start="90:9" pos:end="112:13"><if pos:start="90:9" pos:end="112:13">if <condition pos:start="90:12" pos:end="90:35">(<expr pos:start="90:13" pos:end="90:34"><name pos:start="90:13" pos:end="90:34"><name pos:start="90:13" pos:end="90:17">chctx</name><operator pos:start="90:18" pos:end="90:19">-&gt;</operator><name pos:start="90:20" pos:end="90:31">bandFlagsBuf</name><index pos:start="90:32" pos:end="90:34">[<expr pos:start="90:33" pos:end="90:33"><name pos:start="90:33" pos:end="90:33">i</name></expr>]</index></name></expr>)</condition> <block pos:start="90:37" pos:end="112:13">{<block_content pos:start="91:13" pos:end="112:13">
            <for pos:start="91:13" pos:end="112:13">for <control pos:start="91:17" pos:end="91:59">(<init pos:start="91:18" pos:end="91:33"><expr pos:start="91:18" pos:end="91:32"><name pos:start="91:18" pos:end="91:18">j</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:32"><name pos:start="91:22" pos:end="91:29">band_tab</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">i</name></expr>]</index></name></expr>;</init> <condition pos:start="91:35" pos:end="91:54"><expr pos:start="91:35" pos:end="91:53"><name pos:start="91:35" pos:end="91:35">j</name> <operator pos:start="91:37" pos:end="91:37">&lt;</operator> <name pos:start="91:39" pos:end="91:53"><name pos:start="91:39" pos:end="91:46">band_tab</name><index pos:start="91:47" pos:end="91:53">[<expr pos:start="91:48" pos:end="91:52"><name pos:start="91:48" pos:end="91:48">i</name> <operator pos:start="91:50" pos:end="91:50">+</operator> <literal type="number" pos:start="91:52" pos:end="91:52">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="91:56" pos:end="91:58"><expr pos:start="91:56" pos:end="91:58"><name pos:start="91:56" pos:end="91:56">j</name><operator pos:start="91:57" pos:end="91:58">++</operator></expr></incr>)</control> <block pos:start="91:61" pos:end="112:13">{<block_content pos:start="92:17" pos:end="112:13">
                <if_stmt pos:start="92:17" pos:end="112:13"><if pos:start="92:17" pos:end="112:13">if <condition pos:start="92:20" pos:end="92:40">(<expr pos:start="92:21" pos:end="92:39"><name pos:start="92:21" pos:end="92:39"><name pos:start="92:21" pos:end="92:25">chctx</name><operator pos:start="92:26" pos:end="92:27">-&gt;</operator><name pos:start="92:28" pos:end="92:36">skipFlags</name><index pos:start="92:37" pos:end="92:39">[<expr pos:start="92:38" pos:end="92:38"><name pos:start="92:38" pos:end="92:38">j</name></expr>]</index></name></expr>)</condition> <block pos:start="92:42" pos:end="112:13">{<block_content pos:start="93:21" pos:end="112:13">
                    <expr_stmt pos:start="93:21" pos:end="93:50"><expr pos:start="93:21" pos:end="93:49"><name pos:start="93:21" pos:end="93:26">summer</name> <operator pos:start="93:28" pos:end="93:29">+=</operator> <name pos:start="93:31" pos:end="93:49"><name pos:start="93:31" pos:end="93:35">chctx</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:46">CWlengthT</name><index pos:start="93:47" pos:end="93:49">[<expr pos:start="93:48" pos:end="93:48"><name pos:start="93:48" pos:end="93:48">j</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="94:21" pos:end="94:44"><expr pos:start="94:21" pos:end="94:43"><name pos:start="94:21" pos:end="94:39"><name pos:start="94:21" pos:end="94:25">chctx</name><operator pos:start="94:26" pos:end="94:27">-&gt;</operator><name pos:start="94:28" pos:end="94:36">CWlengthT</name><index pos:start="94:37" pos:end="94:39">[<expr pos:start="94:38" pos:end="94:38"><name pos:start="94:38" pos:end="94:38">j</name></expr>]</index></name> <operator pos:start="94:41" pos:end="94:41">=</operator> <literal type="number" pos:start="94:43" pos:end="94:43">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="95:13" pos:end="95:45"><expr pos:start="95:13" pos:end="95:44"><name pos:start="95:13" pos:end="95:16">bits</name>   <operator pos:start="95:20" pos:end="95:21">+=</operator> <name pos:start="95:23" pos:end="95:44"><name pos:start="95:23" pos:end="95:27">chctx</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:41">skipFlagBits</name><index pos:start="95:42" pos:end="95:44">[<expr pos:start="95:43" pos:end="95:43"><name pos:start="95:43" pos:end="95:43">i</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="96:13" pos:end="96:45"><expr pos:start="96:13" pos:end="96:44"><name pos:start="96:13" pos:end="96:18">summer</name> <operator pos:start="96:20" pos:end="96:21">-=</operator> <name pos:start="96:23" pos:end="96:44"><name pos:start="96:23" pos:end="96:27">chctx</name><operator pos:start="96:28" pos:end="96:29">-&gt;</operator><name pos:start="96:30" pos:end="96:41">skipFlagBits</name><index pos:start="96:42" pos:end="96:44">[<expr pos:start="96:43" pos:end="96:43"><name pos:start="96:43" pos:end="96:43">i</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="97:5" pos:end="97:48"><expr pos:start="97:5" pos:end="97:47"><call pos:start="97:5" pos:end="97:47"><name pos:start="97:5" pos:end="97:29">imc_adjust_bit_allocation</name><argument_list pos:start="97:30" pos:end="97:47">(<argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">q</name></expr></argument>, <argument pos:start="97:34" pos:end="97:38"><expr pos:start="97:34" pos:end="97:38"><name pos:start="97:34" pos:end="97:38">chctx</name></expr></argument>, <argument pos:start="97:41" pos:end="97:46"><expr pos:start="97:41" pos:end="97:46"><name pos:start="97:41" pos:end="97:46">summer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="98:5" pos:end="112:13">for <control pos:start="98:9" pos:end="98:31">(<init pos:start="98:10" pos:end="98:15"><expr pos:start="98:10" pos:end="98:14"><name pos:start="98:10" pos:end="98:10">i</name> <operator pos:start="98:12" pos:end="98:12">=</operator> <literal type="number" pos:start="98:14" pos:end="98:14">0</literal></expr>;</init> <condition pos:start="98:17" pos:end="98:26"><expr pos:start="98:17" pos:end="98:25"><name pos:start="98:17" pos:end="98:17">i</name> <operator pos:start="98:19" pos:end="98:19">&lt;</operator> <name pos:start="98:21" pos:end="98:25">BANDS</name></expr>;</condition> <incr pos:start="98:28" pos:end="98:30"><expr pos:start="98:28" pos:end="98:30"><name pos:start="98:28" pos:end="98:28">i</name><operator pos:start="98:29" pos:end="98:30">++</operator></expr></incr>)</control> <block pos:start="98:33" pos:end="112:13">{<block_content pos:start="99:9" pos:end="112:13">
        <expr_stmt pos:start="99:9" pos:end="99:32"><expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:13">chctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">sumLenArr</name><index pos:start="99:25" pos:end="99:27">[<expr pos:start="99:26" pos:end="99:26"><name pos:start="99:26" pos:end="99:26">i</name></expr>]</index></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <literal type="number" pos:start="99:31" pos:end="99:31">0</literal></expr>;</expr_stmt>
        <for pos:start="100:9" pos:end="102:59">for <control pos:start="100:13" pos:end="100:55">(<init pos:start="100:14" pos:end="100:29"><expr pos:start="100:14" pos:end="100:28"><name pos:start="100:14" pos:end="100:14">j</name> <operator pos:start="100:16" pos:end="100:16">=</operator> <name pos:start="100:18" pos:end="100:28"><name pos:start="100:18" pos:end="100:25">band_tab</name><index pos:start="100:26" pos:end="100:28">[<expr pos:start="100:27" pos:end="100:27"><name pos:start="100:27" pos:end="100:27">i</name></expr>]</index></name></expr>;</init> <condition pos:start="100:31" pos:end="100:50"><expr pos:start="100:31" pos:end="100:49"><name pos:start="100:31" pos:end="100:31">j</name> <operator pos:start="100:33" pos:end="100:33">&lt;</operator> <name pos:start="100:35" pos:end="100:49"><name pos:start="100:35" pos:end="100:42">band_tab</name><index pos:start="100:43" pos:end="100:49">[<expr pos:start="100:44" pos:end="100:48"><name pos:start="100:44" pos:end="100:44">i</name> <operator pos:start="100:46" pos:end="100:46">+</operator> <literal type="number" pos:start="100:48" pos:end="100:48">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="100:52" pos:end="100:54"><expr pos:start="100:52" pos:end="100:54"><name pos:start="100:52" pos:end="100:52">j</name><operator pos:start="100:53" pos:end="100:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:13" pos:end="102:59"><block_content pos:start="101:13" pos:end="102:59">
            <if_stmt pos:start="101:13" pos:end="102:59"><if pos:start="101:13" pos:end="102:59">if <condition pos:start="101:16" pos:end="101:37">(<expr pos:start="101:17" pos:end="101:36"><operator pos:start="101:17" pos:end="101:17">!</operator><name pos:start="101:18" pos:end="101:36"><name pos:start="101:18" pos:end="101:22">chctx</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:33">skipFlags</name><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><name pos:start="101:35" pos:end="101:35">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="102:17" pos:end="102:59"><block_content pos:start="102:17" pos:end="102:59">
                <expr_stmt pos:start="102:17" pos:end="102:59"><expr pos:start="102:17" pos:end="102:58"><name pos:start="102:17" pos:end="102:35"><name pos:start="102:17" pos:end="102:21">chctx</name><operator pos:start="102:22" pos:end="102:23">-&gt;</operator><name pos:start="102:24" pos:end="102:32">sumLenArr</name><index pos:start="102:33" pos:end="102:35">[<expr pos:start="102:34" pos:end="102:34"><name pos:start="102:34" pos:end="102:34">i</name></expr>]</index></name> <operator pos:start="102:37" pos:end="102:38">+=</operator> <name pos:start="102:40" pos:end="102:58"><name pos:start="102:40" pos:end="102:44">chctx</name><operator pos:start="102:45" pos:end="102:46">-&gt;</operator><name pos:start="102:47" pos:end="102:55">CWlengthT</name><index pos:start="102:56" pos:end="102:58">[<expr pos:start="102:57" pos:end="102:57"><name pos:start="102:57" pos:end="102:57">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
    <expr_stmt pos:start="103:5" pos:end="103:58"><expr pos:start="103:5" pos:end="103:57"><call pos:start="103:5" pos:end="103:57"><name pos:start="103:5" pos:end="103:10">memset</name><argument_list pos:start="103:11" pos:end="103:57">(<argument pos:start="103:12" pos:end="103:27"><expr pos:start="103:12" pos:end="103:27"><name pos:start="103:12" pos:end="103:27"><name pos:start="103:12" pos:end="103:16">chctx</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:27">codewords</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:30"><expr pos:start="103:30" pos:end="103:30"><literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr></argument>, <argument pos:start="103:33" pos:end="103:56"><expr pos:start="103:33" pos:end="103:56"><sizeof pos:start="103:33" pos:end="103:56">sizeof<argument_list pos:start="103:39" pos:end="103:56">(<argument pos:start="103:40" pos:end="103:55"><expr pos:start="103:40" pos:end="103:55"><name pos:start="103:40" pos:end="103:55"><name pos:start="103:40" pos:end="103:44">chctx</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:55">codewords</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="104:5" pos:end="112:13"><if pos:start="104:5" pos:end="112:13">if <condition pos:start="104:8" pos:end="104:37">(<expr pos:start="104:9" pos:end="104:36"><call pos:start="104:9" pos:end="104:32"><name pos:start="104:9" pos:end="104:22">imc_get_coeffs</name><argument_list pos:start="104:23" pos:end="104:32">(<argument pos:start="104:24" pos:end="104:24"><expr pos:start="104:24" pos:end="104:24"><name pos:start="104:24" pos:end="104:24">q</name></expr></argument>, <argument pos:start="104:27" pos:end="104:31"><expr pos:start="104:27" pos:end="104:31"><name pos:start="104:27" pos:end="104:31">chctx</name></expr></argument>)</argument_list></call> <operator pos:start="104:34" pos:end="104:34">&lt;</operator> <literal type="number" pos:start="104:36" pos:end="104:36">0</literal></expr>)</condition> <block pos:start="104:39" pos:end="112:13">{<block_content pos:start="105:9" pos:end="112:13">
        <expr_stmt pos:start="105:9" pos:end="105:66"><expr pos:start="105:9" pos:end="105:65"><call pos:start="105:9" pos:end="105:65"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:65">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:37" pos:end="105:64"><expr pos:start="105:37" pos:end="105:64"><literal type="string" pos:start="105:37" pos:end="105:64">"Read coefficients failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="106:9" pos:end="106:33"><expr pos:start="106:9" pos:end="106:32"><name pos:start="106:9" pos:end="106:28"><name pos:start="106:9" pos:end="106:13">chctx</name><operator pos:start="106:14" pos:end="106:15">-&gt;</operator><name pos:start="106:16" pos:end="106:28">decoder_reset</name></name> <operator pos:start="106:30" pos:end="106:30">=</operator> <literal type="number" pos:start="106:32" pos:end="106:32">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="107:5" pos:end="112:13"><if pos:start="107:5" pos:end="112:13">if <condition pos:start="107:8" pos:end="107:62">(<expr pos:start="107:9" pos:end="107:61"><call pos:start="107:9" pos:end="107:57"><name pos:start="107:9" pos:end="107:27">inverse_quant_coeff</name><argument_list pos:start="107:28" pos:end="107:57">(<argument pos:start="107:29" pos:end="107:29"><expr pos:start="107:29" pos:end="107:29"><name pos:start="107:29" pos:end="107:29">q</name></expr></argument>, <argument pos:start="107:32" pos:end="107:36"><expr pos:start="107:32" pos:end="107:36"><name pos:start="107:32" pos:end="107:36">chctx</name></expr></argument>, <argument pos:start="107:39" pos:end="107:56"><expr pos:start="107:39" pos:end="107:56"><name pos:start="107:39" pos:end="107:56">stream_format_code</name></expr></argument>)</argument_list></call> <operator pos:start="107:59" pos:end="107:59">&lt;</operator> <literal type="number" pos:start="107:61" pos:end="107:61">0</literal></expr>)</condition> <block pos:start="107:64" pos:end="112:13">{<block_content pos:start="108:9" pos:end="112:13">
        <expr_stmt pos:start="108:9" pos:end="108:85"><expr pos:start="108:9" pos:end="108:84"><call pos:start="108:9" pos:end="108:84"><name pos:start="108:9" pos:end="108:14">av_log</name><argument_list pos:start="108:15" pos:end="108:84">(<argument pos:start="108:16" pos:end="108:20"><expr pos:start="108:16" pos:end="108:20"><name pos:start="108:16" pos:end="108:20">avctx</name></expr></argument>, <argument pos:start="108:23" pos:end="108:34"><expr pos:start="108:23" pos:end="108:34"><name pos:start="108:23" pos:end="108:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="108:37" pos:end="108:83"><expr pos:start="108:37" pos:end="108:83"><literal type="string" pos:start="108:37" pos:end="108:83">"Inverse quantization of coefficients failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="109:9" pos:end="109:33"><expr pos:start="109:9" pos:end="109:32"><name pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:13">chctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:28">decoder_reset</name></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <literal type="number" pos:start="109:32" pos:end="109:32">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="110:5" pos:end="110:58"><expr pos:start="110:5" pos:end="110:57"><call pos:start="110:5" pos:end="110:57"><name pos:start="110:5" pos:end="110:10">memset</name><argument_list pos:start="110:11" pos:end="110:57">(<argument pos:start="110:12" pos:end="110:27"><expr pos:start="110:12" pos:end="110:27"><name pos:start="110:12" pos:end="110:27"><name pos:start="110:12" pos:end="110:16">chctx</name><operator pos:start="110:17" pos:end="110:18">-&gt;</operator><name pos:start="110:19" pos:end="110:27">skipFlags</name></name></expr></argument>, <argument pos:start="110:30" pos:end="110:30"><expr pos:start="110:30" pos:end="110:30"><literal type="number" pos:start="110:30" pos:end="110:30">0</literal></expr></argument>, <argument pos:start="110:33" pos:end="110:56"><expr pos:start="110:33" pos:end="110:56"><sizeof pos:start="110:33" pos:end="110:56">sizeof<argument_list pos:start="110:39" pos:end="110:56">(<argument pos:start="110:40" pos:end="110:55"><expr pos:start="110:40" pos:end="110:55"><name pos:start="110:40" pos:end="110:55"><name pos:start="110:40" pos:end="110:44">chctx</name><operator pos:start="110:45" pos:end="110:46">-&gt;</operator><name pos:start="110:47" pos:end="110:55">skipFlags</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="111:5" pos:end="111:44"><expr pos:start="111:5" pos:end="111:43"><call pos:start="111:5" pos:end="111:43"><name pos:start="111:5" pos:end="111:16">imc_imdct256</name><argument_list pos:start="111:17" pos:end="111:43">(<argument pos:start="111:18" pos:end="111:18"><expr pos:start="111:18" pos:end="111:18"><name pos:start="111:18" pos:end="111:18">q</name></expr></argument>, <argument pos:start="111:21" pos:end="111:25"><expr pos:start="111:21" pos:end="111:25"><name pos:start="111:21" pos:end="111:25">chctx</name></expr></argument>, <argument pos:start="111:28" pos:end="111:42"><expr pos:start="111:28" pos:end="111:42"><name pos:start="111:28" pos:end="111:42"><name pos:start="111:28" pos:end="111:32">avctx</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:42">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="112:5" pos:end="112:13">return <expr pos:start="112:12" pos:end="112:12"><literal type="number" pos:start="112:12" pos:end="112:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
