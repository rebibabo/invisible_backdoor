<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7143.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_audio_interleave_init</name><parameter_list pos:start="1:29" pos:end="5:50">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:57"><decl pos:start="3:30" pos:end="3:57"><type pos:start="3:30" pos:end="3:57"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:38">int</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:57">samples_per_frame</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:49"><decl pos:start="5:30" pos:end="5:49"><type pos:start="5:30" pos:end="5:49"><name pos:start="5:30" pos:end="5:39">AVRational</name></type> <name pos:start="5:41" pos:end="5:49">time_base</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:13">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:26">samples_per_frame</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:18">time_base</name><operator pos:start="19:19" pos:end="19:19">.</operator><name pos:start="19:20" pos:end="19:22">num</name></name></expr>)</condition> <block pos:start="19:25" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:75"><expr pos:start="21:9" pos:end="21:74"><call pos:start="21:9" pos:end="21:74"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:74">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:33" pos:end="21:73"><expr pos:start="21:33" pos:end="21:73"><literal type="string" pos:start="21:33" pos:end="21:73">"timebase not set for audio interleave\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="27:5" pos:end="63:5">for <control pos:start="27:9" pos:end="27:39">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:34"><expr pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:33">nb_streams</name></name></expr>;</condition> <incr pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:36">i</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control> <block pos:start="27:41" pos:end="63:5">{<block_content pos:start="29:9" pos:end="61:9">

        <decl_stmt pos:start="29:9" pos:end="29:37"><decl pos:start="29:9" pos:end="29:36"><type pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:16">AVStream</name> <modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:20">st</name> <init pos:start="29:22" pos:end="29:36">= <expr pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:33">streams</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:52"><decl pos:start="31:9" pos:end="31:51"><type pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:30">AudioInterleaveContext</name> <modifier pos:start="31:32" pos:end="31:32">*</modifier></type><name pos:start="31:33" pos:end="31:35">aic</name> <init pos:start="31:37" pos:end="31:51">= <expr pos:start="31:39" pos:end="31:51"><name pos:start="31:39" pos:end="31:51"><name pos:start="31:39" pos:end="31:40">st</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:51">priv_data</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="61:9"><if pos:start="35:9" pos:end="61:9">if <condition pos:start="35:12" pos:end="35:56">(<expr pos:start="35:13" pos:end="35:55"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:14">st</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">codec</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:33">codec_type</name></name> <operator pos:start="35:35" pos:end="35:36">==</operator> <name pos:start="35:38" pos:end="35:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="35:58" pos:end="61:9">{<block_content pos:start="37:13" pos:end="59:63">

            <expr_stmt pos:start="37:13" pos:end="39:81"><expr pos:start="37:13" pos:end="39:80"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:15">aic</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:28">sample_size</name></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:51"><name pos:start="37:33" pos:end="37:34">st</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">codec</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:51">channels</name></name> <operator pos:start="37:53" pos:end="37:53">*</operator>

                                <call pos:start="39:33" pos:end="39:75"><name pos:start="39:33" pos:end="39:54">av_get_bits_per_sample</name><argument_list pos:start="39:55" pos:end="39:75">(<argument pos:start="39:56" pos:end="39:74"><expr pos:start="39:56" pos:end="39:74"><name pos:start="39:56" pos:end="39:74"><name pos:start="39:56" pos:end="39:57">st</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:64">codec</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:74">codec_id</name></name></expr></argument>)</argument_list></call><operator pos:start="39:76" pos:end="39:76">)</operator> <operator pos:start="39:78" pos:end="39:78">/</operator> <literal type="number" pos:start="39:80" pos:end="39:80">8</literal></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:34">(<expr pos:start="41:17" pos:end="41:33"><operator pos:start="41:17" pos:end="41:17">!</operator><name pos:start="41:18" pos:end="41:33"><name pos:start="41:18" pos:end="41:20">aic</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:33">sample_size</name></name></expr>)</condition> <block pos:start="41:36" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:26">

                <expr_stmt pos:start="43:17" pos:end="43:75"><expr pos:start="43:17" pos:end="43:74"><call pos:start="43:17" pos:end="43:74"><name pos:start="43:17" pos:end="43:22">av_log</name><argument_list pos:start="43:23" pos:end="43:74">(<argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">s</name></expr></argument>, <argument pos:start="43:27" pos:end="43:38"><expr pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:41" pos:end="43:73"><expr pos:start="43:41" pos:end="43:73"><literal type="string" pos:start="43:41" pos:end="43:73">"could not compute sample size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:26">return <expr pos:start="45:24" pos:end="45:25"><operator pos:start="45:24" pos:end="45:24">-</operator><literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:55"><expr pos:start="49:13" pos:end="49:54"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:15">aic</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:34">samples_per_frame</name></name> <operator pos:start="49:36" pos:end="49:36">=</operator> <name pos:start="49:38" pos:end="49:54">samples_per_frame</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:50"><expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:15">aic</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">samples</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:49"><name pos:start="51:28" pos:end="51:30">aic</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:49">samples_per_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:15">aic</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:26">time_base</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:38">time_base</name></expr>;</expr_stmt>



            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:15">aic</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:26">fifo_size</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <literal type="number" pos:start="57:30" pos:end="57:32">100</literal><operator pos:start="57:33" pos:end="57:33">*</operator> <operator pos:start="57:35" pos:end="57:35">*</operator><name pos:start="57:36" pos:end="57:47"><name pos:start="57:36" pos:end="57:38">aic</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:47">samples</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:63"><expr pos:start="59:13" pos:end="59:62"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:15">aic</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">fifo</name></name><operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:62"><name pos:start="59:24" pos:end="59:42">av_fifo_alloc_array</name><argument_list pos:start="59:43" pos:end="59:62">(<argument pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><literal type="number" pos:start="59:44" pos:end="59:46">100</literal></expr></argument>, <argument pos:start="59:49" pos:end="59:61"><expr pos:start="59:49" pos:end="59:61"><operator pos:start="59:49" pos:end="59:49">*</operator><name pos:start="59:50" pos:end="59:61"><name pos:start="59:50" pos:end="59:52">aic</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:61">samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
