<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24724.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">xhci_ep_nuke_xfers</name><parameter_list pos:start="1:30" pos:end="3:66">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:39">XHCIState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">xhci</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:55">unsigned</name> <name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">slotid</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:39">unsigned</name> <name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:48">epid</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:58">TRBCCode</name></type> <name pos:start="3:60" pos:end="3:65">report</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:18">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">XHCISlot</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">slot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">XHCIEPContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:24">epctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:16">xferi</name></decl>, <decl pos:start="11:19" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:24">killed</name> <init pos:start="11:26" pos:end="11:28">= <expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">USBEndpoint</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:19">ep</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:52"><expr pos:start="15:5" pos:end="15:51"><call pos:start="15:5" pos:end="15:51"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:51">(<argument pos:start="15:12" pos:end="15:50"><expr pos:start="15:12" pos:end="15:50"><name pos:start="15:12" pos:end="15:17">slotid</name> <operator pos:start="15:19" pos:end="15:20">&gt;=</operator> <literal type="number" pos:start="15:22" pos:end="15:22">1</literal> <operator pos:start="15:24" pos:end="15:25">&amp;&amp;</operator> <name pos:start="15:27" pos:end="15:32">slotid</name> <operator pos:start="15:34" pos:end="15:35">&lt;=</operator> <name pos:start="15:37" pos:end="15:50"><name pos:start="15:37" pos:end="15:40">xhci</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:50">numslots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:35">(<argument pos:start="17:12" pos:end="17:34"><expr pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:15">epid</name> <operator pos:start="17:17" pos:end="17:18">&gt;=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">1</literal> <operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator> <name pos:start="17:25" pos:end="17:28">epid</name> <operator pos:start="17:30" pos:end="17:31">&lt;=</operator> <literal type="number" pos:start="17:33" pos:end="17:34">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><call pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:11">DPRINTF</name><argument_list pos:start="21:12" pos:end="21:57">(<argument pos:start="21:13" pos:end="21:42"><expr pos:start="21:13" pos:end="21:42"><literal type="string" pos:start="21:13" pos:end="21:42">"xhci_ep_nuke_xfers(%d, %d)\n"</literal></expr></argument>, <argument pos:start="21:45" pos:end="21:50"><expr pos:start="21:45" pos:end="21:50"><name pos:start="21:45" pos:end="21:50">slotid</name></expr></argument>, <argument pos:start="21:53" pos:end="21:56"><expr pos:start="21:53" pos:end="21:56"><name pos:start="21:53" pos:end="21:56">epid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:8">slot</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <operator pos:start="25:12" pos:end="25:12">&amp;</operator><name pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:16">xhci</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">slots</name><index pos:start="25:24" pos:end="25:33">[<expr pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:30">slotid</name><operator pos:start="25:31" pos:end="25:31">-</operator><literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:26"><name pos:start="29:10" pos:end="29:13">slot</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">eps</name><index pos:start="29:19" pos:end="29:26">[<expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:23">epid</name><operator pos:start="29:24" pos:end="29:24">-</operator><literal type="number" pos:start="29:25" pos:end="29:25">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="29:29" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:9">epctx</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:16">slot</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">eps</name><index pos:start="37:22" pos:end="37:29">[<expr pos:start="37:23" pos:end="37:28"><name pos:start="37:23" pos:end="37:26">epid</name><operator pos:start="37:27" pos:end="37:27">-</operator><literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:9">xferi</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:17">epctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:28">next_xfer</name></name></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="57:5">for <control pos:start="43:9" pos:end="43:34">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:29"><expr pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:28">TD_QUEUE</name></expr>;</condition> <incr pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:31">i</name><operator pos:start="43:32" pos:end="43:33">++</operator></expr></incr>)</control> <block pos:start="43:36" pos:end="57:5">{<block_content pos:start="45:9" pos:end="55:39">

        <expr_stmt pos:start="45:9" pos:end="45:74"><expr pos:start="45:9" pos:end="45:73"><name pos:start="45:9" pos:end="45:14">killed</name> <operator pos:start="45:16" pos:end="45:17">+=</operator> <call pos:start="45:19" pos:end="45:73"><name pos:start="45:19" pos:end="45:39">xhci_ep_nuke_one_xfer</name><argument_list pos:start="45:40" pos:end="45:73">(<argument pos:start="45:41" pos:end="45:64"><expr pos:start="45:41" pos:end="45:64"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:64"><name pos:start="45:42" pos:end="45:46">epctx</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:57">transfers</name><index pos:start="45:58" pos:end="45:64">[<expr pos:start="45:59" pos:end="45:63"><name pos:start="45:59" pos:end="45:63">xferi</name></expr>]</index></name></expr></argument>, <argument pos:start="45:67" pos:end="45:72"><expr pos:start="45:67" pos:end="45:72"><name pos:start="45:67" pos:end="45:72">report</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:19">(<expr pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:18">killed</name></expr>)</condition> <block pos:start="47:21" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:23">

            <expr_stmt pos:start="49:13" pos:end="49:23"><expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:18">report</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="49:25" pos:end="49:46">/* Only report once */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:13">epctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">transfers</name><index pos:start="53:25" pos:end="53:31">[<expr pos:start="53:26" pos:end="53:30"><name pos:start="53:26" pos:end="53:30">xferi</name></expr>]</index></name><operator pos:start="53:32" pos:end="53:32">.</operator><name pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:38">packet</name><operator pos:start="53:39" pos:end="53:39">.</operator><name pos:start="53:40" pos:end="53:41">ep</name></name> <operator pos:start="53:43" pos:end="53:43">=</operator> <name pos:start="53:45" pos:end="53:48">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:13">xferi</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:22">xferi</name> <operator pos:start="55:24" pos:end="55:24">+</operator> <literal type="number" pos:start="55:26" pos:end="55:26">1</literal><operator pos:start="55:27" pos:end="55:27">)</operator> <operator pos:start="55:29" pos:end="55:29">%</operator> <name pos:start="55:31" pos:end="55:38">TD_QUEUE</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:48"><expr pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:6">ep</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <call pos:start="61:10" pos:end="61:47"><name pos:start="61:10" pos:end="61:27">xhci_epid_to_usbep</name><argument_list pos:start="61:28" pos:end="61:47">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">xhci</name></expr></argument>, <argument pos:start="61:35" pos:end="61:40"><expr pos:start="61:35" pos:end="61:40"><name pos:start="61:35" pos:end="61:40">slotid</name></expr></argument>, <argument pos:start="61:43" pos:end="61:46"><expr pos:start="61:43" pos:end="61:46"><name pos:start="61:43" pos:end="61:46">epid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:11">(<expr pos:start="63:9" pos:end="63:10"><name pos:start="63:9" pos:end="63:10">ep</name></expr>)</condition> <block pos:start="63:13" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:43">

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><call pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:29">usb_device_ep_stopped</name><argument_list pos:start="65:30" pos:end="65:42">(<argument pos:start="65:31" pos:end="65:37"><expr pos:start="65:31" pos:end="65:37"><name pos:start="65:31" pos:end="65:37"><name pos:start="65:31" pos:end="65:32">ep</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:37">dev</name></name></expr></argument>, <argument pos:start="65:40" pos:end="65:41"><expr pos:start="65:40" pos:end="65:41"><name pos:start="65:40" pos:end="65:41">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="69:5" pos:end="69:18">return <expr pos:start="69:12" pos:end="69:17"><name pos:start="69:12" pos:end="69:17">killed</name></expr>;</return>

</block_content>}</block></function>
</unit>
