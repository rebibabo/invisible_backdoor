<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10711.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vmdk_open_vmdk3</name><parameter_list pos:start="1:27" pos:end="5:37">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">BlockDriverState</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">file</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:36"><decl pos:start="5:28" pos:end="5:36"><type pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:36">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">magic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">VMDK3Header</name></type> <name pos:start="13:17" pos:end="13:22">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">VmdkExtent</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:22">extent</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:66"><name pos:start="19:11" pos:end="19:20">bdrv_pread</name><argument_list pos:start="19:21" pos:end="19:66">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">file</name></expr></argument>, <argument pos:start="19:28" pos:end="19:40"><expr pos:start="19:28" pos:end="19:40"><sizeof pos:start="19:28" pos:end="19:40">sizeof<argument_list pos:start="19:34" pos:end="19:40">(<argument pos:start="19:35" pos:end="19:39"><expr pos:start="19:35" pos:end="19:39"><name pos:start="19:35" pos:end="19:39">magic</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:43" pos:end="19:49"><expr pos:start="19:43" pos:end="19:49"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:49">header</name></expr></argument>, <argument pos:start="19:52" pos:end="19:65"><expr pos:start="19:52" pos:end="19:65"><sizeof pos:start="19:52" pos:end="19:65">sizeof<argument_list pos:start="19:58" pos:end="19:65">(<argument pos:start="19:59" pos:end="19:64"><expr pos:start="19:59" pos:end="19:64"><name pos:start="19:59" pos:end="19:64">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition> <block pos:start="21:18" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="37:62"><expr pos:start="27:5" pos:end="37:61"><name pos:start="27:5" pos:end="27:10">extent</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="37:61"><name pos:start="27:14" pos:end="27:28">vmdk_add_extent</name><argument_list pos:start="27:29" pos:end="37:61">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">bs</name></expr></argument>,

                             <argument pos:start="29:30" pos:end="29:37"><expr pos:start="29:30" pos:end="29:37"><name pos:start="29:30" pos:end="29:37"><name pos:start="29:30" pos:end="29:31">bs</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">file</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:44"><expr pos:start="29:40" pos:end="29:44"><name pos:start="29:40" pos:end="29:44">false</name></expr></argument>,

                             <argument pos:start="31:30" pos:end="31:61"><expr pos:start="31:30" pos:end="31:61"><call pos:start="31:30" pos:end="31:61"><name pos:start="31:30" pos:end="31:40">le32_to_cpu</name><argument_list pos:start="31:41" pos:end="31:61">(<argument pos:start="31:42" pos:end="31:60"><expr pos:start="31:42" pos:end="31:60"><name pos:start="31:42" pos:end="31:60"><name pos:start="31:42" pos:end="31:47">header</name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:60">disk_sectors</name></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="33:30" pos:end="33:66"><expr pos:start="33:30" pos:end="33:66"><call pos:start="33:30" pos:end="33:61"><name pos:start="33:30" pos:end="33:40">le32_to_cpu</name><argument_list pos:start="33:41" pos:end="33:61">(<argument pos:start="33:42" pos:end="33:60"><expr pos:start="33:42" pos:end="33:60"><name pos:start="33:42" pos:end="33:60"><name pos:start="33:42" pos:end="33:47">header</name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:60">l1dir_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:63" pos:end="33:64">&lt;&lt;</operator> <literal type="number" pos:start="33:66" pos:end="33:66">9</literal></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><literal type="number" pos:start="35:33" pos:end="35:33">1</literal> <operator pos:start="35:35" pos:end="35:36">&lt;&lt;</operator> <literal type="number" pos:start="35:38" pos:end="35:38">6</literal></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><literal type="number" pos:start="35:41" pos:end="35:41">1</literal> <operator pos:start="35:43" pos:end="35:44">&lt;&lt;</operator> <literal type="number" pos:start="35:46" pos:end="35:46">9</literal></expr></argument>,

                             <argument pos:start="37:30" pos:end="37:60"><expr pos:start="37:30" pos:end="37:60"><call pos:start="37:30" pos:end="37:60"><name pos:start="37:30" pos:end="37:40">le32_to_cpu</name><argument_list pos:start="37:41" pos:end="37:60">(<argument pos:start="37:42" pos:end="37:59"><expr pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:47">header</name><operator pos:start="37:48" pos:end="37:48">.</operator><name pos:start="37:49" pos:end="37:59">granularity</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:38"><name pos:start="39:11" pos:end="39:26">vmdk_init_tables</name><argument_list pos:start="39:27" pos:end="39:38">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">bs</name></expr></argument>, <argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">extent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">ret</name></expr>)</condition> <block pos:start="41:14" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:34">

        <comment type="block" pos:start="43:9" pos:end="43:54">/* free extent allocated by vmdk_add_extent */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><call pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:29">vmdk_free_last_extent</name><argument_list pos:start="45:30" pos:end="45:33">(<argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><name pos:start="45:31" pos:end="45:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
