<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26961.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:63">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:62"><decl pos:start="3:47" pos:end="3:62"><type pos:start="3:47" pos:end="3:62"><name pos:start="3:47" pos:end="3:57">CPUPPCState</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:30">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">target_sigframe</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:28">target_sigcontext</name></name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:32">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:27">frame_addr</name></decl>, <decl pos:start="11:30" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:34">newsp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">signal</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:14">frame_addr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:54"><name pos:start="19:18" pos:end="19:29">get_sigframe</name><argument_list pos:start="19:30" pos:end="19:54">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">ka</name></expr></argument>, <argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:37">env</name></expr></argument>, <argument pos:start="19:40" pos:end="19:53"><expr pos:start="19:40" pos:end="19:53"><sizeof pos:start="19:40" pos:end="19:53">sizeof<argument_list pos:start="19:46" pos:end="19:53">(<argument pos:start="19:47" pos:end="19:52"><expr pos:start="19:47" pos:end="19:52"><operator pos:start="19:47" pos:end="19:47">*</operator><name pos:start="19:48" pos:end="19:52">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:21"><if pos:start="21:5" pos:end="23:21">if <condition pos:start="21:8" pos:end="21:62">(<expr pos:start="21:9" pos:end="21:61"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:61"><name pos:start="21:10" pos:end="21:25">lock_user_struct</name><argument_list pos:start="21:26" pos:end="21:61">(<argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="21:41" pos:end="21:45"><expr pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:45">frame</name></expr></argument>, <argument pos:start="21:48" pos:end="21:57"><expr pos:start="21:48" pos:end="21:57"><name pos:start="21:48" pos:end="21:57">frame_addr</name></expr></argument>, <argument pos:start="21:60" pos:end="21:60"><expr pos:start="21:60" pos:end="21:60"><literal type="number" pos:start="21:60" pos:end="21:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:21"><block_content pos:start="23:9" pos:end="23:21">

        <goto pos:start="23:9" pos:end="23:21">goto <name pos:start="23:14" pos:end="23:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:6">sc</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <operator pos:start="25:10" pos:end="25:10">&amp;</operator><name pos:start="25:11" pos:end="25:21"><name pos:start="25:11" pos:end="25:15">frame</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">sctx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:10">signal</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:41"><name pos:start="29:14" pos:end="29:36">current_exec_domain_sig</name><argument_list pos:start="29:37" pos:end="29:41">(<argument pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><name pos:start="29:38" pos:end="29:40">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:14">__put_user</name><argument_list pos:start="33:15" pos:end="33:45">(<argument pos:start="33:16" pos:end="33:30"><expr pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:17">ka</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:30">_sa_handler</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:44"><expr pos:start="33:33" pos:end="33:44"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:44"><name pos:start="33:34" pos:end="33:35">sc</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:44">handler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:14">__put_user</name><argument_list pos:start="35:15" pos:end="35:41">(<argument pos:start="35:16" pos:end="35:26"><expr pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:18">set</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:23">sig</name><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:29" pos:end="35:40"><expr pos:start="35:29" pos:end="35:40"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:31">sc</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:40">oldmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="37:1" pos:end="37:25">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:25"><call pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:11">defined</name><argument_list pos:start="37:12" pos:end="37:25">(<argument pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:50"><call pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:14">__put_user</name><argument_list pos:start="39:15" pos:end="39:50">(<argument pos:start="39:16" pos:end="39:32"><expr pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:18">set</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:23">sig</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>]</index></name> <operator pos:start="39:28" pos:end="39:29">&gt;&gt;</operator> <literal type="number" pos:start="39:31" pos:end="39:32">32</literal></expr></argument>, <argument pos:start="39:35" pos:end="39:49"><expr pos:start="39:35" pos:end="39:49"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:49"><name pos:start="39:36" pos:end="39:37">sc</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:46">_unused</name><index pos:start="39:47" pos:end="39:49">[<expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="41:1" pos:end="41:5">#<cpp:directive pos:start="41:2" pos:end="41:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:44"><call pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:14">__put_user</name><argument_list pos:start="43:15" pos:end="43:44">(<argument pos:start="43:16" pos:end="43:26"><expr pos:start="43:16" pos:end="43:26"><name pos:start="43:16" pos:end="43:26"><name pos:start="43:16" pos:end="43:18">set</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">sig</name><index pos:start="43:24" pos:end="43:26">[<expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:29" pos:end="43:43"><expr pos:start="43:29" pos:end="43:43"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:43"><name pos:start="43:30" pos:end="43:31">sc</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:40">_unused</name><index pos:start="43:41" pos:end="43:43">[<expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><call pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:14">__put_user</name><argument_list pos:start="47:15" pos:end="47:44">(<argument pos:start="47:16" pos:end="47:32"><expr pos:start="47:16" pos:end="47:32"><call pos:start="47:16" pos:end="47:32"><name pos:start="47:16" pos:end="47:18">h2g</name><argument_list pos:start="47:19" pos:end="47:32">(<argument pos:start="47:20" pos:end="47:31"><expr pos:start="47:20" pos:end="47:31"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:25">frame</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:31">mctx</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:35" pos:end="47:43"><expr pos:start="47:35" pos:end="47:43"><operator pos:start="47:35" pos:end="47:35">&amp;</operator><name pos:start="47:36" pos:end="47:43"><name pos:start="47:36" pos:end="47:37">sc</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:43">regs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><call pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:14">__put_user</name><argument_list pos:start="49:15" pos:end="49:32">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">sig</name></expr></argument>, <argument pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:31"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:31"><name pos:start="49:22" pos:end="49:23">sc</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:31">signal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:26">/* Save user regs.  */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:66"><expr pos:start="55:5" pos:end="55:65"><name pos:start="55:5" pos:end="55:7">err</name> <operator pos:start="55:9" pos:end="55:10">|=</operator> <call pos:start="55:12" pos:end="55:65"><name pos:start="55:12" pos:end="55:25">save_user_regs</name><argument_list pos:start="55:26" pos:end="55:65">(<argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">env</name></expr></argument>, <argument pos:start="55:32" pos:end="55:43"><expr pos:start="55:32" pos:end="55:43"><operator pos:start="55:32" pos:end="55:32">&amp;</operator><name pos:start="55:33" pos:end="55:43"><name pos:start="55:33" pos:end="55:37">frame</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:43">mctx</name></name></expr></argument>, <argument pos:start="55:46" pos:end="55:64"><expr pos:start="55:46" pos:end="55:64"><name pos:start="55:46" pos:end="55:64">TARGET_NR_sigreturn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="61:58">/* The kernel checks for the presence of a VDSO here.  We don't

       emulate a vdso, so use a sigreturn system call.  */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:52"><expr pos:start="63:5" pos:end="63:51"><name pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:11">lr</name></name> <operator pos:start="63:13" pos:end="63:13">=</operator> <operator pos:start="63:15" pos:end="63:15">(</operator><name pos:start="63:16" pos:end="63:27">target_ulong</name><operator pos:start="63:28" pos:end="63:28">)</operator> <call pos:start="63:30" pos:end="63:51"><name pos:start="63:30" pos:end="63:32">h2g</name><argument_list pos:start="63:33" pos:end="63:51">(<argument pos:start="63:34" pos:end="63:50"><expr pos:start="63:34" pos:end="63:50"><name pos:start="63:34" pos:end="63:50"><name pos:start="63:34" pos:end="63:38">frame</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:44">mctx</name><operator pos:start="63:45" pos:end="63:45">.</operator><name pos:start="63:46" pos:end="63:50">tramp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:38">/* Turn off all fp exceptions.  */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:19"><expr pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">fpscr</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:62">/* Create a stack frame for the caller of the handler.  */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:42"><expr pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:9">newsp</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:22">frame_addr</name> <operator pos:start="75:24" pos:end="75:24">-</operator> <name pos:start="75:26" pos:end="75:41">SIGNAL_FRAMESIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:54"><expr pos:start="77:5" pos:end="77:53"><name pos:start="77:5" pos:end="77:7">err</name> <operator pos:start="77:9" pos:end="77:10">|=</operator> <call pos:start="77:12" pos:end="77:53"><name pos:start="77:12" pos:end="77:19">put_user</name><argument_list pos:start="77:20" pos:end="77:53">(<argument pos:start="77:21" pos:end="77:31"><expr pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:23">env</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:28">gpr</name><index pos:start="77:29" pos:end="77:31">[<expr pos:start="77:30" pos:end="77:30"><literal type="number" pos:start="77:30" pos:end="77:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:34" pos:end="77:38"><expr pos:start="77:34" pos:end="77:38"><name pos:start="77:34" pos:end="77:38">newsp</name></expr></argument>, <argument pos:start="77:41" pos:end="77:52"><expr pos:start="77:41" pos:end="77:52"><name pos:start="77:41" pos:end="77:52">target_ulong</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="83:21"><if pos:start="81:5" pos:end="83:21">if <condition pos:start="81:8" pos:end="81:12">(<expr pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">err</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:21"><block_content pos:start="83:9" pos:end="83:21">

        <goto pos:start="83:9" pos:end="83:21">goto <name pos:start="83:14" pos:end="83:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:47">/* Set up registers for signal handler.  */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:24"><expr pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:15"><name pos:start="89:5" pos:end="89:7">env</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:12">gpr</name><index pos:start="89:13" pos:end="89:15">[<expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">1</literal></expr>]</index></name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:23">newsp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:25"><expr pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:15"><name pos:start="91:5" pos:end="91:7">env</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:12">gpr</name><index pos:start="91:13" pos:end="91:15">[<expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">3</literal></expr>]</index></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:24">signal</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:70"><expr pos:start="93:5" pos:end="93:69"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:7">env</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:12">gpr</name><index pos:start="93:13" pos:end="93:15">[<expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">4</literal></expr>]</index></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:28">frame_addr</name> <operator pos:start="93:30" pos:end="93:30">+</operator> <call pos:start="93:32" pos:end="93:69"><name pos:start="93:32" pos:end="93:39">offsetof</name><argument_list pos:start="93:40" pos:end="93:69">(<argument pos:start="93:41" pos:end="93:62"><expr pos:start="93:41" pos:end="93:62">struct <name pos:start="93:48" pos:end="93:62">target_sigframe</name></expr></argument>, <argument pos:start="93:65" pos:end="93:68"><expr pos:start="93:65" pos:end="93:68"><name pos:start="93:65" pos:end="93:68">sctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:46"><expr pos:start="95:5" pos:end="95:45"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:7">env</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:12">nip</name></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:28">target_ulong</name><operator pos:start="95:29" pos:end="95:29">)</operator> <name pos:start="95:31" pos:end="95:45"><name pos:start="95:31" pos:end="95:32">ka</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:45">_sa_handler</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="97:5" pos:end="97:58">/* Signal handlers are entered in big-endian mode.  */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:24"><expr pos:start="99:5" pos:end="99:23"><name pos:start="99:5" pos:end="99:12"><name pos:start="99:5" pos:end="99:7">env</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:12">msr</name></name> <operator pos:start="99:14" pos:end="99:15">&amp;=</operator> <operator pos:start="99:17" pos:end="99:17">~</operator><name pos:start="99:18" pos:end="99:23">MSR_LE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:45"><expr pos:start="103:5" pos:end="103:44"><call pos:start="103:5" pos:end="103:44"><name pos:start="103:5" pos:end="103:22">unlock_user_struct</name><argument_list pos:start="103:23" pos:end="103:44">(<argument pos:start="103:24" pos:end="103:28"><expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:28">frame</name></expr></argument>, <argument pos:start="103:31" pos:end="103:40"><expr pos:start="103:31" pos:end="103:40"><name pos:start="103:31" pos:end="103:40">frame_addr</name></expr></argument>, <argument pos:start="103:43" pos:end="103:43"><expr pos:start="103:43" pos:end="103:43"><literal type="number" pos:start="103:43" pos:end="103:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:11">return;</return>



<label pos:start="109:1" pos:end="109:8"><name pos:start="109:1" pos:end="109:7">sigsegv</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:45"><expr pos:start="111:5" pos:end="111:44"><call pos:start="111:5" pos:end="111:44"><name pos:start="111:5" pos:end="111:22">unlock_user_struct</name><argument_list pos:start="111:23" pos:end="111:44">(<argument pos:start="111:24" pos:end="111:28"><expr pos:start="111:24" pos:end="111:28"><name pos:start="111:24" pos:end="111:28">frame</name></expr></argument>, <argument pos:start="111:31" pos:end="111:40"><expr pos:start="111:31" pos:end="111:40"><name pos:start="111:31" pos:end="111:40">frame_addr</name></expr></argument>, <argument pos:start="111:43" pos:end="111:43"><expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:47"><expr pos:start="113:5" pos:end="113:46"><call pos:start="113:5" pos:end="113:46"><name pos:start="113:5" pos:end="113:12">qemu_log</name><argument_list pos:start="113:13" pos:end="113:46">(<argument pos:start="113:14" pos:end="113:45"><expr pos:start="113:14" pos:end="113:45"><literal type="string" pos:start="113:14" pos:end="113:45">"segfaulting from setup_frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><call pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:13">force_sig</name><argument_list pos:start="115:14" pos:end="115:29">(<argument pos:start="115:15" pos:end="115:28"><expr pos:start="115:15" pos:end="115:28"><name pos:start="115:15" pos:end="115:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
