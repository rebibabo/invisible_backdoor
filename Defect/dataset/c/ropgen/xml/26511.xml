<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26511.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">write_IRQreg</name> <parameter_list pos:start="1:33" pos:end="3:60">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">openpic_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">opp</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:58"><decl pos:start="1:50" pos:end="1:58"><type pos:start="1:50" pos:end="1:58"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:58">n_IRQ</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">uint32_t</name></type> <name pos:start="3:43" pos:end="3:45">reg</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:55">uint32_t</name></type> <name pos:start="3:57" pos:end="3:59">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:5">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="47:5">switch <condition pos:start="11:12" pos:end="11:16">(<expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">reg</name></expr>)</condition> <block pos:start="11:18" pos:end="47:5">{<block_content pos:start="13:5" pos:end="45:14">

    <case pos:start="13:5" pos:end="13:18">case <expr pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:17">IRQ_IPVP</name></expr>:</case>

        <comment type="block" pos:start="15:9" pos:end="17:24">/* NOTE: not fully accurate for special IRQs, but simple and

           sufficient */</comment>

        <comment type="block" pos:start="19:9" pos:end="19:39">/* ACTIVITY bit is read-only */</comment>

        <expr_stmt pos:start="21:9" pos:end="25:31"><expr pos:start="21:9" pos:end="25:30"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">opp</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">src</name><index pos:start="21:17" pos:end="21:23">[<expr pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:22">n_IRQ</name></expr>]</index></name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:28">ipvp</name> <operator pos:start="21:30" pos:end="21:30">=</operator>

            <operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:16">opp</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">src</name><index pos:start="23:22" pos:end="23:28">[<expr pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:27">n_IRQ</name></expr>]</index></name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:33">ipvp</name> <operator pos:start="23:35" pos:end="23:35">&amp;</operator> <literal type="number" pos:start="23:37" pos:end="23:46">0x40000000</literal><operator pos:start="23:47" pos:end="23:47">)</operator> <operator pos:start="23:49" pos:end="23:49">|</operator>

            <operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:16">val</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <literal type="number" pos:start="25:20" pos:end="25:29">0x800F00FF</literal><operator pos:start="25:30" pos:end="25:30">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><call pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:26">openpic_update_irq</name><argument_list pos:start="27:27" pos:end="27:38">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">opp</name></expr></argument>, <argument pos:start="27:33" pos:end="27:37"><expr pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:37">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:50"><expr pos:start="29:9" pos:end="31:49"><call pos:start="29:9" pos:end="31:49"><name pos:start="29:9" pos:end="29:15">DPRINTF</name><argument_list pos:start="29:16" pos:end="31:49">(<argument pos:start="29:17" pos:end="29:51"><expr pos:start="29:17" pos:end="29:51"><literal type="string" pos:start="29:17" pos:end="29:51">"Set IPVP %d to 0x%08x -&gt; 0x%08x\n"</literal></expr></argument>,

                <argument pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:21">n_IRQ</name></expr></argument>, <argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">val</name></expr></argument>, <argument pos:start="31:29" pos:end="31:48"><expr pos:start="31:29" pos:end="31:48"><name pos:start="31:29" pos:end="31:43"><name pos:start="31:29" pos:end="31:31">opp</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:36">src</name><index pos:start="31:37" pos:end="31:43">[<expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:42">n_IRQ</name></expr>]</index></name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:48">ipvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:17">case <expr pos:start="35:10" pos:end="35:16"><name pos:start="35:10" pos:end="35:16">IRQ_IDE</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:11">tmp</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:17">val</name> <operator pos:start="37:19" pos:end="37:19">&amp;</operator> <literal type="number" pos:start="37:21" pos:end="37:30">0xC0000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:42"><expr pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:11">tmp</name> <operator pos:start="39:13" pos:end="39:14">|=</operator> <name pos:start="39:16" pos:end="39:18">val</name> <operator pos:start="39:20" pos:end="39:20">&amp;</operator> <operator pos:start="39:22" pos:end="39:22">(</operator><operator pos:start="39:23" pos:end="39:23">(</operator><literal type="number" pos:start="39:24" pos:end="39:24">1</literal> <operator pos:start="39:26" pos:end="39:27">&lt;&lt;</operator> <name pos:start="39:29" pos:end="39:35">MAX_CPU</name><operator pos:start="39:36" pos:end="39:36">)</operator> <operator pos:start="39:38" pos:end="39:38">-</operator> <literal type="number" pos:start="39:40" pos:end="39:40">1</literal><operator pos:start="39:41" pos:end="39:41">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">opp</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">src</name><index pos:start="41:17" pos:end="41:23">[<expr pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:22">n_IRQ</name></expr>]</index></name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:27">ide</name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:33">tmp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:70"><expr pos:start="43:9" pos:end="43:69"><call pos:start="43:9" pos:end="43:69"><name pos:start="43:9" pos:end="43:15">DPRINTF</name><argument_list pos:start="43:16" pos:end="43:69">(<argument pos:start="43:17" pos:end="43:40"><expr pos:start="43:17" pos:end="43:40"><literal type="string" pos:start="43:17" pos:end="43:40">"Set IDE %d to 0x%08x\n"</literal></expr></argument>, <argument pos:start="43:43" pos:end="43:47"><expr pos:start="43:43" pos:end="43:47"><name pos:start="43:43" pos:end="43:47">n_IRQ</name></expr></argument>, <argument pos:start="43:50" pos:end="43:68"><expr pos:start="43:50" pos:end="43:68"><name pos:start="43:50" pos:end="43:64"><name pos:start="43:50" pos:end="43:52">opp</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:57">src</name><index pos:start="43:58" pos:end="43:64">[<expr pos:start="43:59" pos:end="43:63"><name pos:start="43:59" pos:end="43:63">n_IRQ</name></expr>]</index></name><operator pos:start="43:65" pos:end="43:65">.</operator><name pos:start="43:66" pos:end="43:68">ide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
