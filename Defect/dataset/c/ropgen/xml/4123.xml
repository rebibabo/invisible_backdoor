<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4123.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:48"><name pos:start="1:1" pos:end="1:8">set_mdic</name><argument_list pos:start="1:9" pos:end="1:48">(<argument pos:start="1:10" pos:end="1:22">E1000State *s</argument>, <argument pos:start="1:25" pos:end="1:33">int index</argument>, <argument pos:start="1:36" pos:end="1:47">uint32_t val</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">data</name> <init pos:start="5:19" pos:end="5:46">= <expr pos:start="5:21" pos:end="5:46"><name pos:start="5:21" pos:end="5:23">val</name> <operator pos:start="5:25" pos:end="5:25">&amp;</operator> <name pos:start="5:27" pos:end="5:46">E1000_MDIC_DATA_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:74"><decl pos:start="7:5" pos:end="7:73"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name> <init pos:start="7:19" pos:end="7:73">= <expr pos:start="7:21" pos:end="7:73"><operator pos:start="7:21" pos:end="7:21">(</operator><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:25">val</name> <operator pos:start="7:27" pos:end="7:27">&amp;</operator> <name pos:start="7:29" pos:end="7:47">E1000_MDIC_REG_MASK</name><operator pos:start="7:48" pos:end="7:48">)</operator> <operator pos:start="7:50" pos:end="7:51">&gt;&gt;</operator> <name pos:start="7:53" pos:end="7:72">E1000_MDIC_REG_SHIFT</name><operator pos:start="7:73" pos:end="7:73">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="51:5"><if pos:start="11:5" pos:end="13:50">if <condition pos:start="11:8" pos:end="11:65">(<expr pos:start="11:9" pos:end="11:64"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:12">val</name> <operator pos:start="11:14" pos:end="11:14">&amp;</operator> <name pos:start="11:16" pos:end="11:34">E1000_MDIC_PHY_MASK</name><operator pos:start="11:35" pos:end="11:35">)</operator> <operator pos:start="11:37" pos:end="11:38">&gt;&gt;</operator> <name pos:start="11:40" pos:end="11:59">E1000_MDIC_PHY_SHIFT</name> <operator pos:start="11:61" pos:end="11:62">!=</operator> <literal type="number" pos:start="11:64" pos:end="11:64">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:50"><block_content pos:start="13:9" pos:end="13:50"> <comment type="line" pos:start="11:67" pos:end="11:74">// phy #</comment>

        <expr_stmt pos:start="13:9" pos:end="13:50"><expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:11">val</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:30"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:24">mac_reg</name><index pos:start="13:25" pos:end="13:30">[<expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">MDIC</name></expr>]</index></name> <operator pos:start="13:32" pos:end="13:32">|</operator> <name pos:start="13:34" pos:end="13:49">E1000_MDIC_ERROR</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="15:5" pos:end="29:5">else if <condition pos:start="15:13" pos:end="15:38">(<expr pos:start="15:14" pos:end="15:37"><name pos:start="15:14" pos:end="15:16">val</name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <name pos:start="15:20" pos:end="15:37">E1000_MDIC_OP_READ</name></expr>)</condition> <block pos:start="15:40" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:50">

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:14">DBGOUT</name><argument_list pos:start="17:15" pos:end="17:50">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">MDIC</name></expr></argument>, <argument pos:start="17:22" pos:end="17:43"><expr pos:start="17:22" pos:end="17:43"><literal type="string" pos:start="17:22" pos:end="17:43">"MDIC read reg 0x%x\n"</literal></expr></argument>, <argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><name pos:start="17:46" pos:end="17:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="27:50"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:40">(<expr pos:start="19:13" pos:end="19:39"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:30"><name pos:start="19:15" pos:end="19:24">phy_regcap</name><index pos:start="19:25" pos:end="19:30">[<expr pos:start="19:26" pos:end="19:29"><name pos:start="19:26" pos:end="19:29">addr</name></expr>]</index></name> <operator pos:start="19:32" pos:end="19:32">&amp;</operator> <name pos:start="19:34" pos:end="19:38">PHY_R</name><operator pos:start="19:39" pos:end="19:39">)</operator></expr>)</condition> <block pos:start="19:42" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:36">

            <expr_stmt pos:start="21:13" pos:end="21:63"><expr pos:start="21:13" pos:end="21:62"><call pos:start="21:13" pos:end="21:62"><name pos:start="21:13" pos:end="21:18">DBGOUT</name><argument_list pos:start="21:19" pos:end="21:62">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">MDIC</name></expr></argument>, <argument pos:start="21:26" pos:end="21:55"><expr pos:start="21:26" pos:end="21:55"><literal type="string" pos:start="21:26" pos:end="21:55">"MDIC read reg %x unhandled\n"</literal></expr></argument>, <argument pos:start="21:58" pos:end="21:61"><expr pos:start="21:58" pos:end="21:61"><name pos:start="21:58" pos:end="21:61">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:36"><expr pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:15">val</name> <operator pos:start="23:17" pos:end="23:18">|=</operator> <name pos:start="23:20" pos:end="23:35">E1000_MDIC_ERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="27:50">else<block type="pseudo" pos:start="27:13" pos:end="27:50"><block_content pos:start="27:13" pos:end="27:50">

            <expr_stmt pos:start="27:13" pos:end="27:50"><expr pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:15">val</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:22">val</name> <operator pos:start="27:24" pos:end="27:24">^</operator> <name pos:start="27:26" pos:end="27:29">data</name><operator pos:start="27:30" pos:end="27:30">)</operator> <operator pos:start="27:32" pos:end="27:32">|</operator> <name pos:start="27:34" pos:end="27:49"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:43">phy_reg</name><index pos:start="27:44" pos:end="27:49">[<expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:48">addr</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="51:5">else if <condition pos:start="29:15" pos:end="29:41">(<expr pos:start="29:16" pos:end="29:40"><name pos:start="29:16" pos:end="29:18">val</name> <operator pos:start="29:20" pos:end="29:20">&amp;</operator> <name pos:start="29:22" pos:end="29:40">E1000_MDIC_OP_WRITE</name></expr>)</condition> <block pos:start="29:43" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:9">

        <expr_stmt pos:start="31:9" pos:end="31:70"><expr pos:start="31:9" pos:end="31:69"><call pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:14">DBGOUT</name><argument_list pos:start="31:15" pos:end="31:69">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">MDIC</name></expr></argument>, <argument pos:start="31:22" pos:end="31:56"><expr pos:start="31:22" pos:end="31:56"><literal type="string" pos:start="31:22" pos:end="31:56">"MDIC write reg 0x%x, value 0x%x\n"</literal></expr></argument>, <argument pos:start="31:59" pos:end="31:62"><expr pos:start="31:59" pos:end="31:62"><name pos:start="31:59" pos:end="31:62">addr</name></expr></argument>, <argument pos:start="31:65" pos:end="31:68"><expr pos:start="31:65" pos:end="31:68"><name pos:start="31:65" pos:end="31:68">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="49:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:40">(<expr pos:start="33:13" pos:end="33:39"><operator pos:start="33:13" pos:end="33:13">!</operator><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:30"><name pos:start="33:15" pos:end="33:24">phy_regcap</name><index pos:start="33:25" pos:end="33:30">[<expr pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:29">addr</name></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">&amp;</operator> <name pos:start="33:34" pos:end="33:38">PHY_W</name><operator pos:start="33:39" pos:end="33:39">)</operator></expr>)</condition> <block pos:start="33:42" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:36">

            <expr_stmt pos:start="35:13" pos:end="35:64"><expr pos:start="35:13" pos:end="35:63"><call pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:18">DBGOUT</name><argument_list pos:start="35:19" pos:end="35:63">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">MDIC</name></expr></argument>, <argument pos:start="35:26" pos:end="35:56"><expr pos:start="35:26" pos:end="35:56"><literal type="string" pos:start="35:26" pos:end="35:56">"MDIC write reg %x unhandled\n"</literal></expr></argument>, <argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:15">val</name> <operator pos:start="37:17" pos:end="37:18">|=</operator> <name pos:start="37:20" pos:end="37:35">E1000_MDIC_ERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="49:9">else <block pos:start="39:16" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:36">

            <if_stmt pos:start="41:13" pos:end="45:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:61">(<expr pos:start="41:17" pos:end="41:60"><name pos:start="41:17" pos:end="41:20">addr</name> <operator pos:start="41:22" pos:end="41:22">&lt;</operator> <name pos:start="41:24" pos:end="41:35">NPHYWRITEOPS</name> <operator pos:start="41:37" pos:end="41:38">&amp;&amp;</operator> <name pos:start="41:40" pos:end="41:60"><name pos:start="41:40" pos:end="41:54">phyreg_writeops</name><index pos:start="41:55" pos:end="41:60">[<expr pos:start="41:56" pos:end="41:59"><name pos:start="41:56" pos:end="41:59">addr</name></expr>]</index></name></expr>)</condition> <block pos:start="41:63" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:54">

                <expr_stmt pos:start="43:17" pos:end="43:54"><expr pos:start="43:17" pos:end="43:53"><name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:31">phyreg_writeops</name><index pos:start="43:32" pos:end="43:37">[<expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">addr</name></expr>]</index></name><operator pos:start="43:38" pos:end="43:38">(</operator><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:40">,</operator> <name pos:start="43:42" pos:end="43:46">index</name><operator pos:start="43:47" pos:end="43:47">,</operator> <name pos:start="43:49" pos:end="43:52">data</name><operator pos:start="43:53" pos:end="43:53">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:28"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">phy_reg</name><index pos:start="47:23" pos:end="47:28">[<expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">addr</name></expr>]</index></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:35">data</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:14">mac_reg</name><index pos:start="53:15" pos:end="53:20">[<expr pos:start="53:16" pos:end="53:19"><name pos:start="53:16" pos:end="53:19">MDIC</name></expr>]</index></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:26">val</name> <operator pos:start="53:28" pos:end="53:28">|</operator> <name pos:start="53:30" pos:end="53:45">E1000_MDIC_READY</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:32">(<expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:11">val</name> <operator pos:start="57:13" pos:end="57:13">&amp;</operator> <name pos:start="57:15" pos:end="57:31">E1000_MDIC_INT_EN</name></expr>)</condition> <block pos:start="57:34" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:38">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:15">set_ics</name><argument_list pos:start="59:16" pos:end="59:37">(<argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">s</name></expr></argument>, <argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr></argument>, <argument pos:start="59:23" pos:end="59:36"><expr pos:start="59:23" pos:end="59:36"><name pos:start="59:23" pos:end="59:36">E1000_ICR_MDAC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
