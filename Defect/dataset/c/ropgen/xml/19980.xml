<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19980.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qxl_init_common</name><parameter_list pos:start="1:27" pos:end="1:45">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:39">PCIQXLDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">qxl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:11">uint8_t</name><modifier pos:start="5:12" pos:end="5:12">*</modifier></type> <name pos:start="5:14" pos:end="5:19">config</name> <init pos:start="5:21" pos:end="5:37">= <expr pos:start="5:23" pos:end="5:37"><name pos:start="5:23" pos:end="5:37"><name pos:start="5:23" pos:end="5:25">qxl</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">pci</name><operator pos:start="5:31" pos:end="5:31">.</operator><name pos:start="5:32" pos:end="5:37">config</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:27">pci_device_rev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">io_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:7">qxl</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:13">mode</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:34">QXL_MODE_UNDEFINED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">qxl</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:19">generation</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">qxl</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:21">num_memslots</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:36">NUM_MEMSLOTS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:19">qemu_mutex_init</name><argument_list pos:start="19:20" pos:end="19:37">(<argument pos:start="19:21" pos:end="19:36"><expr pos:start="19:21" pos:end="19:36"><operator pos:start="19:21" pos:end="19:21">&amp;</operator><name pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:24">qxl</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:36">track_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><call pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:19">qemu_mutex_init</name><argument_list pos:start="21:20" pos:end="21:37">(<argument pos:start="21:21" pos:end="21:36"><expr pos:start="21:21" pos:end="21:36"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:36"><name pos:start="21:22" pos:end="21:24">qxl</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:7">qxl</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:22">current_async</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:41">QXL_UNDEFINED_IO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:7">qxl</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:18">guest_bug</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="79:5">switch <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:15">qxl</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">revision</name></name></expr>)</condition> <block pos:start="29:28" pos:end="79:5">{<block_content pos:start="31:5" pos:end="77:18">

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">1</literal></expr>:</case> <comment type="block" pos:start="31:13" pos:end="31:36">/* spice 0.4 -- qxl-1 */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:22">pci_device_rev</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:48">QXL_REVISION_STABLE_V04</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:15">io_size</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">8</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:36">/* spice 0.6 -- qxl-2 */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:22">pci_device_rev</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:48">QXL_REVISION_STABLE_V06</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:15">io_size</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:20">16</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:23">/* qxl-3 */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:22">pci_device_rev</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:48">QXL_REVISION_STABLE_V10</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:15">io_size</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:20">32</literal></expr>;</expr_stmt> <comment type="block" pos:start="51:23" pos:end="51:56">/* PCI region size must be pow2 */</comment>

        <break pos:start="53:9" pos:end="60:0">break;</break>

<comment type="block" pos:start="55:1" pos:end="55:24">/* 0x000b01 == 0.11.1 */</comment>

<cpp:if pos:start="57:1" pos:end="59:52">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="59:52"><name pos:start="57:5" pos:end="57:24">SPICE_SERVER_VERSION</name> <operator pos:start="57:26" pos:end="57:27">&gt;=</operator> <literal type="number" pos:start="57:29" pos:end="57:36">0x000b01</literal> <operator pos:start="57:38" pos:end="57:39">&amp;&amp;</operator> \

        <call pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:15">defined</name><argument_list pos:start="59:16" pos:end="59:52">(<argument pos:start="59:17" pos:end="59:51"><expr pos:start="59:17" pos:end="59:51"><name pos:start="59:17" pos:end="59:51">CONFIG_QXL_IO_MONITORS_CONFIG_ASYNC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">4</literal></expr>:</case> <comment type="block" pos:start="61:13" pos:end="61:23">/* qxl-4 */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:22">pci_device_rev</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:48">QXL_REVISION_STABLE_V12</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:54"><expr pos:start="65:9" pos:end="65:53"><name pos:start="65:9" pos:end="65:15">io_size</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:53"><name pos:start="65:19" pos:end="65:26">msb_mask</name><argument_list pos:start="65:27" pos:end="65:53">(<argument pos:start="65:28" pos:end="65:52"><expr pos:start="65:28" pos:end="65:52"><name pos:start="65:28" pos:end="65:44">QXL_IO_RANGE_SIZE</name> <operator pos:start="65:46" pos:end="65:46">*</operator> <literal type="number" pos:start="65:48" pos:end="65:50">2</literal> <operator pos:start="65:50" pos:end="65:50">-</operator> <literal type="number" pos:start="65:52" pos:end="65:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="70:0">break;</break>

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

    <default pos:start="71:5" pos:end="71:12">default:</default>

        <expr_stmt pos:start="73:9" pos:end="75:58"><expr pos:start="73:9" pos:end="75:57"><call pos:start="73:9" pos:end="75:57"><name pos:start="73:9" pos:end="73:20">error_report</name><argument_list pos:start="73:21" pos:end="75:57">(<argument pos:start="73:22" pos:end="73:66"><expr pos:start="73:22" pos:end="73:66"><literal type="string" pos:start="73:22" pos:end="73:66">"Invalid revision %d for qxl device (max %d)"</literal></expr></argument>,

                     <argument pos:start="75:22" pos:end="75:34"><expr pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:24">qxl</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:34">revision</name></name></expr></argument>, <argument pos:start="75:37" pos:end="75:56"><expr pos:start="75:37" pos:end="75:56"><name pos:start="75:37" pos:end="75:56">QXL_DEFAULT_REVISION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="83:5" pos:end="83:59"><expr pos:start="83:5" pos:end="83:58"><call pos:start="83:5" pos:end="83:58"><name pos:start="83:5" pos:end="83:16">pci_set_byte</name><argument_list pos:start="83:17" pos:end="83:58">(<argument pos:start="83:18" pos:end="83:41"><expr pos:start="83:18" pos:end="83:41"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:41"><name pos:start="83:19" pos:end="83:24">config</name><index pos:start="83:25" pos:end="83:41">[<expr pos:start="83:26" pos:end="83:40"><name pos:start="83:26" pos:end="83:40">PCI_REVISION_ID</name></expr>]</index></name></expr></argument>, <argument pos:start="83:44" pos:end="83:57"><expr pos:start="83:44" pos:end="83:57"><name pos:start="83:44" pos:end="83:57">pci_device_rev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><call pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:16">pci_set_byte</name><argument_list pos:start="85:17" pos:end="85:47">(<argument pos:start="85:18" pos:end="85:43"><expr pos:start="85:18" pos:end="85:43"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:43"><name pos:start="85:19" pos:end="85:24">config</name><index pos:start="85:25" pos:end="85:43">[<expr pos:start="85:26" pos:end="85:42"><name pos:start="85:26" pos:end="85:42">PCI_INTERRUPT_PIN</name></expr>]</index></name></expr></argument>, <argument pos:start="85:46" pos:end="85:46"><expr pos:start="85:46" pos:end="85:46"><literal type="number" pos:start="85:46" pos:end="85:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:7">qxl</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:17">rom_size</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <call pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:32">qxl_rom_size</name><argument_list pos:start="89:33" pos:end="89:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:69"><expr pos:start="91:5" pos:end="91:68"><call pos:start="91:5" pos:end="91:68"><name pos:start="91:5" pos:end="91:26">memory_region_init_ram</name><argument_list pos:start="91:27" pos:end="91:68">(<argument pos:start="91:28" pos:end="91:40"><expr pos:start="91:28" pos:end="91:40"><operator pos:start="91:28" pos:end="91:28">&amp;</operator><name pos:start="91:29" pos:end="91:40"><name pos:start="91:29" pos:end="91:31">qxl</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:40">rom_bar</name></name></expr></argument>, <argument pos:start="91:43" pos:end="91:52"><expr pos:start="91:43" pos:end="91:52"><literal type="string" pos:start="91:43" pos:end="91:52">"qxl.vrom"</literal></expr></argument>, <argument pos:start="91:55" pos:end="91:67"><expr pos:start="91:55" pos:end="91:67"><name pos:start="91:55" pos:end="91:67"><name pos:start="91:55" pos:end="91:57">qxl</name><operator pos:start="91:58" pos:end="91:59">-&gt;</operator><name pos:start="91:60" pos:end="91:67">rom_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:56"><expr pos:start="93:5" pos:end="93:55"><call pos:start="93:5" pos:end="93:55"><name pos:start="93:5" pos:end="93:24">vmstate_register_ram</name><argument_list pos:start="93:25" pos:end="93:55">(<argument pos:start="93:26" pos:end="93:38"><expr pos:start="93:26" pos:end="93:38"><operator pos:start="93:26" pos:end="93:26">&amp;</operator><name pos:start="93:27" pos:end="93:38"><name pos:start="93:27" pos:end="93:29">qxl</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:38">rom_bar</name></name></expr></argument>, <argument pos:start="93:41" pos:end="93:54"><expr pos:start="93:41" pos:end="93:54"><operator pos:start="93:41" pos:end="93:41">&amp;</operator><name pos:start="93:42" pos:end="93:54"><name pos:start="93:42" pos:end="93:44">qxl</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:49">pci</name><operator pos:start="93:50" pos:end="93:50">.</operator><name pos:start="93:51" pos:end="93:54">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:22"><expr pos:start="95:5" pos:end="95:21"><call pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:16">init_qxl_rom</name><argument_list pos:start="95:17" pos:end="95:21">(<argument pos:start="95:18" pos:end="95:20"><expr pos:start="95:18" pos:end="95:20"><name pos:start="95:18" pos:end="95:20">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:22"><expr pos:start="97:5" pos:end="97:21"><call pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:16">init_qxl_ram</name><argument_list pos:start="97:17" pos:end="97:21">(<argument pos:start="97:18" pos:end="97:20"><expr pos:start="97:18" pos:end="97:20"><name pos:start="97:18" pos:end="97:20">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:74"><expr pos:start="101:5" pos:end="101:73"><name pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:7">qxl</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:23">guest_surfaces</name><operator pos:start="101:24" pos:end="101:24">.</operator><name pos:start="101:25" pos:end="101:28">cmds</name></name> <operator pos:start="101:30" pos:end="101:30">=</operator> <call pos:start="101:32" pos:end="101:73"><name pos:start="101:32" pos:end="101:37">g_new0</name><argument_list pos:start="101:38" pos:end="101:73">(<argument pos:start="101:39" pos:end="101:49"><expr pos:start="101:39" pos:end="101:49"><name pos:start="101:39" pos:end="101:49">QXLPHYSICAL</name></expr></argument>, <argument pos:start="101:52" pos:end="101:72"><expr pos:start="101:52" pos:end="101:72"><name pos:start="101:52" pos:end="101:72"><name pos:start="101:52" pos:end="101:54">qxl</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:59">ssd</name><operator pos:start="101:60" pos:end="101:60">.</operator><name pos:start="101:61" pos:end="101:72">num_surfaces</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:71"><expr pos:start="103:5" pos:end="103:70"><call pos:start="103:5" pos:end="103:70"><name pos:start="103:5" pos:end="103:26">memory_region_init_ram</name><argument_list pos:start="103:27" pos:end="103:70">(<argument pos:start="103:28" pos:end="103:41"><expr pos:start="103:28" pos:end="103:41"><operator pos:start="103:28" pos:end="103:28">&amp;</operator><name pos:start="103:29" pos:end="103:41"><name pos:start="103:29" pos:end="103:31">qxl</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:41">vram_bar</name></name></expr></argument>, <argument pos:start="103:44" pos:end="103:53"><expr pos:start="103:44" pos:end="103:53"><literal type="string" pos:start="103:44" pos:end="103:53">"qxl.vram"</literal></expr></argument>, <argument pos:start="103:56" pos:end="103:69"><expr pos:start="103:56" pos:end="103:69"><name pos:start="103:56" pos:end="103:69"><name pos:start="103:56" pos:end="103:58">qxl</name><operator pos:start="103:59" pos:end="103:60">-&gt;</operator><name pos:start="103:61" pos:end="103:69">vram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:57"><expr pos:start="105:5" pos:end="105:56"><call pos:start="105:5" pos:end="105:56"><name pos:start="105:5" pos:end="105:24">vmstate_register_ram</name><argument_list pos:start="105:25" pos:end="105:56">(<argument pos:start="105:26" pos:end="105:39"><expr pos:start="105:26" pos:end="105:39"><operator pos:start="105:26" pos:end="105:26">&amp;</operator><name pos:start="105:27" pos:end="105:39"><name pos:start="105:27" pos:end="105:29">qxl</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:39">vram_bar</name></name></expr></argument>, <argument pos:start="105:42" pos:end="105:55"><expr pos:start="105:42" pos:end="105:55"><operator pos:start="105:42" pos:end="105:42">&amp;</operator><name pos:start="105:43" pos:end="105:55"><name pos:start="105:43" pos:end="105:45">qxl</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:50">pci</name><operator pos:start="105:51" pos:end="105:51">.</operator><name pos:start="105:52" pos:end="105:55">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="109:50"><expr pos:start="107:5" pos:end="109:49"><call pos:start="107:5" pos:end="109:49"><name pos:start="107:5" pos:end="107:28">memory_region_init_alias</name><argument_list pos:start="107:29" pos:end="109:49">(<argument pos:start="107:30" pos:end="107:45"><expr pos:start="107:30" pos:end="107:45"><operator pos:start="107:30" pos:end="107:30">&amp;</operator><name pos:start="107:31" pos:end="107:45"><name pos:start="107:31" pos:end="107:33">qxl</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:45">vram32_bar</name></name></expr></argument>, <argument pos:start="107:48" pos:end="107:59"><expr pos:start="107:48" pos:end="107:59"><literal type="string" pos:start="107:48" pos:end="107:59">"qxl.vram32"</literal></expr></argument>, <argument pos:start="107:62" pos:end="107:75"><expr pos:start="107:62" pos:end="107:75"><operator pos:start="107:62" pos:end="107:62">&amp;</operator><name pos:start="107:63" pos:end="107:75"><name pos:start="107:63" pos:end="107:65">qxl</name><operator pos:start="107:66" pos:end="107:67">-&gt;</operator><name pos:start="107:68" pos:end="107:75">vram_bar</name></name></expr></argument>,

                             <argument pos:start="109:30" pos:end="109:30"><expr pos:start="109:30" pos:end="109:30"><literal type="number" pos:start="109:30" pos:end="109:30">0</literal></expr></argument>, <argument pos:start="109:33" pos:end="109:48"><expr pos:start="109:33" pos:end="109:48"><name pos:start="109:33" pos:end="109:48"><name pos:start="109:33" pos:end="109:35">qxl</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:48">vram32_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="115:50"><expr pos:start="113:5" pos:end="115:49"><call pos:start="113:5" pos:end="115:49"><name pos:start="113:5" pos:end="113:25">memory_region_init_io</name><argument_list pos:start="113:26" pos:end="115:49">(<argument pos:start="113:27" pos:end="113:38"><expr pos:start="113:27" pos:end="113:38"><operator pos:start="113:27" pos:end="113:27">&amp;</operator><name pos:start="113:28" pos:end="113:38"><name pos:start="113:28" pos:end="113:30">qxl</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:38">io_bar</name></name></expr></argument>, <argument pos:start="113:41" pos:end="113:51"><expr pos:start="113:41" pos:end="113:51"><operator pos:start="113:41" pos:end="113:41">&amp;</operator><name pos:start="113:42" pos:end="113:51">qxl_io_ops</name></expr></argument>, <argument pos:start="113:54" pos:end="113:56"><expr pos:start="113:54" pos:end="113:56"><name pos:start="113:54" pos:end="113:56">qxl</name></expr></argument>,

                          <argument pos:start="115:27" pos:end="115:39"><expr pos:start="115:27" pos:end="115:39"><literal type="string" pos:start="115:27" pos:end="115:39">"qxl-ioports"</literal></expr></argument>, <argument pos:start="115:42" pos:end="115:48"><expr pos:start="115:42" pos:end="115:48"><name pos:start="115:42" pos:end="115:48">io_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if <condition pos:start="117:8" pos:end="117:21">(<expr pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:11">qxl</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:15">id</name></name> <operator pos:start="117:17" pos:end="117:18">==</operator> <literal type="number" pos:start="117:20" pos:end="117:20">0</literal></expr>)</condition> <block pos:start="117:23" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:39">

        <expr_stmt pos:start="119:9" pos:end="119:39"><expr pos:start="119:9" pos:end="119:38"><call pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:27">vga_dirty_log_start</name><argument_list pos:start="119:28" pos:end="119:38">(<argument pos:start="119:29" pos:end="119:37"><expr pos:start="119:29" pos:end="119:37"><operator pos:start="119:29" pos:end="119:29">&amp;</operator><name pos:start="119:30" pos:end="119:37"><name pos:start="119:30" pos:end="119:32">qxl</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:37">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:52"><expr pos:start="123:5" pos:end="123:51"><call pos:start="123:5" pos:end="123:51"><name pos:start="123:5" pos:end="123:37">memory_region_set_flush_coalesced</name><argument_list pos:start="123:38" pos:end="123:51">(<argument pos:start="123:39" pos:end="123:50"><expr pos:start="123:39" pos:end="123:50"><operator pos:start="123:39" pos:end="123:39">&amp;</operator><name pos:start="123:40" pos:end="123:50"><name pos:start="123:40" pos:end="123:42">qxl</name><operator pos:start="123:43" pos:end="123:44">-&gt;</operator><name pos:start="123:45" pos:end="123:50">io_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="129:5" pos:end="131:62"><expr pos:start="129:5" pos:end="131:61"><call pos:start="129:5" pos:end="131:61"><name pos:start="129:5" pos:end="129:20">pci_register_bar</name><argument_list pos:start="129:21" pos:end="131:61">(<argument pos:start="129:22" pos:end="129:30"><expr pos:start="129:22" pos:end="129:30"><operator pos:start="129:22" pos:end="129:22">&amp;</operator><name pos:start="129:23" pos:end="129:30"><name pos:start="129:23" pos:end="129:25">qxl</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:30">pci</name></name></expr></argument>, <argument pos:start="129:33" pos:end="129:50"><expr pos:start="129:33" pos:end="129:50"><name pos:start="129:33" pos:end="129:50">QXL_IO_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="131:22" pos:end="131:46"><expr pos:start="131:22" pos:end="131:46"><name pos:start="131:22" pos:end="131:46">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="131:49" pos:end="131:60"><expr pos:start="131:49" pos:end="131:60"><operator pos:start="131:49" pos:end="131:49">&amp;</operator><name pos:start="131:50" pos:end="131:60"><name pos:start="131:50" pos:end="131:52">qxl</name><operator pos:start="131:53" pos:end="131:54">-&gt;</operator><name pos:start="131:55" pos:end="131:60">io_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="137:67"><expr pos:start="135:5" pos:end="137:66"><call pos:start="135:5" pos:end="137:66"><name pos:start="135:5" pos:end="135:20">pci_register_bar</name><argument_list pos:start="135:21" pos:end="137:66">(<argument pos:start="135:22" pos:end="135:30"><expr pos:start="135:22" pos:end="135:30"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:30"><name pos:start="135:23" pos:end="135:25">qxl</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:30">pci</name></name></expr></argument>, <argument pos:start="135:33" pos:end="135:51"><expr pos:start="135:33" pos:end="135:51"><name pos:start="135:33" pos:end="135:51">QXL_ROM_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="137:22" pos:end="137:50"><expr pos:start="137:22" pos:end="137:50"><name pos:start="137:22" pos:end="137:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="137:53" pos:end="137:65"><expr pos:start="137:53" pos:end="137:65"><operator pos:start="137:53" pos:end="137:53">&amp;</operator><name pos:start="137:54" pos:end="137:65"><name pos:start="137:54" pos:end="137:56">qxl</name><operator pos:start="137:57" pos:end="137:58">-&gt;</operator><name pos:start="137:59" pos:end="137:65">rom_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="143:68"><expr pos:start="141:5" pos:end="143:67"><call pos:start="141:5" pos:end="143:67"><name pos:start="141:5" pos:end="141:20">pci_register_bar</name><argument_list pos:start="141:21" pos:end="143:67">(<argument pos:start="141:22" pos:end="141:30"><expr pos:start="141:22" pos:end="141:30"><operator pos:start="141:22" pos:end="141:22">&amp;</operator><name pos:start="141:23" pos:end="141:30"><name pos:start="141:23" pos:end="141:25">qxl</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:30">pci</name></name></expr></argument>, <argument pos:start="141:33" pos:end="141:51"><expr pos:start="141:33" pos:end="141:51"><name pos:start="141:33" pos:end="141:51">QXL_RAM_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="143:22" pos:end="143:50"><expr pos:start="143:22" pos:end="143:50"><name pos:start="143:22" pos:end="143:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="143:53" pos:end="143:66"><expr pos:start="143:53" pos:end="143:66"><operator pos:start="143:53" pos:end="143:53">&amp;</operator><name pos:start="143:54" pos:end="143:66"><name pos:start="143:54" pos:end="143:56">qxl</name><operator pos:start="143:57" pos:end="143:58">-&gt;</operator><name pos:start="143:59" pos:end="143:61">vga</name><operator pos:start="143:62" pos:end="143:62">.</operator><name pos:start="143:63" pos:end="143:66">vram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="149:70"><expr pos:start="147:5" pos:end="149:69"><call pos:start="147:5" pos:end="149:69"><name pos:start="147:5" pos:end="147:20">pci_register_bar</name><argument_list pos:start="147:21" pos:end="149:69">(<argument pos:start="147:22" pos:end="147:30"><expr pos:start="147:22" pos:end="147:30"><operator pos:start="147:22" pos:end="147:22">&amp;</operator><name pos:start="147:23" pos:end="147:30"><name pos:start="147:23" pos:end="147:25">qxl</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:30">pci</name></name></expr></argument>, <argument pos:start="147:33" pos:end="147:52"><expr pos:start="147:33" pos:end="147:52"><name pos:start="147:33" pos:end="147:52">QXL_VRAM_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="149:22" pos:end="149:50"><expr pos:start="149:22" pos:end="149:50"><name pos:start="149:22" pos:end="149:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="149:53" pos:end="149:68"><expr pos:start="149:53" pos:end="149:68"><operator pos:start="149:53" pos:end="149:53">&amp;</operator><name pos:start="149:54" pos:end="149:68"><name pos:start="149:54" pos:end="149:56">qxl</name><operator pos:start="149:57" pos:end="149:58">-&gt;</operator><name pos:start="149:59" pos:end="149:68">vram32_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="153:5" pos:end="173:5"><if pos:start="153:5" pos:end="173:5">if <condition pos:start="153:8" pos:end="153:42">(<expr pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:24"><name pos:start="153:9" pos:end="153:11">qxl</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:24">vram32_size</name></name> <operator pos:start="153:26" pos:end="153:26">&lt;</operator> <name pos:start="153:28" pos:end="153:41"><name pos:start="153:28" pos:end="153:30">qxl</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:41">vram_size</name></name></expr>)</condition> <block pos:start="153:44" pos:end="173:5">{<block_content pos:start="163:9" pos:end="171:41">

        <comment type="block" pos:start="155:9" pos:end="161:11">/*

         * Make the 64bit vram bar show up only in case it is

         * configured to be larger than the 32bit vram bar.

         */</comment>

        <expr_stmt pos:start="163:9" pos:end="171:41"><expr pos:start="163:9" pos:end="171:40"><call pos:start="163:9" pos:end="171:40"><name pos:start="163:9" pos:end="163:24">pci_register_bar</name><argument_list pos:start="163:25" pos:end="171:40">(<argument pos:start="163:26" pos:end="163:34"><expr pos:start="163:26" pos:end="163:34"><operator pos:start="163:26" pos:end="163:26">&amp;</operator><name pos:start="163:27" pos:end="163:34"><name pos:start="163:27" pos:end="163:29">qxl</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:34">pci</name></name></expr></argument>, <argument pos:start="163:37" pos:end="163:58"><expr pos:start="163:37" pos:end="163:58"><name pos:start="163:37" pos:end="163:58">QXL_VRAM64_RANGE_INDEX</name></expr></argument>,

                         <argument pos:start="165:26" pos:end="169:54"><expr pos:start="165:26" pos:end="169:54"><name pos:start="165:26" pos:end="165:54">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="165:56" pos:end="165:56">|</operator>

                         <name pos:start="167:26" pos:end="167:53">PCI_BASE_ADDRESS_MEM_TYPE_64</name> <operator pos:start="167:55" pos:end="167:55">|</operator>

                         <name pos:start="169:26" pos:end="169:54">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>,

                         <argument pos:start="171:26" pos:end="171:39"><expr pos:start="171:26" pos:end="171:39"><operator pos:start="171:26" pos:end="171:26">&amp;</operator><name pos:start="171:27" pos:end="171:39"><name pos:start="171:27" pos:end="171:29">qxl</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:39">vram_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="177:5" pos:end="177:31">/* print pci bar details */</comment>

    <expr_stmt pos:start="179:5" pos:end="183:45"><expr pos:start="179:5" pos:end="183:44"><call pos:start="179:5" pos:end="183:44"><name pos:start="179:5" pos:end="179:10">dprint</name><argument_list pos:start="179:11" pos:end="183:44">(<argument pos:start="179:12" pos:end="179:14"><expr pos:start="179:12" pos:end="179:14"><name pos:start="179:12" pos:end="179:14">qxl</name></expr></argument>, <argument pos:start="179:17" pos:end="179:17"><expr pos:start="179:17" pos:end="179:17"><literal type="number" pos:start="179:17" pos:end="179:17">1</literal></expr></argument>, <argument pos:start="179:20" pos:end="179:47"><expr pos:start="179:20" pos:end="179:47"><literal type="string" pos:start="179:20" pos:end="179:47">"ram/%s: %d MB [region 0]\n"</literal></expr></argument>,

           <argument pos:start="181:12" pos:end="181:39"><expr pos:start="181:12" pos:end="181:39"><ternary pos:start="181:12" pos:end="181:39"><condition pos:start="181:12" pos:end="181:25"><expr pos:start="181:12" pos:end="181:23"><name pos:start="181:12" pos:end="181:18"><name pos:start="181:12" pos:end="181:14">qxl</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:18">id</name></name> <operator pos:start="181:20" pos:end="181:21">==</operator> <literal type="number" pos:start="181:23" pos:end="181:23">0</literal></expr> ?</condition><then pos:start="181:27" pos:end="181:31"> <expr pos:start="181:27" pos:end="181:31"><literal type="string" pos:start="181:27" pos:end="181:31">"pri"</literal></expr> </then><else pos:start="181:33" pos:end="181:39">: <expr pos:start="181:35" pos:end="181:39"><literal type="string" pos:start="181:35" pos:end="181:39">"sec"</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="183:12" pos:end="183:43"><expr pos:start="183:12" pos:end="183:43"><name pos:start="183:12" pos:end="183:29"><name pos:start="183:12" pos:end="183:14">qxl</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:19">vga</name><operator pos:start="183:20" pos:end="183:20">.</operator><name pos:start="183:21" pos:end="183:29">vram_size</name></name> <operator pos:start="183:31" pos:end="183:31">/</operator> <operator pos:start="183:33" pos:end="183:33">(</operator><literal type="number" pos:start="183:34" pos:end="183:37">1024</literal><operator pos:start="183:38" pos:end="183:38">*</operator><literal type="number" pos:start="183:39" pos:end="183:42">1024</literal><operator pos:start="183:43" pos:end="183:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="187:43"><expr pos:start="185:5" pos:end="187:42"><call pos:start="185:5" pos:end="187:42"><name pos:start="185:5" pos:end="185:10">dprint</name><argument_list pos:start="185:11" pos:end="187:42">(<argument pos:start="185:12" pos:end="185:14"><expr pos:start="185:12" pos:end="185:14"><name pos:start="185:12" pos:end="185:14">qxl</name></expr></argument>, <argument pos:start="185:17" pos:end="185:17"><expr pos:start="185:17" pos:end="185:17"><literal type="number" pos:start="185:17" pos:end="185:17">1</literal></expr></argument>, <argument pos:start="185:20" pos:end="185:48"><expr pos:start="185:20" pos:end="185:48"><literal type="string" pos:start="185:20" pos:end="185:48">"vram/32: %d MB [region 1]\n"</literal></expr></argument>,

           <argument pos:start="187:12" pos:end="187:41"><expr pos:start="187:12" pos:end="187:41"><name pos:start="187:12" pos:end="187:27"><name pos:start="187:12" pos:end="187:14">qxl</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:27">vram32_size</name></name> <operator pos:start="187:29" pos:end="187:29">/</operator> <operator pos:start="187:31" pos:end="187:31">(</operator><literal type="number" pos:start="187:32" pos:end="187:35">1024</literal><operator pos:start="187:36" pos:end="187:36">*</operator><literal type="number" pos:start="187:37" pos:end="187:40">1024</literal><operator pos:start="187:41" pos:end="187:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="193:76"><expr pos:start="189:5" pos:end="193:75"><call pos:start="189:5" pos:end="193:75"><name pos:start="189:5" pos:end="189:10">dprint</name><argument_list pos:start="189:11" pos:end="193:75">(<argument pos:start="189:12" pos:end="189:14"><expr pos:start="189:12" pos:end="189:14"><name pos:start="189:12" pos:end="189:14">qxl</name></expr></argument>, <argument pos:start="189:17" pos:end="189:17"><expr pos:start="189:17" pos:end="189:17"><literal type="number" pos:start="189:17" pos:end="189:17">1</literal></expr></argument>, <argument pos:start="189:20" pos:end="189:40"><expr pos:start="189:20" pos:end="189:40"><literal type="string" pos:start="189:20" pos:end="189:40">"vram/64: %d MB %s\n"</literal></expr></argument>,

           <argument pos:start="191:12" pos:end="191:39"><expr pos:start="191:12" pos:end="191:39"><name pos:start="191:12" pos:end="191:25"><name pos:start="191:12" pos:end="191:14">qxl</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:25">vram_size</name></name> <operator pos:start="191:27" pos:end="191:27">/</operator> <operator pos:start="191:29" pos:end="191:29">(</operator><literal type="number" pos:start="191:30" pos:end="191:33">1024</literal><operator pos:start="191:34" pos:end="191:34">*</operator><literal type="number" pos:start="191:35" pos:end="191:38">1024</literal><operator pos:start="191:39" pos:end="191:39">)</operator></expr></argument>,

           <argument pos:start="193:12" pos:end="193:74"><expr pos:start="193:12" pos:end="193:74"><ternary pos:start="193:12" pos:end="193:74"><condition pos:start="193:12" pos:end="193:46"><expr pos:start="193:12" pos:end="193:44"><name pos:start="193:12" pos:end="193:27"><name pos:start="193:12" pos:end="193:14">qxl</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:27">vram32_size</name></name> <operator pos:start="193:29" pos:end="193:29">&lt;</operator> <name pos:start="193:31" pos:end="193:44"><name pos:start="193:31" pos:end="193:33">qxl</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:44">vram_size</name></name></expr> ?</condition><then pos:start="193:48" pos:end="193:59"> <expr pos:start="193:48" pos:end="193:59"><literal type="string" pos:start="193:48" pos:end="193:59">"[region 4]"</literal></expr> </then><else pos:start="193:61" pos:end="193:74">: <expr pos:start="193:63" pos:end="193:74"><literal type="string" pos:start="193:63" pos:end="193:74">"[unmapped]"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:48"><expr pos:start="197:5" pos:end="197:47"><name pos:start="197:5" pos:end="197:25"><name pos:start="197:5" pos:end="197:7">qxl</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:12">ssd</name><operator pos:start="197:13" pos:end="197:13">.</operator><name pos:start="197:14" pos:end="197:16">qxl</name><operator pos:start="197:17" pos:end="197:17">.</operator><name pos:start="197:18" pos:end="197:21">base</name><operator pos:start="197:22" pos:end="197:22">.</operator><name pos:start="197:23" pos:end="197:25">sif</name></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <operator pos:start="197:29" pos:end="197:29">&amp;</operator><name pos:start="197:30" pos:end="197:47"><name pos:start="197:30" pos:end="197:42">qxl_interface</name><operator pos:start="197:43" pos:end="197:43">.</operator><name pos:start="197:44" pos:end="197:47">base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:30"><expr pos:start="199:5" pos:end="199:29"><name pos:start="199:5" pos:end="199:19"><name pos:start="199:5" pos:end="199:7">qxl</name><operator pos:start="199:8" pos:end="199:9">-&gt;</operator><name pos:start="199:10" pos:end="199:12">ssd</name><operator pos:start="199:13" pos:end="199:13">.</operator><name pos:start="199:14" pos:end="199:16">qxl</name><operator pos:start="199:17" pos:end="199:17">.</operator><name pos:start="199:18" pos:end="199:19">id</name></name> <operator pos:start="199:21" pos:end="199:21">=</operator> <name pos:start="199:23" pos:end="199:29"><name pos:start="199:23" pos:end="199:25">qxl</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:29">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:49"><expr pos:start="201:5" pos:end="201:48"><call pos:start="201:5" pos:end="201:48"><name pos:start="201:5" pos:end="201:28">qemu_spice_add_interface</name><argument_list pos:start="201:29" pos:end="201:48">(<argument pos:start="201:30" pos:end="201:47"><expr pos:start="201:30" pos:end="201:47"><operator pos:start="201:30" pos:end="201:30">&amp;</operator><name pos:start="201:31" pos:end="201:47"><name pos:start="201:31" pos:end="201:33">qxl</name><operator pos:start="201:34" pos:end="201:35">-&gt;</operator><name pos:start="201:36" pos:end="201:38">ssd</name><operator pos:start="201:39" pos:end="201:39">.</operator><name pos:start="201:40" pos:end="201:42">qxl</name><operator pos:start="201:43" pos:end="201:43">.</operator><name pos:start="201:44" pos:end="201:47">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:71"><expr pos:start="203:5" pos:end="203:70"><call pos:start="203:5" pos:end="203:70"><name pos:start="203:5" pos:end="203:36">qemu_add_vm_change_state_handler</name><argument_list pos:start="203:37" pos:end="203:70">(<argument pos:start="203:38" pos:end="203:64"><expr pos:start="203:38" pos:end="203:64"><name pos:start="203:38" pos:end="203:64">qxl_vm_change_state_handler</name></expr></argument>, <argument pos:start="203:67" pos:end="203:69"><expr pos:start="203:67" pos:end="203:69"><name pos:start="203:67" pos:end="203:69">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:29"><expr pos:start="207:5" pos:end="207:28"><call pos:start="207:5" pos:end="207:28"><name pos:start="207:5" pos:end="207:23">init_pipe_signaling</name><argument_list pos:start="207:24" pos:end="207:28">(<argument pos:start="207:25" pos:end="207:27"><expr pos:start="207:25" pos:end="207:27"><name pos:start="207:25" pos:end="207:27">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:25"><expr pos:start="209:5" pos:end="209:24"><call pos:start="209:5" pos:end="209:24"><name pos:start="209:5" pos:end="209:19">qxl_reset_state</name><argument_list pos:start="209:20" pos:end="209:24">(<argument pos:start="209:21" pos:end="209:23"><expr pos:start="209:21" pos:end="209:23"><name pos:start="209:21" pos:end="209:23">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:70"><expr pos:start="213:5" pos:end="213:69"><name pos:start="213:5" pos:end="213:23"><name pos:start="213:5" pos:end="213:7">qxl</name><operator pos:start="213:8" pos:end="213:9">-&gt;</operator><name pos:start="213:10" pos:end="213:23">update_area_bh</name></name> <operator pos:start="213:25" pos:end="213:25">=</operator> <call pos:start="213:27" pos:end="213:69"><name pos:start="213:27" pos:end="213:37">qemu_bh_new</name><argument_list pos:start="213:38" pos:end="213:69">(<argument pos:start="213:39" pos:end="213:63"><expr pos:start="213:39" pos:end="213:63"><name pos:start="213:39" pos:end="213:63">qxl_render_update_area_bh</name></expr></argument>, <argument pos:start="213:66" pos:end="213:68"><expr pos:start="213:66" pos:end="213:68"><name pos:start="213:66" pos:end="213:68">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
