<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26020.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:28">parse_escape</name><parameter_list pos:start="1:29" pos:end="1:82">(<parameter pos:start="1:30" pos:end="1:52"><decl pos:start="1:30" pos:end="1:52"><type pos:start="1:30" pos:end="1:52"><name pos:start="1:30" pos:end="1:46">JSONParserContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">ctxt</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:59">QList</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">tokens</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:81"><decl pos:start="1:71" pos:end="1:81"><type pos:start="1:71" pos:end="1:81"><name pos:start="1:71" pos:end="1:77">va_list</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:81">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:16">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">token</name> <init pos:start="5:20" pos:end="5:25">= <expr pos:start="5:22" pos:end="5:25"><name pos:start="5:22" pos:end="5:25">NULL</name></expr></init></decl>, <decl pos:start="5:28" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QList</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:18">working</name> <init pos:start="7:20" pos:end="7:40">= <expr pos:start="7:22" pos:end="7:40"><call pos:start="7:22" pos:end="7:40"><name pos:start="7:22" pos:end="7:31">qlist_copy</name><argument_list pos:start="7:32" pos:end="7:40">(<argument pos:start="7:33" pos:end="7:39"><expr pos:start="7:33" pos:end="7:39"><operator pos:start="7:33" pos:end="7:33">*</operator><name pos:start="7:34" pos:end="7:39">tokens</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:19">(<expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:10">ap</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <name pos:start="11:15" pos:end="11:18">NULL</name></expr>)</condition> <block pos:start="11:21" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <goto pos:start="13:9" pos:end="13:17">goto <name pos:start="13:14" pos:end="13:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:9">token</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:21">qlist_pop</name><argument_list pos:start="19:22" pos:end="19:30">(<argument pos:start="19:23" pos:end="19:29"><expr pos:start="19:23" pos:end="19:29"><name pos:start="19:23" pos:end="19:29">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13">token</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <name pos:start="21:18" pos:end="21:21">NULL</name></expr>)</condition> <block pos:start="21:24" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="63:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:37">(<expr pos:start="29:9" pos:end="29:36"><call pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:23">token_is_escape</name><argument_list pos:start="29:24" pos:end="29:36">(<argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">token</name></expr></argument>, <argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><literal type="string" pos:start="29:32" pos:end="29:35">"%p"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:39" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:37">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:11">obj</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:36"><name pos:start="31:15" pos:end="31:20">va_arg</name><argument_list pos:start="31:21" pos:end="31:36">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><operator pos:start="31:22" pos:end="31:22">*</operator><name pos:start="31:23" pos:end="31:24">ap</name></expr></argument>, <argument pos:start="31:27" pos:end="31:35"><expr pos:start="31:27" pos:end="31:35"><name pos:start="31:27" pos:end="31:33">QObject</name> <operator pos:start="31:35" pos:end="31:35">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="37:5">else if <condition pos:start="33:15" pos:end="33:44">(<expr pos:start="33:16" pos:end="33:43"><call pos:start="33:16" pos:end="33:43"><name pos:start="33:16" pos:end="33:30">token_is_escape</name><argument_list pos:start="33:31" pos:end="33:43">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:36">token</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><literal type="string" pos:start="33:39" pos:end="33:42">"%i"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:46" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:56">

        <expr_stmt pos:start="35:9" pos:end="35:56"><expr pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:11">obj</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:55"><name pos:start="35:15" pos:end="35:21">QOBJECT</name><argument_list pos:start="35:22" pos:end="35:55">(<argument pos:start="35:23" pos:end="35:54"><expr pos:start="35:23" pos:end="35:54"><call pos:start="35:23" pos:end="35:54"><name pos:start="35:23" pos:end="35:36">qbool_from_int</name><argument_list pos:start="35:37" pos:end="35:54">(<argument pos:start="35:38" pos:end="35:53"><expr pos:start="35:38" pos:end="35:53"><call pos:start="35:38" pos:end="35:53"><name pos:start="35:38" pos:end="35:43">va_arg</name><argument_list pos:start="35:44" pos:end="35:53">(<argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><operator pos:start="35:45" pos:end="35:45">*</operator><name pos:start="35:46" pos:end="35:47">ap</name></expr></argument>, <argument pos:start="35:50" pos:end="35:52"><expr pos:start="35:50" pos:end="35:52"><name pos:start="35:50" pos:end="35:52">int</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="41:5">else if <condition pos:start="37:15" pos:end="37:44">(<expr pos:start="37:16" pos:end="37:43"><call pos:start="37:16" pos:end="37:43"><name pos:start="37:16" pos:end="37:30">token_is_escape</name><argument_list pos:start="37:31" pos:end="37:43">(<argument pos:start="37:32" pos:end="37:36"><expr pos:start="37:32" pos:end="37:36"><name pos:start="37:32" pos:end="37:36">token</name></expr></argument>, <argument pos:start="37:39" pos:end="37:42"><expr pos:start="37:39" pos:end="37:42"><literal type="string" pos:start="37:39" pos:end="37:42">"%d"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:46" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:55">

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:11">obj</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:54"><name pos:start="39:15" pos:end="39:21">QOBJECT</name><argument_list pos:start="39:22" pos:end="39:54">(<argument pos:start="39:23" pos:end="39:53"><expr pos:start="39:23" pos:end="39:53"><call pos:start="39:23" pos:end="39:53"><name pos:start="39:23" pos:end="39:35">qint_from_int</name><argument_list pos:start="39:36" pos:end="39:53">(<argument pos:start="39:37" pos:end="39:52"><expr pos:start="39:37" pos:end="39:52"><call pos:start="39:37" pos:end="39:52"><name pos:start="39:37" pos:end="39:42">va_arg</name><argument_list pos:start="39:43" pos:end="39:52">(<argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><operator pos:start="39:44" pos:end="39:44">*</operator><name pos:start="39:45" pos:end="39:46">ap</name></expr></argument>, <argument pos:start="39:49" pos:end="39:51"><expr pos:start="39:49" pos:end="39:51"><name pos:start="39:49" pos:end="39:51">int</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="45:5">else if <condition pos:start="41:15" pos:end="41:45">(<expr pos:start="41:16" pos:end="41:44"><call pos:start="41:16" pos:end="41:44"><name pos:start="41:16" pos:end="41:30">token_is_escape</name><argument_list pos:start="41:31" pos:end="41:44">(<argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">token</name></expr></argument>, <argument pos:start="41:39" pos:end="41:43"><expr pos:start="41:39" pos:end="41:43"><literal type="string" pos:start="41:39" pos:end="41:43">"%ld"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:47" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:56">

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:11">obj</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:55"><name pos:start="43:15" pos:end="43:21">QOBJECT</name><argument_list pos:start="43:22" pos:end="43:55">(<argument pos:start="43:23" pos:end="43:54"><expr pos:start="43:23" pos:end="43:54"><call pos:start="43:23" pos:end="43:54"><name pos:start="43:23" pos:end="43:35">qint_from_int</name><argument_list pos:start="43:36" pos:end="43:54">(<argument pos:start="43:37" pos:end="43:53"><expr pos:start="43:37" pos:end="43:53"><call pos:start="43:37" pos:end="43:53"><name pos:start="43:37" pos:end="43:42">va_arg</name><argument_list pos:start="43:43" pos:end="43:53">(<argument pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><operator pos:start="43:44" pos:end="43:44">*</operator><name pos:start="43:45" pos:end="43:46">ap</name></expr></argument>, <argument pos:start="43:49" pos:end="43:52"><expr pos:start="43:49" pos:end="43:52"><name pos:start="43:49" pos:end="43:52">long</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="51:5">else if <condition pos:start="45:15" pos:end="47:47">(<expr pos:start="45:16" pos:end="47:46"><call pos:start="45:16" pos:end="45:45"><name pos:start="45:16" pos:end="45:30">token_is_escape</name><argument_list pos:start="45:31" pos:end="45:45">(<argument pos:start="45:32" pos:end="45:36"><expr pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:36">token</name></expr></argument>, <argument pos:start="45:39" pos:end="45:44"><expr pos:start="45:39" pos:end="45:44"><literal type="string" pos:start="45:39" pos:end="45:44">"%lld"</literal></expr></argument>)</argument_list></call> <operator pos:start="45:47" pos:end="45:48">||</operator>

               <call pos:start="47:16" pos:end="47:46"><name pos:start="47:16" pos:end="47:30">token_is_escape</name><argument_list pos:start="47:31" pos:end="47:46">(<argument pos:start="47:32" pos:end="47:36"><expr pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:36">token</name></expr></argument>, <argument pos:start="47:39" pos:end="47:45"><expr pos:start="47:39" pos:end="47:45"><literal type="string" pos:start="47:39" pos:end="47:45">"%I64d"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:49" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:61">

        <expr_stmt pos:start="49:9" pos:end="49:61"><expr pos:start="49:9" pos:end="49:60"><name pos:start="49:9" pos:end="49:11">obj</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:60"><name pos:start="49:15" pos:end="49:21">QOBJECT</name><argument_list pos:start="49:22" pos:end="49:60">(<argument pos:start="49:23" pos:end="49:59"><expr pos:start="49:23" pos:end="49:59"><call pos:start="49:23" pos:end="49:59"><name pos:start="49:23" pos:end="49:35">qint_from_int</name><argument_list pos:start="49:36" pos:end="49:59">(<argument pos:start="49:37" pos:end="49:58"><expr pos:start="49:37" pos:end="49:58"><macro pos:start="49:37" pos:end="49:58"><name pos:start="49:37" pos:end="49:42">va_arg</name><argument_list pos:start="49:43" pos:end="49:58">(<argument pos:start="49:44" pos:end="49:46">*ap</argument>, <argument pos:start="49:49" pos:end="49:57">long long</argument>)</argument_list></macro></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="55:5">else if <condition pos:start="51:15" pos:end="51:44">(<expr pos:start="51:16" pos:end="51:43"><call pos:start="51:16" pos:end="51:43"><name pos:start="51:16" pos:end="51:30">token_is_escape</name><argument_list pos:start="51:31" pos:end="51:43">(<argument pos:start="51:32" pos:end="51:36"><expr pos:start="51:32" pos:end="51:36"><name pos:start="51:32" pos:end="51:36">token</name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><literal type="string" pos:start="51:39" pos:end="51:42">"%s"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:46" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:67">

        <expr_stmt pos:start="53:9" pos:end="53:67"><expr pos:start="53:9" pos:end="53:66"><name pos:start="53:9" pos:end="53:11">obj</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:66"><name pos:start="53:15" pos:end="53:21">QOBJECT</name><argument_list pos:start="53:22" pos:end="53:66">(<argument pos:start="53:23" pos:end="53:65"><expr pos:start="53:23" pos:end="53:65"><call pos:start="53:23" pos:end="53:65"><name pos:start="53:23" pos:end="53:38">qstring_from_str</name><argument_list pos:start="53:39" pos:end="53:65">(<argument pos:start="53:40" pos:end="53:64"><expr pos:start="53:40" pos:end="53:64"><call pos:start="53:40" pos:end="53:64"><name pos:start="53:40" pos:end="53:45">va_arg</name><argument_list pos:start="53:46" pos:end="53:64">(<argument pos:start="53:47" pos:end="53:49"><expr pos:start="53:47" pos:end="53:49"><operator pos:start="53:47" pos:end="53:47">*</operator><name pos:start="53:48" pos:end="53:49">ap</name></expr></argument>, <argument pos:start="53:52" pos:end="53:63"><expr pos:start="53:52" pos:end="53:63"><specifier pos:start="53:52" pos:end="53:56">const</specifier> <name pos:start="53:58" pos:end="53:61">char</name> <operator pos:start="53:63" pos:end="53:63">*</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="59:5">else if <condition pos:start="55:15" pos:end="55:44">(<expr pos:start="55:16" pos:end="55:43"><call pos:start="55:16" pos:end="55:43"><name pos:start="55:16" pos:end="55:30">token_is_escape</name><argument_list pos:start="55:31" pos:end="55:43">(<argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">token</name></expr></argument>, <argument pos:start="55:39" pos:end="55:42"><expr pos:start="55:39" pos:end="55:42"><literal type="string" pos:start="55:39" pos:end="55:42">"%f"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:46" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:63">

        <expr_stmt pos:start="57:9" pos:end="57:63"><expr pos:start="57:9" pos:end="57:62"><name pos:start="57:9" pos:end="57:11">obj</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:62"><name pos:start="57:15" pos:end="57:21">QOBJECT</name><argument_list pos:start="57:22" pos:end="57:62">(<argument pos:start="57:23" pos:end="57:61"><expr pos:start="57:23" pos:end="57:61"><call pos:start="57:23" pos:end="57:61"><name pos:start="57:23" pos:end="57:40">qfloat_from_double</name><argument_list pos:start="57:41" pos:end="57:61">(<argument pos:start="57:42" pos:end="57:60"><expr pos:start="57:42" pos:end="57:60"><call pos:start="57:42" pos:end="57:60"><name pos:start="57:42" pos:end="57:47">va_arg</name><argument_list pos:start="57:48" pos:end="57:60">(<argument pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><operator pos:start="57:49" pos:end="57:49">*</operator><name pos:start="57:50" pos:end="57:51">ap</name></expr></argument>, <argument pos:start="57:54" pos:end="57:59"><expr pos:start="57:54" pos:end="57:59"><name pos:start="57:54" pos:end="57:59">double</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:17">

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><call pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:18">qobject_decref</name><argument_list pos:start="67:19" pos:end="67:25">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><call pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:11">QDECREF</name><argument_list pos:start="69:12" pos:end="69:20">(<argument pos:start="69:13" pos:end="69:19"><expr pos:start="69:13" pos:end="69:19"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:19">tokens</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><operator pos:start="71:5" pos:end="71:5">*</operator><name pos:start="71:6" pos:end="71:11">tokens</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:21">working</name></expr>;</expr_stmt>



    <return pos:start="75:5" pos:end="75:15">return <expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">obj</name></expr>;</return>



<label pos:start="79:1" pos:end="79:4"><name pos:start="79:1" pos:end="79:3">out</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:26"><expr pos:start="81:5" pos:end="81:25"><call pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:18">qobject_decref</name><argument_list pos:start="81:19" pos:end="81:25">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:21"><expr pos:start="83:5" pos:end="83:20"><call pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:11">QDECREF</name><argument_list pos:start="83:12" pos:end="83:20">(<argument pos:start="83:13" pos:end="83:19"><expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:19">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:16">return <expr pos:start="87:12" pos:end="87:15"><name pos:start="87:12" pos:end="87:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
