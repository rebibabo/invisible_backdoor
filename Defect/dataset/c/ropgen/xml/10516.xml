<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10516.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">dmg_read_mish_block</name><parameter_list pos:start="1:31" pos:end="3:63">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:43">BDRVDMGState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:62">DmgHeaderState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">ds</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:46"><decl pos:start="3:32" pos:end="3:46"><type pos:start="3:32" pos:end="3:46"><name pos:start="3:32" pos:end="3:38">uint8_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:46">buffer</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:56">uint32_t</name></type> <name pos:start="3:58" pos:end="3:62">count</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="165:1">{<block_content pos:start="7:5" pos:end="163:15">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">type</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:19">new_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:24">chunk_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:18">offset</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:8">type</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:43"><name pos:start="19:12" pos:end="19:27">buff_read_uint32</name><argument_list pos:start="19:28" pos:end="19:43">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">buffer</name></expr></argument>, <argument pos:start="19:37" pos:end="19:42"><expr pos:start="19:37" pos:end="19:42"><name pos:start="19:37" pos:end="19:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:79">/* skip data that is not a valid MISH block (invalid magic or too small) */</comment>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:12">type</name> <operator pos:start="23:14" pos:end="23:15">!=</operator> <literal type="number" pos:start="23:17" pos:end="23:26">0x6d697368</literal> <operator pos:start="23:28" pos:end="23:29">||</operator> <name pos:start="23:31" pos:end="23:35">count</name> <operator pos:start="23:37" pos:end="23:37">&lt;</operator> <literal type="number" pos:start="23:39" pos:end="23:41">244</literal></expr>)</condition> <block pos:start="23:44" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <comment type="block" pos:start="25:9" pos:end="25:36">/* assume success for now */</comment>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:16"><expr pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:10">offset</name> <operator pos:start="33:12" pos:end="33:13">+=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:10">offset</name> <operator pos:start="35:12" pos:end="35:13">+=</operator> <literal type="number" pos:start="35:15" pos:end="35:17">200</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:15">chunk_count</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <operator pos:start="39:19" pos:end="39:19">(</operator><name pos:start="39:20" pos:end="39:24">count</name> <operator pos:start="39:26" pos:end="39:26">-</operator> <literal type="number" pos:start="39:28" pos:end="39:30">204</literal><operator pos:start="39:31" pos:end="39:31">)</operator> <operator pos:start="39:33" pos:end="39:33">/</operator> <literal type="number" pos:start="39:35" pos:end="39:36">40</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:62"><expr pos:start="41:5" pos:end="41:61"><name pos:start="41:5" pos:end="41:12">new_size</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <sizeof pos:start="41:16" pos:end="41:31">sizeof<argument_list pos:start="41:22" pos:end="41:31">(<argument pos:start="41:23" pos:end="41:30"><expr pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:30">uint64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:33" pos:end="41:33">*</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:46"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:46">n_chunks</name></name> <operator pos:start="41:48" pos:end="41:48">+</operator> <name pos:start="41:50" pos:end="41:60">chunk_count</name><operator pos:start="41:61" pos:end="41:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">types</name></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:48"><name pos:start="43:16" pos:end="43:24">g_realloc</name><argument_list pos:start="43:25" pos:end="43:48">(<argument pos:start="43:26" pos:end="43:33"><expr pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:33">types</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:47"><expr pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:43">new_size</name> <operator pos:start="43:45" pos:end="43:45">/</operator> <literal type="number" pos:start="43:47" pos:end="43:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">offsets</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:48"><name pos:start="45:18" pos:end="45:26">g_realloc</name><argument_list pos:start="45:27" pos:end="45:48">(<argument pos:start="45:28" pos:end="45:37"><expr pos:start="45:28" pos:end="45:37"><name pos:start="45:28" pos:end="45:37"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:37">offsets</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:47"><expr pos:start="45:40" pos:end="45:47"><name pos:start="45:40" pos:end="45:47">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:14">lengths</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:48"><name pos:start="47:18" pos:end="47:26">g_realloc</name><argument_list pos:start="47:27" pos:end="47:48">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:37">lengths</name></name></expr></argument>, <argument pos:start="47:40" pos:end="47:47"><expr pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:47">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">sectors</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:48"><name pos:start="49:18" pos:end="49:26">g_realloc</name><argument_list pos:start="49:27" pos:end="49:48">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:37">sectors</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:47"><expr pos:start="49:40" pos:end="49:47"><name pos:start="49:40" pos:end="49:47">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:59"><expr pos:start="51:5" pos:end="51:58"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:19">sectorcounts</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:58"><name pos:start="51:23" pos:end="51:31">g_realloc</name><argument_list pos:start="51:32" pos:end="51:58">(<argument pos:start="51:33" pos:end="51:47"><expr pos:start="51:33" pos:end="51:47"><name pos:start="51:33" pos:end="51:47"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:47">sectorcounts</name></name></expr></argument>, <argument pos:start="51:50" pos:end="51:57"><expr pos:start="51:50" pos:end="51:57"><name pos:start="51:50" pos:end="51:57">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="55:5" pos:end="153:5">for <control pos:start="55:9" pos:end="55:61">(<init pos:start="55:10" pos:end="55:25"><expr pos:start="55:10" pos:end="55:24"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:24"><name pos:start="55:14" pos:end="55:14">s</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:24">n_chunks</name></name></expr>;</init> <condition pos:start="55:27" pos:end="55:56"><expr pos:start="55:27" pos:end="55:55"><name pos:start="55:27" pos:end="55:27">i</name> <operator pos:start="55:29" pos:end="55:29">&lt;</operator> <name pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:41">n_chunks</name></name> <operator pos:start="55:43" pos:end="55:43">+</operator> <name pos:start="55:45" pos:end="55:55">chunk_count</name></expr>;</condition> <incr pos:start="55:58" pos:end="55:60"><expr pos:start="55:58" pos:end="55:60"><name pos:start="55:58" pos:end="55:58">i</name><operator pos:start="55:59" pos:end="55:60">++</operator></expr></incr>)</control> <block pos:start="55:63" pos:end="153:5">{<block_content pos:start="57:9" pos:end="151:58">

        <expr_stmt pos:start="57:9" pos:end="57:55"><expr pos:start="57:9" pos:end="57:54"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:16">types</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><name pos:start="57:18" pos:end="57:18">i</name></expr>]</index></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:54"><name pos:start="57:23" pos:end="57:38">buff_read_uint32</name><argument_list pos:start="57:39" pos:end="57:54">(<argument pos:start="57:40" pos:end="57:45"><expr pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:45">buffer</name></expr></argument>, <argument pos:start="57:48" pos:end="57:53"><expr pos:start="57:48" pos:end="57:53"><name pos:start="57:48" pos:end="57:53">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:14">offset</name> <operator pos:start="59:16" pos:end="59:17">+=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="83:9"><if pos:start="61:9" pos:end="83:9">if <condition pos:start="61:12" pos:end="63:29">(<expr pos:start="61:13" pos:end="63:28"><name pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">types</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">i</name></expr>]</index></name> <operator pos:start="61:25" pos:end="61:26">!=</operator> <literal type="number" pos:start="61:28" pos:end="61:37">0x80000005</literal> <operator pos:start="61:39" pos:end="61:40">&amp;&amp;</operator> <name pos:start="61:42" pos:end="61:52"><name pos:start="61:42" pos:end="61:42">s</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:49">types</name><index pos:start="61:50" pos:end="61:52">[<expr pos:start="61:51" pos:end="61:51"><name pos:start="61:51" pos:end="61:51">i</name></expr>]</index></name> <operator pos:start="61:54" pos:end="61:55">!=</operator> <literal type="number" pos:start="61:57" pos:end="61:57">1</literal> <operator pos:start="61:59" pos:end="61:60">&amp;&amp;</operator>

            <name pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">types</name><index pos:start="63:21" pos:end="63:23">[<expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">i</name></expr>]</index></name> <operator pos:start="63:25" pos:end="63:26">!=</operator> <literal type="number" pos:start="63:28" pos:end="63:28">2</literal></expr>)</condition> <block pos:start="63:31" pos:end="83:9">{<block_content pos:start="65:13" pos:end="81:21">

            <if_stmt pos:start="65:13" pos:end="73:13"><if pos:start="65:13" pos:end="73:13">if <condition pos:start="65:16" pos:end="65:51">(<expr pos:start="65:17" pos:end="65:50"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">types</name><index pos:start="65:25" pos:end="65:27">[<expr pos:start="65:26" pos:end="65:26"><name pos:start="65:26" pos:end="65:26">i</name></expr>]</index></name> <operator pos:start="65:29" pos:end="65:30">==</operator> <literal type="number" pos:start="65:32" pos:end="65:41">0xffffffff</literal> <operator pos:start="65:43" pos:end="65:44">&amp;&amp;</operator> <name pos:start="65:46" pos:end="65:46">i</name> <operator pos:start="65:48" pos:end="65:48">&gt;</operator> <literal type="number" pos:start="65:50" pos:end="65:50">0</literal></expr>)</condition> <block pos:start="65:53" pos:end="73:13">{<block_content pos:start="67:17" pos:end="71:61">

                <expr_stmt pos:start="67:17" pos:end="67:75"><expr pos:start="67:17" pos:end="67:74"><name pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:18">ds</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:34">last_in_offset</name></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <name pos:start="67:38" pos:end="67:54"><name pos:start="67:38" pos:end="67:38">s</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:47">offsets</name><index pos:start="67:48" pos:end="67:54">[<expr pos:start="67:49" pos:end="67:53"><name pos:start="67:49" pos:end="67:49">i</name> <operator pos:start="67:51" pos:end="67:51">-</operator> <literal type="number" pos:start="67:53" pos:end="67:53">1</literal></expr>]</index></name> <operator pos:start="67:56" pos:end="67:56">+</operator> <name pos:start="67:58" pos:end="67:74"><name pos:start="67:58" pos:end="67:58">s</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:67">lengths</name><index pos:start="67:68" pos:end="67:74">[<expr pos:start="67:69" pos:end="67:73"><name pos:start="67:69" pos:end="67:69">i</name> <operator pos:start="67:71" pos:end="67:71">-</operator> <literal type="number" pos:start="67:73" pos:end="67:73">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="71:61"><expr pos:start="69:17" pos:end="71:60"><name pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:18">ds</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:35">last_out_offset</name></name> <operator pos:start="69:37" pos:end="69:37">=</operator> <name pos:start="69:39" pos:end="69:55"><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:48">sectors</name><index pos:start="69:49" pos:end="69:55">[<expr pos:start="69:50" pos:end="69:54"><name pos:start="69:50" pos:end="69:50">i</name> <operator pos:start="69:52" pos:end="69:52">-</operator> <literal type="number" pos:start="69:54" pos:end="69:54">1</literal></expr>]</index></name> <operator pos:start="69:57" pos:end="69:57">+</operator>

                                      <name pos:start="71:39" pos:end="71:60"><name pos:start="71:39" pos:end="71:39">s</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:53">sectorcounts</name><index pos:start="71:54" pos:end="71:60">[<expr pos:start="71:55" pos:end="71:59"><name pos:start="71:55" pos:end="71:55">i</name> <operator pos:start="71:57" pos:end="71:57">-</operator> <literal type="number" pos:start="71:59" pos:end="71:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:26"><expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:23">chunk_count</name><operator pos:start="75:24" pos:end="75:25">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:16"><expr pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:13">i</name><operator pos:start="77:14" pos:end="77:15">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:25"><expr pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:18">offset</name> <operator pos:start="79:20" pos:end="79:21">+=</operator> <literal type="number" pos:start="79:23" pos:end="79:24">36</literal></expr>;</expr_stmt>

            <continue pos:start="81:13" pos:end="81:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:20"><expr pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:14">offset</name> <operator pos:start="85:16" pos:end="85:17">+=</operator> <literal type="number" pos:start="85:19" pos:end="85:19">4</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:57"><expr pos:start="89:9" pos:end="89:56"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">sectors</name><index pos:start="89:19" pos:end="89:21">[<expr pos:start="89:20" pos:end="89:20"><name pos:start="89:20" pos:end="89:20">i</name></expr>]</index></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <call pos:start="89:25" pos:end="89:56"><name pos:start="89:25" pos:end="89:40">buff_read_uint64</name><argument_list pos:start="89:41" pos:end="89:56">(<argument pos:start="89:42" pos:end="89:47"><expr pos:start="89:42" pos:end="89:47"><name pos:start="89:42" pos:end="89:47">buffer</name></expr></argument>, <argument pos:start="89:50" pos:end="89:55"><expr pos:start="89:50" pos:end="89:55"><name pos:start="89:50" pos:end="89:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:45"><expr pos:start="91:9" pos:end="91:44"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:18">sectors</name><index pos:start="91:19" pos:end="91:21">[<expr pos:start="91:20" pos:end="91:20"><name pos:start="91:20" pos:end="91:20">i</name></expr>]</index></name> <operator pos:start="91:23" pos:end="91:24">+=</operator> <name pos:start="91:26" pos:end="91:44"><name pos:start="91:26" pos:end="91:27">ds</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:44">last_out_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:20"><expr pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:14">offset</name> <operator pos:start="93:16" pos:end="93:17">+=</operator> <literal type="number" pos:start="93:19" pos:end="93:19">8</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:62"><expr pos:start="97:9" pos:end="97:61"><name pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:23">sectorcounts</name><index pos:start="97:24" pos:end="97:26">[<expr pos:start="97:25" pos:end="97:25"><name pos:start="97:25" pos:end="97:25">i</name></expr>]</index></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:61"><name pos:start="97:30" pos:end="97:45">buff_read_uint64</name><argument_list pos:start="97:46" pos:end="97:61">(<argument pos:start="97:47" pos:end="97:52"><expr pos:start="97:47" pos:end="97:52"><name pos:start="97:47" pos:end="97:52">buffer</name></expr></argument>, <argument pos:start="97:55" pos:end="97:60"><expr pos:start="97:55" pos:end="97:60"><name pos:start="97:55" pos:end="97:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:14">offset</name> <operator pos:start="99:16" pos:end="99:17">+=</operator> <literal type="number" pos:start="99:19" pos:end="99:19">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="115:9"><if pos:start="103:9" pos:end="115:9">if <condition pos:start="103:12" pos:end="103:54">(<expr pos:start="103:13" pos:end="103:53"><name pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:27">sectorcounts</name><index pos:start="103:28" pos:end="103:30">[<expr pos:start="103:29" pos:end="103:29"><name pos:start="103:29" pos:end="103:29">i</name></expr>]</index></name> <operator pos:start="103:32" pos:end="103:32">&gt;</operator> <name pos:start="103:34" pos:end="103:53">DMG_SECTORCOUNTS_MAX</name></expr>)</condition> <block pos:start="103:56" pos:end="115:9">{<block_content pos:start="105:13" pos:end="113:22">

            <expr_stmt pos:start="105:13" pos:end="109:70"><expr pos:start="105:13" pos:end="109:69"><call pos:start="105:13" pos:end="109:69"><name pos:start="105:13" pos:end="105:24">error_report</name><argument_list pos:start="105:25" pos:end="109:69">(<argument pos:start="105:26" pos:end="107:51"><expr pos:start="105:26" pos:end="107:51"><literal type="string" pos:start="105:26" pos:end="105:41">"sector count %"</literal> <name pos:start="105:43" pos:end="105:48">PRIu64</name> <literal type="string" pos:start="105:50" pos:end="105:63">" for chunk %"</literal> <name pos:start="105:65" pos:end="105:70">PRIu32</name>

                         <literal type="string" pos:start="107:26" pos:end="107:51">" is larger than max (%u)"</literal></expr></argument>,

                         <argument pos:start="109:26" pos:end="109:43"><expr pos:start="109:26" pos:end="109:43"><name pos:start="109:26" pos:end="109:43"><name pos:start="109:26" pos:end="109:26">s</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:40">sectorcounts</name><index pos:start="109:41" pos:end="109:43">[<expr pos:start="109:42" pos:end="109:42"><name pos:start="109:42" pos:end="109:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="109:46" pos:end="109:46"><expr pos:start="109:46" pos:end="109:46"><name pos:start="109:46" pos:end="109:46">i</name></expr></argument>, <argument pos:start="109:49" pos:end="109:68"><expr pos:start="109:49" pos:end="109:68"><name pos:start="109:49" pos:end="109:68">DMG_SECTORCOUNTS_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <operator pos:start="111:19" pos:end="111:19">-</operator><name pos:start="111:20" pos:end="111:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:22">goto <name pos:start="113:18" pos:end="113:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:57"><expr pos:start="119:9" pos:end="119:56"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:18">offsets</name><index pos:start="119:19" pos:end="119:21">[<expr pos:start="119:20" pos:end="119:20"><name pos:start="119:20" pos:end="119:20">i</name></expr>]</index></name> <operator pos:start="119:23" pos:end="119:23">=</operator> <call pos:start="119:25" pos:end="119:56"><name pos:start="119:25" pos:end="119:40">buff_read_uint64</name><argument_list pos:start="119:41" pos:end="119:56">(<argument pos:start="119:42" pos:end="119:47"><expr pos:start="119:42" pos:end="119:47"><name pos:start="119:42" pos:end="119:47">buffer</name></expr></argument>, <argument pos:start="119:50" pos:end="119:55"><expr pos:start="119:50" pos:end="119:55"><name pos:start="119:50" pos:end="119:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:44"><expr pos:start="121:9" pos:end="121:43"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:18">offsets</name><index pos:start="121:19" pos:end="121:21">[<expr pos:start="121:20" pos:end="121:20"><name pos:start="121:20" pos:end="121:20">i</name></expr>]</index></name> <operator pos:start="121:23" pos:end="121:24">+=</operator> <name pos:start="121:26" pos:end="121:43"><name pos:start="121:26" pos:end="121:27">ds</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:43">last_in_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:20"><expr pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:14">offset</name> <operator pos:start="123:16" pos:end="123:17">+=</operator> <literal type="number" pos:start="123:19" pos:end="123:19">8</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:57"><expr pos:start="127:9" pos:end="127:56"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:18">lengths</name><index pos:start="127:19" pos:end="127:21">[<expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">i</name></expr>]</index></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <call pos:start="127:25" pos:end="127:56"><name pos:start="127:25" pos:end="127:40">buff_read_uint64</name><argument_list pos:start="127:41" pos:end="127:56">(<argument pos:start="127:42" pos:end="127:47"><expr pos:start="127:42" pos:end="127:47"><name pos:start="127:42" pos:end="127:47">buffer</name></expr></argument>, <argument pos:start="127:50" pos:end="127:55"><expr pos:start="127:50" pos:end="127:55"><name pos:start="127:50" pos:end="127:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:20"><expr pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:14">offset</name> <operator pos:start="129:16" pos:end="129:17">+=</operator> <literal type="number" pos:start="129:19" pos:end="129:19">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="133:9" pos:end="145:9"><if pos:start="133:9" pos:end="145:9">if <condition pos:start="133:12" pos:end="133:44">(<expr pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">lengths</name><index pos:start="133:23" pos:end="133:25">[<expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">i</name></expr>]</index></name> <operator pos:start="133:27" pos:end="133:27">&gt;</operator> <name pos:start="133:29" pos:end="133:43">DMG_LENGTHS_MAX</name></expr>)</condition> <block pos:start="133:46" pos:end="145:9">{<block_content pos:start="135:13" pos:end="143:22">

            <expr_stmt pos:start="135:13" pos:end="139:60"><expr pos:start="135:13" pos:end="139:59"><call pos:start="135:13" pos:end="139:59"><name pos:start="135:13" pos:end="135:24">error_report</name><argument_list pos:start="135:25" pos:end="139:59">(<argument pos:start="135:26" pos:end="137:51"><expr pos:start="135:26" pos:end="137:51"><literal type="string" pos:start="135:26" pos:end="135:35">"length %"</literal> <name pos:start="135:37" pos:end="135:42">PRIu64</name> <literal type="string" pos:start="135:44" pos:end="135:57">" for chunk %"</literal> <name pos:start="135:59" pos:end="135:64">PRIu32</name>

                         <literal type="string" pos:start="137:26" pos:end="137:51">" is larger than max (%u)"</literal></expr></argument>,

                         <argument pos:start="139:26" pos:end="139:38"><expr pos:start="139:26" pos:end="139:38"><name pos:start="139:26" pos:end="139:38"><name pos:start="139:26" pos:end="139:26">s</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:35">lengths</name><index pos:start="139:36" pos:end="139:38">[<expr pos:start="139:37" pos:end="139:37"><name pos:start="139:37" pos:end="139:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="139:41" pos:end="139:41"><expr pos:start="139:41" pos:end="139:41"><name pos:start="139:41" pos:end="139:41">i</name></expr></argument>, <argument pos:start="139:44" pos:end="139:58"><expr pos:start="139:44" pos:end="139:58"><name pos:start="139:44" pos:end="139:58">DMG_LENGTHS_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:26"><expr pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <operator pos:start="141:19" pos:end="141:19">-</operator><name pos:start="141:20" pos:end="141:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="143:13" pos:end="143:22">goto <name pos:start="143:18" pos:end="143:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="149:9" pos:end="151:58"><expr pos:start="149:9" pos:end="151:57"><call pos:start="149:9" pos:end="151:57"><name pos:start="149:9" pos:end="149:29">update_max_chunk_size</name><argument_list pos:start="149:30" pos:end="151:57">(<argument pos:start="149:31" pos:end="149:31"><expr pos:start="149:31" pos:end="149:31"><name pos:start="149:31" pos:end="149:31">s</name></expr></argument>, <argument pos:start="149:34" pos:end="149:34"><expr pos:start="149:34" pos:end="149:34"><name pos:start="149:34" pos:end="149:34">i</name></expr></argument>, <argument pos:start="149:37" pos:end="149:60"><expr pos:start="149:37" pos:end="149:60"><operator pos:start="149:37" pos:end="149:37">&amp;</operator><name pos:start="149:38" pos:end="149:60"><name pos:start="149:38" pos:end="149:39">ds</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:60">max_compressed_size</name></name></expr></argument>,

                              <argument pos:start="151:31" pos:end="151:56"><expr pos:start="151:31" pos:end="151:56"><operator pos:start="151:31" pos:end="151:31">&amp;</operator><name pos:start="151:32" pos:end="151:56"><name pos:start="151:32" pos:end="151:33">ds</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:56">max_sectors_per_chunk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="155:5" pos:end="155:31"><expr pos:start="155:5" pos:end="155:30"><name pos:start="155:5" pos:end="155:15"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:15">n_chunks</name></name> <operator pos:start="155:17" pos:end="155:18">+=</operator> <name pos:start="155:20" pos:end="155:30">chunk_count</name></expr>;</expr_stmt>

    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>



<label pos:start="161:1" pos:end="161:5"><name pos:start="161:1" pos:end="161:4">fail</name>:</label>

    <return pos:start="163:5" pos:end="163:15">return <expr pos:start="163:12" pos:end="163:14"><name pos:start="163:12" pos:end="163:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
