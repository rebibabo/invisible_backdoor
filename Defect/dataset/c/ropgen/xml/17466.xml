<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17466.c" pos:tabs="8"><function pos:start="1:1" pos:end="298:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">load_input_picture</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">AVFrame</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:71">pic_arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="298:1">{<block_content pos:start="5:5" pos:end="296:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Picture</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pic</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:33">display_picture_number</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>, <decl pos:start="9:40" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:42">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:66"><decl pos:start="11:5" pos:end="13:65"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">encoding_delay</name> <init pos:start="11:24" pos:end="13:65">= <expr pos:start="11:26" pos:end="13:65"><ternary pos:start="11:26" pos:end="13:65"><condition pos:start="11:26" pos:end="11:42"><expr pos:start="11:26" pos:end="11:40"><name pos:start="11:26" pos:end="11:40"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:40">max_b_frames</name></name></expr> ?</condition><then pos:start="11:44" pos:end="11:58"> <expr pos:start="11:44" pos:end="11:58"><name pos:start="11:44" pos:end="11:58"><name pos:start="11:44" pos:end="11:44">s</name><operator pos:start="11:45" pos:end="11:46">-&gt;</operator><name pos:start="11:47" pos:end="11:58">max_b_frames</name></name></expr>

                                         </then><else pos:start="13:42" pos:end="13:65">: <expr pos:start="13:44" pos:end="13:65"><operator pos:start="13:44" pos:end="13:44">(</operator><ternary pos:start="13:45" pos:end="13:64"><condition pos:start="13:45" pos:end="13:58"><expr pos:start="13:45" pos:end="13:56"><name pos:start="13:45" pos:end="13:56"><name pos:start="13:45" pos:end="13:45">s</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:56">low_delay</name></name></expr> ?</condition><then pos:start="13:60" pos:end="13:60"> <expr pos:start="13:60" pos:end="13:60"><literal type="number" pos:start="13:60" pos:end="13:60">0</literal></expr> </then><else pos:start="13:62" pos:end="13:64">: <expr pos:start="13:64" pos:end="13:64"><literal type="number" pos:start="13:64" pos:end="13:64">1</literal></expr></else></ternary><operator pos:start="13:65" pos:end="13:65">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">flush_offset</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">direct</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="280:5"><if pos:start="21:5" pos:end="258:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">pic_arg</name></expr>)</condition> <block pos:start="21:18" pos:end="258:5">{<block_content pos:start="23:9" pos:end="256:26">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">pts</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:21">pic_arg</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:26">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:30">display_picture_number</name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:56"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:56">input_picture_number</name></name><operator pos:start="25:57" pos:end="25:58">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="79:9"><if pos:start="29:9" pos:end="59:9">if <condition pos:start="29:12" pos:end="29:34">(<expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:15">pts</name> <operator pos:start="29:17" pos:end="29:18">!=</operator> <name pos:start="29:20" pos:end="29:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="29:36" pos:end="59:9">{<block_content pos:start="31:13" pos:end="57:40">

            <if_stmt pos:start="31:13" pos:end="55:13"><if pos:start="31:13" pos:end="55:13">if <condition pos:start="31:16" pos:end="31:56">(<expr pos:start="31:17" pos:end="31:55"><name pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:37">user_specified_pts</name></name> <operator pos:start="31:39" pos:end="31:40">!=</operator> <name pos:start="31:42" pos:end="31:55">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="31:58" pos:end="55:13">{<block_content pos:start="33:17" pos:end="53:46">

                <decl_stmt pos:start="33:17" pos:end="33:53"><decl pos:start="33:17" pos:end="33:52"><type pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:23">int64_t</name></type> <name pos:start="33:25" pos:end="33:28">last</name> <init pos:start="33:30" pos:end="33:52">= <expr pos:start="33:32" pos:end="33:52"><name pos:start="33:32" pos:end="33:52"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:52">user_specified_pts</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="37:17" pos:end="47:17"><if pos:start="37:17" pos:end="47:17">if <condition pos:start="37:20" pos:end="37:32">(<expr pos:start="37:21" pos:end="37:31"><name pos:start="37:21" pos:end="37:23">pts</name> <operator pos:start="37:25" pos:end="37:26">&lt;=</operator> <name pos:start="37:28" pos:end="37:31">last</name></expr>)</condition> <block pos:start="37:34" pos:end="47:17">{<block_content pos:start="39:21" pos:end="45:43">

                    <expr_stmt pos:start="39:21" pos:end="43:38"><expr pos:start="39:21" pos:end="43:37"><call pos:start="39:21" pos:end="43:37"><name pos:start="39:21" pos:end="39:26">av_log</name><argument_list pos:start="39:27" pos:end="43:37">(<argument pos:start="39:28" pos:end="39:35"><expr pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:35">avctx</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:49"><expr pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="41:28" pos:end="41:74"><expr pos:start="41:28" pos:end="41:74"><literal type="string" pos:start="41:28" pos:end="41:43">"Invalid pts (%"</literal><name pos:start="41:44" pos:end="41:49">PRId64</name><literal type="string" pos:start="41:50" pos:end="41:63">") &lt;= last (%"</literal><name pos:start="41:64" pos:end="41:69">PRId64</name><literal type="string" pos:start="41:70" pos:end="41:74">")\n"</literal></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">pts</name></expr></argument>, <argument pos:start="43:33" pos:end="43:36"><expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="45:21" pos:end="45:43">return <expr pos:start="45:28" pos:end="45:42"><call pos:start="45:28" pos:end="45:42"><name pos:start="45:28" pos:end="45:34">AVERROR</name><argument_list pos:start="45:35" pos:end="45:42">(<argument pos:start="45:36" pos:end="45:41"><expr pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="51:17" pos:end="53:46"><if pos:start="51:17" pos:end="53:46">if <condition pos:start="51:20" pos:end="51:65">(<expr pos:start="51:21" pos:end="51:64"><operator pos:start="51:21" pos:end="51:21">!</operator><name pos:start="51:22" pos:end="51:33"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:33">low_delay</name></name> <operator pos:start="51:35" pos:end="51:36">&amp;&amp;</operator> <name pos:start="51:38" pos:end="51:59">display_picture_number</name> <operator pos:start="51:61" pos:end="51:62">==</operator> <literal type="number" pos:start="51:64" pos:end="51:64">1</literal></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:46"><block_content pos:start="53:21" pos:end="53:46">

                    <expr_stmt pos:start="53:21" pos:end="53:46"><expr pos:start="53:21" pos:end="53:45"><name pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:32">dts_delta</name></name> <operator pos:start="53:34" pos:end="53:34">=</operator> <name pos:start="53:36" pos:end="53:38">pts</name> <operator pos:start="53:40" pos:end="53:40">-</operator> <name pos:start="53:42" pos:end="53:45">last</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:33">user_specified_pts</name></name> <operator pos:start="57:35" pos:end="57:35">=</operator> <name pos:start="57:37" pos:end="57:39">pts</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="79:9">else <block pos:start="59:16" pos:end="79:9">{<block_content pos:start="61:13" pos:end="77:13">

            <if_stmt pos:start="61:13" pos:end="77:13"><if pos:start="61:13" pos:end="73:13">if <condition pos:start="61:16" pos:end="61:56">(<expr pos:start="61:17" pos:end="61:55"><name pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:37">user_specified_pts</name></name> <operator pos:start="61:39" pos:end="61:40">!=</operator> <name pos:start="61:42" pos:end="61:55">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="61:58" pos:end="73:13">{<block_content pos:start="63:17" pos:end="71:28">

                <expr_stmt pos:start="63:17" pos:end="65:48"><expr pos:start="63:17" pos:end="65:47"><name pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:37">user_specified_pts</name></name> <operator pos:start="63:39" pos:end="63:39">=</operator>

                <name pos:start="65:17" pos:end="65:19">pts</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:43"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:43">user_specified_pts</name></name> <operator pos:start="65:45" pos:end="65:45">+</operator> <literal type="number" pos:start="65:47" pos:end="65:47">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="71:28"><expr pos:start="67:17" pos:end="71:27"><call pos:start="67:17" pos:end="71:27"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="71:27">(<argument pos:start="67:24" pos:end="67:31"><expr pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">avctx</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:44"><expr pos:start="67:34" pos:end="67:44"><name pos:start="67:34" pos:end="67:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:77"><expr pos:start="69:24" pos:end="69:77"><literal type="string" pos:start="69:24" pos:end="69:66">"Warning: AVFrame.pts=? trying to guess (%"</literal><name pos:start="69:67" pos:end="69:72">PRId64</name><literal type="string" pos:start="69:73" pos:end="69:77">")\n"</literal></expr></argument>,

                       <argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="77:13">else <block pos:start="73:20" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:45">

                <expr_stmt pos:start="75:17" pos:end="75:45"><expr pos:start="75:17" pos:end="75:44"><name pos:start="75:17" pos:end="75:19">pts</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:44">display_picture_number</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="83:9" pos:end="91:23"><if pos:start="83:9" pos:end="91:23">if <condition pos:start="83:12" pos:end="89:50">(<expr pos:start="83:13" pos:end="89:49"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:28"><name pos:start="83:14" pos:end="83:20">pic_arg</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:25">buf</name><index pos:start="83:26" pos:end="83:28">[<expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>]</index></name> <operator pos:start="83:30" pos:end="83:31">||</operator>

            <name pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:19">pic_arg</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:29">linesize</name><index pos:start="85:30" pos:end="85:32">[<expr pos:start="85:31" pos:end="85:31"><literal type="number" pos:start="85:31" pos:end="85:31">0</literal></expr>]</index></name> <operator pos:start="85:34" pos:end="85:35">!=</operator> <name pos:start="85:37" pos:end="85:47"><name pos:start="85:37" pos:end="85:37">s</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:47">linesize</name></name> <operator pos:start="85:49" pos:end="85:50">||</operator>

            <name pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:19">pic_arg</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:29">linesize</name><index pos:start="87:30" pos:end="87:32">[<expr pos:start="87:31" pos:end="87:31"><literal type="number" pos:start="87:31" pos:end="87:31">1</literal></expr>]</index></name> <operator pos:start="87:34" pos:end="87:35">!=</operator> <name pos:start="87:37" pos:end="87:49"><name pos:start="87:37" pos:end="87:37">s</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:49">uvlinesize</name></name> <operator pos:start="87:51" pos:end="87:52">||</operator>

            <name pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:19">pic_arg</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:29">linesize</name><index pos:start="89:30" pos:end="89:32">[<expr pos:start="89:31" pos:end="89:31"><literal type="number" pos:start="89:31" pos:end="89:31">2</literal></expr>]</index></name> <operator pos:start="89:34" pos:end="89:35">!=</operator> <name pos:start="89:37" pos:end="89:49"><name pos:start="89:37" pos:end="89:37">s</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:49">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:23"><block_content pos:start="91:13" pos:end="91:23">

            <expr_stmt pos:start="91:13" pos:end="91:23"><expr pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:18">direct</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="95:23"><if pos:start="93:9" pos:end="95:23">if <condition pos:start="93:12" pos:end="93:48">(<expr pos:start="93:13" pos:end="93:47"><operator pos:start="93:13" pos:end="93:13">(</operator><name pos:start="93:14" pos:end="93:21"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:21">width</name></name> <operator pos:start="93:23" pos:end="93:23">&amp;</operator> <literal type="number" pos:start="93:25" pos:end="93:26">15</literal><operator pos:start="93:27" pos:end="93:27">)</operator> <operator pos:start="93:29" pos:end="93:30">||</operator> <operator pos:start="93:32" pos:end="93:32">(</operator><name pos:start="93:33" pos:end="93:41"><name pos:start="93:33" pos:end="93:33">s</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:41">height</name></name> <operator pos:start="93:43" pos:end="93:43">&amp;</operator> <literal type="number" pos:start="93:45" pos:end="93:46">15</literal><operator pos:start="93:47" pos:end="93:47">)</operator></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:23"><block_content pos:start="95:13" pos:end="95:23">

            <expr_stmt pos:start="95:13" pos:end="95:23"><expr pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:18">direct</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="99:23"><if pos:start="97:9" pos:end="99:23">if <condition pos:start="97:12" pos:end="97:62">(<expr pos:start="97:13" pos:end="97:61"><operator pos:start="97:13" pos:end="97:13">(</operator><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:22">intptr_t</name><operator pos:start="97:23" pos:end="97:23">)</operator><operator pos:start="97:24" pos:end="97:24">(</operator><name pos:start="97:25" pos:end="97:40"><name pos:start="97:25" pos:end="97:31">pic_arg</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:37">data</name><index pos:start="97:38" pos:end="97:40">[<expr pos:start="97:39" pos:end="97:39"><literal type="number" pos:start="97:39" pos:end="97:39">0</literal></expr>]</index></name><operator pos:start="97:41" pos:end="97:41">)</operator><operator pos:start="97:42" pos:end="97:42">)</operator> <operator pos:start="97:44" pos:end="97:44">&amp;</operator> <operator pos:start="97:46" pos:end="97:46">(</operator><name pos:start="97:47" pos:end="97:58">STRIDE_ALIGN</name><operator pos:start="97:59" pos:end="97:59">-</operator><literal type="number" pos:start="97:60" pos:end="97:60">1</literal><operator pos:start="97:61" pos:end="97:61">)</operator></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:23"><block_content pos:start="99:13" pos:end="99:23">

            <expr_stmt pos:start="99:13" pos:end="99:23"><expr pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:18">direct</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="103:23"><if pos:start="101:9" pos:end="103:23">if <condition pos:start="101:12" pos:end="101:43">(<expr pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">linesize</name></name> <operator pos:start="101:25" pos:end="101:25">&amp;</operator> <operator pos:start="101:27" pos:end="101:27">(</operator><name pos:start="101:28" pos:end="101:39">STRIDE_ALIGN</name><operator pos:start="101:40" pos:end="101:40">-</operator><literal type="number" pos:start="101:41" pos:end="101:41">1</literal><operator pos:start="101:42" pos:end="101:42">)</operator></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:23"><block_content pos:start="103:13" pos:end="103:23">

            <expr_stmt pos:start="103:13" pos:end="103:23"><expr pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:18">direct</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="109:66"><expr pos:start="107:9" pos:end="109:65"><call pos:start="107:9" pos:end="109:65"><name pos:start="107:9" pos:end="107:15">ff_dlog</name><argument_list pos:start="107:16" pos:end="109:65">(<argument pos:start="107:17" pos:end="107:24"><expr pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">avctx</name></name></expr></argument>, <argument pos:start="107:27" pos:end="107:77"><expr pos:start="107:27" pos:end="107:77"><literal type="string" pos:start="107:27" pos:end="107:35">"%d %d %"</literal><name pos:start="107:36" pos:end="107:52">PTRDIFF_SPECIFIER</name><literal type="string" pos:start="107:53" pos:end="107:56">" %"</literal><name pos:start="107:57" pos:end="107:73">PTRDIFF_SPECIFIER</name><literal type="string" pos:start="107:74" pos:end="107:77">"\n"</literal></expr></argument>, <argument pos:start="107:80" pos:end="107:99"><expr pos:start="107:80" pos:end="107:99"><name pos:start="107:80" pos:end="107:99"><name pos:start="107:80" pos:end="107:86">pic_arg</name><operator pos:start="107:87" pos:end="107:88">-&gt;</operator><name pos:start="107:89" pos:end="107:96">linesize</name><index pos:start="107:97" pos:end="107:99">[<expr pos:start="107:98" pos:end="107:98"><literal type="number" pos:start="107:98" pos:end="107:98">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="109:17" pos:end="109:36"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:23">pic_arg</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:33">linesize</name><index pos:start="109:34" pos:end="109:36">[<expr pos:start="109:35" pos:end="109:35"><literal type="number" pos:start="109:35" pos:end="109:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:39" pos:end="109:49"><expr pos:start="109:39" pos:end="109:49"><name pos:start="109:39" pos:end="109:49"><name pos:start="109:39" pos:end="109:39">s</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:49">linesize</name></name></expr></argument>, <argument pos:start="109:52" pos:end="109:64"><expr pos:start="109:52" pos:end="109:64"><name pos:start="109:52" pos:end="109:64"><name pos:start="109:52" pos:end="109:52">s</name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:64">uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:65"><expr pos:start="113:9" pos:end="113:64"><name pos:start="113:9" pos:end="113:9">i</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <call pos:start="113:13" pos:end="113:64"><name pos:start="113:13" pos:end="113:34">ff_find_unused_picture</name><argument_list pos:start="113:35" pos:end="113:64">(<argument pos:start="113:36" pos:end="113:43"><expr pos:start="113:36" pos:end="113:43"><name pos:start="113:36" pos:end="113:43"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:43">avctx</name></name></expr></argument>, <argument pos:start="113:46" pos:end="113:55"><expr pos:start="113:46" pos:end="113:55"><name pos:start="113:46" pos:end="113:55"><name pos:start="113:46" pos:end="113:46">s</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:55">picture</name></name></expr></argument>, <argument pos:start="113:58" pos:end="113:63"><expr pos:start="113:58" pos:end="113:63"><name pos:start="113:58" pos:end="113:63">direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="117:21"><if pos:start="115:9" pos:end="117:21">if <condition pos:start="115:12" pos:end="115:18">(<expr pos:start="115:13" pos:end="115:17"><name pos:start="115:13" pos:end="115:13">i</name> <operator pos:start="115:15" pos:end="115:15">&lt;</operator> <literal type="number" pos:start="115:17" pos:end="115:17">0</literal></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:21"><block_content pos:start="117:13" pos:end="117:21">

            <return pos:start="117:13" pos:end="117:21">return <expr pos:start="117:20" pos:end="117:20"><name pos:start="117:20" pos:end="117:20">i</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:29"><expr pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:11">pic</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <operator pos:start="121:15" pos:end="121:15">&amp;</operator><name pos:start="121:16" pos:end="121:28"><name pos:start="121:16" pos:end="121:16">s</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:25">picture</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><name pos:start="121:27" pos:end="121:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:11">pic</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:22">reference</name></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <literal type="number" pos:start="123:26" pos:end="123:26">3</literal></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:19">(<expr pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:18">direct</name></expr>)</condition> <block pos:start="127:21" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:27">

            <if_stmt pos:start="129:13" pos:end="131:27"><if pos:start="129:13" pos:end="131:27">if <condition pos:start="129:16" pos:end="129:58">(<expr pos:start="129:17" pos:end="129:57"><operator pos:start="129:17" pos:end="129:17">(</operator><name pos:start="129:18" pos:end="129:20">ret</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:52"><name pos:start="129:24" pos:end="129:35">av_frame_ref</name><argument_list pos:start="129:36" pos:end="129:52">(<argument pos:start="129:37" pos:end="129:42"><expr pos:start="129:37" pos:end="129:42"><name pos:start="129:37" pos:end="129:42"><name pos:start="129:37" pos:end="129:39">pic</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:42">f</name></name></expr></argument>, <argument pos:start="129:45" pos:end="129:51"><expr pos:start="129:45" pos:end="129:51"><name pos:start="129:45" pos:end="129:51">pic_arg</name></expr></argument>)</argument_list></call><operator pos:start="129:53" pos:end="129:53">)</operator> <operator pos:start="129:55" pos:end="129:55">&lt;</operator> <literal type="number" pos:start="129:57" pos:end="129:57">0</literal></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:27"><block_content pos:start="131:17" pos:end="131:27">

                <return pos:start="131:17" pos:end="131:27">return <expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:43"><name pos:start="135:15" pos:end="135:27">alloc_picture</name><argument_list pos:start="135:28" pos:end="135:43">(<argument pos:start="135:29" pos:end="135:29"><expr pos:start="135:29" pos:end="135:29"><name pos:start="135:29" pos:end="135:29">s</name></expr></argument>, <argument pos:start="135:32" pos:end="135:34"><expr pos:start="135:32" pos:end="135:34"><name pos:start="135:32" pos:end="135:34">pic</name></expr></argument>, <argument pos:start="135:37" pos:end="135:42"><expr pos:start="135:37" pos:end="135:42"><name pos:start="135:37" pos:end="135:42">direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="139:23"><if pos:start="137:9" pos:end="139:23">if <condition pos:start="137:12" pos:end="137:20">(<expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">&lt;</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:23"><block_content pos:start="139:13" pos:end="139:23">

            <return pos:start="139:13" pos:end="139:23">return <expr pos:start="139:20" pos:end="139:22"><name pos:start="139:20" pos:end="139:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="143:9" pos:end="244:9"><if pos:start="143:9" pos:end="244:9">if <condition pos:start="143:12" pos:end="143:20">(<expr pos:start="143:13" pos:end="143:19"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:19">direct</name></expr>)</condition> <block pos:start="143:22" pos:end="244:9">{<block_content pos:start="145:13" pos:end="242:13">

            <if_stmt pos:start="145:13" pos:end="242:13"><if pos:start="145:13" pos:end="153:13">if <condition pos:start="145:16" pos:end="149:69">(<expr pos:start="145:17" pos:end="149:68"><name pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:19">pic</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:22">f</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:28">data</name><index pos:start="145:29" pos:end="145:31">[<expr pos:start="145:30" pos:end="145:30"><literal type="number" pos:start="145:30" pos:end="145:30">0</literal></expr>]</index></name> <operator pos:start="145:33" pos:end="145:33">+</operator> <name pos:start="145:35" pos:end="145:48">INPLACE_OFFSET</name> <operator pos:start="145:50" pos:end="145:51">==</operator> <name pos:start="145:53" pos:end="145:68"><name pos:start="145:53" pos:end="145:59">pic_arg</name><operator pos:start="145:60" pos:end="145:61">-&gt;</operator><name pos:start="145:62" pos:end="145:65">data</name><index pos:start="145:66" pos:end="145:68">[<expr pos:start="145:67" pos:end="145:67"><literal type="number" pos:start="145:67" pos:end="145:67">0</literal></expr>]</index></name> <operator pos:start="145:70" pos:end="145:71">&amp;&amp;</operator>

                <name pos:start="147:17" pos:end="147:31"><name pos:start="147:17" pos:end="147:19">pic</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:22">f</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:28">data</name><index pos:start="147:29" pos:end="147:31">[<expr pos:start="147:30" pos:end="147:30"><literal type="number" pos:start="147:30" pos:end="147:30">1</literal></expr>]</index></name> <operator pos:start="147:33" pos:end="147:33">+</operator> <name pos:start="147:35" pos:end="147:48">INPLACE_OFFSET</name> <operator pos:start="147:50" pos:end="147:51">==</operator> <name pos:start="147:53" pos:end="147:68"><name pos:start="147:53" pos:end="147:59">pic_arg</name><operator pos:start="147:60" pos:end="147:61">-&gt;</operator><name pos:start="147:62" pos:end="147:65">data</name><index pos:start="147:66" pos:end="147:68">[<expr pos:start="147:67" pos:end="147:67"><literal type="number" pos:start="147:67" pos:end="147:67">1</literal></expr>]</index></name> <operator pos:start="147:70" pos:end="147:71">&amp;&amp;</operator>

                <name pos:start="149:17" pos:end="149:31"><name pos:start="149:17" pos:end="149:19">pic</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:22">f</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:28">data</name><index pos:start="149:29" pos:end="149:31">[<expr pos:start="149:30" pos:end="149:30"><literal type="number" pos:start="149:30" pos:end="149:30">2</literal></expr>]</index></name> <operator pos:start="149:33" pos:end="149:33">+</operator> <name pos:start="149:35" pos:end="149:48">INPLACE_OFFSET</name> <operator pos:start="149:50" pos:end="149:51">==</operator> <name pos:start="149:53" pos:end="149:68"><name pos:start="149:53" pos:end="149:59">pic_arg</name><operator pos:start="149:60" pos:end="149:61">-&gt;</operator><name pos:start="149:62" pos:end="149:65">data</name><index pos:start="149:66" pos:end="149:68">[<expr pos:start="149:67" pos:end="149:67"><literal type="number" pos:start="149:67" pos:end="149:67">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="149:71" pos:end="153:13">{<block_content>

                <comment type="line" pos:start="151:17" pos:end="151:24">// empty</comment>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="242:13">else <block pos:start="153:20" pos:end="242:13">{<block_content pos:start="155:17" pos:end="239:17">

                <decl_stmt pos:start="155:17" pos:end="155:51"><decl pos:start="155:17" pos:end="155:34"><type pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">int</name></type> <name pos:start="155:21" pos:end="155:34">h_chroma_shift</name></decl>, <decl pos:start="155:37" pos:end="155:50"><type ref="prev" pos:start="155:17" pos:end="155:19"/><name pos:start="155:37" pos:end="155:50">v_chroma_shift</name></decl>;</decl_stmt>

                <expr_stmt pos:start="157:17" pos:end="161:66"><expr pos:start="157:17" pos:end="161:65"><call pos:start="157:17" pos:end="161:65"><name pos:start="157:17" pos:end="157:48">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="157:49" pos:end="161:65">(<argument pos:start="157:50" pos:end="157:66"><expr pos:start="157:50" pos:end="157:66"><name pos:start="157:50" pos:end="157:66"><name pos:start="157:50" pos:end="157:50">s</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:57">avctx</name><operator pos:start="157:58" pos:end="157:59">-&gt;</operator><name pos:start="157:60" pos:end="157:66">pix_fmt</name></name></expr></argument>,

                                                 <argument pos:start="159:50" pos:end="159:64"><expr pos:start="159:50" pos:end="159:64"><operator pos:start="159:50" pos:end="159:50">&amp;</operator><name pos:start="159:51" pos:end="159:64">h_chroma_shift</name></expr></argument>,

                                                 <argument pos:start="161:50" pos:end="161:64"><expr pos:start="161:50" pos:end="161:64"><operator pos:start="161:50" pos:end="161:50">&amp;</operator><name pos:start="161:51" pos:end="161:64">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="165:17" pos:end="239:17">for <control pos:start="165:21" pos:end="165:39">(<init pos:start="165:22" pos:end="165:27"><expr pos:start="165:22" pos:end="165:26"><name pos:start="165:22" pos:end="165:22">i</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="number" pos:start="165:26" pos:end="165:26">0</literal></expr>;</init> <condition pos:start="165:29" pos:end="165:34"><expr pos:start="165:29" pos:end="165:33"><name pos:start="165:29" pos:end="165:29">i</name> <operator pos:start="165:31" pos:end="165:31">&lt;</operator> <literal type="number" pos:start="165:33" pos:end="165:33">3</literal></expr>;</condition> <incr pos:start="165:36" pos:end="165:38"><expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:36">i</name><operator pos:start="165:37" pos:end="165:38">++</operator></expr></incr>)</control> <block pos:start="165:41" pos:end="239:17">{<block_content pos:start="167:21" pos:end="237:21">

                    <decl_stmt pos:start="167:21" pos:end="167:58"><decl pos:start="167:21" pos:end="167:57"><type pos:start="167:21" pos:end="167:23"><name pos:start="167:21" pos:end="167:23">int</name></type> <name pos:start="167:25" pos:end="167:34">src_stride</name> <init pos:start="167:36" pos:end="167:57">= <expr pos:start="167:38" pos:end="167:57"><name pos:start="167:38" pos:end="167:57"><name pos:start="167:38" pos:end="167:44">pic_arg</name><operator pos:start="167:45" pos:end="167:46">-&gt;</operator><name pos:start="167:47" pos:end="167:54">linesize</name><index pos:start="167:55" pos:end="167:57">[<expr pos:start="167:56" pos:end="167:56"><name pos:start="167:56" pos:end="167:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="169:21" pos:end="169:69"><decl pos:start="169:21" pos:end="169:68"><type pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:23">int</name></type> <name pos:start="169:25" pos:end="169:34">dst_stride</name> <init pos:start="169:36" pos:end="169:68">= <expr pos:start="169:38" pos:end="169:68"><ternary pos:start="169:38" pos:end="169:68"><condition pos:start="169:38" pos:end="169:40"><expr pos:start="169:38" pos:end="169:38"><name pos:start="169:38" pos:end="169:38">i</name></expr> ?</condition><then pos:start="169:42" pos:end="169:54"> <expr pos:start="169:42" pos:end="169:54"><name pos:start="169:42" pos:end="169:54"><name pos:start="169:42" pos:end="169:42">s</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:54">uvlinesize</name></name></expr> </then><else pos:start="169:56" pos:end="169:68">: <expr pos:start="169:58" pos:end="169:68"><name pos:start="169:58" pos:end="169:68"><name pos:start="169:58" pos:end="169:58">s</name><operator pos:start="169:59" pos:end="169:60">-&gt;</operator><name pos:start="169:61" pos:end="169:68">linesize</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="171:21" pos:end="171:57"><decl pos:start="171:21" pos:end="171:56"><type pos:start="171:21" pos:end="171:23"><name pos:start="171:21" pos:end="171:23">int</name></type> <name pos:start="171:25" pos:end="171:31">h_shift</name> <init pos:start="171:33" pos:end="171:56">= <expr pos:start="171:35" pos:end="171:56"><ternary pos:start="171:35" pos:end="171:56"><condition pos:start="171:35" pos:end="171:37"><expr pos:start="171:35" pos:end="171:35"><name pos:start="171:35" pos:end="171:35">i</name></expr> ?</condition><then pos:start="171:39" pos:end="171:52"> <expr pos:start="171:39" pos:end="171:52"><name pos:start="171:39" pos:end="171:52">h_chroma_shift</name></expr> </then><else pos:start="171:54" pos:end="171:56">: <expr pos:start="171:56" pos:end="171:56"><literal type="number" pos:start="171:56" pos:end="171:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="173:21" pos:end="173:57"><decl pos:start="173:21" pos:end="173:56"><type pos:start="173:21" pos:end="173:23"><name pos:start="173:21" pos:end="173:23">int</name></type> <name pos:start="173:25" pos:end="173:31">v_shift</name> <init pos:start="173:33" pos:end="173:56">= <expr pos:start="173:35" pos:end="173:56"><ternary pos:start="173:35" pos:end="173:56"><condition pos:start="173:35" pos:end="173:37"><expr pos:start="173:35" pos:end="173:35"><name pos:start="173:35" pos:end="173:35">i</name></expr> ?</condition><then pos:start="173:39" pos:end="173:52"> <expr pos:start="173:39" pos:end="173:52"><name pos:start="173:39" pos:end="173:52">v_chroma_shift</name></expr> </then><else pos:start="173:54" pos:end="173:56">: <expr pos:start="173:56" pos:end="173:56"><literal type="number" pos:start="173:56" pos:end="173:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="175:21" pos:end="175:49"><decl pos:start="175:21" pos:end="175:48"><type pos:start="175:21" pos:end="175:23"><name pos:start="175:21" pos:end="175:23">int</name></type> <name pos:start="175:25" pos:end="175:25">w</name> <init pos:start="175:27" pos:end="175:48">= <expr pos:start="175:29" pos:end="175:48"><name pos:start="175:29" pos:end="175:36"><name pos:start="175:29" pos:end="175:29">s</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:36">width</name></name>  <operator pos:start="175:39" pos:end="175:40">&gt;&gt;</operator> <name pos:start="175:42" pos:end="175:48">h_shift</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="177:21" pos:end="177:49"><decl pos:start="177:21" pos:end="177:48"><type pos:start="177:21" pos:end="177:23"><name pos:start="177:21" pos:end="177:23">int</name></type> <name pos:start="177:25" pos:end="177:25">h</name> <init pos:start="177:27" pos:end="177:48">= <expr pos:start="177:29" pos:end="177:48"><name pos:start="177:29" pos:end="177:37"><name pos:start="177:29" pos:end="177:29">s</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:37">height</name></name> <operator pos:start="177:39" pos:end="177:40">&gt;&gt;</operator> <name pos:start="177:42" pos:end="177:48">v_shift</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="179:21" pos:end="179:52"><decl pos:start="179:21" pos:end="179:51"><type pos:start="179:21" pos:end="179:29"><name pos:start="179:21" pos:end="179:27">uint8_t</name> <modifier pos:start="179:29" pos:end="179:29">*</modifier></type><name pos:start="179:30" pos:end="179:32">src</name> <init pos:start="179:34" pos:end="179:51">= <expr pos:start="179:36" pos:end="179:51"><name pos:start="179:36" pos:end="179:51"><name pos:start="179:36" pos:end="179:42">pic_arg</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:48">data</name><index pos:start="179:49" pos:end="179:51">[<expr pos:start="179:50" pos:end="179:50"><name pos:start="179:50" pos:end="179:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="181:21" pos:end="181:51"><decl pos:start="181:21" pos:end="181:50"><type pos:start="181:21" pos:end="181:29"><name pos:start="181:21" pos:end="181:27">uint8_t</name> <modifier pos:start="181:29" pos:end="181:29">*</modifier></type><name pos:start="181:30" pos:end="181:32">dst</name> <init pos:start="181:34" pos:end="181:50">= <expr pos:start="181:36" pos:end="181:50"><name pos:start="181:36" pos:end="181:50"><name pos:start="181:36" pos:end="181:38">pic</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:41">f</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:47">data</name><index pos:start="181:48" pos:end="181:50">[<expr pos:start="181:49" pos:end="181:49"><name pos:start="181:49" pos:end="181:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="183:21" pos:end="183:34"><decl pos:start="183:21" pos:end="183:33"><type pos:start="183:21" pos:end="183:23"><name pos:start="183:21" pos:end="183:23">int</name></type> <name pos:start="183:25" pos:end="183:28">vpad</name> <init pos:start="183:30" pos:end="183:33">= <expr pos:start="183:32" pos:end="183:33"><literal type="number" pos:start="183:32" pos:end="183:33">16</literal></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="187:21" pos:end="193:34"><if pos:start="187:21" pos:end="193:34">if <condition pos:start="187:24" pos:end="191:67">(   <expr pos:start="187:28" pos:end="191:66"><name pos:start="187:28" pos:end="187:38"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:38">codec_id</name></name> <operator pos:start="187:40" pos:end="187:41">==</operator> <name pos:start="187:43" pos:end="187:64">AV_CODEC_ID_MPEG2VIDEO</name>

                        <operator pos:start="189:25" pos:end="189:26">&amp;&amp;</operator> <operator pos:start="189:28" pos:end="189:28">!</operator><name pos:start="189:29" pos:end="189:51"><name pos:start="189:29" pos:end="189:29">s</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:51">progressive_sequence</name></name>

                        <operator pos:start="191:25" pos:end="191:26">&amp;&amp;</operator> <call pos:start="191:28" pos:end="191:49"><name pos:start="191:28" pos:end="191:34">FFALIGN</name><argument_list pos:start="191:35" pos:end="191:49">(<argument pos:start="191:36" pos:end="191:44"><expr pos:start="191:36" pos:end="191:44"><name pos:start="191:36" pos:end="191:44"><name pos:start="191:36" pos:end="191:36">s</name><operator pos:start="191:37" pos:end="191:38">-&gt;</operator><name pos:start="191:39" pos:end="191:44">height</name></name></expr></argument>, <argument pos:start="191:47" pos:end="191:48"><expr pos:start="191:47" pos:end="191:48"><literal type="number" pos:start="191:47" pos:end="191:48">32</literal></expr></argument>)</argument_list></call> <operator pos:start="191:51" pos:end="191:51">-</operator> <name pos:start="191:53" pos:end="191:61"><name pos:start="191:53" pos:end="191:53">s</name><operator pos:start="191:54" pos:end="191:55">-&gt;</operator><name pos:start="191:56" pos:end="191:61">height</name></name> <operator pos:start="191:63" pos:end="191:63">&gt;</operator> <literal type="number" pos:start="191:65" pos:end="191:66">16</literal></expr>)</condition><block type="pseudo" pos:start="193:25" pos:end="193:34"><block_content pos:start="193:25" pos:end="193:34">

                        <expr_stmt pos:start="193:25" pos:end="193:34"><expr pos:start="193:25" pos:end="193:33"><name pos:start="193:25" pos:end="193:28">vpad</name> <operator pos:start="193:30" pos:end="193:30">=</operator> <literal type="number" pos:start="193:32" pos:end="193:33">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="197:21" pos:end="199:46"><if pos:start="197:21" pos:end="199:46">if <condition pos:start="197:24" pos:end="197:50">(<expr pos:start="197:25" pos:end="197:49"><operator pos:start="197:25" pos:end="197:25">!</operator><name pos:start="197:26" pos:end="197:49"><name pos:start="197:26" pos:end="197:26">s</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:33">avctx</name><operator pos:start="197:34" pos:end="197:35">-&gt;</operator><name pos:start="197:36" pos:end="197:49">rc_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="199:25" pos:end="199:46"><block_content pos:start="199:25" pos:end="199:46">

                        <expr_stmt pos:start="199:25" pos:end="199:46"><expr pos:start="199:25" pos:end="199:45"><name pos:start="199:25" pos:end="199:27">dst</name> <operator pos:start="199:29" pos:end="199:30">+=</operator> <name pos:start="199:32" pos:end="199:45">INPLACE_OFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="203:21" pos:end="223:21"><if pos:start="203:21" pos:end="205:57">if <condition pos:start="203:24" pos:end="203:49">(<expr pos:start="203:25" pos:end="203:48"><name pos:start="203:25" pos:end="203:34">src_stride</name> <operator pos:start="203:36" pos:end="203:37">==</operator> <name pos:start="203:39" pos:end="203:48">dst_stride</name></expr>)</condition><block type="pseudo" pos:start="205:25" pos:end="205:57"><block_content pos:start="205:25" pos:end="205:57">

                        <expr_stmt pos:start="205:25" pos:end="205:57"><expr pos:start="205:25" pos:end="205:56"><call pos:start="205:25" pos:end="205:56"><name pos:start="205:25" pos:end="205:30">memcpy</name><argument_list pos:start="205:31" pos:end="205:56">(<argument pos:start="205:32" pos:end="205:34"><expr pos:start="205:32" pos:end="205:34"><name pos:start="205:32" pos:end="205:34">dst</name></expr></argument>, <argument pos:start="205:37" pos:end="205:39"><expr pos:start="205:37" pos:end="205:39"><name pos:start="205:37" pos:end="205:39">src</name></expr></argument>, <argument pos:start="205:42" pos:end="205:55"><expr pos:start="205:42" pos:end="205:55"><name pos:start="205:42" pos:end="205:51">src_stride</name> <operator pos:start="205:53" pos:end="205:53">*</operator> <name pos:start="205:55" pos:end="205:55">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="207:21" pos:end="223:21">else <block pos:start="207:26" pos:end="223:21">{<block_content pos:start="209:25" pos:end="221:25">

                        <decl_stmt pos:start="209:25" pos:end="209:35"><decl pos:start="209:25" pos:end="209:34"><type pos:start="209:25" pos:end="209:27"><name pos:start="209:25" pos:end="209:27">int</name></type> <name pos:start="209:29" pos:end="209:30">h2</name> <init pos:start="209:32" pos:end="209:34">= <expr pos:start="209:34" pos:end="209:34"><name pos:start="209:34" pos:end="209:34">h</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="211:25" pos:end="211:44"><decl pos:start="211:25" pos:end="211:43"><type pos:start="211:25" pos:end="211:33"><name pos:start="211:25" pos:end="211:31">uint8_t</name> <modifier pos:start="211:33" pos:end="211:33">*</modifier></type><name pos:start="211:34" pos:end="211:37">dst2</name> <init pos:start="211:39" pos:end="211:43">= <expr pos:start="211:41" pos:end="211:43"><name pos:start="211:41" pos:end="211:43">dst</name></expr></init></decl>;</decl_stmt>

                        <while pos:start="213:25" pos:end="221:25">while <condition pos:start="213:31" pos:end="213:36">(<expr pos:start="213:32" pos:end="213:35"><name pos:start="213:32" pos:end="213:33">h2</name><operator pos:start="213:34" pos:end="213:35">--</operator></expr>)</condition> <block pos:start="213:38" pos:end="221:25">{<block_content pos:start="215:29" pos:end="219:46">

                            <expr_stmt pos:start="215:29" pos:end="215:49"><expr pos:start="215:29" pos:end="215:48"><call pos:start="215:29" pos:end="215:48"><name pos:start="215:29" pos:end="215:34">memcpy</name><argument_list pos:start="215:35" pos:end="215:48">(<argument pos:start="215:36" pos:end="215:39"><expr pos:start="215:36" pos:end="215:39"><name pos:start="215:36" pos:end="215:39">dst2</name></expr></argument>, <argument pos:start="215:42" pos:end="215:44"><expr pos:start="215:42" pos:end="215:44"><name pos:start="215:42" pos:end="215:44">src</name></expr></argument>, <argument pos:start="215:47" pos:end="215:47"><expr pos:start="215:47" pos:end="215:47"><name pos:start="215:47" pos:end="215:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="217:29" pos:end="217:47"><expr pos:start="217:29" pos:end="217:46"><name pos:start="217:29" pos:end="217:32">dst2</name> <operator pos:start="217:34" pos:end="217:35">+=</operator> <name pos:start="217:37" pos:end="217:46">dst_stride</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="219:29" pos:end="219:46"><expr pos:start="219:29" pos:end="219:45"><name pos:start="219:29" pos:end="219:31">src</name> <operator pos:start="219:33" pos:end="219:34">+=</operator> <name pos:start="219:36" pos:end="219:45">src_stride</name></expr>;</expr_stmt>

                        </block_content>}</block></while>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="225:21" pos:end="237:21"><if pos:start="225:21" pos:end="237:21">if <condition pos:start="225:24" pos:end="225:66">(<expr pos:start="225:25" pos:end="225:65"><operator pos:start="225:25" pos:end="225:25">(</operator><name pos:start="225:26" pos:end="225:33"><name pos:start="225:26" pos:end="225:26">s</name><operator pos:start="225:27" pos:end="225:28">-&gt;</operator><name pos:start="225:29" pos:end="225:33">width</name></name> <operator pos:start="225:35" pos:end="225:35">&amp;</operator> <literal type="number" pos:start="225:37" pos:end="225:38">15</literal><operator pos:start="225:39" pos:end="225:39">)</operator> <operator pos:start="225:41" pos:end="225:42">||</operator> <operator pos:start="225:44" pos:end="225:44">(</operator><name pos:start="225:45" pos:end="225:53"><name pos:start="225:45" pos:end="225:45">s</name><operator pos:start="225:46" pos:end="225:47">-&gt;</operator><name pos:start="225:48" pos:end="225:53">height</name></name> <operator pos:start="225:55" pos:end="225:55">&amp;</operator> <operator pos:start="225:57" pos:end="225:57">(</operator><name pos:start="225:58" pos:end="225:61">vpad</name><operator pos:start="225:62" pos:end="225:62">-</operator><literal type="number" pos:start="225:63" pos:end="225:63">1</literal><operator pos:start="225:64" pos:end="225:64">)</operator><operator pos:start="225:65" pos:end="225:65">)</operator></expr>)</condition> <block pos:start="225:68" pos:end="237:21">{<block_content pos:start="227:25" pos:end="235:61">

                        <expr_stmt pos:start="227:25" pos:end="235:61"><expr pos:start="227:25" pos:end="235:60"><call pos:start="227:25" pos:end="235:60"><name pos:start="227:25" pos:end="227:47"><name pos:start="227:25" pos:end="227:25">s</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:36">mpvencdsp</name><operator pos:start="227:37" pos:end="227:37">.</operator><name pos:start="227:38" pos:end="227:47">draw_edges</name></name><argument_list pos:start="227:48" pos:end="235:60">(<argument pos:start="227:49" pos:end="227:51"><expr pos:start="227:49" pos:end="227:51"><name pos:start="227:49" pos:end="227:51">dst</name></expr></argument>, <argument pos:start="227:54" pos:end="227:63"><expr pos:start="227:54" pos:end="227:63"><name pos:start="227:54" pos:end="227:63">dst_stride</name></expr></argument>,

                                                <argument pos:start="229:49" pos:end="229:49"><expr pos:start="229:49" pos:end="229:49"><name pos:start="229:49" pos:end="229:49">w</name></expr></argument>, <argument pos:start="229:52" pos:end="229:52"><expr pos:start="229:52" pos:end="229:52"><name pos:start="229:52" pos:end="229:52">h</name></expr></argument>,

                                                <argument pos:start="231:49" pos:end="231:61"><expr pos:start="231:49" pos:end="231:61"><literal type="number" pos:start="231:49" pos:end="231:50">16</literal> <operator pos:start="231:52" pos:end="231:53">&gt;&gt;</operator> <name pos:start="231:55" pos:end="231:61">h_shift</name></expr></argument>,

                                                <argument pos:start="233:49" pos:end="233:63"><expr pos:start="233:49" pos:end="233:63"><name pos:start="233:49" pos:end="233:52">vpad</name> <operator pos:start="233:54" pos:end="233:55">&gt;&gt;</operator> <name pos:start="233:57" pos:end="233:63">v_shift</name></expr></argument>,

                                                <argument pos:start="235:49" pos:end="235:59"><expr pos:start="235:49" pos:end="235:59"><name pos:start="235:49" pos:end="235:59">EDGE_BOTTOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>


            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="246:9" pos:end="246:51"><expr pos:start="246:9" pos:end="246:50"><name pos:start="246:9" pos:end="246:11">ret</name> <operator pos:start="246:13" pos:end="246:13">=</operator> <call pos:start="246:15" pos:end="246:50"><name pos:start="246:15" pos:end="246:33">av_frame_copy_props</name><argument_list pos:start="246:34" pos:end="246:50">(<argument pos:start="246:35" pos:end="246:40"><expr pos:start="246:35" pos:end="246:40"><name pos:start="246:35" pos:end="246:40"><name pos:start="246:35" pos:end="246:37">pic</name><operator pos:start="246:38" pos:end="246:39">-&gt;</operator><name pos:start="246:40" pos:end="246:40">f</name></name></expr></argument>, <argument pos:start="246:43" pos:end="246:49"><expr pos:start="246:43" pos:end="246:49"><name pos:start="246:43" pos:end="246:49">pic_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="248:9" pos:end="250:23"><if pos:start="248:9" pos:end="250:23">if <condition pos:start="248:12" pos:end="248:20">(<expr pos:start="248:13" pos:end="248:19"><name pos:start="248:13" pos:end="248:15">ret</name> <operator pos:start="248:17" pos:end="248:17">&lt;</operator> <literal type="number" pos:start="248:19" pos:end="248:19">0</literal></expr>)</condition><block type="pseudo" pos:start="250:13" pos:end="250:23"><block_content pos:start="250:13" pos:end="250:23">

            <return pos:start="250:13" pos:end="250:23">return <expr pos:start="250:20" pos:end="250:22"><name pos:start="250:20" pos:end="250:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="254:9" pos:end="254:64"><expr pos:start="254:9" pos:end="254:63"><name pos:start="254:9" pos:end="254:38"><name pos:start="254:9" pos:end="254:11">pic</name><operator pos:start="254:12" pos:end="254:13">-&gt;</operator><name pos:start="254:14" pos:end="254:14">f</name><operator pos:start="254:15" pos:end="254:16">-&gt;</operator><name pos:start="254:17" pos:end="254:38">display_picture_number</name></name> <operator pos:start="254:40" pos:end="254:40">=</operator> <name pos:start="254:42" pos:end="254:63">display_picture_number</name></expr>;</expr_stmt>

        <expr_stmt pos:start="256:9" pos:end="256:26"><expr pos:start="256:9" pos:end="256:25"><name pos:start="256:9" pos:end="256:19"><name pos:start="256:9" pos:end="256:11">pic</name><operator pos:start="256:12" pos:end="256:13">-&gt;</operator><name pos:start="256:14" pos:end="256:14">f</name><operator pos:start="256:15" pos:end="256:16">-&gt;</operator><name pos:start="256:17" pos:end="256:19">pts</name></name> <operator pos:start="256:21" pos:end="256:21">=</operator> <name pos:start="256:23" pos:end="256:25">pts</name></expr>;</expr_stmt> <comment type="line" pos:start="256:28" pos:end="256:73">// we set this here to avoid modifying pic_arg</comment>

    </block_content>}</block></if> <else pos:start="258:7" pos:end="280:5">else <block pos:start="258:12" pos:end="280:5">{<block_content pos:start="264:9" pos:end="278:63">

        <comment type="block" pos:start="260:9" pos:end="262:67">/* Flushing: When we have not received enough input frames,

         * ensure s-&gt;input_picture[0] contains the first picture */</comment>

        <for pos:start="264:9" pos:end="268:22">for <control pos:start="264:13" pos:end="264:81">(<init pos:start="264:14" pos:end="264:30"><expr pos:start="264:14" pos:end="264:29"><name pos:start="264:14" pos:end="264:25">flush_offset</name> <operator pos:start="264:27" pos:end="264:27">=</operator> <literal type="number" pos:start="264:29" pos:end="264:29">0</literal></expr>;</init> <condition pos:start="264:32" pos:end="264:65"><expr pos:start="264:32" pos:end="264:64"><name pos:start="264:32" pos:end="264:43">flush_offset</name> <operator pos:start="264:45" pos:end="264:45">&lt;</operator> <name pos:start="264:47" pos:end="264:60">encoding_delay</name> <operator pos:start="264:62" pos:end="264:62">+</operator> <literal type="number" pos:start="264:64" pos:end="264:64">1</literal></expr>;</condition> <incr pos:start="264:67" pos:end="264:80"><expr pos:start="264:67" pos:end="264:80"><name pos:start="264:67" pos:end="264:78">flush_offset</name><operator pos:start="264:79" pos:end="264:80">++</operator></expr></incr>)</control><block type="pseudo" pos:start="266:13" pos:end="268:22"><block_content pos:start="266:13" pos:end="268:22">

            <if_stmt pos:start="266:13" pos:end="268:22"><if pos:start="266:13" pos:end="268:22">if <condition pos:start="266:16" pos:end="266:47">(<expr pos:start="266:17" pos:end="266:46"><name pos:start="266:17" pos:end="266:46"><name pos:start="266:17" pos:end="266:17">s</name><operator pos:start="266:18" pos:end="266:19">-&gt;</operator><name pos:start="266:20" pos:end="266:32">input_picture</name><index pos:start="266:33" pos:end="266:46">[<expr pos:start="266:34" pos:end="266:45"><name pos:start="266:34" pos:end="266:45">flush_offset</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="268:17" pos:end="268:22"><block_content pos:start="268:17" pos:end="268:22">

                <break pos:start="268:17" pos:end="268:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="272:9" pos:end="278:63"><if pos:start="272:9" pos:end="274:29">if <condition pos:start="272:12" pos:end="272:30">(<expr pos:start="272:13" pos:end="272:29"><name pos:start="272:13" pos:end="272:24">flush_offset</name> <operator pos:start="272:26" pos:end="272:27">&lt;=</operator> <literal type="number" pos:start="272:29" pos:end="272:29">1</literal></expr>)</condition><block type="pseudo" pos:start="274:13" pos:end="274:29"><block_content pos:start="274:13" pos:end="274:29">

            <expr_stmt pos:start="274:13" pos:end="274:29"><expr pos:start="274:13" pos:end="274:28"><name pos:start="274:13" pos:end="274:24">flush_offset</name> <operator pos:start="274:26" pos:end="274:26">=</operator> <literal type="number" pos:start="274:28" pos:end="274:28">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="276:9" pos:end="278:63">else<block type="pseudo" pos:start="278:13" pos:end="278:63"><block_content pos:start="278:13" pos:end="278:63">

            <expr_stmt pos:start="278:13" pos:end="278:63"><expr pos:start="278:13" pos:end="278:62"><name pos:start="278:13" pos:end="278:26">encoding_delay</name> <operator pos:start="278:28" pos:end="278:28">=</operator> <name pos:start="278:30" pos:end="278:43">encoding_delay</name> <operator pos:start="278:45" pos:end="278:45">-</operator> <name pos:start="278:47" pos:end="278:58">flush_offset</name> <operator pos:start="278:60" pos:end="278:60">+</operator> <literal type="number" pos:start="278:62" pos:end="278:62">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="284:5" pos:end="284:30">/* shift buffer entries */</comment>

    <for pos:start="286:5" pos:end="288:65">for <control pos:start="286:9" pos:end="286:80">(<init pos:start="286:10" pos:end="286:26"><expr pos:start="286:10" pos:end="286:25"><name pos:start="286:10" pos:end="286:10">i</name> <operator pos:start="286:12" pos:end="286:12">=</operator> <name pos:start="286:14" pos:end="286:25">flush_offset</name></expr>;</init> <condition pos:start="286:28" pos:end="286:75"><expr pos:start="286:28" pos:end="286:48"><name pos:start="286:28" pos:end="286:28">i</name> <operator pos:start="286:30" pos:end="286:30">&lt;</operator> <name pos:start="286:32" pos:end="286:48">MAX_PICTURE_COUNT</name></expr> <comment type="block" pos:start="286:50" pos:end="286:74">/*s-&gt;encoding_delay + 1*/</comment>;</condition> <incr pos:start="286:77" pos:end="286:79"><expr pos:start="286:77" pos:end="286:79"><name pos:start="286:77" pos:end="286:77">i</name><operator pos:start="286:78" pos:end="286:79">++</operator></expr></incr>)</control><block type="pseudo" pos:start="288:9" pos:end="288:65"><block_content pos:start="288:9" pos:end="288:65">

        <expr_stmt pos:start="288:9" pos:end="288:65"><expr pos:start="288:9" pos:end="288:64"><name pos:start="288:9" pos:end="288:42"><name pos:start="288:9" pos:end="288:9">s</name><operator pos:start="288:10" pos:end="288:11">-&gt;</operator><name pos:start="288:12" pos:end="288:24">input_picture</name><index pos:start="288:25" pos:end="288:42">[<expr pos:start="288:26" pos:end="288:41"><name pos:start="288:26" pos:end="288:26">i</name> <operator pos:start="288:28" pos:end="288:28">-</operator> <name pos:start="288:30" pos:end="288:41">flush_offset</name></expr>]</index></name> <operator pos:start="288:44" pos:end="288:44">=</operator> <name pos:start="288:46" pos:end="288:64"><name pos:start="288:46" pos:end="288:46">s</name><operator pos:start="288:47" pos:end="288:48">-&gt;</operator><name pos:start="288:49" pos:end="288:61">input_picture</name><index pos:start="288:62" pos:end="288:64">[<expr pos:start="288:63" pos:end="288:63"><name pos:start="288:63" pos:end="288:63">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="292:5" pos:end="292:54"><expr pos:start="292:5" pos:end="292:53"><name pos:start="292:5" pos:end="292:36"><name pos:start="292:5" pos:end="292:5">s</name><operator pos:start="292:6" pos:end="292:7">-&gt;</operator><name pos:start="292:8" pos:end="292:20">input_picture</name><index pos:start="292:21" pos:end="292:36">[<expr pos:start="292:22" pos:end="292:35"><name pos:start="292:22" pos:end="292:35">encoding_delay</name></expr>]</index></name> <operator pos:start="292:38" pos:end="292:38">=</operator> <operator pos:start="292:40" pos:end="292:40">(</operator><name pos:start="292:41" pos:end="292:47">Picture</name><operator pos:start="292:48" pos:end="292:48">*</operator><operator pos:start="292:49" pos:end="292:49">)</operator> <name pos:start="292:51" pos:end="292:53">pic</name></expr>;</expr_stmt>



    <return pos:start="296:5" pos:end="296:13">return <expr pos:start="296:12" pos:end="296:12"><literal type="number" pos:start="296:12" pos:end="296:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
