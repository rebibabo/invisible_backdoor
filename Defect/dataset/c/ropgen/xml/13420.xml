<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13420.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">pci_cirrus_vga_init</name><parameter_list pos:start="1:25" pos:end="3:72">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:31">PCIBus</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">bus</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:50">DisplayState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">ds</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:77">vga_ram_base</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:53"><decl pos:start="3:26" pos:end="3:53"><type pos:start="3:26" pos:end="3:53"><name pos:start="3:26" pos:end="3:33">unsigned</name> <name pos:start="3:35" pos:end="3:38">long</name></type> <name pos:start="3:40" pos:end="3:53">vga_ram_offset</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:71"><decl pos:start="3:56" pos:end="3:71"><type pos:start="3:56" pos:end="3:71"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:71">vga_ram_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="89:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">PCICirrusVGAState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">pci_conf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">CirrusVGAState</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">device_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:13">device_id</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:34">CIRRUS_ID_CLGD5446</name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:43">/* setup PCI configuration registers */</comment>

    <expr_stmt pos:start="23:5" pos:end="27:65"><expr pos:start="23:5" pos:end="27:64"><name pos:start="23:5" pos:end="23:5">d</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:26">PCICirrusVGAState</name> <operator pos:start="23:28" pos:end="23:28">*</operator><operator pos:start="23:29" pos:end="23:29">)</operator><call pos:start="23:30" pos:end="27:64"><name pos:start="23:30" pos:end="23:48">pci_register_device</name><argument_list pos:start="23:49" pos:end="27:64">(<argument pos:start="23:50" pos:end="23:52"><expr pos:start="23:50" pos:end="23:52"><name pos:start="23:50" pos:end="23:52">bus</name></expr></argument>, <argument pos:start="23:55" pos:end="23:66"><expr pos:start="23:55" pos:end="23:66"><literal type="string" pos:start="23:55" pos:end="23:66">"Cirrus VGA"</literal></expr></argument>,

                                                 <argument pos:start="25:50" pos:end="25:74"><expr pos:start="25:50" pos:end="25:74"><sizeof pos:start="25:50" pos:end="25:74">sizeof<argument_list pos:start="25:56" pos:end="25:74">(<argument pos:start="25:57" pos:end="25:73"><expr pos:start="25:57" pos:end="25:73"><name pos:start="25:57" pos:end="25:73">PCICirrusVGAState</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                                 <argument pos:start="27:50" pos:end="27:51"><expr pos:start="27:50" pos:end="27:51"><operator pos:start="27:50" pos:end="27:50">-</operator><literal type="number" pos:start="27:51" pos:end="27:51">1</literal></expr></argument>, <argument pos:start="27:54" pos:end="27:57"><expr pos:start="27:54" pos:end="27:57"><name pos:start="27:54" pos:end="27:57">NULL</name></expr></argument>, <argument pos:start="27:60" pos:end="27:63"><expr pos:start="27:60" pos:end="27:63"><name pos:start="27:60" pos:end="27:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:12">pci_conf</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:16">d</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:21">dev</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:28">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:12">pci_conf</name><index pos:start="31:13" pos:end="31:18">[<expr pos:start="31:14" pos:end="31:17"><literal type="number" pos:start="31:14" pos:end="31:17">0x00</literal></expr>]</index></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:29">uint8_t</name><operator pos:start="31:30" pos:end="31:30">)</operator> <operator pos:start="31:32" pos:end="31:32">(</operator><name pos:start="31:33" pos:end="31:49">PCI_VENDOR_CIRRUS</name> <operator pos:start="31:51" pos:end="31:51">&amp;</operator> <literal type="number" pos:start="31:53" pos:end="31:56">0xff</literal><operator pos:start="31:57" pos:end="31:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12">pci_conf</name><index pos:start="33:13" pos:end="33:18">[<expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0x01</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <operator pos:start="33:22" pos:end="33:22">(</operator><name pos:start="33:23" pos:end="33:29">uint8_t</name><operator pos:start="33:30" pos:end="33:30">)</operator> <operator pos:start="33:32" pos:end="33:32">(</operator><name pos:start="33:33" pos:end="33:49">PCI_VENDOR_CIRRUS</name> <operator pos:start="33:51" pos:end="33:52">&gt;&gt;</operator> <literal type="number" pos:start="33:54" pos:end="33:54">8</literal><operator pos:start="33:55" pos:end="33:55">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:12">pci_conf</name><index pos:start="35:13" pos:end="35:18">[<expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0x02</literal></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">(</operator><name pos:start="35:23" pos:end="35:29">uint8_t</name><operator pos:start="35:30" pos:end="35:30">)</operator> <operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:41">device_id</name> <operator pos:start="35:43" pos:end="35:43">&amp;</operator> <literal type="number" pos:start="35:45" pos:end="35:48">0xff</literal><operator pos:start="35:49" pos:end="35:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:48"><expr pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:12">pci_conf</name><index pos:start="37:13" pos:end="37:18">[<expr pos:start="37:14" pos:end="37:17"><literal type="number" pos:start="37:14" pos:end="37:17">0x03</literal></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <operator pos:start="37:22" pos:end="37:22">(</operator><name pos:start="37:23" pos:end="37:29">uint8_t</name><operator pos:start="37:30" pos:end="37:30">)</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:41">device_id</name> <operator pos:start="37:43" pos:end="37:44">&gt;&gt;</operator> <literal type="number" pos:start="37:46" pos:end="37:46">8</literal><operator pos:start="37:47" pos:end="37:47">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:66"><expr pos:start="39:5" pos:end="39:65"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:12">pci_conf</name><index pos:start="39:13" pos:end="39:18">[<expr pos:start="39:14" pos:end="39:17"><literal type="number" pos:start="39:14" pos:end="39:17">0x04</literal></expr>]</index></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:41">PCI_COMMAND_IOACCESS</name> <operator pos:start="39:43" pos:end="39:43">|</operator> <name pos:start="39:45" pos:end="39:65">PCI_COMMAND_MEMACCESS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:12">pci_conf</name><index pos:start="41:13" pos:end="41:18">[<expr pos:start="41:14" pos:end="41:17"><literal type="number" pos:start="41:14" pos:end="41:17">0x0a</literal></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:38">PCI_CLASS_SUB_VGA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:12">pci_conf</name><index pos:start="43:13" pos:end="43:18">[<expr pos:start="43:14" pos:end="43:17"><literal type="number" pos:start="43:14" pos:end="43:17">0x0b</literal></expr>]</index></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:43">PCI_CLASS_BASE_DISPLAY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:12">pci_conf</name><index pos:start="45:13" pos:end="45:18">[<expr pos:start="45:14" pos:end="45:17"><literal type="number" pos:start="45:14" pos:end="45:17">0x0e</literal></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:45">PCI_CLASS_HEADERTYPE_00h</name></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:19">/* setup VGA */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:23"><expr pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:5">s</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <operator pos:start="51:9" pos:end="51:9">&amp;</operator><name pos:start="51:10" pos:end="51:22"><name pos:start="51:10" pos:end="51:10">d</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:22">cirrus_vga</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:68"><expr pos:start="53:5" pos:end="55:67"><call pos:start="53:5" pos:end="55:67"><name pos:start="53:5" pos:end="53:19">vga_common_init</name><argument_list pos:start="53:20" pos:end="55:67">(<argument pos:start="53:21" pos:end="53:33"><expr pos:start="53:21" pos:end="53:33"><operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:29">VGAState</name> <operator pos:start="53:31" pos:end="53:31">*</operator><operator pos:start="53:32" pos:end="53:32">)</operator><name pos:start="53:33" pos:end="53:33">s</name></expr></argument>,

                    <argument pos:start="55:21" pos:end="55:22"><expr pos:start="55:21" pos:end="55:22"><name pos:start="55:21" pos:end="55:22">ds</name></expr></argument>, <argument pos:start="55:25" pos:end="55:36"><expr pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:36">vga_ram_base</name></expr></argument>, <argument pos:start="55:39" pos:end="55:52"><expr pos:start="55:39" pos:end="55:52"><name pos:start="55:39" pos:end="55:52">vga_ram_offset</name></expr></argument>, <argument pos:start="55:55" pos:end="55:66"><expr pos:start="55:55" pos:end="55:66"><name pos:start="55:55" pos:end="55:66">vga_ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><call pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:22">cirrus_init_common</name><argument_list pos:start="57:23" pos:end="57:39">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">s</name></expr></argument>, <argument pos:start="57:27" pos:end="57:35"><expr pos:start="57:27" pos:end="57:35"><name pos:start="57:27" pos:end="57:35">device_id</name></expr></argument>, <argument pos:start="57:38" pos:end="57:38"><expr pos:start="57:38" pos:end="57:38"><literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:73"><expr pos:start="61:5" pos:end="63:72"><name pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:14">console</name></name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="63:72"><name pos:start="61:18" pos:end="61:37">graphic_console_init</name><argument_list pos:start="61:38" pos:end="63:72">(<argument pos:start="61:39" pos:end="61:43"><expr pos:start="61:39" pos:end="61:43"><name pos:start="61:39" pos:end="61:43"><name pos:start="61:39" pos:end="61:39">s</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:43">ds</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:54"><expr pos:start="61:46" pos:end="61:54"><name pos:start="61:46" pos:end="61:54"><name pos:start="61:46" pos:end="61:46">s</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:54">update</name></name></expr></argument>, <argument pos:start="61:57" pos:end="61:69"><expr pos:start="61:57" pos:end="61:69"><name pos:start="61:57" pos:end="61:69"><name pos:start="61:57" pos:end="61:57">s</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:69">invalidate</name></name></expr></argument>,

                                      <argument pos:start="63:39" pos:end="63:52"><expr pos:start="63:39" pos:end="63:52"><name pos:start="63:39" pos:end="63:52"><name pos:start="63:39" pos:end="63:39">s</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:52">screen_dump</name></name></expr></argument>, <argument pos:start="63:55" pos:end="63:68"><expr pos:start="63:55" pos:end="63:68"><name pos:start="63:55" pos:end="63:68"><name pos:start="63:55" pos:end="63:55">s</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:68">text_update</name></name></expr></argument>, <argument pos:start="63:71" pos:end="63:71"><expr pos:start="63:71" pos:end="63:71"><name pos:start="63:71" pos:end="63:71">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:32"><expr pos:start="67:5" pos:end="67:31"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:14">pci_dev</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:27">PCIDevice</name> <operator pos:start="67:29" pos:end="67:29">*</operator><operator pos:start="67:30" pos:end="67:30">)</operator><name pos:start="67:31" pos:end="67:31">d</name></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:28">/* setup memory space */</comment>

    <comment type="block" pos:start="73:5" pos:end="73:23">/* memory #0 LFB */</comment>

    <comment type="block" pos:start="75:5" pos:end="75:37">/* memory #1 memory-mapped I/O */</comment>

    <comment type="block" pos:start="77:5" pos:end="77:50">/* XXX: s-&gt;vram_size must be a power of two */</comment>

    <expr_stmt pos:start="79:5" pos:end="81:79"><expr pos:start="79:5" pos:end="81:78"><call pos:start="79:5" pos:end="81:78"><name pos:start="79:5" pos:end="79:26">pci_register_io_region</name><argument_list pos:start="79:27" pos:end="81:78">(<argument pos:start="79:28" pos:end="79:41"><expr pos:start="79:28" pos:end="79:41"><operator pos:start="79:28" pos:end="79:28">(</operator><name pos:start="79:29" pos:end="79:37">PCIDevice</name> <operator pos:start="79:39" pos:end="79:39">*</operator><operator pos:start="79:40" pos:end="79:40">)</operator><name pos:start="79:41" pos:end="79:41">d</name></expr></argument>, <argument pos:start="79:44" pos:end="79:44"><expr pos:start="79:44" pos:end="79:44"><literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr></argument>, <argument pos:start="79:47" pos:end="79:55"><expr pos:start="79:47" pos:end="79:55"><literal type="number" pos:start="79:47" pos:end="79:55">0x2000000</literal></expr></argument>,

			   <argument pos:start="81:28" pos:end="81:57"><expr pos:start="81:28" pos:end="81:57"><name pos:start="81:28" pos:end="81:57">PCI_ADDRESS_SPACE_MEM_PREFETCH</name></expr></argument>, <argument pos:start="81:60" pos:end="81:77"><expr pos:start="81:60" pos:end="81:77"><name pos:start="81:60" pos:end="81:77">cirrus_pci_lfb_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:40">(<expr pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:17">device_id</name> <operator pos:start="83:19" pos:end="83:20">==</operator> <name pos:start="83:22" pos:end="83:39">CIRRUS_ID_CLGD5446</name></expr>)</condition> <block pos:start="83:42" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:75">

        <expr_stmt pos:start="85:9" pos:end="87:75"><expr pos:start="85:9" pos:end="87:74"><call pos:start="85:9" pos:end="87:74"><name pos:start="85:9" pos:end="85:30">pci_register_io_region</name><argument_list pos:start="85:31" pos:end="87:74">(<argument pos:start="85:32" pos:end="85:45"><expr pos:start="85:32" pos:end="85:45"><operator pos:start="85:32" pos:end="85:32">(</operator><name pos:start="85:33" pos:end="85:41">PCIDevice</name> <operator pos:start="85:43" pos:end="85:43">*</operator><operator pos:start="85:44" pos:end="85:44">)</operator><name pos:start="85:45" pos:end="85:45">d</name></expr></argument>, <argument pos:start="85:48" pos:end="85:48"><expr pos:start="85:48" pos:end="85:48"><literal type="number" pos:start="85:48" pos:end="85:48">1</literal></expr></argument>, <argument pos:start="85:51" pos:end="85:69"><expr pos:start="85:51" pos:end="85:69"><name pos:start="85:51" pos:end="85:69">CIRRUS_PNPMMIO_SIZE</name></expr></argument>,

                               <argument pos:start="87:32" pos:end="87:52"><expr pos:start="87:32" pos:end="87:52"><name pos:start="87:32" pos:end="87:52">PCI_ADDRESS_SPACE_MEM</name></expr></argument>, <argument pos:start="87:55" pos:end="87:73"><expr pos:start="87:55" pos:end="87:73"><name pos:start="87:55" pos:end="87:73">cirrus_pci_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="91:5" pos:end="91:23">/* XXX: ROM BIOS */</comment>

</block_content>}</block></function>
</unit>
