<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6943.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">sonic_encode_frame</name><parameter_list pos:start="1:30" pos:end="3:72">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">avpkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:50"><decl pos:start="3:31" pos:end="3:50"><type pos:start="3:31" pos:end="3:50"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">AVFrame</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:50">frame</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:71"><decl pos:start="3:53" pos:end="3:71"><type pos:start="3:53" pos:end="3:71"><name pos:start="3:53" pos:end="3:55">int</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:71">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="253:1">{<block_content pos:start="7:5" pos:end="249:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">SonicContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">RangeCoder</name></type> <name pos:start="9:16" pos:end="9:16">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:16">ch</name></decl>, <decl pos:start="11:19" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:23">quant</name> <init pos:start="11:25" pos:end="11:27">= <expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></init></decl>, <decl pos:start="11:30" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:30">x</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:57"><type pos:start="15:5" pos:end="15:17"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">short</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:24">samples</name> <init pos:start="15:26" pos:end="15:57">= <expr pos:start="15:28" pos:end="15:57"><operator pos:start="15:28" pos:end="15:28">(</operator><specifier pos:start="15:29" pos:end="15:33">const</specifier> <name pos:start="15:35" pos:end="15:41">int16_t</name><operator pos:start="15:42" pos:end="15:42">*</operator><operator pos:start="15:43" pos:end="15:43">)</operator><name pos:start="15:44" pos:end="15:57"><name pos:start="15:44" pos:end="15:48">frame</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:54">data</name><index pos:start="15:55" pos:end="15:57">[<expr pos:start="15:56" pos:end="15:56"><literal type="number" pos:start="15:56" pos:end="15:56">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:17">state</name><index pos:start="17:18" pos:end="17:21">[<expr pos:start="17:19" pos:end="17:20"><literal type="number" pos:start="17:19" pos:end="17:20">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:77">(<expr pos:start="21:9" pos:end="21:76"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:71"><name pos:start="21:16" pos:end="21:31">ff_alloc_packet2</name><argument_list pos:start="21:32" pos:end="21:71">(<argument pos:start="21:33" pos:end="21:37"><expr pos:start="21:33" pos:end="21:37"><name pos:start="21:33" pos:end="21:37">avctx</name></expr></argument>, <argument pos:start="21:40" pos:end="21:44"><expr pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:44">avpkt</name></expr></argument>, <argument pos:start="21:47" pos:end="21:70"><expr pos:start="21:47" pos:end="21:70"><name pos:start="21:47" pos:end="21:59"><name pos:start="21:47" pos:end="21:47">s</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:59">frame_size</name></name> <operator pos:start="21:61" pos:end="21:61">*</operator> <literal type="number" pos:start="21:63" pos:end="21:65">5</literal> <operator pos:start="21:65" pos:end="21:65">+</operator> <literal type="number" pos:start="21:67" pos:end="21:70">1000</literal></expr></argument>)</argument_list></call><operator pos:start="21:72" pos:end="21:72">)</operator> <operator pos:start="21:74" pos:end="21:74">&lt;</operator> <literal type="number" pos:start="21:76" pos:end="21:76">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><call pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:25">ff_init_range_encoder</name><argument_list pos:start="27:26" pos:end="27:55">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:28">c</name></expr></argument>, <argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:35">avpkt</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:41">data</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:54"><expr pos:start="27:44" pos:end="27:54"><name pos:start="27:44" pos:end="27:54"><name pos:start="27:44" pos:end="27:48">avpkt</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><call pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:23">ff_build_rac_states</name><argument_list pos:start="29:24" pos:end="29:50">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:26">c</name></expr></argument>, <argument pos:start="29:29" pos:end="29:42"><expr pos:start="29:29" pos:end="29:42"><literal type="number" pos:start="29:29" pos:end="29:32">0.05</literal><operator pos:start="29:33" pos:end="29:33">*</operator><operator pos:start="29:34" pos:end="29:34">(</operator><literal type="number" pos:start="29:35" pos:end="29:37">1LL</literal><operator pos:start="29:38" pos:end="29:39">&lt;&lt;</operator><literal type="number" pos:start="29:40" pos:end="29:41">32</literal><operator pos:start="29:42" pos:end="29:42">)</operator></expr></argument>, <argument pos:start="29:45" pos:end="29:49"><expr pos:start="29:45" pos:end="29:49"><literal type="number" pos:start="29:45" pos:end="29:48">256</literal><operator pos:start="29:48" pos:end="29:48">-</operator><literal type="number" pos:start="29:49" pos:end="29:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><call pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:37">(<argument pos:start="31:12" pos:end="31:16"><expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16">state</name></expr></argument>, <argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><literal type="number" pos:start="31:19" pos:end="31:21">128</literal></expr></argument>, <argument pos:start="31:24" pos:end="31:36"><expr pos:start="31:24" pos:end="31:36"><sizeof pos:start="31:24" pos:end="31:36">sizeof<argument_list pos:start="31:30" pos:end="31:36">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:24">// short -&gt; internal</comment>

    <for pos:start="37:5" pos:end="39:39">for <control pos:start="37:9" pos:end="37:39">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:33">frame_size</name></name></expr>;</condition> <incr pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:36">i</name><operator pos:start="37:37" pos:end="37:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:9" pos:end="39:39"><block_content pos:start="39:9" pos:end="39:39">

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:22">int_samples</name><index pos:start="39:23" pos:end="39:25">[<expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">i</name></expr>]</index></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:38"><name pos:start="39:29" pos:end="39:35">samples</name><index pos:start="39:36" pos:end="39:38">[<expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="43:5" pos:end="47:66"><if pos:start="43:5" pos:end="47:66">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:20"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">lossless</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="47:66"><block_content pos:start="45:9" pos:end="47:66">

        <for pos:start="45:9" pos:end="47:66">for <control pos:start="45:13" pos:end="45:43">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:38"><expr pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:37">frame_size</name></name></expr>;</condition> <incr pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:40">i</name><operator pos:start="45:41" pos:end="45:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="47:66"><block_content pos:start="47:13" pos:end="47:66">

            <expr_stmt pos:start="47:13" pos:end="47:66"><expr pos:start="47:13" pos:end="47:65"><name pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:26">int_samples</name><index pos:start="47:27" pos:end="47:29">[<expr pos:start="47:28" pos:end="47:28"><name pos:start="47:28" pos:end="47:28">i</name></expr>]</index></name> <operator pos:start="47:31" pos:end="47:31">=</operator> <name pos:start="47:33" pos:end="47:49"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:46">int_samples</name><index pos:start="47:47" pos:end="47:49">[<expr pos:start="47:48" pos:end="47:48"><name pos:start="47:48" pos:end="47:48">i</name></expr>]</index></name> <operator pos:start="47:51" pos:end="47:52">&lt;&lt;</operator> <name pos:start="47:54" pos:end="47:65">SAMPLE_SHIFT</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <switch pos:start="51:5" pos:end="85:5">switch<condition pos:start="51:11" pos:end="51:28">(<expr pos:start="51:12" pos:end="51:27"><name pos:start="51:12" pos:end="51:27"><name pos:start="51:12" pos:end="51:12">s</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:27">decorrelation</name></name></expr>)</condition>

    <block pos:start="53:5" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:18">

        <case pos:start="55:9" pos:end="55:22">case <expr pos:start="55:14" pos:end="55:21"><name pos:start="55:14" pos:end="55:21">MID_SIDE</name></expr>:</case>

            <for pos:start="57:13" pos:end="65:13">for <control pos:start="57:17" pos:end="57:60">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">i</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:42"><expr pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:25">i</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:41"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:41">frame_size</name></name></expr>;</condition> <incr pos:start="57:44" pos:end="57:59"><expr pos:start="57:44" pos:end="57:59"><name pos:start="57:44" pos:end="57:44">i</name> <operator pos:start="57:46" pos:end="57:47">+=</operator> <name pos:start="57:49" pos:end="57:59"><name pos:start="57:49" pos:end="57:49">s</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:59">channels</name></name></expr></incr>)</control>

            <block pos:start="59:13" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:67">

                <expr_stmt pos:start="61:17" pos:end="61:57"><expr pos:start="61:17" pos:end="61:56"><name pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:30">int_samples</name><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">i</name></expr>]</index></name> <operator pos:start="61:35" pos:end="61:36">+=</operator> <name pos:start="61:38" pos:end="61:56"><name pos:start="61:38" pos:end="61:38">s</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:51">int_samples</name><index pos:start="61:52" pos:end="61:56">[<expr pos:start="61:53" pos:end="61:55"><name pos:start="61:53" pos:end="61:53">i</name><operator pos:start="61:54" pos:end="61:54">+</operator><literal type="number" pos:start="61:55" pos:end="61:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:67"><expr pos:start="63:17" pos:end="63:66"><name pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:30">int_samples</name><index pos:start="63:31" pos:end="63:35">[<expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:32">i</name><operator pos:start="63:33" pos:end="63:33">+</operator><literal type="number" pos:start="63:34" pos:end="63:34">1</literal></expr>]</index></name> <operator pos:start="63:37" pos:end="63:38">-=</operator> <call pos:start="63:40" pos:end="63:66"><name pos:start="63:40" pos:end="63:44">shift</name><argument_list pos:start="63:45" pos:end="63:66">(<argument pos:start="63:46" pos:end="63:62"><expr pos:start="63:46" pos:end="63:62"><name pos:start="63:46" pos:end="63:62"><name pos:start="63:46" pos:end="63:46">s</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:59">int_samples</name><index pos:start="63:60" pos:end="63:62">[<expr pos:start="63:61" pos:end="63:61"><name pos:start="63:61" pos:end="63:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="63:65" pos:end="63:65"><expr pos:start="63:65" pos:end="63:65"><literal type="number" pos:start="63:65" pos:end="63:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:23">case <expr pos:start="69:14" pos:end="69:22"><name pos:start="69:14" pos:end="69:22">LEFT_SIDE</name></expr>:</case>

            <for pos:start="71:13" pos:end="73:57">for <control pos:start="71:17" pos:end="71:60">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">i</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:42"><expr pos:start="71:25" pos:end="71:41"><name pos:start="71:25" pos:end="71:25">i</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <name pos:start="71:29" pos:end="71:41"><name pos:start="71:29" pos:end="71:29">s</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:41">frame_size</name></name></expr>;</condition> <incr pos:start="71:44" pos:end="71:59"><expr pos:start="71:44" pos:end="71:59"><name pos:start="71:44" pos:end="71:44">i</name> <operator pos:start="71:46" pos:end="71:47">+=</operator> <name pos:start="71:49" pos:end="71:59"><name pos:start="71:49" pos:end="71:49">s</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:59">channels</name></name></expr></incr>)</control><block type="pseudo" pos:start="73:17" pos:end="73:57"><block_content pos:start="73:17" pos:end="73:57">

                <expr_stmt pos:start="73:17" pos:end="73:57"><expr pos:start="73:17" pos:end="73:56"><name pos:start="73:17" pos:end="73:35"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:30">int_samples</name><index pos:start="73:31" pos:end="73:35">[<expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:32">i</name><operator pos:start="73:33" pos:end="73:33">+</operator><literal type="number" pos:start="73:34" pos:end="73:34">1</literal></expr>]</index></name> <operator pos:start="73:37" pos:end="73:38">-=</operator> <name pos:start="73:40" pos:end="73:56"><name pos:start="73:40" pos:end="73:40">s</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:53">int_samples</name><index pos:start="73:54" pos:end="73:56">[<expr pos:start="73:55" pos:end="73:55"><name pos:start="73:55" pos:end="73:55">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:24">case <expr pos:start="77:14" pos:end="77:23"><name pos:start="77:14" pos:end="77:23">RIGHT_SIDE</name></expr>:</case>

            <for pos:start="79:13" pos:end="81:57">for <control pos:start="79:17" pos:end="79:60">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">i</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:42"><expr pos:start="79:25" pos:end="79:41"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:41"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:41">frame_size</name></name></expr>;</condition> <incr pos:start="79:44" pos:end="79:59"><expr pos:start="79:44" pos:end="79:59"><name pos:start="79:44" pos:end="79:44">i</name> <operator pos:start="79:46" pos:end="79:47">+=</operator> <name pos:start="79:49" pos:end="79:59"><name pos:start="79:49" pos:end="79:49">s</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:59">channels</name></name></expr></incr>)</control><block type="pseudo" pos:start="81:17" pos:end="81:57"><block_content pos:start="81:17" pos:end="81:57">

                <expr_stmt pos:start="81:17" pos:end="81:57"><expr pos:start="81:17" pos:end="81:56"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:30">int_samples</name><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">i</name></expr>]</index></name> <operator pos:start="81:35" pos:end="81:36">-=</operator> <name pos:start="81:38" pos:end="81:56"><name pos:start="81:38" pos:end="81:38">s</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:51">int_samples</name><index pos:start="81:52" pos:end="81:56">[<expr pos:start="81:53" pos:end="81:55"><name pos:start="81:53" pos:end="81:53">i</name><operator pos:start="81:54" pos:end="81:54">+</operator><literal type="number" pos:start="81:55" pos:end="81:55">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <break pos:start="83:13" pos:end="83:18">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="89:5" pos:end="89:44"><expr pos:start="89:5" pos:end="89:43"><call pos:start="89:5" pos:end="89:43"><name pos:start="89:5" pos:end="89:10">memset</name><argument_list pos:start="89:11" pos:end="89:43">(<argument pos:start="89:12" pos:end="89:20"><expr pos:start="89:12" pos:end="89:20"><name pos:start="89:12" pos:end="89:20"><name pos:start="89:12" pos:end="89:12">s</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:20">window</name></name></expr></argument>, <argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr></argument>, <argument pos:start="89:26" pos:end="89:42"><expr pos:start="89:26" pos:end="89:42"><literal type="number" pos:start="89:26" pos:end="89:26">4</literal><operator pos:start="89:27" pos:end="89:27">*</operator> <name pos:start="89:29" pos:end="89:42"><name pos:start="89:29" pos:end="89:29">s</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:42">window_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="93:5" pos:end="95:36">for <control pos:start="93:9" pos:end="93:38">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:33"><expr pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:21">s</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:32">tail_size</name></name></expr>;</condition> <incr pos:start="93:35" pos:end="93:37"><expr pos:start="93:35" pos:end="93:37"><name pos:start="93:35" pos:end="93:35">i</name><operator pos:start="93:36" pos:end="93:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:9" pos:end="95:36"><block_content pos:start="95:9" pos:end="95:36">

        <expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:17">window</name><index pos:start="95:18" pos:end="95:22">[<expr pos:start="95:19" pos:end="95:21"><name pos:start="95:19" pos:end="95:19">x</name><operator pos:start="95:20" pos:end="95:21">++</operator></expr>]</index></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:35"><name pos:start="95:26" pos:end="95:26">s</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:32">tail</name><index pos:start="95:33" pos:end="95:35">[<expr pos:start="95:34" pos:end="95:34"><name pos:start="95:34" pos:end="95:34">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="99:5" pos:end="101:43">for <control pos:start="99:9" pos:end="99:39">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:34"><expr pos:start="99:17" pos:end="99:33"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <name pos:start="99:21" pos:end="99:33"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:33">frame_size</name></name></expr>;</condition> <incr pos:start="99:36" pos:end="99:38"><expr pos:start="99:36" pos:end="99:38"><name pos:start="99:36" pos:end="99:36">i</name><operator pos:start="99:37" pos:end="99:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:9" pos:end="101:43"><block_content pos:start="101:9" pos:end="101:43">

        <expr_stmt pos:start="101:9" pos:end="101:43"><expr pos:start="101:9" pos:end="101:42"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">window</name><index pos:start="101:18" pos:end="101:22">[<expr pos:start="101:19" pos:end="101:21"><name pos:start="101:19" pos:end="101:19">x</name><operator pos:start="101:20" pos:end="101:21">++</operator></expr>]</index></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:42"><name pos:start="101:26" pos:end="101:26">s</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:39">int_samples</name><index pos:start="101:40" pos:end="101:42">[<expr pos:start="101:41" pos:end="101:41"><name pos:start="101:41" pos:end="101:41">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="105:5" pos:end="107:27">for <control pos:start="105:9" pos:end="105:38">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:33"><expr pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <name pos:start="105:21" pos:end="105:32"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:32">tail_size</name></name></expr>;</condition> <incr pos:start="105:35" pos:end="105:37"><expr pos:start="105:35" pos:end="105:37"><name pos:start="105:35" pos:end="105:35">i</name><operator pos:start="105:36" pos:end="105:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:9" pos:end="107:27"><block_content pos:start="107:9" pos:end="107:27">

        <expr_stmt pos:start="107:9" pos:end="107:27"><expr pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:17">window</name><index pos:start="107:18" pos:end="107:22">[<expr pos:start="107:19" pos:end="107:21"><name pos:start="107:19" pos:end="107:19">x</name><operator pos:start="107:20" pos:end="107:21">++</operator></expr>]</index></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <literal type="number" pos:start="107:26" pos:end="107:26">0</literal></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="111:5" pos:end="113:70">for <control pos:start="111:9" pos:end="111:38">(<init pos:start="111:10" pos:end="111:15"><expr pos:start="111:10" pos:end="111:14"><name pos:start="111:10" pos:end="111:10">i</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <literal type="number" pos:start="111:14" pos:end="111:14">0</literal></expr>;</init> <condition pos:start="111:17" pos:end="111:33"><expr pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:17">i</name> <operator pos:start="111:19" pos:end="111:19">&lt;</operator> <name pos:start="111:21" pos:end="111:32"><name pos:start="111:21" pos:end="111:21">s</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:32">tail_size</name></name></expr>;</condition> <incr pos:start="111:35" pos:end="111:37"><expr pos:start="111:35" pos:end="111:37"><name pos:start="111:35" pos:end="111:35">i</name><operator pos:start="111:36" pos:end="111:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:9" pos:end="113:70"><block_content pos:start="113:9" pos:end="113:70">

        <expr_stmt pos:start="113:9" pos:end="113:70"><expr pos:start="113:9" pos:end="113:69"><name pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:15">tail</name><index pos:start="113:16" pos:end="113:18">[<expr pos:start="113:17" pos:end="113:17"><name pos:start="113:17" pos:end="113:17">i</name></expr>]</index></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:69"><name pos:start="113:22" pos:end="113:22">s</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:35">int_samples</name><index pos:start="113:36" pos:end="113:69">[<expr pos:start="113:37" pos:end="113:68"><name pos:start="113:37" pos:end="113:49"><name pos:start="113:37" pos:end="113:37">s</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:49">frame_size</name></name> <operator pos:start="113:51" pos:end="113:51">-</operator> <name pos:start="113:53" pos:end="113:64"><name pos:start="113:53" pos:end="113:53">s</name><operator pos:start="113:54" pos:end="113:55">-&gt;</operator><name pos:start="113:56" pos:end="113:64">tail_size</name></name> <operator pos:start="113:66" pos:end="113:66">+</operator> <name pos:start="113:68" pos:end="113:68">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <comment type="line" pos:start="117:5" pos:end="117:20">// generate taps</comment>

    <expr_stmt pos:start="119:5" pos:end="121:72"><expr pos:start="119:5" pos:end="121:71"><call pos:start="119:5" pos:end="121:71"><name pos:start="119:5" pos:end="119:28">modified_levinson_durbin</name><argument_list pos:start="119:29" pos:end="121:71">(<argument pos:start="119:30" pos:end="119:38"><expr pos:start="119:30" pos:end="119:38"><name pos:start="119:30" pos:end="119:38"><name pos:start="119:30" pos:end="119:30">s</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:38">window</name></name></expr></argument>, <argument pos:start="119:41" pos:end="119:54"><expr pos:start="119:41" pos:end="119:54"><name pos:start="119:41" pos:end="119:54"><name pos:start="119:41" pos:end="119:41">s</name><operator pos:start="119:42" pos:end="119:43">-&gt;</operator><name pos:start="119:44" pos:end="119:54">window_size</name></name></expr></argument>,

                <argument pos:start="121:17" pos:end="121:30"><expr pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:30">predictor_k</name></name></expr></argument>, <argument pos:start="121:33" pos:end="121:43"><expr pos:start="121:33" pos:end="121:43"><name pos:start="121:33" pos:end="121:43"><name pos:start="121:33" pos:end="121:33">s</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:43">num_taps</name></name></expr></argument>, <argument pos:start="121:46" pos:end="121:56"><expr pos:start="121:46" pos:end="121:56"><name pos:start="121:46" pos:end="121:56"><name pos:start="121:46" pos:end="121:46">s</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:56">channels</name></name></expr></argument>, <argument pos:start="121:59" pos:end="121:70"><expr pos:start="121:59" pos:end="121:70"><name pos:start="121:59" pos:end="121:70"><name pos:start="121:59" pos:end="121:59">s</name><operator pos:start="121:60" pos:end="121:61">-&gt;</operator><name pos:start="121:62" pos:end="121:70">tap_quant</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="125:19"><if pos:start="123:5" pos:end="125:19">if <condition pos:start="123:8" pos:end="123:77">(<expr pos:start="123:9" pos:end="123:76"><operator pos:start="123:9" pos:end="123:9">(</operator><name pos:start="123:10" pos:end="123:12">ret</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="123:71"><name pos:start="123:16" pos:end="123:28">intlist_write</name><argument_list pos:start="123:29" pos:end="123:71">(<argument pos:start="123:30" pos:end="123:31"><expr pos:start="123:30" pos:end="123:31"><operator pos:start="123:30" pos:end="123:30">&amp;</operator><name pos:start="123:31" pos:end="123:31">c</name></expr></argument>, <argument pos:start="123:34" pos:end="123:38"><expr pos:start="123:34" pos:end="123:38"><name pos:start="123:34" pos:end="123:38">state</name></expr></argument>, <argument pos:start="123:41" pos:end="123:54"><expr pos:start="123:41" pos:end="123:54"><name pos:start="123:41" pos:end="123:54"><name pos:start="123:41" pos:end="123:41">s</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:54">predictor_k</name></name></expr></argument>, <argument pos:start="123:57" pos:end="123:67"><expr pos:start="123:57" pos:end="123:67"><name pos:start="123:57" pos:end="123:67"><name pos:start="123:57" pos:end="123:57">s</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:67">num_taps</name></name></expr></argument>, <argument pos:start="123:70" pos:end="123:70"><expr pos:start="123:70" pos:end="123:70"><literal type="number" pos:start="123:70" pos:end="123:70">0</literal></expr></argument>)</argument_list></call><operator pos:start="123:72" pos:end="123:72">)</operator> <operator pos:start="123:74" pos:end="123:74">&lt;</operator> <literal type="number" pos:start="123:76" pos:end="123:76">0</literal></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:19"><block_content pos:start="125:9" pos:end="125:19">

        <return pos:start="125:9" pos:end="125:19">return <expr pos:start="125:16" pos:end="125:18"><name pos:start="125:16" pos:end="125:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="129:5" pos:end="149:5">for <control pos:start="129:9" pos:end="129:40">(<init pos:start="129:10" pos:end="129:16"><expr pos:start="129:10" pos:end="129:15"><name pos:start="129:10" pos:end="129:11">ch</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>;</init> <condition pos:start="129:18" pos:end="129:34"><expr pos:start="129:18" pos:end="129:33"><name pos:start="129:18" pos:end="129:19">ch</name> <operator pos:start="129:21" pos:end="129:21">&lt;</operator> <name pos:start="129:23" pos:end="129:33"><name pos:start="129:23" pos:end="129:23">s</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:33">channels</name></name></expr>;</condition> <incr pos:start="129:36" pos:end="129:39"><expr pos:start="129:36" pos:end="129:39"><name pos:start="129:36" pos:end="129:37">ch</name><operator pos:start="129:38" pos:end="129:39">++</operator></expr></incr>)</control>

    <block pos:start="131:5" pos:end="149:5">{<block_content pos:start="133:9" pos:end="147:9">

        <expr_stmt pos:start="133:9" pos:end="133:28"><expr pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:9">x</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <name pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:24">tail_size</name></name><operator pos:start="133:25" pos:end="133:25">+</operator><name pos:start="133:26" pos:end="133:27">ch</name></expr>;</expr_stmt>

        <for pos:start="135:9" pos:end="147:9">for <control pos:start="135:13" pos:end="135:44">(<init pos:start="135:14" pos:end="135:19"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:14">i</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</init> <condition pos:start="135:21" pos:end="135:39"><expr pos:start="135:21" pos:end="135:38"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <name pos:start="135:25" pos:end="135:38"><name pos:start="135:25" pos:end="135:25">s</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:38">block_align</name></name></expr>;</condition> <incr pos:start="135:41" pos:end="135:43"><expr pos:start="135:41" pos:end="135:43"><name pos:start="135:41" pos:end="135:41">i</name><operator pos:start="135:42" pos:end="135:43">++</operator></expr></incr>)</control>

        <block pos:start="137:9" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:42">

            <decl_stmt pos:start="139:13" pos:end="139:24"><decl pos:start="139:13" pos:end="139:23"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:19">sum</name> <init pos:start="139:21" pos:end="139:23">= <expr pos:start="139:23" pos:end="139:23"><literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="141:13" pos:end="143:36">for <control pos:start="141:17" pos:end="141:67">(<init pos:start="141:18" pos:end="141:23"><expr pos:start="141:18" pos:end="141:22"><name pos:start="141:18" pos:end="141:18">j</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>;</init> <condition pos:start="141:25" pos:end="141:44"><expr pos:start="141:25" pos:end="141:43"><name pos:start="141:25" pos:end="141:25">j</name> <operator pos:start="141:27" pos:end="141:27">&lt;</operator> <name pos:start="141:29" pos:end="141:43"><name pos:start="141:29" pos:end="141:29">s</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:43">downsampling</name></name></expr>;</condition> <incr pos:start="141:46" pos:end="141:66"><expr pos:start="141:46" pos:end="141:48"><name pos:start="141:46" pos:end="141:46">j</name><operator pos:start="141:47" pos:end="141:48">++</operator></expr><operator pos:start="141:49" pos:end="141:49">,</operator> <expr pos:start="141:51" pos:end="141:66"><name pos:start="141:51" pos:end="141:51">x</name> <operator pos:start="141:53" pos:end="141:54">+=</operator> <name pos:start="141:56" pos:end="141:66"><name pos:start="141:56" pos:end="141:56">s</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:66">channels</name></name></expr></incr>)</control><block type="pseudo" pos:start="143:17" pos:end="143:36"><block_content pos:start="143:17" pos:end="143:36">

                <expr_stmt pos:start="143:17" pos:end="143:36"><expr pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:19">sum</name> <operator pos:start="143:21" pos:end="143:22">+=</operator> <name pos:start="143:24" pos:end="143:35"><name pos:start="143:24" pos:end="143:24">s</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:32">window</name><index pos:start="143:33" pos:end="143:35">[<expr pos:start="143:34" pos:end="143:34"><name pos:start="143:34" pos:end="143:34">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="145:13" pos:end="145:42"><expr pos:start="145:13" pos:end="145:41"><name pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:28">coded_samples</name><index pos:start="145:29" pos:end="145:32">[<expr pos:start="145:30" pos:end="145:31"><name pos:start="145:30" pos:end="145:31">ch</name></expr>]</index><index pos:start="145:33" pos:end="145:35">[<expr pos:start="145:34" pos:end="145:34"><name pos:start="145:34" pos:end="145:34">i</name></expr>]</index></name> <operator pos:start="145:37" pos:end="145:37">=</operator> <name pos:start="145:39" pos:end="145:41">sum</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="line" pos:start="153:5" pos:end="153:31">// simple rate control code</comment>

    <if_stmt pos:start="155:5" pos:end="215:5"><if pos:start="155:5" pos:end="215:5">if <condition pos:start="155:8" pos:end="155:21">(<expr pos:start="155:9" pos:end="155:20"><operator pos:start="155:9" pos:end="155:9">!</operator><name pos:start="155:10" pos:end="155:20"><name pos:start="155:10" pos:end="155:10">s</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:20">lossless</name></name></expr>)</condition>

    <block pos:start="157:5" pos:end="215:5">{<block_content pos:start="159:9" pos:end="213:31">

        <decl_stmt pos:start="159:9" pos:end="159:44"><decl pos:start="159:9" pos:end="159:28"><type pos:start="159:9" pos:end="159:14"><name pos:start="159:9" pos:end="159:14">double</name></type> <name pos:start="159:16" pos:end="159:22">energy1</name> <init pos:start="159:24" pos:end="159:28">= <expr pos:start="159:26" pos:end="159:28"><literal type="number" pos:start="159:26" pos:end="159:28">0.0</literal></expr></init></decl>, <decl pos:start="159:31" pos:end="159:43"><type ref="prev" pos:start="159:9" pos:end="159:14"/><name pos:start="159:31" pos:end="159:37">energy2</name> <init pos:start="159:39" pos:end="159:43">= <expr pos:start="159:41" pos:end="159:43"><literal type="number" pos:start="159:41" pos:end="159:43">0.0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="161:9" pos:end="177:9">for <control pos:start="161:13" pos:end="161:44">(<init pos:start="161:14" pos:end="161:20"><expr pos:start="161:14" pos:end="161:19"><name pos:start="161:14" pos:end="161:15">ch</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <literal type="number" pos:start="161:19" pos:end="161:19">0</literal></expr>;</init> <condition pos:start="161:22" pos:end="161:38"><expr pos:start="161:22" pos:end="161:37"><name pos:start="161:22" pos:end="161:23">ch</name> <operator pos:start="161:25" pos:end="161:25">&lt;</operator> <name pos:start="161:27" pos:end="161:37"><name pos:start="161:27" pos:end="161:27">s</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:37">channels</name></name></expr>;</condition> <incr pos:start="161:40" pos:end="161:43"><expr pos:start="161:40" pos:end="161:43"><name pos:start="161:40" pos:end="161:41">ch</name><operator pos:start="161:42" pos:end="161:43">++</operator></expr></incr>)</control>

        <block pos:start="163:9" pos:end="177:9">{<block_content pos:start="165:13" pos:end="175:13">

            <for pos:start="165:13" pos:end="175:13">for <control pos:start="165:17" pos:end="165:48">(<init pos:start="165:18" pos:end="165:23"><expr pos:start="165:18" pos:end="165:22"><name pos:start="165:18" pos:end="165:18">i</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>;</init> <condition pos:start="165:25" pos:end="165:43"><expr pos:start="165:25" pos:end="165:42"><name pos:start="165:25" pos:end="165:25">i</name> <operator pos:start="165:27" pos:end="165:27">&lt;</operator> <name pos:start="165:29" pos:end="165:42"><name pos:start="165:29" pos:end="165:29">s</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:42">block_align</name></name></expr>;</condition> <incr pos:start="165:45" pos:end="165:47"><expr pos:start="165:45" pos:end="165:47"><name pos:start="165:45" pos:end="165:45">i</name><operator pos:start="165:46" pos:end="165:47">++</operator></expr></incr>)</control>

            <block pos:start="167:13" pos:end="175:13">{<block_content pos:start="169:17" pos:end="173:40">

                <decl_stmt pos:start="169:17" pos:end="169:56"><decl pos:start="169:17" pos:end="169:55"><type pos:start="169:17" pos:end="169:22"><name pos:start="169:17" pos:end="169:22">double</name></type> <name pos:start="169:24" pos:end="169:29">sample</name> <init pos:start="169:31" pos:end="169:55">= <expr pos:start="169:33" pos:end="169:55"><name pos:start="169:33" pos:end="169:55"><name pos:start="169:33" pos:end="169:33">s</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:48">coded_samples</name><index pos:start="169:49" pos:end="169:52">[<expr pos:start="169:50" pos:end="169:51"><name pos:start="169:50" pos:end="169:51">ch</name></expr>]</index><index pos:start="169:53" pos:end="169:55">[<expr pos:start="169:54" pos:end="169:54"><name pos:start="169:54" pos:end="169:54">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:41"><expr pos:start="171:17" pos:end="171:40"><name pos:start="171:17" pos:end="171:23">energy2</name> <operator pos:start="171:25" pos:end="171:26">+=</operator> <name pos:start="171:28" pos:end="171:33">sample</name><operator pos:start="171:34" pos:end="171:34">*</operator><name pos:start="171:35" pos:end="171:40">sample</name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:40"><expr pos:start="173:17" pos:end="173:39"><name pos:start="173:17" pos:end="173:23">energy1</name> <operator pos:start="173:25" pos:end="173:26">+=</operator> <call pos:start="173:28" pos:end="173:39"><name pos:start="173:28" pos:end="173:31">fabs</name><argument_list pos:start="173:32" pos:end="173:39">(<argument pos:start="173:33" pos:end="173:38"><expr pos:start="173:33" pos:end="173:38"><name pos:start="173:33" pos:end="173:38">sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="181:9" pos:end="181:61"><expr pos:start="181:9" pos:end="181:60"><name pos:start="181:9" pos:end="181:15">energy2</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <call pos:start="181:19" pos:end="181:60"><name pos:start="181:19" pos:end="181:22">sqrt</name><argument_list pos:start="181:23" pos:end="181:60">(<argument pos:start="181:24" pos:end="181:59"><expr pos:start="181:24" pos:end="181:59"><name pos:start="181:24" pos:end="181:30">energy2</name><operator pos:start="181:31" pos:end="181:31">/</operator><operator pos:start="181:32" pos:end="181:32">(</operator><name pos:start="181:33" pos:end="181:43"><name pos:start="181:33" pos:end="181:33">s</name><operator pos:start="181:34" pos:end="181:35">-&gt;</operator><name pos:start="181:36" pos:end="181:43">channels</name></name><operator pos:start="181:44" pos:end="181:44">*</operator><name pos:start="181:45" pos:end="181:58"><name pos:start="181:45" pos:end="181:45">s</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:58">block_align</name></name><operator pos:start="181:59" pos:end="181:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:63"><expr pos:start="183:9" pos:end="183:62"><name pos:start="183:9" pos:end="183:15">energy1</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <name pos:start="183:19" pos:end="183:25">M_SQRT2</name><operator pos:start="183:26" pos:end="183:26">*</operator><name pos:start="183:27" pos:end="183:33">energy1</name><operator pos:start="183:34" pos:end="183:34">/</operator><operator pos:start="183:35" pos:end="183:35">(</operator><name pos:start="183:36" pos:end="183:46"><name pos:start="183:36" pos:end="183:36">s</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:46">channels</name></name><operator pos:start="183:47" pos:end="183:47">*</operator><name pos:start="183:48" pos:end="183:61"><name pos:start="183:48" pos:end="183:48">s</name><operator pos:start="183:49" pos:end="183:50">-&gt;</operator><name pos:start="183:51" pos:end="183:61">block_align</name></name><operator pos:start="183:62" pos:end="183:62">)</operator></expr>;</expr_stmt>



        <comment type="line" pos:start="187:9" pos:end="187:73">// increase bitrate when samples are like a gaussian distribution</comment>

        <comment type="line" pos:start="189:9" pos:end="189:85">// reduce bitrate when samples are like a two-tailed exponential distribution</comment>



        <if_stmt pos:start="193:9" pos:end="195:56"><if pos:start="193:9" pos:end="195:56">if <condition pos:start="193:12" pos:end="193:30">(<expr pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:19">energy2</name> <operator pos:start="193:21" pos:end="193:21">&gt;</operator> <name pos:start="193:23" pos:end="193:29">energy1</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:56"><block_content pos:start="195:13" pos:end="195:56">

            <expr_stmt pos:start="195:13" pos:end="195:56"><expr pos:start="195:13" pos:end="195:55"><name pos:start="195:13" pos:end="195:19">energy2</name> <operator pos:start="195:21" pos:end="195:22">+=</operator> <operator pos:start="195:24" pos:end="195:24">(</operator><name pos:start="195:25" pos:end="195:31">energy2</name><operator pos:start="195:32" pos:end="195:32">-</operator><name pos:start="195:33" pos:end="195:39">energy1</name><operator pos:start="195:40" pos:end="195:40">)</operator><operator pos:start="195:41" pos:end="195:41">*</operator><name pos:start="195:42" pos:end="195:55">RATE_VARIATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="199:9" pos:end="199:72"><expr pos:start="199:9" pos:end="199:71"><name pos:start="199:9" pos:end="199:13">quant</name> <operator pos:start="199:15" pos:end="199:15">=</operator> <operator pos:start="199:17" pos:end="199:17">(</operator><name pos:start="199:18" pos:end="199:20">int</name><operator pos:start="199:21" pos:end="199:21">)</operator><operator pos:start="199:22" pos:end="199:22">(</operator><name pos:start="199:23" pos:end="199:32">BASE_QUANT</name><operator pos:start="199:33" pos:end="199:33">*</operator><name pos:start="199:34" pos:end="199:48"><name pos:start="199:34" pos:end="199:34">s</name><operator pos:start="199:35" pos:end="199:36">-&gt;</operator><name pos:start="199:37" pos:end="199:48">quantization</name></name><operator pos:start="199:49" pos:end="199:49">*</operator><name pos:start="199:50" pos:end="199:56">energy2</name><operator pos:start="199:57" pos:end="199:57">/</operator><name pos:start="199:58" pos:end="199:70">SAMPLE_FACTOR</name><operator pos:start="199:71" pos:end="199:71">)</operator></expr>;</expr_stmt>

<comment type="line" pos:start="201:1" pos:end="201:94">//        av_log(avctx, AV_LOG_DEBUG, "quant: %d energy: %f / %f\n", quant, energy1, energy2);</comment>



        <expr_stmt pos:start="205:9" pos:end="205:41"><expr pos:start="205:9" pos:end="205:40"><name pos:start="205:9" pos:end="205:13">quant</name> <operator pos:start="205:15" pos:end="205:15">=</operator> <call pos:start="205:17" pos:end="205:40"><name pos:start="205:17" pos:end="205:23">av_clip</name><argument_list pos:start="205:24" pos:end="205:40">(<argument pos:start="205:25" pos:end="205:29"><expr pos:start="205:25" pos:end="205:29"><name pos:start="205:25" pos:end="205:29">quant</name></expr></argument>, <argument pos:start="205:32" pos:end="205:32"><expr pos:start="205:32" pos:end="205:32"><literal type="number" pos:start="205:32" pos:end="205:32">1</literal></expr></argument>, <argument pos:start="205:35" pos:end="205:39"><expr pos:start="205:35" pos:end="205:39"><literal type="number" pos:start="205:35" pos:end="205:39">65534</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:52"><expr pos:start="209:9" pos:end="209:51"><call pos:start="209:9" pos:end="209:51"><name pos:start="209:9" pos:end="209:18">put_symbol</name><argument_list pos:start="209:19" pos:end="209:51">(<argument pos:start="209:20" pos:end="209:21"><expr pos:start="209:20" pos:end="209:21"><operator pos:start="209:20" pos:end="209:20">&amp;</operator><name pos:start="209:21" pos:end="209:21">c</name></expr></argument>, <argument pos:start="209:24" pos:end="209:28"><expr pos:start="209:24" pos:end="209:28"><name pos:start="209:24" pos:end="209:28">state</name></expr></argument>, <argument pos:start="209:31" pos:end="209:35"><expr pos:start="209:31" pos:end="209:35"><name pos:start="209:31" pos:end="209:35">quant</name></expr></argument>, <argument pos:start="209:38" pos:end="209:38"><expr pos:start="209:38" pos:end="209:38"><literal type="number" pos:start="209:38" pos:end="209:38">0</literal></expr></argument>, <argument pos:start="209:41" pos:end="209:44"><expr pos:start="209:41" pos:end="209:44"><name pos:start="209:41" pos:end="209:44">NULL</name></expr></argument>, <argument pos:start="209:47" pos:end="209:50"><expr pos:start="209:47" pos:end="209:50"><name pos:start="209:47" pos:end="209:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:31"><expr pos:start="213:9" pos:end="213:30"><name pos:start="213:9" pos:end="213:13">quant</name> <operator pos:start="213:15" pos:end="213:16">*=</operator> <name pos:start="213:18" pos:end="213:30">SAMPLE_FACTOR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="219:5" pos:end="219:30">// write out coded samples</comment>

    <for pos:start="221:5" pos:end="237:5">for <control pos:start="221:9" pos:end="221:40">(<init pos:start="221:10" pos:end="221:16"><expr pos:start="221:10" pos:end="221:15"><name pos:start="221:10" pos:end="221:11">ch</name> <operator pos:start="221:13" pos:end="221:13">=</operator> <literal type="number" pos:start="221:15" pos:end="221:15">0</literal></expr>;</init> <condition pos:start="221:18" pos:end="221:34"><expr pos:start="221:18" pos:end="221:33"><name pos:start="221:18" pos:end="221:19">ch</name> <operator pos:start="221:21" pos:end="221:21">&lt;</operator> <name pos:start="221:23" pos:end="221:33"><name pos:start="221:23" pos:end="221:23">s</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:33">channels</name></name></expr>;</condition> <incr pos:start="221:36" pos:end="221:39"><expr pos:start="221:36" pos:end="221:39"><name pos:start="221:36" pos:end="221:37">ch</name><operator pos:start="221:38" pos:end="221:39">++</operator></expr></incr>)</control>

    <block pos:start="223:5" pos:end="237:5">{<block_content pos:start="225:9" pos:end="235:23">

        <if_stmt pos:start="225:9" pos:end="229:86"><if pos:start="225:9" pos:end="229:86">if <condition pos:start="225:12" pos:end="225:25">(<expr pos:start="225:13" pos:end="225:24"><operator pos:start="225:13" pos:end="225:13">!</operator><name pos:start="225:14" pos:end="225:24"><name pos:start="225:14" pos:end="225:14">s</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:24">lossless</name></name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="229:86"><block_content pos:start="227:13" pos:end="229:86">

            <for pos:start="227:13" pos:end="229:86">for <control pos:start="227:17" pos:end="227:48">(<init pos:start="227:18" pos:end="227:23"><expr pos:start="227:18" pos:end="227:22"><name pos:start="227:18" pos:end="227:18">i</name> <operator pos:start="227:20" pos:end="227:20">=</operator> <literal type="number" pos:start="227:22" pos:end="227:22">0</literal></expr>;</init> <condition pos:start="227:25" pos:end="227:43"><expr pos:start="227:25" pos:end="227:42"><name pos:start="227:25" pos:end="227:25">i</name> <operator pos:start="227:27" pos:end="227:27">&lt;</operator> <name pos:start="227:29" pos:end="227:42"><name pos:start="227:29" pos:end="227:29">s</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:42">block_align</name></name></expr>;</condition> <incr pos:start="227:45" pos:end="227:47"><expr pos:start="227:45" pos:end="227:47"><name pos:start="227:45" pos:end="227:45">i</name><operator pos:start="227:46" pos:end="227:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="229:17" pos:end="229:86"><block_content pos:start="229:17" pos:end="229:86">

                <expr_stmt pos:start="229:17" pos:end="229:86"><expr pos:start="229:17" pos:end="229:85"><name pos:start="229:17" pos:end="229:39"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:32">coded_samples</name><index pos:start="229:33" pos:end="229:36">[<expr pos:start="229:34" pos:end="229:35"><name pos:start="229:34" pos:end="229:35">ch</name></expr>]</index><index pos:start="229:37" pos:end="229:39">[<expr pos:start="229:38" pos:end="229:38"><name pos:start="229:38" pos:end="229:38">i</name></expr>]</index></name> <operator pos:start="229:41" pos:end="229:41">=</operator> <call pos:start="229:43" pos:end="229:85"><name pos:start="229:43" pos:end="229:53">ROUNDED_DIV</name><argument_list pos:start="229:54" pos:end="229:85">(<argument pos:start="229:55" pos:end="229:77"><expr pos:start="229:55" pos:end="229:77"><name pos:start="229:55" pos:end="229:77"><name pos:start="229:55" pos:end="229:55">s</name><operator pos:start="229:56" pos:end="229:57">-&gt;</operator><name pos:start="229:58" pos:end="229:70">coded_samples</name><index pos:start="229:71" pos:end="229:74">[<expr pos:start="229:72" pos:end="229:73"><name pos:start="229:72" pos:end="229:73">ch</name></expr>]</index><index pos:start="229:75" pos:end="229:77">[<expr pos:start="229:76" pos:end="229:76"><name pos:start="229:76" pos:end="229:76">i</name></expr>]</index></name></expr></argument>, <argument pos:start="229:80" pos:end="229:84"><expr pos:start="229:80" pos:end="229:84"><name pos:start="229:80" pos:end="229:84">quant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



        <if_stmt pos:start="233:9" pos:end="235:23"><if pos:start="233:9" pos:end="235:23">if <condition pos:start="233:12" pos:end="233:90">(<expr pos:start="233:13" pos:end="233:89"><operator pos:start="233:13" pos:end="233:13">(</operator><name pos:start="233:14" pos:end="233:16">ret</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <call pos:start="233:20" pos:end="233:84"><name pos:start="233:20" pos:end="233:32">intlist_write</name><argument_list pos:start="233:33" pos:end="233:84">(<argument pos:start="233:34" pos:end="233:35"><expr pos:start="233:34" pos:end="233:35"><operator pos:start="233:34" pos:end="233:34">&amp;</operator><name pos:start="233:35" pos:end="233:35">c</name></expr></argument>, <argument pos:start="233:38" pos:end="233:42"><expr pos:start="233:38" pos:end="233:42"><name pos:start="233:38" pos:end="233:42">state</name></expr></argument>, <argument pos:start="233:45" pos:end="233:64"><expr pos:start="233:45" pos:end="233:64"><name pos:start="233:45" pos:end="233:64"><name pos:start="233:45" pos:end="233:45">s</name><operator pos:start="233:46" pos:end="233:47">-&gt;</operator><name pos:start="233:48" pos:end="233:60">coded_samples</name><index pos:start="233:61" pos:end="233:64">[<expr pos:start="233:62" pos:end="233:63"><name pos:start="233:62" pos:end="233:63">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="233:67" pos:end="233:80"><expr pos:start="233:67" pos:end="233:80"><name pos:start="233:67" pos:end="233:80"><name pos:start="233:67" pos:end="233:67">s</name><operator pos:start="233:68" pos:end="233:69">-&gt;</operator><name pos:start="233:70" pos:end="233:80">block_align</name></name></expr></argument>, <argument pos:start="233:83" pos:end="233:83"><expr pos:start="233:83" pos:end="233:83"><literal type="number" pos:start="233:83" pos:end="233:83">1</literal></expr></argument>)</argument_list></call><operator pos:start="233:85" pos:end="233:85">)</operator> <operator pos:start="233:87" pos:end="233:87">&lt;</operator> <literal type="number" pos:start="233:89" pos:end="233:89">0</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:23"><block_content pos:start="235:13" pos:end="235:23">

            <return pos:start="235:13" pos:end="235:23">return <expr pos:start="235:20" pos:end="235:22"><name pos:start="235:20" pos:end="235:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="241:1" pos:end="241:81">//    av_log(avctx, AV_LOG_DEBUG, "used bytes: %d\n", (put_bits_count(&amp;pb)+7)/8);</comment>



    <expr_stmt pos:start="245:5" pos:end="245:39"><expr pos:start="245:5" pos:end="245:38"><name pos:start="245:5" pos:end="245:15"><name pos:start="245:5" pos:end="245:9">avpkt</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:15">size</name></name> <operator pos:start="245:17" pos:end="245:17">=</operator> <call pos:start="245:19" pos:end="245:38"><name pos:start="245:19" pos:end="245:34">ff_rac_terminate</name><argument_list pos:start="245:35" pos:end="245:38">(<argument pos:start="245:36" pos:end="245:37"><expr pos:start="245:36" pos:end="245:37"><operator pos:start="245:36" pos:end="245:36">&amp;</operator><name pos:start="245:37" pos:end="245:37">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:24"><expr pos:start="247:5" pos:end="247:23"><operator pos:start="247:5" pos:end="247:5">*</operator><name pos:start="247:6" pos:end="247:19">got_packet_ptr</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <literal type="number" pos:start="247:23" pos:end="247:23">1</literal></expr>;</expr_stmt>

    <return pos:start="249:5" pos:end="249:13">return <expr pos:start="249:12" pos:end="249:12"><literal type="number" pos:start="249:12" pos:end="249:12">0</literal></expr>;</return>



</block_content>}</block></function>
</unit>
