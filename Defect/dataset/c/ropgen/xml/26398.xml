<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26398.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:28">unlock_iovec</name><parameter_list pos:start="1:29" pos:end="3:49">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:41">iovec</name></name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">vec</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:57">abi_ulong</name></type> <name pos:start="1:59" pos:end="1:69">target_addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:38"><decl pos:start="3:30" pos:end="3:38"><type pos:start="3:30" pos:end="3:38"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">count</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:48"><decl pos:start="3:41" pos:end="3:48"><type pos:start="3:41" pos:end="3:48"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:48">copy</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:13">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">target_iovec</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:35">target_vec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:18">base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:93"><expr pos:start="15:5" pos:end="15:92"><name pos:start="15:5" pos:end="15:14">target_vec</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:92"><name pos:start="15:18" pos:end="15:26">lock_user</name><argument_list pos:start="15:27" pos:end="15:92">(<argument pos:start="15:28" pos:end="15:38"><expr pos:start="15:28" pos:end="15:38"><name pos:start="15:28" pos:end="15:38">VERIFY_READ</name></expr></argument>, <argument pos:start="15:41" pos:end="15:51"><expr pos:start="15:41" pos:end="15:51"><name pos:start="15:41" pos:end="15:51">target_addr</name></expr></argument>, <argument pos:start="15:54" pos:end="15:88"><expr pos:start="15:54" pos:end="15:88"><name pos:start="15:54" pos:end="15:58">count</name> <operator pos:start="15:60" pos:end="15:60">*</operator> <sizeof pos:start="15:62" pos:end="15:88">sizeof<argument_list pos:start="15:68" pos:end="15:88">(<argument pos:start="15:69" pos:end="15:87"><expr pos:start="15:69" pos:end="15:87">struct <name pos:start="15:76" pos:end="15:87">target_iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:91" pos:end="15:91"><expr pos:start="15:91" pos:end="15:91"><literal type="number" pos:start="15:91" pos:end="15:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:30"><if pos:start="17:5" pos:end="19:30">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:19">target_vec</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:30"><block_content pos:start="19:9" pos:end="19:30">

        <return pos:start="19:9" pos:end="19:30">return <expr pos:start="19:16" pos:end="19:29"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="21:5" pos:end="27:5">for<control pos:start="21:8" pos:end="21:29">(<init pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">i</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>;</init><condition pos:start="21:15" pos:end="21:24"><expr pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:15">i</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <name pos:start="21:19" pos:end="21:23">count</name></expr>;</condition> <incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control> <block pos:start="21:31" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:70">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:12">base</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:45"><name pos:start="23:16" pos:end="23:21">tswapl</name><argument_list pos:start="23:22" pos:end="23:45">(<argument pos:start="23:23" pos:end="23:44"><expr pos:start="23:23" pos:end="23:44"><name pos:start="23:23" pos:end="23:35"><name pos:start="23:23" pos:end="23:32">target_vec</name><index pos:start="23:33" pos:end="23:35">[<expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">i</name></expr>]</index></name><operator pos:start="23:36" pos:end="23:36">.</operator><name pos:start="23:37" pos:end="23:44">iov_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:70"><expr pos:start="25:9" pos:end="25:69"><call pos:start="25:9" pos:end="25:69"><name pos:start="25:9" pos:end="25:19">unlock_user</name><argument_list pos:start="25:20" pos:end="25:69">(<argument pos:start="25:21" pos:end="25:35"><expr pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:23">vec</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">i</name></expr>]</index></name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:35">iov_base</name></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><name pos:start="25:38" pos:end="25:41">base</name></expr></argument>, <argument pos:start="25:44" pos:end="25:68"><expr pos:start="25:44" pos:end="25:68"><ternary pos:start="25:44" pos:end="25:68"><condition pos:start="25:44" pos:end="25:49"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">copy</name></expr> ?</condition><then pos:start="25:51" pos:end="25:64"> <expr pos:start="25:51" pos:end="25:64"><name pos:start="25:51" pos:end="25:56"><name pos:start="25:51" pos:end="25:53">vec</name><index pos:start="25:54" pos:end="25:56">[<expr pos:start="25:55" pos:end="25:55"><name pos:start="25:55" pos:end="25:55">i</name></expr>]</index></name><operator pos:start="25:57" pos:end="25:57">.</operator><name pos:start="25:58" pos:end="25:64">iov_len</name></expr> </then><else pos:start="25:66" pos:end="25:68">: <expr pos:start="25:68" pos:end="25:68"><literal type="number" pos:start="25:68" pos:end="25:68">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:15">unlock_user</name> <argument_list pos:start="29:17" pos:end="29:44">(<argument pos:start="29:18" pos:end="29:27"><expr pos:start="29:18" pos:end="29:27"><name pos:start="29:18" pos:end="29:27">target_vec</name></expr></argument>, <argument pos:start="29:30" pos:end="29:40"><expr pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:40">target_addr</name></expr></argument>, <argument pos:start="29:43" pos:end="29:43"><expr pos:start="29:43" pos:end="29:43"><literal type="number" pos:start="29:43" pos:end="29:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
