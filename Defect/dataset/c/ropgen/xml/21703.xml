<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21703.c" pos:tabs="8"><function pos:start="1:1" pos:end="353:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">vexpress_common_init</name><parameter_list pos:start="1:33" pos:end="1:55">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:45">MachineState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="353:1">{<block_content pos:start="5:5" pos:end="351:66">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">VexpressMachineState</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:29">vms</name> <init pos:start="5:31" pos:end="5:57">= <expr pos:start="5:33" pos:end="5:57"><call pos:start="5:33" pos:end="5:57"><name pos:start="5:33" pos:end="5:48">VEXPRESS_MACHINE</name><argument_list pos:start="5:49" pos:end="5:57">(<argument pos:start="5:50" pos:end="5:56"><expr pos:start="5:50" pos:end="5:56"><name pos:start="5:50" pos:end="5:56">machine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">VexpressMachineClass</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">vmc</name> <init pos:start="7:31" pos:end="7:67">= <expr pos:start="7:33" pos:end="7:67"><call pos:start="7:33" pos:end="7:67"><name pos:start="7:33" pos:end="7:58">VEXPRESS_MACHINE_GET_CLASS</name><argument_list pos:start="7:59" pos:end="7:67">(<argument pos:start="7:60" pos:end="7:66"><expr pos:start="7:60" pos:end="7:66"><name pos:start="7:60" pos:end="7:66">machine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VEDBoardInfo</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:31">daughterboard</name> <init pos:start="9:33" pos:end="9:52">= <expr pos:start="9:35" pos:end="9:52"><name pos:start="9:35" pos:end="9:52"><name pos:start="9:35" pos:end="9:37">vmc</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:52">daughterboard</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">dev</name></decl>, <decl pos:start="11:23" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:29">sysctl</name></decl>, <decl pos:start="11:32" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:37">pl041</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">qemu_irq</name></type> <name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:16">pic</name><index pos:start="13:17" pos:end="13:20">[<expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">sys_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">DriveInfo</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">pflash_t</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:21">pflash0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:14">ram_addr_t</name></type> <name pos:start="21:16" pos:end="21:24">vram_size</name></decl>, <decl pos:start="21:27" pos:end="21:35"><type ref="prev" pos:start="21:5" pos:end="21:14"/><name pos:start="21:27" pos:end="21:35">sram_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:47"><decl pos:start="23:5" pos:end="23:46"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">MemoryRegion</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:24">sysmem</name> <init pos:start="23:26" pos:end="23:46">= <expr pos:start="23:28" pos:end="23:46"><call pos:start="23:28" pos:end="23:46"><name pos:start="23:28" pos:end="23:44">get_system_memory</name><argument_list pos:start="23:45" pos:end="23:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:48"><decl pos:start="25:5" pos:end="25:47"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">MemoryRegion</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:22">vram</name> <init pos:start="25:24" pos:end="25:47">= <expr pos:start="25:26" pos:end="25:47"><call pos:start="25:26" pos:end="25:47"><name pos:start="25:26" pos:end="25:30">g_new</name><argument_list pos:start="25:31" pos:end="25:47">(<argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:43">MemoryRegion</name></expr></argument>, <argument pos:start="25:46" pos:end="25:46"><expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:48"><decl pos:start="27:5" pos:end="27:47"><type pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:16">MemoryRegion</name> <modifier pos:start="27:18" pos:end="27:18">*</modifier></type><name pos:start="27:19" pos:end="27:22">sram</name> <init pos:start="27:24" pos:end="27:47">= <expr pos:start="27:26" pos:end="27:47"><call pos:start="27:26" pos:end="27:47"><name pos:start="27:26" pos:end="27:30">g_new</name><argument_list pos:start="27:31" pos:end="27:47">(<argument pos:start="27:32" pos:end="27:43"><expr pos:start="27:32" pos:end="27:43"><name pos:start="27:32" pos:end="27:43">MemoryRegion</name></expr></argument>, <argument pos:start="27:46" pos:end="27:46"><expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:54"><decl pos:start="29:5" pos:end="29:53"><type pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:16">MemoryRegion</name> <modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:28">flashalias</name> <init pos:start="29:30" pos:end="29:53">= <expr pos:start="29:32" pos:end="29:53"><call pos:start="29:32" pos:end="29:53"><name pos:start="29:32" pos:end="29:36">g_new</name><argument_list pos:start="29:37" pos:end="29:53">(<argument pos:start="29:38" pos:end="29:49"><expr pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:49">MemoryRegion</name></expr></argument>, <argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><literal type="number" pos:start="29:52" pos:end="29:52">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:28"><decl pos:start="31:5" pos:end="31:27"><type pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:16">MemoryRegion</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:27">flash0mem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:55"><decl pos:start="33:5" pos:end="33:54"><type pos:start="33:5" pos:end="33:18"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:16">hwaddr</name> <modifier pos:start="33:18" pos:end="33:18">*</modifier></type><name pos:start="33:19" pos:end="33:21">map</name> <init pos:start="33:23" pos:end="33:54">= <expr pos:start="33:25" pos:end="33:54"><name pos:start="33:25" pos:end="33:54"><name pos:start="33:25" pos:end="33:37">daughterboard</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:54">motherboard_map</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:10"><decl pos:start="35:5" pos:end="35:9"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:73"><expr pos:start="39:5" pos:end="39:72"><call pos:start="39:5" pos:end="39:72"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:17">daughterboard</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:23">init</name></name><argument_list pos:start="39:24" pos:end="39:72">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">vms</name></expr></argument>, <argument pos:start="39:30" pos:end="39:46"><expr pos:start="39:30" pos:end="39:46"><name pos:start="39:30" pos:end="39:46"><name pos:start="39:30" pos:end="39:36">machine</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:46">ram_size</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:66"><expr pos:start="39:49" pos:end="39:66"><name pos:start="39:49" pos:end="39:66"><name pos:start="39:49" pos:end="39:55">machine</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:66">cpu_model</name></name></expr></argument>, <argument pos:start="39:69" pos:end="39:71"><expr pos:start="39:69" pos:end="39:71"><name pos:start="39:69" pos:end="39:71">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="47:7">/*

     * If a bios file was provided, attempt to map it into memory

     */</comment>

    <if_stmt pos:start="49:5" pos:end="93:5"><if pos:start="49:5" pos:end="93:5">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17">bios_name</name></expr>)</condition> <block pos:start="49:20" pos:end="93:5">{<block_content pos:start="51:9" pos:end="91:9">

        <decl_stmt pos:start="51:9" pos:end="51:17"><decl pos:start="51:9" pos:end="51:16"><type pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:12">char</name> <modifier pos:start="51:14" pos:end="51:14">*</modifier></type><name pos:start="51:15" pos:end="51:16">fn</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:23"><decl pos:start="53:9" pos:end="53:22"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:22">image_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:39">(<expr pos:start="57:13" pos:end="57:38"><call pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:21">drive_get</name><argument_list pos:start="57:22" pos:end="57:38">(<argument pos:start="57:23" pos:end="57:31"><expr pos:start="57:23" pos:end="57:31"><name pos:start="57:23" pos:end="57:31">IF_PFLASH</name></expr></argument>, <argument pos:start="57:34" pos:end="57:34"><expr pos:start="57:34" pos:end="57:34"><literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><literal type="number" pos:start="57:37" pos:end="57:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:41" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:20">

            <expr_stmt pos:start="59:13" pos:end="63:68"><expr pos:start="59:13" pos:end="63:67"><call pos:start="59:13" pos:end="63:67"><name pos:start="59:13" pos:end="59:24">error_report</name><argument_list pos:start="59:25" pos:end="63:67">(<argument pos:start="59:26" pos:end="63:66"><expr pos:start="59:26" pos:end="63:66"><literal type="string" pos:start="59:26" pos:end="59:73">"The contents of the first flash device may be "</literal>

                         <literal type="string" pos:start="61:26" pos:end="61:76">"specified with -bios or with -drive if=pflash... "</literal>

                         <literal type="string" pos:start="63:26" pos:end="63:66">"but you cannot use both options at once"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:20"><expr pos:start="65:13" pos:end="65:19"><call pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:16">exit</name><argument_list pos:start="65:17" pos:end="65:19">(<argument pos:start="65:18" pos:end="65:18"><expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:60"><expr pos:start="69:9" pos:end="69:59"><name pos:start="69:9" pos:end="69:10">fn</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <call pos:start="69:14" pos:end="69:59"><name pos:start="69:14" pos:end="69:27">qemu_find_file</name><argument_list pos:start="69:28" pos:end="69:59">(<argument pos:start="69:29" pos:end="69:47"><expr pos:start="69:29" pos:end="69:47"><name pos:start="69:29" pos:end="69:47">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="69:50" pos:end="69:58"><expr pos:start="69:50" pos:end="69:58"><name pos:start="69:50" pos:end="69:58">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:16">(<expr pos:start="71:13" pos:end="71:15"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:15">fn</name></expr>)</condition> <block pos:start="71:18" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:20">

            <expr_stmt pos:start="73:13" pos:end="73:69"><expr pos:start="73:13" pos:end="73:68"><call pos:start="73:13" pos:end="73:68"><name pos:start="73:13" pos:end="73:24">error_report</name><argument_list pos:start="73:25" pos:end="73:68">(<argument pos:start="73:26" pos:end="73:56"><expr pos:start="73:26" pos:end="73:56"><literal type="string" pos:start="73:26" pos:end="73:56">"Could not find ROM image '%s'"</literal></expr></argument>, <argument pos:start="73:59" pos:end="73:67"><expr pos:start="73:59" pos:end="73:67"><name pos:start="73:59" pos:end="73:67">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:20"><expr pos:start="75:13" pos:end="75:19"><call pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:16">exit</name><argument_list pos:start="75:17" pos:end="75:19">(<argument pos:start="75:18" pos:end="75:18"><expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="81:62"><expr pos:start="79:9" pos:end="81:61"><name pos:start="79:9" pos:end="79:18">image_size</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="81:61"><name pos:start="79:22" pos:end="79:40">load_image_targphys</name><argument_list pos:start="79:41" pos:end="81:61">(<argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">fn</name></expr></argument>, <argument pos:start="79:46" pos:end="79:62"><expr pos:start="79:46" pos:end="79:62"><name pos:start="79:46" pos:end="79:62"><name pos:start="79:46" pos:end="79:48">map</name><index pos:start="79:49" pos:end="79:62">[<expr pos:start="79:50" pos:end="79:61"><name pos:start="79:50" pos:end="79:61">VE_NORFLASH0</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="81:42" pos:end="81:60"><expr pos:start="81:42" pos:end="81:60"><name pos:start="81:42" pos:end="81:60">VEXPRESS_FLASH_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:19"><expr pos:start="83:9" pos:end="83:18"><call pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:14">g_free</name><argument_list pos:start="83:15" pos:end="83:18">(<argument pos:start="83:16" pos:end="83:17"><expr pos:start="83:16" pos:end="83:17"><name pos:start="83:16" pos:end="83:17">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:27">(<expr pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:22">image_size</name> <operator pos:start="85:24" pos:end="85:24">&lt;</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>)</condition> <block pos:start="85:29" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:20">

            <expr_stmt pos:start="87:13" pos:end="87:69"><expr pos:start="87:13" pos:end="87:68"><call pos:start="87:13" pos:end="87:68"><name pos:start="87:13" pos:end="87:24">error_report</name><argument_list pos:start="87:25" pos:end="87:68">(<argument pos:start="87:26" pos:end="87:56"><expr pos:start="87:26" pos:end="87:56"><literal type="string" pos:start="87:26" pos:end="87:56">"Could not load ROM image '%s'"</literal></expr></argument>, <argument pos:start="87:59" pos:end="87:67"><expr pos:start="87:59" pos:end="87:67"><name pos:start="87:59" pos:end="87:67">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:20"><expr pos:start="89:13" pos:end="89:19"><call pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:16">exit</name><argument_list pos:start="89:17" pos:end="89:19">(<argument pos:start="89:18" pos:end="89:18"><expr pos:start="89:18" pos:end="89:18"><literal type="number" pos:start="89:18" pos:end="89:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="101:7">/* Motherboard peripherals: the wiring is the same but the

     * addresses vary between the legacy and A-Series memory maps.

     */</comment>



    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:10">sys_id</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:23">0x1190f500</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:50"><expr pos:start="109:5" pos:end="109:49"><name pos:start="109:5" pos:end="109:10">sysctl</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <call pos:start="109:14" pos:end="109:49"><name pos:start="109:14" pos:end="109:24">qdev_create</name><argument_list pos:start="109:25" pos:end="109:49">(<argument pos:start="109:26" pos:end="109:29"><expr pos:start="109:26" pos:end="109:29"><name pos:start="109:26" pos:end="109:29">NULL</name></expr></argument>, <argument pos:start="109:32" pos:end="109:48"><expr pos:start="109:32" pos:end="109:48"><literal type="string" pos:start="109:32" pos:end="109:48">"realview_sysctl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><call pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:24">qdev_prop_set_uint32</name><argument_list pos:start="111:25" pos:end="111:50">(<argument pos:start="111:26" pos:end="111:31"><expr pos:start="111:26" pos:end="111:31"><name pos:start="111:26" pos:end="111:31">sysctl</name></expr></argument>, <argument pos:start="111:34" pos:end="111:41"><expr pos:start="111:34" pos:end="111:41"><literal type="string" pos:start="111:34" pos:end="111:41">"sys_id"</literal></expr></argument>, <argument pos:start="111:44" pos:end="111:49"><expr pos:start="111:44" pos:end="111:49"><name pos:start="111:44" pos:end="111:49">sys_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:68"><expr pos:start="113:5" pos:end="113:67"><call pos:start="113:5" pos:end="113:67"><name pos:start="113:5" pos:end="113:24">qdev_prop_set_uint32</name><argument_list pos:start="113:25" pos:end="113:67">(<argument pos:start="113:26" pos:end="113:31"><expr pos:start="113:26" pos:end="113:31"><name pos:start="113:26" pos:end="113:31">sysctl</name></expr></argument>, <argument pos:start="113:34" pos:end="113:42"><expr pos:start="113:34" pos:end="113:42"><literal type="string" pos:start="113:34" pos:end="113:42">"proc_id"</literal></expr></argument>, <argument pos:start="113:45" pos:end="113:66"><expr pos:start="113:45" pos:end="113:66"><name pos:start="113:45" pos:end="113:66"><name pos:start="113:45" pos:end="113:57">daughterboard</name><operator pos:start="113:58" pos:end="113:59">-&gt;</operator><name pos:start="113:60" pos:end="113:66">proc_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="117:61"><expr pos:start="115:5" pos:end="117:60"><call pos:start="115:5" pos:end="117:60"><name pos:start="115:5" pos:end="115:24">qdev_prop_set_uint32</name><argument_list pos:start="115:25" pos:end="117:60">(<argument pos:start="115:26" pos:end="115:31"><expr pos:start="115:26" pos:end="115:31"><name pos:start="115:26" pos:end="115:31">sysctl</name></expr></argument>, <argument pos:start="115:34" pos:end="115:49"><expr pos:start="115:34" pos:end="115:49"><literal type="string" pos:start="115:34" pos:end="115:49">"len-db-voltage"</literal></expr></argument>,

                         <argument pos:start="117:26" pos:end="117:59"><expr pos:start="117:26" pos:end="117:59"><name pos:start="117:26" pos:end="117:59"><name pos:start="117:26" pos:end="117:38">daughterboard</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:59">num_voltage_sensors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="119:5" pos:end="127:5">for <control pos:start="119:9" pos:end="119:60">(<init pos:start="119:10" pos:end="119:15"><expr pos:start="119:10" pos:end="119:14"><name pos:start="119:10" pos:end="119:10">i</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</init> <condition pos:start="119:17" pos:end="119:55"><expr pos:start="119:17" pos:end="119:54"><name pos:start="119:17" pos:end="119:17">i</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <name pos:start="119:21" pos:end="119:54"><name pos:start="119:21" pos:end="119:33">daughterboard</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:54">num_voltage_sensors</name></name></expr>;</condition> <incr pos:start="119:57" pos:end="119:59"><expr pos:start="119:57" pos:end="119:59"><name pos:start="119:57" pos:end="119:57">i</name><operator pos:start="119:58" pos:end="119:59">++</operator></expr></incr>)</control> <block pos:start="119:62" pos:end="127:5">{<block_content pos:start="121:9" pos:end="125:25">

        <decl_stmt pos:start="121:9" pos:end="121:62"><decl pos:start="121:9" pos:end="121:61"><type pos:start="121:9" pos:end="121:14"><name pos:start="121:9" pos:end="121:12">char</name> <modifier pos:start="121:14" pos:end="121:14">*</modifier></type><name pos:start="121:15" pos:end="121:22">propname</name> <init pos:start="121:24" pos:end="121:61">= <expr pos:start="121:26" pos:end="121:61"><call pos:start="121:26" pos:end="121:61"><name pos:start="121:26" pos:end="121:40">g_strdup_printf</name><argument_list pos:start="121:41" pos:end="121:61">(<argument pos:start="121:42" pos:end="121:57"><expr pos:start="121:42" pos:end="121:57"><literal type="string" pos:start="121:42" pos:end="121:57">"db-voltage[%d]"</literal></expr></argument>, <argument pos:start="121:60" pos:end="121:60"><expr pos:start="121:60" pos:end="121:60"><name pos:start="121:60" pos:end="121:60">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:75"><expr pos:start="123:9" pos:end="123:74"><call pos:start="123:9" pos:end="123:74"><name pos:start="123:9" pos:end="123:28">qdev_prop_set_uint32</name><argument_list pos:start="123:29" pos:end="123:74">(<argument pos:start="123:30" pos:end="123:35"><expr pos:start="123:30" pos:end="123:35"><name pos:start="123:30" pos:end="123:35">sysctl</name></expr></argument>, <argument pos:start="123:38" pos:end="123:45"><expr pos:start="123:38" pos:end="123:45"><name pos:start="123:38" pos:end="123:45">propname</name></expr></argument>, <argument pos:start="123:48" pos:end="123:73"><expr pos:start="123:48" pos:end="123:73"><name pos:start="123:48" pos:end="123:73"><name pos:start="123:48" pos:end="123:60">daughterboard</name><operator pos:start="123:61" pos:end="123:62">-&gt;</operator><name pos:start="123:63" pos:end="123:70">voltages</name><index pos:start="123:71" pos:end="123:73">[<expr pos:start="123:72" pos:end="123:72"><name pos:start="123:72" pos:end="123:72">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><call pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:14">g_free</name><argument_list pos:start="125:15" pos:end="125:24">(<argument pos:start="125:16" pos:end="125:23"><expr pos:start="125:16" pos:end="125:23"><name pos:start="125:16" pos:end="125:23">propname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="129:5" pos:end="131:52"><expr pos:start="129:5" pos:end="131:51"><call pos:start="129:5" pos:end="131:51"><name pos:start="129:5" pos:end="129:24">qdev_prop_set_uint32</name><argument_list pos:start="129:25" pos:end="131:51">(<argument pos:start="129:26" pos:end="129:31"><expr pos:start="129:26" pos:end="129:31"><name pos:start="129:26" pos:end="129:31">sysctl</name></expr></argument>, <argument pos:start="129:34" pos:end="129:47"><expr pos:start="129:34" pos:end="129:47"><literal type="string" pos:start="129:34" pos:end="129:47">"len-db-clock"</literal></expr></argument>,

                         <argument pos:start="131:26" pos:end="131:50"><expr pos:start="131:26" pos:end="131:50"><name pos:start="131:26" pos:end="131:50"><name pos:start="131:26" pos:end="131:38">daughterboard</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:50">num_clocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="133:5" pos:end="141:5">for <control pos:start="133:9" pos:end="133:51">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">i</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:46"><expr pos:start="133:17" pos:end="133:45"><name pos:start="133:17" pos:end="133:17">i</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <name pos:start="133:21" pos:end="133:45"><name pos:start="133:21" pos:end="133:33">daughterboard</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:45">num_clocks</name></name></expr>;</condition> <incr pos:start="133:48" pos:end="133:50"><expr pos:start="133:48" pos:end="133:50"><name pos:start="133:48" pos:end="133:48">i</name><operator pos:start="133:49" pos:end="133:50">++</operator></expr></incr>)</control> <block pos:start="133:53" pos:end="141:5">{<block_content pos:start="135:9" pos:end="139:25">

        <decl_stmt pos:start="135:9" pos:end="135:60"><decl pos:start="135:9" pos:end="135:59"><type pos:start="135:9" pos:end="135:14"><name pos:start="135:9" pos:end="135:12">char</name> <modifier pos:start="135:14" pos:end="135:14">*</modifier></type><name pos:start="135:15" pos:end="135:22">propname</name> <init pos:start="135:24" pos:end="135:59">= <expr pos:start="135:26" pos:end="135:59"><call pos:start="135:26" pos:end="135:59"><name pos:start="135:26" pos:end="135:40">g_strdup_printf</name><argument_list pos:start="135:41" pos:end="135:59">(<argument pos:start="135:42" pos:end="135:55"><expr pos:start="135:42" pos:end="135:55"><literal type="string" pos:start="135:42" pos:end="135:55">"db-clock[%d]"</literal></expr></argument>, <argument pos:start="135:58" pos:end="135:58"><expr pos:start="135:58" pos:end="135:58"><name pos:start="135:58" pos:end="135:58">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:73"><expr pos:start="137:9" pos:end="137:72"><call pos:start="137:9" pos:end="137:72"><name pos:start="137:9" pos:end="137:28">qdev_prop_set_uint32</name><argument_list pos:start="137:29" pos:end="137:72">(<argument pos:start="137:30" pos:end="137:35"><expr pos:start="137:30" pos:end="137:35"><name pos:start="137:30" pos:end="137:35">sysctl</name></expr></argument>, <argument pos:start="137:38" pos:end="137:45"><expr pos:start="137:38" pos:end="137:45"><name pos:start="137:38" pos:end="137:45">propname</name></expr></argument>, <argument pos:start="137:48" pos:end="137:71"><expr pos:start="137:48" pos:end="137:71"><name pos:start="137:48" pos:end="137:71"><name pos:start="137:48" pos:end="137:60">daughterboard</name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:68">clocks</name><index pos:start="137:69" pos:end="137:71">[<expr pos:start="137:70" pos:end="137:70"><name pos:start="137:70" pos:end="137:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><call pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:14">g_free</name><argument_list pos:start="139:15" pos:end="139:24">(<argument pos:start="139:16" pos:end="139:23"><expr pos:start="139:16" pos:end="139:23"><name pos:start="139:16" pos:end="139:23">propname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="143:5" pos:end="143:29"><expr pos:start="143:5" pos:end="143:28"><call pos:start="143:5" pos:end="143:28"><name pos:start="143:5" pos:end="143:20">qdev_init_nofail</name><argument_list pos:start="143:21" pos:end="143:28">(<argument pos:start="143:22" pos:end="143:27"><expr pos:start="143:22" pos:end="143:27"><name pos:start="143:22" pos:end="143:27">sysctl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:64"><expr pos:start="145:5" pos:end="145:63"><call pos:start="145:5" pos:end="145:63"><name pos:start="145:5" pos:end="145:19">sysbus_mmio_map</name><argument_list pos:start="145:20" pos:end="145:63">(<argument pos:start="145:21" pos:end="145:42"><expr pos:start="145:21" pos:end="145:42"><call pos:start="145:21" pos:end="145:42"><name pos:start="145:21" pos:end="145:34">SYS_BUS_DEVICE</name><argument_list pos:start="145:35" pos:end="145:42">(<argument pos:start="145:36" pos:end="145:41"><expr pos:start="145:36" pos:end="145:41"><name pos:start="145:36" pos:end="145:41">sysctl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="145:45" pos:end="145:45"><expr pos:start="145:45" pos:end="145:45"><literal type="number" pos:start="145:45" pos:end="145:45">0</literal></expr></argument>, <argument pos:start="145:48" pos:end="145:62"><expr pos:start="145:48" pos:end="145:62"><name pos:start="145:48" pos:end="145:62"><name pos:start="145:48" pos:end="145:50">map</name><index pos:start="145:51" pos:end="145:62">[<expr pos:start="145:52" pos:end="145:61"><name pos:start="145:52" pos:end="145:61">VE_SYSREGS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:32">/* VE_SP810: not modelled */</comment>

    <comment type="block" pos:start="151:5" pos:end="151:36">/* VE_SERIALPCI: not modelled */</comment>



    <expr_stmt pos:start="155:5" pos:end="155:39"><expr pos:start="155:5" pos:end="155:38"><name pos:start="155:5" pos:end="155:9">pl041</name> <operator pos:start="155:11" pos:end="155:11">=</operator> <call pos:start="155:13" pos:end="155:38"><name pos:start="155:13" pos:end="155:23">qdev_create</name><argument_list pos:start="155:24" pos:end="155:38">(<argument pos:start="155:25" pos:end="155:28"><expr pos:start="155:25" pos:end="155:28"><name pos:start="155:25" pos:end="155:28">NULL</name></expr></argument>, <argument pos:start="155:31" pos:end="155:37"><expr pos:start="155:31" pos:end="155:37"><literal type="string" pos:start="155:31" pos:end="155:37">"pl041"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:54"><expr pos:start="157:5" pos:end="157:53"><call pos:start="157:5" pos:end="157:53"><name pos:start="157:5" pos:end="157:24">qdev_prop_set_uint32</name><argument_list pos:start="157:25" pos:end="157:53">(<argument pos:start="157:26" pos:end="157:30"><expr pos:start="157:26" pos:end="157:30"><name pos:start="157:26" pos:end="157:30">pl041</name></expr></argument>, <argument pos:start="157:33" pos:end="157:47"><expr pos:start="157:33" pos:end="157:47"><literal type="string" pos:start="157:33" pos:end="157:47">"nc_fifo_depth"</literal></expr></argument>, <argument pos:start="157:50" pos:end="157:52"><expr pos:start="157:50" pos:end="157:52"><literal type="number" pos:start="157:50" pos:end="157:52">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:28"><expr pos:start="159:5" pos:end="159:27"><call pos:start="159:5" pos:end="159:27"><name pos:start="159:5" pos:end="159:20">qdev_init_nofail</name><argument_list pos:start="159:21" pos:end="159:27">(<argument pos:start="159:22" pos:end="159:26"><expr pos:start="159:22" pos:end="159:26"><name pos:start="159:22" pos:end="159:26">pl041</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:61"><expr pos:start="161:5" pos:end="161:60"><call pos:start="161:5" pos:end="161:60"><name pos:start="161:5" pos:end="161:19">sysbus_mmio_map</name><argument_list pos:start="161:20" pos:end="161:60">(<argument pos:start="161:21" pos:end="161:41"><expr pos:start="161:21" pos:end="161:41"><call pos:start="161:21" pos:end="161:41"><name pos:start="161:21" pos:end="161:34">SYS_BUS_DEVICE</name><argument_list pos:start="161:35" pos:end="161:41">(<argument pos:start="161:36" pos:end="161:40"><expr pos:start="161:36" pos:end="161:40"><name pos:start="161:36" pos:end="161:40">pl041</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="161:44" pos:end="161:44"><expr pos:start="161:44" pos:end="161:44"><literal type="number" pos:start="161:44" pos:end="161:44">0</literal></expr></argument>, <argument pos:start="161:47" pos:end="161:59"><expr pos:start="161:47" pos:end="161:59"><name pos:start="161:47" pos:end="161:59"><name pos:start="161:47" pos:end="161:49">map</name><index pos:start="161:50" pos:end="161:59">[<expr pos:start="161:51" pos:end="161:58"><name pos:start="161:51" pos:end="161:58">VE_PL041</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:58"><expr pos:start="163:5" pos:end="163:57"><call pos:start="163:5" pos:end="163:57"><name pos:start="163:5" pos:end="163:22">sysbus_connect_irq</name><argument_list pos:start="163:23" pos:end="163:57">(<argument pos:start="163:24" pos:end="163:44"><expr pos:start="163:24" pos:end="163:44"><call pos:start="163:24" pos:end="163:44"><name pos:start="163:24" pos:end="163:37">SYS_BUS_DEVICE</name><argument_list pos:start="163:38" pos:end="163:44">(<argument pos:start="163:39" pos:end="163:43"><expr pos:start="163:39" pos:end="163:43"><name pos:start="163:39" pos:end="163:43">pl041</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:47" pos:end="163:47"><expr pos:start="163:47" pos:end="163:47"><literal type="number" pos:start="163:47" pos:end="163:47">0</literal></expr></argument>, <argument pos:start="163:50" pos:end="163:56"><expr pos:start="163:50" pos:end="163:56"><name pos:start="163:50" pos:end="163:56"><name pos:start="163:50" pos:end="163:52">pic</name><index pos:start="163:53" pos:end="163:56">[<expr pos:start="163:54" pos:end="163:55"><literal type="number" pos:start="163:54" pos:end="163:55">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:78"><expr pos:start="167:5" pos:end="167:77"><name pos:start="167:5" pos:end="167:7">dev</name> <operator pos:start="167:9" pos:end="167:9">=</operator> <call pos:start="167:11" pos:end="167:77"><name pos:start="167:11" pos:end="167:31">sysbus_create_varargs</name><argument_list pos:start="167:32" pos:end="167:77">(<argument pos:start="167:33" pos:end="167:39"><expr pos:start="167:33" pos:end="167:39"><literal type="string" pos:start="167:33" pos:end="167:39">"pl181"</literal></expr></argument>, <argument pos:start="167:42" pos:end="167:53"><expr pos:start="167:42" pos:end="167:53"><name pos:start="167:42" pos:end="167:53"><name pos:start="167:42" pos:end="167:44">map</name><index pos:start="167:45" pos:end="167:53">[<expr pos:start="167:46" pos:end="167:52"><name pos:start="167:46" pos:end="167:52">VE_MMCI</name></expr>]</index></name></expr></argument>, <argument pos:start="167:56" pos:end="167:61"><expr pos:start="167:56" pos:end="167:61"><name pos:start="167:56" pos:end="167:61"><name pos:start="167:56" pos:end="167:58">pic</name><index pos:start="167:59" pos:end="167:61">[<expr pos:start="167:60" pos:end="167:60"><literal type="number" pos:start="167:60" pos:end="167:60">9</literal></expr>]</index></name></expr></argument>, <argument pos:start="167:64" pos:end="167:70"><expr pos:start="167:64" pos:end="167:70"><name pos:start="167:64" pos:end="167:70"><name pos:start="167:64" pos:end="167:66">pic</name><index pos:start="167:67" pos:end="167:70">[<expr pos:start="167:68" pos:end="167:69"><literal type="number" pos:start="167:68" pos:end="167:69">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="167:73" pos:end="167:76"><expr pos:start="167:73" pos:end="167:76"><name pos:start="167:73" pos:end="167:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="169:5" pos:end="169:55">/* Wire up MMC card detect and read-only signals */</comment>

    <expr_stmt pos:start="171:5" pos:end="173:79"><expr pos:start="171:5" pos:end="173:78"><call pos:start="171:5" pos:end="173:78"><name pos:start="171:5" pos:end="171:25">qdev_connect_gpio_out</name><argument_list pos:start="171:26" pos:end="173:78">(<argument pos:start="171:27" pos:end="171:29"><expr pos:start="171:27" pos:end="171:29"><name pos:start="171:27" pos:end="171:29">dev</name></expr></argument>, <argument pos:start="171:32" pos:end="171:32"><expr pos:start="171:32" pos:end="171:32"><literal type="number" pos:start="171:32" pos:end="171:32">0</literal></expr></argument>,

                          <argument pos:start="173:27" pos:end="173:77"><expr pos:start="173:27" pos:end="173:77"><call pos:start="173:27" pos:end="173:77"><name pos:start="173:27" pos:end="173:42">qdev_get_gpio_in</name><argument_list pos:start="173:43" pos:end="173:77">(<argument pos:start="173:44" pos:end="173:49"><expr pos:start="173:44" pos:end="173:49"><name pos:start="173:44" pos:end="173:49">sysctl</name></expr></argument>, <argument pos:start="173:52" pos:end="173:76"><expr pos:start="173:52" pos:end="173:76"><name pos:start="173:52" pos:end="173:76">ARM_SYSCTL_GPIO_MMC_WPROT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="177:80"><expr pos:start="175:5" pos:end="177:79"><call pos:start="175:5" pos:end="177:79"><name pos:start="175:5" pos:end="175:25">qdev_connect_gpio_out</name><argument_list pos:start="175:26" pos:end="177:79">(<argument pos:start="175:27" pos:end="175:29"><expr pos:start="175:27" pos:end="175:29"><name pos:start="175:27" pos:end="175:29">dev</name></expr></argument>, <argument pos:start="175:32" pos:end="175:32"><expr pos:start="175:32" pos:end="175:32"><literal type="number" pos:start="175:32" pos:end="175:32">1</literal></expr></argument>,

                          <argument pos:start="177:27" pos:end="177:78"><expr pos:start="177:27" pos:end="177:78"><call pos:start="177:27" pos:end="177:78"><name pos:start="177:27" pos:end="177:42">qdev_get_gpio_in</name><argument_list pos:start="177:43" pos:end="177:78">(<argument pos:start="177:44" pos:end="177:49"><expr pos:start="177:44" pos:end="177:49"><name pos:start="177:44" pos:end="177:49">sysctl</name></expr></argument>, <argument pos:start="177:52" pos:end="177:77"><expr pos:start="177:52" pos:end="177:77"><name pos:start="177:52" pos:end="177:77">ARM_SYSCTL_GPIO_MMC_CARDIN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:66"><expr pos:start="181:5" pos:end="181:65"><call pos:start="181:5" pos:end="181:65"><name pos:start="181:5" pos:end="181:24">sysbus_create_simple</name><argument_list pos:start="181:25" pos:end="181:65">(<argument pos:start="181:26" pos:end="181:41"><expr pos:start="181:26" pos:end="181:41"><literal type="string" pos:start="181:26" pos:end="181:41">"pl050_keyboard"</literal></expr></argument>, <argument pos:start="181:44" pos:end="181:55"><expr pos:start="181:44" pos:end="181:55"><name pos:start="181:44" pos:end="181:55"><name pos:start="181:44" pos:end="181:46">map</name><index pos:start="181:47" pos:end="181:55">[<expr pos:start="181:48" pos:end="181:54"><name pos:start="181:48" pos:end="181:54">VE_KMI0</name></expr>]</index></name></expr></argument>, <argument pos:start="181:58" pos:end="181:64"><expr pos:start="181:58" pos:end="181:64"><name pos:start="181:58" pos:end="181:64"><name pos:start="181:58" pos:end="181:60">pic</name><index pos:start="181:61" pos:end="181:64">[<expr pos:start="181:62" pos:end="181:63"><literal type="number" pos:start="181:62" pos:end="181:63">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:63"><expr pos:start="183:5" pos:end="183:62"><call pos:start="183:5" pos:end="183:62"><name pos:start="183:5" pos:end="183:24">sysbus_create_simple</name><argument_list pos:start="183:25" pos:end="183:62">(<argument pos:start="183:26" pos:end="183:38"><expr pos:start="183:26" pos:end="183:38"><literal type="string" pos:start="183:26" pos:end="183:38">"pl050_mouse"</literal></expr></argument>, <argument pos:start="183:41" pos:end="183:52"><expr pos:start="183:41" pos:end="183:52"><name pos:start="183:41" pos:end="183:52"><name pos:start="183:41" pos:end="183:43">map</name><index pos:start="183:44" pos:end="183:52">[<expr pos:start="183:45" pos:end="183:51"><name pos:start="183:45" pos:end="183:51">VE_KMI1</name></expr>]</index></name></expr></argument>, <argument pos:start="183:55" pos:end="183:61"><expr pos:start="183:55" pos:end="183:61"><name pos:start="183:55" pos:end="183:61"><name pos:start="183:55" pos:end="183:57">pic</name><index pos:start="183:58" pos:end="183:61">[<expr pos:start="183:59" pos:end="183:60"><literal type="number" pos:start="183:59" pos:end="183:60">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:57"><expr pos:start="187:5" pos:end="187:56"><call pos:start="187:5" pos:end="187:56"><name pos:start="187:5" pos:end="187:24">sysbus_create_simple</name><argument_list pos:start="187:25" pos:end="187:56">(<argument pos:start="187:26" pos:end="187:32"><expr pos:start="187:26" pos:end="187:32"><literal type="string" pos:start="187:26" pos:end="187:32">"pl011"</literal></expr></argument>, <argument pos:start="187:35" pos:end="187:47"><expr pos:start="187:35" pos:end="187:47"><name pos:start="187:35" pos:end="187:47"><name pos:start="187:35" pos:end="187:37">map</name><index pos:start="187:38" pos:end="187:47">[<expr pos:start="187:39" pos:end="187:46"><name pos:start="187:39" pos:end="187:46">VE_UART0</name></expr>]</index></name></expr></argument>, <argument pos:start="187:50" pos:end="187:55"><expr pos:start="187:50" pos:end="187:55"><name pos:start="187:50" pos:end="187:55"><name pos:start="187:50" pos:end="187:52">pic</name><index pos:start="187:53" pos:end="187:55">[<expr pos:start="187:54" pos:end="187:54"><literal type="number" pos:start="187:54" pos:end="187:54">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:57"><expr pos:start="189:5" pos:end="189:56"><call pos:start="189:5" pos:end="189:56"><name pos:start="189:5" pos:end="189:24">sysbus_create_simple</name><argument_list pos:start="189:25" pos:end="189:56">(<argument pos:start="189:26" pos:end="189:32"><expr pos:start="189:26" pos:end="189:32"><literal type="string" pos:start="189:26" pos:end="189:32">"pl011"</literal></expr></argument>, <argument pos:start="189:35" pos:end="189:47"><expr pos:start="189:35" pos:end="189:47"><name pos:start="189:35" pos:end="189:47"><name pos:start="189:35" pos:end="189:37">map</name><index pos:start="189:38" pos:end="189:47">[<expr pos:start="189:39" pos:end="189:46"><name pos:start="189:39" pos:end="189:46">VE_UART1</name></expr>]</index></name></expr></argument>, <argument pos:start="189:50" pos:end="189:55"><expr pos:start="189:50" pos:end="189:55"><name pos:start="189:50" pos:end="189:55"><name pos:start="189:50" pos:end="189:52">pic</name><index pos:start="189:53" pos:end="189:55">[<expr pos:start="189:54" pos:end="189:54"><literal type="number" pos:start="189:54" pos:end="189:54">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:57"><expr pos:start="191:5" pos:end="191:56"><call pos:start="191:5" pos:end="191:56"><name pos:start="191:5" pos:end="191:24">sysbus_create_simple</name><argument_list pos:start="191:25" pos:end="191:56">(<argument pos:start="191:26" pos:end="191:32"><expr pos:start="191:26" pos:end="191:32"><literal type="string" pos:start="191:26" pos:end="191:32">"pl011"</literal></expr></argument>, <argument pos:start="191:35" pos:end="191:47"><expr pos:start="191:35" pos:end="191:47"><name pos:start="191:35" pos:end="191:47"><name pos:start="191:35" pos:end="191:37">map</name><index pos:start="191:38" pos:end="191:47">[<expr pos:start="191:39" pos:end="191:46"><name pos:start="191:39" pos:end="191:46">VE_UART2</name></expr>]</index></name></expr></argument>, <argument pos:start="191:50" pos:end="191:55"><expr pos:start="191:50" pos:end="191:55"><name pos:start="191:50" pos:end="191:55"><name pos:start="191:50" pos:end="191:52">pic</name><index pos:start="191:53" pos:end="191:55">[<expr pos:start="191:54" pos:end="191:54"><literal type="number" pos:start="191:54" pos:end="191:54">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:57"><expr pos:start="193:5" pos:end="193:56"><call pos:start="193:5" pos:end="193:56"><name pos:start="193:5" pos:end="193:24">sysbus_create_simple</name><argument_list pos:start="193:25" pos:end="193:56">(<argument pos:start="193:26" pos:end="193:32"><expr pos:start="193:26" pos:end="193:32"><literal type="string" pos:start="193:26" pos:end="193:32">"pl011"</literal></expr></argument>, <argument pos:start="193:35" pos:end="193:47"><expr pos:start="193:35" pos:end="193:47"><name pos:start="193:35" pos:end="193:47"><name pos:start="193:35" pos:end="193:37">map</name><index pos:start="193:38" pos:end="193:47">[<expr pos:start="193:39" pos:end="193:46"><name pos:start="193:39" pos:end="193:46">VE_UART3</name></expr>]</index></name></expr></argument>, <argument pos:start="193:50" pos:end="193:55"><expr pos:start="193:50" pos:end="193:55"><name pos:start="193:50" pos:end="193:55"><name pos:start="193:50" pos:end="193:52">pic</name><index pos:start="193:53" pos:end="193:55">[<expr pos:start="193:54" pos:end="193:54"><literal type="number" pos:start="193:54" pos:end="193:54">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:59"><expr pos:start="197:5" pos:end="197:58"><call pos:start="197:5" pos:end="197:58"><name pos:start="197:5" pos:end="197:24">sysbus_create_simple</name><argument_list pos:start="197:25" pos:end="197:58">(<argument pos:start="197:26" pos:end="197:32"><expr pos:start="197:26" pos:end="197:32"><literal type="string" pos:start="197:26" pos:end="197:32">"sp804"</literal></expr></argument>, <argument pos:start="197:35" pos:end="197:49"><expr pos:start="197:35" pos:end="197:49"><name pos:start="197:35" pos:end="197:49"><name pos:start="197:35" pos:end="197:37">map</name><index pos:start="197:38" pos:end="197:49">[<expr pos:start="197:39" pos:end="197:48"><name pos:start="197:39" pos:end="197:48">VE_TIMER01</name></expr>]</index></name></expr></argument>, <argument pos:start="197:52" pos:end="197:57"><expr pos:start="197:52" pos:end="197:57"><name pos:start="197:52" pos:end="197:57"><name pos:start="197:52" pos:end="197:54">pic</name><index pos:start="197:55" pos:end="197:57">[<expr pos:start="197:56" pos:end="197:56"><literal type="number" pos:start="197:56" pos:end="197:56">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:59"><expr pos:start="199:5" pos:end="199:58"><call pos:start="199:5" pos:end="199:58"><name pos:start="199:5" pos:end="199:24">sysbus_create_simple</name><argument_list pos:start="199:25" pos:end="199:58">(<argument pos:start="199:26" pos:end="199:32"><expr pos:start="199:26" pos:end="199:32"><literal type="string" pos:start="199:26" pos:end="199:32">"sp804"</literal></expr></argument>, <argument pos:start="199:35" pos:end="199:49"><expr pos:start="199:35" pos:end="199:49"><name pos:start="199:35" pos:end="199:49"><name pos:start="199:35" pos:end="199:37">map</name><index pos:start="199:38" pos:end="199:49">[<expr pos:start="199:39" pos:end="199:48"><name pos:start="199:39" pos:end="199:48">VE_TIMER23</name></expr>]</index></name></expr></argument>, <argument pos:start="199:52" pos:end="199:57"><expr pos:start="199:52" pos:end="199:57"><name pos:start="199:52" pos:end="199:57"><name pos:start="199:52" pos:end="199:54">pic</name><index pos:start="199:55" pos:end="199:57">[<expr pos:start="199:56" pos:end="199:56"><literal type="number" pos:start="199:56" pos:end="199:56">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="203:5" pos:end="203:36">/* VE_SERIALDVI: not modelled */</comment>



    <expr_stmt pos:start="207:5" pos:end="207:55"><expr pos:start="207:5" pos:end="207:54"><call pos:start="207:5" pos:end="207:54"><name pos:start="207:5" pos:end="207:24">sysbus_create_simple</name><argument_list pos:start="207:25" pos:end="207:54">(<argument pos:start="207:26" pos:end="207:32"><expr pos:start="207:26" pos:end="207:32"><literal type="string" pos:start="207:26" pos:end="207:32">"pl031"</literal></expr></argument>, <argument pos:start="207:35" pos:end="207:45"><expr pos:start="207:35" pos:end="207:45"><name pos:start="207:35" pos:end="207:45"><name pos:start="207:35" pos:end="207:37">map</name><index pos:start="207:38" pos:end="207:45">[<expr pos:start="207:39" pos:end="207:44"><name pos:start="207:39" pos:end="207:44">VE_RTC</name></expr>]</index></name></expr></argument>, <argument pos:start="207:48" pos:end="207:53"><expr pos:start="207:48" pos:end="207:53"><name pos:start="207:48" pos:end="207:53"><name pos:start="207:48" pos:end="207:50">pic</name><index pos:start="207:51" pos:end="207:53">[<expr pos:start="207:52" pos:end="207:52"><literal type="number" pos:start="207:52" pos:end="207:52">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="207:57" pos:end="207:65">/* RTC */</comment>



    <comment type="block" pos:start="211:5" pos:end="211:39">/* VE_COMPACTFLASH: not modelled */</comment>



    <expr_stmt pos:start="215:5" pos:end="215:57"><expr pos:start="215:5" pos:end="215:56"><call pos:start="215:5" pos:end="215:56"><name pos:start="215:5" pos:end="215:24">sysbus_create_simple</name><argument_list pos:start="215:25" pos:end="215:56">(<argument pos:start="215:26" pos:end="215:32"><expr pos:start="215:26" pos:end="215:32"><literal type="string" pos:start="215:26" pos:end="215:32">"pl111"</literal></expr></argument>, <argument pos:start="215:35" pos:end="215:46"><expr pos:start="215:35" pos:end="215:46"><name pos:start="215:35" pos:end="215:46"><name pos:start="215:35" pos:end="215:37">map</name><index pos:start="215:38" pos:end="215:46">[<expr pos:start="215:39" pos:end="215:45"><name pos:start="215:39" pos:end="215:45">VE_CLCD</name></expr>]</index></name></expr></argument>, <argument pos:start="215:49" pos:end="215:55"><expr pos:start="215:49" pos:end="215:55"><name pos:start="215:49" pos:end="215:55"><name pos:start="215:49" pos:end="215:51">pic</name><index pos:start="215:52" pos:end="215:55">[<expr pos:start="215:53" pos:end="215:54"><literal type="number" pos:start="215:53" pos:end="215:54">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:38"><expr pos:start="219:5" pos:end="219:37"><name pos:start="219:5" pos:end="219:9">dinfo</name> <operator pos:start="219:11" pos:end="219:11">=</operator> <call pos:start="219:13" pos:end="219:37"><name pos:start="219:13" pos:end="219:26">drive_get_next</name><argument_list pos:start="219:27" pos:end="219:37">(<argument pos:start="219:28" pos:end="219:36"><expr pos:start="219:28" pos:end="219:36"><name pos:start="219:28" pos:end="219:36">IF_PFLASH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="223:46"><expr pos:start="221:5" pos:end="223:45"><name pos:start="221:5" pos:end="221:11">pflash0</name> <operator pos:start="221:13" pos:end="221:13">=</operator> <call pos:start="221:15" pos:end="223:45"><name pos:start="221:15" pos:end="221:38">ve_pflash_cfi01_register</name><argument_list pos:start="221:39" pos:end="223:45">(<argument pos:start="221:40" pos:end="221:56"><expr pos:start="221:40" pos:end="221:56"><name pos:start="221:40" pos:end="221:56"><name pos:start="221:40" pos:end="221:42">map</name><index pos:start="221:43" pos:end="221:56">[<expr pos:start="221:44" pos:end="221:55"><name pos:start="221:44" pos:end="221:55">VE_NORFLASH0</name></expr>]</index></name></expr></argument>, <argument pos:start="221:59" pos:end="221:75"><expr pos:start="221:59" pos:end="221:75"><literal type="string" pos:start="221:59" pos:end="221:75">"vexpress.flash0"</literal></expr></argument>,

                                       <argument pos:start="223:40" pos:end="223:44"><expr pos:start="223:40" pos:end="223:44"><name pos:start="223:40" pos:end="223:44">dinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="231:5"><if pos:start="225:5" pos:end="231:5">if <condition pos:start="225:8" pos:end="225:17">(<expr pos:start="225:9" pos:end="225:16"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:16">pflash0</name></expr>)</condition> <block pos:start="225:19" pos:end="231:5">{<block_content pos:start="227:9" pos:end="229:16">

        <expr_stmt pos:start="227:9" pos:end="227:66"><expr pos:start="227:9" pos:end="227:65"><call pos:start="227:9" pos:end="227:65"><name pos:start="227:9" pos:end="227:15">fprintf</name><argument_list pos:start="227:16" pos:end="227:65">(<argument pos:start="227:17" pos:end="227:22"><expr pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:22">stderr</name></expr></argument>, <argument pos:start="227:25" pos:end="227:64"><expr pos:start="227:25" pos:end="227:64"><literal type="string" pos:start="227:25" pos:end="227:64">"vexpress: error registering flash 0.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:16"><expr pos:start="229:9" pos:end="229:15"><call pos:start="229:9" pos:end="229:15"><name pos:start="229:9" pos:end="229:12">exit</name><argument_list pos:start="229:13" pos:end="229:15">(<argument pos:start="229:14" pos:end="229:14"><expr pos:start="229:14" pos:end="229:14"><literal type="number" pos:start="229:14" pos:end="229:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="247:5"><if pos:start="235:5" pos:end="247:5">if <condition pos:start="235:8" pos:end="235:36">(<expr pos:start="235:9" pos:end="235:35"><name pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:11">map</name><index pos:start="235:12" pos:end="235:29">[<expr pos:start="235:13" pos:end="235:28"><name pos:start="235:13" pos:end="235:28">VE_NORFLASHALIAS</name></expr>]</index></name> <operator pos:start="235:31" pos:end="235:32">!=</operator> <operator pos:start="235:34" pos:end="235:34">-</operator><literal type="number" pos:start="235:35" pos:end="235:35">1</literal></expr>)</condition> <block pos:start="235:38" pos:end="247:5">{<block_content pos:start="239:9" pos:end="245:79">

        <comment type="block" pos:start="237:9" pos:end="237:53">/* Map flash 0 as an alias into low memory */</comment>

        <expr_stmt pos:start="239:9" pos:end="239:71"><expr pos:start="239:9" pos:end="239:70"><name pos:start="239:9" pos:end="239:17">flash0mem</name> <operator pos:start="239:19" pos:end="239:19">=</operator> <call pos:start="239:21" pos:end="239:70"><name pos:start="239:21" pos:end="239:42">sysbus_mmio_get_region</name><argument_list pos:start="239:43" pos:end="239:70">(<argument pos:start="239:44" pos:end="239:66"><expr pos:start="239:44" pos:end="239:66"><call pos:start="239:44" pos:end="239:66"><name pos:start="239:44" pos:end="239:57">SYS_BUS_DEVICE</name><argument_list pos:start="239:58" pos:end="239:66">(<argument pos:start="239:59" pos:end="239:65"><expr pos:start="239:59" pos:end="239:65"><name pos:start="239:59" pos:end="239:65">pflash0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="239:69" pos:end="239:69"><expr pos:start="239:69" pos:end="239:69"><literal type="number" pos:start="239:69" pos:end="239:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="243:68"><expr pos:start="241:9" pos:end="243:67"><call pos:start="241:9" pos:end="243:67"><name pos:start="241:9" pos:end="241:32">memory_region_init_alias</name><argument_list pos:start="241:33" pos:end="243:67">(<argument pos:start="241:34" pos:end="241:43"><expr pos:start="241:34" pos:end="241:43"><name pos:start="241:34" pos:end="241:43">flashalias</name></expr></argument>, <argument pos:start="241:46" pos:end="241:49"><expr pos:start="241:46" pos:end="241:49"><name pos:start="241:46" pos:end="241:49">NULL</name></expr></argument>, <argument pos:start="241:52" pos:end="241:72"><expr pos:start="241:52" pos:end="241:72"><literal type="string" pos:start="241:52" pos:end="241:72">"vexpress.flashalias"</literal></expr></argument>,

                                 <argument pos:start="243:34" pos:end="243:42"><expr pos:start="243:34" pos:end="243:42"><name pos:start="243:34" pos:end="243:42">flash0mem</name></expr></argument>, <argument pos:start="243:45" pos:end="243:45"><expr pos:start="243:45" pos:end="243:45"><literal type="number" pos:start="243:45" pos:end="243:45">0</literal></expr></argument>, <argument pos:start="243:48" pos:end="243:66"><expr pos:start="243:48" pos:end="243:66"><name pos:start="243:48" pos:end="243:66">VEXPRESS_FLASH_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:79"><expr pos:start="245:9" pos:end="245:78"><call pos:start="245:9" pos:end="245:78"><name pos:start="245:9" pos:end="245:35">memory_region_add_subregion</name><argument_list pos:start="245:36" pos:end="245:78">(<argument pos:start="245:37" pos:end="245:42"><expr pos:start="245:37" pos:end="245:42"><name pos:start="245:37" pos:end="245:42">sysmem</name></expr></argument>, <argument pos:start="245:45" pos:end="245:65"><expr pos:start="245:45" pos:end="245:65"><name pos:start="245:45" pos:end="245:65"><name pos:start="245:45" pos:end="245:47">map</name><index pos:start="245:48" pos:end="245:65">[<expr pos:start="245:49" pos:end="245:64"><name pos:start="245:49" pos:end="245:64">VE_NORFLASHALIAS</name></expr>]</index></name></expr></argument>, <argument pos:start="245:68" pos:end="245:77"><expr pos:start="245:68" pos:end="245:77"><name pos:start="245:68" pos:end="245:77">flashalias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:38"><expr pos:start="251:5" pos:end="251:37"><name pos:start="251:5" pos:end="251:9">dinfo</name> <operator pos:start="251:11" pos:end="251:11">=</operator> <call pos:start="251:13" pos:end="251:37"><name pos:start="251:13" pos:end="251:26">drive_get_next</name><argument_list pos:start="251:27" pos:end="251:37">(<argument pos:start="251:28" pos:end="251:36"><expr pos:start="251:28" pos:end="251:36"><name pos:start="251:28" pos:end="251:36">IF_PFLASH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="261:5"><if pos:start="253:5" pos:end="261:5">if <condition pos:start="253:8" pos:end="255:41">(<expr pos:start="253:9" pos:end="255:40"><operator pos:start="253:9" pos:end="253:9">!</operator><call pos:start="253:10" pos:end="255:40"><name pos:start="253:10" pos:end="253:33">ve_pflash_cfi01_register</name><argument_list pos:start="253:34" pos:end="255:40">(<argument pos:start="253:35" pos:end="253:51"><expr pos:start="253:35" pos:end="253:51"><name pos:start="253:35" pos:end="253:51"><name pos:start="253:35" pos:end="253:37">map</name><index pos:start="253:38" pos:end="253:51">[<expr pos:start="253:39" pos:end="253:50"><name pos:start="253:39" pos:end="253:50">VE_NORFLASH1</name></expr>]</index></name></expr></argument>, <argument pos:start="253:54" pos:end="253:70"><expr pos:start="253:54" pos:end="253:70"><literal type="string" pos:start="253:54" pos:end="253:70">"vexpress.flash1"</literal></expr></argument>,

                                  <argument pos:start="255:35" pos:end="255:39"><expr pos:start="255:35" pos:end="255:39"><name pos:start="255:35" pos:end="255:39">dinfo</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:43" pos:end="261:5">{<block_content pos:start="257:9" pos:end="259:16">

        <expr_stmt pos:start="257:9" pos:end="257:66"><expr pos:start="257:9" pos:end="257:65"><call pos:start="257:9" pos:end="257:65"><name pos:start="257:9" pos:end="257:15">fprintf</name><argument_list pos:start="257:16" pos:end="257:65">(<argument pos:start="257:17" pos:end="257:22"><expr pos:start="257:17" pos:end="257:22"><name pos:start="257:17" pos:end="257:22">stderr</name></expr></argument>, <argument pos:start="257:25" pos:end="257:64"><expr pos:start="257:25" pos:end="257:64"><literal type="string" pos:start="257:25" pos:end="257:64">"vexpress: error registering flash 1.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:16"><expr pos:start="259:9" pos:end="259:15"><call pos:start="259:9" pos:end="259:15"><name pos:start="259:9" pos:end="259:12">exit</name><argument_list pos:start="259:13" pos:end="259:15">(<argument pos:start="259:14" pos:end="259:14"><expr pos:start="259:14" pos:end="259:14"><literal type="number" pos:start="259:14" pos:end="259:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:26"><expr pos:start="265:5" pos:end="265:25"><name pos:start="265:5" pos:end="265:13">sram_size</name> <operator pos:start="265:15" pos:end="265:15">=</operator> <literal type="number" pos:start="265:17" pos:end="265:25">0x2000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="269:41"><expr pos:start="267:5" pos:end="269:40"><call pos:start="267:5" pos:end="269:40"><name pos:start="267:5" pos:end="267:26">memory_region_init_ram</name><argument_list pos:start="267:27" pos:end="269:40">(<argument pos:start="267:28" pos:end="267:31"><expr pos:start="267:28" pos:end="267:31"><name pos:start="267:28" pos:end="267:31">sram</name></expr></argument>, <argument pos:start="267:34" pos:end="267:37"><expr pos:start="267:34" pos:end="267:37"><name pos:start="267:34" pos:end="267:37">NULL</name></expr></argument>, <argument pos:start="267:40" pos:end="267:54"><expr pos:start="267:40" pos:end="267:54"><literal type="string" pos:start="267:40" pos:end="267:54">"vexpress.sram"</literal></expr></argument>, <argument pos:start="267:57" pos:end="267:65"><expr pos:start="267:57" pos:end="267:65"><name pos:start="267:57" pos:end="267:65">sram_size</name></expr></argument>,

                           <argument pos:start="269:28" pos:end="269:39"><expr pos:start="269:28" pos:end="269:39"><operator pos:start="269:28" pos:end="269:28">&amp;</operator><name pos:start="269:29" pos:end="269:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:38"><expr pos:start="271:5" pos:end="271:37"><call pos:start="271:5" pos:end="271:37"><name pos:start="271:5" pos:end="271:31">vmstate_register_ram_global</name><argument_list pos:start="271:32" pos:end="271:37">(<argument pos:start="271:33" pos:end="271:36"><expr pos:start="271:33" pos:end="271:36"><name pos:start="271:33" pos:end="271:36">sram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:60"><expr pos:start="273:5" pos:end="273:59"><call pos:start="273:5" pos:end="273:59"><name pos:start="273:5" pos:end="273:31">memory_region_add_subregion</name><argument_list pos:start="273:32" pos:end="273:59">(<argument pos:start="273:33" pos:end="273:38"><expr pos:start="273:33" pos:end="273:38"><name pos:start="273:33" pos:end="273:38">sysmem</name></expr></argument>, <argument pos:start="273:41" pos:end="273:52"><expr pos:start="273:41" pos:end="273:52"><name pos:start="273:41" pos:end="273:52"><name pos:start="273:41" pos:end="273:43">map</name><index pos:start="273:44" pos:end="273:52">[<expr pos:start="273:45" pos:end="273:51"><name pos:start="273:45" pos:end="273:51">VE_SRAM</name></expr>]</index></name></expr></argument>, <argument pos:start="273:55" pos:end="273:58"><expr pos:start="273:55" pos:end="273:58"><name pos:start="273:55" pos:end="273:58">sram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:25"><expr pos:start="277:5" pos:end="277:24"><name pos:start="277:5" pos:end="277:13">vram_size</name> <operator pos:start="277:15" pos:end="277:15">=</operator> <literal type="number" pos:start="277:17" pos:end="277:24">0x800000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="281:41"><expr pos:start="279:5" pos:end="281:40"><call pos:start="279:5" pos:end="281:40"><name pos:start="279:5" pos:end="279:26">memory_region_init_ram</name><argument_list pos:start="279:27" pos:end="281:40">(<argument pos:start="279:28" pos:end="279:31"><expr pos:start="279:28" pos:end="279:31"><name pos:start="279:28" pos:end="279:31">vram</name></expr></argument>, <argument pos:start="279:34" pos:end="279:37"><expr pos:start="279:34" pos:end="279:37"><name pos:start="279:34" pos:end="279:37">NULL</name></expr></argument>, <argument pos:start="279:40" pos:end="279:54"><expr pos:start="279:40" pos:end="279:54"><literal type="string" pos:start="279:40" pos:end="279:54">"vexpress.vram"</literal></expr></argument>, <argument pos:start="279:57" pos:end="279:65"><expr pos:start="279:57" pos:end="279:65"><name pos:start="279:57" pos:end="279:65">vram_size</name></expr></argument>,

                           <argument pos:start="281:28" pos:end="281:39"><expr pos:start="281:28" pos:end="281:39"><operator pos:start="281:28" pos:end="281:28">&amp;</operator><name pos:start="281:29" pos:end="281:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:38"><expr pos:start="283:5" pos:end="283:37"><call pos:start="283:5" pos:end="283:37"><name pos:start="283:5" pos:end="283:31">vmstate_register_ram_global</name><argument_list pos:start="283:32" pos:end="283:37">(<argument pos:start="283:33" pos:end="283:36"><expr pos:start="283:33" pos:end="283:36"><name pos:start="283:33" pos:end="283:36">vram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:64"><expr pos:start="285:5" pos:end="285:63"><call pos:start="285:5" pos:end="285:63"><name pos:start="285:5" pos:end="285:31">memory_region_add_subregion</name><argument_list pos:start="285:32" pos:end="285:63">(<argument pos:start="285:33" pos:end="285:38"><expr pos:start="285:33" pos:end="285:38"><name pos:start="285:33" pos:end="285:38">sysmem</name></expr></argument>, <argument pos:start="285:41" pos:end="285:56"><expr pos:start="285:41" pos:end="285:56"><name pos:start="285:41" pos:end="285:56"><name pos:start="285:41" pos:end="285:43">map</name><index pos:start="285:44" pos:end="285:56">[<expr pos:start="285:45" pos:end="285:55"><name pos:start="285:45" pos:end="285:55">VE_VIDEORAM</name></expr>]</index></name></expr></argument>, <argument pos:start="285:59" pos:end="285:62"><expr pos:start="285:59" pos:end="285:62"><name pos:start="285:59" pos:end="285:62">vram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="289:5" pos:end="289:37">/* 0x4e000000 LAN9118 Ethernet */</comment>

    <if_stmt pos:start="291:5" pos:end="295:5"><if pos:start="291:5" pos:end="295:5">if <condition pos:start="291:8" pos:end="291:25">(<expr pos:start="291:9" pos:end="291:24"><name pos:start="291:9" pos:end="291:19"><name pos:start="291:9" pos:end="291:16">nd_table</name><index pos:start="291:17" pos:end="291:19">[<expr pos:start="291:18" pos:end="291:18"><literal type="number" pos:start="291:18" pos:end="291:18">0</literal></expr>]</index></name><operator pos:start="291:20" pos:end="291:20">.</operator><name pos:start="291:21" pos:end="291:24">used</name></expr>)</condition> <block pos:start="291:27" pos:end="295:5">{<block_content pos:start="293:9" pos:end="293:62">

        <expr_stmt pos:start="293:9" pos:end="293:62"><expr pos:start="293:9" pos:end="293:61"><call pos:start="293:9" pos:end="293:61"><name pos:start="293:9" pos:end="293:20">lan9118_init</name><argument_list pos:start="293:21" pos:end="293:61">(<argument pos:start="293:22" pos:end="293:33"><expr pos:start="293:22" pos:end="293:33"><operator pos:start="293:22" pos:end="293:22">&amp;</operator><name pos:start="293:23" pos:end="293:33"><name pos:start="293:23" pos:end="293:30">nd_table</name><index pos:start="293:31" pos:end="293:33">[<expr pos:start="293:32" pos:end="293:32"><literal type="number" pos:start="293:32" pos:end="293:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="293:36" pos:end="293:51"><expr pos:start="293:36" pos:end="293:51"><name pos:start="293:36" pos:end="293:51"><name pos:start="293:36" pos:end="293:38">map</name><index pos:start="293:39" pos:end="293:51">[<expr pos:start="293:40" pos:end="293:50"><name pos:start="293:40" pos:end="293:50">VE_ETHERNET</name></expr>]</index></name></expr></argument>, <argument pos:start="293:54" pos:end="293:60"><expr pos:start="293:54" pos:end="293:60"><name pos:start="293:54" pos:end="293:60"><name pos:start="293:54" pos:end="293:56">pic</name><index pos:start="293:57" pos:end="293:60">[<expr pos:start="293:58" pos:end="293:59"><literal type="number" pos:start="293:58" pos:end="293:59">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="299:5" pos:end="299:30">/* VE_USB: not modelled */</comment>



    <comment type="block" pos:start="303:5" pos:end="303:33">/* VE_DAPROM: not modelled */</comment>



    <comment type="block" pos:start="307:5" pos:end="313:7">/* Create mmio transports, so the user can create virtio backends

     * (which will be automatically plugged in to the transports). If

     * no backend is created the transport will just sit harmlessly idle.

     */</comment>

    <for pos:start="315:5" pos:end="321:5">for <control pos:start="315:9" pos:end="315:47">(<init pos:start="315:10" pos:end="315:15"><expr pos:start="315:10" pos:end="315:14"><name pos:start="315:10" pos:end="315:10">i</name> <operator pos:start="315:12" pos:end="315:12">=</operator> <literal type="number" pos:start="315:14" pos:end="315:14">0</literal></expr>;</init> <condition pos:start="315:17" pos:end="315:42"><expr pos:start="315:17" pos:end="315:41"><name pos:start="315:17" pos:end="315:17">i</name> <operator pos:start="315:19" pos:end="315:19">&lt;</operator> <name pos:start="315:21" pos:end="315:41">NUM_VIRTIO_TRANSPORTS</name></expr>;</condition> <incr pos:start="315:44" pos:end="315:46"><expr pos:start="315:44" pos:end="315:46"><name pos:start="315:44" pos:end="315:44">i</name><operator pos:start="315:45" pos:end="315:46">++</operator></expr></incr>)</control> <block pos:start="315:49" pos:end="321:5">{<block_content pos:start="317:9" pos:end="319:42">

        <expr_stmt pos:start="317:9" pos:end="319:42"><expr pos:start="317:9" pos:end="319:41"><call pos:start="317:9" pos:end="319:41"><name pos:start="317:9" pos:end="317:28">sysbus_create_simple</name><argument_list pos:start="317:29" pos:end="319:41">(<argument pos:start="317:30" pos:end="317:42"><expr pos:start="317:30" pos:end="317:42"><literal type="string" pos:start="317:30" pos:end="317:42">"virtio-mmio"</literal></expr></argument>, <argument pos:start="317:45" pos:end="317:70"><expr pos:start="317:45" pos:end="317:70"><name pos:start="317:45" pos:end="317:58"><name pos:start="317:45" pos:end="317:47">map</name><index pos:start="317:48" pos:end="317:58">[<expr pos:start="317:49" pos:end="317:57"><name pos:start="317:49" pos:end="317:57">VE_VIRTIO</name></expr>]</index></name> <operator pos:start="317:60" pos:end="317:60">+</operator> <literal type="number" pos:start="317:62" pos:end="317:66">0x200</literal> <operator pos:start="317:68" pos:end="317:68">*</operator> <name pos:start="317:70" pos:end="317:70">i</name></expr></argument>,

                             <argument pos:start="319:30" pos:end="319:40"><expr pos:start="319:30" pos:end="319:40"><name pos:start="319:30" pos:end="319:40"><name pos:start="319:30" pos:end="319:32">pic</name><index pos:start="319:33" pos:end="319:40">[<expr pos:start="319:34" pos:end="319:39"><literal type="number" pos:start="319:34" pos:end="319:37">40</literal> <operator pos:start="319:37" pos:end="319:37">+</operator> <name pos:start="319:39" pos:end="319:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="325:5" pos:end="325:57"><expr pos:start="325:5" pos:end="325:56"><name pos:start="325:5" pos:end="325:36"><name pos:start="325:5" pos:end="325:17">daughterboard</name><operator pos:start="325:18" pos:end="325:19">-&gt;</operator><name pos:start="325:20" pos:end="325:27">bootinfo</name><operator pos:start="325:28" pos:end="325:28">.</operator><name pos:start="325:29" pos:end="325:36">ram_size</name></name> <operator pos:start="325:38" pos:end="325:38">=</operator> <name pos:start="325:40" pos:end="325:56"><name pos:start="325:40" pos:end="325:46">machine</name><operator pos:start="325:47" pos:end="325:48">-&gt;</operator><name pos:start="325:49" pos:end="325:56">ram_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:71"><expr pos:start="327:5" pos:end="327:70"><name pos:start="327:5" pos:end="327:43"><name pos:start="327:5" pos:end="327:17">daughterboard</name><operator pos:start="327:18" pos:end="327:19">-&gt;</operator><name pos:start="327:20" pos:end="327:27">bootinfo</name><operator pos:start="327:28" pos:end="327:28">.</operator><name pos:start="327:29" pos:end="327:43">kernel_filename</name></name> <operator pos:start="327:45" pos:end="327:45">=</operator> <name pos:start="327:47" pos:end="327:70"><name pos:start="327:47" pos:end="327:53">machine</name><operator pos:start="327:54" pos:end="327:55">-&gt;</operator><name pos:start="327:56" pos:end="327:70">kernel_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:69"><expr pos:start="329:5" pos:end="329:68"><name pos:start="329:5" pos:end="329:42"><name pos:start="329:5" pos:end="329:17">daughterboard</name><operator pos:start="329:18" pos:end="329:19">-&gt;</operator><name pos:start="329:20" pos:end="329:27">bootinfo</name><operator pos:start="329:28" pos:end="329:28">.</operator><name pos:start="329:29" pos:end="329:42">kernel_cmdline</name></name> <operator pos:start="329:44" pos:end="329:44">=</operator> <name pos:start="329:46" pos:end="329:68"><name pos:start="329:46" pos:end="329:52">machine</name><operator pos:start="329:53" pos:end="329:54">-&gt;</operator><name pos:start="329:55" pos:end="329:68">kernel_cmdline</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:71"><expr pos:start="331:5" pos:end="331:70"><name pos:start="331:5" pos:end="331:43"><name pos:start="331:5" pos:end="331:17">daughterboard</name><operator pos:start="331:18" pos:end="331:19">-&gt;</operator><name pos:start="331:20" pos:end="331:27">bootinfo</name><operator pos:start="331:28" pos:end="331:28">.</operator><name pos:start="331:29" pos:end="331:43">initrd_filename</name></name> <operator pos:start="331:45" pos:end="331:45">=</operator> <name pos:start="331:47" pos:end="331:70"><name pos:start="331:47" pos:end="331:53">machine</name><operator pos:start="331:54" pos:end="331:55">-&gt;</operator><name pos:start="331:56" pos:end="331:70">initrd_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:47"><expr pos:start="333:5" pos:end="333:46"><name pos:start="333:5" pos:end="333:35"><name pos:start="333:5" pos:end="333:17">daughterboard</name><operator pos:start="333:18" pos:end="333:19">-&gt;</operator><name pos:start="333:20" pos:end="333:27">bootinfo</name><operator pos:start="333:28" pos:end="333:28">.</operator><name pos:start="333:29" pos:end="333:35">nb_cpus</name></name> <operator pos:start="333:37" pos:end="333:37">=</operator> <name pos:start="333:39" pos:end="333:46">smp_cpus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:57"><expr pos:start="335:5" pos:end="335:56"><name pos:start="335:5" pos:end="335:36"><name pos:start="335:5" pos:end="335:17">daughterboard</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:27">bootinfo</name><operator pos:start="335:28" pos:end="335:28">.</operator><name pos:start="335:29" pos:end="335:36">board_id</name></name> <operator pos:start="335:38" pos:end="335:38">=</operator> <name pos:start="335:40" pos:end="335:56">VEXPRESS_BOARD_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:71"><expr pos:start="337:5" pos:end="337:70"><name pos:start="337:5" pos:end="337:40"><name pos:start="337:5" pos:end="337:17">daughterboard</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:27">bootinfo</name><operator pos:start="337:28" pos:end="337:28">.</operator><name pos:start="337:29" pos:end="337:40">loader_start</name></name> <operator pos:start="337:42" pos:end="337:42">=</operator> <name pos:start="337:44" pos:end="337:70"><name pos:start="337:44" pos:end="337:56">daughterboard</name><operator pos:start="337:57" pos:end="337:58">-&gt;</operator><name pos:start="337:59" pos:end="337:70">loader_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:60"><expr pos:start="339:5" pos:end="339:59"><name pos:start="339:5" pos:end="339:44"><name pos:start="339:5" pos:end="339:17">daughterboard</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:27">bootinfo</name><operator pos:start="339:28" pos:end="339:28">.</operator><name pos:start="339:29" pos:end="339:44">smp_loader_start</name></name> <operator pos:start="339:46" pos:end="339:46">=</operator> <name pos:start="339:48" pos:end="339:59"><name pos:start="339:48" pos:end="339:50">map</name><index pos:start="339:51" pos:end="339:59">[<expr pos:start="339:52" pos:end="339:58"><name pos:start="339:52" pos:end="339:58">VE_SRAM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:70"><expr pos:start="341:5" pos:end="341:69"><name pos:start="341:5" pos:end="341:44"><name pos:start="341:5" pos:end="341:17">daughterboard</name><operator pos:start="341:18" pos:end="341:19">-&gt;</operator><name pos:start="341:20" pos:end="341:27">bootinfo</name><operator pos:start="341:28" pos:end="341:28">.</operator><name pos:start="341:29" pos:end="341:44">smp_bootreg_addr</name></name> <operator pos:start="341:46" pos:end="341:46">=</operator> <name pos:start="341:48" pos:end="341:62"><name pos:start="341:48" pos:end="341:50">map</name><index pos:start="341:51" pos:end="341:62">[<expr pos:start="341:52" pos:end="341:61"><name pos:start="341:52" pos:end="341:61">VE_SYSREGS</name></expr>]</index></name> <operator pos:start="341:64" pos:end="341:64">+</operator> <literal type="number" pos:start="341:66" pos:end="341:69">0x30</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:77"><expr pos:start="343:5" pos:end="343:76"><name pos:start="343:5" pos:end="343:43"><name pos:start="343:5" pos:end="343:17">daughterboard</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:27">bootinfo</name><operator pos:start="343:28" pos:end="343:28">.</operator><name pos:start="343:29" pos:end="343:43">gic_cpu_if_addr</name></name> <operator pos:start="343:45" pos:end="343:45">=</operator> <name pos:start="343:47" pos:end="343:76"><name pos:start="343:47" pos:end="343:59">daughterboard</name><operator pos:start="343:60" pos:end="343:61">-&gt;</operator><name pos:start="343:62" pos:end="343:76">gic_cpu_if_addr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:61"><expr pos:start="345:5" pos:end="345:60"><name pos:start="345:5" pos:end="345:38"><name pos:start="345:5" pos:end="345:17">daughterboard</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:27">bootinfo</name><operator pos:start="345:28" pos:end="345:28">.</operator><name pos:start="345:29" pos:end="345:38">modify_dtb</name></name> <operator pos:start="345:40" pos:end="345:40">=</operator> <name pos:start="345:42" pos:end="345:60">vexpress_modify_dtb</name></expr>;</expr_stmt>

    <comment type="block" pos:start="347:5" pos:end="347:71">/* Indicate that when booting Linux we should be in secure state */</comment>

    <expr_stmt pos:start="349:5" pos:end="349:47"><expr pos:start="349:5" pos:end="349:46"><name pos:start="349:5" pos:end="349:39"><name pos:start="349:5" pos:end="349:17">daughterboard</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:27">bootinfo</name><operator pos:start="349:28" pos:end="349:28">.</operator><name pos:start="349:29" pos:end="349:39">secure_boot</name></name> <operator pos:start="349:41" pos:end="349:41">=</operator> <name pos:start="349:43" pos:end="349:46">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:66"><expr pos:start="351:5" pos:end="351:65"><call pos:start="351:5" pos:end="351:65"><name pos:start="351:5" pos:end="351:19">arm_load_kernel</name><argument_list pos:start="351:20" pos:end="351:65">(<argument pos:start="351:21" pos:end="351:38"><expr pos:start="351:21" pos:end="351:38"><call pos:start="351:21" pos:end="351:38"><name pos:start="351:21" pos:end="351:27">ARM_CPU</name><argument_list pos:start="351:28" pos:end="351:38">(<argument pos:start="351:29" pos:end="351:37"><expr pos:start="351:29" pos:end="351:37"><name pos:start="351:29" pos:end="351:37">first_cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="351:41" pos:end="351:64"><expr pos:start="351:41" pos:end="351:64"><operator pos:start="351:41" pos:end="351:41">&amp;</operator><name pos:start="351:42" pos:end="351:64"><name pos:start="351:42" pos:end="351:54">daughterboard</name><operator pos:start="351:55" pos:end="351:56">-&gt;</operator><name pos:start="351:57" pos:end="351:64">bootinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
