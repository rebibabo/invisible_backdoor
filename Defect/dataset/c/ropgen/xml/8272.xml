<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8272.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">amr_wb_encode_frame</name><parameter_list pos:start="1:31" pos:end="3:73">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:62">AVPacket</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avpkt</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:51"><decl pos:start="3:32" pos:end="3:51"><type pos:start="3:32" pos:end="3:51"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:44">AVFrame</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:51">frame</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:72"><decl pos:start="3:54" pos:end="3:72"><type pos:start="3:54" pos:end="3:72"><name pos:start="3:54" pos:end="3:56">int</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:72">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AMRWBContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">int16_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">samples</name> <init pos:start="9:28" pos:end="9:60">= <expr pos:start="9:30" pos:end="9:60"><operator pos:start="9:30" pos:end="9:30">(</operator><specifier pos:start="9:31" pos:end="9:35">const</specifier> <name pos:start="9:37" pos:end="9:43">int16_t</name> <operator pos:start="9:45" pos:end="9:45">*</operator><operator pos:start="9:46" pos:end="9:46">)</operator><name pos:start="9:47" pos:end="9:60"><name pos:start="9:47" pos:end="9:51">frame</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:57">data</name><index pos:start="9:58" pos:end="9:60">[<expr pos:start="9:59" pos:end="9:59"><literal type="number" pos:start="9:59" pos:end="9:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name></decl>, <decl pos:start="11:15" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:17">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:19"><if pos:start="15:5" pos:end="17:19">if <condition pos:start="15:8" pos:end="15:64">(<expr pos:start="15:9" pos:end="15:63"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:12">ret</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:62"><name pos:start="15:16" pos:end="15:31">ff_alloc_packet2</name><argument_list pos:start="15:32" pos:end="15:62">(<argument pos:start="15:33" pos:end="15:37"><expr pos:start="15:33" pos:end="15:37"><name pos:start="15:33" pos:end="15:37">avctx</name></expr></argument>, <argument pos:start="15:40" pos:end="15:44"><expr pos:start="15:40" pos:end="15:44"><name pos:start="15:40" pos:end="15:44">avpkt</name></expr></argument>, <argument pos:start="15:47" pos:end="15:61"><expr pos:start="15:47" pos:end="15:61"><name pos:start="15:47" pos:end="15:61">MAX_PACKET_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="15:63" pos:end="15:63">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:43">(<expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:23">last_bitrate</name></name> <operator pos:start="21:25" pos:end="21:26">!=</operator> <name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:32">avctx</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:42">bit_rate</name></name></expr>)</condition> <block pos:start="21:45" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:42">

        <expr_stmt pos:start="23:9" pos:end="23:70"><expr pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">mode</name></name>         <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:69"><name pos:start="23:27" pos:end="23:45">get_wb_bitrate_mode</name><argument_list pos:start="23:46" pos:end="23:69">(<argument pos:start="23:47" pos:end="23:61"><expr pos:start="23:47" pos:end="23:61"><name pos:start="23:47" pos:end="23:61"><name pos:start="23:47" pos:end="23:51">avctx</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:61">bit_rate</name></name></expr></argument>, <argument pos:start="23:64" pos:end="23:68"><expr pos:start="23:64" pos:end="23:68"><name pos:start="23:64" pos:end="23:68">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:23">last_bitrate</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:31">avctx</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:41">bit_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:78"><expr pos:start="29:5" pos:end="29:77"><name pos:start="29:5" pos:end="29:8">size</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:77"><name pos:start="29:12" pos:end="29:22">E_IF_encode</name><argument_list pos:start="29:23" pos:end="29:77">(<argument pos:start="29:24" pos:end="29:31"><expr pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">state</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:40">mode</name></name></expr></argument>, <argument pos:start="29:43" pos:end="29:49"><expr pos:start="29:43" pos:end="29:49"><name pos:start="29:43" pos:end="29:49">samples</name></expr></argument>, <argument pos:start="29:52" pos:end="29:62"><expr pos:start="29:52" pos:end="29:62"><name pos:start="29:52" pos:end="29:62"><name pos:start="29:52" pos:end="29:56">avpkt</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:62">data</name></name></expr></argument>, <argument pos:start="29:65" pos:end="29:76"><expr pos:start="29:65" pos:end="29:76"><name pos:start="29:65" pos:end="29:76"><name pos:start="29:65" pos:end="29:65">s</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:76">allow_dtx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:44">(<expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:12">size</name> <operator pos:start="31:14" pos:end="31:15">&lt;=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal> <operator pos:start="31:19" pos:end="31:20">||</operator> <name pos:start="31:22" pos:end="31:25">size</name> <operator pos:start="31:27" pos:end="31:27">&gt;</operator> <name pos:start="31:29" pos:end="31:43">MAX_PACKET_SIZE</name></expr>)</condition> <block pos:start="31:46" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:62"><expr pos:start="33:9" pos:end="33:61"><call pos:start="33:9" pos:end="33:61"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:61">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:60"><expr pos:start="33:37" pos:end="33:60"><literal type="string" pos:start="33:37" pos:end="33:60">"Error encoding frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:79"><if pos:start="41:5" pos:end="43:79">if <condition pos:start="41:8" pos:end="41:37">(<expr pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:13">frame</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">pts</name></name> <operator pos:start="41:20" pos:end="41:21">!=</operator> <name pos:start="41:23" pos:end="41:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:79"><block_content pos:start="43:9" pos:end="43:79">

        <expr_stmt pos:start="43:9" pos:end="43:79"><expr pos:start="43:9" pos:end="43:78"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:13">avpkt</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">pts</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:31"><name pos:start="43:22" pos:end="43:26">frame</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:31">pts</name></name> <operator pos:start="43:33" pos:end="43:33">-</operator> <call pos:start="43:35" pos:end="43:78"><name pos:start="43:35" pos:end="43:57">ff_samples_to_time_base</name><argument_list pos:start="43:58" pos:end="43:78">(<argument pos:start="43:59" pos:end="43:63"><expr pos:start="43:59" pos:end="43:63"><name pos:start="43:59" pos:end="43:63">avctx</name></expr></argument>, <argument pos:start="43:66" pos:end="43:77"><expr pos:start="43:66" pos:end="43:77"><name pos:start="43:66" pos:end="43:77"><name pos:start="43:66" pos:end="43:70">avctx</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:77">delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:9">avpkt</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:15">size</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:22">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><operator pos:start="49:5" pos:end="49:5">*</operator><name pos:start="49:6" pos:end="49:19">got_packet_ptr</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">1</literal></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
