<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17861.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:28">ff_fft_init_arm</name><parameter_list pos:start="1:29" pos:end="1:43">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:39">FFTContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="19:5">if <condition pos:start="9:8" pos:end="9:54">(<expr pos:start="9:9" pos:end="9:53"><call pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:16">have_vfp</name><argument_list pos:start="9:17" pos:end="9:27">(<argument pos:start="9:18" pos:end="9:26"><expr pos:start="9:18" pos:end="9:26"><name pos:start="9:18" pos:end="9:26">cpu_flags</name></expr></argument>)</argument_list></call> <operator pos:start="9:29" pos:end="9:30">&amp;&amp;</operator> <operator pos:start="9:32" pos:end="9:32">!</operator><call pos:start="9:33" pos:end="9:53"><name pos:start="9:33" pos:end="9:42">have_vfpv3</name><argument_list pos:start="9:43" pos:end="9:53">(<argument pos:start="9:44" pos:end="9:52"><expr pos:start="9:44" pos:end="9:52"><name pos:start="9:44" pos:end="9:52">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:56" pos:end="19:5">{<block_content pos:start="11:9" pos:end="18:0">

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:19">fft_calc</name></name>     <operator pos:start="11:25" pos:end="11:25">=</operator> <name pos:start="11:27" pos:end="11:41">ff_fft_calc_vfp</name></expr>;</expr_stmt>

<cpp:if pos:start="13:1" pos:end="13:15">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">CONFIG_MDCT</name></expr></cpp:if>

        <expr_stmt pos:start="15:9" pos:end="18:0"><expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:21">imdct_half</name></name>   <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:43">ff_imdct_half_vfp</name></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="41:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:17">have_neon</name><argument_list pos:start="23:18" pos:end="23:28">(<argument pos:start="23:19" pos:end="23:27"><expr pos:start="23:19" pos:end="23:27"><name pos:start="23:19" pos:end="23:27">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:31" pos:end="41:5">{<block_content pos:start="25:9" pos:end="40:0">

        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">fft_permute</name></name>  <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:45">ff_fft_permute_neon</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">fft_calc</name></name>     <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:42">ff_fft_calc_neon</name></expr>;</expr_stmt>

<cpp:if pos:start="29:1" pos:end="29:15">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:15">CONFIG_MDCT</name></expr></cpp:if>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">imdct_calc</name></name>   <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:44">ff_imdct_calc_neon</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">imdct_half</name></name>   <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:44">ff_imdct_half_neon</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:20">mdct_calc</name></name>    <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:43">ff_mdct_calc_neon</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:27">mdct_permutation</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:53">FF_MDCT_PERM_INTERLEAVE</name></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
