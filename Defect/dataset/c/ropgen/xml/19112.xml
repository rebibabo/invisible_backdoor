<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19112.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">qemu_v9fs_synth_add_file</name><parameter_list pos:start="1:29" pos:end="5:63">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:42">V9fsSynthNode</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">parent</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:60"><decl pos:start="1:53" pos:end="1:60"><type pos:start="1:53" pos:end="1:60"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:60">mode</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:45"><decl pos:start="3:30" pos:end="3:45"><type pos:start="3:30" pos:end="3:45"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:39">char</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">name</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:62">v9fs_synth_read</name></type> <name pos:start="3:64" pos:end="3:67">read</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:51"><decl pos:start="5:30" pos:end="5:51"><type pos:start="5:30" pos:end="5:51"><name pos:start="5:30" pos:end="5:45">v9fs_synth_write</name></type> <name pos:start="5:47" pos:end="5:51">write</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:62"><decl pos:start="5:54" pos:end="5:62"><type pos:start="5:54" pos:end="5:62"><name pos:start="5:54" pos:end="5:57">void</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:62">arg</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="81:1">{<block_content pos:start="9:5" pos:end="79:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">V9fsSynthNode</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:23">node</name></decl>, <decl pos:start="11:26" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:29">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22">v9fs_synth_fs</name></expr>)</condition> <block pos:start="15:25" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:22">

        <return pos:start="17:9" pos:end="17:22">return <expr pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:21">EAGAIN</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:13">name</name> <operator pos:start="21:15" pos:end="21:16">||</operator> <operator pos:start="21:18" pos:end="21:18">(</operator><call pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:24">strlen</name><argument_list pos:start="21:25" pos:end="21:30">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">name</name></expr></argument>)</argument_list></call> <operator pos:start="21:32" pos:end="21:33">&gt;=</operator> <name pos:start="21:35" pos:end="21:42">NAME_MAX</name><operator pos:start="21:43" pos:end="21:43">)</operator></expr>)</condition> <block pos:start="21:46" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:22">

        <return pos:start="23:9" pos:end="23:22">return <expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:15">parent</name></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:34">

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:14">parent</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:33">v9fs_synth_root</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><call pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:19">qemu_mutex_lock</name><argument_list pos:start="35:20" pos:end="35:38">(<argument pos:start="35:21" pos:end="35:37"><expr pos:start="35:21" pos:end="35:37"><operator pos:start="35:21" pos:end="35:21">&amp;</operator><name pos:start="35:22" pos:end="35:37">v9fs_synth_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:17">QLIST_FOREACH</name><argument_list pos:start="37:18" pos:end="37:47">(<argument pos:start="37:19" pos:end="37:21">tmp</argument>, <argument pos:start="37:24" pos:end="37:37">&amp;parent-&gt;child</argument>, <argument pos:start="37:40" pos:end="37:46">sibling</argument>)</argument_list></macro> <block pos:start="37:49" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:9">

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:37">(<expr pos:start="39:13" pos:end="39:36"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:36"><name pos:start="39:14" pos:end="39:19">strcmp</name><argument_list pos:start="39:20" pos:end="39:36">(<argument pos:start="39:21" pos:end="39:29"><expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:23">tmp</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:29">name</name></name></expr></argument>, <argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:39" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:25">

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:24">EEXIST</name></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:25">goto <name pos:start="43:18" pos:end="43:24">err_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <comment type="block" pos:start="49:5" pos:end="49:45">/* Add file type and remove write bits */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:8">mode</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <operator pos:start="51:12" pos:end="51:12">(</operator><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:17">mode</name> <operator pos:start="51:19" pos:end="51:19">&amp;</operator> <literal type="number" pos:start="51:21" pos:end="51:24">0777</literal><operator pos:start="51:25" pos:end="51:25">)</operator> <operator pos:start="51:27" pos:end="51:27">|</operator> <name pos:start="51:29" pos:end="51:35">S_IFREG</name><operator pos:start="51:36" pos:end="51:36">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:8">node</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:43"><name pos:start="53:12" pos:end="53:20">g_malloc0</name><argument_list pos:start="53:21" pos:end="53:43">(<argument pos:start="53:22" pos:end="53:42"><expr pos:start="53:22" pos:end="53:42"><sizeof pos:start="53:22" pos:end="53:42">sizeof<argument_list pos:start="53:28" pos:end="53:42">(<argument pos:start="53:29" pos:end="53:41"><expr pos:start="53:29" pos:end="53:41"><name pos:start="53:29" pos:end="53:41">V9fsSynthNode</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:8">node</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:14">attr</name></name>         <operator pos:start="55:24" pos:end="55:24">=</operator> <operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:43"><name pos:start="55:27" pos:end="55:30">node</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:43">actual_attr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:49"><expr pos:start="57:5" pos:end="57:48"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:8">node</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:14">attr</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:21">inode</name></name>  <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:46">v9fs_synth_node_count</name><operator pos:start="57:47" pos:end="57:48">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:8">node</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:14">attr</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">nlink</name></name>  <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:8">node</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:14">attr</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:20">read</name></name>   <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:29">read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:8">node</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:14">attr</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">write</name></name>  <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:30">write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:8">node</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:14">attr</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:20">mode</name></name>   <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:29">mode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:29"><expr pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:8">node</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:17">private</name></name>      <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:28">arg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:50"><expr pos:start="69:5" pos:end="69:49"><call pos:start="69:5" pos:end="69:49"><name pos:start="69:5" pos:end="69:11">pstrcpy</name><argument_list pos:start="69:12" pos:end="69:49">(<argument pos:start="69:13" pos:end="69:22"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:16">node</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">name</name></name></expr></argument>, <argument pos:start="69:25" pos:end="69:42"><expr pos:start="69:25" pos:end="69:42"><sizeof pos:start="69:25" pos:end="69:42">sizeof<argument_list pos:start="69:31" pos:end="69:42">(<argument pos:start="69:32" pos:end="69:41"><expr pos:start="69:32" pos:end="69:41"><name pos:start="69:32" pos:end="69:41"><name pos:start="69:32" pos:end="69:35">node</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:41">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:45" pos:end="69:48"><expr pos:start="69:45" pos:end="69:48"><name pos:start="69:45" pos:end="69:48">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:57"><expr pos:start="71:5" pos:end="71:56"><call pos:start="71:5" pos:end="71:56"><name pos:start="71:5" pos:end="71:25">QLIST_INSERT_HEAD_RCU</name><argument_list pos:start="71:26" pos:end="71:56">(<argument pos:start="71:27" pos:end="71:40"><expr pos:start="71:27" pos:end="71:40"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:33">parent</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:40">child</name></name></expr></argument>, <argument pos:start="71:43" pos:end="71:46"><expr pos:start="71:43" pos:end="71:46"><name pos:start="71:43" pos:end="71:46">node</name></expr></argument>, <argument pos:start="71:49" pos:end="71:55"><expr pos:start="71:49" pos:end="71:55"><name pos:start="71:49" pos:end="71:55">sibling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:12"><expr pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <literal type="number" pos:start="73:11" pos:end="73:11">0</literal></expr>;</expr_stmt>

<label pos:start="75:1" pos:end="75:8"><name pos:start="75:1" pos:end="75:7">err_out</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:41"><expr pos:start="77:5" pos:end="77:40"><call pos:start="77:5" pos:end="77:40"><name pos:start="77:5" pos:end="77:21">qemu_mutex_unlock</name><argument_list pos:start="77:22" pos:end="77:40">(<argument pos:start="77:23" pos:end="77:39"><expr pos:start="77:23" pos:end="77:39"><operator pos:start="77:23" pos:end="77:23">&amp;</operator><name pos:start="77:24" pos:end="77:39">v9fs_synth_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
