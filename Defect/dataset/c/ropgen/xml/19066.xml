<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19066.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">pp_context</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:26">pp_get_context</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:36"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:36">width</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:48">height</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">cpuCaps</name></decl></parameter>)</parameter_list><block pos:start="1:63" pos:end="25:1">{<block_content pos:start="2:5" pos:end="24:13">
    <decl_stmt pos:start="2:5" pos:end="2:48"><decl pos:start="2:5" pos:end="2:47"><type pos:start="2:5" pos:end="2:15"><name pos:start="2:5" pos:end="2:13">PPContext</name> <modifier pos:start="2:15" pos:end="2:15">*</modifier></type><name pos:start="2:16" pos:end="2:16">c</name><init pos:start="2:17" pos:end="2:47">= <expr pos:start="2:19" pos:end="2:47"><call pos:start="2:19" pos:end="2:47"><name pos:start="2:19" pos:end="2:28">av_mallocz</name><argument_list pos:start="2:29" pos:end="2:47">(<argument pos:start="2:30" pos:end="2:46"><expr pos:start="2:30" pos:end="2:46"><sizeof pos:start="2:30" pos:end="2:46">sizeof<argument_list pos:start="2:36" pos:end="2:46">(<argument pos:start="2:37" pos:end="2:45"><expr pos:start="2:37" pos:end="2:45"><name pos:start="2:37" pos:end="2:45">PPContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:14">stride</name><init pos:start="3:15" pos:end="3:34">= <expr pos:start="3:17" pos:end="3:34"><call pos:start="3:17" pos:end="3:34"><name pos:start="3:17" pos:end="3:23">FFALIGN</name><argument_list pos:start="3:24" pos:end="3:34">(<argument pos:start="3:25" pos:end="3:29"><expr pos:start="3:25" pos:end="3:29"><name pos:start="3:25" pos:end="3:29">width</name></expr></argument>, <argument pos:start="3:32" pos:end="3:33"><expr pos:start="3:32" pos:end="3:33"><literal type="number" pos:start="3:32" pos:end="3:33">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>  <comment type="line" pos:start="3:38" pos:end="3:71">//assumed / will realloc if needed</comment>
    <decl_stmt pos:start="4:5" pos:end="4:36"><decl pos:start="4:5" pos:end="4:35"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:16">qpStride</name><init pos:start="4:17" pos:end="4:35">= <expr pos:start="4:19" pos:end="4:35"><operator pos:start="4:19" pos:end="4:19">(</operator><name pos:start="4:20" pos:end="4:24">width</name><operator pos:start="4:25" pos:end="4:25">+</operator><literal type="number" pos:start="4:26" pos:end="4:27">15</literal><operator pos:start="4:28" pos:end="4:28">)</operator><operator pos:start="4:29" pos:end="4:29">/</operator><literal type="number" pos:start="4:30" pos:end="4:33">16</literal> <operator pos:start="4:33" pos:end="4:33">+</operator> <literal type="number" pos:start="4:35" pos:end="4:35">2</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="4:38" pos:end="4:71">//assumed / will realloc if needed</comment>
    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:5">c</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:15">av_class</name></name> <operator pos:start="5:17" pos:end="5:17">=</operator> <operator pos:start="5:19" pos:end="5:19">&amp;</operator><name pos:start="5:20" pos:end="5:41">av_codec_context_class</name></expr>;</expr_stmt>
    <if_stmt pos:start="6:5" pos:end="12:5"><if pos:start="6:5" pos:end="9:5">if<condition pos:start="6:7" pos:end="6:25">(<expr pos:start="6:8" pos:end="6:24"><name pos:start="6:8" pos:end="6:14">cpuCaps</name><operator pos:start="6:15" pos:end="6:15">&amp;</operator><name pos:start="6:16" pos:end="6:24">PP_FORMAT</name></expr>)</condition><block pos:start="6:26" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:46">
        <expr_stmt pos:start="7:9" pos:end="7:41"><expr pos:start="7:9" pos:end="7:40"><name pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:9">c</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:27">hChromaSubSample</name></name><operator pos:start="7:28" pos:end="7:28">=</operator> <name pos:start="7:30" pos:end="7:36">cpuCaps</name><operator pos:start="7:37" pos:end="7:37">&amp;</operator><literal type="number" pos:start="7:38" pos:end="7:40">0x3</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:46"><expr pos:start="8:9" pos:end="8:45"><name pos:start="8:9" pos:end="8:27"><name pos:start="8:9" pos:end="8:9">c</name><operator pos:start="8:10" pos:end="8:11">-&gt;</operator><name pos:start="8:12" pos:end="8:27">vChromaSubSample</name></name><operator pos:start="8:28" pos:end="8:28">=</operator> <operator pos:start="8:30" pos:end="8:30">(</operator><name pos:start="8:31" pos:end="8:37">cpuCaps</name><operator pos:start="8:38" pos:end="8:39">&gt;&gt;</operator><literal type="number" pos:start="8:40" pos:end="8:40">4</literal><operator pos:start="8:41" pos:end="8:41">)</operator><operator pos:start="8:42" pos:end="8:42">&amp;</operator><literal type="number" pos:start="8:43" pos:end="8:45">0x3</literal></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="9:6" pos:end="12:5">else<block pos:start="9:10" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:31">
        <expr_stmt pos:start="10:9" pos:end="10:31"><expr pos:start="10:9" pos:end="10:30"><name pos:start="10:9" pos:end="10:27"><name pos:start="10:9" pos:end="10:9">c</name><operator pos:start="10:10" pos:end="10:11">-&gt;</operator><name pos:start="10:12" pos:end="10:27">hChromaSubSample</name></name><operator pos:start="10:28" pos:end="10:28">=</operator> <literal type="number" pos:start="10:30" pos:end="10:30">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:27">vChromaSubSample</name></name><operator pos:start="11:28" pos:end="11:28">=</operator> <literal type="number" pos:start="11:30" pos:end="11:30">1</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="15:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:15">cpuCaps</name> <operator pos:start="13:17" pos:end="13:17">&amp;</operator> <name pos:start="13:19" pos:end="13:34">PP_CPU_CAPS_AUTO</name></expr>)</condition> <block pos:start="13:37" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:40">
        <expr_stmt pos:start="14:9" pos:end="14:40"><expr pos:start="14:9" pos:end="14:39"><name pos:start="14:9" pos:end="14:18"><name pos:start="14:9" pos:end="14:9">c</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:18">cpuCaps</name></name> <operator pos:start="14:20" pos:end="14:20">=</operator> <call pos:start="14:22" pos:end="14:39"><name pos:start="14:22" pos:end="14:37">av_get_cpu_flags</name><argument_list pos:start="14:38" pos:end="14:39">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="15:7" pos:end="21:5">else <block pos:start="15:12" pos:end="21:5">{<block_content pos:start="16:9" pos:end="20:78">
        <expr_stmt pos:start="16:9" pos:end="16:23"><expr pos:start="16:9" pos:end="16:22"><name pos:start="16:9" pos:end="16:18"><name pos:start="16:9" pos:end="16:9">c</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:18">cpuCaps</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <literal type="number" pos:start="16:22" pos:end="16:22">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="17:74"><if pos:start="17:9" pos:end="17:74">if <condition pos:start="17:12" pos:end="17:38">(<expr pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:19">cpuCaps</name> <operator pos:start="17:21" pos:end="17:21">&amp;</operator> <name pos:start="17:23" pos:end="17:37">PP_CPU_CAPS_MMX</name></expr>)</condition><block type="pseudo" pos:start="17:45" pos:end="17:74"><block_content pos:start="17:45" pos:end="17:74">      <expr_stmt pos:start="17:45" pos:end="17:74"><expr pos:start="17:45" pos:end="17:73"><name pos:start="17:45" pos:end="17:54"><name pos:start="17:45" pos:end="17:45">c</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:54">cpuCaps</name></name> <operator pos:start="17:56" pos:end="17:57">|=</operator> <name pos:start="17:59" pos:end="17:73">AV_CPU_FLAG_MMX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="18:9" pos:end="18:77"><if pos:start="18:9" pos:end="18:77">if <condition pos:start="18:12" pos:end="18:39">(<expr pos:start="18:13" pos:end="18:38"><name pos:start="18:13" pos:end="18:19">cpuCaps</name> <operator pos:start="18:21" pos:end="18:21">&amp;</operator> <name pos:start="18:23" pos:end="18:38">PP_CPU_CAPS_MMX2</name></expr>)</condition><block type="pseudo" pos:start="18:45" pos:end="18:77"><block_content pos:start="18:45" pos:end="18:77">     <expr_stmt pos:start="18:45" pos:end="18:77"><expr pos:start="18:45" pos:end="18:76"><name pos:start="18:45" pos:end="18:54"><name pos:start="18:45" pos:end="18:45">c</name><operator pos:start="18:46" pos:end="18:47">-&gt;</operator><name pos:start="18:48" pos:end="18:54">cpuCaps</name></name> <operator pos:start="18:56" pos:end="18:57">|=</operator> <name pos:start="18:59" pos:end="18:76">AV_CPU_FLAG_MMXEXT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="19:9" pos:end="19:76"><if pos:start="19:9" pos:end="19:76">if <condition pos:start="19:12" pos:end="19:40">(<expr pos:start="19:13" pos:end="19:39"><name pos:start="19:13" pos:end="19:19">cpuCaps</name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <name pos:start="19:23" pos:end="19:39">PP_CPU_CAPS_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="19:45" pos:end="19:76"><block_content pos:start="19:45" pos:end="19:76">    <expr_stmt pos:start="19:45" pos:end="19:76"><expr pos:start="19:45" pos:end="19:75"><name pos:start="19:45" pos:end="19:54"><name pos:start="19:45" pos:end="19:45">c</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:54">cpuCaps</name></name> <operator pos:start="19:56" pos:end="19:57">|=</operator> <name pos:start="19:59" pos:end="19:75">AV_CPU_FLAG_3DNOW</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="20:9" pos:end="20:78"><if pos:start="20:9" pos:end="20:78">if <condition pos:start="20:12" pos:end="20:42">(<expr pos:start="20:13" pos:end="20:41"><name pos:start="20:13" pos:end="20:19">cpuCaps</name> <operator pos:start="20:21" pos:end="20:21">&amp;</operator> <name pos:start="20:23" pos:end="20:41">PP_CPU_CAPS_ALTIVEC</name></expr>)</condition><block type="pseudo" pos:start="20:45" pos:end="20:78"><block_content pos:start="20:45" pos:end="20:78">  <expr_stmt pos:start="20:45" pos:end="20:78"><expr pos:start="20:45" pos:end="20:77"><name pos:start="20:45" pos:end="20:54"><name pos:start="20:45" pos:end="20:45">c</name><operator pos:start="20:46" pos:end="20:47">-&gt;</operator><name pos:start="20:48" pos:end="20:54">cpuCaps</name></name> <operator pos:start="20:56" pos:end="20:57">|=</operator> <name pos:start="20:59" pos:end="20:77">AV_CPU_FLAG_ALTIVEC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:55"><expr pos:start="22:5" pos:end="22:54"><call pos:start="22:5" pos:end="22:54"><name pos:start="22:5" pos:end="22:18">reallocBuffers</name><argument_list pos:start="22:19" pos:end="22:54">(<argument pos:start="22:20" pos:end="22:20"><expr pos:start="22:20" pos:end="22:20"><name pos:start="22:20" pos:end="22:20">c</name></expr></argument>, <argument pos:start="22:23" pos:end="22:27"><expr pos:start="22:23" pos:end="22:27"><name pos:start="22:23" pos:end="22:27">width</name></expr></argument>, <argument pos:start="22:30" pos:end="22:35"><expr pos:start="22:30" pos:end="22:35"><name pos:start="22:30" pos:end="22:35">height</name></expr></argument>, <argument pos:start="22:38" pos:end="22:43"><expr pos:start="22:38" pos:end="22:43"><name pos:start="22:38" pos:end="22:43">stride</name></expr></argument>, <argument pos:start="22:46" pos:end="22:53"><expr pos:start="22:46" pos:end="22:53"><name pos:start="22:46" pos:end="22:53">qpStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">c</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:15">frameNum</name></name><operator pos:start="23:16" pos:end="23:16">=</operator><operator pos:start="23:17" pos:end="23:17">-</operator><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr>;</expr_stmt>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><name pos:start="24:12" pos:end="24:12">c</name></expr>;</return>
</block_content>}</block></function></unit>
