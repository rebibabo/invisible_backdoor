<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6756.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ide_write_dma_cb</name><parameter_list pos:start="1:28" pos:end="5:47">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:36">IDEState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, 

                            <parameter pos:start="3:29" pos:end="3:56"><decl pos:start="3:29" pos:end="3:56"><type pos:start="3:29" pos:end="3:56"><name pos:start="3:29" pos:end="3:46">target_phys_addr_t</name></type> <name pos:start="3:48" pos:end="3:56">phys_addr</name></decl></parameter>, 

                            <parameter pos:start="5:29" pos:end="5:46"><decl pos:start="5:29" pos:end="5:46"><type pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:46">transfer_size1</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="85:1">{<block_content pos:start="9:5" pos:end="83:42">

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>, <decl pos:start="9:14" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:26">transfer_size</name></decl>, <decl pos:start="9:29" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:29">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">sector_num</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:17">transfer_size</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:34">transfer_size1</name></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="81:5">for<control pos:start="17:8" pos:end="17:11">(<init pos:start="17:9" pos:end="17:9">;</init><condition pos:start="17:10" pos:end="17:10">;</condition><incr/>)</control> <block pos:start="17:13" pos:end="81:5">{<block_content pos:start="19:9" pos:end="79:25">

        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:31"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:31">io_buffer_size</name></name> <operator pos:start="19:33" pos:end="19:33">-</operator> <name pos:start="19:35" pos:end="19:52"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:52">io_buffer_index</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="61:9"><if pos:start="21:9" pos:end="61:9">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>)</condition> <block pos:start="21:23" pos:end="61:9">{<block_content pos:start="23:13" pos:end="59:36">

            <expr_stmt pos:start="23:13" pos:end="23:39"><expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:13">n</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:33">io_buffer_size</name></name> <operator pos:start="23:35" pos:end="23:36">&gt;&gt;</operator> <literal type="number" pos:start="23:38" pos:end="23:38">9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:43"><expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:22">sector_num</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:39">ide_get_sector</name><argument_list pos:start="25:40" pos:end="25:42">(<argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="29:47"><expr pos:start="27:13" pos:end="29:46"><call pos:start="27:13" pos:end="29:46"><name pos:start="27:13" pos:end="27:22">bdrv_write</name><argument_list pos:start="27:23" pos:end="29:46">(<argument pos:start="27:24" pos:end="27:28"><expr pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:28">bs</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:40"><expr pos:start="27:31" pos:end="27:40"><name pos:start="27:31" pos:end="27:40">sector_num</name></expr></argument>, <argument pos:start="27:43" pos:end="27:54"><expr pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:43">s</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:54">io_buffer</name></name></expr></argument>, 

                       <argument pos:start="29:24" pos:end="29:45"><expr pos:start="29:24" pos:end="29:45"><name pos:start="29:24" pos:end="29:40"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:40">io_buffer_size</name></name> <operator pos:start="29:42" pos:end="29:43">&gt;&gt;</operator> <literal type="number" pos:start="29:45" pos:end="29:45">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:22">sector_num</name> <operator pos:start="31:24" pos:end="31:25">+=</operator> <name pos:start="31:27" pos:end="31:27">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:42"><expr pos:start="33:13" pos:end="33:41"><call pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:26">ide_set_sector</name><argument_list pos:start="33:27" pos:end="33:41">(<argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">s</name></expr></argument>, <argument pos:start="33:31" pos:end="33:40"><expr pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:40">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:28"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">nsector</name></name> <operator pos:start="35:24" pos:end="35:25">-=</operator> <name pos:start="35:27" pos:end="35:27">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:13">n</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:26">nsector</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="49:13"><if pos:start="39:13" pos:end="49:13">if <condition pos:start="39:16" pos:end="39:23">(<expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">n</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>)</condition> <block pos:start="39:25" pos:end="49:13">{<block_content pos:start="43:17" pos:end="47:25">

                <comment type="block" pos:start="41:17" pos:end="41:37">/* end of transfer */</comment>

                <expr_stmt pos:start="43:17" pos:end="43:51"><expr pos:start="43:17" pos:end="43:50"><name pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:25">status</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:38">READY_STAT</name> <operator pos:start="43:40" pos:end="43:40">|</operator> <name pos:start="43:42" pos:end="43:50">SEEK_STAT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:31"><expr pos:start="45:17" pos:end="45:30"><call pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:27">ide_set_irq</name><argument_list pos:start="45:28" pos:end="45:30">(<argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="47:17" pos:end="47:25">return <expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="51:13" pos:end="53:37"><if pos:start="51:13" pos:end="53:37">if <condition pos:start="51:16" pos:end="51:37">(<expr pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:17">n</name> <operator pos:start="51:19" pos:end="51:19">&gt;</operator> <name pos:start="51:21" pos:end="51:36">MAX_MULT_SECTORS</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:37"><block_content pos:start="53:17" pos:end="53:37">

                <expr_stmt pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:17">n</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:36">MAX_MULT_SECTORS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:35"><expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:30">io_buffer_index</name></name> <operator pos:start="55:32" pos:end="55:32">=</operator> <literal type="number" pos:start="55:34" pos:end="55:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:29">io_buffer_size</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:33">n</name> <operator pos:start="57:35" pos:end="57:35">*</operator> <literal type="number" pos:start="57:37" pos:end="57:39">512</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:36"><expr pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:15">len</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:35"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:35">io_buffer_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:18"><if pos:start="63:9" pos:end="65:18">if <condition pos:start="63:12" pos:end="63:31">(<expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:25">transfer_size</name> <operator pos:start="63:27" pos:end="63:28">&lt;=</operator> <literal type="number" pos:start="63:30" pos:end="63:30">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:18"><block_content pos:start="65:13" pos:end="65:18">

            <break pos:start="65:13" pos:end="65:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="69:32"><if pos:start="67:9" pos:end="69:32">if <condition pos:start="67:12" pos:end="67:32">(<expr pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:15">len</name> <operator pos:start="67:17" pos:end="67:17">&gt;</operator> <name pos:start="67:19" pos:end="67:31">transfer_size</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:32"><block_content pos:start="69:13" pos:end="69:32">

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">len</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:31">transfer_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="73:73"><expr pos:start="71:9" pos:end="73:72"><call pos:start="71:9" pos:end="73:72"><name pos:start="71:9" pos:end="71:32">cpu_physical_memory_read</name><argument_list pos:start="71:33" pos:end="73:72">(<argument pos:start="71:34" pos:end="71:42"><expr pos:start="71:34" pos:end="71:42"><name pos:start="71:34" pos:end="71:42">phys_addr</name></expr></argument>, 

                                 <argument pos:start="73:34" pos:end="73:66"><expr pos:start="73:34" pos:end="73:66"><name pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:34">s</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:45">io_buffer</name></name> <operator pos:start="73:47" pos:end="73:47">+</operator> <name pos:start="73:49" pos:end="73:66"><name pos:start="73:49" pos:end="73:49">s</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:66">io_buffer_index</name></name></expr></argument>, <argument pos:start="73:69" pos:end="73:71"><expr pos:start="73:69" pos:end="73:71"><name pos:start="73:69" pos:end="73:71">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:26">io_buffer_index</name></name> <operator pos:start="75:28" pos:end="75:29">+=</operator> <name pos:start="75:31" pos:end="75:33">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:21">transfer_size</name> <operator pos:start="77:23" pos:end="77:24">-=</operator> <name pos:start="77:26" pos:end="77:28">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:17">phys_addr</name> <operator pos:start="79:19" pos:end="79:20">+=</operator> <name pos:start="79:22" pos:end="79:24">len</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="83:5" pos:end="83:42">return <expr pos:start="83:12" pos:end="83:41"><name pos:start="83:12" pos:end="83:25">transfer_size1</name> <operator pos:start="83:27" pos:end="83:27">-</operator> <name pos:start="83:29" pos:end="83:41">transfer_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
