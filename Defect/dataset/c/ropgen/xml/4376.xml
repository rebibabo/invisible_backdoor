<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4376.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">imx_eth_write</name><parameter_list pos:start="1:26" pos:end="3:41">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:46">hwaddr</name></type> <name pos:start="1:48" pos:end="1:53">offset</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:63">uint64_t</name></type> <name pos:start="1:65" pos:end="1:69">value</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">unsigned</name></type> <name pos:start="3:37" pos:end="3:40">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="271:1">{<block_content pos:start="7:5" pos:end="269:22">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">IMXFECState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:36">= <expr pos:start="7:22" pos:end="7:36"><call pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:28">IMX_FEC</name><argument_list pos:start="7:29" pos:end="7:36">(<argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">index</name> <init pos:start="9:20" pos:end="9:32">= <expr pos:start="9:22" pos:end="9:32"><name pos:start="9:22" pos:end="9:27">offset</name> <operator pos:start="9:29" pos:end="9:30">&gt;&gt;</operator> <literal type="number" pos:start="9:32" pos:end="9:32">2</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:33"><expr pos:start="13:5" pos:end="15:32"><call pos:start="13:5" pos:end="15:32"><name pos:start="13:5" pos:end="13:14">FEC_PRINTF</name><argument_list pos:start="13:15" pos:end="15:32">(<argument pos:start="13:16" pos:end="13:43"><expr pos:start="13:16" pos:end="13:43"><literal type="string" pos:start="13:16" pos:end="13:31">"reg[%s] &lt;= 0x%"</literal> <name pos:start="13:33" pos:end="13:38">PRIx32</name> <literal type="string" pos:start="13:40" pos:end="13:43">"\n"</literal></expr></argument>, <argument pos:start="13:46" pos:end="13:71"><expr pos:start="13:46" pos:end="13:71"><call pos:start="13:46" pos:end="13:71"><name pos:start="13:46" pos:end="13:61">imx_eth_reg_name</name><argument_list pos:start="13:62" pos:end="13:71">(<argument pos:start="13:63" pos:end="13:63"><expr pos:start="13:63" pos:end="13:63"><name pos:start="13:63" pos:end="13:63">s</name></expr></argument>, <argument pos:start="13:66" pos:end="13:70"><expr pos:start="13:66" pos:end="13:70"><name pos:start="13:66" pos:end="13:70">index</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="15:17" pos:end="15:31"><expr pos:start="15:17" pos:end="15:31"><operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:25">uint32_t</name><operator pos:start="15:26" pos:end="15:26">)</operator><name pos:start="15:27" pos:end="15:31">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="19:5" pos:end="265:5">switch <condition pos:start="19:12" pos:end="19:18">(<expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:17">index</name></expr>)</condition> <block pos:start="19:20" pos:end="265:5">{<block_content pos:start="21:5" pos:end="263:15">

    <case pos:start="21:5" pos:end="21:18">case <expr pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:17">ENET_EIR</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">regs</name><index pos:start="23:16" pos:end="23:22">[<expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:21">index</name></expr>]</index></name> <operator pos:start="23:24" pos:end="23:25">&amp;=</operator> <operator pos:start="23:27" pos:end="23:27">~</operator><name pos:start="23:28" pos:end="23:32">value</name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:19">case <expr pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:18">ENET_EIMR</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">regs</name><index pos:start="29:16" pos:end="29:22">[<expr pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:21">index</name></expr>]</index></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:30">value</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:19">case <expr pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:18">ENET_RDAR</name></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="49:9"><if pos:start="35:9" pos:end="45:9">if <condition pos:start="35:12" pos:end="35:49">(<expr pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">regs</name><index pos:start="35:20" pos:end="35:29">[<expr pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:28">ENET_ECR</name></expr>]</index></name> <operator pos:start="35:31" pos:end="35:31">&amp;</operator> <name pos:start="35:33" pos:end="35:48">ENET_ECR_ETHEREN</name></expr>)</condition> <block pos:start="35:51" pos:end="45:9">{<block_content pos:start="37:13" pos:end="43:13">

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:32">(<expr pos:start="37:17" pos:end="37:31"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:31"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:24">regs</name><index pos:start="37:25" pos:end="37:31">[<expr pos:start="37:26" pos:end="37:30"><name pos:start="37:26" pos:end="37:30">index</name></expr>]</index></name></expr>)</condition> <block pos:start="37:34" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:37">

                <expr_stmt pos:start="39:17" pos:end="39:48"><expr pos:start="39:17" pos:end="39:47"><name pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:23">regs</name><index pos:start="39:24" pos:end="39:30">[<expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:29">index</name></expr>]</index></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:47">ENET_RDAR_RDAR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:37"><expr pos:start="41:17" pos:end="41:36"><call pos:start="41:17" pos:end="41:36"><name pos:start="41:17" pos:end="41:33">imx_eth_enable_rx</name><argument_list pos:start="41:34" pos:end="41:36">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="49:9">else <block pos:start="45:16" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:31">

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:19">regs</name><index pos:start="47:20" pos:end="47:26">[<expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:25">index</name></expr>]</index></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:19">case <expr pos:start="53:10" pos:end="53:18"><name pos:start="53:10" pos:end="53:18">ENET_TDAR</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:49">(<expr pos:start="55:13" pos:end="55:48"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:19">regs</name><index pos:start="55:20" pos:end="55:29">[<expr pos:start="55:21" pos:end="55:28"><name pos:start="55:21" pos:end="55:28">ENET_ECR</name></expr>]</index></name> <operator pos:start="55:31" pos:end="55:31">&amp;</operator> <name pos:start="55:33" pos:end="55:48">ENET_ECR_ETHEREN</name></expr>)</condition> <block pos:start="55:51" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:29">

            <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">regs</name><index pos:start="57:20" pos:end="57:26">[<expr pos:start="57:21" pos:end="57:25"><name pos:start="57:21" pos:end="57:25">index</name></expr>]</index></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:43">ENET_TDAR_TDAR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><call pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:25">imx_eth_do_tx</name><argument_list pos:start="59:26" pos:end="59:28">(<argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:15">regs</name><index pos:start="63:16" pos:end="63:22">[<expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:21">index</name></expr>]</index></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:18">case <expr pos:start="67:10" pos:end="67:17"><name pos:start="67:10" pos:end="67:17">ENET_ECR</name></expr>:</case>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:35">(<expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:17">value</name> <operator pos:start="69:19" pos:end="69:19">&amp;</operator> <name pos:start="69:21" pos:end="69:34">ENET_ECR_RESET</name></expr>)</condition> <block pos:start="69:37" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:44">

            <return pos:start="71:13" pos:end="71:44">return <expr pos:start="71:20" pos:end="71:43"><call pos:start="71:20" pos:end="71:43"><name pos:start="71:20" pos:end="71:32">imx_eth_reset</name><argument_list pos:start="71:33" pos:end="71:43">(<argument pos:start="71:34" pos:end="71:42"><expr pos:start="71:34" pos:end="71:42"><call pos:start="71:34" pos:end="71:42"><name pos:start="71:34" pos:end="71:39">DEVICE</name><argument_list pos:start="71:40" pos:end="71:42">(<argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">regs</name><index pos:start="75:16" pos:end="75:22">[<expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:21">index</name></expr>]</index></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:30">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:53">(<expr pos:start="77:13" pos:end="77:52"><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:27"><name pos:start="77:14" pos:end="77:14">s</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:20">regs</name><index pos:start="77:21" pos:end="77:27">[<expr pos:start="77:22" pos:end="77:26"><name pos:start="77:22" pos:end="77:26">index</name></expr>]</index></name> <operator pos:start="77:29" pos:end="77:29">&amp;</operator> <name pos:start="77:31" pos:end="77:46">ENET_ECR_ETHEREN</name><operator pos:start="77:47" pos:end="77:47">)</operator> <operator pos:start="77:49" pos:end="77:50">==</operator> <literal type="number" pos:start="77:52" pos:end="77:52">0</literal></expr>)</condition> <block pos:start="77:55" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:50">

            <expr_stmt pos:start="79:13" pos:end="79:35"><expr pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">regs</name><index pos:start="79:20" pos:end="79:30">[<expr pos:start="79:21" pos:end="79:29"><name pos:start="79:21" pos:end="79:29">ENET_RDAR</name></expr>]</index></name> <operator pos:start="79:32" pos:end="79:32">=</operator> <literal type="number" pos:start="79:34" pos:end="79:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:50"><expr pos:start="81:13" pos:end="81:49"><name pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:28">rx_descriptor</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <name pos:start="81:32" pos:end="81:49"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:38">regs</name><index pos:start="81:39" pos:end="81:49">[<expr pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:48">ENET_RDSR</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:35"><expr pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:19">regs</name><index pos:start="83:20" pos:end="83:30">[<expr pos:start="83:21" pos:end="83:29"><name pos:start="83:21" pos:end="83:29">ENET_TDAR</name></expr>]</index></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:50"><expr pos:start="85:13" pos:end="85:49"><name pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:28">tx_descriptor</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <name pos:start="85:32" pos:end="85:49"><name pos:start="85:32" pos:end="85:32">s</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:38">regs</name><index pos:start="85:39" pos:end="85:49">[<expr pos:start="85:40" pos:end="85:48"><name pos:start="85:40" pos:end="85:48">ENET_TDSR</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:19">case <expr pos:start="91:10" pos:end="91:18"><name pos:start="91:10" pos:end="91:18">ENET_MMFR</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">regs</name><index pos:start="93:16" pos:end="93:22">[<expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:21">index</name></expr>]</index></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:30">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="113:9"><if pos:start="95:9" pos:end="107:9">if <condition pos:start="95:12" pos:end="95:36">(<expr pos:start="95:13" pos:end="95:35"><call pos:start="95:13" pos:end="95:35"><name pos:start="95:13" pos:end="95:21">extract32</name><argument_list pos:start="95:22" pos:end="95:35">(<argument pos:start="95:23" pos:end="95:27"><expr pos:start="95:23" pos:end="95:27"><name pos:start="95:23" pos:end="95:27">value</name></expr></argument>, <argument pos:start="95:30" pos:end="95:31"><expr pos:start="95:30" pos:end="95:31"><literal type="number" pos:start="95:30" pos:end="95:31">29</literal></expr></argument>, <argument pos:start="95:34" pos:end="95:34"><expr pos:start="95:34" pos:end="95:34"><literal type="number" pos:start="95:34" pos:end="95:34">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:38" pos:end="107:9">{<block_content pos:start="99:13" pos:end="105:75">

            <comment type="block" pos:start="97:13" pos:end="97:42">/* This is a read operation */</comment>

            <expr_stmt pos:start="99:13" pos:end="105:75"><expr pos:start="99:13" pos:end="105:74"><name pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:19">regs</name><index pos:start="99:20" pos:end="99:30">[<expr pos:start="99:21" pos:end="99:29"><name pos:start="99:21" pos:end="99:29">ENET_MMFR</name></expr>]</index></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <call pos:start="99:34" pos:end="105:74"><name pos:start="99:34" pos:end="99:42">deposit32</name><argument_list pos:start="99:43" pos:end="105:74">(<argument pos:start="99:44" pos:end="99:61"><expr pos:start="99:44" pos:end="99:61"><name pos:start="99:44" pos:end="99:61"><name pos:start="99:44" pos:end="99:44">s</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:50">regs</name><index pos:start="99:51" pos:end="99:61">[<expr pos:start="99:52" pos:end="99:60"><name pos:start="99:52" pos:end="99:60">ENET_MMFR</name></expr>]</index></name></expr></argument>, <argument pos:start="99:64" pos:end="99:64"><expr pos:start="99:64" pos:end="99:64"><literal type="number" pos:start="99:64" pos:end="99:64">0</literal></expr></argument>, <argument pos:start="99:67" pos:end="99:68"><expr pos:start="99:67" pos:end="99:68"><literal type="number" pos:start="99:67" pos:end="99:68">16</literal></expr></argument>,

                                           <argument pos:start="101:44" pos:end="105:73"><expr pos:start="101:44" pos:end="105:73"><call pos:start="101:44" pos:end="105:73"><name pos:start="101:44" pos:end="101:54">do_phy_read</name><argument_list pos:start="101:55" pos:end="105:73">(<argument pos:start="101:56" pos:end="101:56"><expr pos:start="101:56" pos:end="101:56"><name pos:start="101:56" pos:end="101:56">s</name></expr></argument>,

                                                       <argument pos:start="103:56" pos:end="105:72"><expr pos:start="103:56" pos:end="105:72"><call pos:start="103:56" pos:end="105:72"><name pos:start="103:56" pos:end="103:64">extract32</name><argument_list pos:start="103:65" pos:end="105:72">(<argument pos:start="103:66" pos:end="103:70"><expr pos:start="103:66" pos:end="103:70"><name pos:start="103:66" pos:end="103:70">value</name></expr></argument>,

                                                                 <argument pos:start="105:66" pos:end="105:67"><expr pos:start="105:66" pos:end="105:67"><literal type="number" pos:start="105:66" pos:end="105:67">18</literal></expr></argument>, <argument pos:start="105:70" pos:end="105:71"><expr pos:start="105:70" pos:end="105:71"><literal type="number" pos:start="105:70" pos:end="105:71">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="113:9">else <block pos:start="107:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:79">

            <comment type="block" pos:start="109:13" pos:end="109:40">/* This a write operation */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:79"><expr pos:start="111:13" pos:end="111:78"><call pos:start="111:13" pos:end="111:78"><name pos:start="111:13" pos:end="111:24">do_phy_write</name><argument_list pos:start="111:25" pos:end="111:78">(<argument pos:start="111:26" pos:end="111:26"><expr pos:start="111:26" pos:end="111:26"><name pos:start="111:26" pos:end="111:26">s</name></expr></argument>, <argument pos:start="111:29" pos:end="111:52"><expr pos:start="111:29" pos:end="111:52"><call pos:start="111:29" pos:end="111:52"><name pos:start="111:29" pos:end="111:37">extract32</name><argument_list pos:start="111:38" pos:end="111:52">(<argument pos:start="111:39" pos:end="111:43"><expr pos:start="111:39" pos:end="111:43"><name pos:start="111:39" pos:end="111:43">value</name></expr></argument>, <argument pos:start="111:46" pos:end="111:47"><expr pos:start="111:46" pos:end="111:47"><literal type="number" pos:start="111:46" pos:end="111:47">18</literal></expr></argument>, <argument pos:start="111:50" pos:end="111:51"><expr pos:start="111:50" pos:end="111:51"><literal type="number" pos:start="111:50" pos:end="111:51">10</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:55" pos:end="111:77"><expr pos:start="111:55" pos:end="111:77"><call pos:start="111:55" pos:end="111:77"><name pos:start="111:55" pos:end="111:63">extract32</name><argument_list pos:start="111:64" pos:end="111:77">(<argument pos:start="111:65" pos:end="111:69"><expr pos:start="111:65" pos:end="111:69"><name pos:start="111:65" pos:end="111:69">value</name></expr></argument>, <argument pos:start="111:72" pos:end="111:72"><expr pos:start="111:72" pos:end="111:72"><literal type="number" pos:start="111:72" pos:end="111:72">0</literal></expr></argument>, <argument pos:start="111:75" pos:end="111:76"><expr pos:start="111:75" pos:end="111:76"><literal type="number" pos:start="111:75" pos:end="111:76">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="115:9" pos:end="115:62">/* raise the interrupt as the PHY operation is done */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:42"><expr pos:start="117:9" pos:end="117:41"><name pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:15">regs</name><index pos:start="117:16" pos:end="117:25">[<expr pos:start="117:17" pos:end="117:24"><name pos:start="117:17" pos:end="117:24">ENET_EIR</name></expr>]</index></name> <operator pos:start="117:27" pos:end="117:28">|=</operator> <name pos:start="117:30" pos:end="117:41">ENET_INT_MII</name></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:19">case <expr pos:start="121:10" pos:end="121:18"><name pos:start="121:10" pos:end="121:18">ENET_MSCR</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:38"><expr pos:start="123:9" pos:end="123:37"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:15">regs</name><index pos:start="123:16" pos:end="123:22">[<expr pos:start="123:17" pos:end="123:21"><name pos:start="123:17" pos:end="123:21">index</name></expr>]</index></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <name pos:start="123:26" pos:end="123:30">value</name> <operator pos:start="123:32" pos:end="123:32">&amp;</operator> <literal type="number" pos:start="123:34" pos:end="123:37">0xfe</literal></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    <case pos:start="127:5" pos:end="127:19">case <expr pos:start="127:10" pos:end="127:18"><name pos:start="127:10" pos:end="127:18">ENET_MIBC</name></expr>:</case>

        <comment type="block" pos:start="129:9" pos:end="129:35">/* TODO: Implement MIB.  */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:63"><expr pos:start="131:9" pos:end="131:62"><name pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:15">regs</name><index pos:start="131:16" pos:end="131:22">[<expr pos:start="131:17" pos:end="131:21"><name pos:start="131:17" pos:end="131:21">index</name></expr>]</index></name> <operator pos:start="131:24" pos:end="131:24">=</operator> <ternary pos:start="131:26" pos:end="131:62"><condition pos:start="131:26" pos:end="131:47"><expr pos:start="131:26" pos:end="131:45"><operator pos:start="131:26" pos:end="131:26">(</operator><name pos:start="131:27" pos:end="131:31">value</name> <operator pos:start="131:33" pos:end="131:33">&amp;</operator> <literal type="number" pos:start="131:35" pos:end="131:44">0x80000000</literal><operator pos:start="131:45" pos:end="131:45">)</operator></expr> ?</condition><then pos:start="131:49" pos:end="131:58"> <expr pos:start="131:49" pos:end="131:58"><literal type="number" pos:start="131:49" pos:end="131:58">0xc0000000</literal></expr> </then><else pos:start="131:60" pos:end="131:62">: <expr pos:start="131:62" pos:end="131:62"><literal type="number" pos:start="131:62" pos:end="131:62">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:18">case <expr pos:start="135:10" pos:end="135:17"><name pos:start="135:10" pos:end="135:17">ENET_RCR</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:44"><expr pos:start="137:9" pos:end="137:43"><name pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:15">regs</name><index pos:start="137:16" pos:end="137:22">[<expr pos:start="137:17" pos:end="137:21"><name pos:start="137:17" pos:end="137:21">index</name></expr>]</index></name> <operator pos:start="137:24" pos:end="137:24">=</operator> <name pos:start="137:26" pos:end="137:30">value</name> <operator pos:start="137:32" pos:end="137:32">&amp;</operator> <literal type="number" pos:start="137:34" pos:end="137:43">0x07ff003f</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="139:9" pos:end="139:41">/* TODO: Implement LOOP mode.  */</comment>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:18">case <expr pos:start="143:10" pos:end="143:17"><name pos:start="143:10" pos:end="143:17">ENET_TCR</name></expr>:</case>

        <comment type="block" pos:start="145:9" pos:end="145:65">/* We transmit immediately, so raise GRA immediately.  */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:15">regs</name><index pos:start="147:16" pos:end="147:22">[<expr pos:start="147:17" pos:end="147:21"><name pos:start="147:17" pos:end="147:21">index</name></expr>]</index></name> <operator pos:start="147:24" pos:end="147:24">=</operator> <name pos:start="147:26" pos:end="147:30">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="153:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:22">(<expr pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:17">value</name> <operator pos:start="149:19" pos:end="149:19">&amp;</operator> <literal type="number" pos:start="149:21" pos:end="149:21">1</literal></expr>)</condition> <block pos:start="149:24" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:46">

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:19">regs</name><index pos:start="151:20" pos:end="151:29">[<expr pos:start="151:21" pos:end="151:28"><name pos:start="151:21" pos:end="151:28">ENET_EIR</name></expr>]</index></name> <operator pos:start="151:31" pos:end="151:32">|=</operator> <name pos:start="151:34" pos:end="151:45">ENET_INT_GRA</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:19">case <expr pos:start="157:10" pos:end="157:18"><name pos:start="157:10" pos:end="157:18">ENET_PALR</name></expr>:</case>

        <expr_stmt pos:start="159:9" pos:end="159:31"><expr pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:22"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:15">regs</name><index pos:start="159:16" pos:end="159:22">[<expr pos:start="159:17" pos:end="159:21"><name pos:start="159:17" pos:end="159:21">index</name></expr>]</index></name> <operator pos:start="159:24" pos:end="159:24">=</operator> <name pos:start="159:26" pos:end="159:30">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:43"><expr pos:start="161:9" pos:end="161:42"><name pos:start="161:9" pos:end="161:28"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:15">conf</name><operator pos:start="161:16" pos:end="161:16">.</operator><name pos:start="161:17" pos:end="161:23">macaddr</name><operator pos:start="161:24" pos:end="161:24">.</operator><name pos:start="161:25" pos:end="161:25">a</name><index pos:start="161:26" pos:end="161:28">[<expr pos:start="161:27" pos:end="161:27"><literal type="number" pos:start="161:27" pos:end="161:27">0</literal></expr>]</index></name> <operator pos:start="161:30" pos:end="161:30">=</operator> <name pos:start="161:32" pos:end="161:36">value</name> <operator pos:start="161:38" pos:end="161:39">&gt;&gt;</operator> <literal type="number" pos:start="161:41" pos:end="161:42">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:43"><expr pos:start="163:9" pos:end="163:42"><name pos:start="163:9" pos:end="163:28"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:15">conf</name><operator pos:start="163:16" pos:end="163:16">.</operator><name pos:start="163:17" pos:end="163:23">macaddr</name><operator pos:start="163:24" pos:end="163:24">.</operator><name pos:start="163:25" pos:end="163:25">a</name><index pos:start="163:26" pos:end="163:28">[<expr pos:start="163:27" pos:end="163:27"><literal type="number" pos:start="163:27" pos:end="163:27">1</literal></expr>]</index></name> <operator pos:start="163:30" pos:end="163:30">=</operator> <name pos:start="163:32" pos:end="163:36">value</name> <operator pos:start="163:38" pos:end="163:39">&gt;&gt;</operator> <literal type="number" pos:start="163:41" pos:end="163:42">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:42"><expr pos:start="165:9" pos:end="165:41"><name pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:15">conf</name><operator pos:start="165:16" pos:end="165:16">.</operator><name pos:start="165:17" pos:end="165:23">macaddr</name><operator pos:start="165:24" pos:end="165:24">.</operator><name pos:start="165:25" pos:end="165:25">a</name><index pos:start="165:26" pos:end="165:28">[<expr pos:start="165:27" pos:end="165:27"><literal type="number" pos:start="165:27" pos:end="165:27">2</literal></expr>]</index></name> <operator pos:start="165:30" pos:end="165:30">=</operator> <name pos:start="165:32" pos:end="165:36">value</name> <operator pos:start="165:38" pos:end="165:39">&gt;&gt;</operator> <literal type="number" pos:start="165:41" pos:end="165:41">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:37"><expr pos:start="167:9" pos:end="167:36"><name pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:15">conf</name><operator pos:start="167:16" pos:end="167:16">.</operator><name pos:start="167:17" pos:end="167:23">macaddr</name><operator pos:start="167:24" pos:end="167:24">.</operator><name pos:start="167:25" pos:end="167:25">a</name><index pos:start="167:26" pos:end="167:28">[<expr pos:start="167:27" pos:end="167:27"><literal type="number" pos:start="167:27" pos:end="167:27">3</literal></expr>]</index></name> <operator pos:start="167:30" pos:end="167:30">=</operator> <name pos:start="167:32" pos:end="167:36">value</name></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:19">case <expr pos:start="171:10" pos:end="171:18"><name pos:start="171:10" pos:end="171:18">ENET_PAUR</name></expr>:</case>

        <expr_stmt pos:start="173:9" pos:end="173:59"><expr pos:start="173:9" pos:end="173:58"><name pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:15">regs</name><index pos:start="173:16" pos:end="173:22">[<expr pos:start="173:17" pos:end="173:21"><name pos:start="173:17" pos:end="173:21">index</name></expr>]</index></name> <operator pos:start="173:24" pos:end="173:24">=</operator> <operator pos:start="173:26" pos:end="173:26">(</operator><name pos:start="173:27" pos:end="173:31">value</name> <operator pos:start="173:33" pos:end="173:33">|</operator> <literal type="number" pos:start="173:35" pos:end="173:44">0x0000ffff</literal><operator pos:start="173:45" pos:end="173:45">)</operator> <operator pos:start="173:47" pos:end="173:47">&amp;</operator> <literal type="number" pos:start="173:49" pos:end="173:58">0xffff8808</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:43"><expr pos:start="175:9" pos:end="175:42"><name pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:15">conf</name><operator pos:start="175:16" pos:end="175:16">.</operator><name pos:start="175:17" pos:end="175:23">macaddr</name><operator pos:start="175:24" pos:end="175:24">.</operator><name pos:start="175:25" pos:end="175:25">a</name><index pos:start="175:26" pos:end="175:28">[<expr pos:start="175:27" pos:end="175:27"><literal type="number" pos:start="175:27" pos:end="175:27">4</literal></expr>]</index></name> <operator pos:start="175:30" pos:end="175:30">=</operator> <name pos:start="175:32" pos:end="175:36">value</name> <operator pos:start="175:38" pos:end="175:39">&gt;&gt;</operator> <literal type="number" pos:start="175:41" pos:end="175:42">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:43"><expr pos:start="177:9" pos:end="177:42"><name pos:start="177:9" pos:end="177:28"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:15">conf</name><operator pos:start="177:16" pos:end="177:16">.</operator><name pos:start="177:17" pos:end="177:23">macaddr</name><operator pos:start="177:24" pos:end="177:24">.</operator><name pos:start="177:25" pos:end="177:25">a</name><index pos:start="177:26" pos:end="177:28">[<expr pos:start="177:27" pos:end="177:27"><literal type="number" pos:start="177:27" pos:end="177:27">5</literal></expr>]</index></name> <operator pos:start="177:30" pos:end="177:30">=</operator> <name pos:start="177:32" pos:end="177:36">value</name> <operator pos:start="177:38" pos:end="177:39">&gt;&gt;</operator> <literal type="number" pos:start="177:41" pos:end="177:42">16</literal></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:18">case <expr pos:start="181:10" pos:end="181:17"><name pos:start="181:10" pos:end="181:17">ENET_OPD</name></expr>:</case>

        <expr_stmt pos:start="183:9" pos:end="183:59"><expr pos:start="183:9" pos:end="183:58"><name pos:start="183:9" pos:end="183:22"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:15">regs</name><index pos:start="183:16" pos:end="183:22">[<expr pos:start="183:17" pos:end="183:21"><name pos:start="183:17" pos:end="183:21">index</name></expr>]</index></name> <operator pos:start="183:24" pos:end="183:24">=</operator> <operator pos:start="183:26" pos:end="183:26">(</operator><name pos:start="183:27" pos:end="183:31">value</name> <operator pos:start="183:33" pos:end="183:33">&amp;</operator> <literal type="number" pos:start="183:35" pos:end="183:44">0x0000ffff</literal><operator pos:start="183:45" pos:end="183:45">)</operator> <operator pos:start="183:47" pos:end="183:47">|</operator> <literal type="number" pos:start="183:49" pos:end="183:58">0x00010000</literal></expr>;</expr_stmt>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:19">case <expr pos:start="187:10" pos:end="187:18"><name pos:start="187:10" pos:end="187:18">ENET_IAUR</name></expr>:</case>

    <case pos:start="189:5" pos:end="189:19">case <expr pos:start="189:10" pos:end="189:18"><name pos:start="189:10" pos:end="189:18">ENET_IALR</name></expr>:</case>

    <case pos:start="191:5" pos:end="191:19">case <expr pos:start="191:10" pos:end="191:18"><name pos:start="191:10" pos:end="191:18">ENET_GAUR</name></expr>:</case>

    <case pos:start="193:5" pos:end="193:19">case <expr pos:start="193:10" pos:end="193:18"><name pos:start="193:10" pos:end="193:18">ENET_GALR</name></expr>:</case>

        <comment type="block" pos:start="195:9" pos:end="195:50">/* TODO: implement MAC hash filtering.  */</comment>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:19">case <expr pos:start="199:10" pos:end="199:18"><name pos:start="199:10" pos:end="199:18">ENET_TFWR</name></expr>:</case>

        <if_stmt pos:start="201:9" pos:end="209:9"><if pos:start="201:9" pos:end="205:9">if <condition pos:start="201:12" pos:end="201:22">(<expr pos:start="201:13" pos:end="201:21"><name pos:start="201:13" pos:end="201:21"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:21">is_fec</name></name></expr>)</condition> <block pos:start="201:24" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:41">

            <expr_stmt pos:start="203:13" pos:end="203:41"><expr pos:start="203:13" pos:end="203:40"><name pos:start="203:13" pos:end="203:26"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:19">regs</name><index pos:start="203:20" pos:end="203:26">[<expr pos:start="203:21" pos:end="203:25"><name pos:start="203:21" pos:end="203:25">index</name></expr>]</index></name> <operator pos:start="203:28" pos:end="203:28">=</operator> <name pos:start="203:30" pos:end="203:34">value</name> <operator pos:start="203:36" pos:end="203:36">&amp;</operator> <literal type="number" pos:start="203:38" pos:end="203:40">0x3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="205:11" pos:end="209:9">else <block pos:start="205:16" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:43">

            <expr_stmt pos:start="207:13" pos:end="207:43"><expr pos:start="207:13" pos:end="207:42"><name pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:19">regs</name><index pos:start="207:20" pos:end="207:26">[<expr pos:start="207:21" pos:end="207:25"><name pos:start="207:21" pos:end="207:25">index</name></expr>]</index></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <name pos:start="207:30" pos:end="207:34">value</name> <operator pos:start="207:36" pos:end="207:36">&amp;</operator> <literal type="number" pos:start="207:38" pos:end="207:42">0x13f</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    <case pos:start="213:5" pos:end="213:19">case <expr pos:start="213:10" pos:end="213:18"><name pos:start="213:10" pos:end="213:18">ENET_RDSR</name></expr>:</case>

        <if_stmt pos:start="215:9" pos:end="223:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:22">(<expr pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:21">is_fec</name></name></expr>)</condition> <block pos:start="215:24" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:40">

            <expr_stmt pos:start="217:13" pos:end="217:40"><expr pos:start="217:13" pos:end="217:39"><name pos:start="217:13" pos:end="217:26"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:19">regs</name><index pos:start="217:20" pos:end="217:26">[<expr pos:start="217:21" pos:end="217:25"><name pos:start="217:21" pos:end="217:25">index</name></expr>]</index></name> <operator pos:start="217:28" pos:end="217:28">=</operator> <name pos:start="217:30" pos:end="217:34">value</name> <operator pos:start="217:36" pos:end="217:36">&amp;</operator> <operator pos:start="217:38" pos:end="217:38">~</operator><literal type="number" pos:start="217:39" pos:end="217:39">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="219:11" pos:end="223:9">else <block pos:start="219:16" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:40">

            <expr_stmt pos:start="221:13" pos:end="221:40"><expr pos:start="221:13" pos:end="221:39"><name pos:start="221:13" pos:end="221:26"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:19">regs</name><index pos:start="221:20" pos:end="221:26">[<expr pos:start="221:21" pos:end="221:25"><name pos:start="221:21" pos:end="221:25">index</name></expr>]</index></name> <operator pos:start="221:28" pos:end="221:28">=</operator> <name pos:start="221:30" pos:end="221:34">value</name> <operator pos:start="221:36" pos:end="221:36">&amp;</operator> <operator pos:start="221:38" pos:end="221:38">~</operator><literal type="number" pos:start="221:39" pos:end="221:39">7</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:42"><expr pos:start="225:9" pos:end="225:41"><name pos:start="225:9" pos:end="225:24"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:24">rx_descriptor</name></name> <operator pos:start="225:26" pos:end="225:26">=</operator> <name pos:start="225:28" pos:end="225:41"><name pos:start="225:28" pos:end="225:28">s</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:34">regs</name><index pos:start="225:35" pos:end="225:41">[<expr pos:start="225:36" pos:end="225:40"><name pos:start="225:36" pos:end="225:40">index</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="227:9" pos:end="227:14">break;</break>

    <case pos:start="229:5" pos:end="229:19">case <expr pos:start="229:10" pos:end="229:18"><name pos:start="229:10" pos:end="229:18">ENET_TDSR</name></expr>:</case>

        <if_stmt pos:start="231:9" pos:end="239:9"><if pos:start="231:9" pos:end="235:9">if <condition pos:start="231:12" pos:end="231:22">(<expr pos:start="231:13" pos:end="231:21"><name pos:start="231:13" pos:end="231:21"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:21">is_fec</name></name></expr>)</condition> <block pos:start="231:24" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:40">

            <expr_stmt pos:start="233:13" pos:end="233:40"><expr pos:start="233:13" pos:end="233:39"><name pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:13">s</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:19">regs</name><index pos:start="233:20" pos:end="233:26">[<expr pos:start="233:21" pos:end="233:25"><name pos:start="233:21" pos:end="233:25">index</name></expr>]</index></name> <operator pos:start="233:28" pos:end="233:28">=</operator> <name pos:start="233:30" pos:end="233:34">value</name> <operator pos:start="233:36" pos:end="233:36">&amp;</operator> <operator pos:start="233:38" pos:end="233:38">~</operator><literal type="number" pos:start="233:39" pos:end="233:39">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="235:11" pos:end="239:9">else <block pos:start="235:16" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:40">

            <expr_stmt pos:start="237:13" pos:end="237:40"><expr pos:start="237:13" pos:end="237:39"><name pos:start="237:13" pos:end="237:26"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:19">regs</name><index pos:start="237:20" pos:end="237:26">[<expr pos:start="237:21" pos:end="237:25"><name pos:start="237:21" pos:end="237:25">index</name></expr>]</index></name> <operator pos:start="237:28" pos:end="237:28">=</operator> <name pos:start="237:30" pos:end="237:34">value</name> <operator pos:start="237:36" pos:end="237:36">&amp;</operator> <operator pos:start="237:38" pos:end="237:38">~</operator><literal type="number" pos:start="237:39" pos:end="237:39">7</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:42"><expr pos:start="241:9" pos:end="241:41"><name pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:24">tx_descriptor</name></name> <operator pos:start="241:26" pos:end="241:26">=</operator> <name pos:start="241:28" pos:end="241:41"><name pos:start="241:28" pos:end="241:28">s</name><operator pos:start="241:29" pos:end="241:30">-&gt;</operator><name pos:start="241:31" pos:end="241:34">regs</name><index pos:start="241:35" pos:end="241:41">[<expr pos:start="241:36" pos:end="241:40"><name pos:start="241:36" pos:end="241:40">index</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:19">case <expr pos:start="245:10" pos:end="245:18"><name pos:start="245:10" pos:end="245:18">ENET_MRBR</name></expr>:</case>

        <expr_stmt pos:start="247:9" pos:end="247:44"><expr pos:start="247:9" pos:end="247:43"><name pos:start="247:9" pos:end="247:22"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:15">regs</name><index pos:start="247:16" pos:end="247:22">[<expr pos:start="247:17" pos:end="247:21"><name pos:start="247:17" pos:end="247:21">index</name></expr>]</index></name> <operator pos:start="247:24" pos:end="247:24">=</operator> <name pos:start="247:26" pos:end="247:30">value</name> <operator pos:start="247:32" pos:end="247:32">&amp;</operator> <literal type="number" pos:start="247:34" pos:end="247:43">0x00003ff0</literal></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>

    <default pos:start="251:5" pos:end="251:12">default:</default>

        <if_stmt pos:start="253:9" pos:end="261:9"><if pos:start="253:9" pos:end="257:9">if <condition pos:start="253:12" pos:end="253:22">(<expr pos:start="253:13" pos:end="253:21"><name pos:start="253:13" pos:end="253:21"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:21">is_fec</name></name></expr>)</condition> <block pos:start="253:24" pos:end="257:9">{<block_content pos:start="255:13" pos:end="255:43">

            <expr_stmt pos:start="255:13" pos:end="255:43"><expr pos:start="255:13" pos:end="255:42"><call pos:start="255:13" pos:end="255:42"><name pos:start="255:13" pos:end="255:25">imx_fec_write</name><argument_list pos:start="255:26" pos:end="255:42">(<argument pos:start="255:27" pos:end="255:27"><expr pos:start="255:27" pos:end="255:27"><name pos:start="255:27" pos:end="255:27">s</name></expr></argument>, <argument pos:start="255:30" pos:end="255:34"><expr pos:start="255:30" pos:end="255:34"><name pos:start="255:30" pos:end="255:34">index</name></expr></argument>, <argument pos:start="255:37" pos:end="255:41"><expr pos:start="255:37" pos:end="255:41"><name pos:start="255:37" pos:end="255:41">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="261:9">else <block pos:start="257:16" pos:end="261:9">{<block_content pos:start="259:13" pos:end="259:44">

            <expr_stmt pos:start="259:13" pos:end="259:44"><expr pos:start="259:13" pos:end="259:43"><call pos:start="259:13" pos:end="259:43"><name pos:start="259:13" pos:end="259:26">imx_enet_write</name><argument_list pos:start="259:27" pos:end="259:43">(<argument pos:start="259:28" pos:end="259:28"><expr pos:start="259:28" pos:end="259:28"><name pos:start="259:28" pos:end="259:28">s</name></expr></argument>, <argument pos:start="259:31" pos:end="259:35"><expr pos:start="259:31" pos:end="259:35"><name pos:start="259:31" pos:end="259:35">index</name></expr></argument>, <argument pos:start="259:38" pos:end="259:42"><expr pos:start="259:38" pos:end="259:42"><name pos:start="259:38" pos:end="259:42">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="263:9" pos:end="263:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="269:5" pos:end="269:22"><expr pos:start="269:5" pos:end="269:21"><call pos:start="269:5" pos:end="269:21"><name pos:start="269:5" pos:end="269:18">imx_eth_update</name><argument_list pos:start="269:19" pos:end="269:21">(<argument pos:start="269:20" pos:end="269:20"><expr pos:start="269:20" pos:end="269:20"><name pos:start="269:20" pos:end="269:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
