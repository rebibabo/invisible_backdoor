<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6484.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stts</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:27">entries</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">duration</name><init pos:start="11:21" pos:end="11:22">=<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:30">total_sample_count</name><init pos:start="13:31" pos:end="13:32">=<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_streams</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:10">c</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">fc</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">streams</name><index pos:start="21:24" pos:end="21:44">[<expr pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:25">c</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">fc</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:41">nb_streams</name></name><operator pos:start="21:42" pos:end="21:42">-</operator><literal type="number" pos:start="21:43" pos:end="21:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:6">sc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:22"><name pos:start="23:10" pos:end="23:11">st</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><call pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:11">avio_r8</name><argument_list pos:start="27:12" pos:end="27:15">(<argument pos:start="27:13" pos:end="27:14"><expr pos:start="27:13" pos:end="27:14"><name pos:start="27:13" pos:end="27:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:18" pos:end="27:30">/* version */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">avio_rb24</name><argument_list pos:start="29:14" pos:end="29:17">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:20" pos:end="29:30">/* flags */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:11">entries</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:27"><name pos:start="31:15" pos:end="31:23">avio_rb32</name><argument_list pos:start="31:24" pos:end="31:27">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:42"><expr pos:start="35:5" pos:end="37:41"><call pos:start="35:5" pos:end="37:41"><name pos:start="35:5" pos:end="35:11">av_dlog</name><argument_list pos:start="35:12" pos:end="37:41">(<argument pos:start="35:13" pos:end="35:17"><expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">c</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">fc</name></name></expr></argument>, <argument pos:start="35:20" pos:end="35:50"><expr pos:start="35:20" pos:end="35:50"><literal type="string" pos:start="35:20" pos:end="35:50">"track[%i].stts.entries = %i\n"</literal></expr></argument>,

            <argument pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:17">fc</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:29">nb_streams</name></name><operator pos:start="37:30" pos:end="37:30">-</operator><literal type="number" pos:start="37:31" pos:end="37:31">1</literal></expr></argument>, <argument pos:start="37:34" pos:end="37:40"><expr pos:start="37:34" pos:end="37:40"><name pos:start="37:34" pos:end="37:40">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:17"><if pos:start="41:5" pos:end="43:17">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:16">entries</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:17"><block_content pos:start="43:9" pos:end="43:17">

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:31"><if pos:start="45:5" pos:end="47:31">if <condition pos:start="45:8" pos:end="45:53">(<expr pos:start="45:9" pos:end="45:52"><name pos:start="45:9" pos:end="45:15">entries</name> <operator pos:start="45:17" pos:end="45:18">&gt;=</operator> <name pos:start="45:20" pos:end="45:27">UINT_MAX</name> <operator pos:start="45:29" pos:end="45:29">/</operator> <sizeof pos:start="45:31" pos:end="45:52">sizeof<argument_list pos:start="45:37" pos:end="45:52">(<argument pos:start="45:38" pos:end="45:51"><expr pos:start="45:38" pos:end="45:51"><operator pos:start="45:38" pos:end="45:38">*</operator><name pos:start="45:39" pos:end="45:51"><name pos:start="45:39" pos:end="45:40">sc</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:51">stts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:31"><block_content pos:start="47:9" pos:end="47:31">

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:64"><expr pos:start="51:5" pos:end="51:63"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:6">sc</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:17">stts_data</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:63"><name pos:start="51:21" pos:end="51:29">av_malloc</name><argument_list pos:start="51:30" pos:end="51:63">(<argument pos:start="51:31" pos:end="51:62"><expr pos:start="51:31" pos:end="51:62"><name pos:start="51:31" pos:end="51:37">entries</name> <operator pos:start="51:39" pos:end="51:39">*</operator> <sizeof pos:start="51:41" pos:end="51:62">sizeof<argument_list pos:start="51:47" pos:end="51:62">(<argument pos:start="51:48" pos:end="51:61"><expr pos:start="51:48" pos:end="51:61"><operator pos:start="51:48" pos:end="51:48">*</operator><name pos:start="51:49" pos:end="51:61"><name pos:start="51:49" pos:end="51:50">sc</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:61">stts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:31"><if pos:start="53:5" pos:end="55:31">if <condition pos:start="53:8" pos:end="53:23">(<expr pos:start="53:9" pos:end="53:22"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:11">sc</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:22">stts_data</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:31"><block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:6">sc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:18">stts_count</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:28">entries</name></expr>;</expr_stmt>



    <for pos:start="63:5" pos:end="91:5">for <control pos:start="63:9" pos:end="63:29">(<init pos:start="63:10" pos:end="63:13"><expr pos:start="63:10" pos:end="63:12"><name pos:start="63:10" pos:end="63:10">i</name><operator pos:start="63:11" pos:end="63:11">=</operator><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</init> <condition pos:start="63:15" pos:end="63:24"><expr pos:start="63:15" pos:end="63:23"><name pos:start="63:15" pos:end="63:15">i</name><operator pos:start="63:16" pos:end="63:16">&lt;</operator><name pos:start="63:17" pos:end="63:23">entries</name></expr>;</condition> <incr pos:start="63:26" pos:end="63:28"><expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:26">i</name><operator pos:start="63:27" pos:end="63:28">++</operator></expr></incr>)</control> <block pos:start="63:31" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:41">

        <decl_stmt pos:start="65:9" pos:end="65:28"><decl pos:start="65:9" pos:end="65:27"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:27">sample_duration</name></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:25"><decl pos:start="67:9" pos:end="67:24"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:24">sample_count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:20">sample_count</name><operator pos:start="71:21" pos:end="71:21">=</operator><call pos:start="71:22" pos:end="71:34"><name pos:start="71:22" pos:end="71:30">avio_rb32</name><argument_list pos:start="71:31" pos:end="71:34">(<argument pos:start="71:32" pos:end="71:33"><expr pos:start="71:32" pos:end="71:33"><name pos:start="71:32" pos:end="71:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:23">sample_duration</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:39"><name pos:start="73:27" pos:end="73:35">avio_rb32</name><argument_list pos:start="73:36" pos:end="73:39">(<argument pos:start="73:37" pos:end="73:38"><expr pos:start="73:37" pos:end="73:38"><name pos:start="73:37" pos:end="73:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:10">sc</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:21">stts_data</name><index pos:start="75:22" pos:end="75:24">[<expr pos:start="75:23" pos:end="75:23"><name pos:start="75:23" pos:end="75:23">i</name></expr>]</index></name><operator pos:start="75:25" pos:end="75:25">.</operator><name pos:start="75:26" pos:end="75:30">count</name><operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:44">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:51"><expr pos:start="77:9" pos:end="77:50"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:10">sc</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:21">stts_data</name><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">i</name></expr>]</index></name><operator pos:start="77:25" pos:end="77:25">.</operator><name pos:start="77:26" pos:end="77:33">duration</name><operator pos:start="77:34" pos:end="77:34">=</operator> <name pos:start="77:36" pos:end="77:50">sample_duration</name></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="83:47"><expr pos:start="81:9" pos:end="83:46"><call pos:start="81:9" pos:end="83:46"><name pos:start="81:9" pos:end="81:15">av_dlog</name><argument_list pos:start="81:16" pos:end="83:46">(<argument pos:start="81:17" pos:end="81:21"><expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:17">c</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:21">fc</name></name></expr></argument>, <argument pos:start="81:24" pos:end="81:62"><expr pos:start="81:24" pos:end="81:62"><literal type="string" pos:start="81:24" pos:end="81:62">"sample_count=%d, sample_duration=%d\n"</literal></expr></argument>,

                <argument pos:start="83:17" pos:end="83:28"><expr pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:28">sample_count</name></expr></argument>, <argument pos:start="83:31" pos:end="83:45"><expr pos:start="83:31" pos:end="83:45"><name pos:start="83:31" pos:end="83:45">sample_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:16">duration</name><operator pos:start="87:17" pos:end="87:18">+=</operator><operator pos:start="87:19" pos:end="87:19">(</operator><name pos:start="87:20" pos:end="87:26">int64_t</name><operator pos:start="87:27" pos:end="87:27">)</operator><name pos:start="87:28" pos:end="87:42">sample_duration</name><operator pos:start="87:43" pos:end="87:43">*</operator><name pos:start="87:44" pos:end="87:55">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:26">total_sample_count</name><operator pos:start="89:27" pos:end="89:28">+=</operator><name pos:start="89:29" pos:end="89:40">sample_count</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:6">st</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:17">nb_frames</name></name><operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:37">total_sample_count</name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:31"><if pos:start="97:5" pos:end="99:31">if <condition pos:start="97:8" pos:end="97:17">(<expr pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:16">duration</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:31"><block_content pos:start="99:9" pos:end="99:31">

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:10">st</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:20">duration</name></name><operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:30">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:6">sc</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:17">track_end</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:28">duration</name></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
