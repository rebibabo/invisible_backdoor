<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9878.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">read_uncompressed_sgi</name><parameter_list pos:start="1:33" pos:end="3:42">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:46">SGIInfo</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">si</name></decl></parameter>, 

        <parameter pos:start="3:9" pos:end="3:23"><decl pos:start="3:9" pos:end="3:23"><type pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:17">AVPicture</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:23">pict</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:38">ByteIOContext</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:41">f</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:15">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">y</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">z</name></decl>, <decl pos:start="7:18" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:28">chan_offset</name></decl>, <decl pos:start="7:31" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:33">ret</name> <init pos:start="7:35" pos:end="7:37">= <expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">dest_row</name></decl>, <decl pos:start="9:24" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:31">tmp_row</name> <init pos:start="9:33" pos:end="9:38">= <expr pos:start="9:35" pos:end="9:38"><name pos:start="9:35" pos:end="9:38">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:11">tmp_row</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:34"><name pos:start="13:15" pos:end="13:23">av_malloc</name><argument_list pos:start="13:24" pos:end="13:34">(<argument pos:start="13:25" pos:end="13:33"><expr pos:start="13:25" pos:end="13:33"><name pos:start="13:25" pos:end="13:33"><name pos:start="13:25" pos:end="13:26">si</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:33">xsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:21">/* skip header */</comment> 

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:13">url_fseek</name><argument_list pos:start="19:14" pos:end="19:43">(<argument pos:start="19:15" pos:end="19:15"><expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">f</name></expr></argument>, <argument pos:start="19:18" pos:end="19:32"><expr pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:32">SGI_HEADER_SIZE</name></expr></argument>, <argument pos:start="19:35" pos:end="19:42"><expr pos:start="19:35" pos:end="19:42"><name pos:start="19:35" pos:end="19:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:8">pict</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:18">linesize</name><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>]</index></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:26">si</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">xsize</name></name></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="71:5">for <control pos:start="27:9" pos:end="27:35">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">z</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:17">z</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:22">si</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:29">zsize</name></name></expr>;</condition> <incr pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:32">z</name><operator pos:start="27:33" pos:end="27:34">++</operator></expr></incr>)</control> <block pos:start="27:37" pos:end="71:5">{<block_content pos:start="35:9" pos:end="69:9">



<cpp:ifndef pos:start="31:1" pos:end="31:23">#<cpp:directive pos:start="31:2" pos:end="31:7">ifndef</cpp:directive> <name pos:start="31:9" pos:end="31:23">WORDS_BIGENDIAN</name></cpp:ifndef>

        <comment type="block" pos:start="33:9" pos:end="33:59">/* rgba -&gt; bgra for rgba32 on little endian cpus */</comment>

        <if_stmt pos:start="35:9" pos:end="43:28"><if pos:start="35:9" pos:end="37:32">if <condition pos:start="35:12" pos:end="35:37">(<expr pos:start="35:13" pos:end="35:36"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:14">si</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">zsize</name></name> <operator pos:start="35:23" pos:end="35:24">==</operator> <literal type="number" pos:start="35:26" pos:end="35:26">4</literal> <operator pos:start="35:28" pos:end="35:29">&amp;&amp;</operator> <name pos:start="35:31" pos:end="35:31">z</name> <operator pos:start="35:33" pos:end="35:34">!=</operator> <literal type="number" pos:start="35:36" pos:end="35:36">3</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:32"><block_content pos:start="37:13" pos:end="37:32"> 

            <expr_stmt pos:start="37:13" pos:end="37:32"><expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:23">chan_offset</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:29">2</literal> <operator pos:start="37:29" pos:end="37:29">-</operator> <name pos:start="37:31" pos:end="37:31">z</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="39:9" pos:end="43:28">else<block type="pseudo" pos:start="43:13" pos:end="43:28"><block_content pos:start="43:13" pos:end="43:28">

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:23">chan_offset</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:27">z</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

        <for pos:start="47:9" pos:end="69:9">for <control pos:start="47:13" pos:end="47:44">(<init pos:start="47:14" pos:end="47:31"><expr pos:start="47:14" pos:end="47:30"><name pos:start="47:14" pos:end="47:14">y</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:26"><name pos:start="47:18" pos:end="47:19">si</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:26">ysize</name></name> <operator pos:start="47:28" pos:end="47:28">-</operator> <literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr>;</init> <condition pos:start="47:33" pos:end="47:39"><expr pos:start="47:33" pos:end="47:38"><name pos:start="47:33" pos:end="47:33">y</name> <operator pos:start="47:35" pos:end="47:36">&gt;=</operator> <literal type="number" pos:start="47:38" pos:end="47:38">0</literal></expr>;</condition> <incr pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:41">y</name><operator pos:start="47:42" pos:end="47:43">--</operator></expr></incr>)</control> <block pos:start="47:46" pos:end="69:9">{<block_content pos:start="49:13" pos:end="67:13">

            <expr_stmt pos:start="49:13" pos:end="49:67"><expr pos:start="49:13" pos:end="49:66"><name pos:start="49:13" pos:end="49:20">dest_row</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:36"><name pos:start="49:24" pos:end="49:27">pict</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:33">data</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>]</index></name> <operator pos:start="49:38" pos:end="49:38">+</operator> <operator pos:start="49:40" pos:end="49:40">(</operator><name pos:start="49:41" pos:end="49:41">y</name> <operator pos:start="49:43" pos:end="49:43">*</operator> <name pos:start="49:45" pos:end="49:53"><name pos:start="49:45" pos:end="49:46">si</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:53">xsize</name></name> <operator pos:start="49:55" pos:end="49:55">*</operator> <name pos:start="49:57" pos:end="49:65"><name pos:start="49:57" pos:end="49:58">si</name><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:65">zsize</name></name><operator pos:start="49:66" pos:end="49:66">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:51">(<expr pos:start="53:17" pos:end="53:50"><operator pos:start="53:17" pos:end="53:17">!</operator><call pos:start="53:18" pos:end="53:50"><name pos:start="53:18" pos:end="53:27">get_buffer</name><argument_list pos:start="53:28" pos:end="53:50">(<argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">f</name></expr></argument>, <argument pos:start="53:32" pos:end="53:38"><expr pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:38">tmp_row</name></expr></argument>, <argument pos:start="53:41" pos:end="53:49"><expr pos:start="53:41" pos:end="53:49"><name pos:start="53:41" pos:end="53:49"><name pos:start="53:41" pos:end="53:42">si</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:49">xsize</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:53" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:29">

                <expr_stmt pos:start="55:17" pos:end="55:25"><expr pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:19">ret</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <operator pos:start="55:23" pos:end="55:23">-</operator><literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>;</expr_stmt>

                <goto pos:start="57:17" pos:end="57:29">goto <name pos:start="57:22" pos:end="57:28">cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <for pos:start="61:13" pos:end="67:13">for <control pos:start="61:17" pos:end="61:43">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">x</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:38"><expr pos:start="61:25" pos:end="61:37"><name pos:start="61:25" pos:end="61:25">x</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:30">si</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:37">xsize</name></name></expr>;</condition> <incr pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:40">x</name><operator pos:start="61:41" pos:end="61:42">++</operator></expr></incr>)</control> <block pos:start="61:45" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:38">

                <expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><name pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:24">dest_row</name><index pos:start="63:25" pos:end="63:37">[<expr pos:start="63:26" pos:end="63:36"><name pos:start="63:26" pos:end="63:36">chan_offset</name></expr>]</index></name> <operator pos:start="63:39" pos:end="63:39">=</operator> <name pos:start="63:41" pos:end="63:50"><name pos:start="63:41" pos:end="63:47">tmp_row</name><index pos:start="63:48" pos:end="63:50">[<expr pos:start="63:49" pos:end="63:49"><name pos:start="63:49" pos:end="63:49">x</name></expr>]</index></name></expr>;</expr_stmt> 

                <expr_stmt pos:start="65:17" pos:end="65:38"><expr pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:24">dest_row</name> <operator pos:start="65:26" pos:end="65:27">+=</operator> <name pos:start="65:29" pos:end="65:37"><name pos:start="65:29" pos:end="65:30">si</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:37">zsize</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



<label pos:start="75:1" pos:end="75:8"><name pos:start="75:1" pos:end="75:7">cleanup</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:21"><expr pos:start="77:5" pos:end="77:20"><call pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:11">av_free</name><argument_list pos:start="77:12" pos:end="77:20">(<argument pos:start="77:13" pos:end="77:19"><expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:19">tmp_row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
