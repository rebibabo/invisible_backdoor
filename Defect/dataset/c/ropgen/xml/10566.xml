<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10566.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">alac_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">frame</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:70">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:13">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AlacEncodeContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">out_bytes</name></decl>, <decl pos:start="9:20" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:33">max_frame_size</name></decl>, <decl pos:start="9:36" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:36" pos:end="9:38">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:17">frame_size</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:37"><name pos:start="13:21" pos:end="13:25">frame</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:37">nb_samples</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:49"><if pos:start="17:5" pos:end="21:72">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:13">frame</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_samples</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <name pos:start="17:29" pos:end="17:46">DEFAULT_FRAME_SIZE</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="21:72"><block_content pos:start="19:9" pos:end="21:72">

        <expr_stmt pos:start="19:9" pos:end="21:72"><expr pos:start="19:9" pos:end="21:71"><name pos:start="19:9" pos:end="19:22">max_frame_size</name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="21:71"><name pos:start="19:26" pos:end="19:43">get_max_frame_size</name><argument_list pos:start="19:44" pos:end="21:71">(<argument pos:start="19:45" pos:end="19:57"><expr pos:start="19:45" pos:end="19:57"><name pos:start="19:45" pos:end="19:57"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:57">frame_size</name></name></expr></argument>, <argument pos:start="19:60" pos:end="19:74"><expr pos:start="19:60" pos:end="19:74"><name pos:start="19:60" pos:end="19:74"><name pos:start="19:60" pos:end="19:64">avctx</name><operator pos:start="19:65" pos:end="19:66">-&gt;</operator><name pos:start="19:67" pos:end="19:74">channels</name></name></expr></argument>,

                                            <argument pos:start="21:45" pos:end="21:70"><expr pos:start="21:45" pos:end="21:70"><name pos:start="21:45" pos:end="21:70"><name pos:start="21:45" pos:end="21:49">avctx</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:70">bits_per_raw_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:49">else<block type="pseudo" pos:start="25:9" pos:end="25:49"><block_content pos:start="25:9" pos:end="25:49">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:22">max_frame_size</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:48"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:48">max_coded_frame_size</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:67">(<expr pos:start="29:9" pos:end="29:66"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ret</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:65"><name pos:start="29:16" pos:end="29:31">ff_alloc_packet2</name><argument_list pos:start="29:32" pos:end="29:65">(<argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">avctx</name></expr></argument>, <argument pos:start="29:40" pos:end="29:44"><expr pos:start="29:40" pos:end="29:44"><name pos:start="29:40" pos:end="29:44">avpkt</name></expr></argument>, <argument pos:start="29:47" pos:end="29:64"><expr pos:start="29:47" pos:end="29:64"><literal type="number" pos:start="29:47" pos:end="29:47">2</literal> <operator pos:start="29:49" pos:end="29:49">*</operator> <name pos:start="29:51" pos:end="29:64">max_frame_size</name></expr></argument>)</argument_list></call><operator pos:start="29:66" pos:end="29:66">)</operator></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:51">/* use verbatim mode for compression_level 0 */</comment>

    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:28">compression_level</name></name></expr>)</condition> <block pos:start="37:31" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:56">

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">verbatim</name></name>   <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">extra_bits</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:50"><name pos:start="41:25" pos:end="41:29">avctx</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:50">bits_per_raw_sample</name></name> <operator pos:start="41:52" pos:end="41:52">-</operator> <literal type="number" pos:start="41:54" pos:end="41:55">16</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:26">

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:19">verbatim</name></name>   <operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">extra_bits</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:60"><expr pos:start="53:5" pos:end="53:59"><name pos:start="53:5" pos:end="53:13">out_bytes</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:59"><name pos:start="53:17" pos:end="53:27">write_frame</name><argument_list pos:start="53:28" pos:end="53:59">(<argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">s</name></expr></argument>, <argument pos:start="53:32" pos:end="53:36"><expr pos:start="53:32" pos:end="53:36"><name pos:start="53:32" pos:end="53:36">avpkt</name></expr></argument>, <argument pos:start="53:39" pos:end="53:58"><expr pos:start="53:39" pos:end="53:58"><name pos:start="53:39" pos:end="53:58"><name pos:start="53:39" pos:end="53:43">frame</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:58">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:35">(<expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:17">out_bytes</name> <operator pos:start="57:19" pos:end="57:19">&gt;</operator> <name pos:start="57:21" pos:end="57:34">max_frame_size</name></expr>)</condition> <block pos:start="57:37" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:64">

        <comment type="block" pos:start="59:9" pos:end="59:48">/* frame too large. use verbatim mode */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:19">verbatim</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">extra_bits</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:64"><expr pos:start="65:9" pos:end="65:63"><name pos:start="65:9" pos:end="65:17">out_bytes</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:63"><name pos:start="65:21" pos:end="65:31">write_frame</name><argument_list pos:start="65:32" pos:end="65:63">(<argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><name pos:start="65:33" pos:end="65:33">s</name></expr></argument>, <argument pos:start="65:36" pos:end="65:40"><expr pos:start="65:36" pos:end="65:40"><name pos:start="65:36" pos:end="65:40">avpkt</name></expr></argument>, <argument pos:start="65:43" pos:end="65:62"><expr pos:start="65:43" pos:end="65:62"><name pos:start="65:43" pos:end="65:62"><name pos:start="65:43" pos:end="65:47">frame</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:62">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:9">avpkt</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:15">size</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:27">out_bytes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:19">got_packet_ptr</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:23">1</literal></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
