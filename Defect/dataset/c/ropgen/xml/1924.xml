<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1924.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">do_create_others</name><parameter_list pos:start="1:28" pos:end="1:58">(<parameter pos:start="1:29" pos:end="1:36"><decl pos:start="1:29" pos:end="1:36"><type pos:start="1:29" pos:end="1:36"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:36">type</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:44">struct</name> <name pos:start="1:46" pos:end="1:50">iovec</name></name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">iovec</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:18">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:9">dev_t</name></type> <name pos:start="5:11" pos:end="5:14">rdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">retval</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:29">= <expr pos:start="9:18" pos:end="9:29"><name pos:start="9:18" pos:end="9:29">PROXY_HDR_SZ</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">V9fsString</name></type> <name pos:start="11:16" pos:end="11:22">oldpath</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:25" pos:end="11:28">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">mode</name></decl>, <decl pos:start="13:15" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">uid</name></decl>, <decl pos:start="13:20" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:22">gid</name></decl>, <decl pos:start="13:25" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:31">cur_uid</name></decl>, <decl pos:start="13:34" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:34" pos:end="13:40">cur_gid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:20">v9fs_string_init</name><argument_list pos:start="17:21" pos:end="17:27">(<argument pos:start="17:22" pos:end="17:26"><expr pos:start="17:22" pos:end="17:26"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:26">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><call pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:20">v9fs_string_init</name><argument_list pos:start="19:21" pos:end="19:30">(<argument pos:start="19:22" pos:end="19:29"><expr pos:start="19:22" pos:end="19:29"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:29">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:11">cur_uid</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:21">geteuid</name><argument_list pos:start="21:22" pos:end="21:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:11">cur_gid</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:23"><name pos:start="23:15" pos:end="23:21">getegid</name><argument_list pos:start="23:22" pos:end="23:23">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:10">retval</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:61"><name pos:start="27:14" pos:end="27:28">proxy_unmarshal</name><argument_list pos:start="27:29" pos:end="27:61">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">iovec</name></expr></argument>, <argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:42">offset</name></expr></argument>, <argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><literal type="string" pos:start="27:45" pos:end="27:48">"dd"</literal></expr></argument>, <argument pos:start="27:51" pos:end="27:54"><expr pos:start="27:51" pos:end="27:54"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:54">uid</name></expr></argument>, <argument pos:start="27:57" pos:end="27:60"><expr pos:start="27:57" pos:end="27:60"><operator pos:start="27:57" pos:end="27:57">&amp;</operator><name pos:start="27:58" pos:end="27:60">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:14">retval</name> <operator pos:start="29:16" pos:end="29:16">&lt;</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition> <block pos:start="29:21" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:22">

        <return pos:start="31:9" pos:end="31:22">return <expr pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:21">retval</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:10">offset</name> <operator pos:start="35:12" pos:end="35:13">+=</operator> <name pos:start="35:15" pos:end="35:20">retval</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:10">retval</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:32"><name pos:start="37:14" pos:end="37:22">setfsugid</name><argument_list pos:start="37:23" pos:end="37:32">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">uid</name></expr></argument>, <argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:14">retval</name> <operator pos:start="39:16" pos:end="39:16">&lt;</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>)</condition> <block pos:start="39:21" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:21">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:14">retval</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">-</operator><name pos:start="41:19" pos:end="41:23">errno</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="47:5" pos:end="91:5">switch <condition pos:start="47:12" pos:end="47:17">(<expr pos:start="47:13" pos:end="47:16"><name pos:start="47:13" pos:end="47:16">type</name></expr>)</condition> <block pos:start="47:19" pos:end="91:5">{<block_content pos:start="49:5" pos:end="89:14">

    <case pos:start="49:5" pos:end="49:17">case <expr pos:start="49:10" pos:end="49:16"><name pos:start="49:10" pos:end="49:16">T_MKNOD</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:76"><expr pos:start="51:9" pos:end="51:75"><name pos:start="51:9" pos:end="51:14">retval</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:75"><name pos:start="51:18" pos:end="51:32">proxy_unmarshal</name><argument_list pos:start="51:33" pos:end="51:75">(<argument pos:start="51:34" pos:end="51:38"><expr pos:start="51:34" pos:end="51:38"><name pos:start="51:34" pos:end="51:38">iovec</name></expr></argument>, <argument pos:start="51:41" pos:end="51:46"><expr pos:start="51:41" pos:end="51:46"><name pos:start="51:41" pos:end="51:46">offset</name></expr></argument>, <argument pos:start="51:49" pos:end="51:53"><expr pos:start="51:49" pos:end="51:53"><literal type="string" pos:start="51:49" pos:end="51:53">"sdq"</literal></expr></argument>, <argument pos:start="51:56" pos:end="51:60"><expr pos:start="51:56" pos:end="51:60"><operator pos:start="51:56" pos:end="51:56">&amp;</operator><name pos:start="51:57" pos:end="51:60">path</name></expr></argument>, <argument pos:start="51:63" pos:end="51:67"><expr pos:start="51:63" pos:end="51:67"><operator pos:start="51:63" pos:end="51:63">&amp;</operator><name pos:start="51:64" pos:end="51:67">mode</name></expr></argument>, <argument pos:start="51:70" pos:end="51:74"><expr pos:start="51:70" pos:end="51:74"><operator pos:start="51:70" pos:end="51:70">&amp;</operator><name pos:start="51:71" pos:end="51:74">rdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:23">(<expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:18">retval</name> <operator pos:start="53:20" pos:end="53:20">&lt;</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>)</condition> <block pos:start="53:25" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:25">

            <goto pos:start="55:13" pos:end="55:25">goto <name pos:start="55:18" pos:end="55:24">err_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:14">retval</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="59:45"><name pos:start="59:18" pos:end="59:22">mknod</name><argument_list pos:start="59:23" pos:end="59:45">(<argument pos:start="59:24" pos:end="59:32"><expr pos:start="59:24" pos:end="59:32"><name pos:start="59:24" pos:end="59:32"><name pos:start="59:24" pos:end="59:27">path</name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:32">data</name></name></expr></argument>, <argument pos:start="59:35" pos:end="59:38"><expr pos:start="59:35" pos:end="59:38"><name pos:start="59:35" pos:end="59:38">mode</name></expr></argument>, <argument pos:start="59:41" pos:end="59:44"><expr pos:start="59:41" pos:end="59:44"><name pos:start="59:41" pos:end="59:44">rdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:17">case <expr pos:start="63:10" pos:end="63:16"><name pos:start="63:10" pos:end="63:16">T_MKDIR</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:68"><expr pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:14">retval</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:67"><name pos:start="65:18" pos:end="65:32">proxy_unmarshal</name><argument_list pos:start="65:33" pos:end="65:67">(<argument pos:start="65:34" pos:end="65:38"><expr pos:start="65:34" pos:end="65:38"><name pos:start="65:34" pos:end="65:38">iovec</name></expr></argument>, <argument pos:start="65:41" pos:end="65:46"><expr pos:start="65:41" pos:end="65:46"><name pos:start="65:41" pos:end="65:46">offset</name></expr></argument>, <argument pos:start="65:49" pos:end="65:52"><expr pos:start="65:49" pos:end="65:52"><literal type="string" pos:start="65:49" pos:end="65:52">"sd"</literal></expr></argument>, <argument pos:start="65:55" pos:end="65:59"><expr pos:start="65:55" pos:end="65:59"><operator pos:start="65:55" pos:end="65:55">&amp;</operator><name pos:start="65:56" pos:end="65:59">path</name></expr></argument>, <argument pos:start="65:62" pos:end="65:66"><expr pos:start="65:62" pos:end="65:66"><operator pos:start="65:62" pos:end="65:62">&amp;</operator><name pos:start="65:63" pos:end="65:66">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:23">(<expr pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:18">retval</name> <operator pos:start="67:20" pos:end="67:20">&lt;</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>)</condition> <block pos:start="67:25" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:25">

            <goto pos:start="69:13" pos:end="69:25">goto <name pos:start="69:18" pos:end="69:24">err_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:14">retval</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <call pos:start="73:18" pos:end="73:39"><name pos:start="73:18" pos:end="73:22">mkdir</name><argument_list pos:start="73:23" pos:end="73:39">(<argument pos:start="73:24" pos:end="73:32"><expr pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:27">path</name><operator pos:start="73:28" pos:end="73:28">.</operator><name pos:start="73:29" pos:end="73:32">data</name></name></expr></argument>, <argument pos:start="73:35" pos:end="73:38"><expr pos:start="73:35" pos:end="73:38"><name pos:start="73:35" pos:end="73:38">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:19">case <expr pos:start="77:10" pos:end="77:18"><name pos:start="77:10" pos:end="77:18">T_SYMLINK</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:71"><expr pos:start="79:9" pos:end="79:70"><name pos:start="79:9" pos:end="79:14">retval</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:70"><name pos:start="79:18" pos:end="79:32">proxy_unmarshal</name><argument_list pos:start="79:33" pos:end="79:70">(<argument pos:start="79:34" pos:end="79:38"><expr pos:start="79:34" pos:end="79:38"><name pos:start="79:34" pos:end="79:38">iovec</name></expr></argument>, <argument pos:start="79:41" pos:end="79:46"><expr pos:start="79:41" pos:end="79:46"><name pos:start="79:41" pos:end="79:46">offset</name></expr></argument>, <argument pos:start="79:49" pos:end="79:52"><expr pos:start="79:49" pos:end="79:52"><literal type="string" pos:start="79:49" pos:end="79:52">"ss"</literal></expr></argument>, <argument pos:start="79:55" pos:end="79:62"><expr pos:start="79:55" pos:end="79:62"><operator pos:start="79:55" pos:end="79:55">&amp;</operator><name pos:start="79:56" pos:end="79:62">oldpath</name></expr></argument>, <argument pos:start="79:65" pos:end="79:69"><expr pos:start="79:65" pos:end="79:69"><operator pos:start="79:65" pos:end="79:65">&amp;</operator><name pos:start="79:66" pos:end="79:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:23">(<expr pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:18">retval</name> <operator pos:start="81:20" pos:end="81:20">&lt;</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>)</condition> <block pos:start="81:25" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:25">

            <goto pos:start="83:13" pos:end="83:25">goto <name pos:start="83:18" pos:end="83:24">err_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:14">retval</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:49"><name pos:start="87:18" pos:end="87:24">symlink</name><argument_list pos:start="87:25" pos:end="87:49">(<argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:32">oldpath</name><operator pos:start="87:33" pos:end="87:33">.</operator><name pos:start="87:34" pos:end="87:37">data</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:48"><expr pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:43">path</name><operator pos:start="87:44" pos:end="87:44">.</operator><name pos:start="87:45" pos:end="87:48">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:19">(<expr pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:14">retval</name> <operator pos:start="93:16" pos:end="93:16">&lt;</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>)</condition> <block pos:start="93:21" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:24">

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:14">retval</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <operator pos:start="95:18" pos:end="95:18">-</operator><name pos:start="95:19" pos:end="95:23">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="101:1" pos:end="101:8"><name pos:start="101:1" pos:end="101:7">err_out</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:28"><expr pos:start="103:5" pos:end="103:27"><call pos:start="103:5" pos:end="103:27"><name pos:start="103:5" pos:end="103:20">v9fs_string_free</name><argument_list pos:start="103:21" pos:end="103:27">(<argument pos:start="103:22" pos:end="103:26"><expr pos:start="103:22" pos:end="103:26"><operator pos:start="103:22" pos:end="103:22">&amp;</operator><name pos:start="103:23" pos:end="103:26">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:31"><expr pos:start="105:5" pos:end="105:30"><call pos:start="105:5" pos:end="105:30"><name pos:start="105:5" pos:end="105:20">v9fs_string_free</name><argument_list pos:start="105:21" pos:end="105:30">(<argument pos:start="105:22" pos:end="105:29"><expr pos:start="105:22" pos:end="105:29"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:29">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:32"><expr pos:start="107:5" pos:end="107:31"><call pos:start="107:5" pos:end="107:31"><name pos:start="107:5" pos:end="107:13">setfsugid</name><argument_list pos:start="107:14" pos:end="107:31">(<argument pos:start="107:15" pos:end="107:21"><expr pos:start="107:15" pos:end="107:21"><name pos:start="107:15" pos:end="107:21">cur_uid</name></expr></argument>, <argument pos:start="107:24" pos:end="107:30"><expr pos:start="107:24" pos:end="107:30"><name pos:start="107:24" pos:end="107:30">cur_gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:18">return <expr pos:start="109:12" pos:end="109:17"><name pos:start="109:12" pos:end="109:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
