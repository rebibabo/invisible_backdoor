<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2536.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:42">nfs_get_allocated_file_size</name><parameter_list pos:start="1:43" pos:end="1:64">(<parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:59">BlockDriverState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:58">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">NFSClient</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">client</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">NFSRPC</name></type> <name pos:start="7:12" pos:end="7:15">task</name> <init pos:start="7:17" pos:end="7:21">= <expr pos:start="7:19" pos:end="7:21"><block pos:start="7:19" pos:end="7:21">{<expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">stat</name></name></type> <name pos:start="9:17" pos:end="9:18">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:43">(<expr pos:start="13:9" pos:end="15:42"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25">bdrv_is_read_only</name><argument_list pos:start="13:26" pos:end="13:29">(<argument pos:start="13:27" pos:end="13:28"><expr pos:start="13:27" pos:end="13:28"><name pos:start="13:27" pos:end="13:28">bs</name></expr></argument>)</argument_list></call> <operator pos:start="13:31" pos:end="13:32">&amp;&amp;</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:24"><name pos:start="15:11" pos:end="15:12">bs</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:24">open_flags</name></name> <operator pos:start="15:26" pos:end="15:26">&amp;</operator> <name pos:start="15:28" pos:end="15:41">BDRV_O_NOCACHE</name><operator pos:start="15:42" pos:end="15:42">)</operator></expr>)</condition> <block pos:start="15:45" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:39">

        <return pos:start="17:9" pos:end="17:39">return <expr pos:start="17:16" pos:end="17:38"><name pos:start="17:16" pos:end="17:32"><name pos:start="17:16" pos:end="17:21">client</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:32">st_blocks</name></name> <operator pos:start="17:34" pos:end="17:34">*</operator> <literal type="number" pos:start="17:36" pos:end="17:38">512</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:8">task</name><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:11">st</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:17">st</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="27:36">(<expr pos:start="25:9" pos:end="27:35"><call pos:start="25:9" pos:end="27:30"><name pos:start="25:9" pos:end="25:23">nfs_fstat_async</name><argument_list pos:start="25:24" pos:end="27:30">(<argument pos:start="25:25" pos:end="25:39"><expr pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:30">client</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:39">context</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:51"><expr pos:start="25:42" pos:end="25:51"><name pos:start="25:42" pos:end="25:51"><name pos:start="25:42" pos:end="25:47">client</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:51">fh</name></name></expr></argument>, <argument pos:start="25:54" pos:end="25:70"><expr pos:start="25:54" pos:end="25:70"><name pos:start="25:54" pos:end="25:70">nfs_co_generic_cb</name></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:29"><expr pos:start="27:25" pos:end="27:29"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:29">task</name></expr></argument>)</argument_list></call> <operator pos:start="27:32" pos:end="27:33">!=</operator> <literal type="number" pos:start="27:35" pos:end="27:35">0</literal></expr>)</condition> <block pos:start="27:38" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="35:5" pos:end="41:5">while <condition pos:start="35:11" pos:end="35:26">(<expr pos:start="35:12" pos:end="35:25"><operator pos:start="35:12" pos:end="35:12">!</operator><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:16">task</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:25">complete</name></name></expr>)</condition> <block pos:start="35:28" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:44">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><call pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:22">nfs_set_events</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:16">aio_poll</name><argument_list pos:start="39:17" pos:end="39:43">(<argument pos:start="39:18" pos:end="39:36"><expr pos:start="39:18" pos:end="39:36"><name pos:start="39:18" pos:end="39:36"><name pos:start="39:18" pos:end="39:23">client</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:36">aio_context</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="45:5" pos:end="45:58">return <expr pos:start="45:12" pos:end="45:57"><operator pos:start="45:12" pos:end="45:12">(</operator><ternary pos:start="45:13" pos:end="45:56"><condition pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:16">task</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:20">ret</name></name> <operator pos:start="45:22" pos:end="45:22">&lt;</operator> <literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr> ?</condition><then pos:start="45:28" pos:end="45:35"> <expr pos:start="45:28" pos:end="45:35"><name pos:start="45:28" pos:end="45:35"><name pos:start="45:28" pos:end="45:31">task</name><operator pos:start="45:32" pos:end="45:32">.</operator><name pos:start="45:33" pos:end="45:35">ret</name></name></expr> </then><else pos:start="45:37" pos:end="45:56">: <expr pos:start="45:39" pos:end="45:56"><name pos:start="45:39" pos:end="45:50"><name pos:start="45:39" pos:end="45:40">st</name><operator pos:start="45:41" pos:end="45:41">.</operator><name pos:start="45:42" pos:end="45:50">st_blocks</name></name> <operator pos:start="45:52" pos:end="45:52">*</operator> <literal type="number" pos:start="45:54" pos:end="45:56">512</literal></expr></else></ternary><operator pos:start="45:57" pos:end="45:57">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
