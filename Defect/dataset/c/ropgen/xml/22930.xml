<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22930.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">vnc_dpy_copy</name><parameter_list pos:start="1:25" pos:end="7:60">(<parameter pos:start="1:26" pos:end="1:51"><decl pos:start="1:26" pos:end="1:51"><type pos:start="1:26" pos:end="1:51"><name pos:start="1:26" pos:end="1:46">DisplayChangeListener</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dcl</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:37">DisplayState</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:41">ds</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:34"><decl pos:start="5:26" pos:end="5:34"><type pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:28">int</name></type> <name pos:start="5:30" pos:end="5:34">src_x</name></decl></parameter>, <parameter pos:start="5:37" pos:end="5:45"><decl pos:start="5:37" pos:end="5:45"><type pos:start="5:37" pos:end="5:45"><name pos:start="5:37" pos:end="5:39">int</name></type> <name pos:start="5:41" pos:end="5:45">src_y</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:34"><decl pos:start="7:26" pos:end="7:34"><type pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:28">int</name></type> <name pos:start="7:30" pos:end="7:34">dst_x</name></decl></parameter>, <parameter pos:start="7:37" pos:end="7:45"><decl pos:start="7:37" pos:end="7:45"><type pos:start="7:37" pos:end="7:45"><name pos:start="7:37" pos:end="7:39">int</name></type> <name pos:start="7:41" pos:end="7:45">dst_y</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:52"><decl pos:start="7:48" pos:end="7:52"><type pos:start="7:48" pos:end="7:52"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:52">w</name></decl></parameter>, <parameter pos:start="7:55" pos:end="7:59"><decl pos:start="7:55" pos:end="7:59"><type pos:start="7:55" pos:end="7:59"><name pos:start="7:55" pos:end="7:57">int</name></type> <name pos:start="7:59" pos:end="7:59">h</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="145:1">{<block_content pos:start="11:5" pos:end="143:5">

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">VncDisplay</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">vd</name> <init pos:start="11:20" pos:end="11:31">= <expr pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:23">ds</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:31">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">VncState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">vs</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">vn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">src_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20">dst_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">x</name></decl>, <decl pos:start="19:15" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:15">y</name></decl>, <decl pos:start="19:18" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:18" pos:end="19:22">pitch</name></decl>, <decl pos:start="19:25" pos:end="19:27"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:27">inc</name></decl>, <decl pos:start="19:30" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:30" pos:end="19:34">w_lim</name></decl>, <decl pos:start="19:37" pos:end="19:37"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:37" pos:end="19:37">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">cmp_bytes</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:30">vnc_refresh_server_surface</name><argument_list pos:start="25:31" pos:end="25:34">(<argument pos:start="25:32" pos:end="25:33"><expr pos:start="25:32" pos:end="25:33"><name pos:start="25:32" pos:end="25:33">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="27:24" pos:end="27:51">(<argument pos:start="27:25" pos:end="27:26">vs</argument>, <argument pos:start="27:29" pos:end="27:40">&amp;vd-&gt;clients</argument>, <argument pos:start="27:43" pos:end="27:46">next</argument>, <argument pos:start="27:49" pos:end="27:50">vn</argument>)</argument_list></macro> <block pos:start="27:53" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:9">

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:54">(<expr pos:start="29:13" pos:end="29:53"><call pos:start="29:13" pos:end="29:53"><name pos:start="29:13" pos:end="29:27">vnc_has_feature</name><argument_list pos:start="29:28" pos:end="29:53">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">vs</name></expr></argument>, <argument pos:start="29:33" pos:end="29:52"><expr pos:start="29:33" pos:end="29:52"><name pos:start="29:33" pos:end="29:52">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:56" pos:end="37:9">{<block_content pos:start="31:13" pos:end="33:42">

            <expr_stmt pos:start="31:13" pos:end="31:33"><expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:14">vs</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">force_update</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:42"><expr pos:start="33:13" pos:end="33:41"><call pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:34">vnc_update_client_sync</name><argument_list pos:start="33:35" pos:end="33:41">(<argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><name pos:start="33:36" pos:end="33:37">vs</name></expr></argument>, <argument pos:start="33:40" pos:end="33:40"><expr pos:start="33:40" pos:end="33:40"><literal type="number" pos:start="33:40" pos:end="33:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="35:13" pos:end="35:43">/* vs might be free()ed here */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="43:5" pos:end="43:48">/* do bitblit op on the local surface too */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:9">pitch</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:32">vnc_server_fb_stride</name><argument_list pos:start="45:33" pos:end="45:36">(<argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:50"><expr pos:start="47:5" pos:end="47:49"><name pos:start="47:5" pos:end="47:11">src_row</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:49"><name pos:start="47:15" pos:end="47:31">vnc_server_fb_ptr</name><argument_list pos:start="47:32" pos:end="47:49">(<argument pos:start="47:33" pos:end="47:34"><expr pos:start="47:33" pos:end="47:34"><name pos:start="47:33" pos:end="47:34">vd</name></expr></argument>, <argument pos:start="47:37" pos:end="47:41"><expr pos:start="47:37" pos:end="47:41"><name pos:start="47:37" pos:end="47:41">src_x</name></expr></argument>, <argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><name pos:start="47:44" pos:end="47:48">src_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:11">dst_row</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:49"><name pos:start="49:15" pos:end="49:31">vnc_server_fb_ptr</name><argument_list pos:start="49:32" pos:end="49:49">(<argument pos:start="49:33" pos:end="49:34"><expr pos:start="49:33" pos:end="49:34"><name pos:start="49:33" pos:end="49:34">vd</name></expr></argument>, <argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:41">dst_x</name></expr></argument>, <argument pos:start="49:44" pos:end="49:48"><expr pos:start="49:44" pos:end="49:48"><name pos:start="49:44" pos:end="49:48">dst_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:14"><expr pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">y</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <name pos:start="51:9" pos:end="51:13">dst_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:12"><expr pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:7">inc</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <literal type="number" pos:start="53:11" pos:end="53:11">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="69:5"><if pos:start="55:5" pos:end="69:5">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:13">dst_y</name> <operator pos:start="55:15" pos:end="55:15">&gt;</operator> <name pos:start="55:17" pos:end="55:21">src_y</name></expr>)</condition> <block pos:start="55:24" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:17">

        <comment type="block" pos:start="57:9" pos:end="57:28">/* copy backwards */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:15">src_row</name> <operator pos:start="59:17" pos:end="59:18">+=</operator> <name pos:start="59:20" pos:end="59:24">pitch</name> <operator pos:start="59:26" pos:end="59:26">*</operator> <operator pos:start="59:28" pos:end="59:28">(</operator><name pos:start="59:29" pos:end="59:29">h</name><operator pos:start="59:30" pos:end="59:30">-</operator><literal type="number" pos:start="59:31" pos:end="59:31">1</literal><operator pos:start="59:32" pos:end="59:32">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:15">dst_row</name> <operator pos:start="61:17" pos:end="61:18">+=</operator> <name pos:start="61:20" pos:end="61:24">pitch</name> <operator pos:start="61:26" pos:end="61:26">*</operator> <operator pos:start="61:28" pos:end="61:28">(</operator><name pos:start="61:29" pos:end="61:29">h</name><operator pos:start="61:30" pos:end="61:30">-</operator><literal type="number" pos:start="61:31" pos:end="61:31">1</literal><operator pos:start="61:32" pos:end="61:32">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">pitch</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">-</operator><name pos:start="63:18" pos:end="63:22">pitch</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:9">y</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:17">dst_y</name> <operator pos:start="65:19" pos:end="65:19">+</operator> <name pos:start="65:21" pos:end="65:21">h</name> <operator pos:start="65:23" pos:end="65:23">-</operator> <literal type="number" pos:start="65:25" pos:end="65:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:17"><expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:11">inc</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <operator pos:start="67:15" pos:end="67:15">-</operator><literal type="number" pos:start="67:16" pos:end="67:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:9">w_lim</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <name pos:start="71:13" pos:end="71:13">w</name> <operator pos:start="71:15" pos:end="71:15">-</operator> <operator pos:start="71:17" pos:end="71:17">(</operator><literal type="number" pos:start="71:18" pos:end="71:21">16</literal> <operator pos:start="71:21" pos:end="71:21">-</operator> <operator pos:start="71:23" pos:end="71:23">(</operator><name pos:start="71:24" pos:end="71:28">dst_x</name> <operator pos:start="71:30" pos:end="71:30">%</operator> <literal type="number" pos:start="71:32" pos:end="71:33">16</literal><operator pos:start="71:34" pos:end="71:34">)</operator><operator pos:start="71:35" pos:end="71:35">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:33"><if pos:start="73:5" pos:end="75:18">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:13">w_lim</name> <operator pos:start="73:15" pos:end="73:15">&lt;</operator> <literal type="number" pos:start="73:17" pos:end="73:17">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:18"><block_content pos:start="75:9" pos:end="75:18">

        <expr_stmt pos:start="75:9" pos:end="75:18"><expr pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:13">w_lim</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:17">w</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="77:5" pos:end="79:33">else<block type="pseudo" pos:start="79:9" pos:end="79:33"><block_content pos:start="79:9" pos:end="79:33">

        <expr_stmt pos:start="79:9" pos:end="79:33"><expr pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:13">w_lim</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:17">w</name> <operator pos:start="79:19" pos:end="79:19">-</operator> <operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:26">w_lim</name> <operator pos:start="79:28" pos:end="79:28">%</operator> <literal type="number" pos:start="79:30" pos:end="79:31">16</literal><operator pos:start="79:32" pos:end="79:32">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <for pos:start="81:5" pos:end="131:5">for <control pos:start="81:9" pos:end="81:27">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:22"><expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:21">h</name></expr>;</condition> <incr pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:24">i</name><operator pos:start="81:25" pos:end="81:26">++</operator></expr></incr>)</control> <block pos:start="81:29" pos:end="131:5">{<block_content pos:start="83:9" pos:end="129:17">

        <for pos:start="83:9" pos:end="123:9">for <control pos:start="83:13" pos:end="85:67">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">x</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:31"><expr pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:21">x</name> <operator pos:start="83:23" pos:end="83:24">&lt;=</operator> <name pos:start="83:26" pos:end="83:30">w_lim</name></expr>;</condition>

                <incr pos:start="85:17" pos:end="85:66"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:17">x</name> <operator pos:start="85:19" pos:end="85:20">+=</operator> <name pos:start="85:22" pos:end="85:22">s</name></expr><operator pos:start="85:23" pos:end="85:23">,</operator> <expr pos:start="85:25" pos:end="85:44"><name pos:start="85:25" pos:end="85:31">src_row</name> <operator pos:start="85:33" pos:end="85:34">+=</operator> <name pos:start="85:36" pos:end="85:44">cmp_bytes</name></expr><operator pos:start="85:45" pos:end="85:45">,</operator> <expr pos:start="85:47" pos:end="85:66"><name pos:start="85:47" pos:end="85:53">dst_row</name> <operator pos:start="85:55" pos:end="85:56">+=</operator> <name pos:start="85:58" pos:end="85:66">cmp_bytes</name></expr></incr>)</control> <block pos:start="85:69" pos:end="123:9">{<block_content pos:start="87:13" pos:end="121:13">

            <if_stmt pos:start="87:13" pos:end="103:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:27">(<expr pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:17">x</name> <operator pos:start="87:19" pos:end="87:20">==</operator> <name pos:start="87:22" pos:end="87:26">w_lim</name></expr>)</condition> <block pos:start="87:29" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:26">

                <if_stmt pos:start="89:17" pos:end="91:26"><if pos:start="89:17" pos:end="91:26">if <condition pos:start="89:20" pos:end="89:41">(<expr pos:start="89:21" pos:end="89:40"><operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:22">s</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <name pos:start="89:26" pos:end="89:26">w</name> <operator pos:start="89:28" pos:end="89:28">-</operator> <name pos:start="89:30" pos:end="89:34">w_lim</name><operator pos:start="89:35" pos:end="89:35">)</operator> <operator pos:start="89:37" pos:end="89:38">==</operator> <literal type="number" pos:start="89:40" pos:end="89:40">0</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:26"><block_content pos:start="91:21" pos:end="91:26">

                    <break pos:start="91:21" pos:end="91:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="93:15" pos:end="99:13">else if <condition pos:start="93:23" pos:end="93:26">(<expr pos:start="93:24" pos:end="93:25"><operator pos:start="93:24" pos:end="93:24">!</operator><name pos:start="93:25" pos:end="93:25">x</name></expr>)</condition> <block pos:start="93:28" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:34">

                <expr_stmt pos:start="95:17" pos:end="95:40"><expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:17">s</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <operator pos:start="95:21" pos:end="95:21">(</operator><literal type="number" pos:start="95:22" pos:end="95:25">16</literal> <operator pos:start="95:25" pos:end="95:25">-</operator> <operator pos:start="95:27" pos:end="95:27">(</operator><name pos:start="95:28" pos:end="95:32">dst_x</name> <operator pos:start="95:34" pos:end="95:34">%</operator> <literal type="number" pos:start="95:36" pos:end="95:37">16</literal><operator pos:start="95:38" pos:end="95:38">)</operator><operator pos:start="95:39" pos:end="95:39">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:17">s</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <call pos:start="97:21" pos:end="97:33"><name pos:start="97:21" pos:end="97:23">MIN</name><argument_list pos:start="97:24" pos:end="97:33">(<argument pos:start="97:25" pos:end="97:25"><expr pos:start="97:25" pos:end="97:25"><name pos:start="97:25" pos:end="97:25">s</name></expr></argument>, <argument pos:start="97:28" pos:end="97:32"><expr pos:start="97:28" pos:end="97:32"><name pos:start="97:28" pos:end="97:32">w_lim</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="99:15" pos:end="103:13">else <block pos:start="99:20" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:23">

                <expr_stmt pos:start="101:17" pos:end="101:23"><expr pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:17">s</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:22">16</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:48"><expr pos:start="105:13" pos:end="105:47"><name pos:start="105:13" pos:end="105:21">cmp_bytes</name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:25">s</name> <operator pos:start="105:27" pos:end="105:27">*</operator> <name pos:start="105:29" pos:end="105:47">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:25"><if pos:start="107:13" pos:end="109:25">if <condition pos:start="107:16" pos:end="107:57">(<expr pos:start="107:17" pos:end="107:56"><call pos:start="107:17" pos:end="107:51"><name pos:start="107:17" pos:end="107:22">memcmp</name><argument_list pos:start="107:23" pos:end="107:51">(<argument pos:start="107:24" pos:end="107:30"><expr pos:start="107:24" pos:end="107:30"><name pos:start="107:24" pos:end="107:30">src_row</name></expr></argument>, <argument pos:start="107:33" pos:end="107:39"><expr pos:start="107:33" pos:end="107:39"><name pos:start="107:33" pos:end="107:39">dst_row</name></expr></argument>, <argument pos:start="107:42" pos:end="107:50"><expr pos:start="107:42" pos:end="107:50"><name pos:start="107:42" pos:end="107:50">cmp_bytes</name></expr></argument>)</argument_list></call> <operator pos:start="107:53" pos:end="107:54">==</operator> <literal type="number" pos:start="107:56" pos:end="107:56">0</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:25"><block_content pos:start="109:17" pos:end="109:25">

                <continue pos:start="109:17" pos:end="109:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:49"><expr pos:start="111:13" pos:end="111:48"><call pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:19">memmove</name><argument_list pos:start="111:20" pos:end="111:48">(<argument pos:start="111:21" pos:end="111:27"><expr pos:start="111:21" pos:end="111:27"><name pos:start="111:21" pos:end="111:27">dst_row</name></expr></argument>, <argument pos:start="111:30" pos:end="111:36"><expr pos:start="111:30" pos:end="111:36"><name pos:start="111:30" pos:end="111:36">src_row</name></expr></argument>, <argument pos:start="111:39" pos:end="111:47"><expr pos:start="111:39" pos:end="111:47"><name pos:start="111:39" pos:end="111:47">cmp_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <macro pos:start="113:13" pos:end="113:50"><name pos:start="113:13" pos:end="113:26">QTAILQ_FOREACH</name><argument_list pos:start="113:27" pos:end="113:50">(<argument pos:start="113:28" pos:end="113:29">vs</argument>, <argument pos:start="113:32" pos:end="113:43">&amp;vd-&gt;clients</argument>, <argument pos:start="113:46" pos:end="113:49">next</argument>)</argument_list></macro> <block pos:start="113:52" pos:end="121:13">{<block_content pos:start="115:17" pos:end="119:17">

                <if_stmt pos:start="115:17" pos:end="119:17"><if pos:start="115:17" pos:end="119:17">if <condition pos:start="115:20" pos:end="115:63">(<expr pos:start="115:21" pos:end="115:62"><operator pos:start="115:21" pos:end="115:21">!</operator><call pos:start="115:22" pos:end="115:62"><name pos:start="115:22" pos:end="115:36">vnc_has_feature</name><argument_list pos:start="115:37" pos:end="115:62">(<argument pos:start="115:38" pos:end="115:39"><expr pos:start="115:38" pos:end="115:39"><name pos:start="115:38" pos:end="115:39">vs</name></expr></argument>, <argument pos:start="115:42" pos:end="115:61"><expr pos:start="115:42" pos:end="115:61"><name pos:start="115:42" pos:end="115:61">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:65" pos:end="119:17">{<block_content pos:start="117:21" pos:end="117:62">

                    <expr_stmt pos:start="117:21" pos:end="117:62"><expr pos:start="117:21" pos:end="117:61"><call pos:start="117:21" pos:end="117:61"><name pos:start="117:21" pos:end="117:27">set_bit</name><argument_list pos:start="117:28" pos:end="117:61">(<argument pos:start="117:29" pos:end="117:46"><expr pos:start="117:29" pos:end="117:46"><operator pos:start="117:29" pos:end="117:29">(</operator><operator pos:start="117:30" pos:end="117:30">(</operator><name pos:start="117:31" pos:end="117:31">x</name> <operator pos:start="117:33" pos:end="117:33">+</operator> <name pos:start="117:35" pos:end="117:39">dst_x</name><operator pos:start="117:40" pos:end="117:40">)</operator> <operator pos:start="117:42" pos:end="117:42">/</operator> <literal type="number" pos:start="117:44" pos:end="117:45">16</literal><operator pos:start="117:46" pos:end="117:46">)</operator></expr></argument>, <argument pos:start="117:49" pos:end="117:60"><expr pos:start="117:49" pos:end="117:60"><name pos:start="117:49" pos:end="117:60"><name pos:start="117:49" pos:end="117:50">vs</name><operator pos:start="117:51" pos:end="117:52">-&gt;</operator><name pos:start="117:53" pos:end="117:57">dirty</name><index pos:start="117:58" pos:end="117:60">[<expr pos:start="117:59" pos:end="117:59"><name pos:start="117:59" pos:end="117:59">y</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

        </block_content>}</block></for>

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:15">src_row</name> <operator pos:start="125:17" pos:end="125:18">+=</operator> <name pos:start="125:20" pos:end="125:24">pitch</name> <operator pos:start="125:26" pos:end="125:26">-</operator> <name pos:start="125:28" pos:end="125:28">w</name> <operator pos:start="125:30" pos:end="125:30">*</operator> <name pos:start="125:32" pos:end="125:50">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:51"><expr pos:start="127:9" pos:end="127:50"><name pos:start="127:9" pos:end="127:15">dst_row</name> <operator pos:start="127:17" pos:end="127:18">+=</operator> <name pos:start="127:20" pos:end="127:24">pitch</name> <operator pos:start="127:26" pos:end="127:26">-</operator> <name pos:start="127:28" pos:end="127:28">w</name> <operator pos:start="127:30" pos:end="127:30">*</operator> <name pos:start="127:32" pos:end="127:50">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:17"><expr pos:start="129:9" pos:end="129:16"><name pos:start="129:9" pos:end="129:9">y</name> <operator pos:start="129:11" pos:end="129:12">+=</operator> <name pos:start="129:14" pos:end="129:16">inc</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <macro pos:start="135:5" pos:end="135:42"><name pos:start="135:5" pos:end="135:18">QTAILQ_FOREACH</name><argument_list pos:start="135:19" pos:end="135:42">(<argument pos:start="135:20" pos:end="135:21">vs</argument>, <argument pos:start="135:24" pos:end="135:35">&amp;vd-&gt;clients</argument>, <argument pos:start="135:38" pos:end="135:41">next</argument>)</argument_list></macro> <block pos:start="135:44" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:9">

        <if_stmt pos:start="137:9" pos:end="141:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:54">(<expr pos:start="137:13" pos:end="137:53"><call pos:start="137:13" pos:end="137:53"><name pos:start="137:13" pos:end="137:27">vnc_has_feature</name><argument_list pos:start="137:28" pos:end="137:53">(<argument pos:start="137:29" pos:end="137:30"><expr pos:start="137:29" pos:end="137:30"><name pos:start="137:29" pos:end="137:30">vs</name></expr></argument>, <argument pos:start="137:33" pos:end="137:52"><expr pos:start="137:33" pos:end="137:52"><name pos:start="137:33" pos:end="137:52">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:56" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:59">

            <expr_stmt pos:start="139:13" pos:end="139:59"><expr pos:start="139:13" pos:end="139:58"><call pos:start="139:13" pos:end="139:58"><name pos:start="139:13" pos:end="139:20">vnc_copy</name><argument_list pos:start="139:21" pos:end="139:58">(<argument pos:start="139:22" pos:end="139:23"><expr pos:start="139:22" pos:end="139:23"><name pos:start="139:22" pos:end="139:23">vs</name></expr></argument>, <argument pos:start="139:26" pos:end="139:30"><expr pos:start="139:26" pos:end="139:30"><name pos:start="139:26" pos:end="139:30">src_x</name></expr></argument>, <argument pos:start="139:33" pos:end="139:37"><expr pos:start="139:33" pos:end="139:37"><name pos:start="139:33" pos:end="139:37">src_y</name></expr></argument>, <argument pos:start="139:40" pos:end="139:44"><expr pos:start="139:40" pos:end="139:44"><name pos:start="139:40" pos:end="139:44">dst_x</name></expr></argument>, <argument pos:start="139:47" pos:end="139:51"><expr pos:start="139:47" pos:end="139:51"><name pos:start="139:47" pos:end="139:51">dst_y</name></expr></argument>, <argument pos:start="139:54" pos:end="139:54"><expr pos:start="139:54" pos:end="139:54"><name pos:start="139:54" pos:end="139:54">w</name></expr></argument>, <argument pos:start="139:57" pos:end="139:57"><expr pos:start="139:57" pos:end="139:57"><name pos:start="139:57" pos:end="139:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
