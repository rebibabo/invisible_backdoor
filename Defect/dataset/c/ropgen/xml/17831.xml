<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17831.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:7">uint8_t</name><modifier pos:start="1:8" pos:end="1:8">*</modifier></type> <name pos:start="1:10" pos:end="1:38">ff_AMediaCodec_getInputBuffer</name><parameter_list pos:start="1:39" pos:end="1:90">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:52">FFAMediaCodec</name><modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:59">codec</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:71"><decl pos:start="1:62" pos:end="1:71"><type pos:start="1:62" pos:end="1:71"><name pos:start="1:62" pos:end="1:67">size_t</name></type> <name pos:start="1:69" pos:end="1:71">idx</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:89"><decl pos:start="1:74" pos:end="1:89"><type pos:start="1:74" pos:end="1:89"><name pos:start="1:74" pos:end="1:79">size_t</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:89">out_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:15">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">ret</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">JNIEnv</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">env</name> <init pos:start="7:17" pos:end="7:22">= <expr pos:start="7:19" pos:end="7:22"><name pos:start="7:19" pos:end="7:22">NULL</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">jobject</name></type> <name pos:start="11:13" pos:end="11:18">buffer</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><call pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:25">JNI_GET_ENV_OR_RETURN</name><argument_list pos:start="15:26" pos:end="15:43">(<argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">env</name></expr></argument>, <argument pos:start="15:32" pos:end="15:36"><expr pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:36">codec</name></expr></argument>, <argument pos:start="15:39" pos:end="15:42"><expr pos:start="15:39" pos:end="15:42"><name pos:start="15:39" pos:end="15:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="63:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:34">(<expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:13">codec</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:33">has_get_i_o_buffer</name></name></expr>)</condition> <block pos:start="19:36" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <expr_stmt pos:start="21:9" pos:end="21:103"><expr pos:start="21:9" pos:end="21:102"><name pos:start="21:9" pos:end="21:14">buffer</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:102"><name pos:start="21:18" pos:end="21:41"><operator pos:start="21:18" pos:end="21:18">(</operator><operator pos:start="21:19" pos:end="21:19">*</operator><name pos:start="21:20" pos:end="21:22">env</name><operator pos:start="21:23" pos:end="21:23">)</operator><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:41">CallObjectMethod</name></name><argument_list pos:start="21:42" pos:end="21:102">(<argument pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:45">env</name></expr></argument>, <argument pos:start="21:48" pos:end="21:60"><expr pos:start="21:48" pos:end="21:60"><name pos:start="21:48" pos:end="21:60"><name pos:start="21:48" pos:end="21:52">codec</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:60">object</name></name></expr></argument>, <argument pos:start="21:63" pos:end="21:96"><expr pos:start="21:63" pos:end="21:96"><name pos:start="21:63" pos:end="21:96"><name pos:start="21:63" pos:end="21:67">codec</name><operator pos:start="21:68" pos:end="21:69">-&gt;</operator><name pos:start="21:70" pos:end="21:76">jfields</name><operator pos:start="21:77" pos:end="21:77">.</operator><name pos:start="21:78" pos:end="21:96">get_input_buffer_id</name></name></expr></argument>, <argument pos:start="21:99" pos:end="21:101"><expr pos:start="21:99" pos:end="21:101"><name pos:start="21:99" pos:end="21:101">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:54">(<expr pos:start="23:13" pos:end="23:53"><call pos:start="23:13" pos:end="23:49"><name pos:start="23:13" pos:end="23:34">ff_jni_exception_check</name><argument_list pos:start="23:35" pos:end="23:49">(<argument pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><name pos:start="23:36" pos:end="23:38">env</name></expr></argument>, <argument pos:start="23:41" pos:end="23:41"><expr pos:start="23:41" pos:end="23:41"><literal type="number" pos:start="23:41" pos:end="23:41">1</literal></expr></argument>, <argument pos:start="23:44" pos:end="23:48"><expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:48">codec</name></expr></argument>)</argument_list></call> <operator pos:start="23:51" pos:end="23:51">&lt;</operator> <literal type="number" pos:start="23:53" pos:end="23:53">0</literal></expr>)</condition> <block pos:start="23:56" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:22">

            <goto pos:start="25:13" pos:end="25:22">goto <name pos:start="25:18" pos:end="25:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="63:5">else <block pos:start="29:12" pos:end="63:5">{<block_content pos:start="31:9" pos:end="61:9">

        <if_stmt pos:start="31:9" pos:end="51:9"><if pos:start="31:9" pos:end="51:9">if <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:33"><name pos:start="31:14" pos:end="31:18">codec</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:33">input_buffers</name></name></expr>)</condition> <block pos:start="31:36" pos:end="51:9">{<block_content pos:start="33:13" pos:end="49:13">

            <expr_stmt pos:start="33:13" pos:end="33:117"><expr pos:start="33:13" pos:end="33:116"><name pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:17">codec</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:32">input_buffers</name></name> <operator pos:start="33:34" pos:end="33:34">=</operator> <call pos:start="33:36" pos:end="33:116"><name pos:start="33:36" pos:end="33:59"><operator pos:start="33:36" pos:end="33:36">(</operator><operator pos:start="33:37" pos:end="33:37">*</operator><name pos:start="33:38" pos:end="33:40">env</name><operator pos:start="33:41" pos:end="33:41">)</operator><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:59">CallObjectMethod</name></name><argument_list pos:start="33:60" pos:end="33:116">(<argument pos:start="33:61" pos:end="33:63"><expr pos:start="33:61" pos:end="33:63"><name pos:start="33:61" pos:end="33:63">env</name></expr></argument>, <argument pos:start="33:66" pos:end="33:78"><expr pos:start="33:66" pos:end="33:78"><name pos:start="33:66" pos:end="33:78"><name pos:start="33:66" pos:end="33:70">codec</name><operator pos:start="33:71" pos:end="33:72">-&gt;</operator><name pos:start="33:73" pos:end="33:78">object</name></name></expr></argument>, <argument pos:start="33:81" pos:end="33:115"><expr pos:start="33:81" pos:end="33:115"><name pos:start="33:81" pos:end="33:115"><name pos:start="33:81" pos:end="33:85">codec</name><operator pos:start="33:86" pos:end="33:87">-&gt;</operator><name pos:start="33:88" pos:end="33:94">jfields</name><operator pos:start="33:95" pos:end="33:95">.</operator><name pos:start="33:96" pos:end="33:115">get_input_buffers_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:58">(<expr pos:start="35:17" pos:end="35:57"><call pos:start="35:17" pos:end="35:53"><name pos:start="35:17" pos:end="35:38">ff_jni_exception_check</name><argument_list pos:start="35:39" pos:end="35:53">(<argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:42">env</name></expr></argument>, <argument pos:start="35:45" pos:end="35:45"><expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">1</literal></expr></argument>, <argument pos:start="35:48" pos:end="35:52"><expr pos:start="35:48" pos:end="35:52"><name pos:start="35:48" pos:end="35:52">codec</name></expr></argument>)</argument_list></call> <operator pos:start="35:55" pos:end="35:55">&lt;</operator> <literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr>)</condition> <block pos:start="35:60" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:26">

                <goto pos:start="37:17" pos:end="37:26">goto <name pos:start="37:22" pos:end="37:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:83"><expr pos:start="43:13" pos:end="43:82"><name pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:17">codec</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:32">input_buffers</name></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <call pos:start="43:36" pos:end="43:82"><name pos:start="43:36" pos:end="43:55"><operator pos:start="43:36" pos:end="43:36">(</operator><operator pos:start="43:37" pos:end="43:37">*</operator><name pos:start="43:38" pos:end="43:40">env</name><operator pos:start="43:41" pos:end="43:41">)</operator><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:55">NewGlobalRef</name></name><argument_list pos:start="43:56" pos:end="43:82">(<argument pos:start="43:57" pos:end="43:59"><expr pos:start="43:57" pos:end="43:59"><name pos:start="43:57" pos:end="43:59">env</name></expr></argument>, <argument pos:start="43:62" pos:end="43:81"><expr pos:start="43:62" pos:end="43:81"><name pos:start="43:62" pos:end="43:81"><name pos:start="43:62" pos:end="43:66">codec</name><operator pos:start="43:67" pos:end="43:68">-&gt;</operator><name pos:start="43:69" pos:end="43:81">input_buffers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="49:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:58">(<expr pos:start="45:17" pos:end="45:57"><call pos:start="45:17" pos:end="45:53"><name pos:start="45:17" pos:end="45:38">ff_jni_exception_check</name><argument_list pos:start="45:39" pos:end="45:53">(<argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:42">env</name></expr></argument>, <argument pos:start="45:45" pos:end="45:45"><expr pos:start="45:45" pos:end="45:45"><literal type="number" pos:start="45:45" pos:end="45:45">1</literal></expr></argument>, <argument pos:start="45:48" pos:end="45:52"><expr pos:start="45:48" pos:end="45:52"><name pos:start="45:48" pos:end="45:52">codec</name></expr></argument>)</argument_list></call> <operator pos:start="45:55" pos:end="45:55">&lt;</operator> <literal type="number" pos:start="45:57" pos:end="45:57">0</literal></expr>)</condition> <block pos:start="45:60" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:26">

                <goto pos:start="47:17" pos:end="47:26">goto <name pos:start="47:22" pos:end="47:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:79"><expr pos:start="55:9" pos:end="55:78"><name pos:start="55:9" pos:end="55:14">buffer</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:78"><name pos:start="55:18" pos:end="55:46"><operator pos:start="55:18" pos:end="55:18">(</operator><operator pos:start="55:19" pos:end="55:19">*</operator><name pos:start="55:20" pos:end="55:22">env</name><operator pos:start="55:23" pos:end="55:23">)</operator><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:46">GetObjectArrayElement</name></name><argument_list pos:start="55:47" pos:end="55:78">(<argument pos:start="55:48" pos:end="55:50"><expr pos:start="55:48" pos:end="55:50"><name pos:start="55:48" pos:end="55:50">env</name></expr></argument>, <argument pos:start="55:53" pos:end="55:72"><expr pos:start="55:53" pos:end="55:72"><name pos:start="55:53" pos:end="55:72"><name pos:start="55:53" pos:end="55:57">codec</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:72">input_buffers</name></name></expr></argument>, <argument pos:start="55:75" pos:end="55:77"><expr pos:start="55:75" pos:end="55:77"><name pos:start="55:75" pos:end="55:77">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:54">(<expr pos:start="57:13" pos:end="57:53"><call pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:34">ff_jni_exception_check</name><argument_list pos:start="57:35" pos:end="57:49">(<argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:38">env</name></expr></argument>, <argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><literal type="number" pos:start="57:41" pos:end="57:41">1</literal></expr></argument>, <argument pos:start="57:44" pos:end="57:48"><expr pos:start="57:44" pos:end="57:48"><name pos:start="57:44" pos:end="57:48">codec</name></expr></argument>)</argument_list></call> <operator pos:start="57:51" pos:end="57:51">&lt;</operator> <literal type="number" pos:start="57:53" pos:end="57:53">0</literal></expr>)</condition> <block pos:start="57:56" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:22">

            <goto pos:start="59:13" pos:end="59:22">goto <name pos:start="59:18" pos:end="59:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:54"><expr pos:start="67:5" pos:end="67:53"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:53"><name pos:start="67:11" pos:end="67:40"><operator pos:start="67:11" pos:end="67:11">(</operator><operator pos:start="67:12" pos:end="67:12">*</operator><name pos:start="67:13" pos:end="67:15">env</name><operator pos:start="67:16" pos:end="67:16">)</operator><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:40">GetDirectBufferAddress</name></name><argument_list pos:start="67:41" pos:end="67:53">(<argument pos:start="67:42" pos:end="67:44"><expr pos:start="67:42" pos:end="67:44"><name pos:start="67:42" pos:end="67:44">env</name></expr></argument>, <argument pos:start="67:47" pos:end="67:52"><expr pos:start="67:47" pos:end="67:52"><name pos:start="67:47" pos:end="67:52">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:61"><expr pos:start="69:5" pos:end="69:60"><operator pos:start="69:5" pos:end="69:5">*</operator><name pos:start="69:6" pos:end="69:13">out_size</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:60"><name pos:start="69:17" pos:end="69:47"><operator pos:start="69:17" pos:end="69:17">(</operator><operator pos:start="69:18" pos:end="69:18">*</operator><name pos:start="69:19" pos:end="69:21">env</name><operator pos:start="69:22" pos:end="69:22">)</operator><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:47">GetDirectBufferCapacity</name></name><argument_list pos:start="69:48" pos:end="69:60">(<argument pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:51">env</name></expr></argument>, <argument pos:start="69:54" pos:end="69:59"><expr pos:start="69:54" pos:end="69:59"><name pos:start="69:54" pos:end="69:59">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="71:1" pos:end="71:5"><name pos:start="71:1" pos:end="71:4">fail</name>:</label>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:15">(<expr pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:14">buffer</name></expr>)</condition> <block pos:start="73:17" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:44">

        <expr_stmt pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:43"><call pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:30"><operator pos:start="75:9" pos:end="75:9">(</operator><operator pos:start="75:10" pos:end="75:10">*</operator><name pos:start="75:11" pos:end="75:13">env</name><operator pos:start="75:14" pos:end="75:14">)</operator><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:30">DeleteLocalRef</name></name><argument_list pos:start="75:31" pos:end="75:43">(<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">env</name></expr></argument>, <argument pos:start="75:37" pos:end="75:42"><expr pos:start="75:37" pos:end="75:42"><name pos:start="75:37" pos:end="75:42">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
