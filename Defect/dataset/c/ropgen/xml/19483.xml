<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19483.c" pos:tabs="8"><function pos:start="1:1" pos:end="693:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_hevc_decode_nal_pps</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">HEVCContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="693:1">{<block_content pos:start="5:5" pos:end="691:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">HEVClc</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:11">HEVCSPS</name>      <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">sps</name> <init pos:start="7:23" pos:end="7:28">= <expr pos:start="7:25" pos:end="7:28"><name pos:start="7:25" pos:end="7:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">pic_area_in_ctbs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:33">log2_diff_ctb_min_tb_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>, <decl pos:start="13:15" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:15">x</name></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">y</name></decl>, <decl pos:start="13:21" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:31">ctb_addr_rs</name></decl>, <decl pos:start="13:34" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:34" pos:end="13:40">tile_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:23">pps_id</name> <init pos:start="17:25" pos:end="17:27">= <expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">AVBufferRef</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:24">pps_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">HEVCPPS</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:16">pps</name> <init pos:start="23:18" pos:end="23:43">= <expr pos:start="23:20" pos:end="23:43"><call pos:start="23:20" pos:end="23:43"><name pos:start="23:20" pos:end="23:29">av_mallocz</name><argument_list pos:start="23:30" pos:end="23:43">(<argument pos:start="23:31" pos:end="23:42"><expr pos:start="23:31" pos:end="23:42"><sizeof pos:start="23:31" pos:end="23:42">sizeof<argument_list pos:start="23:37" pos:end="23:42">(<argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><operator pos:start="23:38" pos:end="23:38">*</operator><name pos:start="23:39" pos:end="23:41">pps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">pps</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:55"><expr pos:start="33:5" pos:end="35:54"><name pos:start="33:5" pos:end="33:11">pps_buf</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="35:54"><name pos:start="33:15" pos:end="33:30">av_buffer_create</name><argument_list pos:start="33:31" pos:end="35:54">(<argument pos:start="33:32" pos:end="33:45"><expr pos:start="33:32" pos:end="33:45"><operator pos:start="33:32" pos:end="33:32">(</operator><name pos:start="33:33" pos:end="33:39">uint8_t</name> <operator pos:start="33:41" pos:end="33:41">*</operator><operator pos:start="33:42" pos:end="33:42">)</operator><name pos:start="33:43" pos:end="33:45">pps</name></expr></argument>, <argument pos:start="33:48" pos:end="33:59"><expr pos:start="33:48" pos:end="33:59"><sizeof pos:start="33:48" pos:end="33:59">sizeof<argument_list pos:start="33:54" pos:end="33:59">(<argument pos:start="33:55" pos:end="33:58"><expr pos:start="33:55" pos:end="33:58"><operator pos:start="33:55" pos:end="33:55">*</operator><name pos:start="33:56" pos:end="33:58">pps</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:44"><expr pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:44">hevc_pps_free</name></expr></argument>, <argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><name pos:start="35:47" pos:end="35:50">NULL</name></expr></argument>, <argument pos:start="35:53" pos:end="35:53"><expr pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">pps_buf</name></expr>)</condition> <block pos:start="37:19" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:31">

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><call pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:16">av_freep</name><argument_list pos:start="39:17" pos:end="39:22">(<argument pos:start="39:18" pos:end="39:21"><expr pos:start="39:18" pos:end="39:21"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:21">pps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:52">(<argument pos:start="47:12" pos:end="47:19"><expr pos:start="47:12" pos:end="47:19"><name pos:start="47:12" pos:end="47:19"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:19">avctx</name></name></expr></argument>, <argument pos:start="47:22" pos:end="47:33"><expr pos:start="47:22" pos:end="47:33"><name pos:start="47:22" pos:end="47:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:36" pos:end="47:51"><expr pos:start="47:36" pos:end="47:51"><literal type="string" pos:start="47:36" pos:end="47:51">"Decoding PPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="51:5" pos:end="51:21">// Default values</comment>

    <expr_stmt pos:start="53:5" pos:end="53:51"><expr pos:start="53:5" pos:end="53:50"><name pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:7">pps</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:46">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="53:48" pos:end="53:48">=</operator> <literal type="number" pos:start="53:50" pos:end="53:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:51"><expr pos:start="55:5" pos:end="55:50"><name pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:7">pps</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:25">num_tile_columns</name></name>                      <operator pos:start="55:48" pos:end="55:48">=</operator> <literal type="number" pos:start="55:50" pos:end="55:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:51"><expr pos:start="57:5" pos:end="57:50"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:7">pps</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:22">num_tile_rows</name></name>                         <operator pos:start="57:48" pos:end="57:48">=</operator> <literal type="number" pos:start="57:50" pos:end="57:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:7">pps</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:29">uniform_spacing_flag</name></name>                  <operator pos:start="59:48" pos:end="59:48">=</operator> <literal type="number" pos:start="59:50" pos:end="59:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">pps</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:20">disable_dbf</name></name>                           <operator pos:start="61:48" pos:end="61:48">=</operator> <literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:7">pps</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:20">beta_offset</name></name>                           <operator pos:start="63:48" pos:end="63:48">=</operator> <literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:51"><expr pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:7">pps</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:18">tc_offset</name></name>                             <operator pos:start="65:48" pos:end="65:48">=</operator> <literal type="number" pos:start="65:50" pos:end="65:50">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:51"><expr pos:start="67:5" pos:end="67:50"><name pos:start="67:5" pos:end="67:43"><name pos:start="67:5" pos:end="67:7">pps</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:43">log2_max_transform_skip_block_size</name></name>    <operator pos:start="67:48" pos:end="67:48">=</operator> <literal type="number" pos:start="67:50" pos:end="67:50">2</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="71:5" pos:end="71:23">// Coded parameters</comment>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:10">pps_id</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <call pos:start="73:14" pos:end="73:35"><name pos:start="73:14" pos:end="73:31">get_ue_golomb_long</name><argument_list pos:start="73:32" pos:end="73:35">(<argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><name pos:start="73:33" pos:end="73:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:32">(<expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:14">pps_id</name> <operator pos:start="75:16" pos:end="75:17">&gt;=</operator> <name pos:start="75:19" pos:end="75:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="75:34" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:17">

        <expr_stmt pos:start="77:9" pos:end="77:76"><expr pos:start="77:9" pos:end="77:75"><call pos:start="77:9" pos:end="77:75"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:75">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">avctx</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:40" pos:end="77:66"><expr pos:start="77:40" pos:end="77:66"><literal type="string" pos:start="77:40" pos:end="77:66">"PPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="77:69" pos:end="77:74"><expr pos:start="77:69" pos:end="77:74"><name pos:start="77:69" pos:end="77:74">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:17">goto <name pos:start="81:14" pos:end="81:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:41"><expr pos:start="85:5" pos:end="85:40"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:7">pps</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:15">sps_id</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:40"><name pos:start="85:19" pos:end="85:36">get_ue_golomb_long</name><argument_list pos:start="85:37" pos:end="85:40">(<argument pos:start="85:38" pos:end="85:39"><expr pos:start="85:38" pos:end="85:39"><name pos:start="85:38" pos:end="85:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:37">(<expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:11">pps</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:19">sps_id</name></name> <operator pos:start="87:21" pos:end="87:22">&gt;=</operator> <name pos:start="87:24" pos:end="87:36">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="87:39" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:17">

        <expr_stmt pos:start="89:9" pos:end="89:81"><expr pos:start="89:9" pos:end="89:80"><call pos:start="89:9" pos:end="89:80"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:80">(<argument pos:start="89:16" pos:end="89:23"><expr pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">avctx</name></name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:40" pos:end="89:66"><expr pos:start="89:40" pos:end="89:66"><literal type="string" pos:start="89:40" pos:end="89:66">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="89:69" pos:end="89:79"><expr pos:start="89:69" pos:end="89:79"><name pos:start="89:69" pos:end="89:79"><name pos:start="89:69" pos:end="89:71">pps</name><operator pos:start="89:72" pos:end="89:73">-&gt;</operator><name pos:start="89:74" pos:end="89:79">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:17">goto <name pos:start="93:14" pos:end="93:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:34">(<expr pos:start="97:9" pos:end="97:33"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:33"><name pos:start="97:10" pos:end="97:10">s</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:20">sps_list</name><index pos:start="97:21" pos:end="97:33">[<expr pos:start="97:22" pos:end="97:32"><name pos:start="97:22" pos:end="97:32"><name pos:start="97:22" pos:end="97:24">pps</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:32">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="97:36" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:17">

        <expr_stmt pos:start="99:9" pos:end="99:80"><expr pos:start="99:9" pos:end="99:79"><call pos:start="99:9" pos:end="99:79"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:79">(<argument pos:start="99:16" pos:end="99:23"><expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">avctx</name></name></expr></argument>, <argument pos:start="99:26" pos:end="99:37"><expr pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:40" pos:end="99:65"><expr pos:start="99:40" pos:end="99:65"><literal type="string" pos:start="99:40" pos:end="99:65">"SPS %u does not exist.\n"</literal></expr></argument>, <argument pos:start="99:68" pos:end="99:78"><expr pos:start="99:68" pos:end="99:78"><name pos:start="99:68" pos:end="99:78"><name pos:start="99:68" pos:end="99:70">pps</name><operator pos:start="99:71" pos:end="99:72">-&gt;</operator><name pos:start="99:73" pos:end="99:78">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:34"><expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:17">goto <name pos:start="103:14" pos:end="103:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:52"><expr pos:start="107:5" pos:end="107:51"><name pos:start="107:5" pos:end="107:7">sps</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <operator pos:start="107:11" pos:end="107:11">(</operator><name pos:start="107:12" pos:end="107:18">HEVCSPS</name> <operator pos:start="107:20" pos:end="107:20">*</operator><operator pos:start="107:21" pos:end="107:21">)</operator><name pos:start="107:22" pos:end="107:45"><name pos:start="107:22" pos:end="107:22">s</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:32">sps_list</name><index pos:start="107:33" pos:end="107:45">[<expr pos:start="107:34" pos:end="107:44"><name pos:start="107:34" pos:end="107:44"><name pos:start="107:34" pos:end="107:36">pps</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:44">sps_id</name></name></expr>]</index></name><operator pos:start="107:46" pos:end="107:47">-&gt;</operator><name pos:start="107:48" pos:end="107:51">data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:63"><expr pos:start="111:5" pos:end="111:62"><name pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:7">pps</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:46">dependent_slice_segments_enabled_flag</name></name> <operator pos:start="111:48" pos:end="111:48">=</operator> <call pos:start="111:50" pos:end="111:62"><name pos:start="111:50" pos:end="111:58">get_bits1</name><argument_list pos:start="111:59" pos:end="111:62">(<argument pos:start="111:60" pos:end="111:61"><expr pos:start="111:60" pos:end="111:61"><name pos:start="111:60" pos:end="111:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:63"><expr pos:start="113:5" pos:end="113:62"><name pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:7">pps</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:33">output_flag_present_flag</name></name>              <operator pos:start="113:48" pos:end="113:48">=</operator> <call pos:start="113:50" pos:end="113:62"><name pos:start="113:50" pos:end="113:58">get_bits1</name><argument_list pos:start="113:59" pos:end="113:62">(<argument pos:start="113:60" pos:end="113:61"><expr pos:start="113:60" pos:end="113:61"><name pos:start="113:60" pos:end="113:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:65"><expr pos:start="115:5" pos:end="115:64"><name pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:7">pps</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:36">num_extra_slice_header_bits</name></name>           <operator pos:start="115:48" pos:end="115:48">=</operator> <call pos:start="115:50" pos:end="115:64"><name pos:start="115:50" pos:end="115:57">get_bits</name><argument_list pos:start="115:58" pos:end="115:64">(<argument pos:start="115:59" pos:end="115:60"><expr pos:start="115:59" pos:end="115:60"><name pos:start="115:59" pos:end="115:60">gb</name></expr></argument>, <argument pos:start="115:63" pos:end="115:63"><expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:47"><expr pos:start="119:5" pos:end="119:46"><name pos:start="119:5" pos:end="119:30"><name pos:start="119:5" pos:end="119:7">pps</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:30">sign_data_hiding_flag</name></name> <operator pos:start="119:32" pos:end="119:32">=</operator> <call pos:start="119:34" pos:end="119:46"><name pos:start="119:34" pos:end="119:42">get_bits1</name><argument_list pos:start="119:43" pos:end="119:46">(<argument pos:start="119:44" pos:end="119:45"><expr pos:start="119:44" pos:end="119:45"><name pos:start="119:44" pos:end="119:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:49"><expr pos:start="123:5" pos:end="123:48"><name pos:start="123:5" pos:end="123:32"><name pos:start="123:5" pos:end="123:7">pps</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:32">cabac_init_present_flag</name></name> <operator pos:start="123:34" pos:end="123:34">=</operator> <call pos:start="123:36" pos:end="123:48"><name pos:start="123:36" pos:end="123:44">get_bits1</name><argument_list pos:start="123:45" pos:end="123:48">(<argument pos:start="123:46" pos:end="123:47"><expr pos:start="123:46" pos:end="123:47"><name pos:start="123:46" pos:end="123:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:68"><expr pos:start="127:5" pos:end="127:67"><name pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:7">pps</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:38">num_ref_idx_l0_default_active</name></name> <operator pos:start="127:40" pos:end="127:40">=</operator> <call pos:start="127:42" pos:end="127:63"><name pos:start="127:42" pos:end="127:59">get_ue_golomb_long</name><argument_list pos:start="127:60" pos:end="127:63">(<argument pos:start="127:61" pos:end="127:62"><expr pos:start="127:61" pos:end="127:62"><name pos:start="127:61" pos:end="127:62">gb</name></expr></argument>)</argument_list></call> <operator pos:start="127:65" pos:end="127:65">+</operator> <literal type="number" pos:start="127:67" pos:end="127:67">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:68"><expr pos:start="129:5" pos:end="129:67"><name pos:start="129:5" pos:end="129:38"><name pos:start="129:5" pos:end="129:7">pps</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:38">num_ref_idx_l1_default_active</name></name> <operator pos:start="129:40" pos:end="129:40">=</operator> <call pos:start="129:42" pos:end="129:63"><name pos:start="129:42" pos:end="129:59">get_ue_golomb_long</name><argument_list pos:start="129:60" pos:end="129:63">(<argument pos:start="129:61" pos:end="129:62"><expr pos:start="129:61" pos:end="129:62"><name pos:start="129:61" pos:end="129:62">gb</name></expr></argument>)</argument_list></call> <operator pos:start="129:65" pos:end="129:65">+</operator> <literal type="number" pos:start="129:67" pos:end="129:67">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:49"><expr pos:start="133:5" pos:end="133:48"><name pos:start="133:5" pos:end="133:28"><name pos:start="133:5" pos:end="133:7">pps</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:28">pic_init_qp_minus26</name></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <call pos:start="133:32" pos:end="133:48"><name pos:start="133:32" pos:end="133:44">get_se_golomb</name><argument_list pos:start="133:45" pos:end="133:48">(<argument pos:start="133:46" pos:end="133:47"><expr pos:start="133:46" pos:end="133:47"><name pos:start="133:46" pos:end="133:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:53"><expr pos:start="137:5" pos:end="137:52"><name pos:start="137:5" pos:end="137:36"><name pos:start="137:5" pos:end="137:7">pps</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:36">constrained_intra_pred_flag</name></name> <operator pos:start="137:38" pos:end="137:38">=</operator> <call pos:start="137:40" pos:end="137:52"><name pos:start="137:40" pos:end="137:48">get_bits1</name><argument_list pos:start="137:49" pos:end="137:52">(<argument pos:start="137:50" pos:end="137:51"><expr pos:start="137:50" pos:end="137:51"><name pos:start="137:50" pos:end="137:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:53"><expr pos:start="139:5" pos:end="139:52"><name pos:start="139:5" pos:end="139:36"><name pos:start="139:5" pos:end="139:7">pps</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:36">transform_skip_enabled_flag</name></name> <operator pos:start="139:38" pos:end="139:38">=</operator> <call pos:start="139:40" pos:end="139:52"><name pos:start="139:40" pos:end="139:48">get_bits1</name><argument_list pos:start="139:49" pos:end="139:52">(<argument pos:start="139:50" pos:end="139:51"><expr pos:start="139:50" pos:end="139:51"><name pos:start="139:50" pos:end="139:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:50"><expr pos:start="143:5" pos:end="143:49"><name pos:start="143:5" pos:end="143:33"><name pos:start="143:5" pos:end="143:7">pps</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:33">cu_qp_delta_enabled_flag</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <call pos:start="143:37" pos:end="143:49"><name pos:start="143:37" pos:end="143:45">get_bits1</name><argument_list pos:start="143:46" pos:end="143:49">(<argument pos:start="143:47" pos:end="143:48"><expr pos:start="143:47" pos:end="143:48"><name pos:start="143:47" pos:end="143:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:38"><expr pos:start="145:5" pos:end="145:37"><name pos:start="145:5" pos:end="145:31"><name pos:start="145:5" pos:end="145:7">pps</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:31">diff_cu_qp_delta_depth</name></name>   <operator pos:start="145:35" pos:end="145:35">=</operator> <literal type="number" pos:start="145:37" pos:end="145:37">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="149:61"><if pos:start="147:5" pos:end="149:61">if <condition pos:start="147:8" pos:end="147:38">(<expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:11">pps</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:37">cu_qp_delta_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:61"><block_content pos:start="149:9" pos:end="149:61">

        <expr_stmt pos:start="149:9" pos:end="149:61"><expr pos:start="149:9" pos:end="149:60"><name pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:11">pps</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:35">diff_cu_qp_delta_depth</name></name> <operator pos:start="149:37" pos:end="149:37">=</operator> <call pos:start="149:39" pos:end="149:60"><name pos:start="149:39" pos:end="149:56">get_ue_golomb_long</name><argument_list pos:start="149:57" pos:end="149:60">(<argument pos:start="149:58" pos:end="149:59"><expr pos:start="149:58" pos:end="149:59"><name pos:start="149:58" pos:end="149:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:42"><expr pos:start="153:5" pos:end="153:41"><name pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:7">pps</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:21">cb_qp_offset</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <call pos:start="153:25" pos:end="153:41"><name pos:start="153:25" pos:end="153:37">get_se_golomb</name><argument_list pos:start="153:38" pos:end="153:41">(<argument pos:start="153:39" pos:end="153:40"><expr pos:start="153:39" pos:end="153:40"><name pos:start="153:39" pos:end="153:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if <condition pos:start="155:8" pos:end="155:58">(<expr pos:start="155:9" pos:end="155:57"><name pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:11">pps</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:25">cb_qp_offset</name></name> <operator pos:start="155:27" pos:end="155:27">&lt;</operator> <operator pos:start="155:29" pos:end="155:29">-</operator><literal type="number" pos:start="155:30" pos:end="155:31">12</literal> <operator pos:start="155:33" pos:end="155:34">||</operator> <name pos:start="155:36" pos:end="155:52"><name pos:start="155:36" pos:end="155:38">pps</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:52">cb_qp_offset</name></name> <operator pos:start="155:54" pos:end="155:54">&gt;</operator> <literal type="number" pos:start="155:56" pos:end="155:57">12</literal></expr>)</condition> <block pos:start="155:60" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:17">

        <expr_stmt pos:start="157:9" pos:end="159:34"><expr pos:start="157:9" pos:end="159:33"><call pos:start="157:9" pos:end="159:33"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="159:33">(<argument pos:start="157:16" pos:end="157:23"><expr pos:start="157:16" pos:end="157:23"><name pos:start="157:16" pos:end="157:23"><name pos:start="157:16" pos:end="157:16">s</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:23">avctx</name></name></expr></argument>, <argument pos:start="157:26" pos:end="157:37"><expr pos:start="157:26" pos:end="157:37"><name pos:start="157:26" pos:end="157:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:40" pos:end="157:76"><expr pos:start="157:40" pos:end="157:76"><literal type="string" pos:start="157:40" pos:end="157:76">"pps_cb_qp_offset out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="159:16" pos:end="159:32"><expr pos:start="159:16" pos:end="159:32"><name pos:start="159:16" pos:end="159:32"><name pos:start="159:16" pos:end="159:18">pps</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:32">cb_qp_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:34"><expr pos:start="161:9" pos:end="161:33"><name pos:start="161:9" pos:end="161:11">ret</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <name pos:start="161:15" pos:end="161:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="163:9" pos:end="163:17">goto <name pos:start="163:14" pos:end="163:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:42"><expr pos:start="167:5" pos:end="167:41"><name pos:start="167:5" pos:end="167:21"><name pos:start="167:5" pos:end="167:7">pps</name><operator pos:start="167:8" pos:end="167:9">-&gt;</operator><name pos:start="167:10" pos:end="167:21">cr_qp_offset</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <call pos:start="167:25" pos:end="167:41"><name pos:start="167:25" pos:end="167:37">get_se_golomb</name><argument_list pos:start="167:38" pos:end="167:41">(<argument pos:start="167:39" pos:end="167:40"><expr pos:start="167:39" pos:end="167:40"><name pos:start="167:39" pos:end="167:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="179:5"><if pos:start="169:5" pos:end="179:5">if <condition pos:start="169:8" pos:end="169:58">(<expr pos:start="169:9" pos:end="169:57"><name pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:11">pps</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:25">cr_qp_offset</name></name> <operator pos:start="169:27" pos:end="169:27">&lt;</operator> <operator pos:start="169:29" pos:end="169:29">-</operator><literal type="number" pos:start="169:30" pos:end="169:31">12</literal> <operator pos:start="169:33" pos:end="169:34">||</operator> <name pos:start="169:36" pos:end="169:52"><name pos:start="169:36" pos:end="169:38">pps</name><operator pos:start="169:39" pos:end="169:40">-&gt;</operator><name pos:start="169:41" pos:end="169:52">cr_qp_offset</name></name> <operator pos:start="169:54" pos:end="169:54">&gt;</operator> <literal type="number" pos:start="169:56" pos:end="169:57">12</literal></expr>)</condition> <block pos:start="169:60" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:17">

        <expr_stmt pos:start="171:9" pos:end="173:34"><expr pos:start="171:9" pos:end="173:33"><call pos:start="171:9" pos:end="173:33"><name pos:start="171:9" pos:end="171:14">av_log</name><argument_list pos:start="171:15" pos:end="173:33">(<argument pos:start="171:16" pos:end="171:23"><expr pos:start="171:16" pos:end="171:23"><name pos:start="171:16" pos:end="171:23"><name pos:start="171:16" pos:end="171:16">s</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:23">avctx</name></name></expr></argument>, <argument pos:start="171:26" pos:end="171:37"><expr pos:start="171:26" pos:end="171:37"><name pos:start="171:26" pos:end="171:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:40" pos:end="171:76"><expr pos:start="171:40" pos:end="171:76"><literal type="string" pos:start="171:40" pos:end="171:76">"pps_cr_qp_offset out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="173:16" pos:end="173:32"><expr pos:start="173:16" pos:end="173:32"><name pos:start="173:16" pos:end="173:32"><name pos:start="173:16" pos:end="173:18">pps</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:32">cr_qp_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:34"><expr pos:start="175:9" pos:end="175:33"><name pos:start="175:9" pos:end="175:11">ret</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <name pos:start="175:15" pos:end="175:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="177:9" pos:end="177:17">goto <name pos:start="177:14" pos:end="177:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:72"><expr pos:start="181:5" pos:end="181:71"><name pos:start="181:5" pos:end="181:55"><name pos:start="181:5" pos:end="181:7">pps</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:55">pic_slice_level_chroma_qp_offsets_present_flag</name></name> <operator pos:start="181:57" pos:end="181:57">=</operator> <call pos:start="181:59" pos:end="181:71"><name pos:start="181:59" pos:end="181:67">get_bits1</name><argument_list pos:start="181:68" pos:end="181:71">(<argument pos:start="181:69" pos:end="181:70"><expr pos:start="181:69" pos:end="181:70"><name pos:start="181:69" pos:end="181:70">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:46"><expr pos:start="185:5" pos:end="185:45"><name pos:start="185:5" pos:end="185:27"><name pos:start="185:5" pos:end="185:7">pps</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:27">weighted_pred_flag</name></name>   <operator pos:start="185:31" pos:end="185:31">=</operator> <call pos:start="185:33" pos:end="185:45"><name pos:start="185:33" pos:end="185:41">get_bits1</name><argument_list pos:start="185:42" pos:end="185:45">(<argument pos:start="185:43" pos:end="185:44"><expr pos:start="185:43" pos:end="185:44"><name pos:start="185:43" pos:end="185:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:46"><expr pos:start="187:5" pos:end="187:45"><name pos:start="187:5" pos:end="187:29"><name pos:start="187:5" pos:end="187:7">pps</name><operator pos:start="187:8" pos:end="187:9">-&gt;</operator><name pos:start="187:10" pos:end="187:29">weighted_bipred_flag</name></name> <operator pos:start="187:31" pos:end="187:31">=</operator> <call pos:start="187:33" pos:end="187:45"><name pos:start="187:33" pos:end="187:41">get_bits1</name><argument_list pos:start="187:42" pos:end="187:45">(<argument pos:start="187:43" pos:end="187:44"><expr pos:start="187:43" pos:end="187:44"><name pos:start="187:43" pos:end="187:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:58"><expr pos:start="191:5" pos:end="191:57"><name pos:start="191:5" pos:end="191:38"><name pos:start="191:5" pos:end="191:7">pps</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:38">transquant_bypass_enable_flag</name></name>    <operator pos:start="191:43" pos:end="191:43">=</operator> <call pos:start="191:45" pos:end="191:57"><name pos:start="191:45" pos:end="191:53">get_bits1</name><argument_list pos:start="191:54" pos:end="191:57">(<argument pos:start="191:55" pos:end="191:56"><expr pos:start="191:55" pos:end="191:56"><name pos:start="191:55" pos:end="191:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:58"><expr pos:start="193:5" pos:end="193:57"><name pos:start="193:5" pos:end="193:27"><name pos:start="193:5" pos:end="193:7">pps</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:27">tiles_enabled_flag</name></name>               <operator pos:start="193:43" pos:end="193:43">=</operator> <call pos:start="193:45" pos:end="193:57"><name pos:start="193:45" pos:end="193:53">get_bits1</name><argument_list pos:start="193:54" pos:end="193:57">(<argument pos:start="193:55" pos:end="193:56"><expr pos:start="193:55" pos:end="193:56"><name pos:start="193:55" pos:end="193:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:58"><expr pos:start="195:5" pos:end="195:57"><name pos:start="195:5" pos:end="195:41"><name pos:start="195:5" pos:end="195:7">pps</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:41">entropy_coding_sync_enabled_flag</name></name> <operator pos:start="195:43" pos:end="195:43">=</operator> <call pos:start="195:45" pos:end="195:57"><name pos:start="195:45" pos:end="195:53">get_bits1</name><argument_list pos:start="195:54" pos:end="195:57">(<argument pos:start="195:55" pos:end="195:56"><expr pos:start="195:55" pos:end="195:56"><name pos:start="195:55" pos:end="195:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="199:5" pos:end="303:5"><if pos:start="199:5" pos:end="303:5">if <condition pos:start="199:8" pos:end="199:32">(<expr pos:start="199:9" pos:end="199:31"><name pos:start="199:9" pos:end="199:31"><name pos:start="199:9" pos:end="199:11">pps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:31">tiles_enabled_flag</name></name></expr>)</condition> <block pos:start="199:34" pos:end="303:5">{<block_content pos:start="201:9" pos:end="301:67">

        <expr_stmt pos:start="201:9" pos:end="201:59"><expr pos:start="201:9" pos:end="201:58"><name pos:start="201:9" pos:end="201:29"><name pos:start="201:9" pos:end="201:11">pps</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:29">num_tile_columns</name></name> <operator pos:start="201:31" pos:end="201:31">=</operator> <call pos:start="201:33" pos:end="201:54"><name pos:start="201:33" pos:end="201:50">get_ue_golomb_long</name><argument_list pos:start="201:51" pos:end="201:54">(<argument pos:start="201:52" pos:end="201:53"><expr pos:start="201:52" pos:end="201:53"><name pos:start="201:52" pos:end="201:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="201:56" pos:end="201:56">+</operator> <literal type="number" pos:start="201:58" pos:end="201:58">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:59"><expr pos:start="203:9" pos:end="203:58"><name pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:11">pps</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:26">num_tile_rows</name></name>    <operator pos:start="203:31" pos:end="203:31">=</operator> <call pos:start="203:33" pos:end="203:54"><name pos:start="203:33" pos:end="203:50">get_ue_golomb_long</name><argument_list pos:start="203:51" pos:end="203:54">(<argument pos:start="203:52" pos:end="203:53"><expr pos:start="203:52" pos:end="203:53"><name pos:start="203:52" pos:end="203:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="203:56" pos:end="203:56">+</operator> <literal type="number" pos:start="203:58" pos:end="203:58">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="217:9"><if pos:start="205:9" pos:end="217:9">if <condition pos:start="205:12" pos:end="207:48">(<expr pos:start="205:13" pos:end="207:47"><name pos:start="205:13" pos:end="205:33"><name pos:start="205:13" pos:end="205:15">pps</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:33">num_tile_columns</name></name> <operator pos:start="205:35" pos:end="205:36">==</operator> <literal type="number" pos:start="205:38" pos:end="205:38">0</literal> <operator pos:start="205:40" pos:end="205:41">||</operator>

            <name pos:start="207:13" pos:end="207:33"><name pos:start="207:13" pos:end="207:15">pps</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:33">num_tile_columns</name></name> <operator pos:start="207:35" pos:end="207:36">&gt;=</operator> <name pos:start="207:38" pos:end="207:47"><name pos:start="207:38" pos:end="207:40">sps</name><operator pos:start="207:41" pos:end="207:42">-&gt;</operator><name pos:start="207:43" pos:end="207:47">width</name></name></expr>)</condition> <block pos:start="207:50" pos:end="217:9">{<block_content pos:start="209:13" pos:end="215:21">

            <expr_stmt pos:start="209:13" pos:end="211:46"><expr pos:start="209:13" pos:end="211:45"><call pos:start="209:13" pos:end="211:45"><name pos:start="209:13" pos:end="209:18">av_log</name><argument_list pos:start="209:19" pos:end="211:45">(<argument pos:start="209:20" pos:end="209:27"><expr pos:start="209:20" pos:end="209:27"><name pos:start="209:20" pos:end="209:27"><name pos:start="209:20" pos:end="209:20">s</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:27">avctx</name></name></expr></argument>, <argument pos:start="209:30" pos:end="209:41"><expr pos:start="209:30" pos:end="209:41"><name pos:start="209:30" pos:end="209:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:44" pos:end="209:87"><expr pos:start="209:44" pos:end="209:87"><literal type="string" pos:start="209:44" pos:end="209:87">"num_tile_columns_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="211:20" pos:end="211:44"><expr pos:start="211:20" pos:end="211:44"><name pos:start="211:20" pos:end="211:40"><name pos:start="211:20" pos:end="211:22">pps</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:40">num_tile_columns</name></name> <operator pos:start="211:42" pos:end="211:42">-</operator> <literal type="number" pos:start="211:44" pos:end="211:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:38"><expr pos:start="213:13" pos:end="213:37"><name pos:start="213:13" pos:end="213:15">ret</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <name pos:start="213:19" pos:end="213:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="215:13" pos:end="215:21">goto <name pos:start="215:18" pos:end="215:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="219:9" pos:end="231:9"><if pos:start="219:9" pos:end="231:9">if <condition pos:start="219:12" pos:end="221:46">(<expr pos:start="219:13" pos:end="221:45"><name pos:start="219:13" pos:end="219:30"><name pos:start="219:13" pos:end="219:15">pps</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:30">num_tile_rows</name></name> <operator pos:start="219:32" pos:end="219:33">==</operator> <literal type="number" pos:start="219:35" pos:end="219:35">0</literal> <operator pos:start="219:37" pos:end="219:38">||</operator>

            <name pos:start="221:13" pos:end="221:30"><name pos:start="221:13" pos:end="221:15">pps</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:30">num_tile_rows</name></name> <operator pos:start="221:32" pos:end="221:33">&gt;=</operator> <name pos:start="221:35" pos:end="221:45"><name pos:start="221:35" pos:end="221:37">sps</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:45">height</name></name></expr>)</condition> <block pos:start="221:48" pos:end="231:9">{<block_content pos:start="223:13" pos:end="229:21">

            <expr_stmt pos:start="223:13" pos:end="225:43"><expr pos:start="223:13" pos:end="225:42"><call pos:start="223:13" pos:end="225:42"><name pos:start="223:13" pos:end="223:18">av_log</name><argument_list pos:start="223:19" pos:end="225:42">(<argument pos:start="223:20" pos:end="223:27"><expr pos:start="223:20" pos:end="223:27"><name pos:start="223:20" pos:end="223:27"><name pos:start="223:20" pos:end="223:20">s</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:27">avctx</name></name></expr></argument>, <argument pos:start="223:30" pos:end="223:41"><expr pos:start="223:30" pos:end="223:41"><name pos:start="223:30" pos:end="223:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="223:44" pos:end="223:84"><expr pos:start="223:44" pos:end="223:84"><literal type="string" pos:start="223:44" pos:end="223:84">"num_tile_rows_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="225:20" pos:end="225:41"><expr pos:start="225:20" pos:end="225:41"><name pos:start="225:20" pos:end="225:37"><name pos:start="225:20" pos:end="225:22">pps</name><operator pos:start="225:23" pos:end="225:24">-&gt;</operator><name pos:start="225:25" pos:end="225:37">num_tile_rows</name></name> <operator pos:start="225:39" pos:end="225:39">-</operator> <literal type="number" pos:start="225:41" pos:end="225:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:38"><expr pos:start="227:13" pos:end="227:37"><name pos:start="227:13" pos:end="227:15">ret</name> <operator pos:start="227:17" pos:end="227:17">=</operator> <name pos:start="227:19" pos:end="227:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="229:13" pos:end="229:21">goto <name pos:start="229:18" pos:end="229:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:95"><expr pos:start="235:9" pos:end="235:94"><name pos:start="235:9" pos:end="235:25"><name pos:start="235:9" pos:end="235:11">pps</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:25">column_width</name></name> <operator pos:start="235:27" pos:end="235:27">=</operator> <call pos:start="235:29" pos:end="235:94"><name pos:start="235:29" pos:end="235:43">av_malloc_array</name><argument_list pos:start="235:44" pos:end="235:94">(<argument pos:start="235:45" pos:end="235:65"><expr pos:start="235:45" pos:end="235:65"><name pos:start="235:45" pos:end="235:65"><name pos:start="235:45" pos:end="235:47">pps</name><operator pos:start="235:48" pos:end="235:49">-&gt;</operator><name pos:start="235:50" pos:end="235:65">num_tile_columns</name></name></expr></argument>, <argument pos:start="235:68" pos:end="235:93"><expr pos:start="235:68" pos:end="235:93"><sizeof pos:start="235:68" pos:end="235:93">sizeof<argument_list pos:start="235:74" pos:end="235:93">(<argument pos:start="235:75" pos:end="235:92"><expr pos:start="235:75" pos:end="235:92"><operator pos:start="235:75" pos:end="235:75">*</operator><name pos:start="235:76" pos:end="235:92"><name pos:start="235:76" pos:end="235:78">pps</name><operator pos:start="235:79" pos:end="235:80">-&gt;</operator><name pos:start="235:81" pos:end="235:92">column_width</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:93"><expr pos:start="237:9" pos:end="237:92"><name pos:start="237:9" pos:end="237:23"><name pos:start="237:9" pos:end="237:11">pps</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:23">row_height</name></name>   <operator pos:start="237:27" pos:end="237:27">=</operator> <call pos:start="237:29" pos:end="237:92"><name pos:start="237:29" pos:end="237:43">av_malloc_array</name><argument_list pos:start="237:44" pos:end="237:92">(<argument pos:start="237:45" pos:end="237:62"><expr pos:start="237:45" pos:end="237:62"><name pos:start="237:45" pos:end="237:62"><name pos:start="237:45" pos:end="237:47">pps</name><operator pos:start="237:48" pos:end="237:49">-&gt;</operator><name pos:start="237:50" pos:end="237:62">num_tile_rows</name></name></expr></argument>,    <argument pos:start="237:68" pos:end="237:91"><expr pos:start="237:68" pos:end="237:91"><sizeof pos:start="237:68" pos:end="237:91">sizeof<argument_list pos:start="237:74" pos:end="237:91">(<argument pos:start="237:75" pos:end="237:90"><expr pos:start="237:75" pos:end="237:90"><operator pos:start="237:75" pos:end="237:75">*</operator><name pos:start="237:76" pos:end="237:90"><name pos:start="237:76" pos:end="237:78">pps</name><operator pos:start="237:79" pos:end="237:80">-&gt;</operator><name pos:start="237:81" pos:end="237:90">row_height</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="245:9"><if pos:start="239:9" pos:end="245:9">if <condition pos:start="239:12" pos:end="239:51">(<expr pos:start="239:13" pos:end="239:50"><operator pos:start="239:13" pos:end="239:13">!</operator><name pos:start="239:14" pos:end="239:30"><name pos:start="239:14" pos:end="239:16">pps</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:30">column_width</name></name> <operator pos:start="239:32" pos:end="239:33">||</operator> <operator pos:start="239:35" pos:end="239:35">!</operator><name pos:start="239:36" pos:end="239:50"><name pos:start="239:36" pos:end="239:38">pps</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:50">row_height</name></name></expr>)</condition> <block pos:start="239:53" pos:end="245:9">{<block_content pos:start="241:13" pos:end="243:21">

            <expr_stmt pos:start="241:13" pos:end="241:34"><expr pos:start="241:13" pos:end="241:33"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:33"><name pos:start="241:19" pos:end="241:25">AVERROR</name><argument_list pos:start="241:26" pos:end="241:33">(<argument pos:start="241:27" pos:end="241:32"><expr pos:start="241:27" pos:end="241:32"><name pos:start="241:27" pos:end="241:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="243:13" pos:end="243:21">goto <name pos:start="243:18" pos:end="243:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="249:9" pos:end="249:50"><expr pos:start="249:9" pos:end="249:49"><name pos:start="249:9" pos:end="249:33"><name pos:start="249:9" pos:end="249:11">pps</name><operator pos:start="249:12" pos:end="249:13">-&gt;</operator><name pos:start="249:14" pos:end="249:33">uniform_spacing_flag</name></name> <operator pos:start="249:35" pos:end="249:35">=</operator> <call pos:start="249:37" pos:end="249:49"><name pos:start="249:37" pos:end="249:45">get_bits1</name><argument_list pos:start="249:46" pos:end="249:49">(<argument pos:start="249:47" pos:end="249:48"><expr pos:start="249:47" pos:end="249:48"><name pos:start="249:47" pos:end="249:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="299:9"><if pos:start="251:9" pos:end="299:9">if <condition pos:start="251:12" pos:end="251:39">(<expr pos:start="251:13" pos:end="251:38"><operator pos:start="251:13" pos:end="251:13">!</operator><name pos:start="251:14" pos:end="251:38"><name pos:start="251:14" pos:end="251:16">pps</name><operator pos:start="251:17" pos:end="251:18">-&gt;</operator><name pos:start="251:19" pos:end="251:38">uniform_spacing_flag</name></name></expr>)</condition> <block pos:start="251:41" pos:end="299:9">{<block_content pos:start="253:13" pos:end="297:76">

            <decl_stmt pos:start="253:13" pos:end="253:29"><decl pos:start="253:13" pos:end="253:28"><type pos:start="253:13" pos:end="253:20"><name pos:start="253:13" pos:end="253:20">uint64_t</name></type> <name pos:start="253:22" pos:end="253:24">sum</name> <init pos:start="253:26" pos:end="253:28">= <expr pos:start="253:28" pos:end="253:28"><literal type="number" pos:start="253:28" pos:end="253:28">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="255:13" pos:end="261:13">for <control pos:start="255:17" pos:end="255:59">(<init pos:start="255:18" pos:end="255:23"><expr pos:start="255:18" pos:end="255:22"><name pos:start="255:18" pos:end="255:18">i</name> <operator pos:start="255:20" pos:end="255:20">=</operator> <literal type="number" pos:start="255:22" pos:end="255:22">0</literal></expr>;</init> <condition pos:start="255:25" pos:end="255:54"><expr pos:start="255:25" pos:end="255:53"><name pos:start="255:25" pos:end="255:25">i</name> <operator pos:start="255:27" pos:end="255:27">&lt;</operator> <name pos:start="255:29" pos:end="255:49"><name pos:start="255:29" pos:end="255:31">pps</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:49">num_tile_columns</name></name> <operator pos:start="255:51" pos:end="255:51">-</operator> <literal type="number" pos:start="255:53" pos:end="255:53">1</literal></expr>;</condition> <incr pos:start="255:56" pos:end="255:58"><expr pos:start="255:56" pos:end="255:58"><name pos:start="255:56" pos:end="255:56">i</name><operator pos:start="255:57" pos:end="255:58">++</operator></expr></incr>)</control> <block pos:start="255:61" pos:end="261:13">{<block_content pos:start="257:17" pos:end="259:60">

                <expr_stmt pos:start="257:17" pos:end="257:66"><expr pos:start="257:17" pos:end="257:65"><name pos:start="257:17" pos:end="257:36"><name pos:start="257:17" pos:end="257:19">pps</name><operator pos:start="257:20" pos:end="257:21">-&gt;</operator><name pos:start="257:22" pos:end="257:33">column_width</name><index pos:start="257:34" pos:end="257:36">[<expr pos:start="257:35" pos:end="257:35"><name pos:start="257:35" pos:end="257:35">i</name></expr>]</index></name> <operator pos:start="257:38" pos:end="257:38">=</operator> <call pos:start="257:40" pos:end="257:61"><name pos:start="257:40" pos:end="257:57">get_ue_golomb_long</name><argument_list pos:start="257:58" pos:end="257:61">(<argument pos:start="257:59" pos:end="257:60"><expr pos:start="257:59" pos:end="257:60"><name pos:start="257:59" pos:end="257:60">gb</name></expr></argument>)</argument_list></call> <operator pos:start="257:63" pos:end="257:63">+</operator> <literal type="number" pos:start="257:65" pos:end="257:65">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:60"><expr pos:start="259:17" pos:end="259:59"><name pos:start="259:17" pos:end="259:19">sum</name>                 <operator pos:start="259:37" pos:end="259:38">+=</operator> <name pos:start="259:40" pos:end="259:59"><name pos:start="259:40" pos:end="259:42">pps</name><operator pos:start="259:43" pos:end="259:44">-&gt;</operator><name pos:start="259:45" pos:end="259:56">column_width</name><index pos:start="259:57" pos:end="259:59">[<expr pos:start="259:58" pos:end="259:58"><name pos:start="259:58" pos:end="259:58">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="263:13" pos:end="271:13"><if pos:start="263:13" pos:end="271:13">if <condition pos:start="263:16" pos:end="263:38">(<expr pos:start="263:17" pos:end="263:37"><name pos:start="263:17" pos:end="263:19">sum</name> <operator pos:start="263:21" pos:end="263:22">&gt;=</operator> <name pos:start="263:24" pos:end="263:37"><name pos:start="263:24" pos:end="263:26">sps</name><operator pos:start="263:27" pos:end="263:28">-&gt;</operator><name pos:start="263:29" pos:end="263:37">ctb_width</name></name></expr>)</condition> <block pos:start="263:40" pos:end="271:13">{<block_content pos:start="265:17" pos:end="269:25">

                <expr_stmt pos:start="265:17" pos:end="265:73"><expr pos:start="265:17" pos:end="265:72"><call pos:start="265:17" pos:end="265:72"><name pos:start="265:17" pos:end="265:22">av_log</name><argument_list pos:start="265:23" pos:end="265:72">(<argument pos:start="265:24" pos:end="265:31"><expr pos:start="265:24" pos:end="265:31"><name pos:start="265:24" pos:end="265:31"><name pos:start="265:24" pos:end="265:24">s</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:31">avctx</name></name></expr></argument>, <argument pos:start="265:34" pos:end="265:45"><expr pos:start="265:34" pos:end="265:45"><name pos:start="265:34" pos:end="265:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:48" pos:end="265:71"><expr pos:start="265:48" pos:end="265:71"><literal type="string" pos:start="265:48" pos:end="265:71">"Invalid tile widths.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:42"><expr pos:start="267:17" pos:end="267:41"><name pos:start="267:17" pos:end="267:19">ret</name> <operator pos:start="267:21" pos:end="267:21">=</operator> <name pos:start="267:23" pos:end="267:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="269:17" pos:end="269:25">goto <name pos:start="269:22" pos:end="269:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:80"><expr pos:start="273:13" pos:end="273:79"><name pos:start="273:13" pos:end="273:56"><name pos:start="273:13" pos:end="273:15">pps</name><operator pos:start="273:16" pos:end="273:17">-&gt;</operator><name pos:start="273:18" pos:end="273:29">column_width</name><index pos:start="273:30" pos:end="273:56">[<expr pos:start="273:31" pos:end="273:55"><name pos:start="273:31" pos:end="273:51"><name pos:start="273:31" pos:end="273:33">pps</name><operator pos:start="273:34" pos:end="273:35">-&gt;</operator><name pos:start="273:36" pos:end="273:51">num_tile_columns</name></name> <operator pos:start="273:53" pos:end="273:53">-</operator> <literal type="number" pos:start="273:55" pos:end="273:55">1</literal></expr>]</index></name> <operator pos:start="273:58" pos:end="273:58">=</operator> <name pos:start="273:60" pos:end="273:73"><name pos:start="273:60" pos:end="273:62">sps</name><operator pos:start="273:63" pos:end="273:64">-&gt;</operator><name pos:start="273:65" pos:end="273:73">ctb_width</name></name> <operator pos:start="273:75" pos:end="273:75">-</operator> <name pos:start="273:77" pos:end="273:79">sum</name></expr>;</expr_stmt>



            <expr_stmt pos:start="277:13" pos:end="277:20"><expr pos:start="277:13" pos:end="277:19"><name pos:start="277:13" pos:end="277:15">sum</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <literal type="number" pos:start="277:19" pos:end="277:19">0</literal></expr>;</expr_stmt>

            <for pos:start="279:13" pos:end="285:13">for <control pos:start="279:17" pos:end="279:56">(<init pos:start="279:18" pos:end="279:23"><expr pos:start="279:18" pos:end="279:22"><name pos:start="279:18" pos:end="279:18">i</name> <operator pos:start="279:20" pos:end="279:20">=</operator> <literal type="number" pos:start="279:22" pos:end="279:22">0</literal></expr>;</init> <condition pos:start="279:25" pos:end="279:51"><expr pos:start="279:25" pos:end="279:50"><name pos:start="279:25" pos:end="279:25">i</name> <operator pos:start="279:27" pos:end="279:27">&lt;</operator> <name pos:start="279:29" pos:end="279:46"><name pos:start="279:29" pos:end="279:31">pps</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:46">num_tile_rows</name></name> <operator pos:start="279:48" pos:end="279:48">-</operator> <literal type="number" pos:start="279:50" pos:end="279:50">1</literal></expr>;</condition> <incr pos:start="279:53" pos:end="279:55"><expr pos:start="279:53" pos:end="279:55"><name pos:start="279:53" pos:end="279:53">i</name><operator pos:start="279:54" pos:end="279:55">++</operator></expr></incr>)</control> <block pos:start="279:58" pos:end="285:13">{<block_content pos:start="281:17" pos:end="283:56">

                <expr_stmt pos:start="281:17" pos:end="281:64"><expr pos:start="281:17" pos:end="281:63"><name pos:start="281:17" pos:end="281:34"><name pos:start="281:17" pos:end="281:19">pps</name><operator pos:start="281:20" pos:end="281:21">-&gt;</operator><name pos:start="281:22" pos:end="281:31">row_height</name><index pos:start="281:32" pos:end="281:34">[<expr pos:start="281:33" pos:end="281:33"><name pos:start="281:33" pos:end="281:33">i</name></expr>]</index></name> <operator pos:start="281:36" pos:end="281:36">=</operator> <call pos:start="281:38" pos:end="281:59"><name pos:start="281:38" pos:end="281:55">get_ue_golomb_long</name><argument_list pos:start="281:56" pos:end="281:59">(<argument pos:start="281:57" pos:end="281:58"><expr pos:start="281:57" pos:end="281:58"><name pos:start="281:57" pos:end="281:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="281:61" pos:end="281:61">+</operator> <literal type="number" pos:start="281:63" pos:end="281:63">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:56"><expr pos:start="283:17" pos:end="283:55"><name pos:start="283:17" pos:end="283:19">sum</name>               <operator pos:start="283:35" pos:end="283:36">+=</operator> <name pos:start="283:38" pos:end="283:55"><name pos:start="283:38" pos:end="283:40">pps</name><operator pos:start="283:41" pos:end="283:42">-&gt;</operator><name pos:start="283:43" pos:end="283:52">row_height</name><index pos:start="283:53" pos:end="283:55">[<expr pos:start="283:54" pos:end="283:54"><name pos:start="283:54" pos:end="283:54">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="287:13" pos:end="295:13"><if pos:start="287:13" pos:end="295:13">if <condition pos:start="287:16" pos:end="287:39">(<expr pos:start="287:17" pos:end="287:38"><name pos:start="287:17" pos:end="287:19">sum</name> <operator pos:start="287:21" pos:end="287:22">&gt;=</operator> <name pos:start="287:24" pos:end="287:38"><name pos:start="287:24" pos:end="287:26">sps</name><operator pos:start="287:27" pos:end="287:28">-&gt;</operator><name pos:start="287:29" pos:end="287:38">ctb_height</name></name></expr>)</condition> <block pos:start="287:41" pos:end="295:13">{<block_content pos:start="289:17" pos:end="293:25">

                <expr_stmt pos:start="289:17" pos:end="289:74"><expr pos:start="289:17" pos:end="289:73"><call pos:start="289:17" pos:end="289:73"><name pos:start="289:17" pos:end="289:22">av_log</name><argument_list pos:start="289:23" pos:end="289:73">(<argument pos:start="289:24" pos:end="289:31"><expr pos:start="289:24" pos:end="289:31"><name pos:start="289:24" pos:end="289:31"><name pos:start="289:24" pos:end="289:24">s</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:31">avctx</name></name></expr></argument>, <argument pos:start="289:34" pos:end="289:45"><expr pos:start="289:34" pos:end="289:45"><name pos:start="289:34" pos:end="289:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="289:48" pos:end="289:72"><expr pos:start="289:48" pos:end="289:72"><literal type="string" pos:start="289:48" pos:end="289:72">"Invalid tile heights.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:42"><expr pos:start="291:17" pos:end="291:41"><name pos:start="291:17" pos:end="291:19">ret</name> <operator pos:start="291:21" pos:end="291:21">=</operator> <name pos:start="291:23" pos:end="291:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="293:17" pos:end="293:25">goto <name pos:start="293:22" pos:end="293:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:76"><expr pos:start="297:13" pos:end="297:75"><name pos:start="297:13" pos:end="297:51"><name pos:start="297:13" pos:end="297:15">pps</name><operator pos:start="297:16" pos:end="297:17">-&gt;</operator><name pos:start="297:18" pos:end="297:27">row_height</name><index pos:start="297:28" pos:end="297:51">[<expr pos:start="297:29" pos:end="297:50"><name pos:start="297:29" pos:end="297:46"><name pos:start="297:29" pos:end="297:31">pps</name><operator pos:start="297:32" pos:end="297:33">-&gt;</operator><name pos:start="297:34" pos:end="297:46">num_tile_rows</name></name> <operator pos:start="297:48" pos:end="297:48">-</operator> <literal type="number" pos:start="297:50" pos:end="297:50">1</literal></expr>]</index></name> <operator pos:start="297:53" pos:end="297:53">=</operator> <name pos:start="297:55" pos:end="297:69"><name pos:start="297:55" pos:end="297:57">sps</name><operator pos:start="297:58" pos:end="297:59">-&gt;</operator><name pos:start="297:60" pos:end="297:69">ctb_height</name></name> <operator pos:start="297:71" pos:end="297:71">-</operator> <name pos:start="297:73" pos:end="297:75">sum</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:67"><expr pos:start="301:9" pos:end="301:66"><name pos:start="301:9" pos:end="301:50"><name pos:start="301:9" pos:end="301:11">pps</name><operator pos:start="301:12" pos:end="301:13">-&gt;</operator><name pos:start="301:14" pos:end="301:50">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="301:52" pos:end="301:52">=</operator> <call pos:start="301:54" pos:end="301:66"><name pos:start="301:54" pos:end="301:62">get_bits1</name><argument_list pos:start="301:63" pos:end="301:66">(<argument pos:start="301:64" pos:end="301:65"><expr pos:start="301:64" pos:end="301:65"><name pos:start="301:64" pos:end="301:65">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:68"><expr pos:start="307:5" pos:end="307:67"><name pos:start="307:5" pos:end="307:51"><name pos:start="307:5" pos:end="307:7">pps</name><operator pos:start="307:8" pos:end="307:9">-&gt;</operator><name pos:start="307:10" pos:end="307:51">seq_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="307:53" pos:end="307:53">=</operator> <call pos:start="307:55" pos:end="307:67"><name pos:start="307:55" pos:end="307:63">get_bits1</name><argument_list pos:start="307:64" pos:end="307:67">(<argument pos:start="307:65" pos:end="307:66"><expr pos:start="307:65" pos:end="307:66"><name pos:start="307:65" pos:end="307:66">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="311:5" pos:end="311:64"><expr pos:start="311:5" pos:end="311:63"><name pos:start="311:5" pos:end="311:47"><name pos:start="311:5" pos:end="311:7">pps</name><operator pos:start="311:8" pos:end="311:9">-&gt;</operator><name pos:start="311:10" pos:end="311:47">deblocking_filter_control_present_flag</name></name> <operator pos:start="311:49" pos:end="311:49">=</operator> <call pos:start="311:51" pos:end="311:63"><name pos:start="311:51" pos:end="311:59">get_bits1</name><argument_list pos:start="311:60" pos:end="311:63">(<argument pos:start="311:61" pos:end="311:62"><expr pos:start="311:61" pos:end="311:62"><name pos:start="311:61" pos:end="311:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="313:5" pos:end="351:5"><if pos:start="313:5" pos:end="351:5">if <condition pos:start="313:8" pos:end="313:52">(<expr pos:start="313:9" pos:end="313:51"><name pos:start="313:9" pos:end="313:51"><name pos:start="313:9" pos:end="313:11">pps</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:51">deblocking_filter_control_present_flag</name></name></expr>)</condition> <block pos:start="313:54" pos:end="351:5">{<block_content pos:start="315:9" pos:end="349:9">

        <expr_stmt pos:start="315:9" pos:end="315:69"><expr pos:start="315:9" pos:end="315:68"><name pos:start="315:9" pos:end="315:52"><name pos:start="315:9" pos:end="315:11">pps</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:52">deblocking_filter_override_enabled_flag</name></name> <operator pos:start="315:54" pos:end="315:54">=</operator> <call pos:start="315:56" pos:end="315:68"><name pos:start="315:56" pos:end="315:64">get_bits1</name><argument_list pos:start="315:65" pos:end="315:68">(<argument pos:start="315:66" pos:end="315:67"><expr pos:start="315:66" pos:end="315:67"><name pos:start="315:66" pos:end="315:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:69"><expr pos:start="317:9" pos:end="317:68"><name pos:start="317:9" pos:end="317:24"><name pos:start="317:9" pos:end="317:11">pps</name><operator pos:start="317:12" pos:end="317:13">-&gt;</operator><name pos:start="317:14" pos:end="317:24">disable_dbf</name></name>                             <operator pos:start="317:54" pos:end="317:54">=</operator> <call pos:start="317:56" pos:end="317:68"><name pos:start="317:56" pos:end="317:64">get_bits1</name><argument_list pos:start="317:65" pos:end="317:68">(<argument pos:start="317:66" pos:end="317:67"><expr pos:start="317:66" pos:end="317:67"><name pos:start="317:66" pos:end="317:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="349:9"><if pos:start="319:9" pos:end="349:9">if <condition pos:start="319:12" pos:end="319:30">(<expr pos:start="319:13" pos:end="319:29"><operator pos:start="319:13" pos:end="319:13">!</operator><name pos:start="319:14" pos:end="319:29"><name pos:start="319:14" pos:end="319:16">pps</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:29">disable_dbf</name></name></expr>)</condition> <block pos:start="319:32" pos:end="349:9">{<block_content pos:start="321:13" pos:end="347:13">

            <expr_stmt pos:start="321:13" pos:end="321:53"><expr pos:start="321:13" pos:end="321:52"><name pos:start="321:13" pos:end="321:28"><name pos:start="321:13" pos:end="321:15">pps</name><operator pos:start="321:16" pos:end="321:17">-&gt;</operator><name pos:start="321:18" pos:end="321:28">beta_offset</name></name> <operator pos:start="321:30" pos:end="321:30">=</operator> <call pos:start="321:32" pos:end="321:48"><name pos:start="321:32" pos:end="321:44">get_se_golomb</name><argument_list pos:start="321:45" pos:end="321:48">(<argument pos:start="321:46" pos:end="321:47"><expr pos:start="321:46" pos:end="321:47"><name pos:start="321:46" pos:end="321:47">gb</name></expr></argument>)</argument_list></call> <operator pos:start="321:50" pos:end="321:50">*</operator> <literal type="number" pos:start="321:52" pos:end="321:52">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:51"><expr pos:start="323:13" pos:end="323:50"><name pos:start="323:13" pos:end="323:26"><name pos:start="323:13" pos:end="323:15">pps</name><operator pos:start="323:16" pos:end="323:17">-&gt;</operator><name pos:start="323:18" pos:end="323:26">tc_offset</name></name> <operator pos:start="323:28" pos:end="323:28">=</operator> <call pos:start="323:30" pos:end="323:46"><name pos:start="323:30" pos:end="323:42">get_se_golomb</name><argument_list pos:start="323:43" pos:end="323:46">(<argument pos:start="323:44" pos:end="323:45"><expr pos:start="323:44" pos:end="323:45"><name pos:start="323:44" pos:end="323:45">gb</name></expr></argument>)</argument_list></call> <operator pos:start="323:48" pos:end="323:48">*</operator> <literal type="number" pos:start="323:50" pos:end="323:50">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="325:13" pos:end="335:13"><if pos:start="325:13" pos:end="335:13">if <condition pos:start="325:16" pos:end="325:66">(<expr pos:start="325:17" pos:end="325:65"><name pos:start="325:17" pos:end="325:32"><name pos:start="325:17" pos:end="325:19">pps</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:32">beta_offset</name></name><operator pos:start="325:33" pos:end="325:33">/</operator><literal type="number" pos:start="325:34" pos:end="325:34">2</literal> <operator pos:start="325:36" pos:end="325:36">&lt;</operator> <operator pos:start="325:38" pos:end="325:38">-</operator><literal type="number" pos:start="325:39" pos:end="325:39">6</literal> <operator pos:start="325:41" pos:end="325:42">||</operator> <name pos:start="325:44" pos:end="325:59"><name pos:start="325:44" pos:end="325:46">pps</name><operator pos:start="325:47" pos:end="325:48">-&gt;</operator><name pos:start="325:49" pos:end="325:59">beta_offset</name></name><operator pos:start="325:60" pos:end="325:60">/</operator><literal type="number" pos:start="325:61" pos:end="325:61">2</literal> <operator pos:start="325:63" pos:end="325:63">&gt;</operator> <literal type="number" pos:start="325:65" pos:end="325:65">6</literal></expr>)</condition> <block pos:start="325:68" pos:end="335:13">{<block_content pos:start="327:17" pos:end="333:25">

                <expr_stmt pos:start="327:17" pos:end="329:43"><expr pos:start="327:17" pos:end="329:42"><call pos:start="327:17" pos:end="329:42"><name pos:start="327:17" pos:end="327:22">av_log</name><argument_list pos:start="327:23" pos:end="329:42">(<argument pos:start="327:24" pos:end="327:31"><expr pos:start="327:24" pos:end="327:31"><name pos:start="327:24" pos:end="327:31"><name pos:start="327:24" pos:end="327:24">s</name><operator pos:start="327:25" pos:end="327:26">-&gt;</operator><name pos:start="327:27" pos:end="327:31">avctx</name></name></expr></argument>, <argument pos:start="327:34" pos:end="327:45"><expr pos:start="327:34" pos:end="327:45"><name pos:start="327:34" pos:end="327:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:48" pos:end="327:88"><expr pos:start="327:48" pos:end="327:88"><literal type="string" pos:start="327:48" pos:end="327:88">"pps_beta_offset_div2 out of range: %d\n"</literal></expr></argument>,

                       <argument pos:start="329:24" pos:end="329:41"><expr pos:start="329:24" pos:end="329:41"><name pos:start="329:24" pos:end="329:39"><name pos:start="329:24" pos:end="329:26">pps</name><operator pos:start="329:27" pos:end="329:28">-&gt;</operator><name pos:start="329:29" pos:end="329:39">beta_offset</name></name><operator pos:start="329:40" pos:end="329:40">/</operator><literal type="number" pos:start="329:41" pos:end="329:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:42"><expr pos:start="331:17" pos:end="331:41"><name pos:start="331:17" pos:end="331:19">ret</name> <operator pos:start="331:21" pos:end="331:21">=</operator> <name pos:start="331:23" pos:end="331:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="333:17" pos:end="333:25">goto <name pos:start="333:22" pos:end="333:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="337:13" pos:end="347:13"><if pos:start="337:13" pos:end="347:13">if <condition pos:start="337:16" pos:end="337:62">(<expr pos:start="337:17" pos:end="337:61"><name pos:start="337:17" pos:end="337:30"><name pos:start="337:17" pos:end="337:19">pps</name><operator pos:start="337:20" pos:end="337:21">-&gt;</operator><name pos:start="337:22" pos:end="337:30">tc_offset</name></name><operator pos:start="337:31" pos:end="337:31">/</operator><literal type="number" pos:start="337:32" pos:end="337:32">2</literal> <operator pos:start="337:34" pos:end="337:34">&lt;</operator> <operator pos:start="337:36" pos:end="337:36">-</operator><literal type="number" pos:start="337:37" pos:end="337:37">6</literal> <operator pos:start="337:39" pos:end="337:40">||</operator> <name pos:start="337:42" pos:end="337:55"><name pos:start="337:42" pos:end="337:44">pps</name><operator pos:start="337:45" pos:end="337:46">-&gt;</operator><name pos:start="337:47" pos:end="337:55">tc_offset</name></name><operator pos:start="337:56" pos:end="337:56">/</operator><literal type="number" pos:start="337:57" pos:end="337:57">2</literal> <operator pos:start="337:59" pos:end="337:59">&gt;</operator> <literal type="number" pos:start="337:61" pos:end="337:61">6</literal></expr>)</condition> <block pos:start="337:64" pos:end="347:13">{<block_content pos:start="339:17" pos:end="345:25">

                <expr_stmt pos:start="339:17" pos:end="341:41"><expr pos:start="339:17" pos:end="341:40"><call pos:start="339:17" pos:end="341:40"><name pos:start="339:17" pos:end="339:22">av_log</name><argument_list pos:start="339:23" pos:end="341:40">(<argument pos:start="339:24" pos:end="339:31"><expr pos:start="339:24" pos:end="339:31"><name pos:start="339:24" pos:end="339:31"><name pos:start="339:24" pos:end="339:24">s</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:31">avctx</name></name></expr></argument>, <argument pos:start="339:34" pos:end="339:45"><expr pos:start="339:34" pos:end="339:45"><name pos:start="339:34" pos:end="339:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="339:48" pos:end="339:86"><expr pos:start="339:48" pos:end="339:86"><literal type="string" pos:start="339:48" pos:end="339:86">"pps_tc_offset_div2 out of range: %d\n"</literal></expr></argument>,

                       <argument pos:start="341:24" pos:end="341:39"><expr pos:start="341:24" pos:end="341:39"><name pos:start="341:24" pos:end="341:37"><name pos:start="341:24" pos:end="341:26">pps</name><operator pos:start="341:27" pos:end="341:28">-&gt;</operator><name pos:start="341:29" pos:end="341:37">tc_offset</name></name><operator pos:start="341:38" pos:end="341:38">/</operator><literal type="number" pos:start="341:39" pos:end="341:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="343:42"><expr pos:start="343:17" pos:end="343:41"><name pos:start="343:17" pos:end="343:19">ret</name> <operator pos:start="343:21" pos:end="343:21">=</operator> <name pos:start="343:23" pos:end="343:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="345:17" pos:end="345:25">goto <name pos:start="345:22" pos:end="345:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="355:5" pos:end="355:56"><expr pos:start="355:5" pos:end="355:55"><name pos:start="355:5" pos:end="355:39"><name pos:start="355:5" pos:end="355:7">pps</name><operator pos:start="355:8" pos:end="355:9">-&gt;</operator><name pos:start="355:10" pos:end="355:39">scaling_list_data_present_flag</name></name> <operator pos:start="355:41" pos:end="355:41">=</operator> <call pos:start="355:43" pos:end="355:55"><name pos:start="355:43" pos:end="355:51">get_bits1</name><argument_list pos:start="355:52" pos:end="355:55">(<argument pos:start="355:53" pos:end="355:54"><expr pos:start="355:53" pos:end="355:54"><name pos:start="355:53" pos:end="355:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="357:5" pos:end="367:5"><if pos:start="357:5" pos:end="367:5">if <condition pos:start="357:8" pos:end="357:44">(<expr pos:start="357:9" pos:end="357:43"><name pos:start="357:9" pos:end="357:43"><name pos:start="357:9" pos:end="357:11">pps</name><operator pos:start="357:12" pos:end="357:13">-&gt;</operator><name pos:start="357:14" pos:end="357:43">scaling_list_data_present_flag</name></name></expr>)</condition> <block pos:start="357:46" pos:end="367:5">{<block_content pos:start="359:9" pos:end="365:21">

        <expr_stmt pos:start="359:9" pos:end="359:58"><expr pos:start="359:9" pos:end="359:57"><call pos:start="359:9" pos:end="359:57"><name pos:start="359:9" pos:end="359:37">set_default_scaling_list_data</name><argument_list pos:start="359:38" pos:end="359:57">(<argument pos:start="359:39" pos:end="359:56"><expr pos:start="359:39" pos:end="359:56"><operator pos:start="359:39" pos:end="359:39">&amp;</operator><name pos:start="359:40" pos:end="359:56"><name pos:start="359:40" pos:end="359:42">pps</name><operator pos:start="359:43" pos:end="359:44">-&gt;</operator><name pos:start="359:45" pos:end="359:56">scaling_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:60"><expr pos:start="361:9" pos:end="361:59"><name pos:start="361:9" pos:end="361:11">ret</name> <operator pos:start="361:13" pos:end="361:13">=</operator> <call pos:start="361:15" pos:end="361:59"><name pos:start="361:15" pos:end="361:31">scaling_list_data</name><argument_list pos:start="361:32" pos:end="361:59">(<argument pos:start="361:33" pos:end="361:33"><expr pos:start="361:33" pos:end="361:33"><name pos:start="361:33" pos:end="361:33">s</name></expr></argument>, <argument pos:start="361:36" pos:end="361:53"><expr pos:start="361:36" pos:end="361:53"><operator pos:start="361:36" pos:end="361:36">&amp;</operator><name pos:start="361:37" pos:end="361:53"><name pos:start="361:37" pos:end="361:39">pps</name><operator pos:start="361:40" pos:end="361:41">-&gt;</operator><name pos:start="361:42" pos:end="361:53">scaling_list</name></name></expr></argument>, <argument pos:start="361:56" pos:end="361:58"><expr pos:start="361:56" pos:end="361:58"><name pos:start="361:56" pos:end="361:58">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="363:9" pos:end="365:21"><if pos:start="363:9" pos:end="365:21">if <condition pos:start="363:12" pos:end="363:20">(<expr pos:start="363:13" pos:end="363:19"><name pos:start="363:13" pos:end="363:15">ret</name> <operator pos:start="363:17" pos:end="363:17">&lt;</operator> <literal type="number" pos:start="363:19" pos:end="363:19">0</literal></expr>)</condition><block type="pseudo" pos:start="365:13" pos:end="365:21"><block_content pos:start="365:13" pos:end="365:21">

            <goto pos:start="365:13" pos:end="365:21">goto <name pos:start="365:18" pos:end="365:20">err</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="369:5" pos:end="369:57"><expr pos:start="369:5" pos:end="369:56"><name pos:start="369:5" pos:end="369:40"><name pos:start="369:5" pos:end="369:7">pps</name><operator pos:start="369:8" pos:end="369:9">-&gt;</operator><name pos:start="369:10" pos:end="369:40">lists_modification_present_flag</name></name> <operator pos:start="369:42" pos:end="369:42">=</operator> <call pos:start="369:44" pos:end="369:56"><name pos:start="369:44" pos:end="369:52">get_bits1</name><argument_list pos:start="369:53" pos:end="369:56">(<argument pos:start="369:54" pos:end="369:55"><expr pos:start="369:54" pos:end="369:55"><name pos:start="369:54" pos:end="369:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:70"><expr pos:start="371:5" pos:end="371:69"><name pos:start="371:5" pos:end="371:34"><name pos:start="371:5" pos:end="371:7">pps</name><operator pos:start="371:8" pos:end="371:9">-&gt;</operator><name pos:start="371:10" pos:end="371:34">log2_parallel_merge_level</name></name>       <operator pos:start="371:42" pos:end="371:42">=</operator> <call pos:start="371:44" pos:end="371:65"><name pos:start="371:44" pos:end="371:61">get_ue_golomb_long</name><argument_list pos:start="371:62" pos:end="371:65">(<argument pos:start="371:63" pos:end="371:64"><expr pos:start="371:63" pos:end="371:64"><name pos:start="371:63" pos:end="371:64">gb</name></expr></argument>)</argument_list></call> <operator pos:start="371:67" pos:end="371:67">+</operator> <literal type="number" pos:start="371:69" pos:end="371:69">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="373:5" pos:end="383:5"><if pos:start="373:5" pos:end="383:5">if <condition pos:start="373:8" pos:end="373:60">(<expr pos:start="373:9" pos:end="373:59"><name pos:start="373:9" pos:end="373:38"><name pos:start="373:9" pos:end="373:11">pps</name><operator pos:start="373:12" pos:end="373:13">-&gt;</operator><name pos:start="373:14" pos:end="373:38">log2_parallel_merge_level</name></name> <operator pos:start="373:40" pos:end="373:40">&gt;</operator> <name pos:start="373:42" pos:end="373:59"><name pos:start="373:42" pos:end="373:44">sps</name><operator pos:start="373:45" pos:end="373:46">-&gt;</operator><name pos:start="373:47" pos:end="373:59">log2_ctb_size</name></name></expr>)</condition> <block pos:start="373:62" pos:end="383:5">{<block_content pos:start="375:9" pos:end="381:17">

        <expr_stmt pos:start="375:9" pos:end="377:51"><expr pos:start="375:9" pos:end="377:50"><call pos:start="375:9" pos:end="377:50"><name pos:start="375:9" pos:end="375:14">av_log</name><argument_list pos:start="375:15" pos:end="377:50">(<argument pos:start="375:16" pos:end="375:23"><expr pos:start="375:16" pos:end="375:23"><name pos:start="375:16" pos:end="375:23"><name pos:start="375:16" pos:end="375:16">s</name><operator pos:start="375:17" pos:end="375:18">-&gt;</operator><name pos:start="375:19" pos:end="375:23">avctx</name></name></expr></argument>, <argument pos:start="375:26" pos:end="375:37"><expr pos:start="375:26" pos:end="375:37"><name pos:start="375:26" pos:end="375:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="375:40" pos:end="375:92"><expr pos:start="375:40" pos:end="375:92"><literal type="string" pos:start="375:40" pos:end="375:92">"log2_parallel_merge_level_minus2 out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="377:16" pos:end="377:49"><expr pos:start="377:16" pos:end="377:49"><name pos:start="377:16" pos:end="377:45"><name pos:start="377:16" pos:end="377:18">pps</name><operator pos:start="377:19" pos:end="377:20">-&gt;</operator><name pos:start="377:21" pos:end="377:45">log2_parallel_merge_level</name></name> <operator pos:start="377:47" pos:end="377:47">-</operator> <literal type="number" pos:start="377:49" pos:end="377:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:34"><expr pos:start="379:9" pos:end="379:33"><name pos:start="379:9" pos:end="379:11">ret</name> <operator pos:start="379:13" pos:end="379:13">=</operator> <name pos:start="379:15" pos:end="379:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="381:9" pos:end="381:17">goto <name pos:start="381:14" pos:end="381:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="387:5" pos:end="387:61"><expr pos:start="387:5" pos:end="387:60"><name pos:start="387:5" pos:end="387:44"><name pos:start="387:5" pos:end="387:7">pps</name><operator pos:start="387:8" pos:end="387:9">-&gt;</operator><name pos:start="387:10" pos:end="387:44">slice_header_extension_present_flag</name></name> <operator pos:start="387:46" pos:end="387:46">=</operator> <call pos:start="387:48" pos:end="387:60"><name pos:start="387:48" pos:end="387:56">get_bits1</name><argument_list pos:start="387:57" pos:end="387:60">(<argument pos:start="387:58" pos:end="387:59"><expr pos:start="387:58" pos:end="387:59"><name pos:start="387:58" pos:end="387:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="391:5" pos:end="403:5"><if pos:start="391:5" pos:end="403:5">if <condition pos:start="391:8" pos:end="391:22">(<expr pos:start="391:9" pos:end="391:21"><call pos:start="391:9" pos:end="391:21"><name pos:start="391:9" pos:end="391:17">get_bits1</name><argument_list pos:start="391:18" pos:end="391:21">(<argument pos:start="391:19" pos:end="391:20"><expr pos:start="391:19" pos:end="391:20"><name pos:start="391:19" pos:end="391:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="391:24" pos:end="403:5">{<block_content pos:start="393:9" pos:end="401:9"> <comment type="line" pos:start="391:26" pos:end="391:54">// pps_extension_present_flag</comment>

        <decl_stmt pos:start="393:9" pos:end="393:54"><decl pos:start="393:9" pos:end="393:53"><type pos:start="393:9" pos:end="393:11"><name pos:start="393:9" pos:end="393:11">int</name></type> <name pos:start="393:13" pos:end="393:37">pps_range_extensions_flag</name> <init pos:start="393:39" pos:end="393:53">= <expr pos:start="393:41" pos:end="393:53"><call pos:start="393:41" pos:end="393:53"><name pos:start="393:41" pos:end="393:49">get_bits1</name><argument_list pos:start="393:50" pos:end="393:53">(<argument pos:start="393:51" pos:end="393:52"><expr pos:start="393:51" pos:end="393:52"><name pos:start="393:51" pos:end="393:52">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="395:9" pos:end="395:39">/* int pps_extension_7bits = */</comment> <expr_stmt pos:start="395:41" pos:end="395:56"><expr pos:start="395:41" pos:end="395:55"><call pos:start="395:41" pos:end="395:55"><name pos:start="395:41" pos:end="395:48">get_bits</name><argument_list pos:start="395:49" pos:end="395:55">(<argument pos:start="395:50" pos:end="395:51"><expr pos:start="395:50" pos:end="395:51"><name pos:start="395:50" pos:end="395:51">gb</name></expr></argument>, <argument pos:start="395:54" pos:end="395:54"><expr pos:start="395:54" pos:end="395:54"><literal type="number" pos:start="395:54" pos:end="395:54">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="397:9" pos:end="401:9"><if pos:start="397:9" pos:end="401:9">if <condition pos:start="397:12" pos:end="397:98">(<expr pos:start="397:13" pos:end="397:97"><name pos:start="397:13" pos:end="397:44"><name pos:start="397:13" pos:end="397:15">sps</name><operator pos:start="397:16" pos:end="397:17">-&gt;</operator><name pos:start="397:18" pos:end="397:20">ptl</name><operator pos:start="397:21" pos:end="397:21">.</operator><name pos:start="397:22" pos:end="397:32">general_ptl</name><operator pos:start="397:33" pos:end="397:33">.</operator><name pos:start="397:34" pos:end="397:44">profile_idc</name></name> <operator pos:start="397:46" pos:end="397:47">==</operator> <name pos:start="397:49" pos:end="397:68">FF_PROFILE_HEVC_REXT</name> <operator pos:start="397:70" pos:end="397:71">&amp;&amp;</operator> <name pos:start="397:73" pos:end="397:97">pps_range_extensions_flag</name></expr>)</condition> <block pos:start="397:100" pos:end="401:9">{<block_content pos:start="399:13" pos:end="399:46">

            <expr_stmt pos:start="399:13" pos:end="399:46"><expr pos:start="399:13" pos:end="399:45"><call pos:start="399:13" pos:end="399:45"><name pos:start="399:13" pos:end="399:32">pps_range_extensions</name><argument_list pos:start="399:33" pos:end="399:45">(<argument pos:start="399:34" pos:end="399:34"><expr pos:start="399:34" pos:end="399:34"><name pos:start="399:34" pos:end="399:34">s</name></expr></argument>, <argument pos:start="399:37" pos:end="399:39"><expr pos:start="399:37" pos:end="399:39"><name pos:start="399:37" pos:end="399:39">pps</name></expr></argument>, <argument pos:start="399:42" pos:end="399:44"><expr pos:start="399:42" pos:end="399:44"><name pos:start="399:42" pos:end="399:44">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="407:5" pos:end="407:26">// Inferred parameters</comment>

    <expr_stmt pos:start="409:5" pos:end="409:85"><expr pos:start="409:5" pos:end="409:84"><name pos:start="409:5" pos:end="409:15"><name pos:start="409:5" pos:end="409:7">pps</name><operator pos:start="409:8" pos:end="409:9">-&gt;</operator><name pos:start="409:10" pos:end="409:15">col_bd</name></name>   <operator pos:start="409:19" pos:end="409:19">=</operator> <call pos:start="409:21" pos:end="409:84"><name pos:start="409:21" pos:end="409:35">av_malloc_array</name><argument_list pos:start="409:36" pos:end="409:84">(<argument pos:start="409:37" pos:end="409:61"><expr pos:start="409:37" pos:end="409:61"><name pos:start="409:37" pos:end="409:57"><name pos:start="409:37" pos:end="409:39">pps</name><operator pos:start="409:40" pos:end="409:41">-&gt;</operator><name pos:start="409:42" pos:end="409:57">num_tile_columns</name></name> <operator pos:start="409:59" pos:end="409:59">+</operator> <literal type="number" pos:start="409:61" pos:end="409:61">1</literal></expr></argument>, <argument pos:start="409:64" pos:end="409:83"><expr pos:start="409:64" pos:end="409:83"><sizeof pos:start="409:64" pos:end="409:83">sizeof<argument_list pos:start="409:70" pos:end="409:83">(<argument pos:start="409:71" pos:end="409:82"><expr pos:start="409:71" pos:end="409:82"><operator pos:start="409:71" pos:end="409:71">*</operator><name pos:start="409:72" pos:end="409:82"><name pos:start="409:72" pos:end="409:74">pps</name><operator pos:start="409:75" pos:end="409:76">-&gt;</operator><name pos:start="409:77" pos:end="409:82">col_bd</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="411:5" pos:end="411:85"><expr pos:start="411:5" pos:end="411:84"><name pos:start="411:5" pos:end="411:15"><name pos:start="411:5" pos:end="411:7">pps</name><operator pos:start="411:8" pos:end="411:9">-&gt;</operator><name pos:start="411:10" pos:end="411:15">row_bd</name></name>   <operator pos:start="411:19" pos:end="411:19">=</operator> <call pos:start="411:21" pos:end="411:84"><name pos:start="411:21" pos:end="411:35">av_malloc_array</name><argument_list pos:start="411:36" pos:end="411:84">(<argument pos:start="411:37" pos:end="411:58"><expr pos:start="411:37" pos:end="411:58"><name pos:start="411:37" pos:end="411:54"><name pos:start="411:37" pos:end="411:39">pps</name><operator pos:start="411:40" pos:end="411:41">-&gt;</operator><name pos:start="411:42" pos:end="411:54">num_tile_rows</name></name> <operator pos:start="411:56" pos:end="411:56">+</operator> <literal type="number" pos:start="411:58" pos:end="411:58">1</literal></expr></argument>,    <argument pos:start="411:64" pos:end="411:83"><expr pos:start="411:64" pos:end="411:83"><sizeof pos:start="411:64" pos:end="411:83">sizeof<argument_list pos:start="411:70" pos:end="411:83">(<argument pos:start="411:71" pos:end="411:82"><expr pos:start="411:71" pos:end="411:82"><operator pos:start="411:71" pos:end="411:71">*</operator><name pos:start="411:72" pos:end="411:82"><name pos:start="411:72" pos:end="411:74">pps</name><operator pos:start="411:75" pos:end="411:76">-&gt;</operator><name pos:start="411:77" pos:end="411:82">row_bd</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="413:5" pos:end="413:79"><expr pos:start="413:5" pos:end="413:78"><name pos:start="413:5" pos:end="413:17"><name pos:start="413:5" pos:end="413:7">pps</name><operator pos:start="413:8" pos:end="413:9">-&gt;</operator><name pos:start="413:10" pos:end="413:17">col_idxX</name></name> <operator pos:start="413:19" pos:end="413:19">=</operator> <call pos:start="413:21" pos:end="413:78"><name pos:start="413:21" pos:end="413:35">av_malloc_array</name><argument_list pos:start="413:36" pos:end="413:78">(<argument pos:start="413:37" pos:end="413:50"><expr pos:start="413:37" pos:end="413:50"><name pos:start="413:37" pos:end="413:50"><name pos:start="413:37" pos:end="413:39">sps</name><operator pos:start="413:40" pos:end="413:41">-&gt;</operator><name pos:start="413:42" pos:end="413:50">ctb_width</name></name></expr></argument>,    <argument pos:start="413:56" pos:end="413:77"><expr pos:start="413:56" pos:end="413:77"><sizeof pos:start="413:56" pos:end="413:77">sizeof<argument_list pos:start="413:62" pos:end="413:77">(<argument pos:start="413:63" pos:end="413:76"><expr pos:start="413:63" pos:end="413:76"><operator pos:start="413:63" pos:end="413:63">*</operator><name pos:start="413:64" pos:end="413:76"><name pos:start="413:64" pos:end="413:66">pps</name><operator pos:start="413:67" pos:end="413:68">-&gt;</operator><name pos:start="413:69" pos:end="413:76">col_idxX</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="415:5" pos:end="421:5"><if pos:start="415:5" pos:end="421:5">if <condition pos:start="415:8" pos:end="415:55">(<expr pos:start="415:9" pos:end="415:54"><operator pos:start="415:9" pos:end="415:9">!</operator><name pos:start="415:10" pos:end="415:20"><name pos:start="415:10" pos:end="415:12">pps</name><operator pos:start="415:13" pos:end="415:14">-&gt;</operator><name pos:start="415:15" pos:end="415:20">col_bd</name></name> <operator pos:start="415:22" pos:end="415:23">||</operator> <operator pos:start="415:25" pos:end="415:25">!</operator><name pos:start="415:26" pos:end="415:36"><name pos:start="415:26" pos:end="415:28">pps</name><operator pos:start="415:29" pos:end="415:30">-&gt;</operator><name pos:start="415:31" pos:end="415:36">row_bd</name></name> <operator pos:start="415:38" pos:end="415:39">||</operator> <operator pos:start="415:41" pos:end="415:41">!</operator><name pos:start="415:42" pos:end="415:54"><name pos:start="415:42" pos:end="415:44">pps</name><operator pos:start="415:45" pos:end="415:46">-&gt;</operator><name pos:start="415:47" pos:end="415:54">col_idxX</name></name></expr>)</condition> <block pos:start="415:57" pos:end="421:5">{<block_content pos:start="417:9" pos:end="419:17">

        <expr_stmt pos:start="417:9" pos:end="417:30"><expr pos:start="417:9" pos:end="417:29"><name pos:start="417:9" pos:end="417:11">ret</name> <operator pos:start="417:13" pos:end="417:13">=</operator> <call pos:start="417:15" pos:end="417:29"><name pos:start="417:15" pos:end="417:21">AVERROR</name><argument_list pos:start="417:22" pos:end="417:29">(<argument pos:start="417:23" pos:end="417:28"><expr pos:start="417:23" pos:end="417:28"><name pos:start="417:23" pos:end="417:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="419:9" pos:end="419:17">goto <name pos:start="419:14" pos:end="419:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="425:5" pos:end="463:5"><if pos:start="425:5" pos:end="463:5">if <condition pos:start="425:8" pos:end="425:34">(<expr pos:start="425:9" pos:end="425:33"><name pos:start="425:9" pos:end="425:33"><name pos:start="425:9" pos:end="425:11">pps</name><operator pos:start="425:12" pos:end="425:13">-&gt;</operator><name pos:start="425:14" pos:end="425:33">uniform_spacing_flag</name></name></expr>)</condition> <block pos:start="425:36" pos:end="463:5">{<block_content pos:start="427:9" pos:end="461:9">

        <if_stmt pos:start="427:9" pos:end="433:9"><if pos:start="427:9" pos:end="433:9">if <condition pos:start="427:12" pos:end="427:31">(<expr pos:start="427:13" pos:end="427:30"><operator pos:start="427:13" pos:end="427:13">!</operator><name pos:start="427:14" pos:end="427:30"><name pos:start="427:14" pos:end="427:16">pps</name><operator pos:start="427:17" pos:end="427:18">-&gt;</operator><name pos:start="427:19" pos:end="427:30">column_width</name></name></expr>)</condition> <block pos:start="427:33" pos:end="433:9">{<block_content pos:start="429:13" pos:end="431:97">

            <expr_stmt pos:start="429:13" pos:end="429:99"><expr pos:start="429:13" pos:end="429:98"><name pos:start="429:13" pos:end="429:29"><name pos:start="429:13" pos:end="429:15">pps</name><operator pos:start="429:16" pos:end="429:17">-&gt;</operator><name pos:start="429:18" pos:end="429:29">column_width</name></name> <operator pos:start="429:31" pos:end="429:31">=</operator> <call pos:start="429:33" pos:end="429:98"><name pos:start="429:33" pos:end="429:47">av_malloc_array</name><argument_list pos:start="429:48" pos:end="429:98">(<argument pos:start="429:49" pos:end="429:69"><expr pos:start="429:49" pos:end="429:69"><name pos:start="429:49" pos:end="429:69"><name pos:start="429:49" pos:end="429:51">pps</name><operator pos:start="429:52" pos:end="429:53">-&gt;</operator><name pos:start="429:54" pos:end="429:69">num_tile_columns</name></name></expr></argument>, <argument pos:start="429:72" pos:end="429:97"><expr pos:start="429:72" pos:end="429:97"><sizeof pos:start="429:72" pos:end="429:97">sizeof<argument_list pos:start="429:78" pos:end="429:97">(<argument pos:start="429:79" pos:end="429:96"><expr pos:start="429:79" pos:end="429:96"><operator pos:start="429:79" pos:end="429:79">*</operator><name pos:start="429:80" pos:end="429:96"><name pos:start="429:80" pos:end="429:82">pps</name><operator pos:start="429:83" pos:end="429:84">-&gt;</operator><name pos:start="429:85" pos:end="429:96">column_width</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:97"><expr pos:start="431:13" pos:end="431:96"><name pos:start="431:13" pos:end="431:27"><name pos:start="431:13" pos:end="431:15">pps</name><operator pos:start="431:16" pos:end="431:17">-&gt;</operator><name pos:start="431:18" pos:end="431:27">row_height</name></name>   <operator pos:start="431:31" pos:end="431:31">=</operator> <call pos:start="431:33" pos:end="431:96"><name pos:start="431:33" pos:end="431:47">av_malloc_array</name><argument_list pos:start="431:48" pos:end="431:96">(<argument pos:start="431:49" pos:end="431:66"><expr pos:start="431:49" pos:end="431:66"><name pos:start="431:49" pos:end="431:66"><name pos:start="431:49" pos:end="431:51">pps</name><operator pos:start="431:52" pos:end="431:53">-&gt;</operator><name pos:start="431:54" pos:end="431:66">num_tile_rows</name></name></expr></argument>,    <argument pos:start="431:72" pos:end="431:95"><expr pos:start="431:72" pos:end="431:95"><sizeof pos:start="431:72" pos:end="431:95">sizeof<argument_list pos:start="431:78" pos:end="431:95">(<argument pos:start="431:79" pos:end="431:94"><expr pos:start="431:79" pos:end="431:94"><operator pos:start="431:79" pos:end="431:79">*</operator><name pos:start="431:80" pos:end="431:94"><name pos:start="431:80" pos:end="431:82">pps</name><operator pos:start="431:83" pos:end="431:84">-&gt;</operator><name pos:start="431:85" pos:end="431:94">row_height</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="435:9" pos:end="441:9"><if pos:start="435:9" pos:end="441:9">if <condition pos:start="435:12" pos:end="435:51">(<expr pos:start="435:13" pos:end="435:50"><operator pos:start="435:13" pos:end="435:13">!</operator><name pos:start="435:14" pos:end="435:30"><name pos:start="435:14" pos:end="435:16">pps</name><operator pos:start="435:17" pos:end="435:18">-&gt;</operator><name pos:start="435:19" pos:end="435:30">column_width</name></name> <operator pos:start="435:32" pos:end="435:33">||</operator> <operator pos:start="435:35" pos:end="435:35">!</operator><name pos:start="435:36" pos:end="435:50"><name pos:start="435:36" pos:end="435:38">pps</name><operator pos:start="435:39" pos:end="435:40">-&gt;</operator><name pos:start="435:41" pos:end="435:50">row_height</name></name></expr>)</condition> <block pos:start="435:53" pos:end="441:9">{<block_content pos:start="437:13" pos:end="439:21">

            <expr_stmt pos:start="437:13" pos:end="437:34"><expr pos:start="437:13" pos:end="437:33"><name pos:start="437:13" pos:end="437:15">ret</name> <operator pos:start="437:17" pos:end="437:17">=</operator> <call pos:start="437:19" pos:end="437:33"><name pos:start="437:19" pos:end="437:25">AVERROR</name><argument_list pos:start="437:26" pos:end="437:33">(<argument pos:start="437:27" pos:end="437:32"><expr pos:start="437:27" pos:end="437:32"><name pos:start="437:27" pos:end="437:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="439:13" pos:end="439:21">goto <name pos:start="439:18" pos:end="439:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="445:9" pos:end="451:9">for <control pos:start="445:13" pos:end="445:51">(<init pos:start="445:14" pos:end="445:19"><expr pos:start="445:14" pos:end="445:18"><name pos:start="445:14" pos:end="445:14">i</name> <operator pos:start="445:16" pos:end="445:16">=</operator> <literal type="number" pos:start="445:18" pos:end="445:18">0</literal></expr>;</init> <condition pos:start="445:21" pos:end="445:46"><expr pos:start="445:21" pos:end="445:45"><name pos:start="445:21" pos:end="445:21">i</name> <operator pos:start="445:23" pos:end="445:23">&lt;</operator> <name pos:start="445:25" pos:end="445:45"><name pos:start="445:25" pos:end="445:27">pps</name><operator pos:start="445:28" pos:end="445:29">-&gt;</operator><name pos:start="445:30" pos:end="445:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="445:48" pos:end="445:50"><expr pos:start="445:48" pos:end="445:50"><name pos:start="445:48" pos:end="445:48">i</name><operator pos:start="445:49" pos:end="445:50">++</operator></expr></incr>)</control> <block pos:start="445:53" pos:end="451:9">{<block_content pos:start="447:13" pos:end="449:80">

            <expr_stmt pos:start="447:13" pos:end="449:80"><expr pos:start="447:13" pos:end="449:79"><name pos:start="447:13" pos:end="447:32"><name pos:start="447:13" pos:end="447:15">pps</name><operator pos:start="447:16" pos:end="447:17">-&gt;</operator><name pos:start="447:18" pos:end="447:29">column_width</name><index pos:start="447:30" pos:end="447:32">[<expr pos:start="447:31" pos:end="447:31"><name pos:start="447:31" pos:end="447:31">i</name></expr>]</index></name> <operator pos:start="447:34" pos:end="447:34">=</operator> <operator pos:start="447:36" pos:end="447:36">(</operator><operator pos:start="447:37" pos:end="447:37">(</operator><name pos:start="447:38" pos:end="447:38">i</name> <operator pos:start="447:40" pos:end="447:40">+</operator> <literal type="number" pos:start="447:42" pos:end="447:42">1</literal><operator pos:start="447:43" pos:end="447:43">)</operator> <operator pos:start="447:45" pos:end="447:45">*</operator> <name pos:start="447:47" pos:end="447:60"><name pos:start="447:47" pos:end="447:49">sps</name><operator pos:start="447:50" pos:end="447:51">-&gt;</operator><name pos:start="447:52" pos:end="447:60">ctb_width</name></name><operator pos:start="447:61" pos:end="447:61">)</operator> <operator pos:start="447:63" pos:end="447:63">/</operator> <name pos:start="447:65" pos:end="447:85"><name pos:start="447:65" pos:end="447:67">pps</name><operator pos:start="447:68" pos:end="447:69">-&gt;</operator><name pos:start="447:70" pos:end="447:85">num_tile_columns</name></name> <operator pos:start="447:87" pos:end="447:87">-</operator>

                                   <operator pos:start="449:36" pos:end="449:36">(</operator><name pos:start="449:37" pos:end="449:37">i</name> <operator pos:start="449:39" pos:end="449:39">*</operator> <name pos:start="449:41" pos:end="449:54"><name pos:start="449:41" pos:end="449:43">sps</name><operator pos:start="449:44" pos:end="449:45">-&gt;</operator><name pos:start="449:46" pos:end="449:54">ctb_width</name></name><operator pos:start="449:55" pos:end="449:55">)</operator> <operator pos:start="449:57" pos:end="449:57">/</operator> <name pos:start="449:59" pos:end="449:79"><name pos:start="449:59" pos:end="449:61">pps</name><operator pos:start="449:62" pos:end="449:63">-&gt;</operator><name pos:start="449:64" pos:end="449:79">num_tile_columns</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="455:9" pos:end="461:9">for <control pos:start="455:13" pos:end="455:48">(<init pos:start="455:14" pos:end="455:19"><expr pos:start="455:14" pos:end="455:18"><name pos:start="455:14" pos:end="455:14">i</name> <operator pos:start="455:16" pos:end="455:16">=</operator> <literal type="number" pos:start="455:18" pos:end="455:18">0</literal></expr>;</init> <condition pos:start="455:21" pos:end="455:43"><expr pos:start="455:21" pos:end="455:42"><name pos:start="455:21" pos:end="455:21">i</name> <operator pos:start="455:23" pos:end="455:23">&lt;</operator> <name pos:start="455:25" pos:end="455:42"><name pos:start="455:25" pos:end="455:27">pps</name><operator pos:start="455:28" pos:end="455:29">-&gt;</operator><name pos:start="455:30" pos:end="455:42">num_tile_rows</name></name></expr>;</condition> <incr pos:start="455:45" pos:end="455:47"><expr pos:start="455:45" pos:end="455:47"><name pos:start="455:45" pos:end="455:45">i</name><operator pos:start="455:46" pos:end="455:47">++</operator></expr></incr>)</control> <block pos:start="455:50" pos:end="461:9">{<block_content pos:start="457:13" pos:end="459:76">

            <expr_stmt pos:start="457:13" pos:end="459:76"><expr pos:start="457:13" pos:end="459:75"><name pos:start="457:13" pos:end="457:30"><name pos:start="457:13" pos:end="457:15">pps</name><operator pos:start="457:16" pos:end="457:17">-&gt;</operator><name pos:start="457:18" pos:end="457:27">row_height</name><index pos:start="457:28" pos:end="457:30">[<expr pos:start="457:29" pos:end="457:29"><name pos:start="457:29" pos:end="457:29">i</name></expr>]</index></name> <operator pos:start="457:32" pos:end="457:32">=</operator> <operator pos:start="457:34" pos:end="457:34">(</operator><operator pos:start="457:35" pos:end="457:35">(</operator><name pos:start="457:36" pos:end="457:36">i</name> <operator pos:start="457:38" pos:end="457:38">+</operator> <literal type="number" pos:start="457:40" pos:end="457:40">1</literal><operator pos:start="457:41" pos:end="457:41">)</operator> <operator pos:start="457:43" pos:end="457:43">*</operator> <name pos:start="457:45" pos:end="457:59"><name pos:start="457:45" pos:end="457:47">sps</name><operator pos:start="457:48" pos:end="457:49">-&gt;</operator><name pos:start="457:50" pos:end="457:59">ctb_height</name></name><operator pos:start="457:60" pos:end="457:60">)</operator> <operator pos:start="457:62" pos:end="457:62">/</operator> <name pos:start="457:64" pos:end="457:81"><name pos:start="457:64" pos:end="457:66">pps</name><operator pos:start="457:67" pos:end="457:68">-&gt;</operator><name pos:start="457:69" pos:end="457:81">num_tile_rows</name></name> <operator pos:start="457:83" pos:end="457:83">-</operator>

                                 <operator pos:start="459:34" pos:end="459:34">(</operator><name pos:start="459:35" pos:end="459:35">i</name> <operator pos:start="459:37" pos:end="459:37">*</operator> <name pos:start="459:39" pos:end="459:53"><name pos:start="459:39" pos:end="459:41">sps</name><operator pos:start="459:42" pos:end="459:43">-&gt;</operator><name pos:start="459:44" pos:end="459:53">ctb_height</name></name><operator pos:start="459:54" pos:end="459:54">)</operator> <operator pos:start="459:56" pos:end="459:56">/</operator> <name pos:start="459:58" pos:end="459:75"><name pos:start="459:58" pos:end="459:60">pps</name><operator pos:start="459:61" pos:end="459:62">-&gt;</operator><name pos:start="459:63" pos:end="459:75">num_tile_rows</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="467:5" pos:end="467:23"><expr pos:start="467:5" pos:end="467:22"><name pos:start="467:5" pos:end="467:18"><name pos:start="467:5" pos:end="467:7">pps</name><operator pos:start="467:8" pos:end="467:9">-&gt;</operator><name pos:start="467:10" pos:end="467:15">col_bd</name><index pos:start="467:16" pos:end="467:18">[<expr pos:start="467:17" pos:end="467:17"><literal type="number" pos:start="467:17" pos:end="467:17">0</literal></expr>]</index></name> <operator pos:start="467:20" pos:end="467:20">=</operator> <literal type="number" pos:start="467:22" pos:end="467:22">0</literal></expr>;</expr_stmt>

    <for pos:start="469:5" pos:end="471:67">for <control pos:start="469:9" pos:end="469:47">(<init pos:start="469:10" pos:end="469:15"><expr pos:start="469:10" pos:end="469:14"><name pos:start="469:10" pos:end="469:10">i</name> <operator pos:start="469:12" pos:end="469:12">=</operator> <literal type="number" pos:start="469:14" pos:end="469:14">0</literal></expr>;</init> <condition pos:start="469:17" pos:end="469:42"><expr pos:start="469:17" pos:end="469:41"><name pos:start="469:17" pos:end="469:17">i</name> <operator pos:start="469:19" pos:end="469:19">&lt;</operator> <name pos:start="469:21" pos:end="469:41"><name pos:start="469:21" pos:end="469:23">pps</name><operator pos:start="469:24" pos:end="469:25">-&gt;</operator><name pos:start="469:26" pos:end="469:41">num_tile_columns</name></name></expr>;</condition> <incr pos:start="469:44" pos:end="469:46"><expr pos:start="469:44" pos:end="469:46"><name pos:start="469:44" pos:end="469:44">i</name><operator pos:start="469:45" pos:end="469:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="471:9" pos:end="471:67"><block_content pos:start="471:9" pos:end="471:67">

        <expr_stmt pos:start="471:9" pos:end="471:67"><expr pos:start="471:9" pos:end="471:66"><name pos:start="471:9" pos:end="471:26"><name pos:start="471:9" pos:end="471:11">pps</name><operator pos:start="471:12" pos:end="471:13">-&gt;</operator><name pos:start="471:14" pos:end="471:19">col_bd</name><index pos:start="471:20" pos:end="471:26">[<expr pos:start="471:21" pos:end="471:25"><name pos:start="471:21" pos:end="471:21">i</name> <operator pos:start="471:23" pos:end="471:23">+</operator> <literal type="number" pos:start="471:25" pos:end="471:25">1</literal></expr>]</index></name> <operator pos:start="471:28" pos:end="471:28">=</operator> <name pos:start="471:30" pos:end="471:43"><name pos:start="471:30" pos:end="471:32">pps</name><operator pos:start="471:33" pos:end="471:34">-&gt;</operator><name pos:start="471:35" pos:end="471:40">col_bd</name><index pos:start="471:41" pos:end="471:43">[<expr pos:start="471:42" pos:end="471:42"><name pos:start="471:42" pos:end="471:42">i</name></expr>]</index></name> <operator pos:start="471:45" pos:end="471:45">+</operator> <name pos:start="471:47" pos:end="471:66"><name pos:start="471:47" pos:end="471:49">pps</name><operator pos:start="471:50" pos:end="471:51">-&gt;</operator><name pos:start="471:52" pos:end="471:63">column_width</name><index pos:start="471:64" pos:end="471:66">[<expr pos:start="471:65" pos:end="471:65"><name pos:start="471:65" pos:end="471:65">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="475:5" pos:end="475:23"><expr pos:start="475:5" pos:end="475:22"><name pos:start="475:5" pos:end="475:18"><name pos:start="475:5" pos:end="475:7">pps</name><operator pos:start="475:8" pos:end="475:9">-&gt;</operator><name pos:start="475:10" pos:end="475:15">row_bd</name><index pos:start="475:16" pos:end="475:18">[<expr pos:start="475:17" pos:end="475:17"><literal type="number" pos:start="475:17" pos:end="475:17">0</literal></expr>]</index></name> <operator pos:start="475:20" pos:end="475:20">=</operator> <literal type="number" pos:start="475:22" pos:end="475:22">0</literal></expr>;</expr_stmt>

    <for pos:start="477:5" pos:end="479:65">for <control pos:start="477:9" pos:end="477:44">(<init pos:start="477:10" pos:end="477:15"><expr pos:start="477:10" pos:end="477:14"><name pos:start="477:10" pos:end="477:10">i</name> <operator pos:start="477:12" pos:end="477:12">=</operator> <literal type="number" pos:start="477:14" pos:end="477:14">0</literal></expr>;</init> <condition pos:start="477:17" pos:end="477:39"><expr pos:start="477:17" pos:end="477:38"><name pos:start="477:17" pos:end="477:17">i</name> <operator pos:start="477:19" pos:end="477:19">&lt;</operator> <name pos:start="477:21" pos:end="477:38"><name pos:start="477:21" pos:end="477:23">pps</name><operator pos:start="477:24" pos:end="477:25">-&gt;</operator><name pos:start="477:26" pos:end="477:38">num_tile_rows</name></name></expr>;</condition> <incr pos:start="477:41" pos:end="477:43"><expr pos:start="477:41" pos:end="477:43"><name pos:start="477:41" pos:end="477:41">i</name><operator pos:start="477:42" pos:end="477:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="479:9" pos:end="479:65"><block_content pos:start="479:9" pos:end="479:65">

        <expr_stmt pos:start="479:9" pos:end="479:65"><expr pos:start="479:9" pos:end="479:64"><name pos:start="479:9" pos:end="479:26"><name pos:start="479:9" pos:end="479:11">pps</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:19">row_bd</name><index pos:start="479:20" pos:end="479:26">[<expr pos:start="479:21" pos:end="479:25"><name pos:start="479:21" pos:end="479:21">i</name> <operator pos:start="479:23" pos:end="479:23">+</operator> <literal type="number" pos:start="479:25" pos:end="479:25">1</literal></expr>]</index></name> <operator pos:start="479:28" pos:end="479:28">=</operator> <name pos:start="479:30" pos:end="479:43"><name pos:start="479:30" pos:end="479:32">pps</name><operator pos:start="479:33" pos:end="479:34">-&gt;</operator><name pos:start="479:35" pos:end="479:40">row_bd</name><index pos:start="479:41" pos:end="479:43">[<expr pos:start="479:42" pos:end="479:42"><name pos:start="479:42" pos:end="479:42">i</name></expr>]</index></name> <operator pos:start="479:45" pos:end="479:45">+</operator> <name pos:start="479:47" pos:end="479:64"><name pos:start="479:47" pos:end="479:49">pps</name><operator pos:start="479:50" pos:end="479:51">-&gt;</operator><name pos:start="479:52" pos:end="479:61">row_height</name><index pos:start="479:62" pos:end="479:64">[<expr pos:start="479:63" pos:end="479:63"><name pos:start="479:63" pos:end="479:63">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="483:5" pos:end="491:5">for <control pos:start="483:9" pos:end="483:47">(<init pos:start="483:10" pos:end="483:22"><expr pos:start="483:10" pos:end="483:14"><name pos:start="483:10" pos:end="483:10">i</name> <operator pos:start="483:12" pos:end="483:12">=</operator> <literal type="number" pos:start="483:14" pos:end="483:14">0</literal></expr><operator pos:start="483:15" pos:end="483:15">,</operator> <expr pos:start="483:17" pos:end="483:21"><name pos:start="483:17" pos:end="483:17">j</name> <operator pos:start="483:19" pos:end="483:19">=</operator> <literal type="number" pos:start="483:21" pos:end="483:21">0</literal></expr>;</init> <condition pos:start="483:24" pos:end="483:42"><expr pos:start="483:24" pos:end="483:41"><name pos:start="483:24" pos:end="483:24">i</name> <operator pos:start="483:26" pos:end="483:26">&lt;</operator> <name pos:start="483:28" pos:end="483:41"><name pos:start="483:28" pos:end="483:30">sps</name><operator pos:start="483:31" pos:end="483:32">-&gt;</operator><name pos:start="483:33" pos:end="483:41">ctb_width</name></name></expr>;</condition> <incr pos:start="483:44" pos:end="483:46"><expr pos:start="483:44" pos:end="483:46"><name pos:start="483:44" pos:end="483:44">i</name><operator pos:start="483:45" pos:end="483:46">++</operator></expr></incr>)</control> <block pos:start="483:49" pos:end="491:5">{<block_content pos:start="485:9" pos:end="489:29">

        <if_stmt pos:start="485:9" pos:end="487:16"><if pos:start="485:9" pos:end="487:16">if <condition pos:start="485:12" pos:end="485:31">(<expr pos:start="485:13" pos:end="485:30"><name pos:start="485:13" pos:end="485:13">i</name> <operator pos:start="485:15" pos:end="485:15">&gt;</operator> <name pos:start="485:17" pos:end="485:30"><name pos:start="485:17" pos:end="485:19">pps</name><operator pos:start="485:20" pos:end="485:21">-&gt;</operator><name pos:start="485:22" pos:end="485:27">col_bd</name><index pos:start="485:28" pos:end="485:30">[<expr pos:start="485:29" pos:end="485:29"><name pos:start="485:29" pos:end="485:29">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="487:13" pos:end="487:16"><block_content pos:start="487:13" pos:end="487:16">

            <expr_stmt pos:start="487:13" pos:end="487:16"><expr pos:start="487:13" pos:end="487:15"><name pos:start="487:13" pos:end="487:13">j</name><operator pos:start="487:14" pos:end="487:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:29"><expr pos:start="489:9" pos:end="489:28"><name pos:start="489:9" pos:end="489:24"><name pos:start="489:9" pos:end="489:11">pps</name><operator pos:start="489:12" pos:end="489:13">-&gt;</operator><name pos:start="489:14" pos:end="489:21">col_idxX</name><index pos:start="489:22" pos:end="489:24">[<expr pos:start="489:23" pos:end="489:23"><name pos:start="489:23" pos:end="489:23">i</name></expr>]</index></name> <operator pos:start="489:26" pos:end="489:26">=</operator> <name pos:start="489:28" pos:end="489:28">j</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" format="doxygen" pos:start="495:5" pos:end="499:7">/**

     * 6.5

     */</comment>

    <expr_stmt pos:start="501:5" pos:end="501:63"><expr pos:start="501:5" pos:end="501:62"><name pos:start="501:5" pos:end="501:20">pic_area_in_ctbs</name>     <operator pos:start="501:26" pos:end="501:26">=</operator> <name pos:start="501:28" pos:end="501:41"><name pos:start="501:28" pos:end="501:30">sps</name><operator pos:start="501:31" pos:end="501:32">-&gt;</operator><name pos:start="501:33" pos:end="501:41">ctb_width</name></name>    <operator pos:start="501:46" pos:end="501:46">*</operator> <name pos:start="501:48" pos:end="501:62"><name pos:start="501:48" pos:end="501:50">sps</name><operator pos:start="501:51" pos:end="501:52">-&gt;</operator><name pos:start="501:53" pos:end="501:62">ctb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="505:5" pos:end="505:99"><expr pos:start="505:5" pos:end="505:98"><name pos:start="505:5" pos:end="505:26"><name pos:start="505:5" pos:end="505:7">pps</name><operator pos:start="505:8" pos:end="505:9">-&gt;</operator><name pos:start="505:10" pos:end="505:26">ctb_addr_rs_to_ts</name></name> <operator pos:start="505:28" pos:end="505:28">=</operator> <call pos:start="505:30" pos:end="505:98"><name pos:start="505:30" pos:end="505:44">av_malloc_array</name><argument_list pos:start="505:45" pos:end="505:98">(<argument pos:start="505:46" pos:end="505:61"><expr pos:start="505:46" pos:end="505:61"><name pos:start="505:46" pos:end="505:61">pic_area_in_ctbs</name></expr></argument>,    <argument pos:start="505:67" pos:end="505:97"><expr pos:start="505:67" pos:end="505:97"><sizeof pos:start="505:67" pos:end="505:97">sizeof<argument_list pos:start="505:73" pos:end="505:97">(<argument pos:start="505:74" pos:end="505:96"><expr pos:start="505:74" pos:end="505:96"><operator pos:start="505:74" pos:end="505:74">*</operator><name pos:start="505:75" pos:end="505:96"><name pos:start="505:75" pos:end="505:77">pps</name><operator pos:start="505:78" pos:end="505:79">-&gt;</operator><name pos:start="505:80" pos:end="505:96">ctb_addr_rs_to_ts</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:99"><expr pos:start="507:5" pos:end="507:98"><name pos:start="507:5" pos:end="507:26"><name pos:start="507:5" pos:end="507:7">pps</name><operator pos:start="507:8" pos:end="507:9">-&gt;</operator><name pos:start="507:10" pos:end="507:26">ctb_addr_ts_to_rs</name></name> <operator pos:start="507:28" pos:end="507:28">=</operator> <call pos:start="507:30" pos:end="507:98"><name pos:start="507:30" pos:end="507:44">av_malloc_array</name><argument_list pos:start="507:45" pos:end="507:98">(<argument pos:start="507:46" pos:end="507:61"><expr pos:start="507:46" pos:end="507:61"><name pos:start="507:46" pos:end="507:61">pic_area_in_ctbs</name></expr></argument>,    <argument pos:start="507:67" pos:end="507:97"><expr pos:start="507:67" pos:end="507:97"><sizeof pos:start="507:67" pos:end="507:97">sizeof<argument_list pos:start="507:73" pos:end="507:97">(<argument pos:start="507:74" pos:end="507:96"><expr pos:start="507:74" pos:end="507:96"><operator pos:start="507:74" pos:end="507:74">*</operator><name pos:start="507:75" pos:end="507:96"><name pos:start="507:75" pos:end="507:77">pps</name><operator pos:start="507:78" pos:end="507:79">-&gt;</operator><name pos:start="507:80" pos:end="507:96">ctb_addr_ts_to_rs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:89"><expr pos:start="509:5" pos:end="509:88"><name pos:start="509:5" pos:end="509:16"><name pos:start="509:5" pos:end="509:7">pps</name><operator pos:start="509:8" pos:end="509:9">-&gt;</operator><name pos:start="509:10" pos:end="509:16">tile_id</name></name>           <operator pos:start="509:28" pos:end="509:28">=</operator> <call pos:start="509:30" pos:end="509:88"><name pos:start="509:30" pos:end="509:44">av_malloc_array</name><argument_list pos:start="509:45" pos:end="509:88">(<argument pos:start="509:46" pos:end="509:61"><expr pos:start="509:46" pos:end="509:61"><name pos:start="509:46" pos:end="509:61">pic_area_in_ctbs</name></expr></argument>,    <argument pos:start="509:67" pos:end="509:87"><expr pos:start="509:67" pos:end="509:87"><sizeof pos:start="509:67" pos:end="509:87">sizeof<argument_list pos:start="509:73" pos:end="509:87">(<argument pos:start="509:74" pos:end="509:86"><expr pos:start="509:74" pos:end="509:86"><operator pos:start="509:74" pos:end="509:74">*</operator><name pos:start="509:75" pos:end="509:86"><name pos:start="509:75" pos:end="509:77">pps</name><operator pos:start="509:78" pos:end="509:79">-&gt;</operator><name pos:start="509:80" pos:end="509:86">tile_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="511:5" pos:end="511:117"><expr pos:start="511:5" pos:end="511:116"><name pos:start="511:5" pos:end="511:27"><name pos:start="511:5" pos:end="511:7">pps</name><operator pos:start="511:8" pos:end="511:9">-&gt;</operator><name pos:start="511:10" pos:end="511:27">min_tb_addr_zs_tab</name></name> <operator pos:start="511:29" pos:end="511:29">=</operator> <call pos:start="511:31" pos:end="511:116"><name pos:start="511:31" pos:end="511:45">av_malloc_array</name><argument_list pos:start="511:46" pos:end="511:116">(<argument pos:start="511:47" pos:end="511:81"><expr pos:start="511:47" pos:end="511:81"><operator pos:start="511:47" pos:end="511:47">(</operator><name pos:start="511:48" pos:end="511:59"><name pos:start="511:48" pos:end="511:50">sps</name><operator pos:start="511:51" pos:end="511:52">-&gt;</operator><name pos:start="511:53" pos:end="511:59">tb_mask</name></name><operator pos:start="511:60" pos:end="511:60">+</operator><literal type="number" pos:start="511:61" pos:end="511:61">2</literal><operator pos:start="511:62" pos:end="511:62">)</operator> <operator pos:start="511:64" pos:end="511:64">*</operator> <operator pos:start="511:66" pos:end="511:66">(</operator><name pos:start="511:67" pos:end="511:78"><name pos:start="511:67" pos:end="511:69">sps</name><operator pos:start="511:70" pos:end="511:71">-&gt;</operator><name pos:start="511:72" pos:end="511:78">tb_mask</name></name><operator pos:start="511:79" pos:end="511:79">+</operator><literal type="number" pos:start="511:80" pos:end="511:80">2</literal><operator pos:start="511:81" pos:end="511:81">)</operator></expr></argument>, <argument pos:start="511:84" pos:end="511:115"><expr pos:start="511:84" pos:end="511:115"><sizeof pos:start="511:84" pos:end="511:115">sizeof<argument_list pos:start="511:90" pos:end="511:115">(<argument pos:start="511:91" pos:end="511:114"><expr pos:start="511:91" pos:end="511:114"><operator pos:start="511:91" pos:end="511:91">*</operator><name pos:start="511:92" pos:end="511:114"><name pos:start="511:92" pos:end="511:94">pps</name><operator pos:start="511:95" pos:end="511:96">-&gt;</operator><name pos:start="511:97" pos:end="511:114">min_tb_addr_zs_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="513:5" pos:end="521:5"><if pos:start="513:5" pos:end="521:5">if <condition pos:start="513:8" pos:end="515:50">(<expr pos:start="513:9" pos:end="515:49"><operator pos:start="513:9" pos:end="513:9">!</operator><name pos:start="513:10" pos:end="513:31"><name pos:start="513:10" pos:end="513:12">pps</name><operator pos:start="513:13" pos:end="513:14">-&gt;</operator><name pos:start="513:15" pos:end="513:31">ctb_addr_rs_to_ts</name></name> <operator pos:start="513:33" pos:end="513:34">||</operator> <operator pos:start="513:36" pos:end="513:36">!</operator><name pos:start="513:37" pos:end="513:58"><name pos:start="513:37" pos:end="513:39">pps</name><operator pos:start="513:40" pos:end="513:41">-&gt;</operator><name pos:start="513:42" pos:end="513:58">ctb_addr_ts_to_rs</name></name> <operator pos:start="513:60" pos:end="513:61">||</operator>

        <operator pos:start="515:9" pos:end="515:9">!</operator><name pos:start="515:10" pos:end="515:21"><name pos:start="515:10" pos:end="515:12">pps</name><operator pos:start="515:13" pos:end="515:14">-&gt;</operator><name pos:start="515:15" pos:end="515:21">tile_id</name></name> <operator pos:start="515:23" pos:end="515:24">||</operator> <operator pos:start="515:26" pos:end="515:26">!</operator><name pos:start="515:27" pos:end="515:49"><name pos:start="515:27" pos:end="515:29">pps</name><operator pos:start="515:30" pos:end="515:31">-&gt;</operator><name pos:start="515:32" pos:end="515:49">min_tb_addr_zs_tab</name></name></expr>)</condition> <block pos:start="515:52" pos:end="521:5">{<block_content pos:start="517:9" pos:end="519:17">

        <expr_stmt pos:start="517:9" pos:end="517:30"><expr pos:start="517:9" pos:end="517:29"><name pos:start="517:9" pos:end="517:11">ret</name> <operator pos:start="517:13" pos:end="517:13">=</operator> <call pos:start="517:15" pos:end="517:29"><name pos:start="517:15" pos:end="517:21">AVERROR</name><argument_list pos:start="517:22" pos:end="517:29">(<argument pos:start="517:23" pos:end="517:28"><expr pos:start="517:23" pos:end="517:28"><name pos:start="517:23" pos:end="517:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="519:9" pos:end="519:17">goto <name pos:start="519:14" pos:end="519:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="525:5" pos:end="587:5">for <control pos:start="525:9" pos:end="525:72">(<init pos:start="525:10" pos:end="525:25"><expr pos:start="525:10" pos:end="525:24"><name pos:start="525:10" pos:end="525:20">ctb_addr_rs</name> <operator pos:start="525:22" pos:end="525:22">=</operator> <literal type="number" pos:start="525:24" pos:end="525:24">0</literal></expr>;</init> <condition pos:start="525:27" pos:end="525:57"><expr pos:start="525:27" pos:end="525:56"><name pos:start="525:27" pos:end="525:37">ctb_addr_rs</name> <operator pos:start="525:39" pos:end="525:39">&lt;</operator> <name pos:start="525:41" pos:end="525:56">pic_area_in_ctbs</name></expr>;</condition> <incr pos:start="525:59" pos:end="525:71"><expr pos:start="525:59" pos:end="525:71"><name pos:start="525:59" pos:end="525:69">ctb_addr_rs</name><operator pos:start="525:70" pos:end="525:71">++</operator></expr></incr>)</control> <block pos:start="525:74" pos:end="587:5">{<block_content pos:start="527:9" pos:end="585:58">

        <decl_stmt pos:start="527:9" pos:end="527:50"><decl pos:start="527:9" pos:end="527:49"><type pos:start="527:9" pos:end="527:11"><name pos:start="527:9" pos:end="527:11">int</name></type> <name pos:start="527:13" pos:end="527:16">tb_x</name>   <init pos:start="527:20" pos:end="527:49">= <expr pos:start="527:22" pos:end="527:49"><name pos:start="527:22" pos:end="527:32">ctb_addr_rs</name> <operator pos:start="527:34" pos:end="527:34">%</operator> <name pos:start="527:36" pos:end="527:49"><name pos:start="527:36" pos:end="527:38">sps</name><operator pos:start="527:39" pos:end="527:40">-&gt;</operator><name pos:start="527:41" pos:end="527:49">ctb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="529:9" pos:end="529:50"><decl pos:start="529:9" pos:end="529:49"><type pos:start="529:9" pos:end="529:11"><name pos:start="529:9" pos:end="529:11">int</name></type> <name pos:start="529:13" pos:end="529:16">tb_y</name>   <init pos:start="529:20" pos:end="529:49">= <expr pos:start="529:22" pos:end="529:49"><name pos:start="529:22" pos:end="529:32">ctb_addr_rs</name> <operator pos:start="529:34" pos:end="529:34">/</operator> <name pos:start="529:36" pos:end="529:49"><name pos:start="529:36" pos:end="529:38">sps</name><operator pos:start="529:39" pos:end="529:40">-&gt;</operator><name pos:start="529:41" pos:end="529:49">ctb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="531:9" pos:end="531:23"><decl pos:start="531:9" pos:end="531:22"><type pos:start="531:9" pos:end="531:11"><name pos:start="531:9" pos:end="531:11">int</name></type> <name pos:start="531:13" pos:end="531:18">tile_x</name> <init pos:start="531:20" pos:end="531:22">= <expr pos:start="531:22" pos:end="531:22"><literal type="number" pos:start="531:22" pos:end="531:22">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="533:9" pos:end="533:23"><decl pos:start="533:9" pos:end="533:22"><type pos:start="533:9" pos:end="533:11"><name pos:start="533:9" pos:end="533:11">int</name></type> <name pos:start="533:13" pos:end="533:18">tile_y</name> <init pos:start="533:20" pos:end="533:22">= <expr pos:start="533:22" pos:end="533:22"><literal type="number" pos:start="533:22" pos:end="533:22">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="535:9" pos:end="535:23"><decl pos:start="535:9" pos:end="535:22"><type pos:start="535:9" pos:end="535:11"><name pos:start="535:9" pos:end="535:11">int</name></type> <name pos:start="535:13" pos:end="535:15">val</name>    <init pos:start="535:20" pos:end="535:22">= <expr pos:start="535:22" pos:end="535:22"><literal type="number" pos:start="535:22" pos:end="535:22">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="539:9" pos:end="549:9">for <control pos:start="539:13" pos:end="539:51">(<init pos:start="539:14" pos:end="539:19"><expr pos:start="539:14" pos:end="539:18"><name pos:start="539:14" pos:end="539:14">i</name> <operator pos:start="539:16" pos:end="539:16">=</operator> <literal type="number" pos:start="539:18" pos:end="539:18">0</literal></expr>;</init> <condition pos:start="539:21" pos:end="539:46"><expr pos:start="539:21" pos:end="539:45"><name pos:start="539:21" pos:end="539:21">i</name> <operator pos:start="539:23" pos:end="539:23">&lt;</operator> <name pos:start="539:25" pos:end="539:45"><name pos:start="539:25" pos:end="539:27">pps</name><operator pos:start="539:28" pos:end="539:29">-&gt;</operator><name pos:start="539:30" pos:end="539:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="539:48" pos:end="539:50"><expr pos:start="539:48" pos:end="539:50"><name pos:start="539:48" pos:end="539:48">i</name><operator pos:start="539:49" pos:end="539:50">++</operator></expr></incr>)</control> <block pos:start="539:53" pos:end="549:9">{<block_content pos:start="541:13" pos:end="547:13">

            <if_stmt pos:start="541:13" pos:end="547:13"><if pos:start="541:13" pos:end="547:13">if <condition pos:start="541:16" pos:end="541:42">(<expr pos:start="541:17" pos:end="541:41"><name pos:start="541:17" pos:end="541:20">tb_x</name> <operator pos:start="541:22" pos:end="541:22">&lt;</operator> <name pos:start="541:24" pos:end="541:41"><name pos:start="541:24" pos:end="541:26">pps</name><operator pos:start="541:27" pos:end="541:28">-&gt;</operator><name pos:start="541:29" pos:end="541:34">col_bd</name><index pos:start="541:35" pos:end="541:41">[<expr pos:start="541:36" pos:end="541:40"><name pos:start="541:36" pos:end="541:36">i</name> <operator pos:start="541:38" pos:end="541:38">+</operator> <literal type="number" pos:start="541:40" pos:end="541:40">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="541:44" pos:end="547:13">{<block_content pos:start="543:17" pos:end="545:22">

                <expr_stmt pos:start="543:17" pos:end="543:27"><expr pos:start="543:17" pos:end="543:26"><name pos:start="543:17" pos:end="543:22">tile_x</name> <operator pos:start="543:24" pos:end="543:24">=</operator> <name pos:start="543:26" pos:end="543:26">i</name></expr>;</expr_stmt>

                <break pos:start="545:17" pos:end="545:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <for pos:start="553:9" pos:end="563:9">for <control pos:start="553:13" pos:end="553:48">(<init pos:start="553:14" pos:end="553:19"><expr pos:start="553:14" pos:end="553:18"><name pos:start="553:14" pos:end="553:14">i</name> <operator pos:start="553:16" pos:end="553:16">=</operator> <literal type="number" pos:start="553:18" pos:end="553:18">0</literal></expr>;</init> <condition pos:start="553:21" pos:end="553:43"><expr pos:start="553:21" pos:end="553:42"><name pos:start="553:21" pos:end="553:21">i</name> <operator pos:start="553:23" pos:end="553:23">&lt;</operator> <name pos:start="553:25" pos:end="553:42"><name pos:start="553:25" pos:end="553:27">pps</name><operator pos:start="553:28" pos:end="553:29">-&gt;</operator><name pos:start="553:30" pos:end="553:42">num_tile_rows</name></name></expr>;</condition> <incr pos:start="553:45" pos:end="553:47"><expr pos:start="553:45" pos:end="553:47"><name pos:start="553:45" pos:end="553:45">i</name><operator pos:start="553:46" pos:end="553:47">++</operator></expr></incr>)</control> <block pos:start="553:50" pos:end="563:9">{<block_content pos:start="555:13" pos:end="561:13">

            <if_stmt pos:start="555:13" pos:end="561:13"><if pos:start="555:13" pos:end="561:13">if <condition pos:start="555:16" pos:end="555:42">(<expr pos:start="555:17" pos:end="555:41"><name pos:start="555:17" pos:end="555:20">tb_y</name> <operator pos:start="555:22" pos:end="555:22">&lt;</operator> <name pos:start="555:24" pos:end="555:41"><name pos:start="555:24" pos:end="555:26">pps</name><operator pos:start="555:27" pos:end="555:28">-&gt;</operator><name pos:start="555:29" pos:end="555:34">row_bd</name><index pos:start="555:35" pos:end="555:41">[<expr pos:start="555:36" pos:end="555:40"><name pos:start="555:36" pos:end="555:36">i</name> <operator pos:start="555:38" pos:end="555:38">+</operator> <literal type="number" pos:start="555:40" pos:end="555:40">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="555:44" pos:end="561:13">{<block_content pos:start="557:17" pos:end="559:22">

                <expr_stmt pos:start="557:17" pos:end="557:27"><expr pos:start="557:17" pos:end="557:26"><name pos:start="557:17" pos:end="557:22">tile_y</name> <operator pos:start="557:24" pos:end="557:24">=</operator> <name pos:start="557:26" pos:end="557:26">i</name></expr>;</expr_stmt>

                <break pos:start="559:17" pos:end="559:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <for pos:start="567:9" pos:end="569:66">for <control pos:start="567:13" pos:end="567:36">(<init pos:start="567:14" pos:end="567:19"><expr pos:start="567:14" pos:end="567:18"><name pos:start="567:14" pos:end="567:14">i</name> <operator pos:start="567:16" pos:end="567:16">=</operator> <literal type="number" pos:start="567:18" pos:end="567:18">0</literal></expr>;</init> <condition pos:start="567:21" pos:end="567:31"><expr pos:start="567:21" pos:end="567:30"><name pos:start="567:21" pos:end="567:21">i</name> <operator pos:start="567:23" pos:end="567:23">&lt;</operator> <name pos:start="567:25" pos:end="567:30">tile_x</name></expr>;</condition> <incr pos:start="567:33" pos:end="567:35"><expr pos:start="567:33" pos:end="567:35"><name pos:start="567:33" pos:end="567:33">i</name><operator pos:start="567:34" pos:end="567:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="569:13" pos:end="569:66"><block_content pos:start="569:13" pos:end="569:66">

            <expr_stmt pos:start="569:13" pos:end="569:66"><expr pos:start="569:13" pos:end="569:65"><name pos:start="569:13" pos:end="569:15">val</name> <operator pos:start="569:17" pos:end="569:18">+=</operator> <name pos:start="569:20" pos:end="569:42"><name pos:start="569:20" pos:end="569:22">pps</name><operator pos:start="569:23" pos:end="569:24">-&gt;</operator><name pos:start="569:25" pos:end="569:34">row_height</name><index pos:start="569:35" pos:end="569:42">[<expr pos:start="569:36" pos:end="569:41"><name pos:start="569:36" pos:end="569:41">tile_y</name></expr>]</index></name> <operator pos:start="569:44" pos:end="569:44">*</operator> <name pos:start="569:46" pos:end="569:65"><name pos:start="569:46" pos:end="569:48">pps</name><operator pos:start="569:49" pos:end="569:50">-&gt;</operator><name pos:start="569:51" pos:end="569:62">column_width</name><index pos:start="569:63" pos:end="569:65">[<expr pos:start="569:64" pos:end="569:64"><name pos:start="569:64" pos:end="569:64">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="571:9" pos:end="573:55">for <control pos:start="571:13" pos:end="571:36">(<init pos:start="571:14" pos:end="571:19"><expr pos:start="571:14" pos:end="571:18"><name pos:start="571:14" pos:end="571:14">i</name> <operator pos:start="571:16" pos:end="571:16">=</operator> <literal type="number" pos:start="571:18" pos:end="571:18">0</literal></expr>;</init> <condition pos:start="571:21" pos:end="571:31"><expr pos:start="571:21" pos:end="571:30"><name pos:start="571:21" pos:end="571:21">i</name> <operator pos:start="571:23" pos:end="571:23">&lt;</operator> <name pos:start="571:25" pos:end="571:30">tile_y</name></expr>;</condition> <incr pos:start="571:33" pos:end="571:35"><expr pos:start="571:33" pos:end="571:35"><name pos:start="571:33" pos:end="571:33">i</name><operator pos:start="571:34" pos:end="571:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="573:13" pos:end="573:55"><block_content pos:start="573:13" pos:end="573:55">

            <expr_stmt pos:start="573:13" pos:end="573:55"><expr pos:start="573:13" pos:end="573:54"><name pos:start="573:13" pos:end="573:15">val</name> <operator pos:start="573:17" pos:end="573:18">+=</operator> <name pos:start="573:20" pos:end="573:33"><name pos:start="573:20" pos:end="573:22">sps</name><operator pos:start="573:23" pos:end="573:24">-&gt;</operator><name pos:start="573:25" pos:end="573:33">ctb_width</name></name> <operator pos:start="573:35" pos:end="573:35">*</operator> <name pos:start="573:37" pos:end="573:54"><name pos:start="573:37" pos:end="573:39">pps</name><operator pos:start="573:40" pos:end="573:41">-&gt;</operator><name pos:start="573:42" pos:end="573:51">row_height</name><index pos:start="573:52" pos:end="573:54">[<expr pos:start="573:53" pos:end="573:53"><name pos:start="573:53" pos:end="573:53">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="577:9" pos:end="579:42"><expr pos:start="577:9" pos:end="579:41"><name pos:start="577:9" pos:end="577:11">val</name> <operator pos:start="577:13" pos:end="577:14">+=</operator> <operator pos:start="577:16" pos:end="577:16">(</operator><name pos:start="577:17" pos:end="577:20">tb_y</name> <operator pos:start="577:22" pos:end="577:22">-</operator> <name pos:start="577:24" pos:end="577:42"><name pos:start="577:24" pos:end="577:26">pps</name><operator pos:start="577:27" pos:end="577:28">-&gt;</operator><name pos:start="577:29" pos:end="577:34">row_bd</name><index pos:start="577:35" pos:end="577:42">[<expr pos:start="577:36" pos:end="577:41"><name pos:start="577:36" pos:end="577:41">tile_y</name></expr>]</index></name><operator pos:start="577:43" pos:end="577:43">)</operator> <operator pos:start="577:45" pos:end="577:45">*</operator> <name pos:start="577:47" pos:end="577:71"><name pos:start="577:47" pos:end="577:49">pps</name><operator pos:start="577:50" pos:end="577:51">-&gt;</operator><name pos:start="577:52" pos:end="577:63">column_width</name><index pos:start="577:64" pos:end="577:71">[<expr pos:start="577:65" pos:end="577:70"><name pos:start="577:65" pos:end="577:70">tile_x</name></expr>]</index></name> <operator pos:start="577:73" pos:end="577:73">+</operator>

               <name pos:start="579:16" pos:end="579:19">tb_x</name> <operator pos:start="579:21" pos:end="579:21">-</operator> <name pos:start="579:23" pos:end="579:41"><name pos:start="579:23" pos:end="579:25">pps</name><operator pos:start="579:26" pos:end="579:27">-&gt;</operator><name pos:start="579:28" pos:end="579:33">col_bd</name><index pos:start="579:34" pos:end="579:41">[<expr pos:start="579:35" pos:end="579:40"><name pos:start="579:35" pos:end="579:40">tile_x</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="583:9" pos:end="583:50"><expr pos:start="583:9" pos:end="583:49"><name pos:start="583:9" pos:end="583:43"><name pos:start="583:9" pos:end="583:11">pps</name><operator pos:start="583:12" pos:end="583:13">-&gt;</operator><name pos:start="583:14" pos:end="583:30">ctb_addr_rs_to_ts</name><index pos:start="583:31" pos:end="583:43">[<expr pos:start="583:32" pos:end="583:42"><name pos:start="583:32" pos:end="583:42">ctb_addr_rs</name></expr>]</index></name> <operator pos:start="583:45" pos:end="583:45">=</operator> <name pos:start="583:47" pos:end="583:49">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="585:58"><expr pos:start="585:9" pos:end="585:57"><name pos:start="585:9" pos:end="585:35"><name pos:start="585:9" pos:end="585:11">pps</name><operator pos:start="585:12" pos:end="585:13">-&gt;</operator><name pos:start="585:14" pos:end="585:30">ctb_addr_ts_to_rs</name><index pos:start="585:31" pos:end="585:35">[<expr pos:start="585:32" pos:end="585:34"><name pos:start="585:32" pos:end="585:34">val</name></expr>]</index></name>         <operator pos:start="585:45" pos:end="585:45">=</operator> <name pos:start="585:47" pos:end="585:57">ctb_addr_rs</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="591:5" pos:end="599:91">for <control pos:start="591:9" pos:end="591:57">(<init pos:start="591:10" pos:end="591:28"><expr pos:start="591:10" pos:end="591:14"><name pos:start="591:10" pos:end="591:10">j</name> <operator pos:start="591:12" pos:end="591:12">=</operator> <literal type="number" pos:start="591:14" pos:end="591:14">0</literal></expr><operator pos:start="591:15" pos:end="591:15">,</operator> <expr pos:start="591:17" pos:end="591:27"><name pos:start="591:17" pos:end="591:23">tile_id</name> <operator pos:start="591:25" pos:end="591:25">=</operator> <literal type="number" pos:start="591:27" pos:end="591:27">0</literal></expr>;</init> <condition pos:start="591:30" pos:end="591:52"><expr pos:start="591:30" pos:end="591:51"><name pos:start="591:30" pos:end="591:30">j</name> <operator pos:start="591:32" pos:end="591:32">&lt;</operator> <name pos:start="591:34" pos:end="591:51"><name pos:start="591:34" pos:end="591:36">pps</name><operator pos:start="591:37" pos:end="591:38">-&gt;</operator><name pos:start="591:39" pos:end="591:51">num_tile_rows</name></name></expr>;</condition> <incr pos:start="591:54" pos:end="591:56"><expr pos:start="591:54" pos:end="591:56"><name pos:start="591:54" pos:end="591:54">j</name><operator pos:start="591:55" pos:end="591:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="593:9" pos:end="599:91"><block_content pos:start="593:9" pos:end="599:91">

        <for pos:start="593:9" pos:end="599:91">for <control pos:start="593:13" pos:end="593:62">(<init pos:start="593:14" pos:end="593:19"><expr pos:start="593:14" pos:end="593:18"><name pos:start="593:14" pos:end="593:14">i</name> <operator pos:start="593:16" pos:end="593:16">=</operator> <literal type="number" pos:start="593:18" pos:end="593:18">0</literal></expr>;</init> <condition pos:start="593:21" pos:end="593:46"><expr pos:start="593:21" pos:end="593:45"><name pos:start="593:21" pos:end="593:21">i</name> <operator pos:start="593:23" pos:end="593:23">&lt;</operator> <name pos:start="593:25" pos:end="593:45"><name pos:start="593:25" pos:end="593:27">pps</name><operator pos:start="593:28" pos:end="593:29">-&gt;</operator><name pos:start="593:30" pos:end="593:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="593:48" pos:end="593:61"><expr pos:start="593:48" pos:end="593:50"><name pos:start="593:48" pos:end="593:48">i</name><operator pos:start="593:49" pos:end="593:50">++</operator></expr><operator pos:start="593:51" pos:end="593:51">,</operator> <expr pos:start="593:53" pos:end="593:61"><name pos:start="593:53" pos:end="593:59">tile_id</name><operator pos:start="593:60" pos:end="593:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="595:13" pos:end="599:91"><block_content pos:start="595:13" pos:end="599:91">

            <for pos:start="595:13" pos:end="599:91">for <control pos:start="595:17" pos:end="595:65">(<init pos:start="595:18" pos:end="595:36"><expr pos:start="595:18" pos:end="595:35"><name pos:start="595:18" pos:end="595:18">y</name> <operator pos:start="595:20" pos:end="595:20">=</operator> <name pos:start="595:22" pos:end="595:35"><name pos:start="595:22" pos:end="595:24">pps</name><operator pos:start="595:25" pos:end="595:26">-&gt;</operator><name pos:start="595:27" pos:end="595:32">row_bd</name><index pos:start="595:33" pos:end="595:35">[<expr pos:start="595:34" pos:end="595:34"><name pos:start="595:34" pos:end="595:34">j</name></expr>]</index></name></expr>;</init> <condition pos:start="595:38" pos:end="595:60"><expr pos:start="595:38" pos:end="595:59"><name pos:start="595:38" pos:end="595:38">y</name> <operator pos:start="595:40" pos:end="595:40">&lt;</operator> <name pos:start="595:42" pos:end="595:59"><name pos:start="595:42" pos:end="595:44">pps</name><operator pos:start="595:45" pos:end="595:46">-&gt;</operator><name pos:start="595:47" pos:end="595:52">row_bd</name><index pos:start="595:53" pos:end="595:59">[<expr pos:start="595:54" pos:end="595:58"><name pos:start="595:54" pos:end="595:54">j</name> <operator pos:start="595:56" pos:end="595:56">+</operator> <literal type="number" pos:start="595:58" pos:end="595:58">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="595:62" pos:end="595:64"><expr pos:start="595:62" pos:end="595:64"><name pos:start="595:62" pos:end="595:62">y</name><operator pos:start="595:63" pos:end="595:64">++</operator></expr></incr>)</control><block type="pseudo" pos:start="597:17" pos:end="599:91"><block_content pos:start="597:17" pos:end="599:91">

                <for pos:start="597:17" pos:end="599:91">for <control pos:start="597:21" pos:end="597:69">(<init pos:start="597:22" pos:end="597:40"><expr pos:start="597:22" pos:end="597:39"><name pos:start="597:22" pos:end="597:22">x</name> <operator pos:start="597:24" pos:end="597:24">=</operator> <name pos:start="597:26" pos:end="597:39"><name pos:start="597:26" pos:end="597:28">pps</name><operator pos:start="597:29" pos:end="597:30">-&gt;</operator><name pos:start="597:31" pos:end="597:36">col_bd</name><index pos:start="597:37" pos:end="597:39">[<expr pos:start="597:38" pos:end="597:38"><name pos:start="597:38" pos:end="597:38">i</name></expr>]</index></name></expr>;</init> <condition pos:start="597:42" pos:end="597:64"><expr pos:start="597:42" pos:end="597:63"><name pos:start="597:42" pos:end="597:42">x</name> <operator pos:start="597:44" pos:end="597:44">&lt;</operator> <name pos:start="597:46" pos:end="597:63"><name pos:start="597:46" pos:end="597:48">pps</name><operator pos:start="597:49" pos:end="597:50">-&gt;</operator><name pos:start="597:51" pos:end="597:56">col_bd</name><index pos:start="597:57" pos:end="597:63">[<expr pos:start="597:58" pos:end="597:62"><name pos:start="597:58" pos:end="597:58">i</name> <operator pos:start="597:60" pos:end="597:60">+</operator> <literal type="number" pos:start="597:62" pos:end="597:62">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="597:66" pos:end="597:68"><expr pos:start="597:66" pos:end="597:68"><name pos:start="597:66" pos:end="597:66">x</name><operator pos:start="597:67" pos:end="597:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="599:21" pos:end="599:91"><block_content pos:start="599:21" pos:end="599:91">

                    <expr_stmt pos:start="599:21" pos:end="599:91"><expr pos:start="599:21" pos:end="599:90"><name pos:start="599:21" pos:end="599:80"><name pos:start="599:21" pos:end="599:23">pps</name><operator pos:start="599:24" pos:end="599:25">-&gt;</operator><name pos:start="599:26" pos:end="599:32">tile_id</name><index pos:start="599:33" pos:end="599:80">[<expr pos:start="599:34" pos:end="599:79"><name pos:start="599:34" pos:end="599:79"><name pos:start="599:34" pos:end="599:36">pps</name><operator pos:start="599:37" pos:end="599:38">-&gt;</operator><name pos:start="599:39" pos:end="599:55">ctb_addr_rs_to_ts</name><index pos:start="599:56" pos:end="599:79">[<expr pos:start="599:57" pos:end="599:78"><name pos:start="599:57" pos:end="599:57">y</name> <operator pos:start="599:59" pos:end="599:59">*</operator> <name pos:start="599:61" pos:end="599:74"><name pos:start="599:61" pos:end="599:63">sps</name><operator pos:start="599:64" pos:end="599:65">-&gt;</operator><name pos:start="599:66" pos:end="599:74">ctb_width</name></name> <operator pos:start="599:76" pos:end="599:76">+</operator> <name pos:start="599:78" pos:end="599:78">x</name></expr>]</index></name></expr>]</index></name> <operator pos:start="599:82" pos:end="599:82">=</operator> <name pos:start="599:84" pos:end="599:90">tile_id</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for>



    <expr_stmt pos:start="603:5" pos:end="603:75"><expr pos:start="603:5" pos:end="603:74"><name pos:start="603:5" pos:end="603:20"><name pos:start="603:5" pos:end="603:7">pps</name><operator pos:start="603:8" pos:end="603:9">-&gt;</operator><name pos:start="603:10" pos:end="603:20">tile_pos_rs</name></name> <operator pos:start="603:22" pos:end="603:22">=</operator> <call pos:start="603:24" pos:end="603:74"><name pos:start="603:24" pos:end="603:38">av_malloc_array</name><argument_list pos:start="603:39" pos:end="603:74">(<argument pos:start="603:40" pos:end="603:46"><expr pos:start="603:40" pos:end="603:46"><name pos:start="603:40" pos:end="603:46">tile_id</name></expr></argument>, <argument pos:start="603:49" pos:end="603:73"><expr pos:start="603:49" pos:end="603:73"><sizeof pos:start="603:49" pos:end="603:73">sizeof<argument_list pos:start="603:55" pos:end="603:73">(<argument pos:start="603:56" pos:end="603:72"><expr pos:start="603:56" pos:end="603:72"><operator pos:start="603:56" pos:end="603:56">*</operator><name pos:start="603:57" pos:end="603:72"><name pos:start="603:57" pos:end="603:59">pps</name><operator pos:start="603:60" pos:end="603:61">-&gt;</operator><name pos:start="603:62" pos:end="603:72">tile_pos_rs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="605:5" pos:end="611:5"><if pos:start="605:5" pos:end="611:5">if <condition pos:start="605:8" pos:end="605:26">(<expr pos:start="605:9" pos:end="605:25"><operator pos:start="605:9" pos:end="605:9">!</operator><name pos:start="605:10" pos:end="605:25"><name pos:start="605:10" pos:end="605:12">pps</name><operator pos:start="605:13" pos:end="605:14">-&gt;</operator><name pos:start="605:15" pos:end="605:25">tile_pos_rs</name></name></expr>)</condition> <block pos:start="605:28" pos:end="611:5">{<block_content pos:start="607:9" pos:end="609:17">

        <expr_stmt pos:start="607:9" pos:end="607:30"><expr pos:start="607:9" pos:end="607:29"><name pos:start="607:9" pos:end="607:11">ret</name> <operator pos:start="607:13" pos:end="607:13">=</operator> <call pos:start="607:15" pos:end="607:29"><name pos:start="607:15" pos:end="607:21">AVERROR</name><argument_list pos:start="607:22" pos:end="607:29">(<argument pos:start="607:23" pos:end="607:28"><expr pos:start="607:23" pos:end="607:28"><name pos:start="607:23" pos:end="607:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="609:9" pos:end="609:17">goto <name pos:start="609:14" pos:end="609:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="615:5" pos:end="619:111">for <control pos:start="615:9" pos:end="615:44">(<init pos:start="615:10" pos:end="615:15"><expr pos:start="615:10" pos:end="615:14"><name pos:start="615:10" pos:end="615:10">j</name> <operator pos:start="615:12" pos:end="615:12">=</operator> <literal type="number" pos:start="615:14" pos:end="615:14">0</literal></expr>;</init> <condition pos:start="615:17" pos:end="615:39"><expr pos:start="615:17" pos:end="615:38"><name pos:start="615:17" pos:end="615:17">j</name> <operator pos:start="615:19" pos:end="615:19">&lt;</operator> <name pos:start="615:21" pos:end="615:38"><name pos:start="615:21" pos:end="615:23">pps</name><operator pos:start="615:24" pos:end="615:25">-&gt;</operator><name pos:start="615:26" pos:end="615:38">num_tile_rows</name></name></expr>;</condition> <incr pos:start="615:41" pos:end="615:43"><expr pos:start="615:41" pos:end="615:43"><name pos:start="615:41" pos:end="615:41">j</name><operator pos:start="615:42" pos:end="615:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="617:9" pos:end="619:111"><block_content pos:start="617:9" pos:end="619:111">

        <for pos:start="617:9" pos:end="619:111">for <control pos:start="617:13" pos:end="617:51">(<init pos:start="617:14" pos:end="617:19"><expr pos:start="617:14" pos:end="617:18"><name pos:start="617:14" pos:end="617:14">i</name> <operator pos:start="617:16" pos:end="617:16">=</operator> <literal type="number" pos:start="617:18" pos:end="617:18">0</literal></expr>;</init> <condition pos:start="617:21" pos:end="617:46"><expr pos:start="617:21" pos:end="617:45"><name pos:start="617:21" pos:end="617:21">i</name> <operator pos:start="617:23" pos:end="617:23">&lt;</operator> <name pos:start="617:25" pos:end="617:45"><name pos:start="617:25" pos:end="617:27">pps</name><operator pos:start="617:28" pos:end="617:29">-&gt;</operator><name pos:start="617:30" pos:end="617:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="617:48" pos:end="617:50"><expr pos:start="617:48" pos:end="617:50"><name pos:start="617:48" pos:end="617:48">i</name><operator pos:start="617:49" pos:end="617:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="619:13" pos:end="619:111"><block_content pos:start="619:13" pos:end="619:111">

            <expr_stmt pos:start="619:13" pos:end="619:111"><expr pos:start="619:13" pos:end="619:110"><name pos:start="619:13" pos:end="619:59"><name pos:start="619:13" pos:end="619:15">pps</name><operator pos:start="619:16" pos:end="619:17">-&gt;</operator><name pos:start="619:18" pos:end="619:28">tile_pos_rs</name><index pos:start="619:29" pos:end="619:59">[<expr pos:start="619:30" pos:end="619:58"><name pos:start="619:30" pos:end="619:30">j</name> <operator pos:start="619:32" pos:end="619:32">*</operator> <name pos:start="619:34" pos:end="619:54"><name pos:start="619:34" pos:end="619:36">pps</name><operator pos:start="619:37" pos:end="619:38">-&gt;</operator><name pos:start="619:39" pos:end="619:54">num_tile_columns</name></name> <operator pos:start="619:56" pos:end="619:56">+</operator> <name pos:start="619:58" pos:end="619:58">i</name></expr>]</index></name> <operator pos:start="619:61" pos:end="619:61">=</operator> <name pos:start="619:63" pos:end="619:76"><name pos:start="619:63" pos:end="619:65">pps</name><operator pos:start="619:66" pos:end="619:67">-&gt;</operator><name pos:start="619:68" pos:end="619:73">row_bd</name><index pos:start="619:74" pos:end="619:76">[<expr pos:start="619:75" pos:end="619:75"><name pos:start="619:75" pos:end="619:75">j</name></expr>]</index></name> <operator pos:start="619:78" pos:end="619:78">*</operator> <name pos:start="619:80" pos:end="619:93"><name pos:start="619:80" pos:end="619:82">sps</name><operator pos:start="619:83" pos:end="619:84">-&gt;</operator><name pos:start="619:85" pos:end="619:93">ctb_width</name></name> <operator pos:start="619:95" pos:end="619:95">+</operator> <name pos:start="619:97" pos:end="619:110"><name pos:start="619:97" pos:end="619:99">pps</name><operator pos:start="619:100" pos:end="619:101">-&gt;</operator><name pos:start="619:102" pos:end="619:107">col_bd</name><index pos:start="619:108" pos:end="619:110">[<expr pos:start="619:109" pos:end="619:109"><name pos:start="619:109" pos:end="619:109">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <expr_stmt pos:start="623:5" pos:end="623:75"><expr pos:start="623:5" pos:end="623:74"><name pos:start="623:5" pos:end="623:29">log2_diff_ctb_min_tb_size</name> <operator pos:start="623:31" pos:end="623:31">=</operator> <name pos:start="623:33" pos:end="623:50"><name pos:start="623:33" pos:end="623:35">sps</name><operator pos:start="623:36" pos:end="623:37">-&gt;</operator><name pos:start="623:38" pos:end="623:50">log2_ctb_size</name></name> <operator pos:start="623:52" pos:end="623:52">-</operator> <name pos:start="623:54" pos:end="623:74"><name pos:start="623:54" pos:end="623:56">sps</name><operator pos:start="623:57" pos:end="623:58">-&gt;</operator><name pos:start="623:59" pos:end="623:74">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="625:5" pos:end="625:73"><expr pos:start="625:5" pos:end="625:72"><name pos:start="625:5" pos:end="625:23"><name pos:start="625:5" pos:end="625:7">pps</name><operator pos:start="625:8" pos:end="625:9">-&gt;</operator><name pos:start="625:10" pos:end="625:23">min_tb_addr_zs</name></name> <operator pos:start="625:25" pos:end="625:25">=</operator> <operator pos:start="625:27" pos:end="625:27">&amp;</operator><name pos:start="625:28" pos:end="625:72"><name pos:start="625:28" pos:end="625:30">pps</name><operator pos:start="625:31" pos:end="625:32">-&gt;</operator><name pos:start="625:33" pos:end="625:50">min_tb_addr_zs_tab</name><index pos:start="625:51" pos:end="625:72">[<expr pos:start="625:52" pos:end="625:71"><literal type="number" pos:start="625:52" pos:end="625:52">1</literal><operator pos:start="625:53" pos:end="625:53">*</operator><operator pos:start="625:54" pos:end="625:54">(</operator><name pos:start="625:55" pos:end="625:66"><name pos:start="625:55" pos:end="625:57">sps</name><operator pos:start="625:58" pos:end="625:59">-&gt;</operator><name pos:start="625:60" pos:end="625:66">tb_mask</name></name><operator pos:start="625:67" pos:end="625:67">+</operator><literal type="number" pos:start="625:68" pos:end="625:68">2</literal><operator pos:start="625:69" pos:end="625:69">)</operator><operator pos:start="625:70" pos:end="625:70">+</operator><literal type="number" pos:start="625:71" pos:end="625:71">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="627:5" pos:end="633:5">for <control pos:start="627:9" pos:end="627:40">(<init pos:start="627:10" pos:end="627:15"><expr pos:start="627:10" pos:end="627:14"><name pos:start="627:10" pos:end="627:10">y</name> <operator pos:start="627:12" pos:end="627:12">=</operator> <literal type="number" pos:start="627:14" pos:end="627:14">0</literal></expr>;</init> <condition pos:start="627:17" pos:end="627:35"><expr pos:start="627:17" pos:end="627:34"><name pos:start="627:17" pos:end="627:17">y</name> <operator pos:start="627:19" pos:end="627:19">&lt;</operator> <name pos:start="627:21" pos:end="627:32"><name pos:start="627:21" pos:end="627:23">sps</name><operator pos:start="627:24" pos:end="627:25">-&gt;</operator><name pos:start="627:26" pos:end="627:32">tb_mask</name></name><operator pos:start="627:33" pos:end="627:33">+</operator><literal type="number" pos:start="627:34" pos:end="627:34">2</literal></expr>;</condition> <incr pos:start="627:37" pos:end="627:39"><expr pos:start="627:37" pos:end="627:39"><name pos:start="627:37" pos:end="627:37">y</name><operator pos:start="627:38" pos:end="627:39">++</operator></expr></incr>)</control> <block pos:start="627:42" pos:end="633:5">{<block_content pos:start="629:9" pos:end="631:43">

        <expr_stmt pos:start="629:9" pos:end="629:57"><expr pos:start="629:9" pos:end="629:56"><name pos:start="629:9" pos:end="629:51"><name pos:start="629:9" pos:end="629:11">pps</name><operator pos:start="629:12" pos:end="629:13">-&gt;</operator><name pos:start="629:14" pos:end="629:31">min_tb_addr_zs_tab</name><index pos:start="629:32" pos:end="629:51">[<expr pos:start="629:33" pos:end="629:50"><name pos:start="629:33" pos:end="629:33">y</name><operator pos:start="629:34" pos:end="629:34">*</operator><operator pos:start="629:35" pos:end="629:35">(</operator><name pos:start="629:36" pos:end="629:47"><name pos:start="629:36" pos:end="629:38">sps</name><operator pos:start="629:39" pos:end="629:40">-&gt;</operator><name pos:start="629:41" pos:end="629:47">tb_mask</name></name><operator pos:start="629:48" pos:end="629:48">+</operator><literal type="number" pos:start="629:49" pos:end="629:49">2</literal><operator pos:start="629:50" pos:end="629:50">)</operator></expr>]</index></name> <operator pos:start="629:53" pos:end="629:53">=</operator> <operator pos:start="629:55" pos:end="629:55">-</operator><literal type="number" pos:start="629:56" pos:end="629:56">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="631:9" pos:end="631:43"><expr pos:start="631:9" pos:end="631:42"><name pos:start="631:9" pos:end="631:34"><name pos:start="631:9" pos:end="631:11">pps</name><operator pos:start="631:12" pos:end="631:13">-&gt;</operator><name pos:start="631:14" pos:end="631:31">min_tb_addr_zs_tab</name><index pos:start="631:32" pos:end="631:34">[<expr pos:start="631:33" pos:end="631:33"><name pos:start="631:33" pos:end="631:33">y</name></expr>]</index></name>    <operator pos:start="631:39" pos:end="631:39">=</operator> <operator pos:start="631:41" pos:end="631:41">-</operator><literal type="number" pos:start="631:42" pos:end="631:42">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="635:5" pos:end="661:5">for <control pos:start="635:9" pos:end="635:40">(<init pos:start="635:10" pos:end="635:15"><expr pos:start="635:10" pos:end="635:14"><name pos:start="635:10" pos:end="635:10">y</name> <operator pos:start="635:12" pos:end="635:12">=</operator> <literal type="number" pos:start="635:14" pos:end="635:14">0</literal></expr>;</init> <condition pos:start="635:17" pos:end="635:35"><expr pos:start="635:17" pos:end="635:34"><name pos:start="635:17" pos:end="635:17">y</name> <operator pos:start="635:19" pos:end="635:19">&lt;</operator> <name pos:start="635:21" pos:end="635:32"><name pos:start="635:21" pos:end="635:23">sps</name><operator pos:start="635:24" pos:end="635:25">-&gt;</operator><name pos:start="635:26" pos:end="635:32">tb_mask</name></name><operator pos:start="635:33" pos:end="635:33">+</operator><literal type="number" pos:start="635:34" pos:end="635:34">1</literal></expr>;</condition> <incr pos:start="635:37" pos:end="635:39"><expr pos:start="635:37" pos:end="635:39"><name pos:start="635:37" pos:end="635:37">y</name><operator pos:start="635:38" pos:end="635:39">++</operator></expr></incr>)</control> <block pos:start="635:42" pos:end="661:5">{<block_content pos:start="637:9" pos:end="659:9">

        <for pos:start="637:9" pos:end="659:9">for <control pos:start="637:13" pos:end="637:44">(<init pos:start="637:14" pos:end="637:19"><expr pos:start="637:14" pos:end="637:18"><name pos:start="637:14" pos:end="637:14">x</name> <operator pos:start="637:16" pos:end="637:16">=</operator> <literal type="number" pos:start="637:18" pos:end="637:18">0</literal></expr>;</init> <condition pos:start="637:21" pos:end="637:39"><expr pos:start="637:21" pos:end="637:38"><name pos:start="637:21" pos:end="637:21">x</name> <operator pos:start="637:23" pos:end="637:23">&lt;</operator> <name pos:start="637:25" pos:end="637:36"><name pos:start="637:25" pos:end="637:27">sps</name><operator pos:start="637:28" pos:end="637:29">-&gt;</operator><name pos:start="637:30" pos:end="637:36">tb_mask</name></name><operator pos:start="637:37" pos:end="637:37">+</operator><literal type="number" pos:start="637:38" pos:end="637:38">1</literal></expr>;</condition> <incr pos:start="637:41" pos:end="637:43"><expr pos:start="637:41" pos:end="637:43"><name pos:start="637:41" pos:end="637:41">x</name><operator pos:start="637:42" pos:end="637:43">++</operator></expr></incr>)</control> <block pos:start="637:46" pos:end="659:9">{<block_content pos:start="639:13" pos:end="657:64">

            <decl_stmt pos:start="639:13" pos:end="639:61"><decl pos:start="639:13" pos:end="639:60"><type pos:start="639:13" pos:end="639:15"><name pos:start="639:13" pos:end="639:15">int</name></type> <name pos:start="639:17" pos:end="639:20">tb_x</name>        <init pos:start="639:29" pos:end="639:60">= <expr pos:start="639:31" pos:end="639:60"><name pos:start="639:31" pos:end="639:31">x</name> <operator pos:start="639:33" pos:end="639:34">&gt;&gt;</operator> <name pos:start="639:36" pos:end="639:60">log2_diff_ctb_min_tb_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="641:13" pos:end="641:61"><decl pos:start="641:13" pos:end="641:60"><type pos:start="641:13" pos:end="641:15"><name pos:start="641:13" pos:end="641:15">int</name></type> <name pos:start="641:17" pos:end="641:20">tb_y</name>        <init pos:start="641:29" pos:end="641:60">= <expr pos:start="641:31" pos:end="641:60"><name pos:start="641:31" pos:end="641:31">y</name> <operator pos:start="641:33" pos:end="641:34">&gt;&gt;</operator> <name pos:start="641:36" pos:end="641:60">log2_diff_ctb_min_tb_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="643:13" pos:end="643:59"><decl pos:start="643:13" pos:end="643:58"><type pos:start="643:13" pos:end="643:15"><name pos:start="643:13" pos:end="643:15">int</name></type> <name pos:start="643:17" pos:end="643:27">ctb_addr_rs</name> <init pos:start="643:29" pos:end="643:58">= <expr pos:start="643:31" pos:end="643:58"><name pos:start="643:31" pos:end="643:44"><name pos:start="643:31" pos:end="643:33">sps</name><operator pos:start="643:34" pos:end="643:35">-&gt;</operator><name pos:start="643:36" pos:end="643:44">ctb_width</name></name> <operator pos:start="643:46" pos:end="643:46">*</operator> <name pos:start="643:48" pos:end="643:51">tb_y</name> <operator pos:start="643:53" pos:end="643:53">+</operator> <name pos:start="643:55" pos:end="643:58">tb_x</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="645:13" pos:end="647:62"><decl pos:start="645:13" pos:end="647:61"><type pos:start="645:13" pos:end="645:15"><name pos:start="645:13" pos:end="645:15">int</name></type> <name pos:start="645:17" pos:end="645:19">val</name>         <init pos:start="645:29" pos:end="647:61">= <expr pos:start="645:31" pos:end="647:61"><name pos:start="645:31" pos:end="645:65"><name pos:start="645:31" pos:end="645:33">pps</name><operator pos:start="645:34" pos:end="645:35">-&gt;</operator><name pos:start="645:36" pos:end="645:52">ctb_addr_rs_to_ts</name><index pos:start="645:53" pos:end="645:65">[<expr pos:start="645:54" pos:end="645:64"><name pos:start="645:54" pos:end="645:64">ctb_addr_rs</name></expr>]</index></name> <operator pos:start="645:67" pos:end="645:68">&lt;&lt;</operator>

                              <operator pos:start="647:31" pos:end="647:31">(</operator><name pos:start="647:32" pos:end="647:56">log2_diff_ctb_min_tb_size</name> <operator pos:start="647:58" pos:end="647:58">*</operator> <literal type="number" pos:start="647:60" pos:end="647:60">2</literal><operator pos:start="647:61" pos:end="647:61">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="649:13" pos:end="655:13">for <control pos:start="649:17" pos:end="649:59">(<init pos:start="649:18" pos:end="649:23"><expr pos:start="649:18" pos:end="649:22"><name pos:start="649:18" pos:end="649:18">i</name> <operator pos:start="649:20" pos:end="649:20">=</operator> <literal type="number" pos:start="649:22" pos:end="649:22">0</literal></expr>;</init> <condition pos:start="649:25" pos:end="649:54"><expr pos:start="649:25" pos:end="649:53"><name pos:start="649:25" pos:end="649:25">i</name> <operator pos:start="649:27" pos:end="649:27">&lt;</operator> <name pos:start="649:29" pos:end="649:53">log2_diff_ctb_min_tb_size</name></expr>;</condition> <incr pos:start="649:56" pos:end="649:58"><expr pos:start="649:56" pos:end="649:58"><name pos:start="649:56" pos:end="649:56">i</name><operator pos:start="649:57" pos:end="649:58">++</operator></expr></incr>)</control> <block pos:start="649:61" pos:end="655:13">{<block_content pos:start="651:17" pos:end="653:69">

                <decl_stmt pos:start="651:17" pos:end="651:31"><decl pos:start="651:17" pos:end="651:30"><type pos:start="651:17" pos:end="651:19"><name pos:start="651:17" pos:end="651:19">int</name></type> <name pos:start="651:21" pos:end="651:21">m</name> <init pos:start="651:23" pos:end="651:30">= <expr pos:start="651:25" pos:end="651:30"><literal type="number" pos:start="651:25" pos:end="651:25">1</literal> <operator pos:start="651:27" pos:end="651:28">&lt;&lt;</operator> <name pos:start="651:30" pos:end="651:30">i</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="653:17" pos:end="653:69"><expr pos:start="653:17" pos:end="653:68"><name pos:start="653:17" pos:end="653:19">val</name> <operator pos:start="653:21" pos:end="653:22">+=</operator> <operator pos:start="653:24" pos:end="653:24">(</operator><ternary pos:start="653:25" pos:end="653:41"><condition pos:start="653:25" pos:end="653:31"><expr pos:start="653:25" pos:end="653:29"><name pos:start="653:25" pos:end="653:25">m</name> <operator pos:start="653:27" pos:end="653:27">&amp;</operator> <name pos:start="653:29" pos:end="653:29">x</name></expr> ?</condition><then pos:start="653:33" pos:end="653:37"> <expr pos:start="653:33" pos:end="653:37"><name pos:start="653:33" pos:end="653:33">m</name> <operator pos:start="653:35" pos:end="653:35">*</operator> <name pos:start="653:37" pos:end="653:37">m</name></expr> </then><else pos:start="653:39" pos:end="653:41">: <expr pos:start="653:41" pos:end="653:41"><literal type="number" pos:start="653:41" pos:end="653:41">0</literal></expr></else></ternary><operator pos:start="653:42" pos:end="653:42">)</operator> <operator pos:start="653:44" pos:end="653:44">+</operator> <operator pos:start="653:46" pos:end="653:46">(</operator><ternary pos:start="653:47" pos:end="653:67"><condition pos:start="653:47" pos:end="653:53"><expr pos:start="653:47" pos:end="653:51"><name pos:start="653:47" pos:end="653:47">m</name> <operator pos:start="653:49" pos:end="653:49">&amp;</operator> <name pos:start="653:51" pos:end="653:51">y</name></expr> ?</condition><then pos:start="653:55" pos:end="653:63"> <expr pos:start="653:55" pos:end="653:63"><literal type="number" pos:start="653:55" pos:end="653:55">2</literal> <operator pos:start="653:57" pos:end="653:57">*</operator> <name pos:start="653:59" pos:end="653:59">m</name> <operator pos:start="653:61" pos:end="653:61">*</operator> <name pos:start="653:63" pos:end="653:63">m</name></expr> </then><else pos:start="653:65" pos:end="653:67">: <expr pos:start="653:67" pos:end="653:67"><literal type="number" pos:start="653:67" pos:end="653:67">0</literal></expr></else></ternary><operator pos:start="653:68" pos:end="653:68">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="657:13" pos:end="657:64"><expr pos:start="657:13" pos:end="657:63"><name pos:start="657:13" pos:end="657:57"><name pos:start="657:13" pos:end="657:15">pps</name><operator pos:start="657:16" pos:end="657:17">-&gt;</operator><name pos:start="657:18" pos:end="657:31">min_tb_addr_zs</name><index pos:start="657:32" pos:end="657:57">[<expr pos:start="657:33" pos:end="657:56"><name pos:start="657:33" pos:end="657:33">y</name> <operator pos:start="657:35" pos:end="657:35">*</operator> <operator pos:start="657:37" pos:end="657:37">(</operator><name pos:start="657:38" pos:end="657:49"><name pos:start="657:38" pos:end="657:40">sps</name><operator pos:start="657:41" pos:end="657:42">-&gt;</operator><name pos:start="657:43" pos:end="657:49">tb_mask</name></name><operator pos:start="657:50" pos:end="657:50">+</operator><literal type="number" pos:start="657:51" pos:end="657:51">2</literal><operator pos:start="657:52" pos:end="657:52">)</operator> <operator pos:start="657:54" pos:end="657:54">+</operator> <name pos:start="657:56" pos:end="657:56">x</name></expr>]</index></name> <operator pos:start="657:59" pos:end="657:59">=</operator> <name pos:start="657:61" pos:end="657:63">val</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="665:5" pos:end="673:5"><if pos:start="665:5" pos:end="673:5">if <condition pos:start="665:8" pos:end="665:30">(<expr pos:start="665:9" pos:end="665:29"><call pos:start="665:9" pos:end="665:25"><name pos:start="665:9" pos:end="665:21">get_bits_left</name><argument_list pos:start="665:22" pos:end="665:25">(<argument pos:start="665:23" pos:end="665:24"><expr pos:start="665:23" pos:end="665:24"><name pos:start="665:23" pos:end="665:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="665:27" pos:end="665:27">&lt;</operator> <literal type="number" pos:start="665:29" pos:end="665:29">0</literal></expr>)</condition> <block pos:start="665:32" pos:end="673:5">{<block_content pos:start="667:9" pos:end="671:17">

        <expr_stmt pos:start="667:9" pos:end="669:64"><expr pos:start="667:9" pos:end="669:63"><call pos:start="667:9" pos:end="669:63"><name pos:start="667:9" pos:end="667:14">av_log</name><argument_list pos:start="667:15" pos:end="669:63">(<argument pos:start="667:16" pos:end="667:23"><expr pos:start="667:16" pos:end="667:23"><name pos:start="667:16" pos:end="667:23"><name pos:start="667:16" pos:end="667:16">s</name><operator pos:start="667:17" pos:end="667:18">-&gt;</operator><name pos:start="667:19" pos:end="667:23">avctx</name></name></expr></argument>, <argument pos:start="667:26" pos:end="667:37"><expr pos:start="667:26" pos:end="667:37"><name pos:start="667:26" pos:end="667:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="669:16" pos:end="669:42"><expr pos:start="669:16" pos:end="669:42"><literal type="string" pos:start="669:16" pos:end="669:42">"Overread PPS by %d bits\n"</literal></expr></argument>, <argument pos:start="669:45" pos:end="669:62"><expr pos:start="669:45" pos:end="669:62"><operator pos:start="669:45" pos:end="669:45">-</operator><call pos:start="669:46" pos:end="669:62"><name pos:start="669:46" pos:end="669:58">get_bits_left</name><argument_list pos:start="669:59" pos:end="669:62">(<argument pos:start="669:60" pos:end="669:61"><expr pos:start="669:60" pos:end="669:61"><name pos:start="669:60" pos:end="669:61">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="671:9" pos:end="671:17">goto <name pos:start="671:14" pos:end="671:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="677:5" pos:end="677:42"><expr pos:start="677:5" pos:end="677:41"><call pos:start="677:5" pos:end="677:41"><name pos:start="677:5" pos:end="677:19">av_buffer_unref</name><argument_list pos:start="677:20" pos:end="677:41">(<argument pos:start="677:21" pos:end="677:40"><expr pos:start="677:21" pos:end="677:40"><operator pos:start="677:21" pos:end="677:21">&amp;</operator><name pos:start="677:22" pos:end="677:40"><name pos:start="677:22" pos:end="677:22">s</name><operator pos:start="677:23" pos:end="677:24">-&gt;</operator><name pos:start="677:25" pos:end="677:32">pps_list</name><index pos:start="677:33" pos:end="677:40">[<expr pos:start="677:34" pos:end="677:39"><name pos:start="677:34" pos:end="677:39">pps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="679:5" pos:end="679:34"><expr pos:start="679:5" pos:end="679:33"><name pos:start="679:5" pos:end="679:23"><name pos:start="679:5" pos:end="679:5">s</name><operator pos:start="679:6" pos:end="679:7">-&gt;</operator><name pos:start="679:8" pos:end="679:15">pps_list</name><index pos:start="679:16" pos:end="679:23">[<expr pos:start="679:17" pos:end="679:22"><name pos:start="679:17" pos:end="679:22">pps_id</name></expr>]</index></name> <operator pos:start="679:25" pos:end="679:25">=</operator> <name pos:start="679:27" pos:end="679:33">pps_buf</name></expr>;</expr_stmt>



    <return pos:start="683:5" pos:end="683:13">return <expr pos:start="683:12" pos:end="683:12"><literal type="number" pos:start="683:12" pos:end="683:12">0</literal></expr>;</return>



<label pos:start="687:1" pos:end="687:4"><name pos:start="687:1" pos:end="687:3">err</name>:</label>

    <expr_stmt pos:start="689:5" pos:end="689:30"><expr pos:start="689:5" pos:end="689:29"><call pos:start="689:5" pos:end="689:29"><name pos:start="689:5" pos:end="689:19">av_buffer_unref</name><argument_list pos:start="689:20" pos:end="689:29">(<argument pos:start="689:21" pos:end="689:28"><expr pos:start="689:21" pos:end="689:28"><operator pos:start="689:21" pos:end="689:21">&amp;</operator><name pos:start="689:22" pos:end="689:28">pps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="691:5" pos:end="691:15">return <expr pos:start="691:12" pos:end="691:14"><name pos:start="691:12" pos:end="691:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
