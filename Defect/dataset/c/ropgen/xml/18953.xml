<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18953.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">RENAME</name></type>(<name pos:start="1:13" pos:end="1:27">interleaveBytes</name>)<parameter_list pos:start="1:29" pos:end="5:60">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:36">uint8_t</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">src1</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">src2</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">dest</name></decl></parameter>,

			    <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">long</name></type> <name pos:start="3:34" pos:end="3:38">width</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:44">long</name></type> <name pos:start="3:46" pos:end="3:51">height</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:57">long</name></type> <name pos:start="3:59" pos:end="3:68">src1Stride</name></decl></parameter>,

			    <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:32">long</name></type> <name pos:start="5:34" pos:end="5:43">src2Stride</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:59"><decl pos:start="5:46" pos:end="5:59"><type pos:start="5:46" pos:end="5:59"><name pos:start="5:46" pos:end="5:49">long</name></type> <name pos:start="5:51" pos:end="5:59">dstStride</name></decl></parameter>)</parameter_list><block pos:start="5:61" pos:end="159:1">{<block_content pos:start="7:9" pos:end="158:0">

	<decl_stmt pos:start="7:9" pos:end="7:15"><decl pos:start="7:9" pos:end="7:14"><type pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">long</name></type> <name pos:start="7:14" pos:end="7:14">h</name></decl>;</decl_stmt>



	<for pos:start="11:9" pos:end="146:0">for<control pos:start="11:12" pos:end="11:33">(<init pos:start="11:13" pos:end="11:16"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:13">h</name><operator pos:start="11:14" pos:end="11:14">=</operator><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>;</init> <condition pos:start="11:18" pos:end="11:28"><expr pos:start="11:18" pos:end="11:27"><name pos:start="11:18" pos:end="11:18">h</name> <operator pos:start="11:20" pos:end="11:20">&lt;</operator> <name pos:start="11:22" pos:end="11:27">height</name></expr>;</condition> <incr pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:32"><name pos:start="11:30" pos:end="11:30">h</name><operator pos:start="11:31" pos:end="11:32">++</operator></expr></incr>)</control>

	<block pos:start="13:9" pos:end="146:0">{<block_content pos:start="15:17" pos:end="141:35">

		<decl_stmt pos:start="15:17" pos:end="22:0"><decl pos:start="15:17" pos:end="15:22"><type pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">long</name></type> <name pos:start="15:22" pos:end="15:22">w</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="19:1" pos:end="19:15">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:15">HAVE_MMX</name></cpp:ifdef>

<cpp:ifdef pos:start="21:1" pos:end="21:16">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:16">HAVE_SSE2</name></cpp:ifdef>

		<asm pos:start="23:17" pos:end="60:0">asm(

			"xor %%"REG_a", %%"REG_a"	\n\t"

			"1:				\n\t"

			PREFETCH" 64(%1, %%"REG_a")	\n\t"

			PREFETCH" 64(%2, %%"REG_a")	\n\t"

			"movdqa (%1, %%"REG_a"), %%xmm0	\n\t"

			"movdqa (%1, %%"REG_a"), %%xmm1	\n\t"

			"movdqa (%2, %%"REG_a"), %%xmm2	\n\t"

			"punpcklbw %%xmm2, %%xmm0	\n\t"

			"punpckhbw %%xmm2, %%xmm1	\n\t"

			"movntdq %%xmm0, (%0, %%"REG_a", 2)\n\t"

			"movntdq %%xmm1, 16(%0, %%"REG_a", 2)\n\t"

			"add $16, %%"REG_a"		\n\t"

			"cmp %3, %%"REG_a"		\n\t"

			" jb 1b				\n\t"

			::"r"(dest), "r"(src1), "r"(src2), "r" (width-15)

			: "memory", "%"REG_a""

		);</asm>

<cpp:else pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:5">else</cpp:directive></cpp:else>

		<asm pos:start="61:17" pos:end="112:0">asm(

			"xor %%"REG_a", %%"REG_a"	\n\t"

			"1:				\n\t"

			PREFETCH" 64(%1, %%"REG_a")	\n\t"

			PREFETCH" 64(%2, %%"REG_a")	\n\t"

			"movq (%1, %%"REG_a"), %%mm0	\n\t"

			"movq 8(%1, %%"REG_a"), %%mm2	\n\t"

			"movq %%mm0, %%mm1		\n\t"

			"movq %%mm2, %%mm3		\n\t"

			"movq (%2, %%"REG_a"), %%mm4	\n\t"

			"movq 8(%2, %%"REG_a"), %%mm5	\n\t"

			"punpcklbw %%mm4, %%mm0		\n\t"

			"punpckhbw %%mm4, %%mm1		\n\t"

			"punpcklbw %%mm5, %%mm2		\n\t"

			"punpckhbw %%mm5, %%mm3		\n\t"

			MOVNTQ" %%mm0, (%0, %%"REG_a", 2)\n\t"

			MOVNTQ" %%mm1, 8(%0, %%"REG_a", 2)\n\t"

			MOVNTQ" %%mm2, 16(%0, %%"REG_a", 2)\n\t"

			MOVNTQ" %%mm3, 24(%0, %%"REG_a", 2)\n\t"

			"add $16, %%"REG_a"		\n\t"

			"cmp %3, %%"REG_a"		\n\t"

			" jb 1b				\n\t"

			::"r"(dest), "r"(src1), "r"(src2), "r" (width-15)

			: "memory", "%"REG_a

		);</asm>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

		<for pos:start="113:17" pos:end="124:0">for<control pos:start="113:20" pos:end="113:53">(<init pos:start="113:21" pos:end="113:37"><expr pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:21">w</name><operator pos:start="113:22" pos:end="113:22">=</operator> <operator pos:start="113:24" pos:end="113:24">(</operator><name pos:start="113:25" pos:end="113:29">width</name><operator pos:start="113:30" pos:end="113:30">&amp;</operator><operator pos:start="113:31" pos:end="113:31">(</operator><operator pos:start="113:32" pos:end="113:32">~</operator><literal type="number" pos:start="113:33" pos:end="113:34">15</literal><operator pos:start="113:35" pos:end="113:35">)</operator><operator pos:start="113:36" pos:end="113:36">)</operator></expr>;</init> <condition pos:start="113:39" pos:end="113:48"><expr pos:start="113:39" pos:end="113:47"><name pos:start="113:39" pos:end="113:39">w</name> <operator pos:start="113:41" pos:end="113:41">&lt;</operator> <name pos:start="113:43" pos:end="113:47">width</name></expr>;</condition> <incr pos:start="113:50" pos:end="113:52"><expr pos:start="113:50" pos:end="113:52"><name pos:start="113:50" pos:end="113:50">w</name><operator pos:start="113:51" pos:end="113:52">++</operator></expr></incr>)</control>

		<block pos:start="115:17" pos:end="124:0">{<block_content pos:start="117:25" pos:end="119:46">

			<expr_stmt pos:start="117:25" pos:end="117:46"><expr pos:start="117:25" pos:end="117:45"><name pos:start="117:25" pos:end="117:35"><name pos:start="117:25" pos:end="117:28">dest</name><index pos:start="117:29" pos:end="117:35">[<expr pos:start="117:30" pos:end="117:34"><literal type="number" pos:start="117:30" pos:end="117:30">2</literal><operator pos:start="117:31" pos:end="117:31">*</operator><name pos:start="117:32" pos:end="117:32">w</name><operator pos:start="117:33" pos:end="117:33">+</operator><literal type="number" pos:start="117:34" pos:end="117:34">0</literal></expr>]</index></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <name pos:start="117:39" pos:end="117:45"><name pos:start="117:39" pos:end="117:42">src1</name><index pos:start="117:43" pos:end="117:45">[<expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">w</name></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="119:25" pos:end="119:46"><expr pos:start="119:25" pos:end="119:45"><name pos:start="119:25" pos:end="119:35"><name pos:start="119:25" pos:end="119:28">dest</name><index pos:start="119:29" pos:end="119:35">[<expr pos:start="119:30" pos:end="119:34"><literal type="number" pos:start="119:30" pos:end="119:30">2</literal><operator pos:start="119:31" pos:end="119:31">*</operator><name pos:start="119:32" pos:end="119:32">w</name><operator pos:start="119:33" pos:end="119:33">+</operator><literal type="number" pos:start="119:34" pos:end="119:34">1</literal></expr>]</index></name> <operator pos:start="119:37" pos:end="119:37">=</operator> <name pos:start="119:39" pos:end="119:45"><name pos:start="119:39" pos:end="119:42">src2</name><index pos:start="119:43" pos:end="119:45">[<expr pos:start="119:44" pos:end="119:44"><name pos:start="119:44" pos:end="119:44">w</name></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></for>

<cpp:else pos:start="123:1" pos:end="123:5">#<cpp:directive pos:start="123:2" pos:end="123:5">else</cpp:directive></cpp:else>

		<for pos:start="125:17" pos:end="136:0">for<control pos:start="125:20" pos:end="125:40">(<init pos:start="125:21" pos:end="125:24"><expr pos:start="125:21" pos:end="125:23"><name pos:start="125:21" pos:end="125:21">w</name><operator pos:start="125:22" pos:end="125:22">=</operator><literal type="number" pos:start="125:23" pos:end="125:23">0</literal></expr>;</init> <condition pos:start="125:26" pos:end="125:35"><expr pos:start="125:26" pos:end="125:34"><name pos:start="125:26" pos:end="125:26">w</name> <operator pos:start="125:28" pos:end="125:28">&lt;</operator> <name pos:start="125:30" pos:end="125:34">width</name></expr>;</condition> <incr pos:start="125:37" pos:end="125:39"><expr pos:start="125:37" pos:end="125:39"><name pos:start="125:37" pos:end="125:37">w</name><operator pos:start="125:38" pos:end="125:39">++</operator></expr></incr>)</control>

		<block pos:start="127:17" pos:end="136:0">{<block_content pos:start="129:25" pos:end="131:46">

			<expr_stmt pos:start="129:25" pos:end="129:46"><expr pos:start="129:25" pos:end="129:45"><name pos:start="129:25" pos:end="129:35"><name pos:start="129:25" pos:end="129:28">dest</name><index pos:start="129:29" pos:end="129:35">[<expr pos:start="129:30" pos:end="129:34"><literal type="number" pos:start="129:30" pos:end="129:30">2</literal><operator pos:start="129:31" pos:end="129:31">*</operator><name pos:start="129:32" pos:end="129:32">w</name><operator pos:start="129:33" pos:end="129:33">+</operator><literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr>]</index></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <name pos:start="129:39" pos:end="129:45"><name pos:start="129:39" pos:end="129:42">src1</name><index pos:start="129:43" pos:end="129:45">[<expr pos:start="129:44" pos:end="129:44"><name pos:start="129:44" pos:end="129:44">w</name></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="131:25" pos:end="131:46"><expr pos:start="131:25" pos:end="131:45"><name pos:start="131:25" pos:end="131:35"><name pos:start="131:25" pos:end="131:28">dest</name><index pos:start="131:29" pos:end="131:35">[<expr pos:start="131:30" pos:end="131:34"><literal type="number" pos:start="131:30" pos:end="131:30">2</literal><operator pos:start="131:31" pos:end="131:31">*</operator><name pos:start="131:32" pos:end="131:32">w</name><operator pos:start="131:33" pos:end="131:33">+</operator><literal type="number" pos:start="131:34" pos:end="131:34">1</literal></expr>]</index></name> <operator pos:start="131:37" pos:end="131:37">=</operator> <name pos:start="131:39" pos:end="131:45"><name pos:start="131:39" pos:end="131:42">src2</name><index pos:start="131:43" pos:end="131:45">[<expr pos:start="131:44" pos:end="131:44"><name pos:start="131:44" pos:end="131:44">w</name></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></for>

<cpp:endif pos:start="135:1" pos:end="135:6">#<cpp:directive pos:start="135:2" pos:end="135:6">endif</cpp:directive></cpp:endif>

		<expr_stmt pos:start="137:17" pos:end="137:34"><expr pos:start="137:17" pos:end="137:33"><name pos:start="137:17" pos:end="137:20">dest</name> <operator pos:start="137:22" pos:end="137:23">+=</operator> <name pos:start="137:25" pos:end="137:33">dstStride</name></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:35"><expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:20">src1</name> <operator pos:start="139:22" pos:end="139:23">+=</operator> <name pos:start="139:25" pos:end="139:34">src1Stride</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:35"><expr pos:start="141:17" pos:end="141:34"><name pos:start="141:17" pos:end="141:20">src2</name> <operator pos:start="141:22" pos:end="141:23">+=</operator> <name pos:start="141:25" pos:end="141:34">src2Stride</name></expr>;</expr_stmt>

	</block_content>}</block></for>

<cpp:ifdef pos:start="145:1" pos:end="145:15">#<cpp:directive pos:start="145:2" pos:end="145:6">ifdef</cpp:directive> <name pos:start="145:8" pos:end="145:15">HAVE_MMX</name></cpp:ifdef>

	<asm pos:start="147:9" pos:end="158:0">asm(

		EMMS" \n\t"

		SFENCE" \n\t"

		::: "memory"

		);</asm>

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
