<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17907.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">multiple_resample</name><parameter_list pos:start="1:29" pos:end="1:123">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">ResampleContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">c</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:58">AudioData</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">dst</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:77">dst_size</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:93"><decl pos:start="1:80" pos:end="1:93"><type pos:start="1:80" pos:end="1:93"><name pos:start="1:80" pos:end="1:88">AudioData</name> <modifier pos:start="1:90" pos:end="1:90">*</modifier></type><name pos:start="1:91" pos:end="1:93">src</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:107"><decl pos:start="1:96" pos:end="1:107"><type pos:start="1:96" pos:end="1:107"><name pos:start="1:96" pos:end="1:98">int</name></type> <name pos:start="1:100" pos:end="1:107">src_size</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:122"><decl pos:start="1:110" pos:end="1:122"><type pos:start="1:110" pos:end="1:122"><name pos:start="1:110" pos:end="1:112">int</name> <modifier pos:start="1:114" pos:end="1:114">*</modifier></type><name pos:start="1:115" pos:end="1:122">consumed</name></decl></parameter>)</parameter_list><block pos:start="1:124" pos:end="36:15">{<block_content pos:start="2:5" pos:end="36:15">
    <decl_stmt pos:start="2:5" pos:end="2:19"><decl pos:start="2:5" pos:end="2:9"><type pos:start="2:5" pos:end="2:7"><name pos:start="2:5" pos:end="2:7">int</name></type> <name pos:start="2:9" pos:end="2:9">i</name></decl>, <decl pos:start="2:12" pos:end="2:18"><type ref="prev" pos:start="2:5" pos:end="2:7"/><name pos:start="2:12" pos:end="2:14">ret</name><init pos:start="2:15" pos:end="2:18">= <expr pos:start="2:17" pos:end="2:18"><operator pos:start="2:17" pos:end="2:17">-</operator><literal type="number" pos:start="2:18" pos:end="2:18">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:48"><decl pos:start="3:5" pos:end="3:47"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:7">int</name> <name pos:start="3:9" pos:end="3:17">av_unused</name></type> <name pos:start="3:19" pos:end="3:26">mm_flags</name> <init pos:start="3:28" pos:end="3:47">= <expr pos:start="3:30" pos:end="3:47"><call pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:45">av_get_cpu_flags</name><argument_list pos:start="3:46" pos:end="3:47">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:20"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:17">need_emms</name><init pos:start="4:18" pos:end="4:20">= <expr pos:start="4:20" pos:end="4:20"><literal type="number" pos:start="4:20" pos:end="4:20">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="6:61"><if pos:start="5:5" pos:end="6:61">if <condition pos:start="5:8" pos:end="5:33">(<expr pos:start="5:9" pos:end="5:32"><name pos:start="5:9" pos:end="5:32"><name pos:start="5:9" pos:end="5:9">c</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:32">compensation_distance</name></name></expr>)</condition><block type="pseudo" pos:start="6:9" pos:end="6:61"><block_content pos:start="6:9" pos:end="6:61">
        <expr_stmt pos:start="6:9" pos:end="6:61"><expr pos:start="6:9" pos:end="6:60"><name pos:start="6:9" pos:end="6:16">dst_size</name> <operator pos:start="6:18" pos:end="6:18">=</operator> <call pos:start="6:20" pos:end="6:60"><name pos:start="6:20" pos:end="6:24">FFMIN</name><argument_list pos:start="6:25" pos:end="6:60">(<argument pos:start="6:26" pos:end="6:33"><expr pos:start="6:26" pos:end="6:33"><name pos:start="6:26" pos:end="6:33">dst_size</name></expr></argument>, <argument pos:start="6:36" pos:end="6:59"><expr pos:start="6:36" pos:end="6:59"><name pos:start="6:36" pos:end="6:59"><name pos:start="6:36" pos:end="6:36">c</name><operator pos:start="6:37" pos:end="6:38">-&gt;</operator><name pos:start="6:39" pos:end="6:59">compensation_distance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <for pos:start="7:5" pos:end="36:15">for<control pos:start="7:8" pos:end="7:34">(<init pos:start="7:9" pos:end="7:12"><expr pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:9">i</name><operator pos:start="7:10" pos:end="7:10">=</operator><literal type="number" pos:start="7:11" pos:end="7:11">0</literal></expr>;</init> <condition pos:start="7:14" pos:end="7:29"><expr pos:start="7:14" pos:end="7:28"><name pos:start="7:14" pos:end="7:14">i</name><operator pos:start="7:15" pos:end="7:15">&lt;</operator><name pos:start="7:16" pos:end="7:28"><name pos:start="7:16" pos:end="7:18">dst</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:28">ch_count</name></name></expr>;</condition> <incr pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:31">i</name><operator pos:start="7:32" pos:end="7:33">++</operator></expr></incr>)</control><block pos:start="7:35" pos:end="36:15">{<block_content pos:start="10:14" pos:end="36:15">
<cpp:if pos:start="8:1" pos:end="8:22">#<cpp:directive pos:start="8:2" pos:end="8:3">if</cpp:directive> <expr pos:start="8:5" pos:end="8:22"><name pos:start="8:5" pos:end="8:22">HAVE_MMXEXT_INLINE</name></expr></cpp:if>
<cpp:if pos:start="9:1" pos:end="9:20">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">HAVE_SSE2_INLINE</name></expr></cpp:if>
             <if_stmt pos:start="10:14" pos:end="33:177"><if pos:start="10:14" pos:end="10:214">if<condition pos:start="10:16" pos:end="10:79">(<expr pos:start="10:17" pos:end="10:78"><name pos:start="10:17" pos:end="10:25"><name pos:start="10:17" pos:end="10:17">c</name><operator pos:start="10:18" pos:end="10:19">-&gt;</operator><name pos:start="10:20" pos:end="10:25">format</name></name> <operator pos:start="10:27" pos:end="10:28">==</operator> <name pos:start="10:30" pos:end="10:47">AV_SAMPLE_FMT_S16P</name> <operator pos:start="10:49" pos:end="10:50">&amp;&amp;</operator> <operator pos:start="10:52" pos:end="10:52">(</operator><name pos:start="10:53" pos:end="10:60">mm_flags</name><operator pos:start="10:61" pos:end="10:61">&amp;</operator><name pos:start="10:62" pos:end="10:77">AV_CPU_FLAG_SSE2</name><operator pos:start="10:78" pos:end="10:78">)</operator></expr>)</condition><block type="pseudo" pos:start="10:81" pos:end="10:214"><block_content pos:start="10:81" pos:end="10:214"> <expr_stmt pos:start="10:81" pos:end="10:214"><expr pos:start="10:81" pos:end="10:213"><name pos:start="10:81" pos:end="10:83">ret</name><operator pos:start="10:84" pos:end="10:84">=</operator> <call pos:start="10:86" pos:end="10:213"><name pos:start="10:86" pos:end="10:109">swri_resample_int16_sse2</name> <argument_list pos:start="10:111" pos:end="10:213">(<argument pos:start="10:112" pos:end="10:112"><expr pos:start="10:112" pos:end="10:112"><name pos:start="10:112" pos:end="10:112">c</name></expr></argument>, <argument pos:start="10:115" pos:end="10:134"><expr pos:start="10:115" pos:end="10:134"><operator pos:start="10:115" pos:end="10:115">(</operator><name pos:start="10:116" pos:end="10:122">int16_t</name><operator pos:start="10:123" pos:end="10:123">*</operator><operator pos:start="10:124" pos:end="10:124">)</operator><name pos:start="10:125" pos:end="10:134"><name pos:start="10:125" pos:end="10:127">dst</name><operator pos:start="10:128" pos:end="10:129">-&gt;</operator><name pos:start="10:130" pos:end="10:131">ch</name><index pos:start="10:132" pos:end="10:134">[<expr pos:start="10:133" pos:end="10:133"><name pos:start="10:133" pos:end="10:133">i</name></expr>]</index></name></expr></argument>, <argument pos:start="10:137" pos:end="10:162"><expr pos:start="10:137" pos:end="10:162"><operator pos:start="10:137" pos:end="10:137">(</operator><specifier pos:start="10:138" pos:end="10:142">const</specifier> <name pos:start="10:144" pos:end="10:150">int16_t</name><operator pos:start="10:151" pos:end="10:151">*</operator><operator pos:start="10:152" pos:end="10:152">)</operator><name pos:start="10:153" pos:end="10:162"><name pos:start="10:153" pos:end="10:155">src</name><operator pos:start="10:156" pos:end="10:157">-&gt;</operator><name pos:start="10:158" pos:end="10:159">ch</name><index pos:start="10:160" pos:end="10:162">[<expr pos:start="10:161" pos:end="10:161"><name pos:start="10:161" pos:end="10:161">i</name></expr>]</index></name></expr></argument>, <argument pos:start="10:165" pos:end="10:172"><expr pos:start="10:165" pos:end="10:172"><name pos:start="10:165" pos:end="10:172">consumed</name></expr></argument>, <argument pos:start="10:175" pos:end="10:182"><expr pos:start="10:175" pos:end="10:182"><name pos:start="10:175" pos:end="10:182">src_size</name></expr></argument>, <argument pos:start="10:185" pos:end="10:192"><expr pos:start="10:185" pos:end="10:192"><name pos:start="10:185" pos:end="10:192">dst_size</name></expr></argument>, <argument pos:start="10:195" pos:end="10:212"><expr pos:start="10:195" pos:end="10:212"><name pos:start="10:195" pos:end="10:195">i</name><operator pos:start="10:196" pos:end="10:196">+</operator><literal type="number" pos:start="10:197" pos:end="10:197">1</literal><operator pos:start="10:198" pos:end="10:199">==</operator><name pos:start="10:200" pos:end="10:212"><name pos:start="10:200" pos:end="10:202">dst</name><operator pos:start="10:203" pos:end="10:204">-&gt;</operator><name pos:start="10:205" pos:end="10:212">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="11:9" pos:end="16:14">else
<cpp:endif pos:start="12:1" pos:end="12:6">#<cpp:directive pos:start="12:2" pos:end="12:6">endif</cpp:directive></cpp:endif>
             if<condition pos:start="13:16" pos:end="13:80">(<expr pos:start="13:17" pos:end="13:79"><name pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:17">c</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:25">format</name></name> <operator pos:start="13:27" pos:end="13:28">==</operator> <name pos:start="13:30" pos:end="13:47">AV_SAMPLE_FMT_S16P</name> <operator pos:start="13:49" pos:end="13:50">&amp;&amp;</operator> <operator pos:start="13:52" pos:end="13:52">(</operator><name pos:start="13:53" pos:end="13:60">mm_flags</name><operator pos:start="13:61" pos:end="13:61">&amp;</operator><name pos:start="13:62" pos:end="13:77">AV_CPU_FLAG_MMX2</name> <operator pos:start="13:79" pos:end="13:79">)</operator></expr>)</condition><block pos:start="13:81" pos:end="16:14">{<block_content pos:start="14:18" pos:end="15:30">
                 <expr_stmt pos:start="14:18" pos:end="14:151"><expr pos:start="14:18" pos:end="14:150"><name pos:start="14:18" pos:end="14:20">ret</name><operator pos:start="14:21" pos:end="14:21">=</operator> <call pos:start="14:23" pos:end="14:150"><name pos:start="14:23" pos:end="14:46">swri_resample_int16_mmx2</name> <argument_list pos:start="14:48" pos:end="14:150">(<argument pos:start="14:49" pos:end="14:49"><expr pos:start="14:49" pos:end="14:49"><name pos:start="14:49" pos:end="14:49">c</name></expr></argument>, <argument pos:start="14:52" pos:end="14:71"><expr pos:start="14:52" pos:end="14:71"><operator pos:start="14:52" pos:end="14:52">(</operator><name pos:start="14:53" pos:end="14:59">int16_t</name><operator pos:start="14:60" pos:end="14:60">*</operator><operator pos:start="14:61" pos:end="14:61">)</operator><name pos:start="14:62" pos:end="14:71"><name pos:start="14:62" pos:end="14:64">dst</name><operator pos:start="14:65" pos:end="14:66">-&gt;</operator><name pos:start="14:67" pos:end="14:68">ch</name><index pos:start="14:69" pos:end="14:71">[<expr pos:start="14:70" pos:end="14:70"><name pos:start="14:70" pos:end="14:70">i</name></expr>]</index></name></expr></argument>, <argument pos:start="14:74" pos:end="14:99"><expr pos:start="14:74" pos:end="14:99"><operator pos:start="14:74" pos:end="14:74">(</operator><specifier pos:start="14:75" pos:end="14:79">const</specifier> <name pos:start="14:81" pos:end="14:87">int16_t</name><operator pos:start="14:88" pos:end="14:88">*</operator><operator pos:start="14:89" pos:end="14:89">)</operator><name pos:start="14:90" pos:end="14:99"><name pos:start="14:90" pos:end="14:92">src</name><operator pos:start="14:93" pos:end="14:94">-&gt;</operator><name pos:start="14:95" pos:end="14:96">ch</name><index pos:start="14:97" pos:end="14:99">[<expr pos:start="14:98" pos:end="14:98"><name pos:start="14:98" pos:end="14:98">i</name></expr>]</index></name></expr></argument>, <argument pos:start="14:102" pos:end="14:109"><expr pos:start="14:102" pos:end="14:109"><name pos:start="14:102" pos:end="14:109">consumed</name></expr></argument>, <argument pos:start="14:112" pos:end="14:119"><expr pos:start="14:112" pos:end="14:119"><name pos:start="14:112" pos:end="14:119">src_size</name></expr></argument>, <argument pos:start="14:122" pos:end="14:129"><expr pos:start="14:122" pos:end="14:129"><name pos:start="14:122" pos:end="14:129">dst_size</name></expr></argument>, <argument pos:start="14:132" pos:end="14:149"><expr pos:start="14:132" pos:end="14:149"><name pos:start="14:132" pos:end="14:132">i</name><operator pos:start="14:133" pos:end="14:133">+</operator><literal type="number" pos:start="14:134" pos:end="14:134">1</literal><operator pos:start="14:135" pos:end="14:136">==</operator><name pos:start="14:137" pos:end="14:149"><name pos:start="14:137" pos:end="14:139">dst</name><operator pos:start="14:140" pos:end="14:141">-&gt;</operator><name pos:start="14:142" pos:end="14:149">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt pos:start="15:18" pos:end="15:30"><expr pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:26">need_emms</name><operator pos:start="15:27" pos:end="15:27">=</operator> <literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr>;</expr_stmt>
             </block_content>}</block></if> <if type="elseif" pos:start="16:16" pos:end="18:177">else
<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>
             if<condition pos:start="18:16" pos:end="18:48">(<expr pos:start="18:17" pos:end="18:47"><name pos:start="18:17" pos:end="18:25"><name pos:start="18:17" pos:end="18:17">c</name><operator pos:start="18:18" pos:end="18:19">-&gt;</operator><name pos:start="18:20" pos:end="18:25">format</name></name> <operator pos:start="18:27" pos:end="18:28">==</operator> <name pos:start="18:30" pos:end="18:47">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="18:50" pos:end="18:177"><block_content pos:start="18:50" pos:end="18:177"> <expr_stmt pos:start="18:50" pos:end="18:177"><expr pos:start="18:50" pos:end="18:176"><name pos:start="18:50" pos:end="18:52">ret</name><operator pos:start="18:53" pos:end="18:53">=</operator> <call pos:start="18:55" pos:end="18:176"><name pos:start="18:55" pos:end="18:73">swri_resample_int16</name><argument_list pos:start="18:74" pos:end="18:176">(<argument pos:start="18:75" pos:end="18:75"><expr pos:start="18:75" pos:end="18:75"><name pos:start="18:75" pos:end="18:75">c</name></expr></argument>, <argument pos:start="18:78" pos:end="18:97"><expr pos:start="18:78" pos:end="18:97"><operator pos:start="18:78" pos:end="18:78">(</operator><name pos:start="18:79" pos:end="18:85">int16_t</name><operator pos:start="18:86" pos:end="18:86">*</operator><operator pos:start="18:87" pos:end="18:87">)</operator><name pos:start="18:88" pos:end="18:97"><name pos:start="18:88" pos:end="18:90">dst</name><operator pos:start="18:91" pos:end="18:92">-&gt;</operator><name pos:start="18:93" pos:end="18:94">ch</name><index pos:start="18:95" pos:end="18:97">[<expr pos:start="18:96" pos:end="18:96"><name pos:start="18:96" pos:end="18:96">i</name></expr>]</index></name></expr></argument>, <argument pos:start="18:100" pos:end="18:125"><expr pos:start="18:100" pos:end="18:125"><operator pos:start="18:100" pos:end="18:100">(</operator><specifier pos:start="18:101" pos:end="18:105">const</specifier> <name pos:start="18:107" pos:end="18:113">int16_t</name><operator pos:start="18:114" pos:end="18:114">*</operator><operator pos:start="18:115" pos:end="18:115">)</operator><name pos:start="18:116" pos:end="18:125"><name pos:start="18:116" pos:end="18:118">src</name><operator pos:start="18:119" pos:end="18:120">-&gt;</operator><name pos:start="18:121" pos:end="18:122">ch</name><index pos:start="18:123" pos:end="18:125">[<expr pos:start="18:124" pos:end="18:124"><name pos:start="18:124" pos:end="18:124">i</name></expr>]</index></name></expr></argument>, <argument pos:start="18:128" pos:end="18:135"><expr pos:start="18:128" pos:end="18:135"><name pos:start="18:128" pos:end="18:135">consumed</name></expr></argument>, <argument pos:start="18:138" pos:end="18:145"><expr pos:start="18:138" pos:end="18:145"><name pos:start="18:138" pos:end="18:145">src_size</name></expr></argument>, <argument pos:start="18:148" pos:end="18:155"><expr pos:start="18:148" pos:end="18:155"><name pos:start="18:148" pos:end="18:155">dst_size</name></expr></argument>, <argument pos:start="18:158" pos:end="18:175"><expr pos:start="18:158" pos:end="18:175"><name pos:start="18:158" pos:end="18:158">i</name><operator pos:start="18:159" pos:end="18:159">+</operator><literal type="number" pos:start="18:160" pos:end="18:160">1</literal><operator pos:start="18:161" pos:end="18:162">==</operator><name pos:start="18:163" pos:end="18:175"><name pos:start="18:163" pos:end="18:165">dst</name><operator pos:start="18:166" pos:end="18:167">-&gt;</operator><name pos:start="18:168" pos:end="18:175">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="19:9" pos:end="21:0">else if<condition pos:start="19:16" pos:end="19:48">(<expr pos:start="19:17" pos:end="19:47"><name pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:17">c</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:25">format</name></name> <operator pos:start="19:27" pos:end="19:28">==</operator> <name pos:start="19:30" pos:end="19:47">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="19:50" pos:end="21:0"><block_content pos:start="19:50" pos:end="21:0"> <expr_stmt pos:start="19:50" pos:end="21:0"><expr pos:start="19:50" pos:end="19:176"><name pos:start="19:50" pos:end="19:52">ret</name><operator pos:start="19:53" pos:end="19:53">=</operator> <call pos:start="19:55" pos:end="19:176"><name pos:start="19:55" pos:end="19:73">swri_resample_int32</name><argument_list pos:start="19:74" pos:end="19:176">(<argument pos:start="19:75" pos:end="19:75"><expr pos:start="19:75" pos:end="19:75"><name pos:start="19:75" pos:end="19:75">c</name></expr></argument>, <argument pos:start="19:78" pos:end="19:97"><expr pos:start="19:78" pos:end="19:97"><operator pos:start="19:78" pos:end="19:78">(</operator><name pos:start="19:79" pos:end="19:85">int32_t</name><operator pos:start="19:86" pos:end="19:86">*</operator><operator pos:start="19:87" pos:end="19:87">)</operator><name pos:start="19:88" pos:end="19:97"><name pos:start="19:88" pos:end="19:90">dst</name><operator pos:start="19:91" pos:end="19:92">-&gt;</operator><name pos:start="19:93" pos:end="19:94">ch</name><index pos:start="19:95" pos:end="19:97">[<expr pos:start="19:96" pos:end="19:96"><name pos:start="19:96" pos:end="19:96">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:100" pos:end="19:125"><expr pos:start="19:100" pos:end="19:125"><operator pos:start="19:100" pos:end="19:100">(</operator><specifier pos:start="19:101" pos:end="19:105">const</specifier> <name pos:start="19:107" pos:end="19:113">int32_t</name><operator pos:start="19:114" pos:end="19:114">*</operator><operator pos:start="19:115" pos:end="19:115">)</operator><name pos:start="19:116" pos:end="19:125"><name pos:start="19:116" pos:end="19:118">src</name><operator pos:start="19:119" pos:end="19:120">-&gt;</operator><name pos:start="19:121" pos:end="19:122">ch</name><index pos:start="19:123" pos:end="19:125">[<expr pos:start="19:124" pos:end="19:124"><name pos:start="19:124" pos:end="19:124">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:128" pos:end="19:135"><expr pos:start="19:128" pos:end="19:135"><name pos:start="19:128" pos:end="19:135">consumed</name></expr></argument>, <argument pos:start="19:138" pos:end="19:145"><expr pos:start="19:138" pos:end="19:145"><name pos:start="19:138" pos:end="19:145">src_size</name></expr></argument>, <argument pos:start="19:148" pos:end="19:155"><expr pos:start="19:148" pos:end="19:155"><name pos:start="19:148" pos:end="19:155">dst_size</name></expr></argument>, <argument pos:start="19:158" pos:end="19:175"><expr pos:start="19:158" pos:end="19:175"><name pos:start="19:158" pos:end="19:158">i</name><operator pos:start="19:159" pos:end="19:159">+</operator><literal type="number" pos:start="19:160" pos:end="19:160">1</literal><operator pos:start="19:161" pos:end="19:162">==</operator><name pos:start="19:163" pos:end="19:175"><name pos:start="19:163" pos:end="19:165">dst</name><operator pos:start="19:166" pos:end="19:167">-&gt;</operator><name pos:start="19:168" pos:end="19:175">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<cpp:if pos:start="20:1" pos:end="20:19">#<cpp:directive pos:start="20:2" pos:end="20:3">if</cpp:directive> <expr pos:start="20:5" pos:end="20:19"><name pos:start="20:5" pos:end="20:19">HAVE_AVX_INLINE</name></expr></cpp:if>
        <if type="elseif" pos:start="21:9" pos:end="25:0">else if<condition pos:start="21:16" pos:end="21:78">(<expr pos:start="21:17" pos:end="21:77"><name pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:17">c</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:25">format</name></name> <operator pos:start="21:27" pos:end="21:28">==</operator> <name pos:start="21:30" pos:end="21:47">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="21:49" pos:end="21:50">&amp;&amp;</operator> <operator pos:start="21:52" pos:end="21:52">(</operator><name pos:start="21:53" pos:end="21:60">mm_flags</name><operator pos:start="21:61" pos:end="21:61">&amp;</operator><name pos:start="21:62" pos:end="21:76">AV_CPU_FLAG_AVX</name><operator pos:start="21:77" pos:end="21:77">)</operator></expr>)</condition><block type="pseudo" pos:start="22:50" pos:end="25:0"><block_content pos:start="22:50" pos:end="25:0">
                                                 <expr_stmt pos:start="22:50" pos:end="25:0"><expr pos:start="22:50" pos:end="22:177"><name pos:start="22:50" pos:end="22:52">ret</name><operator pos:start="22:53" pos:end="22:53">=</operator> <call pos:start="22:55" pos:end="22:177"><name pos:start="22:55" pos:end="22:77">swri_resample_float_avx</name> <argument_list pos:start="22:79" pos:end="22:177">(<argument pos:start="22:80" pos:end="22:80"><expr pos:start="22:80" pos:end="22:80"><name pos:start="22:80" pos:end="22:80">c</name></expr></argument>, <argument pos:start="22:83" pos:end="22:100"><expr pos:start="22:83" pos:end="22:100"><operator pos:start="22:83" pos:end="22:83">(</operator><name pos:start="22:84" pos:end="22:88">float</name><operator pos:start="22:89" pos:end="22:89">*</operator><operator pos:start="22:90" pos:end="22:90">)</operator><name pos:start="22:91" pos:end="22:100"><name pos:start="22:91" pos:end="22:93">dst</name><operator pos:start="22:94" pos:end="22:95">-&gt;</operator><name pos:start="22:96" pos:end="22:97">ch</name><index pos:start="22:98" pos:end="22:100">[<expr pos:start="22:99" pos:end="22:99"><name pos:start="22:99" pos:end="22:99">i</name></expr>]</index></name></expr></argument>, <argument pos:start="22:103" pos:end="22:126"><expr pos:start="22:103" pos:end="22:126"><operator pos:start="22:103" pos:end="22:103">(</operator><specifier pos:start="22:104" pos:end="22:108">const</specifier> <name pos:start="22:110" pos:end="22:114">float</name><operator pos:start="22:115" pos:end="22:115">*</operator><operator pos:start="22:116" pos:end="22:116">)</operator><name pos:start="22:117" pos:end="22:126"><name pos:start="22:117" pos:end="22:119">src</name><operator pos:start="22:120" pos:end="22:121">-&gt;</operator><name pos:start="22:122" pos:end="22:123">ch</name><index pos:start="22:124" pos:end="22:126">[<expr pos:start="22:125" pos:end="22:125"><name pos:start="22:125" pos:end="22:125">i</name></expr>]</index></name></expr></argument>, <argument pos:start="22:129" pos:end="22:136"><expr pos:start="22:129" pos:end="22:136"><name pos:start="22:129" pos:end="22:136">consumed</name></expr></argument>, <argument pos:start="22:139" pos:end="22:146"><expr pos:start="22:139" pos:end="22:146"><name pos:start="22:139" pos:end="22:146">src_size</name></expr></argument>, <argument pos:start="22:149" pos:end="22:156"><expr pos:start="22:149" pos:end="22:156"><name pos:start="22:149" pos:end="22:156">dst_size</name></expr></argument>, <argument pos:start="22:159" pos:end="22:176"><expr pos:start="22:159" pos:end="22:176"><name pos:start="22:159" pos:end="22:159">i</name><operator pos:start="22:160" pos:end="22:160">+</operator><literal type="number" pos:start="22:161" pos:end="22:161">1</literal><operator pos:start="22:162" pos:end="22:163">==</operator><name pos:start="22:164" pos:end="22:176"><name pos:start="22:164" pos:end="22:166">dst</name><operator pos:start="22:167" pos:end="22:168">-&gt;</operator><name pos:start="22:169" pos:end="22:176">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>
<cpp:if pos:start="24:1" pos:end="24:19">#<cpp:directive pos:start="24:2" pos:end="24:3">if</cpp:directive> <expr pos:start="24:5" pos:end="24:19"><name pos:start="24:5" pos:end="24:19">HAVE_SSE_INLINE</name></expr></cpp:if>
        <if type="elseif" pos:start="25:9" pos:end="28:0">else if<condition pos:start="25:16" pos:end="25:78">(<expr pos:start="25:17" pos:end="25:77"><name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">c</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:25">format</name></name> <operator pos:start="25:27" pos:end="25:28">==</operator> <name pos:start="25:30" pos:end="25:47">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="25:49" pos:end="25:50">&amp;&amp;</operator> <operator pos:start="25:52" pos:end="25:52">(</operator><name pos:start="25:53" pos:end="25:60">mm_flags</name><operator pos:start="25:61" pos:end="25:61">&amp;</operator><name pos:start="25:62" pos:end="25:76">AV_CPU_FLAG_SSE</name><operator pos:start="25:77" pos:end="25:77">)</operator></expr>)</condition><block type="pseudo" pos:start="26:50" pos:end="28:0"><block_content pos:start="26:50" pos:end="28:0">
                                                 <expr_stmt pos:start="26:50" pos:end="28:0"><expr pos:start="26:50" pos:end="26:177"><name pos:start="26:50" pos:end="26:52">ret</name><operator pos:start="26:53" pos:end="26:53">=</operator> <call pos:start="26:55" pos:end="26:177"><name pos:start="26:55" pos:end="26:77">swri_resample_float_sse</name> <argument_list pos:start="26:79" pos:end="26:177">(<argument pos:start="26:80" pos:end="26:80"><expr pos:start="26:80" pos:end="26:80"><name pos:start="26:80" pos:end="26:80">c</name></expr></argument>, <argument pos:start="26:83" pos:end="26:100"><expr pos:start="26:83" pos:end="26:100"><operator pos:start="26:83" pos:end="26:83">(</operator><name pos:start="26:84" pos:end="26:88">float</name><operator pos:start="26:89" pos:end="26:89">*</operator><operator pos:start="26:90" pos:end="26:90">)</operator><name pos:start="26:91" pos:end="26:100"><name pos:start="26:91" pos:end="26:93">dst</name><operator pos:start="26:94" pos:end="26:95">-&gt;</operator><name pos:start="26:96" pos:end="26:97">ch</name><index pos:start="26:98" pos:end="26:100">[<expr pos:start="26:99" pos:end="26:99"><name pos:start="26:99" pos:end="26:99">i</name></expr>]</index></name></expr></argument>, <argument pos:start="26:103" pos:end="26:126"><expr pos:start="26:103" pos:end="26:126"><operator pos:start="26:103" pos:end="26:103">(</operator><specifier pos:start="26:104" pos:end="26:108">const</specifier> <name pos:start="26:110" pos:end="26:114">float</name><operator pos:start="26:115" pos:end="26:115">*</operator><operator pos:start="26:116" pos:end="26:116">)</operator><name pos:start="26:117" pos:end="26:126"><name pos:start="26:117" pos:end="26:119">src</name><operator pos:start="26:120" pos:end="26:121">-&gt;</operator><name pos:start="26:122" pos:end="26:123">ch</name><index pos:start="26:124" pos:end="26:126">[<expr pos:start="26:125" pos:end="26:125"><name pos:start="26:125" pos:end="26:125">i</name></expr>]</index></name></expr></argument>, <argument pos:start="26:129" pos:end="26:136"><expr pos:start="26:129" pos:end="26:136"><name pos:start="26:129" pos:end="26:136">consumed</name></expr></argument>, <argument pos:start="26:139" pos:end="26:146"><expr pos:start="26:139" pos:end="26:146"><name pos:start="26:139" pos:end="26:146">src_size</name></expr></argument>, <argument pos:start="26:149" pos:end="26:156"><expr pos:start="26:149" pos:end="26:156"><name pos:start="26:149" pos:end="26:156">dst_size</name></expr></argument>, <argument pos:start="26:159" pos:end="26:176"><expr pos:start="26:159" pos:end="26:176"><name pos:start="26:159" pos:end="26:159">i</name><operator pos:start="26:160" pos:end="26:160">+</operator><literal type="number" pos:start="26:161" pos:end="26:161">1</literal><operator pos:start="26:162" pos:end="26:163">==</operator><name pos:start="26:164" pos:end="26:176"><name pos:start="26:164" pos:end="26:166">dst</name><operator pos:start="26:167" pos:end="26:168">-&gt;</operator><name pos:start="26:169" pos:end="26:176">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>
        <if type="elseif" pos:start="28:9" pos:end="30:0">else if<condition pos:start="28:16" pos:end="28:48">(<expr pos:start="28:17" pos:end="28:47"><name pos:start="28:17" pos:end="28:25"><name pos:start="28:17" pos:end="28:17">c</name><operator pos:start="28:18" pos:end="28:19">-&gt;</operator><name pos:start="28:20" pos:end="28:25">format</name></name> <operator pos:start="28:27" pos:end="28:28">==</operator> <name pos:start="28:30" pos:end="28:47">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="28:50" pos:end="30:0"><block_content pos:start="28:50" pos:end="30:0"> <expr_stmt pos:start="28:50" pos:end="30:0"><expr pos:start="28:50" pos:end="28:176"><name pos:start="28:50" pos:end="28:52">ret</name><operator pos:start="28:53" pos:end="28:53">=</operator> <call pos:start="28:55" pos:end="28:176"><name pos:start="28:55" pos:end="28:73">swri_resample_float</name><argument_list pos:start="28:74" pos:end="28:176">(<argument pos:start="28:75" pos:end="28:75"><expr pos:start="28:75" pos:end="28:75"><name pos:start="28:75" pos:end="28:75">c</name></expr></argument>, <argument pos:start="28:78" pos:end="28:97"><expr pos:start="28:78" pos:end="28:97"><operator pos:start="28:78" pos:end="28:78">(</operator><name pos:start="28:79" pos:end="28:83">float</name>  <operator pos:start="28:86" pos:end="28:86">*</operator><operator pos:start="28:87" pos:end="28:87">)</operator><name pos:start="28:88" pos:end="28:97"><name pos:start="28:88" pos:end="28:90">dst</name><operator pos:start="28:91" pos:end="28:92">-&gt;</operator><name pos:start="28:93" pos:end="28:94">ch</name><index pos:start="28:95" pos:end="28:97">[<expr pos:start="28:96" pos:end="28:96"><name pos:start="28:96" pos:end="28:96">i</name></expr>]</index></name></expr></argument>, <argument pos:start="28:100" pos:end="28:125"><expr pos:start="28:100" pos:end="28:125"><operator pos:start="28:100" pos:end="28:100">(</operator><specifier pos:start="28:101" pos:end="28:105">const</specifier> <name pos:start="28:107" pos:end="28:111">float</name>  <operator pos:start="28:114" pos:end="28:114">*</operator><operator pos:start="28:115" pos:end="28:115">)</operator><name pos:start="28:116" pos:end="28:125"><name pos:start="28:116" pos:end="28:118">src</name><operator pos:start="28:119" pos:end="28:120">-&gt;</operator><name pos:start="28:121" pos:end="28:122">ch</name><index pos:start="28:123" pos:end="28:125">[<expr pos:start="28:124" pos:end="28:124"><name pos:start="28:124" pos:end="28:124">i</name></expr>]</index></name></expr></argument>, <argument pos:start="28:128" pos:end="28:135"><expr pos:start="28:128" pos:end="28:135"><name pos:start="28:128" pos:end="28:135">consumed</name></expr></argument>, <argument pos:start="28:138" pos:end="28:145"><expr pos:start="28:138" pos:end="28:145"><name pos:start="28:138" pos:end="28:145">src_size</name></expr></argument>, <argument pos:start="28:148" pos:end="28:155"><expr pos:start="28:148" pos:end="28:155"><name pos:start="28:148" pos:end="28:155">dst_size</name></expr></argument>, <argument pos:start="28:158" pos:end="28:175"><expr pos:start="28:158" pos:end="28:175"><name pos:start="28:158" pos:end="28:158">i</name><operator pos:start="28:159" pos:end="28:159">+</operator><literal type="number" pos:start="28:160" pos:end="28:160">1</literal><operator pos:start="28:161" pos:end="28:162">==</operator><name pos:start="28:163" pos:end="28:175"><name pos:start="28:163" pos:end="28:165">dst</name><operator pos:start="28:166" pos:end="28:167">-&gt;</operator><name pos:start="28:168" pos:end="28:175">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<cpp:if pos:start="29:1" pos:end="29:20">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:20">HAVE_SSE2_INLINE</name></expr></cpp:if>
        <if type="elseif" pos:start="30:9" pos:end="33:0">else if<condition pos:start="30:16" pos:end="30:79">(<expr pos:start="30:17" pos:end="30:78"><name pos:start="30:17" pos:end="30:25"><name pos:start="30:17" pos:end="30:17">c</name><operator pos:start="30:18" pos:end="30:19">-&gt;</operator><name pos:start="30:20" pos:end="30:25">format</name></name> <operator pos:start="30:27" pos:end="30:28">==</operator> <name pos:start="30:30" pos:end="30:47">AV_SAMPLE_FMT_DBLP</name> <operator pos:start="30:49" pos:end="30:50">&amp;&amp;</operator> <operator pos:start="30:52" pos:end="30:52">(</operator><name pos:start="30:53" pos:end="30:60">mm_flags</name><operator pos:start="30:61" pos:end="30:61">&amp;</operator><name pos:start="30:62" pos:end="30:77">AV_CPU_FLAG_SSE2</name><operator pos:start="30:78" pos:end="30:78">)</operator></expr>)</condition><block type="pseudo" pos:start="31:50" pos:end="33:0"><block_content pos:start="31:50" pos:end="33:0">
                                                 <expr_stmt pos:start="31:50" pos:end="33:0"><expr pos:start="31:50" pos:end="31:181"><name pos:start="31:50" pos:end="31:52">ret</name><operator pos:start="31:53" pos:end="31:53">=</operator> <call pos:start="31:55" pos:end="31:181"><name pos:start="31:55" pos:end="31:79">swri_resample_double_sse2</name><argument_list pos:start="31:80" pos:end="31:181">(<argument pos:start="31:81" pos:end="31:81"><expr pos:start="31:81" pos:end="31:81"><name pos:start="31:81" pos:end="31:81">c</name></expr></argument>,<argument pos:start="31:83" pos:end="31:102"><expr pos:start="31:83" pos:end="31:102"><operator pos:start="31:83" pos:end="31:83">(</operator><name pos:start="31:84" pos:end="31:89">double</name> <operator pos:start="31:91" pos:end="31:91">*</operator><operator pos:start="31:92" pos:end="31:92">)</operator><name pos:start="31:93" pos:end="31:102"><name pos:start="31:93" pos:end="31:95">dst</name><operator pos:start="31:96" pos:end="31:97">-&gt;</operator><name pos:start="31:98" pos:end="31:99">ch</name><index pos:start="31:100" pos:end="31:102">[<expr pos:start="31:101" pos:end="31:101"><name pos:start="31:101" pos:end="31:101">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:105" pos:end="31:130"><expr pos:start="31:105" pos:end="31:130"><operator pos:start="31:105" pos:end="31:105">(</operator><specifier pos:start="31:106" pos:end="31:110">const</specifier> <name pos:start="31:112" pos:end="31:117">double</name> <operator pos:start="31:119" pos:end="31:119">*</operator><operator pos:start="31:120" pos:end="31:120">)</operator><name pos:start="31:121" pos:end="31:130"><name pos:start="31:121" pos:end="31:123">src</name><operator pos:start="31:124" pos:end="31:125">-&gt;</operator><name pos:start="31:126" pos:end="31:127">ch</name><index pos:start="31:128" pos:end="31:130">[<expr pos:start="31:129" pos:end="31:129"><name pos:start="31:129" pos:end="31:129">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:133" pos:end="31:140"><expr pos:start="31:133" pos:end="31:140"><name pos:start="31:133" pos:end="31:140">consumed</name></expr></argument>, <argument pos:start="31:143" pos:end="31:150"><expr pos:start="31:143" pos:end="31:150"><name pos:start="31:143" pos:end="31:150">src_size</name></expr></argument>, <argument pos:start="31:153" pos:end="31:160"><expr pos:start="31:153" pos:end="31:160"><name pos:start="31:153" pos:end="31:160">dst_size</name></expr></argument>, <argument pos:start="31:163" pos:end="31:180"><expr pos:start="31:163" pos:end="31:180"><name pos:start="31:163" pos:end="31:163">i</name><operator pos:start="31:164" pos:end="31:164">+</operator><literal type="number" pos:start="31:165" pos:end="31:165">1</literal><operator pos:start="31:166" pos:end="31:167">==</operator><name pos:start="31:168" pos:end="31:180"><name pos:start="31:168" pos:end="31:170">dst</name><operator pos:start="31:171" pos:end="31:172">-&gt;</operator><name pos:start="31:173" pos:end="31:180">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<cpp:endif pos:start="32:1" pos:end="32:6">#<cpp:directive pos:start="32:2" pos:end="32:6">endif</cpp:directive></cpp:endif>
        <if type="elseif" pos:start="33:9" pos:end="33:177">else if<condition pos:start="33:16" pos:end="33:48">(<expr pos:start="33:17" pos:end="33:47"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:17">c</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:25">format</name></name> <operator pos:start="33:27" pos:end="33:28">==</operator> <name pos:start="33:30" pos:end="33:47">AV_SAMPLE_FMT_DBLP</name></expr>)</condition><block type="pseudo" pos:start="33:50" pos:end="33:177"><block_content pos:start="33:50" pos:end="33:177"> <expr_stmt pos:start="33:50" pos:end="33:177"><expr pos:start="33:50" pos:end="33:176"><name pos:start="33:50" pos:end="33:52">ret</name><operator pos:start="33:53" pos:end="33:53">=</operator> <call pos:start="33:55" pos:end="33:176"><name pos:start="33:55" pos:end="33:74">swri_resample_double</name><argument_list pos:start="33:75" pos:end="33:176">(<argument pos:start="33:76" pos:end="33:76"><expr pos:start="33:76" pos:end="33:76"><name pos:start="33:76" pos:end="33:76">c</name></expr></argument>,<argument pos:start="33:78" pos:end="33:97"><expr pos:start="33:78" pos:end="33:97"><operator pos:start="33:78" pos:end="33:78">(</operator><name pos:start="33:79" pos:end="33:84">double</name> <operator pos:start="33:86" pos:end="33:86">*</operator><operator pos:start="33:87" pos:end="33:87">)</operator><name pos:start="33:88" pos:end="33:97"><name pos:start="33:88" pos:end="33:90">dst</name><operator pos:start="33:91" pos:end="33:92">-&gt;</operator><name pos:start="33:93" pos:end="33:94">ch</name><index pos:start="33:95" pos:end="33:97">[<expr pos:start="33:96" pos:end="33:96"><name pos:start="33:96" pos:end="33:96">i</name></expr>]</index></name></expr></argument>, <argument pos:start="33:100" pos:end="33:125"><expr pos:start="33:100" pos:end="33:125"><operator pos:start="33:100" pos:end="33:100">(</operator><specifier pos:start="33:101" pos:end="33:105">const</specifier> <name pos:start="33:107" pos:end="33:112">double</name> <operator pos:start="33:114" pos:end="33:114">*</operator><operator pos:start="33:115" pos:end="33:115">)</operator><name pos:start="33:116" pos:end="33:125"><name pos:start="33:116" pos:end="33:118">src</name><operator pos:start="33:119" pos:end="33:120">-&gt;</operator><name pos:start="33:121" pos:end="33:122">ch</name><index pos:start="33:123" pos:end="33:125">[<expr pos:start="33:124" pos:end="33:124"><name pos:start="33:124" pos:end="33:124">i</name></expr>]</index></name></expr></argument>, <argument pos:start="33:128" pos:end="33:135"><expr pos:start="33:128" pos:end="33:135"><name pos:start="33:128" pos:end="33:135">consumed</name></expr></argument>, <argument pos:start="33:138" pos:end="33:145"><expr pos:start="33:138" pos:end="33:145"><name pos:start="33:138" pos:end="33:145">src_size</name></expr></argument>, <argument pos:start="33:148" pos:end="33:155"><expr pos:start="33:148" pos:end="33:155"><name pos:start="33:148" pos:end="33:155">dst_size</name></expr></argument>, <argument pos:start="33:158" pos:end="33:175"><expr pos:start="33:158" pos:end="33:175"><name pos:start="33:158" pos:end="33:158">i</name><operator pos:start="33:159" pos:end="33:159">+</operator><literal type="number" pos:start="33:160" pos:end="33:160">1</literal><operator pos:start="33:161" pos:end="33:162">==</operator><name pos:start="33:163" pos:end="33:175"><name pos:start="33:163" pos:end="33:165">dst</name><operator pos:start="33:166" pos:end="33:167">-&gt;</operator><name pos:start="33:168" pos:end="33:175">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="34:5" pos:end="35:17"><if pos:start="34:5" pos:end="35:17">if<condition pos:start="34:7" pos:end="34:17">(<expr pos:start="34:8" pos:end="34:16"><name pos:start="34:8" pos:end="34:16">need_emms</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">
        <expr_stmt pos:start="35:9" pos:end="35:17"><expr pos:start="35:9" pos:end="35:16"><call pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:14">emms_c</name><argument_list pos:start="35:15" pos:end="35:16">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="36:5" pos:end="36:15">return <expr pos:start="36:12" pos:end="36:14"><name pos:start="36:12" pos:end="36:14">ret</name></expr>;</return></block_content></block></for></block_content></block></function></unit>
