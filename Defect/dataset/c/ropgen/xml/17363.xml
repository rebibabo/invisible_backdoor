<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17363.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:24"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">mpegts_write_section</name><parameter_list pos:start="1:33" pos:end="1:73">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:46">MpegTSSection</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">buf</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:72"><decl pos:start="1:66" pos:end="1:72"><type pos:start="1:66" pos:end="1:72"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:72">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:24">{<block_content pos:start="5:5" pos:end="95:24">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:20">crc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:40"><name pos:start="7:19" pos:end="7:24">packet</name><index pos:start="7:25" pos:end="7:40">[<expr pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:39">TS_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">unsigned</name> <name pos:start="9:20" pos:end="9:23">char</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:32">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">first</name></decl>, <decl pos:start="13:16" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:16">b</name></decl>, <decl pos:start="13:19" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:22">len1</name></decl>, <decl pos:start="13:25" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:28">left</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:47"><expr pos:start="17:5" pos:end="19:46"><name pos:start="17:5" pos:end="17:7">crc</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="19:46"><name pos:start="17:11" pos:end="17:20">av_bswap32</name><argument_list pos:start="17:21" pos:end="19:46">(<argument pos:start="17:22" pos:end="19:45"><expr pos:start="17:22" pos:end="19:45"><call pos:start="17:22" pos:end="19:45"><name pos:start="17:22" pos:end="17:27">av_crc</name><argument_list pos:start="17:28" pos:end="19:45">(<argument pos:start="17:29" pos:end="17:60"><expr pos:start="17:29" pos:end="17:60"><call pos:start="17:29" pos:end="17:60"><name pos:start="17:29" pos:end="17:44">av_crc_get_table</name><argument_list pos:start="17:45" pos:end="17:60">(<argument pos:start="17:46" pos:end="17:59"><expr pos:start="17:46" pos:end="17:59"><name pos:start="17:46" pos:end="17:59">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><operator pos:start="19:29" pos:end="19:29">-</operator><literal type="number" pos:start="19:30" pos:end="19:30">1</literal></expr></argument>, <argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">buf</name></expr></argument>, <argument pos:start="19:38" pos:end="19:44"><expr pos:start="19:38" pos:end="19:44"><name pos:start="19:38" pos:end="19:40">len</name> <operator pos:start="19:42" pos:end="19:42">-</operator> <literal type="number" pos:start="19:44" pos:end="19:44">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">buf</name><index pos:start="23:8" pos:end="23:16">[<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">-</operator> <literal type="number" pos:start="23:15" pos:end="23:15">4</literal></expr>]</index></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:23">crc</name> <operator pos:start="23:25" pos:end="23:26">&gt;&gt;</operator> <literal type="number" pos:start="23:28" pos:end="23:29">24</literal><operator pos:start="23:30" pos:end="23:30">)</operator> <operator pos:start="23:32" pos:end="23:32">&amp;</operator> <literal type="number" pos:start="23:34" pos:end="23:37">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:7">buf</name><index pos:start="25:8" pos:end="25:16">[<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:13">-</operator> <literal type="number" pos:start="25:15" pos:end="25:15">3</literal></expr>]</index></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><name pos:start="25:21" pos:end="25:23">crc</name> <operator pos:start="25:25" pos:end="25:26">&gt;&gt;</operator> <literal type="number" pos:start="25:28" pos:end="25:29">16</literal><operator pos:start="25:30" pos:end="25:30">)</operator> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <literal type="number" pos:start="25:34" pos:end="25:37">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:7">buf</name><index pos:start="27:8" pos:end="27:16">[<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:13">-</operator> <literal type="number" pos:start="27:15" pos:end="27:15">2</literal></expr>]</index></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:23">crc</name> <operator pos:start="27:25" pos:end="27:26">&gt;&gt;</operator>  <literal type="number" pos:start="27:29" pos:end="27:29">8</literal><operator pos:start="27:30" pos:end="27:30">)</operator> <operator pos:start="27:32" pos:end="27:32">&amp;</operator> <literal type="number" pos:start="27:34" pos:end="27:37">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:7">buf</name><index pos:start="29:8" pos:end="29:16">[<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">len</name> <operator pos:start="29:13" pos:end="29:13">-</operator> <literal type="number" pos:start="29:15" pos:end="29:15">1</literal></expr>]</index></name> <operator pos:start="29:18" pos:end="29:18">=</operator>  <name pos:start="29:21" pos:end="29:23">crc</name>        <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <literal type="number" pos:start="29:34" pos:end="29:37">0xff</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:26">/* send each packet */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:11">buf_ptr</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:17">buf</name></expr>;</expr_stmt>

    <while pos:start="37:5" pos:end="95:24">while <condition pos:start="37:11" pos:end="37:19">(<expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:14">len</name> <operator pos:start="37:16" pos:end="37:16">&gt;</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>)</condition> <block pos:start="37:21" pos:end="95:24">{<block_content pos:start="39:9" pos:end="95:24">

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:13">first</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:19">buf</name> <operator pos:start="39:21" pos:end="39:22">==</operator> <name pos:start="39:24" pos:end="39:30">buf_ptr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">q</name>     <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:22">packet</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:10">q</name><operator pos:start="43:11" pos:end="43:12">++</operator>  <operator pos:start="43:15" pos:end="43:15">=</operator> <literal type="number" pos:start="43:17" pos:end="43:20">0x47</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:9">b</name>     <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:22">pid</name></name> <operator pos:start="45:24" pos:end="45:25">&gt;&gt;</operator> <literal type="number" pos:start="45:27" pos:end="45:27">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:18">(<expr pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:17">first</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:22"><block_content pos:start="49:13" pos:end="49:22">

            <expr_stmt pos:start="49:13" pos:end="49:22"><expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:13">b</name> <operator pos:start="49:15" pos:end="49:16">|=</operator> <literal type="number" pos:start="49:18" pos:end="49:21">0x40</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:18"><expr pos:start="51:9" pos:end="51:17"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:10">q</name><operator pos:start="51:11" pos:end="51:12">++</operator>  <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:17">b</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:10">q</name><operator pos:start="53:11" pos:end="53:12">++</operator>  <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:22">pid</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:13">cc</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:21">cc</name></name> <operator pos:start="55:23" pos:end="55:23">+</operator> <literal type="number" pos:start="55:25" pos:end="55:25">1</literal> <operator pos:start="55:27" pos:end="55:27">&amp;</operator> <literal type="number" pos:start="55:29" pos:end="55:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:10">q</name><operator pos:start="57:11" pos:end="57:12">++</operator>  <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:20">0x10</literal> <operator pos:start="57:22" pos:end="57:22">|</operator> <name pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:28">cc</name></name></expr>;</expr_stmt>







        <if_stmt pos:start="65:9" pos:end="67:21"><if pos:start="65:9" pos:end="67:21">if <condition pos:start="65:12" pos:end="65:18">(<expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:17">first</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:21"><block_content pos:start="67:13" pos:end="67:21">

            <expr_stmt pos:start="67:13" pos:end="67:21"><expr pos:start="67:13" pos:end="67:20"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:14">q</name><operator pos:start="67:15" pos:end="67:16">++</operator> <operator pos:start="67:18" pos:end="67:18">=</operator> <literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="67:23" pos:end="67:36">/* 0 offset */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:12">len1</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:29">TS_PACKET_SIZE</name> <operator pos:start="69:31" pos:end="69:31">-</operator> <operator pos:start="69:33" pos:end="69:33">(</operator><name pos:start="69:34" pos:end="69:34">q</name> <operator pos:start="69:36" pos:end="69:36">-</operator> <name pos:start="69:38" pos:end="69:43">packet</name><operator pos:start="69:44" pos:end="69:44">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:23"><if pos:start="71:9" pos:end="73:23">if <condition pos:start="71:12" pos:end="71:23">(<expr pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:16">len1</name> <operator pos:start="71:18" pos:end="71:18">&gt;</operator> <name pos:start="71:20" pos:end="71:22">len</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <expr_stmt pos:start="73:13" pos:end="73:23"><expr pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:16">len1</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:22">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><call pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:14">memcpy</name><argument_list pos:start="75:15" pos:end="75:32">(<argument pos:start="75:16" pos:end="75:16"><expr pos:start="75:16" pos:end="75:16"><name pos:start="75:16" pos:end="75:16">q</name></expr></argument>, <argument pos:start="75:19" pos:end="75:25"><expr pos:start="75:19" pos:end="75:25"><name pos:start="75:19" pos:end="75:25">buf_ptr</name></expr></argument>, <argument pos:start="75:28" pos:end="75:31"><expr pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:31">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:18"><expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:9">q</name> <operator pos:start="77:11" pos:end="77:12">+=</operator> <name pos:start="77:14" pos:end="77:17">len1</name></expr>;</expr_stmt>

        <comment type="block" pos:start="79:9" pos:end="79:36">/* add known padding data */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:45"><expr pos:start="81:9" pos:end="81:44"><name pos:start="81:9" pos:end="81:12">left</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <name pos:start="81:16" pos:end="81:29">TS_PACKET_SIZE</name> <operator pos:start="81:31" pos:end="81:31">-</operator> <operator pos:start="81:33" pos:end="81:33">(</operator><name pos:start="81:34" pos:end="81:34">q</name> <operator pos:start="81:36" pos:end="81:36">-</operator> <name pos:start="81:38" pos:end="81:43">packet</name><operator pos:start="81:44" pos:end="81:44">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:34"><if pos:start="83:9" pos:end="85:34">if <condition pos:start="83:12" pos:end="83:21">(<expr pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:16">left</name> <operator pos:start="83:18" pos:end="83:18">&gt;</operator> <literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:34"><block_content pos:start="85:13" pos:end="85:34">

            <expr_stmt pos:start="85:13" pos:end="85:34"><expr pos:start="85:13" pos:end="85:33"><call pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:18">memset</name><argument_list pos:start="85:19" pos:end="85:33">(<argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">q</name></expr></argument>, <argument pos:start="85:23" pos:end="85:26"><expr pos:start="85:23" pos:end="85:26"><literal type="number" pos:start="85:23" pos:end="85:26">0xff</literal></expr></argument>, <argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><name pos:start="85:29" pos:end="85:32">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><call pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:23">write_packet</name></name><argument_list pos:start="89:24" pos:end="89:34">(<argument pos:start="89:25" pos:end="89:25"><expr pos:start="89:25" pos:end="89:25"><name pos:start="89:25" pos:end="89:25">s</name></expr></argument>, <argument pos:start="89:28" pos:end="89:33"><expr pos:start="89:28" pos:end="89:33"><name pos:start="89:28" pos:end="89:33">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:24"><expr pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:15">buf_ptr</name> <operator pos:start="93:17" pos:end="93:18">+=</operator> <name pos:start="93:20" pos:end="93:23">len1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:11">len</name>     <operator pos:start="95:17" pos:end="95:18">-=</operator> <name pos:start="95:20" pos:end="95:23">len1</name></expr>;</expr_stmt></block_content></block></while></block_content></block></function>

</unit>
