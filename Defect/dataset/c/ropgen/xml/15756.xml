<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15756.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">test_clone</name><parameter_list pos:start="1:16" pos:end="1:21">(<parameter pos:start="1:17" pos:end="1:20"><decl pos:start="1:17" pos:end="1:20"><type pos:start="1:17" pos:end="1:20"><name pos:start="1:17" pos:end="1:20">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:23">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:19">stack1</name></decl>, <decl pos:start="5:22" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">stack2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">pid1</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">pid2</name></decl>, <decl pos:start="7:21" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:27">status1</name></decl>, <decl pos:start="7:30" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:36">status2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:10">stack1</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:31"><name pos:start="11:14" pos:end="11:19">malloc</name><argument_list pos:start="11:20" pos:end="11:31">(<argument pos:start="11:21" pos:end="11:30"><expr pos:start="11:21" pos:end="11:30"><name pos:start="11:21" pos:end="11:30">STACK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:83"><expr pos:start="13:5" pos:end="15:82"><name pos:start="13:5" pos:end="13:8">pid1</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="15:82"><name pos:start="13:12" pos:end="13:20">chk_error</name><argument_list pos:start="13:21" pos:end="15:82">(<argument pos:start="13:22" pos:end="15:81"><expr pos:start="13:22" pos:end="15:81"><call pos:start="13:22" pos:end="15:81"><name pos:start="13:22" pos:end="13:26">clone</name><argument_list pos:start="13:27" pos:end="15:81">(<argument pos:start="13:28" pos:end="13:39"><expr pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:39">thread1_func</name></expr></argument>, <argument pos:start="13:42" pos:end="13:60"><expr pos:start="13:42" pos:end="13:60"><name pos:start="13:42" pos:end="13:47">stack1</name> <operator pos:start="13:49" pos:end="13:49">+</operator> <name pos:start="13:51" pos:end="13:60">STACK_SIZE</name></expr></argument>,

                           <argument pos:start="15:28" pos:end="15:70"><expr pos:start="15:28" pos:end="15:70"><name pos:start="15:28" pos:end="15:35">CLONE_VM</name> <operator pos:start="15:37" pos:end="15:37">|</operator> <name pos:start="15:39" pos:end="15:46">CLONE_FS</name> <operator pos:start="15:48" pos:end="15:48">|</operator> <name pos:start="15:50" pos:end="15:60">CLONE_FILES</name> <operator pos:start="15:62" pos:end="15:62">|</operator> <name pos:start="15:64" pos:end="15:70">SIGCHLD</name></expr></argument>, <argument pos:start="15:73" pos:end="15:80"><expr pos:start="15:73" pos:end="15:80"><literal type="string" pos:start="15:73" pos:end="15:80">"hello1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:10">stack2</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:19">malloc</name><argument_list pos:start="19:20" pos:end="19:31">(<argument pos:start="19:21" pos:end="19:30"><expr pos:start="19:21" pos:end="19:30"><name pos:start="19:21" pos:end="19:30">STACK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:83"><expr pos:start="21:5" pos:end="23:82"><name pos:start="21:5" pos:end="21:8">pid2</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="23:82"><name pos:start="21:12" pos:end="21:20">chk_error</name><argument_list pos:start="21:21" pos:end="23:82">(<argument pos:start="21:22" pos:end="23:81"><expr pos:start="21:22" pos:end="23:81"><call pos:start="21:22" pos:end="23:81"><name pos:start="21:22" pos:end="21:26">clone</name><argument_list pos:start="21:27" pos:end="23:81">(<argument pos:start="21:28" pos:end="21:39"><expr pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:39">thread2_func</name></expr></argument>, <argument pos:start="21:42" pos:end="21:60"><expr pos:start="21:42" pos:end="21:60"><name pos:start="21:42" pos:end="21:47">stack2</name> <operator pos:start="21:49" pos:end="21:49">+</operator> <name pos:start="21:51" pos:end="21:60">STACK_SIZE</name></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:70"><expr pos:start="23:28" pos:end="23:70"><name pos:start="23:28" pos:end="23:35">CLONE_VM</name> <operator pos:start="23:37" pos:end="23:37">|</operator> <name pos:start="23:39" pos:end="23:46">CLONE_FS</name> <operator pos:start="23:48" pos:end="23:48">|</operator> <name pos:start="23:50" pos:end="23:60">CLONE_FILES</name> <operator pos:start="23:62" pos:end="23:62">|</operator> <name pos:start="23:64" pos:end="23:70">SIGCHLD</name></expr></argument>, <argument pos:start="23:73" pos:end="23:80"><expr pos:start="23:73" pos:end="23:80"><literal type="string" pos:start="23:73" pos:end="23:80">"hello2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="27:5" pos:end="27:47">while <condition pos:start="27:11" pos:end="27:46">(<expr pos:start="27:12" pos:end="27:45"><call pos:start="27:12" pos:end="27:37"><name pos:start="27:12" pos:end="27:18">waitpid</name><argument_list pos:start="27:19" pos:end="27:37">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">pid1</name></expr></argument>, <argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:33">status1</name></expr></argument>, <argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">0</literal></expr></argument>)</argument_list></call> <operator pos:start="27:39" pos:end="27:40">!=</operator> <name pos:start="27:42" pos:end="27:45">pid1</name></expr>)</condition><block type="pseudo" pos:start="27:47" pos:end="27:47"><block_content pos:start="27:47" pos:end="27:47"><empty_stmt pos:start="27:47" pos:end="27:47">;</empty_stmt></block_content></block></while>


    <while pos:start="30:5" pos:end="30:47">while <condition pos:start="30:11" pos:end="30:46">(<expr pos:start="30:12" pos:end="30:45"><call pos:start="30:12" pos:end="30:37"><name pos:start="30:12" pos:end="30:18">waitpid</name><argument_list pos:start="30:19" pos:end="30:37">(<argument pos:start="30:20" pos:end="30:23"><expr pos:start="30:20" pos:end="30:23"><name pos:start="30:20" pos:end="30:23">pid2</name></expr></argument>, <argument pos:start="30:26" pos:end="30:33"><expr pos:start="30:26" pos:end="30:33"><operator pos:start="30:26" pos:end="30:26">&amp;</operator><name pos:start="30:27" pos:end="30:33">status2</name></expr></argument>, <argument pos:start="30:36" pos:end="30:36"><expr pos:start="30:36" pos:end="30:36"><literal type="number" pos:start="30:36" pos:end="30:36">0</literal></expr></argument>)</argument_list></call> <operator pos:start="30:39" pos:end="30:40">!=</operator> <name pos:start="30:42" pos:end="30:45">pid2</name></expr>)</condition><block type="pseudo" pos:start="30:47" pos:end="30:47"><block_content pos:start="30:47" pos:end="30:47"><empty_stmt pos:start="30:47" pos:end="30:47">;</empty_stmt></block_content></block></while>


    <if_stmt pos:start="33:5" pos:end="37:23"><if pos:start="33:5" pos:end="37:23">if <condition pos:start="33:8" pos:end="35:25">(<expr pos:start="33:9" pos:end="35:24"><name pos:start="33:9" pos:end="33:19">thread1_res</name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">5</literal> <operator pos:start="33:26" pos:end="33:27">||</operator>

        <name pos:start="35:9" pos:end="35:19">thread2_res</name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">6</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:23"><block_content pos:start="37:9" pos:end="37:23">

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><call pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:13">error</name><argument_list pos:start="37:14" pos:end="37:22">(<argument pos:start="37:15" pos:end="37:21"><expr pos:start="37:15" pos:end="37:21"><literal type="string" pos:start="37:15" pos:end="37:21">"clone"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function></unit>
