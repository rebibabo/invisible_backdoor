<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10550.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">dnxhd_init_rc</name><parameter_list pos:start="1:25" pos:end="1:46">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">DNXHDEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:14">

    <expr_stmt pos:start="5:5" pos:end="5:72"><expr pos:start="5:5" pos:end="5:71"><call pos:start="5:5" pos:end="5:71"><name pos:start="5:5" pos:end="5:18">CHECKED_ALLOCZ</name><argument_list pos:start="5:19" pos:end="5:71">(<argument pos:start="5:20" pos:end="5:29"><expr pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:22">ctx</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:29">mb_rc</name></name></expr></argument>, <argument pos:start="5:32" pos:end="5:70"><expr pos:start="5:32" pos:end="5:70"><literal type="number" pos:start="5:32" pos:end="5:35">8160</literal><operator pos:start="5:36" pos:end="5:36">*</operator><name pos:start="5:37" pos:end="5:54"><name pos:start="5:37" pos:end="5:39">ctx</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:42">m</name><operator pos:start="5:43" pos:end="5:43">.</operator><name pos:start="5:44" pos:end="5:48">avctx</name><operator pos:start="5:49" pos:end="5:50">-&gt;</operator><name pos:start="5:51" pos:end="5:54">qmax</name></name><operator pos:start="5:55" pos:end="5:55">*</operator><sizeof pos:start="5:56" pos:end="5:70">sizeof<argument_list pos:start="5:62" pos:end="5:70">(<argument pos:start="5:63" pos:end="5:69"><expr pos:start="5:63" pos:end="5:69"><name pos:start="5:63" pos:end="5:69">RCEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="9:70"><if pos:start="7:5" pos:end="9:70">if <condition pos:start="7:8" pos:end="7:55">(<expr pos:start="7:9" pos:end="7:54"><name pos:start="7:9" pos:end="7:33"><name pos:start="7:9" pos:end="7:11">ctx</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:14">m</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:20">avctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:33">mb_decision</name></name> <operator pos:start="7:35" pos:end="7:36">!=</operator> <name pos:start="7:38" pos:end="7:54">FF_MB_DECISION_RD</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:70"><block_content pos:start="9:9" pos:end="9:70">

        <expr_stmt pos:start="9:9" pos:end="9:70"><expr pos:start="9:9" pos:end="9:69"><call pos:start="9:9" pos:end="9:69"><name pos:start="9:9" pos:end="9:22">CHECKED_ALLOCZ</name><argument_list pos:start="9:23" pos:end="9:69">(<argument pos:start="9:24" pos:end="9:34"><expr pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:26">ctx</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">mb_cmp</name></name></expr></argument>, <argument pos:start="9:37" pos:end="9:68"><expr pos:start="9:37" pos:end="9:68"><name pos:start="9:37" pos:end="9:49"><name pos:start="9:37" pos:end="9:39">ctx</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:42">m</name><operator pos:start="9:43" pos:end="9:43">.</operator><name pos:start="9:44" pos:end="9:49">mb_num</name></name><operator pos:start="9:50" pos:end="9:50">*</operator><sizeof pos:start="9:51" pos:end="9:68">sizeof<argument_list pos:start="9:57" pos:end="9:68">(<argument pos:start="9:58" pos:end="9:67"><expr pos:start="9:58" pos:end="9:67"><name pos:start="9:58" pos:end="9:67">RCCMPEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:71"><expr pos:start="13:5" pos:end="13:70"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:7">ctx</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:19">frame_bits</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <operator pos:start="13:23" pos:end="13:23">(</operator><name pos:start="13:24" pos:end="13:55"><name pos:start="13:24" pos:end="13:26">ctx</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:37">cid_table</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:55">coding_unit_size</name></name> <operator pos:start="13:57" pos:end="13:57">-</operator> <literal type="number" pos:start="13:59" pos:end="13:63">640</literal> <operator pos:start="13:63" pos:end="13:63">-</operator> <literal type="number" pos:start="13:65" pos:end="13:65">4</literal><operator pos:start="13:66" pos:end="13:66">)</operator> <operator pos:start="13:68" pos:end="13:68">*</operator> <literal type="number" pos:start="13:70" pos:end="13:70">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:15">qscale</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:15">lambda</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <literal type="number" pos:start="17:19" pos:end="17:19">2</literal><operator pos:start="17:20" pos:end="17:21">&lt;&lt;</operator><name pos:start="17:22" pos:end="17:37">LAMBDA_FRAC_BITS</name></expr>;</expr_stmt> <comment type="line" pos:start="17:40" pos:end="17:50">// qscale 2</comment>

    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</return>

 <label pos:start="21:2" pos:end="21:6"><name pos:start="21:2" pos:end="21:5">fail</name>:</label>

    <return pos:start="23:5" pos:end="23:14">return <expr pos:start="23:12" pos:end="23:13"><operator pos:start="23:12" pos:end="23:12">-</operator><literal type="number" pos:start="23:13" pos:end="23:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
