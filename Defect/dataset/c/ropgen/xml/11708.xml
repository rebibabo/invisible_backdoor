<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11708.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_audio</name><parameter_list pos:start="1:24" pos:end="1:73">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">InputStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ist</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">pkt</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:72">got_output</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:31">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:26">decoded_frame</name></decl>, <decl pos:start="5:29" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:30">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name> <init pos:start="7:27" pos:end="7:40">= <expr pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:31">ist</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">dec_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>, <decl pos:start="9:17" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">err</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>, <decl pos:start="9:26" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:41">resample_changed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">AVRational</name></type> <name pos:start="11:16" pos:end="11:31">decoded_frame_tb</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:72">(<expr pos:start="15:9" pos:end="15:71"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:12">ist</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:27">decoded_frame</name></name> <operator pos:start="15:29" pos:end="15:30">&amp;&amp;</operator> <operator pos:start="15:32" pos:end="15:32">!</operator><operator pos:start="15:33" pos:end="15:33">(</operator><name pos:start="15:34" pos:end="15:51"><name pos:start="15:34" pos:end="15:36">ist</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:51">decoded_frame</name></name> <operator pos:start="15:53" pos:end="15:53">=</operator> <call pos:start="15:55" pos:end="15:70"><name pos:start="15:55" pos:end="15:68">av_frame_alloc</name><argument_list pos:start="15:69" pos:end="15:70">()</argument_list></call><operator pos:start="15:71" pos:end="15:71">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:70">(<expr pos:start="19:9" pos:end="19:69"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:12">ist</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:26">filter_frame</name></name> <operator pos:start="19:28" pos:end="19:29">&amp;&amp;</operator> <operator pos:start="19:31" pos:end="19:31">!</operator><operator pos:start="19:32" pos:end="19:32">(</operator><name pos:start="19:33" pos:end="19:49"><name pos:start="19:33" pos:end="19:35">ist</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:49">filter_frame</name></name> <operator pos:start="19:51" pos:end="19:51">=</operator> <call pos:start="19:53" pos:end="19:68"><name pos:start="19:53" pos:end="19:66">av_frame_alloc</name><argument_list pos:start="19:67" pos:end="19:68">()</argument_list></call><operator pos:start="19:69" pos:end="19:69">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:17">decoded_frame</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:38"><name pos:start="23:21" pos:end="23:23">ist</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:38">decoded_frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:20">update_benchmark</name><argument_list pos:start="27:21" pos:end="27:26">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:71"><expr pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:70"><name pos:start="29:11" pos:end="29:31">avcodec_decode_audio4</name><argument_list pos:start="29:32" pos:end="29:70">(<argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">avctx</name></expr></argument>, <argument pos:start="29:40" pos:end="29:52"><expr pos:start="29:40" pos:end="29:52"><name pos:start="29:40" pos:end="29:52">decoded_frame</name></expr></argument>, <argument pos:start="29:55" pos:end="29:64"><expr pos:start="29:55" pos:end="29:64"><name pos:start="29:55" pos:end="29:64">got_output</name></expr></argument>, <argument pos:start="29:67" pos:end="29:69"><expr pos:start="29:67" pos:end="29:69"><name pos:start="29:67" pos:end="29:69">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:76"><expr pos:start="31:5" pos:end="31:75"><call pos:start="31:5" pos:end="31:75"><name pos:start="31:5" pos:end="31:20">update_benchmark</name><argument_list pos:start="31:21" pos:end="31:75">(<argument pos:start="31:22" pos:end="31:41"><expr pos:start="31:22" pos:end="31:41"><literal type="string" pos:start="31:22" pos:end="31:41">"decode_audio %d.%d"</literal></expr></argument>, <argument pos:start="31:44" pos:end="31:58"><expr pos:start="31:44" pos:end="31:58"><name pos:start="31:44" pos:end="31:58"><name pos:start="31:44" pos:end="31:46">ist</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:58">file_index</name></name></expr></argument>, <argument pos:start="31:61" pos:end="31:74"><expr pos:start="31:61" pos:end="31:74"><name pos:start="31:61" pos:end="31:74"><name pos:start="31:61" pos:end="31:63">ist</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:67">st</name><operator pos:start="31:68" pos:end="31:69">-&gt;</operator><name pos:start="31:70" pos:end="31:74">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:44">(<expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:14">&gt;=</operator> <literal type="number" pos:start="35:16" pos:end="35:16">0</literal> <operator pos:start="35:18" pos:end="35:19">&amp;&amp;</operator> <name pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:25">avctx</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:38">sample_rate</name></name> <operator pos:start="35:40" pos:end="35:41">&lt;=</operator> <literal type="number" pos:start="35:43" pos:end="35:43">0</literal></expr>)</condition> <block pos:start="35:46" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:34">

        <expr_stmt pos:start="37:9" pos:end="37:84"><expr pos:start="37:9" pos:end="37:83"><call pos:start="37:9" pos:end="37:83"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:83">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:62"><expr pos:start="37:37" pos:end="37:62"><literal type="string" pos:start="37:37" pos:end="37:62">"Sample rate %d invalid\n"</literal></expr></argument>, <argument pos:start="37:65" pos:end="37:82"><expr pos:start="37:65" pos:end="37:82"><name pos:start="37:65" pos:end="37:82"><name pos:start="37:65" pos:end="37:69">avctx</name><operator pos:start="37:70" pos:end="37:71">-&gt;</operator><name pos:start="37:72" pos:end="37:82">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:36"><if pos:start="45:5" pos:end="47:36">if <condition pos:start="45:8" pos:end="45:29">(<expr pos:start="45:9" pos:end="45:28"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:19">got_output</name> <operator pos:start="45:21" pos:end="45:22">||</operator> <name pos:start="45:24" pos:end="45:26">ret</name><operator pos:start="45:27" pos:end="45:27">&lt;</operator><literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:36"><block_content pos:start="47:9" pos:end="47:36">

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:25">decode_error_stat</name><index pos:start="47:26" pos:end="47:32">[<expr pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:29">ret</name><operator pos:start="47:30" pos:end="47:30">&lt;</operator><literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>]</index></name> <operator pos:start="47:34" pos:end="47:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:24"><if pos:start="51:5" pos:end="53:24">if <condition pos:start="51:8" pos:end="51:33">(<expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal> <operator pos:start="51:17" pos:end="51:18">&amp;&amp;</operator> <name pos:start="51:20" pos:end="51:32">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:24"><block_content pos:start="53:9" pos:end="53:24">

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><call pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:20">exit_program</name><argument_list pos:start="53:21" pos:end="53:23">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><literal type="number" pos:start="53:22" pos:end="53:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="59:19"><if pos:start="57:5" pos:end="59:19">if <condition pos:start="57:8" pos:end="57:32">(<expr pos:start="57:9" pos:end="57:31"><operator pos:start="57:9" pos:end="57:9">!</operator><operator pos:start="57:10" pos:end="57:10">*</operator><name pos:start="57:11" pos:end="57:20">got_output</name> <operator pos:start="57:22" pos:end="57:23">||</operator> <name pos:start="57:25" pos:end="57:27">ret</name> <operator pos:start="57:29" pos:end="57:29">&lt;</operator> <literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:19"><block_content pos:start="59:9" pos:end="59:19">

        <return pos:start="59:9" pos:end="59:19">return <expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:7">ist</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:24">samples_decoded</name></name> <operator pos:start="63:26" pos:end="63:27">+=</operator> <name pos:start="63:29" pos:end="63:53"><name pos:start="63:29" pos:end="63:41">decoded_frame</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:53">nb_samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="70:0"><expr pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:7">ist</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:23">frames_decoded</name></name><operator pos:start="65:24" pos:end="65:25">++</operator></expr>;</expr_stmt>



<cpp:if pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:5"><literal type="number" pos:start="69:5" pos:end="69:5">1</literal></expr></cpp:if>

    <comment type="block" pos:start="71:5" pos:end="73:68">/* increment next_dts to use for the case where the input stream does not

       have timestamps or there are multiple frames in the packet */</comment>

    <expr_stmt pos:start="75:5" pos:end="77:40"><expr pos:start="75:5" pos:end="77:39"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:7">ist</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:17">next_pts</name></name> <operator pos:start="75:19" pos:end="75:20">+=</operator> <operator pos:start="75:22" pos:end="75:22">(</operator><operator pos:start="75:23" pos:end="75:23">(</operator><name pos:start="75:24" pos:end="75:30">int64_t</name><operator pos:start="75:31" pos:end="75:31">)</operator><name pos:start="75:32" pos:end="75:43">AV_TIME_BASE</name> <operator pos:start="75:45" pos:end="75:45">*</operator> <name pos:start="75:47" pos:end="75:71"><name pos:start="75:47" pos:end="75:59">decoded_frame</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:71">nb_samples</name></name><operator pos:start="75:72" pos:end="75:72">)</operator> <operator pos:start="75:74" pos:end="75:74">/</operator>

                     <name pos:start="77:22" pos:end="77:39"><name pos:start="77:22" pos:end="77:26">avctx</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:39">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="84:0"><expr pos:start="79:5" pos:end="81:39"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:7">ist</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:17">next_dts</name></name> <operator pos:start="79:19" pos:end="79:20">+=</operator> <operator pos:start="79:22" pos:end="79:22">(</operator><operator pos:start="79:23" pos:end="79:23">(</operator><name pos:start="79:24" pos:end="79:30">int64_t</name><operator pos:start="79:31" pos:end="79:31">)</operator><name pos:start="79:32" pos:end="79:43">AV_TIME_BASE</name> <operator pos:start="79:45" pos:end="79:45">*</operator> <name pos:start="79:47" pos:end="79:71"><name pos:start="79:47" pos:end="79:59">decoded_frame</name><operator pos:start="79:60" pos:end="79:61">-&gt;</operator><name pos:start="79:62" pos:end="79:71">nb_samples</name></name><operator pos:start="79:72" pos:end="79:72">)</operator> <operator pos:start="79:74" pos:end="79:74">/</operator>

                     <name pos:start="81:22" pos:end="81:39"><name pos:start="81:22" pos:end="81:26">avctx</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:39">sample_rate</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="87:5" pos:end="93:82"><expr pos:start="87:5" pos:end="93:81"><name pos:start="87:5" pos:end="87:20">resample_changed</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:47"><name pos:start="87:24" pos:end="87:26">ist</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:47">resample_sample_fmt</name></name>     <operator pos:start="87:53" pos:end="87:54">!=</operator> <name pos:start="87:56" pos:end="87:76"><name pos:start="87:56" pos:end="87:68">decoded_frame</name><operator pos:start="87:69" pos:end="87:70">-&gt;</operator><name pos:start="87:71" pos:end="87:76">format</name></name>         <operator pos:start="87:86" pos:end="87:87">||</operator>

                       <name pos:start="89:24" pos:end="89:45"><name pos:start="89:24" pos:end="89:26">ist</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:45">resample_channels</name></name>       <operator pos:start="89:53" pos:end="89:54">!=</operator> <name pos:start="89:56" pos:end="89:70"><name pos:start="89:56" pos:end="89:60">avctx</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:70">channels</name></name>               <operator pos:start="89:86" pos:end="89:87">||</operator>

                       <name pos:start="91:24" pos:end="91:51"><name pos:start="91:24" pos:end="91:26">ist</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:51">resample_channel_layout</name></name> <operator pos:start="91:53" pos:end="91:54">!=</operator> <name pos:start="91:56" pos:end="91:84"><name pos:start="91:56" pos:end="91:68">decoded_frame</name><operator pos:start="91:69" pos:end="91:70">-&gt;</operator><name pos:start="91:71" pos:end="91:84">channel_layout</name></name> <operator pos:start="91:86" pos:end="91:87">||</operator>

                       <name pos:start="93:24" pos:end="93:48"><name pos:start="93:24" pos:end="93:26">ist</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:48">resample_sample_rate</name></name>    <operator pos:start="93:53" pos:end="93:54">!=</operator> <name pos:start="93:56" pos:end="93:81"><name pos:start="93:56" pos:end="93:68">decoded_frame</name><operator pos:start="93:69" pos:end="93:70">-&gt;</operator><name pos:start="93:71" pos:end="93:81">sample_rate</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="169:5"><if pos:start="95:5" pos:end="169:5">if <condition pos:start="95:8" pos:end="95:25">(<expr pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:24">resample_changed</name></expr>)</condition> <block pos:start="95:27" pos:end="169:5">{<block_content pos:start="97:9" pos:end="167:13">

        <decl_stmt pos:start="97:9" pos:end="97:38"><decl pos:start="97:9" pos:end="97:24"><type pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:12">char</name></type> <name pos:start="97:14" pos:end="97:24"><name pos:start="97:14" pos:end="97:20">layout1</name><index pos:start="97:21" pos:end="97:24">[<expr pos:start="97:22" pos:end="97:23"><literal type="number" pos:start="97:22" pos:end="97:23">64</literal></expr>]</index></name></decl>, <decl pos:start="97:27" pos:end="97:37"><type ref="prev" pos:start="97:9" pos:end="97:12"/><name pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:33">layout2</name><index pos:start="97:34" pos:end="97:37">[<expr pos:start="97:35" pos:end="97:36"><literal type="number" pos:start="97:35" pos:end="97:36">64</literal></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:45">(<expr pos:start="101:13" pos:end="101:44"><operator pos:start="101:13" pos:end="101:13">!</operator><call pos:start="101:14" pos:end="101:44"><name pos:start="101:14" pos:end="101:39">guess_input_channel_layout</name><argument_list pos:start="101:40" pos:end="101:44">(<argument pos:start="101:41" pos:end="101:43"><expr pos:start="101:41" pos:end="101:43"><name pos:start="101:41" pos:end="101:43">ist</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:47" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:28">

            <expr_stmt pos:start="103:13" pos:end="107:35"><expr pos:start="103:13" pos:end="107:34"><call pos:start="103:13" pos:end="107:34"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="107:34">(<argument pos:start="103:20" pos:end="103:23"><expr pos:start="103:20" pos:end="103:23"><name pos:start="103:20" pos:end="103:23">NULL</name></expr></argument>, <argument pos:start="103:26" pos:end="103:37"><expr pos:start="103:26" pos:end="103:37"><name pos:start="103:26" pos:end="103:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="103:40" pos:end="105:53"><expr pos:start="103:40" pos:end="105:53"><literal type="string" pos:start="103:40" pos:end="103:72">"Unable to find default channel "</literal>

                   <literal type="string" pos:start="105:20" pos:end="105:53">"layout for Input Stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="105:56" pos:end="105:70"><expr pos:start="105:56" pos:end="105:70"><name pos:start="105:56" pos:end="105:70"><name pos:start="105:56" pos:end="105:58">ist</name><operator pos:start="105:59" pos:end="105:60">-&gt;</operator><name pos:start="105:61" pos:end="105:70">file_index</name></name></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:33"><expr pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:22">ist</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:26">st</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:28"><expr pos:start="109:13" pos:end="109:27"><call pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:24">exit_program</name><argument_list pos:start="109:25" pos:end="109:27">(<argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:21">decoded_frame</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:37">channel_layout</name></name> <operator pos:start="113:39" pos:end="113:39">=</operator> <name pos:start="113:41" pos:end="113:61"><name pos:start="113:41" pos:end="113:45">avctx</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:61">channel_layout</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="119:67"><expr pos:start="117:9" pos:end="119:66"><call pos:start="117:9" pos:end="119:66"><name pos:start="117:9" pos:end="117:36">av_get_channel_layout_string</name><argument_list pos:start="117:37" pos:end="119:66">(<argument pos:start="117:38" pos:end="117:44"><expr pos:start="117:38" pos:end="117:44"><name pos:start="117:38" pos:end="117:44">layout1</name></expr></argument>, <argument pos:start="117:47" pos:end="117:61"><expr pos:start="117:47" pos:end="117:61"><sizeof pos:start="117:47" pos:end="117:61">sizeof<argument_list pos:start="117:53" pos:end="117:61">(<argument pos:start="117:54" pos:end="117:60"><expr pos:start="117:54" pos:end="117:60"><name pos:start="117:54" pos:end="117:60">layout1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="117:64" pos:end="117:85"><expr pos:start="117:64" pos:end="117:85"><name pos:start="117:64" pos:end="117:85"><name pos:start="117:64" pos:end="117:66">ist</name><operator pos:start="117:67" pos:end="117:68">-&gt;</operator><name pos:start="117:69" pos:end="117:85">resample_channels</name></name></expr></argument>,

                                     <argument pos:start="119:38" pos:end="119:65"><expr pos:start="119:38" pos:end="119:65"><name pos:start="119:38" pos:end="119:65"><name pos:start="119:38" pos:end="119:40">ist</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:65">resample_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="123:68"><expr pos:start="121:9" pos:end="123:67"><call pos:start="121:9" pos:end="123:67"><name pos:start="121:9" pos:end="121:36">av_get_channel_layout_string</name><argument_list pos:start="121:37" pos:end="123:67">(<argument pos:start="121:38" pos:end="121:44"><expr pos:start="121:38" pos:end="121:44"><name pos:start="121:38" pos:end="121:44">layout2</name></expr></argument>, <argument pos:start="121:47" pos:end="121:61"><expr pos:start="121:47" pos:end="121:61"><sizeof pos:start="121:47" pos:end="121:61">sizeof<argument_list pos:start="121:53" pos:end="121:61">(<argument pos:start="121:54" pos:end="121:60"><expr pos:start="121:54" pos:end="121:60"><name pos:start="121:54" pos:end="121:60">layout2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="121:64" pos:end="121:78"><expr pos:start="121:64" pos:end="121:78"><name pos:start="121:64" pos:end="121:78"><name pos:start="121:64" pos:end="121:68">avctx</name><operator pos:start="121:69" pos:end="121:70">-&gt;</operator><name pos:start="121:71" pos:end="121:78">channels</name></name></expr></argument>,

                                     <argument pos:start="123:38" pos:end="123:66"><expr pos:start="123:38" pos:end="123:66"><name pos:start="123:38" pos:end="123:66"><name pos:start="123:38" pos:end="123:50">decoded_frame</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:66">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="139:41"><expr pos:start="127:9" pos:end="139:40"><call pos:start="127:9" pos:end="139:40"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="139:40">(<argument pos:start="127:16" pos:end="127:19"><expr pos:start="127:16" pos:end="127:19"><name pos:start="127:16" pos:end="127:19">NULL</name></expr></argument>, <argument pos:start="127:22" pos:end="127:32"><expr pos:start="127:22" pos:end="127:32"><name pos:start="127:22" pos:end="127:32">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="129:16" pos:end="129:116"><expr pos:start="129:16" pos:end="129:116"><literal type="string" pos:start="129:16" pos:end="129:116">"Input stream #%d:%d frame changed from rate:%d fmt:%s ch:%d chl:%s to rate:%d fmt:%s ch:%d chl:%s\n"</literal></expr></argument>,

               <argument pos:start="131:16" pos:end="131:30"><expr pos:start="131:16" pos:end="131:30"><name pos:start="131:16" pos:end="131:30"><name pos:start="131:16" pos:end="131:18">ist</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:30">file_index</name></name></expr></argument>, <argument pos:start="131:33" pos:end="131:46"><expr pos:start="131:33" pos:end="131:46"><name pos:start="131:33" pos:end="131:46"><name pos:start="131:33" pos:end="131:35">ist</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:39">st</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:46">index</name></name></expr></argument>,

               <argument pos:start="133:16" pos:end="133:40"><expr pos:start="133:16" pos:end="133:40"><name pos:start="133:16" pos:end="133:40"><name pos:start="133:16" pos:end="133:18">ist</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:40">resample_sample_rate</name></name></expr></argument>,  <argument pos:start="133:44" pos:end="133:91"><expr pos:start="133:44" pos:end="133:91"><call pos:start="133:44" pos:end="133:91"><name pos:start="133:44" pos:end="133:65">av_get_sample_fmt_name</name><argument_list pos:start="133:66" pos:end="133:91">(<argument pos:start="133:67" pos:end="133:90"><expr pos:start="133:67" pos:end="133:90"><name pos:start="133:67" pos:end="133:90"><name pos:start="133:67" pos:end="133:69">ist</name><operator pos:start="133:70" pos:end="133:71">-&gt;</operator><name pos:start="133:72" pos:end="133:90">resample_sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="135:16" pos:end="135:37"><expr pos:start="135:16" pos:end="135:37"><name pos:start="135:16" pos:end="135:37"><name pos:start="135:16" pos:end="135:18">ist</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:37">resample_channels</name></name></expr></argument>, <argument pos:start="135:40" pos:end="135:46"><expr pos:start="135:40" pos:end="135:46"><name pos:start="135:40" pos:end="135:46">layout1</name></expr></argument>,

               <argument pos:start="137:16" pos:end="137:41"><expr pos:start="137:16" pos:end="137:41"><name pos:start="137:16" pos:end="137:41"><name pos:start="137:16" pos:end="137:28">decoded_frame</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:41">sample_rate</name></name></expr></argument>, <argument pos:start="137:44" pos:end="137:88"><expr pos:start="137:44" pos:end="137:88"><call pos:start="137:44" pos:end="137:88"><name pos:start="137:44" pos:end="137:65">av_get_sample_fmt_name</name><argument_list pos:start="137:66" pos:end="137:88">(<argument pos:start="137:67" pos:end="137:87"><expr pos:start="137:67" pos:end="137:87"><name pos:start="137:67" pos:end="137:87"><name pos:start="137:67" pos:end="137:79">decoded_frame</name><operator pos:start="137:80" pos:end="137:81">-&gt;</operator><name pos:start="137:82" pos:end="137:87">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="139:16" pos:end="139:30"><expr pos:start="139:16" pos:end="139:30"><name pos:start="139:16" pos:end="139:30"><name pos:start="139:16" pos:end="139:20">avctx</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:30">channels</name></name></expr></argument>, <argument pos:start="139:33" pos:end="139:39"><expr pos:start="139:33" pos:end="139:39"><name pos:start="139:33" pos:end="139:39">layout2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:61"><expr pos:start="143:9" pos:end="143:60"><name pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:11">ist</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:32">resample_sample_fmt</name></name>     <operator pos:start="143:38" pos:end="143:38">=</operator> <name pos:start="143:40" pos:end="143:60"><name pos:start="143:40" pos:end="143:52">decoded_frame</name><operator pos:start="143:53" pos:end="143:54">-&gt;</operator><name pos:start="143:55" pos:end="143:60">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:66"><expr pos:start="145:9" pos:end="145:65"><name pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:11">ist</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:33">resample_sample_rate</name></name>    <operator pos:start="145:38" pos:end="145:38">=</operator> <name pos:start="145:40" pos:end="145:65"><name pos:start="145:40" pos:end="145:52">decoded_frame</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:65">sample_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:69"><expr pos:start="147:9" pos:end="147:68"><name pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:11">ist</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:36">resample_channel_layout</name></name> <operator pos:start="147:38" pos:end="147:38">=</operator> <name pos:start="147:40" pos:end="147:68"><name pos:start="147:40" pos:end="147:52">decoded_frame</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:68">channel_layout</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:55"><expr pos:start="149:9" pos:end="149:54"><name pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:11">ist</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:30">resample_channels</name></name>       <operator pos:start="149:38" pos:end="149:38">=</operator> <name pos:start="149:40" pos:end="149:54"><name pos:start="149:40" pos:end="149:44">avctx</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:54">channels</name></name></expr>;</expr_stmt>



        <for pos:start="153:9" pos:end="167:13">for <control pos:start="153:13" pos:end="153:45">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:40"><expr pos:start="153:21" pos:end="153:39"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:39">nb_filtergraphs</name></expr>;</condition> <incr pos:start="153:42" pos:end="153:44"><expr pos:start="153:42" pos:end="153:44"><name pos:start="153:42" pos:end="153:42">i</name><operator pos:start="153:43" pos:end="153:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:13" pos:end="167:13"><block_content pos:start="155:13" pos:end="167:13">

            <if_stmt pos:start="155:13" pos:end="167:13"><if pos:start="155:13" pos:end="167:13">if <condition pos:start="155:16" pos:end="155:57">(<expr pos:start="155:17" pos:end="155:56"><call pos:start="155:17" pos:end="155:56"><name pos:start="155:17" pos:end="155:34">ist_in_filtergraph</name><argument_list pos:start="155:35" pos:end="155:56">(<argument pos:start="155:36" pos:end="155:50"><expr pos:start="155:36" pos:end="155:50"><name pos:start="155:36" pos:end="155:50"><name pos:start="155:36" pos:end="155:47">filtergraphs</name><index pos:start="155:48" pos:end="155:50">[<expr pos:start="155:49" pos:end="155:49"><name pos:start="155:49" pos:end="155:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="155:53" pos:end="155:55"><expr pos:start="155:53" pos:end="155:55"><name pos:start="155:53" pos:end="155:55">ist</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:59" pos:end="167:13">{<block_content pos:start="157:17" pos:end="165:17">

                <decl_stmt pos:start="157:17" pos:end="157:50"><decl pos:start="157:17" pos:end="157:49"><type pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:27">FilterGraph</name> <modifier pos:start="157:29" pos:end="157:29">*</modifier></type><name pos:start="157:30" pos:end="157:31">fg</name> <init pos:start="157:33" pos:end="157:49">= <expr pos:start="157:35" pos:end="157:49"><name pos:start="157:35" pos:end="157:49"><name pos:start="157:35" pos:end="157:46">filtergraphs</name><index pos:start="157:47" pos:end="157:49">[<expr pos:start="157:48" pos:end="157:48"><name pos:start="157:48" pos:end="157:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="159:17" pos:end="165:17"><if pos:start="159:17" pos:end="165:17">if <condition pos:start="159:20" pos:end="159:50">(<expr pos:start="159:21" pos:end="159:49"><call pos:start="159:21" pos:end="159:45"><name pos:start="159:21" pos:end="159:41">configure_filtergraph</name><argument_list pos:start="159:42" pos:end="159:45">(<argument pos:start="159:43" pos:end="159:44"><expr pos:start="159:43" pos:end="159:44"><name pos:start="159:43" pos:end="159:44">fg</name></expr></argument>)</argument_list></call> <operator pos:start="159:47" pos:end="159:47">&lt;</operator> <literal type="number" pos:start="159:49" pos:end="159:49">0</literal></expr>)</condition> <block pos:start="159:52" pos:end="165:17">{<block_content pos:start="161:21" pos:end="163:36">

                    <expr_stmt pos:start="161:21" pos:end="161:82"><expr pos:start="161:21" pos:end="161:81"><call pos:start="161:21" pos:end="161:81"><name pos:start="161:21" pos:end="161:26">av_log</name><argument_list pos:start="161:27" pos:end="161:81">(<argument pos:start="161:28" pos:end="161:31"><expr pos:start="161:28" pos:end="161:31"><name pos:start="161:28" pos:end="161:31">NULL</name></expr></argument>, <argument pos:start="161:34" pos:end="161:45"><expr pos:start="161:34" pos:end="161:45"><name pos:start="161:34" pos:end="161:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="161:48" pos:end="161:80"><expr pos:start="161:48" pos:end="161:80"><literal type="string" pos:start="161:48" pos:end="161:80">"Error reinitializing filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:36"><expr pos:start="163:21" pos:end="163:35"><call pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:32">exit_program</name><argument_list pos:start="163:33" pos:end="163:35">(<argument pos:start="163:34" pos:end="163:34"><expr pos:start="163:34" pos:end="163:34"><literal type="number" pos:start="163:34" pos:end="163:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="173:5" pos:end="175:67">/* if the decoder provides a pts, use it instead of the last packet pts.

       the decoder could be delaying output by a packet or more. */</comment>

    <if_stmt pos:start="177:5" pos:end="201:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:45">(<expr pos:start="177:9" pos:end="177:44"><name pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:21">decoded_frame</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:26">pts</name></name> <operator pos:start="177:28" pos:end="177:29">!=</operator> <name pos:start="177:31" pos:end="177:44">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="177:47" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:46">

        <expr_stmt pos:start="179:9" pos:end="179:129"><expr pos:start="179:9" pos:end="179:128"><name pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:11">ist</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:16">dts</name></name> <operator pos:start="179:18" pos:end="179:18">=</operator> <name pos:start="179:20" pos:end="179:32"><name pos:start="179:20" pos:end="179:22">ist</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:32">next_dts</name></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <name pos:start="179:36" pos:end="179:43"><name pos:start="179:36" pos:end="179:38">ist</name><operator pos:start="179:39" pos:end="179:40">-&gt;</operator><name pos:start="179:41" pos:end="179:43">pts</name></name> <operator pos:start="179:45" pos:end="179:45">=</operator> <name pos:start="179:47" pos:end="179:59"><name pos:start="179:47" pos:end="179:49">ist</name><operator pos:start="179:50" pos:end="179:51">-&gt;</operator><name pos:start="179:52" pos:end="179:59">next_pts</name></name> <operator pos:start="179:61" pos:end="179:61">=</operator> <call pos:start="179:63" pos:end="179:128"><name pos:start="179:63" pos:end="179:74">av_rescale_q</name><argument_list pos:start="179:75" pos:end="179:128">(<argument pos:start="179:76" pos:end="179:93"><expr pos:start="179:76" pos:end="179:93"><name pos:start="179:76" pos:end="179:93"><name pos:start="179:76" pos:end="179:88">decoded_frame</name><operator pos:start="179:89" pos:end="179:90">-&gt;</operator><name pos:start="179:91" pos:end="179:93">pts</name></name></expr></argument>, <argument pos:start="179:96" pos:end="179:111"><expr pos:start="179:96" pos:end="179:111"><name pos:start="179:96" pos:end="179:111"><name pos:start="179:96" pos:end="179:100">avctx</name><operator pos:start="179:101" pos:end="179:102">-&gt;</operator><name pos:start="179:103" pos:end="179:111">time_base</name></name></expr></argument>, <argument pos:start="179:114" pos:end="179:127"><expr pos:start="179:114" pos:end="179:127"><name pos:start="179:114" pos:end="179:127">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:46"><expr pos:start="181:9" pos:end="181:45"><name pos:start="181:9" pos:end="181:24">decoded_frame_tb</name>   <operator pos:start="181:28" pos:end="181:28">=</operator> <name pos:start="181:30" pos:end="181:45"><name pos:start="181:30" pos:end="181:34">avctx</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:45">time_base</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="183:7" pos:end="189:5">else if <condition pos:start="183:15" pos:end="183:56">(<expr pos:start="183:16" pos:end="183:55"><name pos:start="183:16" pos:end="183:37"><name pos:start="183:16" pos:end="183:28">decoded_frame</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:37">pkt_pts</name></name> <operator pos:start="183:39" pos:end="183:40">!=</operator> <name pos:start="183:42" pos:end="183:55">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="183:58" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:48">

        <expr_stmt pos:start="185:9" pos:end="185:52"><expr pos:start="185:9" pos:end="185:51"><name pos:start="185:9" pos:end="185:26"><name pos:start="185:9" pos:end="185:21">decoded_frame</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:26">pts</name></name> <operator pos:start="185:28" pos:end="185:28">=</operator> <name pos:start="185:30" pos:end="185:51"><name pos:start="185:30" pos:end="185:42">decoded_frame</name><operator pos:start="185:43" pos:end="185:44">-&gt;</operator><name pos:start="185:45" pos:end="185:51">pkt_pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:48"><expr pos:start="187:9" pos:end="187:47"><name pos:start="187:9" pos:end="187:24">decoded_frame_tb</name>   <operator pos:start="187:28" pos:end="187:28">=</operator> <name pos:start="187:30" pos:end="187:47"><name pos:start="187:30" pos:end="187:32">ist</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:36">st</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:47">time_base</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="189:7" pos:end="195:5">else if <condition pos:start="189:15" pos:end="189:42">(<expr pos:start="189:16" pos:end="189:41"><name pos:start="189:16" pos:end="189:23"><name pos:start="189:16" pos:end="189:18">pkt</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:23">pts</name></name> <operator pos:start="189:25" pos:end="189:26">!=</operator> <name pos:start="189:28" pos:end="189:41">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="189:44" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:48">

        <expr_stmt pos:start="191:9" pos:end="191:38"><expr pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:26"><name pos:start="191:9" pos:end="191:21">decoded_frame</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:26">pts</name></name> <operator pos:start="191:28" pos:end="191:28">=</operator> <name pos:start="191:30" pos:end="191:37"><name pos:start="191:30" pos:end="191:32">pkt</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:37">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:48"><expr pos:start="193:9" pos:end="193:47"><name pos:start="193:9" pos:end="193:24">decoded_frame_tb</name>   <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:47"><name pos:start="193:30" pos:end="193:32">ist</name><operator pos:start="193:33" pos:end="193:34">-&gt;</operator><name pos:start="193:35" pos:end="193:36">st</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:47">time_base</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="195:6" pos:end="201:5">else <block pos:start="195:11" pos:end="201:5">{<block_content pos:start="197:9" pos:end="199:44">

        <expr_stmt pos:start="197:9" pos:end="197:38"><expr pos:start="197:9" pos:end="197:37"><name pos:start="197:9" pos:end="197:26"><name pos:start="197:9" pos:end="197:21">decoded_frame</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:26">pts</name></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <name pos:start="197:30" pos:end="197:37"><name pos:start="197:30" pos:end="197:32">ist</name><operator pos:start="197:33" pos:end="197:34">-&gt;</operator><name pos:start="197:35" pos:end="197:37">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:44"><expr pos:start="199:9" pos:end="199:43"><name pos:start="199:9" pos:end="199:24">decoded_frame_tb</name>   <operator pos:start="199:28" pos:end="199:28">=</operator> <name pos:start="199:30" pos:end="199:43">AV_TIME_BASE_Q</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:40"><expr pos:start="203:5" pos:end="203:39"><name pos:start="203:5" pos:end="203:12"><name pos:start="203:5" pos:end="203:7">pkt</name><operator pos:start="203:8" pos:end="203:9">-&gt;</operator><name pos:start="203:10" pos:end="203:12">pts</name></name>           <operator pos:start="203:24" pos:end="203:24">=</operator> <name pos:start="203:26" pos:end="203:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <if_stmt pos:start="205:5" pos:end="211:83"><if pos:start="205:5" pos:end="211:83">if <condition pos:start="205:8" pos:end="205:45">(<expr pos:start="205:9" pos:end="205:44"><name pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:21">decoded_frame</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:26">pts</name></name> <operator pos:start="205:28" pos:end="205:29">!=</operator> <name pos:start="205:31" pos:end="205:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="211:83"><block_content pos:start="207:9" pos:end="211:83">

        <expr_stmt pos:start="207:9" pos:end="211:83"><expr pos:start="207:9" pos:end="211:82"><name pos:start="207:9" pos:end="207:26"><name pos:start="207:9" pos:end="207:21">decoded_frame</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:26">pts</name></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <macro pos:start="207:30" pos:end="211:82"><name pos:start="207:30" pos:end="207:45">av_rescale_delta</name><argument_list pos:start="207:46" pos:end="211:82">(<argument pos:start="207:47" pos:end="207:62">decoded_frame_tb</argument>, <argument pos:start="207:65" pos:end="207:82">decoded_frame-&gt;pts</argument>,

                                              <argument pos:start="209:47" pos:end="209:60">(AVRational){<literal type="number" pos:start="209:60" pos:end="209:60">1</literal></argument>, <argument pos:start="209:63" pos:end="209:81">avctx-&gt;sample_rate}</argument>, <argument pos:start="209:84" pos:end="209:108">decoded_frame-&gt;nb_samples</argument>, <argument pos:start="209:111" pos:end="209:144">&amp;ist-&gt;filter_in_rescale_delta_last</argument>,

                                              <argument pos:start="211:47" pos:end="211:60">(AVRational){<literal type="number" pos:start="211:60" pos:end="211:60">1</literal></argument>, <argument pos:start="211:63" pos:end="211:81">avctx-&gt;sample_rate}</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:48"><expr pos:start="213:5" pos:end="213:47"><name pos:start="213:5" pos:end="213:19"><name pos:start="213:5" pos:end="213:7">ist</name><operator pos:start="213:8" pos:end="213:9">-&gt;</operator><name pos:start="213:10" pos:end="213:19">nb_samples</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:47"><name pos:start="213:23" pos:end="213:35">decoded_frame</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:47">nb_samples</name></name></expr>;</expr_stmt>

    <for pos:start="215:5" pos:end="243:5">for <control pos:start="215:9" pos:end="215:41">(<init pos:start="215:10" pos:end="215:15"><expr pos:start="215:10" pos:end="215:14"><name pos:start="215:10" pos:end="215:10">i</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>;</init> <condition pos:start="215:17" pos:end="215:36"><expr pos:start="215:17" pos:end="215:35"><name pos:start="215:17" pos:end="215:17">i</name> <operator pos:start="215:19" pos:end="215:19">&lt;</operator> <name pos:start="215:21" pos:end="215:35"><name pos:start="215:21" pos:end="215:23">ist</name><operator pos:start="215:24" pos:end="215:25">-&gt;</operator><name pos:start="215:26" pos:end="215:35">nb_filters</name></name></expr>;</condition> <incr pos:start="215:38" pos:end="215:40"><expr pos:start="215:38" pos:end="215:40"><name pos:start="215:38" pos:end="215:38">i</name><operator pos:start="215:39" pos:end="215:40">++</operator></expr></incr>)</control> <block pos:start="215:43" pos:end="243:5">{<block_content pos:start="217:9" pos:end="241:18">

        <if_stmt pos:start="217:9" pos:end="229:30"><if pos:start="217:9" pos:end="227:9">if <condition pos:start="217:12" pos:end="217:36">(<expr pos:start="217:13" pos:end="217:35"><name pos:start="217:13" pos:end="217:13">i</name> <operator pos:start="217:15" pos:end="217:15">&lt;</operator> <name pos:start="217:17" pos:end="217:31"><name pos:start="217:17" pos:end="217:19">ist</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:31">nb_filters</name></name> <operator pos:start="217:33" pos:end="217:33">-</operator> <literal type="number" pos:start="217:35" pos:end="217:35">1</literal></expr>)</condition> <block pos:start="217:38" pos:end="227:9">{<block_content pos:start="219:13" pos:end="225:22">

            <expr_stmt pos:start="219:13" pos:end="219:34"><expr pos:start="219:13" pos:end="219:33"><name pos:start="219:13" pos:end="219:13">f</name> <operator pos:start="219:15" pos:end="219:15">=</operator> <name pos:start="219:17" pos:end="219:33"><name pos:start="219:17" pos:end="219:19">ist</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:33">filter_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:49"><expr pos:start="221:13" pos:end="221:48"><name pos:start="221:13" pos:end="221:15">err</name> <operator pos:start="221:17" pos:end="221:17">=</operator> <call pos:start="221:19" pos:end="221:48"><name pos:start="221:19" pos:end="221:30">av_frame_ref</name><argument_list pos:start="221:31" pos:end="221:48">(<argument pos:start="221:32" pos:end="221:32"><expr pos:start="221:32" pos:end="221:32"><name pos:start="221:32" pos:end="221:32">f</name></expr></argument>, <argument pos:start="221:35" pos:end="221:47"><expr pos:start="221:35" pos:end="221:47"><name pos:start="221:35" pos:end="221:47">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="225:22"><if pos:start="223:13" pos:end="225:22">if <condition pos:start="223:16" pos:end="223:24">(<expr pos:start="223:17" pos:end="223:23"><name pos:start="223:17" pos:end="223:19">err</name> <operator pos:start="223:21" pos:end="223:21">&lt;</operator> <literal type="number" pos:start="223:23" pos:end="223:23">0</literal></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:22"><block_content pos:start="225:17" pos:end="225:22">

                <break pos:start="225:17" pos:end="225:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="227:11" pos:end="229:30">else<block type="pseudo" pos:start="229:13" pos:end="229:30"><block_content pos:start="229:13" pos:end="229:30">

            <expr_stmt pos:start="229:13" pos:end="229:30"><expr pos:start="229:13" pos:end="229:29"><name pos:start="229:13" pos:end="229:13">f</name> <operator pos:start="229:15" pos:end="229:15">=</operator> <name pos:start="229:17" pos:end="229:29">decoded_frame</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="231:9" pos:end="233:61"><expr pos:start="231:9" pos:end="233:60"><name pos:start="231:9" pos:end="231:11">err</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="233:60"><name pos:start="231:15" pos:end="231:42">av_buffersrc_add_frame_flags</name><argument_list pos:start="231:43" pos:end="233:60">(<argument pos:start="231:44" pos:end="231:66"><expr pos:start="231:44" pos:end="231:66"><name pos:start="231:44" pos:end="231:58"><name pos:start="231:44" pos:end="231:46">ist</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:55">filters</name><index pos:start="231:56" pos:end="231:58">[<expr pos:start="231:57" pos:end="231:57"><name pos:start="231:57" pos:end="231:57">i</name></expr>]</index></name><operator pos:start="231:59" pos:end="231:60">-&gt;</operator><name pos:start="231:61" pos:end="231:66">filter</name></expr></argument>, <argument pos:start="231:69" pos:end="231:69"><expr pos:start="231:69" pos:end="231:69"><name pos:start="231:69" pos:end="231:69">f</name></expr></argument>,

                                     <argument pos:start="233:38" pos:end="233:59"><expr pos:start="233:38" pos:end="233:59"><name pos:start="233:38" pos:end="233:59">AV_BUFFERSRC_FLAG_PUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="237:20"><if pos:start="235:9" pos:end="237:20">if <condition pos:start="235:12" pos:end="235:31">(<expr pos:start="235:13" pos:end="235:30"><name pos:start="235:13" pos:end="235:15">err</name> <operator pos:start="235:17" pos:end="235:18">==</operator> <name pos:start="235:20" pos:end="235:30">AVERROR_EOF</name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:20"><block_content pos:start="237:13" pos:end="237:20">

            <expr_stmt pos:start="237:13" pos:end="237:20"><expr pos:start="237:13" pos:end="237:19"><name pos:start="237:13" pos:end="237:15">err</name> <operator pos:start="237:17" pos:end="237:17">=</operator> <literal type="number" pos:start="237:19" pos:end="237:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="237:22" pos:end="237:33">/* ignore */</comment>

        <if_stmt pos:start="239:9" pos:end="241:18"><if pos:start="239:9" pos:end="241:18">if <condition pos:start="239:12" pos:end="239:20">(<expr pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">err</name> <operator pos:start="239:17" pos:end="239:17">&lt;</operator> <literal type="number" pos:start="239:19" pos:end="239:19">0</literal></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:18"><block_content pos:start="241:13" pos:end="241:18">

            <break pos:start="241:13" pos:end="241:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="245:5" pos:end="245:40"><expr pos:start="245:5" pos:end="245:39"><name pos:start="245:5" pos:end="245:22"><name pos:start="245:5" pos:end="245:17">decoded_frame</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:22">pts</name></name> <operator pos:start="245:24" pos:end="245:24">=</operator> <name pos:start="245:26" pos:end="245:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:38"><expr pos:start="249:5" pos:end="249:37"><call pos:start="249:5" pos:end="249:37"><name pos:start="249:5" pos:end="249:18">av_frame_unref</name><argument_list pos:start="249:19" pos:end="249:37">(<argument pos:start="249:20" pos:end="249:36"><expr pos:start="249:20" pos:end="249:36"><name pos:start="249:20" pos:end="249:36"><name pos:start="249:20" pos:end="249:22">ist</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:36">filter_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:34"><expr pos:start="251:5" pos:end="251:33"><call pos:start="251:5" pos:end="251:33"><name pos:start="251:5" pos:end="251:18">av_frame_unref</name><argument_list pos:start="251:19" pos:end="251:33">(<argument pos:start="251:20" pos:end="251:32"><expr pos:start="251:20" pos:end="251:32"><name pos:start="251:20" pos:end="251:32">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="253:5" pos:end="253:31">return <expr pos:start="253:12" pos:end="253:30"><ternary pos:start="253:12" pos:end="253:30"><condition pos:start="253:12" pos:end="253:20"><expr pos:start="253:12" pos:end="253:18"><name pos:start="253:12" pos:end="253:14">err</name> <operator pos:start="253:16" pos:end="253:16">&lt;</operator> <literal type="number" pos:start="253:18" pos:end="253:18">0</literal></expr> ?</condition><then pos:start="253:22" pos:end="253:24"> <expr pos:start="253:22" pos:end="253:24"><name pos:start="253:22" pos:end="253:24">err</name></expr> </then><else pos:start="253:26" pos:end="253:30">: <expr pos:start="253:28" pos:end="253:30"><name pos:start="253:28" pos:end="253:30">ret</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
