<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5088.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">qemu_ram_free_from_ptr</name><parameter_list pos:start="1:28" pos:end="1:44">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:38">ram_addr_t</name></type> <name pos:start="1:40" pos:end="1:43">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:32">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RAMBlock</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">block</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:60">/* This assumes the iothread lock is taken here too.  */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:27">qemu_mutex_lock_ramlist</name><argument_list pos:start="11:28" pos:end="11:29">()</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:49">(<argument pos:start="13:20" pos:end="13:24">block</argument>, <argument pos:start="13:27" pos:end="13:42">&amp;ram_list.blocks</argument>, <argument pos:start="13:45" pos:end="13:48">next</argument>)</argument_list></macro> <block pos:start="13:51" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:9">

        <if_stmt pos:start="15:9" pos:end="27:9"><if pos:start="15:9" pos:end="27:9">if <condition pos:start="15:12" pos:end="15:34">(<expr pos:start="15:13" pos:end="15:33"><name pos:start="15:13" pos:end="15:16">addr</name> <operator pos:start="15:18" pos:end="15:19">==</operator> <name pos:start="15:21" pos:end="15:33"><name pos:start="15:21" pos:end="15:25">block</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:33">offset</name></name></expr>)</condition> <block pos:start="15:36" pos:end="27:9">{<block_content pos:start="17:13" pos:end="25:18">

            <expr_stmt pos:start="17:13" pos:end="17:57"><expr pos:start="17:13" pos:end="17:56"><call pos:start="17:13" pos:end="17:56"><name pos:start="17:13" pos:end="17:25">QTAILQ_REMOVE</name><argument_list pos:start="17:26" pos:end="17:56">(<argument pos:start="17:27" pos:end="17:42"><expr pos:start="17:27" pos:end="17:42"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:35">ram_list</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:42">blocks</name></name></expr></argument>, <argument pos:start="17:45" pos:end="17:49"><expr pos:start="17:45" pos:end="17:49"><name pos:start="17:45" pos:end="17:49">block</name></expr></argument>, <argument pos:start="17:52" pos:end="17:55"><expr pos:start="17:52" pos:end="17:55"><name pos:start="17:52" pos:end="17:55">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:38"><expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:20">ram_list</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:30">mru_block</name></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <name pos:start="19:34" pos:end="19:37">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:20">ram_list</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:28">version</name></name><operator pos:start="21:29" pos:end="21:30">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><call pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:18">g_free</name><argument_list pos:start="23:19" pos:end="23:25">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:29">qemu_mutex_unlock_ramlist</name><argument_list pos:start="31:30" pos:end="31:31">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
