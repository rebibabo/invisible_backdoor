<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12849.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">address_space_init</name><parameter_list pos:start="1:24" pos:end="1:79">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:36">AddressSpace</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">as</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:54">MemoryRegion</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">root</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:78"><decl pos:start="1:63" pos:end="1:78"><type pos:start="1:63" pos:end="1:78"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:72">char</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:39">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:38">(<expr pos:start="5:9" pos:end="5:37"><call pos:start="5:9" pos:end="5:37"><name pos:start="5:9" pos:end="5:20">QTAILQ_EMPTY</name><argument_list pos:start="5:21" pos:end="5:37">(<argument pos:start="5:22" pos:end="5:36"><expr pos:start="5:22" pos:end="5:36"><operator pos:start="5:22" pos:end="5:22">&amp;</operator><name pos:start="5:23" pos:end="5:36">address_spaces</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:40" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:22">

        <expr_stmt pos:start="7:9" pos:end="7:22"><expr pos:start="7:9" pos:end="7:21"><call pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:19">memory_init</name><argument_list pos:start="7:20" pos:end="7:21">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:35">memory_region_transaction_begin</name><argument_list pos:start="13:36" pos:end="13:37">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:6">as</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:12">root</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:19">root</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:6">as</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:19">current_map</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:40"><name pos:start="17:23" pos:end="17:27">g_new</name><argument_list pos:start="17:28" pos:end="17:40">(<argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:36">FlatView</name></expr></argument>, <argument pos:start="17:39" pos:end="17:39"><expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:17">flatview_init</name><argument_list pos:start="19:18" pos:end="19:34">(<argument pos:start="19:19" pos:end="19:33"><expr pos:start="19:19" pos:end="19:33"><name pos:start="19:19" pos:end="19:33"><name pos:start="19:19" pos:end="19:20">as</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:33">current_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:6">as</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:20">ioeventfd_nb</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:6">as</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:18">ioeventfds</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:65"><expr pos:start="25:5" pos:end="25:64"><call pos:start="25:5" pos:end="25:64"><name pos:start="25:5" pos:end="25:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="25:23" pos:end="25:64">(<argument pos:start="25:24" pos:end="25:38"><expr pos:start="25:24" pos:end="25:38"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:38">address_spaces</name></expr></argument>, <argument pos:start="25:41" pos:end="25:42"><expr pos:start="25:41" pos:end="25:42"><name pos:start="25:41" pos:end="25:42">as</name></expr></argument>, <argument pos:start="25:45" pos:end="25:63"><expr pos:start="25:45" pos:end="25:63"><name pos:start="25:45" pos:end="25:63">address_spaces_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:6">as</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:12">name</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:50"><name pos:start="27:16" pos:end="27:23">g_strdup</name><argument_list pos:start="27:24" pos:end="27:50">(<argument pos:start="27:25" pos:end="27:49"><expr pos:start="27:25" pos:end="27:49"><ternary pos:start="27:25" pos:end="27:49"><condition pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">name</name></expr> ?</condition><then pos:start="27:32" pos:end="27:35"> <expr pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:35">name</name></expr> </then><else pos:start="27:37" pos:end="27:49">: <expr pos:start="27:39" pos:end="27:49"><literal type="string" pos:start="27:39" pos:end="27:49">"anonymous"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:31">address_space_init_dispatch</name><argument_list pos:start="29:32" pos:end="29:35">(<argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:32">memory_region_update_pending</name> <operator pos:start="31:34" pos:end="31:35">|=</operator> <name pos:start="31:37" pos:end="31:49"><name pos:start="31:37" pos:end="31:40">root</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:49">enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:36">memory_region_transaction_commit</name><argument_list pos:start="33:37" pos:end="33:38">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
