<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7506.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">disas_ldst_excl</name><parameter_list pos:start="1:28" pos:end="1:59">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">DisasContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:58">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rt</name> <init pos:start="5:12" pos:end="5:34">= <expr pos:start="5:14" pos:end="5:34"><call pos:start="5:14" pos:end="5:34"><name pos:start="5:14" pos:end="5:22">extract32</name><argument_list pos:start="5:23" pos:end="5:34">(<argument pos:start="5:24" pos:end="5:27"><expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">insn</name></expr></argument>, <argument pos:start="5:30" pos:end="5:30"><expr pos:start="5:30" pos:end="5:30"><literal type="number" pos:start="5:30" pos:end="5:30">0</literal></expr></argument>, <argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rn</name> <init pos:start="7:12" pos:end="7:34">= <expr pos:start="7:14" pos:end="7:34"><call pos:start="7:14" pos:end="7:34"><name pos:start="7:14" pos:end="7:22">extract32</name><argument_list pos:start="7:23" pos:end="7:34">(<argument pos:start="7:24" pos:end="7:27"><expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">insn</name></expr></argument>, <argument pos:start="7:30" pos:end="7:30"><expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">5</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:33"><expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">rt2</name> <init pos:start="9:13" pos:end="9:36">= <expr pos:start="9:15" pos:end="9:36"><call pos:start="9:15" pos:end="9:36"><name pos:start="9:15" pos:end="9:23">extract32</name><argument_list pos:start="9:24" pos:end="9:36">(<argument pos:start="9:25" pos:end="9:28"><expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">insn</name></expr></argument>, <argument pos:start="9:31" pos:end="9:32"><expr pos:start="9:31" pos:end="9:32"><literal type="number" pos:start="9:31" pos:end="9:32">10</literal></expr></argument>, <argument pos:start="9:35" pos:end="9:35"><expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">is_lasr</name> <init pos:start="11:17" pos:end="11:40">= <expr pos:start="11:19" pos:end="11:40"><call pos:start="11:19" pos:end="11:40"><name pos:start="11:19" pos:end="11:27">extract32</name><argument_list pos:start="11:28" pos:end="11:40">(<argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">insn</name></expr></argument>, <argument pos:start="11:35" pos:end="11:36"><expr pos:start="11:35" pos:end="11:36"><literal type="number" pos:start="11:35" pos:end="11:36">15</literal></expr></argument>, <argument pos:start="11:39" pos:end="11:39"><expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">rs</name> <init pos:start="13:12" pos:end="13:35">= <expr pos:start="13:14" pos:end="13:35"><call pos:start="13:14" pos:end="13:35"><name pos:start="13:14" pos:end="13:22">extract32</name><argument_list pos:start="13:23" pos:end="13:35">(<argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">insn</name></expr></argument>, <argument pos:start="13:30" pos:end="13:31"><expr pos:start="13:30" pos:end="13:31"><literal type="number" pos:start="13:30" pos:end="13:31">16</literal></expr></argument>, <argument pos:start="13:34" pos:end="13:34"><expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">is_pair</name> <init pos:start="15:17" pos:end="15:40">= <expr pos:start="15:19" pos:end="15:40"><call pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:27">extract32</name><argument_list pos:start="15:28" pos:end="15:40">(<argument pos:start="15:29" pos:end="15:32"><expr pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:32">insn</name></expr></argument>, <argument pos:start="15:35" pos:end="15:36"><expr pos:start="15:35" pos:end="15:36"><literal type="number" pos:start="15:35" pos:end="15:36">21</literal></expr></argument>, <argument pos:start="15:39" pos:end="15:39"><expr pos:start="15:39" pos:end="15:39"><literal type="number" pos:start="15:39" pos:end="15:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">is_store</name> <init pos:start="17:18" pos:end="17:42">= <expr pos:start="17:20" pos:end="17:42"><operator pos:start="17:20" pos:end="17:20">!</operator><call pos:start="17:21" pos:end="17:42"><name pos:start="17:21" pos:end="17:29">extract32</name><argument_list pos:start="17:30" pos:end="17:42">(<argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">insn</name></expr></argument>, <argument pos:start="17:37" pos:end="17:38"><expr pos:start="17:37" pos:end="17:38"><literal type="number" pos:start="17:37" pos:end="17:38">22</literal></expr></argument>, <argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">is_excl</name> <init pos:start="19:17" pos:end="19:41">= <expr pos:start="19:19" pos:end="19:41"><operator pos:start="19:19" pos:end="19:19">!</operator><call pos:start="19:20" pos:end="19:41"><name pos:start="19:20" pos:end="19:28">extract32</name><argument_list pos:start="19:29" pos:end="19:41">(<argument pos:start="19:30" pos:end="19:33"><expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">insn</name></expr></argument>, <argument pos:start="19:36" pos:end="19:37"><expr pos:start="19:36" pos:end="19:37"><literal type="number" pos:start="19:36" pos:end="19:37">23</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:40"><expr pos:start="19:40" pos:end="19:40"><literal type="number" pos:start="19:40" pos:end="19:40">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:38"><decl pos:start="21:5" pos:end="21:37"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">size</name> <init pos:start="21:14" pos:end="21:37">= <expr pos:start="21:16" pos:end="21:37"><call pos:start="21:16" pos:end="21:37"><name pos:start="21:16" pos:end="21:24">extract32</name><argument_list pos:start="21:25" pos:end="21:37">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">insn</name></expr></argument>, <argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><literal type="number" pos:start="21:32" pos:end="21:33">30</literal></expr></argument>, <argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">TCGv_i64</name></type> <name pos:start="23:14" pos:end="23:21">tcg_addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="29:30">(<expr pos:start="27:9" pos:end="29:29"><operator pos:start="27:9" pos:end="27:9">(</operator><operator pos:start="27:10" pos:end="27:10">!</operator><name pos:start="27:11" pos:end="27:17">is_excl</name> <operator pos:start="27:19" pos:end="27:20">&amp;&amp;</operator> <operator pos:start="27:22" pos:end="27:22">!</operator><name pos:start="27:23" pos:end="27:29">is_lasr</name><operator pos:start="27:30" pos:end="27:30">)</operator> <operator pos:start="27:32" pos:end="27:33">||</operator>

        <operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:16">is_pair</name> <operator pos:start="29:18" pos:end="29:19">&amp;&amp;</operator> <name pos:start="29:21" pos:end="29:24">size</name> <operator pos:start="29:26" pos:end="29:26">&lt;</operator> <literal type="number" pos:start="29:28" pos:end="29:28">2</literal><operator pos:start="29:29" pos:end="29:29">)</operator></expr>)</condition> <block pos:start="29:32" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><call pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:28">unallocated_encoding</name><argument_list pos:start="31:29" pos:end="31:31">(<argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:10">rn</name> <operator pos:start="39:12" pos:end="39:13">==</operator> <literal type="number" pos:start="39:15" pos:end="39:16">31</literal></expr>)</condition> <block pos:start="39:19" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:34">

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><call pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:30">gen_check_sp_alignment</name><argument_list pos:start="41:31" pos:end="41:33">(<argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:12">tcg_addr</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:40"><name pos:start="45:16" pos:end="45:30">read_cpu_reg_sp</name><argument_list pos:start="45:31" pos:end="45:40">(<argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">s</name></expr></argument>, <argument pos:start="45:35" pos:end="45:36"><expr pos:start="45:35" pos:end="45:36"><name pos:start="45:35" pos:end="45:36">rn</name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="53:7">/* Note that since TCG is single threaded load-acquire/store-release

     * semantics require no extra if (is_lasr) { ... } handling.

     */</comment>



    <if_stmt pos:start="57:5" pos:end="103:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15">is_excl</name></expr>)</condition> <block pos:start="57:18" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:9">

        <if_stmt pos:start="59:9" pos:end="69:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:21">is_store</name></expr>)</condition> <block pos:start="59:24" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:68">

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:22">is_ldex</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:29">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:68"><expr pos:start="63:13" pos:end="63:67"><call pos:start="63:13" pos:end="63:67"><name pos:start="63:13" pos:end="63:30">gen_load_exclusive</name><argument_list pos:start="63:31" pos:end="63:67">(<argument pos:start="63:32" pos:end="63:32"><expr pos:start="63:32" pos:end="63:32"><name pos:start="63:32" pos:end="63:32">s</name></expr></argument>, <argument pos:start="63:35" pos:end="63:36"><expr pos:start="63:35" pos:end="63:36"><name pos:start="63:35" pos:end="63:36">rt</name></expr></argument>, <argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><name pos:start="63:39" pos:end="63:41">rt2</name></expr></argument>, <argument pos:start="63:44" pos:end="63:51"><expr pos:start="63:44" pos:end="63:51"><name pos:start="63:44" pos:end="63:51">tcg_addr</name></expr></argument>, <argument pos:start="63:54" pos:end="63:57"><expr pos:start="63:54" pos:end="63:57"><name pos:start="63:54" pos:end="63:57">size</name></expr></argument>, <argument pos:start="63:60" pos:end="63:66"><expr pos:start="63:60" pos:end="63:66"><name pos:start="63:60" pos:end="63:66">is_pair</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="69:9">else <block pos:start="65:16" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:73">

            <expr_stmt pos:start="67:13" pos:end="67:73"><expr pos:start="67:13" pos:end="67:72"><call pos:start="67:13" pos:end="67:72"><name pos:start="67:13" pos:end="67:31">gen_store_exclusive</name><argument_list pos:start="67:32" pos:end="67:72">(<argument pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><name pos:start="67:33" pos:end="67:33">s</name></expr></argument>, <argument pos:start="67:36" pos:end="67:37"><expr pos:start="67:36" pos:end="67:37"><name pos:start="67:36" pos:end="67:37">rs</name></expr></argument>, <argument pos:start="67:40" pos:end="67:41"><expr pos:start="67:40" pos:end="67:41"><name pos:start="67:40" pos:end="67:41">rt</name></expr></argument>, <argument pos:start="67:44" pos:end="67:46"><expr pos:start="67:44" pos:end="67:46"><name pos:start="67:44" pos:end="67:46">rt2</name></expr></argument>, <argument pos:start="67:49" pos:end="67:56"><expr pos:start="67:49" pos:end="67:56"><name pos:start="67:49" pos:end="67:56">tcg_addr</name></expr></argument>, <argument pos:start="67:59" pos:end="67:62"><expr pos:start="67:59" pos:end="67:62"><name pos:start="67:59" pos:end="67:62">size</name></expr></argument>, <argument pos:start="67:65" pos:end="67:71"><expr pos:start="67:65" pos:end="67:71"><name pos:start="67:65" pos:end="67:71">is_pair</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="103:5">else <block pos:start="71:12" pos:end="103:5">{<block_content pos:start="73:9" pos:end="101:9">

        <decl_stmt pos:start="73:9" pos:end="73:41"><decl pos:start="73:9" pos:end="73:40"><type pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:16">TCGv_i64</name></type> <name pos:start="73:18" pos:end="73:23">tcg_rt</name> <init pos:start="73:25" pos:end="73:40">= <expr pos:start="73:27" pos:end="73:40"><call pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:33">cpu_reg</name><argument_list pos:start="73:34" pos:end="73:40">(<argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">s</name></expr></argument>, <argument pos:start="73:38" pos:end="73:39"><expr pos:start="73:38" pos:end="73:39"><name pos:start="73:38" pos:end="73:39">rt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="75:9" pos:end="83:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:21">(<expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:20">is_store</name></expr>)</condition> <block pos:start="75:23" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:49">

            <expr_stmt pos:start="77:13" pos:end="77:49"><expr pos:start="77:13" pos:end="77:48"><call pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:21">do_gpr_st</name><argument_list pos:start="77:22" pos:end="77:48">(<argument pos:start="77:23" pos:end="77:23"><expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">s</name></expr></argument>, <argument pos:start="77:26" pos:end="77:31"><expr pos:start="77:26" pos:end="77:31"><name pos:start="77:26" pos:end="77:31">tcg_rt</name></expr></argument>, <argument pos:start="77:34" pos:end="77:41"><expr pos:start="77:34" pos:end="77:41"><name pos:start="77:34" pos:end="77:41">tcg_addr</name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="83:9">else <block pos:start="79:16" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:63">

            <expr_stmt pos:start="81:13" pos:end="81:63"><expr pos:start="81:13" pos:end="81:62"><call pos:start="81:13" pos:end="81:62"><name pos:start="81:13" pos:end="81:21">do_gpr_ld</name><argument_list pos:start="81:22" pos:end="81:62">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:31"><expr pos:start="81:26" pos:end="81:31"><name pos:start="81:26" pos:end="81:31">tcg_rt</name></expr></argument>, <argument pos:start="81:34" pos:end="81:41"><expr pos:start="81:34" pos:end="81:41"><name pos:start="81:34" pos:end="81:41">tcg_addr</name></expr></argument>, <argument pos:start="81:44" pos:end="81:47"><expr pos:start="81:44" pos:end="81:47"><name pos:start="81:44" pos:end="81:47">size</name></expr></argument>, <argument pos:start="81:50" pos:end="81:54"><expr pos:start="81:50" pos:end="81:54"><name pos:start="81:50" pos:end="81:54">false</name></expr></argument>, <argument pos:start="81:57" pos:end="81:61"><expr pos:start="81:57" pos:end="81:61"><name pos:start="81:57" pos:end="81:61">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="85:9" pos:end="101:9"><if pos:start="85:9" pos:end="101:9">if <condition pos:start="85:12" pos:end="85:20">(<expr pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:19">is_pair</name></expr>)</condition> <block pos:start="85:22" pos:end="101:9">{<block_content pos:start="87:13" pos:end="99:13">

            <decl_stmt pos:start="87:13" pos:end="87:46"><decl pos:start="87:13" pos:end="87:45"><type pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:20">TCGv_i64</name></type> <name pos:start="87:22" pos:end="87:28">tcg_rt2</name> <init pos:start="87:30" pos:end="87:45">= <expr pos:start="87:32" pos:end="87:45"><call pos:start="87:32" pos:end="87:45"><name pos:start="87:32" pos:end="87:38">cpu_reg</name><argument_list pos:start="87:39" pos:end="87:45">(<argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">s</name></expr></argument>, <argument pos:start="87:43" pos:end="87:44"><expr pos:start="87:43" pos:end="87:44"><name pos:start="87:43" pos:end="87:44">rt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:60"><expr pos:start="89:13" pos:end="89:59"><call pos:start="89:13" pos:end="89:59"><name pos:start="89:13" pos:end="89:28">tcg_gen_addi_i64</name><argument_list pos:start="89:29" pos:end="89:59">(<argument pos:start="89:30" pos:end="89:37"><expr pos:start="89:30" pos:end="89:37"><name pos:start="89:30" pos:end="89:37">tcg_addr</name></expr></argument>, <argument pos:start="89:40" pos:end="89:47"><expr pos:start="89:40" pos:end="89:47"><name pos:start="89:40" pos:end="89:47">tcg_addr</name></expr></argument>, <argument pos:start="89:50" pos:end="89:58"><expr pos:start="89:50" pos:end="89:58"><literal type="number" pos:start="89:50" pos:end="89:50">1</literal> <operator pos:start="89:52" pos:end="89:53">&lt;&lt;</operator> <name pos:start="89:55" pos:end="89:58">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="99:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:25">(<expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:24">is_store</name></expr>)</condition> <block pos:start="91:27" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:54">

                <expr_stmt pos:start="93:17" pos:end="93:54"><expr pos:start="93:17" pos:end="93:53"><call pos:start="93:17" pos:end="93:53"><name pos:start="93:17" pos:end="93:25">do_gpr_st</name><argument_list pos:start="93:26" pos:end="93:53">(<argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">s</name></expr></argument>, <argument pos:start="93:30" pos:end="93:36"><expr pos:start="93:30" pos:end="93:36"><name pos:start="93:30" pos:end="93:36">tcg_rt2</name></expr></argument>, <argument pos:start="93:39" pos:end="93:46"><expr pos:start="93:39" pos:end="93:46"><name pos:start="93:39" pos:end="93:46">tcg_addr</name></expr></argument>, <argument pos:start="93:49" pos:end="93:52"><expr pos:start="93:49" pos:end="93:52"><name pos:start="93:49" pos:end="93:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="95:15" pos:end="99:13">else <block pos:start="95:20" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:68">

                <expr_stmt pos:start="97:17" pos:end="97:68"><expr pos:start="97:17" pos:end="97:67"><call pos:start="97:17" pos:end="97:67"><name pos:start="97:17" pos:end="97:25">do_gpr_ld</name><argument_list pos:start="97:26" pos:end="97:67">(<argument pos:start="97:27" pos:end="97:27"><expr pos:start="97:27" pos:end="97:27"><name pos:start="97:27" pos:end="97:27">s</name></expr></argument>, <argument pos:start="97:30" pos:end="97:36"><expr pos:start="97:30" pos:end="97:36"><name pos:start="97:30" pos:end="97:36">tcg_rt2</name></expr></argument>, <argument pos:start="97:39" pos:end="97:46"><expr pos:start="97:39" pos:end="97:46"><name pos:start="97:39" pos:end="97:46">tcg_addr</name></expr></argument>, <argument pos:start="97:49" pos:end="97:52"><expr pos:start="97:49" pos:end="97:52"><name pos:start="97:49" pos:end="97:52">size</name></expr></argument>, <argument pos:start="97:55" pos:end="97:59"><expr pos:start="97:55" pos:end="97:59"><name pos:start="97:55" pos:end="97:59">false</name></expr></argument>, <argument pos:start="97:62" pos:end="97:66"><expr pos:start="97:62" pos:end="97:66"><name pos:start="97:62" pos:end="97:66">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
