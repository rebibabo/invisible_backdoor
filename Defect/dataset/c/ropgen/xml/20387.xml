<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20387.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">vf_open</name><parameter_list pos:start="1:19" pos:end="1:49">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:32">vf_instance_t</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">vf</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">args</name></decl></parameter>)</parameter_list><block pos:start="1:50" pos:end="79:1">{<block_content pos:start="3:5" pos:end="77:13">

    <expr_stmt pos:start="3:5" pos:end="3:22"><expr pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:6">vf</name><operator pos:start="3:7" pos:end="3:8">-&gt;</operator><name pos:start="3:9" pos:end="3:14">config</name></name><operator pos:start="3:15" pos:end="3:15">=</operator><name pos:start="3:16" pos:end="3:21">config</name></expr>;</expr_stmt>

    <expr_stmt pos:start="5:5" pos:end="5:28"><expr pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:6">vf</name><operator pos:start="5:7" pos:end="5:8">-&gt;</operator><name pos:start="5:9" pos:end="5:17">put_image</name></name><operator pos:start="5:18" pos:end="5:18">=</operator><name pos:start="5:19" pos:end="5:27">put_image</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:28"><expr pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:6">vf</name><operator pos:start="7:7" pos:end="7:8">-&gt;</operator><name pos:start="7:9" pos:end="7:17">get_image</name></name><operator pos:start="7:18" pos:end="7:18">=</operator><name pos:start="7:19" pos:end="7:27">get_image</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:6">vf</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:20">query_format</name></name><operator pos:start="9:21" pos:end="9:21">=</operator><name pos:start="9:22" pos:end="9:33">query_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:6">vf</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:14">uninit</name></name><operator pos:start="11:15" pos:end="11:15">=</operator><name pos:start="11:16" pos:end="11:21">uninit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:6">vf</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:15">control</name></name><operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:24">control</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:6">vf</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:12">priv</name></name><operator pos:start="15:13" pos:end="15:13">=</operator><call pos:start="15:14" pos:end="15:45"><name pos:start="15:14" pos:end="15:19">malloc</name><argument_list pos:start="15:20" pos:end="15:45">(<argument pos:start="15:21" pos:end="15:44"><expr pos:start="15:21" pos:end="15:44"><sizeof pos:start="15:21" pos:end="15:44">sizeof<argument_list pos:start="15:27" pos:end="15:44">(<argument pos:start="15:28" pos:end="15:43"><expr pos:start="15:28" pos:end="15:43">struct <name pos:start="15:35" pos:end="15:43">vf_priv_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><call pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:49">(<argument pos:start="17:12" pos:end="17:19"><expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:13">vf</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">priv</name></name></expr></argument>, <argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></argument>, <argument pos:start="17:25" pos:end="17:48"><expr pos:start="17:25" pos:end="17:48"><sizeof pos:start="17:25" pos:end="17:48">sizeof<argument_list pos:start="17:31" pos:end="17:48">(<argument pos:start="17:32" pos:end="17:47"><expr pos:start="17:32" pos:end="17:47">struct <name pos:start="17:39" pos:end="17:47">vf_priv_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="21:68"><if pos:start="21:5" pos:end="21:68">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">args</name></expr>)</condition><block type="pseudo" pos:start="21:15" pos:end="21:68"><block_content pos:start="21:15" pos:end="21:68"> <expr_stmt pos:start="21:15" pos:end="21:68"><expr pos:start="21:15" pos:end="21:67"><call pos:start="21:15" pos:end="21:67"><name pos:start="21:15" pos:end="21:20">sscanf</name><argument_list pos:start="21:21" pos:end="21:67">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">args</name></expr></argument>, <argument pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:34"><literal type="string" pos:start="21:28" pos:end="21:34">"%d:%d"</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:49"><expr pos:start="21:37" pos:end="21:49"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:39">vf</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:45">priv</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:49">qp</name></name></expr></argument>, <argument pos:start="21:52" pos:end="21:66"><expr pos:start="21:52" pos:end="21:66"><operator pos:start="21:52" pos:end="21:52">&amp;</operator><name pos:start="21:53" pos:end="21:66"><name pos:start="21:53" pos:end="21:54">vf</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:60">priv</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:66">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:25"><if pos:start="25:5" pos:end="27:25">if<condition pos:start="25:7" pos:end="25:24">(<expr pos:start="25:8" pos:end="25:23"><name pos:start="25:8" pos:end="25:19"><name pos:start="25:8" pos:end="25:9">vf</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">priv</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:19">qp</name></name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:25"><block_content pos:start="27:9" pos:end="27:25">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:10">vf</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:16">priv</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:20">qp</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><call pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:15">init_thres2</name><argument_list pos:start="31:16" pos:end="31:17">()</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="35:5" pos:end="50:0">switch<condition pos:start="35:11" pos:end="35:26">(<expr pos:start="35:12" pos:end="35:25"><name pos:start="35:12" pos:end="35:25"><name pos:start="35:12" pos:end="35:13">vf</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">priv</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">mode</name></name></expr>)</condition><block pos:start="35:27" pos:end="50:0">{<block_content pos:start="37:9" pos:end="43:50">

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>:</case> <expr_stmt pos:start="37:17" pos:end="37:41"><expr pos:start="37:17" pos:end="37:40"><name pos:start="37:17" pos:end="37:26">requantize</name><operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:40">hardthresh_c</name></expr>;</expr_stmt> <break pos:start="37:43" pos:end="37:48">break;</break>

        <case pos:start="39:9" pos:end="39:15">case <expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr>:</case> <expr_stmt pos:start="39:17" pos:end="39:41"><expr pos:start="39:17" pos:end="39:40"><name pos:start="39:17" pos:end="39:26">requantize</name><operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:40">softthresh_c</name></expr>;</expr_stmt> <break pos:start="39:43" pos:end="39:48">break;</break>

        <default pos:start="41:9" pos:end="41:16">default:</default>

        <case pos:start="43:9" pos:end="43:15">case <expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">2</literal></expr>:</case> <expr_stmt pos:start="43:17" pos:end="43:43"><expr pos:start="43:17" pos:end="43:42"><name pos:start="43:17" pos:end="43:26">requantize</name><operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:42">mediumthresh_c</name></expr>;</expr_stmt> <break pos:start="43:45" pos:end="43:50">break;</break>

    </block_content>}</block></switch>



<cpp:if pos:start="49:1" pos:end="49:12">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:12">HAVE_MMX</name></expr></cpp:if>

    <if_stmt pos:start="51:5" pos:end="74:0"><if pos:start="51:5" pos:end="74:0">if<condition pos:start="51:7" pos:end="51:26">(<expr pos:start="51:8" pos:end="51:25"><name pos:start="51:8" pos:end="51:25"><name pos:start="51:8" pos:end="51:18">ff_gCpuCaps</name><operator pos:start="51:19" pos:end="51:19">.</operator><name pos:start="51:20" pos:end="51:25">hasMMX</name></name></expr>)</condition><block pos:start="51:27" pos:end="74:0">{<block_content pos:start="53:9" pos:end="53:23">

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:12">dctB</name><operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:22">dctB_mmx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:5"><literal type="number" pos:start="59:5" pos:end="59:5">0</literal></expr></cpp:if>

    if(ff_gCpuCaps.hasMMX){

        switch(vf-&gt;priv-&gt;mode){

            case 0: requantize= hardthresh_mmx; break;

            case 1: requantize= softthresh_mmx; break;

        }

    }

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
