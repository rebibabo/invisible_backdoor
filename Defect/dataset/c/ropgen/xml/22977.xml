<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22977.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:38">paint_raw</name><parameter_list pos:start="1:39" pos:end="5:58">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:46">uint8_t</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dst</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:57"><decl pos:start="3:40" pos:end="3:57"><type pos:start="3:40" pos:end="3:57"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:52">uint8_t</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:57">src</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:66"><decl pos:start="3:60" pos:end="3:66"><type pos:start="3:60" pos:end="3:66"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:66">bpp</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:45"><decl pos:start="5:40" pos:end="5:45"><type pos:start="5:40" pos:end="5:45"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:45">be</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:57"><decl pos:start="5:48" pos:end="5:57"><type pos:start="5:48" pos:end="5:57"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:57">stride</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="47:1">{<block_content pos:start="9:5" pos:end="45:5">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">p</name></decl>;</decl_stmt>

    <for pos:start="11:5" pos:end="45:5">for <control pos:start="11:9" pos:end="11:27">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">j</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:17">j</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:21">h</name></expr>;</condition> <incr pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:24">j</name><operator pos:start="11:25" pos:end="11:26">++</operator></expr></incr>)</control> <block pos:start="11:29" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:22">

        <for pos:start="13:9" pos:end="41:9">for <control pos:start="13:13" pos:end="13:31">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">i</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">i</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:25">w</name></expr>;</condition> <incr pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:28">i</name><operator pos:start="13:29" pos:end="13:30">++</operator></expr></incr>)</control> <block pos:start="13:33" pos:end="41:9">{<block_content pos:start="15:13" pos:end="39:13">

            <expr_stmt pos:start="15:13" pos:end="15:45"><expr pos:start="15:13" pos:end="15:44"><name pos:start="15:13" pos:end="15:13">p</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:44"><name pos:start="15:17" pos:end="15:30">vmnc_get_pixel</name><argument_list pos:start="15:31" pos:end="15:44">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">src</name></expr></argument>, <argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">bpp</name></expr></argument>, <argument pos:start="15:42" pos:end="15:43"><expr pos:start="15:42" pos:end="15:43"><name pos:start="15:42" pos:end="15:43">be</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:15">src</name> <operator pos:start="17:17" pos:end="17:18">+=</operator> <name pos:start="17:20" pos:end="17:22">bpp</name></expr>;</expr_stmt>

            <switch pos:start="19:13" pos:end="39:13">switch <condition pos:start="19:20" pos:end="19:24">(<expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">bpp</name></expr>)</condition> <block pos:start="19:26" pos:end="39:13">{<block_content pos:start="21:13" pos:end="37:22">

            <case pos:start="21:13" pos:end="21:19">case <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr>:</case>

                <expr_stmt pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:19">dst</name><index pos:start="23:20" pos:end="23:22">[<expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">i</name></expr>]</index></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:26">p</name></expr>;</expr_stmt>

                <break pos:start="25:17" pos:end="25:22">break;</break>

            <case pos:start="27:13" pos:end="27:19">case <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">2</literal></expr>:</case>

                <expr_stmt pos:start="29:17" pos:end="29:40"><expr pos:start="29:17" pos:end="29:39"><operator pos:start="29:17" pos:end="29:17">(</operator><operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:26">uint16_t</name><operator pos:start="29:27" pos:end="29:27">*</operator><operator pos:start="29:28" pos:end="29:28">)</operator><name pos:start="29:29" pos:end="29:31">dst</name><operator pos:start="29:32" pos:end="29:32">)</operator><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">i</name></expr>]</index> <operator pos:start="29:37" pos:end="29:37">=</operator> <name pos:start="29:39" pos:end="29:39">p</name></expr>;</expr_stmt>

                <break pos:start="31:17" pos:end="31:22">break;</break>

            <case pos:start="33:13" pos:end="33:19">case <expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">4</literal></expr>:</case>

                <expr_stmt pos:start="35:17" pos:end="35:40"><expr pos:start="35:17" pos:end="35:39"><operator pos:start="35:17" pos:end="35:17">(</operator><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:26">uint32_t</name><operator pos:start="35:27" pos:end="35:27">*</operator><operator pos:start="35:28" pos:end="35:28">)</operator><name pos:start="35:29" pos:end="35:31">dst</name><operator pos:start="35:32" pos:end="35:32">)</operator><index pos:start="35:33" pos:end="35:35">[<expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">i</name></expr>]</index> <operator pos:start="35:37" pos:end="35:37">=</operator> <name pos:start="35:39" pos:end="35:39">p</name></expr>;</expr_stmt>

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">dst</name> <operator pos:start="43:13" pos:end="43:14">+=</operator> <name pos:start="43:16" pos:end="43:21">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
