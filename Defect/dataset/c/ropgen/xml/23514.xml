<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23514.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tss_load_seg</name><parameter_list pos:start="1:25" pos:end="1:69">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">CPUX86State</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:54">seg_reg</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">selector</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:15">e1</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">e2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">rpl</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">dpl</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">cpl</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="115:5"><if pos:start="11:5" pos:end="107:5">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:17">selector</name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <literal type="number" pos:start="11:21" pos:end="11:26">0xfffc</literal><operator pos:start="11:27" pos:end="11:27">)</operator> <operator pos:start="11:29" pos:end="11:30">!=</operator> <literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr>)</condition> <block pos:start="11:35" pos:end="107:5">{<block_content pos:start="13:9" pos:end="105:35">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:55">(<expr pos:start="13:13" pos:end="13:54"><call pos:start="13:13" pos:end="13:49"><name pos:start="13:13" pos:end="13:24">load_segment</name><argument_list pos:start="13:25" pos:end="13:49">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">env</name></expr></argument>, <argument pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><operator pos:start="13:31" pos:end="13:31">&amp;</operator><name pos:start="13:32" pos:end="13:33">e1</name></expr></argument>, <argument pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:38">e2</name></expr></argument>, <argument pos:start="13:41" pos:end="13:48"><expr pos:start="13:41" pos:end="13:48"><name pos:start="13:41" pos:end="13:48">selector</name></expr></argument>)</argument_list></call> <operator pos:start="13:51" pos:end="13:52">!=</operator> <literal type="number" pos:start="13:54" pos:end="13:54">0</literal></expr>)</condition> <block pos:start="13:57" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:68">

            <expr_stmt pos:start="15:13" pos:end="15:68"><expr pos:start="15:13" pos:end="15:67"><call pos:start="15:13" pos:end="15:67"><name pos:start="15:13" pos:end="15:31">raise_exception_err</name><argument_list pos:start="15:32" pos:end="15:67">(<argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">env</name></expr></argument>, <argument pos:start="15:38" pos:end="15:47"><expr pos:start="15:38" pos:end="15:47"><name pos:start="15:38" pos:end="15:47">EXCP0A_TSS</name></expr></argument>, <argument pos:start="15:50" pos:end="15:66"><expr pos:start="15:50" pos:end="15:66"><name pos:start="15:50" pos:end="15:57">selector</name> <operator pos:start="15:59" pos:end="15:59">&amp;</operator> <literal type="number" pos:start="15:61" pos:end="15:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:16">e2</name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <name pos:start="19:20" pos:end="19:30">DESC_S_MASK</name><operator pos:start="19:31" pos:end="19:31">)</operator></expr>)</condition> <block pos:start="19:34" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:68">

            <expr_stmt pos:start="21:13" pos:end="21:68"><expr pos:start="21:13" pos:end="21:67"><call pos:start="21:13" pos:end="21:67"><name pos:start="21:13" pos:end="21:31">raise_exception_err</name><argument_list pos:start="21:32" pos:end="21:67">(<argument pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:35">env</name></expr></argument>, <argument pos:start="21:38" pos:end="21:47"><expr pos:start="21:38" pos:end="21:47"><name pos:start="21:38" pos:end="21:47">EXCP0A_TSS</name></expr></argument>, <argument pos:start="21:50" pos:end="21:66"><expr pos:start="21:50" pos:end="21:66"><name pos:start="21:50" pos:end="21:57">selector</name> <operator pos:start="21:59" pos:end="21:59">&amp;</operator> <literal type="number" pos:start="21:61" pos:end="21:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:11">rpl</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:22">selector</name> <operator pos:start="25:24" pos:end="25:24">&amp;</operator> <literal type="number" pos:start="25:26" pos:end="25:26">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:11">dpl</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">(</operator><name pos:start="27:16" pos:end="27:17">e2</name> <operator pos:start="27:19" pos:end="27:20">&gt;&gt;</operator> <name pos:start="27:22" pos:end="27:35">DESC_DPL_SHIFT</name><operator pos:start="27:36" pos:end="27:36">)</operator> <operator pos:start="27:38" pos:end="27:38">&amp;</operator> <literal type="number" pos:start="27:40" pos:end="27:40">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:11">cpl</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:25"><name pos:start="29:15" pos:end="29:17">env</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">hflags</name></name> <operator pos:start="29:27" pos:end="29:27">&amp;</operator> <name pos:start="29:29" pos:end="29:39">HF_CPL_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="91:9"><if pos:start="31:9" pos:end="53:9">if <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:19">seg_reg</name> <operator pos:start="31:21" pos:end="31:22">==</operator> <name pos:start="31:24" pos:end="31:27">R_CS</name></expr>)</condition> <block pos:start="31:30" pos:end="53:9">{<block_content pos:start="33:13" pos:end="51:13">

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:37">(<expr pos:start="33:17" pos:end="33:36"><operator pos:start="33:17" pos:end="33:17">!</operator><operator pos:start="33:18" pos:end="33:18">(</operator><name pos:start="33:19" pos:end="33:20">e2</name> <operator pos:start="33:22" pos:end="33:22">&amp;</operator> <name pos:start="33:24" pos:end="33:35">DESC_CS_MASK</name><operator pos:start="33:36" pos:end="33:36">)</operator></expr>)</condition> <block pos:start="33:39" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:72">

                <expr_stmt pos:start="35:17" pos:end="35:72"><expr pos:start="35:17" pos:end="35:71"><call pos:start="35:17" pos:end="35:71"><name pos:start="35:17" pos:end="35:35">raise_exception_err</name><argument_list pos:start="35:36" pos:end="35:71">(<argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:39">env</name></expr></argument>, <argument pos:start="35:42" pos:end="35:51"><expr pos:start="35:42" pos:end="35:51"><name pos:start="35:42" pos:end="35:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="35:54" pos:end="35:70"><expr pos:start="35:54" pos:end="35:70"><name pos:start="35:54" pos:end="35:61">selector</name> <operator pos:start="35:63" pos:end="35:63">&amp;</operator> <literal type="number" pos:start="35:65" pos:end="35:70">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="39:13" pos:end="39:37">/* XXX: is it correct? */</comment>

            <if_stmt pos:start="41:13" pos:end="45:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:27">(<expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:19">dpl</name> <operator pos:start="41:21" pos:end="41:22">!=</operator> <name pos:start="41:24" pos:end="41:26">rpl</name></expr>)</condition> <block pos:start="41:29" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:72">

                <expr_stmt pos:start="43:17" pos:end="43:72"><expr pos:start="43:17" pos:end="43:71"><call pos:start="43:17" pos:end="43:71"><name pos:start="43:17" pos:end="43:35">raise_exception_err</name><argument_list pos:start="43:36" pos:end="43:71">(<argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">env</name></expr></argument>, <argument pos:start="43:42" pos:end="43:51"><expr pos:start="43:42" pos:end="43:51"><name pos:start="43:42" pos:end="43:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="43:54" pos:end="43:70"><expr pos:start="43:54" pos:end="43:70"><name pos:start="43:54" pos:end="43:61">selector</name> <operator pos:start="43:63" pos:end="43:63">&amp;</operator> <literal type="number" pos:start="43:65" pos:end="43:70">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:48">(<expr pos:start="47:17" pos:end="47:47"><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:19">e2</name> <operator pos:start="47:21" pos:end="47:21">&amp;</operator> <name pos:start="47:23" pos:end="47:33">DESC_C_MASK</name><operator pos:start="47:34" pos:end="47:34">)</operator> <operator pos:start="47:36" pos:end="47:37">&amp;&amp;</operator> <name pos:start="47:39" pos:end="47:41">dpl</name> <operator pos:start="47:43" pos:end="47:43">&gt;</operator> <name pos:start="47:45" pos:end="47:47">rpl</name></expr>)</condition> <block pos:start="47:50" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:72">

                <expr_stmt pos:start="49:17" pos:end="49:72"><expr pos:start="49:17" pos:end="49:71"><call pos:start="49:17" pos:end="49:71"><name pos:start="49:17" pos:end="49:35">raise_exception_err</name><argument_list pos:start="49:36" pos:end="49:71">(<argument pos:start="49:37" pos:end="49:39"><expr pos:start="49:37" pos:end="49:39"><name pos:start="49:37" pos:end="49:39">env</name></expr></argument>, <argument pos:start="49:42" pos:end="49:51"><expr pos:start="49:42" pos:end="49:51"><name pos:start="49:42" pos:end="49:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="49:54" pos:end="49:70"><expr pos:start="49:54" pos:end="49:70"><name pos:start="49:54" pos:end="49:61">selector</name> <operator pos:start="49:63" pos:end="49:63">&amp;</operator> <literal type="number" pos:start="49:65" pos:end="49:70">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="69:9">else if <condition pos:start="53:19" pos:end="53:35">(<expr pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">seg_reg</name> <operator pos:start="53:28" pos:end="53:29">==</operator> <name pos:start="53:31" pos:end="53:34">R_SS</name></expr>)</condition> <block pos:start="53:37" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:13">

            <comment type="block" pos:start="55:13" pos:end="55:42">/* SS must be writable data */</comment>

            <if_stmt pos:start="57:13" pos:end="61:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:59">(<expr pos:start="57:17" pos:end="57:58"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:19">e2</name> <operator pos:start="57:21" pos:end="57:21">&amp;</operator> <name pos:start="57:23" pos:end="57:34">DESC_CS_MASK</name><operator pos:start="57:35" pos:end="57:35">)</operator> <operator pos:start="57:37" pos:end="57:38">||</operator> <operator pos:start="57:40" pos:end="57:40">!</operator><operator pos:start="57:41" pos:end="57:41">(</operator><name pos:start="57:42" pos:end="57:43">e2</name> <operator pos:start="57:45" pos:end="57:45">&amp;</operator> <name pos:start="57:47" pos:end="57:57">DESC_W_MASK</name><operator pos:start="57:58" pos:end="57:58">)</operator></expr>)</condition> <block pos:start="57:61" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:72">

                <expr_stmt pos:start="59:17" pos:end="59:72"><expr pos:start="59:17" pos:end="59:71"><call pos:start="59:17" pos:end="59:71"><name pos:start="59:17" pos:end="59:35">raise_exception_err</name><argument_list pos:start="59:36" pos:end="59:71">(<argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">env</name></expr></argument>, <argument pos:start="59:42" pos:end="59:51"><expr pos:start="59:42" pos:end="59:51"><name pos:start="59:42" pos:end="59:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="59:54" pos:end="59:70"><expr pos:start="59:54" pos:end="59:70"><name pos:start="59:54" pos:end="59:61">selector</name> <operator pos:start="59:63" pos:end="59:63">&amp;</operator> <literal type="number" pos:start="59:65" pos:end="59:70">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="63:13" pos:end="67:13"><if pos:start="63:13" pos:end="67:13">if <condition pos:start="63:16" pos:end="63:41">(<expr pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:19">dpl</name> <operator pos:start="63:21" pos:end="63:22">!=</operator> <name pos:start="63:24" pos:end="63:26">cpl</name> <operator pos:start="63:28" pos:end="63:29">||</operator> <name pos:start="63:31" pos:end="63:33">dpl</name> <operator pos:start="63:35" pos:end="63:36">!=</operator> <name pos:start="63:38" pos:end="63:40">rpl</name></expr>)</condition> <block pos:start="63:43" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:72">

                <expr_stmt pos:start="65:17" pos:end="65:72"><expr pos:start="65:17" pos:end="65:71"><call pos:start="65:17" pos:end="65:71"><name pos:start="65:17" pos:end="65:35">raise_exception_err</name><argument_list pos:start="65:36" pos:end="65:71">(<argument pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:39">env</name></expr></argument>, <argument pos:start="65:42" pos:end="65:51"><expr pos:start="65:42" pos:end="65:51"><name pos:start="65:42" pos:end="65:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="65:54" pos:end="65:70"><expr pos:start="65:54" pos:end="65:70"><name pos:start="65:54" pos:end="65:61">selector</name> <operator pos:start="65:63" pos:end="65:63">&amp;</operator> <literal type="number" pos:start="65:65" pos:end="65:70">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="91:9">else <block pos:start="69:16" pos:end="91:9">{<block_content pos:start="73:13" pos:end="89:13">

            <comment type="block" pos:start="71:13" pos:end="71:35">/* not readable code */</comment>

            <if_stmt pos:start="73:13" pos:end="77:13"><if pos:start="73:13" pos:end="77:13">if <condition pos:start="73:16" pos:end="73:59">(<expr pos:start="73:17" pos:end="73:58"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:19">e2</name> <operator pos:start="73:21" pos:end="73:21">&amp;</operator> <name pos:start="73:23" pos:end="73:34">DESC_CS_MASK</name><operator pos:start="73:35" pos:end="73:35">)</operator> <operator pos:start="73:37" pos:end="73:38">&amp;&amp;</operator> <operator pos:start="73:40" pos:end="73:40">!</operator><operator pos:start="73:41" pos:end="73:41">(</operator><name pos:start="73:42" pos:end="73:43">e2</name> <operator pos:start="73:45" pos:end="73:45">&amp;</operator> <name pos:start="73:47" pos:end="73:57">DESC_R_MASK</name><operator pos:start="73:58" pos:end="73:58">)</operator></expr>)</condition> <block pos:start="73:61" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:72">

                <expr_stmt pos:start="75:17" pos:end="75:72"><expr pos:start="75:17" pos:end="75:71"><call pos:start="75:17" pos:end="75:71"><name pos:start="75:17" pos:end="75:35">raise_exception_err</name><argument_list pos:start="75:36" pos:end="75:71">(<argument pos:start="75:37" pos:end="75:39"><expr pos:start="75:37" pos:end="75:39"><name pos:start="75:37" pos:end="75:39">env</name></expr></argument>, <argument pos:start="75:42" pos:end="75:51"><expr pos:start="75:42" pos:end="75:51"><name pos:start="75:42" pos:end="75:51">EXCP0A_TSS</name></expr></argument>, <argument pos:start="75:54" pos:end="75:70"><expr pos:start="75:54" pos:end="75:70"><name pos:start="75:54" pos:end="75:61">selector</name> <operator pos:start="75:63" pos:end="75:63">&amp;</operator> <literal type="number" pos:start="75:65" pos:end="75:70">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="79:13" pos:end="79:67">/* if data or non conforming code, checks the rights */</comment>

            <if_stmt pos:start="81:13" pos:end="89:13"><if pos:start="81:13" pos:end="89:13">if <condition pos:start="81:16" pos:end="81:53">(<expr pos:start="81:17" pos:end="81:52"><operator pos:start="81:17" pos:end="81:17">(</operator><operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:20">e2</name> <operator pos:start="81:22" pos:end="81:23">&gt;&gt;</operator> <name pos:start="81:25" pos:end="81:39">DESC_TYPE_SHIFT</name><operator pos:start="81:40" pos:end="81:40">)</operator> <operator pos:start="81:42" pos:end="81:42">&amp;</operator> <literal type="number" pos:start="81:44" pos:end="81:46">0xf</literal><operator pos:start="81:47" pos:end="81:47">)</operator> <operator pos:start="81:49" pos:end="81:49">&lt;</operator> <literal type="number" pos:start="81:51" pos:end="81:52">12</literal></expr>)</condition> <block pos:start="81:55" pos:end="89:13">{<block_content pos:start="83:17" pos:end="87:17">

                <if_stmt pos:start="83:17" pos:end="87:17"><if pos:start="83:17" pos:end="87:17">if <condition pos:start="83:20" pos:end="83:43">(<expr pos:start="83:21" pos:end="83:42"><name pos:start="83:21" pos:end="83:23">dpl</name> <operator pos:start="83:25" pos:end="83:25">&lt;</operator> <name pos:start="83:27" pos:end="83:29">cpl</name> <operator pos:start="83:31" pos:end="83:32">||</operator> <name pos:start="83:34" pos:end="83:36">dpl</name> <operator pos:start="83:38" pos:end="83:38">&lt;</operator> <name pos:start="83:40" pos:end="83:42">rpl</name></expr>)</condition> <block pos:start="83:45" pos:end="87:17">{<block_content pos:start="85:21" pos:end="85:76">

                    <expr_stmt pos:start="85:21" pos:end="85:76"><expr pos:start="85:21" pos:end="85:75"><call pos:start="85:21" pos:end="85:75"><name pos:start="85:21" pos:end="85:39">raise_exception_err</name><argument_list pos:start="85:40" pos:end="85:75">(<argument pos:start="85:41" pos:end="85:43"><expr pos:start="85:41" pos:end="85:43"><name pos:start="85:41" pos:end="85:43">env</name></expr></argument>, <argument pos:start="85:46" pos:end="85:55"><expr pos:start="85:46" pos:end="85:55"><name pos:start="85:46" pos:end="85:55">EXCP0A_TSS</name></expr></argument>, <argument pos:start="85:58" pos:end="85:74"><expr pos:start="85:58" pos:end="85:74"><name pos:start="85:58" pos:end="85:65">selector</name> <operator pos:start="85:67" pos:end="85:67">&amp;</operator> <literal type="number" pos:start="85:69" pos:end="85:74">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:32">(<expr pos:start="93:13" pos:end="93:31"><operator pos:start="93:13" pos:end="93:13">!</operator><operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:16">e2</name> <operator pos:start="93:18" pos:end="93:18">&amp;</operator> <name pos:start="93:20" pos:end="93:30">DESC_P_MASK</name><operator pos:start="93:31" pos:end="93:31">)</operator></expr>)</condition> <block pos:start="93:34" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:70">

            <expr_stmt pos:start="95:13" pos:end="95:70"><expr pos:start="95:13" pos:end="95:69"><call pos:start="95:13" pos:end="95:69"><name pos:start="95:13" pos:end="95:31">raise_exception_err</name><argument_list pos:start="95:32" pos:end="95:69">(<argument pos:start="95:33" pos:end="95:35"><expr pos:start="95:33" pos:end="95:35"><name pos:start="95:33" pos:end="95:35">env</name></expr></argument>, <argument pos:start="95:38" pos:end="95:49"><expr pos:start="95:38" pos:end="95:49"><name pos:start="95:38" pos:end="95:49">EXCP0B_NOSEG</name></expr></argument>, <argument pos:start="95:52" pos:end="95:68"><expr pos:start="95:52" pos:end="95:68"><name pos:start="95:52" pos:end="95:59">selector</name> <operator pos:start="95:61" pos:end="95:61">&amp;</operator> <literal type="number" pos:start="95:63" pos:end="95:68">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="105:35"><expr pos:start="99:9" pos:end="105:34"><call pos:start="99:9" pos:end="105:34"><name pos:start="99:9" pos:end="99:30">cpu_x86_load_seg_cache</name><argument_list pos:start="99:31" pos:end="105:34">(<argument pos:start="99:32" pos:end="99:34"><expr pos:start="99:32" pos:end="99:34"><name pos:start="99:32" pos:end="99:34">env</name></expr></argument>, <argument pos:start="99:37" pos:end="99:43"><expr pos:start="99:37" pos:end="99:43"><name pos:start="99:37" pos:end="99:43">seg_reg</name></expr></argument>, <argument pos:start="99:46" pos:end="99:53"><expr pos:start="99:46" pos:end="99:53"><name pos:start="99:46" pos:end="99:53">selector</name></expr></argument>,

                               <argument pos:start="101:32" pos:end="101:51"><expr pos:start="101:32" pos:end="101:51"><call pos:start="101:32" pos:end="101:51"><name pos:start="101:32" pos:end="101:43">get_seg_base</name><argument_list pos:start="101:44" pos:end="101:51">(<argument pos:start="101:45" pos:end="101:46"><expr pos:start="101:45" pos:end="101:46"><name pos:start="101:45" pos:end="101:46">e1</name></expr></argument>, <argument pos:start="101:49" pos:end="101:50"><expr pos:start="101:49" pos:end="101:50"><name pos:start="101:49" pos:end="101:50">e2</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="103:32" pos:end="103:52"><expr pos:start="103:32" pos:end="103:52"><call pos:start="103:32" pos:end="103:52"><name pos:start="103:32" pos:end="103:44">get_seg_limit</name><argument_list pos:start="103:45" pos:end="103:52">(<argument pos:start="103:46" pos:end="103:47"><expr pos:start="103:46" pos:end="103:47"><name pos:start="103:46" pos:end="103:47">e1</name></expr></argument>, <argument pos:start="103:50" pos:end="103:51"><expr pos:start="103:50" pos:end="103:51"><name pos:start="103:50" pos:end="103:51">e2</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="105:32" pos:end="105:33"><expr pos:start="105:32" pos:end="105:33"><name pos:start="105:32" pos:end="105:33">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="115:5">else <block pos:start="107:12" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:9">

        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:47">(<expr pos:start="109:13" pos:end="109:46"><name pos:start="109:13" pos:end="109:19">seg_reg</name> <operator pos:start="109:21" pos:end="109:22">==</operator> <name pos:start="109:24" pos:end="109:27">R_SS</name> <operator pos:start="109:29" pos:end="109:30">||</operator> <name pos:start="109:32" pos:end="109:38">seg_reg</name> <operator pos:start="109:40" pos:end="109:41">==</operator> <name pos:start="109:43" pos:end="109:46">R_CS</name></expr>)</condition> <block pos:start="109:49" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:68">

            <expr_stmt pos:start="111:13" pos:end="111:68"><expr pos:start="111:13" pos:end="111:67"><call pos:start="111:13" pos:end="111:67"><name pos:start="111:13" pos:end="111:31">raise_exception_err</name><argument_list pos:start="111:32" pos:end="111:67">(<argument pos:start="111:33" pos:end="111:35"><expr pos:start="111:33" pos:end="111:35"><name pos:start="111:33" pos:end="111:35">env</name></expr></argument>, <argument pos:start="111:38" pos:end="111:47"><expr pos:start="111:38" pos:end="111:47"><name pos:start="111:38" pos:end="111:47">EXCP0A_TSS</name></expr></argument>, <argument pos:start="111:50" pos:end="111:66"><expr pos:start="111:50" pos:end="111:66"><name pos:start="111:50" pos:end="111:57">selector</name> <operator pos:start="111:59" pos:end="111:59">&amp;</operator> <literal type="number" pos:start="111:61" pos:end="111:66">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
