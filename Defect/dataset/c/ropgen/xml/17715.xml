<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17715.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">qcow2_encrypt_sectors</name><parameter_list pos:start="1:26" pos:end="5:39">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">BDRVQcow2State</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:63">sector_num</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:38"><decl pos:start="3:27" pos:end="3:38"><type pos:start="3:27" pos:end="3:38"><name pos:start="3:27" pos:end="3:33">uint8_t</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:38">buf</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:54">nb_sectors</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:64"><decl pos:start="3:57" pos:end="3:64"><type pos:start="3:57" pos:end="3:64"><name pos:start="3:57" pos:end="3:60">bool</name></type> <name pos:start="3:62" pos:end="3:64">enc</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:38"><decl pos:start="5:27" pos:end="5:38"><type pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:31">Error</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:13">

    <union pos:start="9:5" pos:end="15:11">union <block pos:start="9:11" pos:end="15:5">{

        <decl_stmt pos:start="11:9" pos:end="11:23"><decl pos:start="11:9" pos:end="11:22"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint64_t</name></type> <name pos:start="11:18" pos:end="11:22"><name pos:start="11:18" pos:end="11:19">ll</name><index pos:start="11:20" pos:end="11:22">[<expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:22"><decl pos:start="13:9" pos:end="13:21"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">uint8_t</name></type> <name pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:17">b</name><index pos:start="13:18" pos:end="13:21">[<expr pos:start="13:19" pos:end="13:20"><literal type="number" pos:start="13:19" pos:end="13:20">16</literal></expr>]</index></name></decl>;</decl_stmt>

    }</block> <decl pos:start="15:7" pos:end="15:10"><name pos:start="15:7" pos:end="15:10">ivec</name></decl>;</union>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="71:5">for<control pos:start="23:8" pos:end="23:35">(<init pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</init> <condition pos:start="23:16" pos:end="23:30"><expr pos:start="23:16" pos:end="23:29"><name pos:start="23:16" pos:end="23:16">i</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <name pos:start="23:20" pos:end="23:29">nb_sectors</name></expr>;</condition> <incr pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:32">i</name><operator pos:start="23:33" pos:end="23:34">++</operator></expr></incr>)</control> <block pos:start="23:37" pos:end="71:5">{<block_content pos:start="25:9" pos:end="69:19">

        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:12">ivec</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:15">ll</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>]</index></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:44"><name pos:start="25:22" pos:end="25:32">cpu_to_le64</name><argument_list pos:start="25:33" pos:end="25:44">(<argument pos:start="25:34" pos:end="25:43"><expr pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:43">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">ivec</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:15">ll</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>]</index></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="33:43">(<expr pos:start="29:13" pos:end="33:42"><call pos:start="29:13" pos:end="33:38"><name pos:start="29:13" pos:end="29:32">qcrypto_cipher_setiv</name><argument_list pos:start="29:33" pos:end="33:38">(<argument pos:start="29:34" pos:end="29:42"><expr pos:start="29:34" pos:end="29:42"><name pos:start="29:34" pos:end="29:42"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:42">cipher</name></name></expr></argument>,

                                 <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:37">ivec</name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:39">b</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:61"><expr pos:start="31:42" pos:end="31:61"><call pos:start="31:42" pos:end="31:61"><name pos:start="31:42" pos:end="31:53">G_N_ELEMENTS</name><argument_list pos:start="31:54" pos:end="31:61">(<argument pos:start="31:55" pos:end="31:60"><expr pos:start="31:55" pos:end="31:60"><name pos:start="31:55" pos:end="31:60"><name pos:start="31:55" pos:end="31:58">ivec</name><operator pos:start="31:59" pos:end="31:59">.</operator><name pos:start="31:60" pos:end="31:60">b</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">errp</name></expr></argument>)</argument_list></call> <operator pos:start="33:40" pos:end="33:40">&lt;</operator> <literal type="number" pos:start="33:42" pos:end="33:42">0</literal></expr>)</condition> <block pos:start="33:45" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="59:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:16">(<expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">enc</name></expr>)</condition> <block pos:start="39:18" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:47">

            <expr_stmt pos:start="41:13" pos:end="47:47"><expr pos:start="41:13" pos:end="47:46"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="47:46"><name pos:start="41:19" pos:end="41:40">qcrypto_cipher_encrypt</name><argument_list pos:start="41:41" pos:end="47:46">(<argument pos:start="41:42" pos:end="41:50"><expr pos:start="41:42" pos:end="41:50"><name pos:start="41:42" pos:end="41:50"><name pos:start="41:42" pos:end="41:42">s</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:50">cipher</name></name></expr></argument>,

                                         <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">buf</name></expr></argument>, <argument pos:start="43:47" pos:end="43:49"><expr pos:start="43:47" pos:end="43:49"><name pos:start="43:47" pos:end="43:49">buf</name></expr></argument>,

                                         <argument pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><literal type="number" pos:start="45:42" pos:end="45:44">512</literal></expr></argument>,

                                         <argument pos:start="47:42" pos:end="47:45"><expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="59:9">else <block pos:start="49:16" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:47">

            <expr_stmt pos:start="51:13" pos:end="57:47"><expr pos:start="51:13" pos:end="57:46"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="57:46"><name pos:start="51:19" pos:end="51:40">qcrypto_cipher_decrypt</name><argument_list pos:start="51:41" pos:end="57:46">(<argument pos:start="51:42" pos:end="51:50"><expr pos:start="51:42" pos:end="51:50"><name pos:start="51:42" pos:end="51:50"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:50">cipher</name></name></expr></argument>,

                                         <argument pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:44">buf</name></expr></argument>, <argument pos:start="53:47" pos:end="53:49"><expr pos:start="53:47" pos:end="53:49"><name pos:start="53:47" pos:end="53:49">buf</name></expr></argument>,

                                         <argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><literal type="number" pos:start="55:42" pos:end="55:44">512</literal></expr></argument>,

                                         <argument pos:start="57:42" pos:end="57:45"><expr pos:start="57:42" pos:end="57:45"><name pos:start="57:42" pos:end="57:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>)</condition> <block pos:start="61:22" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:22">

            <return pos:start="63:13" pos:end="63:22">return <expr pos:start="63:20" pos:end="63:21"><operator pos:start="63:20" pos:end="63:20">-</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:18">sector_num</name><operator pos:start="67:19" pos:end="67:20">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:19"><expr pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">buf</name> <operator pos:start="69:13" pos:end="69:14">+=</operator> <literal type="number" pos:start="69:16" pos:end="69:18">512</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
