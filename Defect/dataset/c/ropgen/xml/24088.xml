<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24088.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_block_status</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:57">int64_t</name></type> <name pos:start="1:59" pos:end="1:64">offset</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:35">int64_t</name></type> <name pos:start="3:37" pos:end="3:41">bytes</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:54"><decl pos:start="3:44" pos:end="3:54"><type pos:start="3:44" pos:end="3:54"><name pos:start="3:44" pos:end="3:51">MapEntry</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:54">e</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">depth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:26">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:19">has_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">nb_sectors</name> <init pos:start="15:20" pos:end="15:46">= <expr pos:start="15:22" pos:end="15:46"><name pos:start="15:22" pos:end="15:26">bytes</name> <operator pos:start="15:28" pos:end="15:29">&gt;&gt;</operator> <name pos:start="15:31" pos:end="15:46">BDRV_SECTOR_BITS</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:27">(<argument pos:start="19:12" pos:end="19:26"><expr pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:16">bytes</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <name pos:start="19:20" pos:end="19:26">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="27:7">/* As an optimization, we could cache the current range of unallocated

     * clusters in each file of the chain, and avoid querying the same

     * range repeatedly.

     */</comment>



    <expr_stmt pos:start="31:5" pos:end="31:14"><expr pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:9">depth</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="67:5">for <control pos:start="33:9" pos:end="33:12">(<init pos:start="33:10" pos:end="33:10">;</init><condition pos:start="33:11" pos:end="33:11">;</condition><incr/>)</control> <block pos:start="33:14" pos:end="67:5">{<block_content pos:start="35:9" pos:end="65:16">

        <expr_stmt pos:start="35:9" pos:end="37:56"><expr pos:start="35:9" pos:end="37:55"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="37:55"><name pos:start="35:15" pos:end="35:35">bdrv_get_block_status</name><argument_list pos:start="35:36" pos:end="37:55">(<argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><name pos:start="35:37" pos:end="35:38">bs</name></expr></argument>, <argument pos:start="35:41" pos:end="35:66"><expr pos:start="35:41" pos:end="35:66"><name pos:start="35:41" pos:end="35:46">offset</name> <operator pos:start="35:48" pos:end="35:49">&gt;&gt;</operator> <name pos:start="35:51" pos:end="35:66">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="35:69" pos:end="35:78"><expr pos:start="35:69" pos:end="35:78"><name pos:start="35:69" pos:end="35:78">nb_sectors</name></expr></argument>,

                                    <argument pos:start="37:37" pos:end="37:47"><expr pos:start="37:37" pos:end="37:47"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:47">nb_sectors</name></expr></argument>, <argument pos:start="37:50" pos:end="37:54"><expr pos:start="37:50" pos:end="37:54"><operator pos:start="37:50" pos:end="37:50">&amp;</operator><name pos:start="37:51" pos:end="37:54">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><call pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:14">assert</name><argument_list pos:start="45:15" pos:end="45:26">(<argument pos:start="45:16" pos:end="45:25"><expr pos:start="45:16" pos:end="45:25"><name pos:start="45:16" pos:end="45:25">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:52">(<expr pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">&amp;</operator> <operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:34">BDRV_BLOCK_ZERO</name><operator pos:start="47:35" pos:end="47:35">|</operator><name pos:start="47:36" pos:end="47:50">BDRV_BLOCK_DATA</name><operator pos:start="47:51" pos:end="47:51">)</operator></expr>)</condition> <block pos:start="47:54" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:18">

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:10">bs</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:27"><name pos:start="53:14" pos:end="53:23">backing_bs</name><argument_list pos:start="53:24" pos:end="53:27">(<argument pos:start="53:25" pos:end="53:26"><expr pos:start="53:25" pos:end="53:26"><name pos:start="53:25" pos:end="53:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:23">(<expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:14">bs</name> <operator pos:start="55:16" pos:end="55:17">==</operator> <name pos:start="55:19" pos:end="55:22">NULL</name></expr>)</condition> <block pos:start="55:25" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:18">

            <expr_stmt pos:start="57:13" pos:end="57:20"><expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:16"><expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13">depth</name><operator pos:start="65:14" pos:end="65:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:51"><expr pos:start="71:5" pos:end="71:50"><name pos:start="71:5" pos:end="71:14">has_offset</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">!</operator><operator pos:start="71:19" pos:end="71:19">!</operator><operator pos:start="71:20" pos:end="71:20">(</operator><name pos:start="71:21" pos:end="71:23">ret</name> <operator pos:start="71:25" pos:end="71:25">&amp;</operator> <name pos:start="71:27" pos:end="71:49">BDRV_BLOCK_OFFSET_VALID</name><operator pos:start="71:50" pos:end="71:50">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="95:6"><expr pos:start="75:5" pos:end="95:5"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:6">e</name> <operator pos:start="75:8" pos:end="75:8">=</operator> <operator pos:start="75:10" pos:end="75:10">(</operator><name pos:start="75:11" pos:end="75:18">MapEntry</name><operator pos:start="75:19" pos:end="75:19">)</operator> <block pos:start="75:21" pos:end="95:5">{

        <expr pos:start="77:9" pos:end="77:23"><operator pos:start="77:9" pos:end="77:9">.</operator><name pos:start="77:10" pos:end="77:14">start</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:23">offset</name></expr>,

        <expr pos:start="79:9" pos:end="79:47"><operator pos:start="79:9" pos:end="79:9">.</operator><name pos:start="79:10" pos:end="79:15">length</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:28">nb_sectors</name> <operator pos:start="79:30" pos:end="79:30">*</operator> <name pos:start="79:32" pos:end="79:47">BDRV_SECTOR_SIZE</name></expr>,

        <expr pos:start="81:9" pos:end="81:41"><operator pos:start="81:9" pos:end="81:9">.</operator><name pos:start="81:10" pos:end="81:13">data</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <operator pos:start="81:17" pos:end="81:17">!</operator><operator pos:start="81:18" pos:end="81:18">!</operator><operator pos:start="81:19" pos:end="81:19">(</operator><name pos:start="81:20" pos:end="81:22">ret</name> <operator pos:start="81:24" pos:end="81:24">&amp;</operator> <name pos:start="81:26" pos:end="81:40">BDRV_BLOCK_DATA</name><operator pos:start="81:41" pos:end="81:41">)</operator></expr>,

        <expr pos:start="83:9" pos:end="83:41"><operator pos:start="83:9" pos:end="83:9">.</operator><name pos:start="83:10" pos:end="83:13">zero</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <operator pos:start="83:17" pos:end="83:17">!</operator><operator pos:start="83:18" pos:end="83:18">!</operator><operator pos:start="83:19" pos:end="83:19">(</operator><name pos:start="83:20" pos:end="83:22">ret</name> <operator pos:start="83:24" pos:end="83:24">&amp;</operator> <name pos:start="83:26" pos:end="83:40">BDRV_BLOCK_ZERO</name><operator pos:start="83:41" pos:end="83:41">)</operator></expr>,

        <expr pos:start="85:9" pos:end="85:46"><operator pos:start="85:9" pos:end="85:9">.</operator><name pos:start="85:10" pos:end="85:15">offset</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:21">ret</name> <operator pos:start="85:23" pos:end="85:23">&amp;</operator> <name pos:start="85:25" pos:end="85:46">BDRV_BLOCK_OFFSET_MASK</name></expr>,

        <expr pos:start="87:9" pos:end="87:32"><operator pos:start="87:9" pos:end="87:9">.</operator><name pos:start="87:10" pos:end="87:19">has_offset</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:32">has_offset</name></expr>,

        <expr pos:start="89:9" pos:end="89:22"><operator pos:start="89:9" pos:end="89:9">.</operator><name pos:start="89:10" pos:end="89:14">depth</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:22">depth</name></expr>,

        <expr pos:start="91:9" pos:end="91:42"><operator pos:start="91:9" pos:end="91:9">.</operator><name pos:start="91:10" pos:end="91:21">has_filename</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:28">file</name> <operator pos:start="91:30" pos:end="91:31">&amp;&amp;</operator> <name pos:start="91:33" pos:end="91:42">has_offset</name></expr>,

        <expr pos:start="93:9" pos:end="93:62"><operator pos:start="93:9" pos:end="93:9">.</operator><name pos:start="93:10" pos:end="93:17">filename</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:24">file</name> <operator pos:start="93:26" pos:end="93:27">&amp;&amp;</operator> <name pos:start="93:29" pos:end="93:38">has_offset</name> <operator pos:start="93:40" pos:end="93:40">?</operator> <name pos:start="93:42" pos:end="93:55"><name pos:start="93:42" pos:end="93:45">file</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:55">filename</name></name> <operator pos:start="93:57" pos:end="93:57">:</operator> <name pos:start="93:59" pos:end="93:62">NULL</name></expr>,

    }</block></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
