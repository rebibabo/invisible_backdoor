<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16395.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qmp_output_add_obj</name><parameter_list pos:start="1:31" pos:end="3:46">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:47">QmpOutputVisitor</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">qov</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">name</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:38">QObject</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:45">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:5">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">QStackEntry</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">e</name> <init pos:start="7:20" pos:end="7:46">= <expr pos:start="7:22" pos:end="7:46"><call pos:start="7:22" pos:end="7:46"><name pos:start="7:22" pos:end="7:33">QTAILQ_FIRST</name><argument_list pos:start="7:34" pos:end="7:46">(<argument pos:start="7:35" pos:end="7:45"><expr pos:start="7:35" pos:end="7:45"><operator pos:start="7:35" pos:end="7:35">&amp;</operator><name pos:start="7:36" pos:end="7:45"><name pos:start="7:36" pos:end="7:38">qov</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:45">stack</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">QObject</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">cur</name> <init pos:start="9:18" pos:end="9:38">= <expr pos:start="9:20" pos:end="9:38"><ternary pos:start="9:20" pos:end="9:38"><condition pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">e</name></expr> ?</condition><then pos:start="9:24" pos:end="9:31"> <expr pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:24">e</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:31">value</name></name></expr> </then><else pos:start="9:33" pos:end="9:38">: <expr pos:start="9:35" pos:end="9:38"><name pos:start="9:35" pos:end="9:38">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="47:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">cur</name></expr>)</condition> <block pos:start="13:15" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:26">

        <comment type="block" pos:start="15:9" pos:end="17:50">/* FIXME we should require the user to reset the visitor, rather

         * than throwing away the previous root */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:22">qobject_decref</name><argument_list pos:start="19:23" pos:end="19:33">(<argument pos:start="19:24" pos:end="19:32"><expr pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:26">qov</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">root</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">qov</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">root</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:25">value</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="47:5">else <block pos:start="23:12" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <switch pos:start="25:9" pos:end="45:9">switch <condition pos:start="25:16" pos:end="25:34">(<expr pos:start="25:17" pos:end="25:33"><call pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:28">qobject_type</name><argument_list pos:start="25:29" pos:end="25:33">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">cur</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:36" pos:end="45:9">{<block_content pos:start="27:9" pos:end="43:35">

        <case pos:start="27:9" pos:end="27:25">case <expr pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:24">QTYPE_QDICT</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:25"><expr pos:start="29:13" pos:end="29:24"><call pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:18">assert</name><argument_list pos:start="29:19" pos:end="29:24">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:62"><expr pos:start="31:13" pos:end="31:61"><call pos:start="31:13" pos:end="31:61"><name pos:start="31:13" pos:end="31:25">qdict_put_obj</name><argument_list pos:start="31:26" pos:end="31:61">(<argument pos:start="31:27" pos:end="31:47"><expr pos:start="31:27" pos:end="31:47"><call pos:start="31:27" pos:end="31:47"><name pos:start="31:27" pos:end="31:42">qobject_to_qdict</name><argument_list pos:start="31:43" pos:end="31:47">(<argument pos:start="31:44" pos:end="31:46"><expr pos:start="31:44" pos:end="31:46"><name pos:start="31:44" pos:end="31:46">cur</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">name</name></expr></argument>, <argument pos:start="31:56" pos:end="31:60"><expr pos:start="31:56" pos:end="31:60"><name pos:start="31:56" pos:end="31:60">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:25">case <expr pos:start="35:14" pos:end="35:24"><name pos:start="35:14" pos:end="35:24">QTYPE_QLIST</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:59"><expr pos:start="37:13" pos:end="37:58"><call pos:start="37:13" pos:end="37:58"><name pos:start="37:13" pos:end="37:28">qlist_append_obj</name><argument_list pos:start="37:29" pos:end="37:58">(<argument pos:start="37:30" pos:end="37:50"><expr pos:start="37:30" pos:end="37:50"><call pos:start="37:30" pos:end="37:50"><name pos:start="37:30" pos:end="37:45">qobject_to_qlist</name><argument_list pos:start="37:46" pos:end="37:50">(<argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">cur</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:53" pos:end="37:57"><expr pos:start="37:53" pos:end="37:57"><name pos:start="37:53" pos:end="37:57">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <default pos:start="41:9" pos:end="41:16">default:</default>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><call pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:32">g_assert_not_reached</name><argument_list pos:start="43:33" pos:end="43:34">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
