<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22728.c" pos:tabs="8"><function pos:start="1:1" pos:end="355:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_arith</name><parameter_list pos:start="1:22" pos:end="3:45">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:53">opc</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:28"><decl pos:start="3:23" pos:end="3:28"><type pos:start="3:23" pos:end="3:28"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:28">rd</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:36"><decl pos:start="3:31" pos:end="3:36"><type pos:start="3:31" pos:end="3:36"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:36">rs</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:44"><decl pos:start="3:39" pos:end="3:44"><type pos:start="3:39" pos:end="3:44"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:44">rt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="355:1">{<block_content pos:start="7:5" pos:end="353:79">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">opn</name> <init pos:start="7:21" pos:end="7:29">= <expr pos:start="7:23" pos:end="7:29"><literal type="string" pos:start="7:23" pos:end="7:29">"arith"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="13:45">(<expr pos:start="11:9" pos:end="13:44"><name pos:start="11:9" pos:end="11:10">rd</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal> <operator pos:start="11:17" pos:end="11:18">&amp;&amp;</operator> <name pos:start="11:20" pos:end="11:22">opc</name> <operator pos:start="11:24" pos:end="11:25">!=</operator> <name pos:start="11:27" pos:end="11:33">OPC_ADD</name> <operator pos:start="11:35" pos:end="11:36">&amp;&amp;</operator> <name pos:start="11:38" pos:end="11:40">opc</name> <operator pos:start="11:42" pos:end="11:43">!=</operator> <name pos:start="11:45" pos:end="11:51">OPC_SUB</name>

       <operator pos:start="13:8" pos:end="13:9">&amp;&amp;</operator> <name pos:start="13:11" pos:end="13:13">opc</name> <operator pos:start="13:15" pos:end="13:16">!=</operator> <name pos:start="13:18" pos:end="13:25">OPC_DADD</name> <operator pos:start="13:27" pos:end="13:28">&amp;&amp;</operator> <name pos:start="13:30" pos:end="13:32">opc</name> <operator pos:start="13:34" pos:end="13:35">!=</operator> <name pos:start="13:37" pos:end="13:44">OPC_DSUB</name></expr>)</condition> <block pos:start="13:47" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <comment type="block" pos:start="15:9" pos:end="17:81">/* If no destination, treat it as a NOP.

           For add &amp; sub, we must generate the overflow exception when needed. */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><call pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:18">MIPS_DEBUG</name><argument_list pos:start="19:19" pos:end="19:25">(<argument pos:start="19:20" pos:end="19:24"><expr pos:start="19:20" pos:end="19:24"><literal type="string" pos:start="19:20" pos:end="19:24">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="27:5" pos:end="349:5">switch <condition pos:start="27:12" pos:end="27:16">(<expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">opc</name></expr>)</condition> <block pos:start="27:18" pos:end="349:5">{<block_content pos:start="29:5" pos:end="347:14">

    <case pos:start="29:5" pos:end="29:17">case <expr pos:start="29:10" pos:end="29:16"><name pos:start="29:10" pos:end="29:16">OPC_ADD</name></expr>:</case>

        <block pos:start="31:9" pos:end="73:9">{<block_content pos:start="33:13" pos:end="71:30">

            <decl_stmt pos:start="33:13" pos:end="33:43"><decl pos:start="33:13" pos:end="33:42"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">TCGv</name></type> <name pos:start="33:18" pos:end="33:19">t0</name> <init pos:start="33:21" pos:end="33:42">= <expr pos:start="33:23" pos:end="33:42"><call pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:40">tcg_temp_local_new</name><argument_list pos:start="33:41" pos:end="33:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:37"><decl pos:start="35:13" pos:end="35:36"><type pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">TCGv</name></type> <name pos:start="35:18" pos:end="35:19">t1</name> <init pos:start="35:21" pos:end="35:36">= <expr pos:start="35:23" pos:end="35:36"><call pos:start="35:23" pos:end="35:36"><name pos:start="35:23" pos:end="35:34">tcg_temp_new</name><argument_list pos:start="35:35" pos:end="35:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:37"><decl pos:start="37:13" pos:end="37:36"><type pos:start="37:13" pos:end="37:16"><name pos:start="37:13" pos:end="37:16">TCGv</name></type> <name pos:start="37:18" pos:end="37:19">t2</name> <init pos:start="37:21" pos:end="37:36">= <expr pos:start="37:23" pos:end="37:36"><call pos:start="37:23" pos:end="37:36"><name pos:start="37:23" pos:end="37:34">tcg_temp_new</name><argument_list pos:start="37:35" pos:end="37:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:37"><decl pos:start="39:13" pos:end="39:36"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:18">l1</name> <init pos:start="39:20" pos:end="39:36">= <expr pos:start="39:22" pos:end="39:36"><call pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:34">gen_new_label</name><argument_list pos:start="39:35" pos:end="39:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><call pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:24">gen_load_gpr</name><argument_list pos:start="43:25" pos:end="43:32">(<argument pos:start="43:26" pos:end="43:27"><expr pos:start="43:26" pos:end="43:27"><name pos:start="43:26" pos:end="43:27">t1</name></expr></argument>, <argument pos:start="43:30" pos:end="43:31"><expr pos:start="43:30" pos:end="43:31"><name pos:start="43:30" pos:end="43:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><call pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:24">gen_load_gpr</name><argument_list pos:start="45:25" pos:end="45:32">(<argument pos:start="45:26" pos:end="45:27"><expr pos:start="45:26" pos:end="45:27"><name pos:start="45:26" pos:end="45:27">t2</name></expr></argument>, <argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><name pos:start="45:30" pos:end="45:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><call pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:26">tcg_gen_add_tl</name><argument_list pos:start="47:27" pos:end="47:38">(<argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">t0</name></expr></argument>, <argument pos:start="47:32" pos:end="47:33"><expr pos:start="47:32" pos:end="47:33"><name pos:start="47:32" pos:end="47:33">t1</name></expr></argument>, <argument pos:start="47:36" pos:end="47:37"><expr pos:start="47:36" pos:end="47:37"><name pos:start="47:36" pos:end="47:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:38"><expr pos:start="49:13" pos:end="49:37"><call pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:29">tcg_gen_ext32s_tl</name><argument_list pos:start="49:30" pos:end="49:37">(<argument pos:start="49:31" pos:end="49:32"><expr pos:start="49:31" pos:end="49:32"><name pos:start="49:31" pos:end="49:32">t0</name></expr></argument>, <argument pos:start="49:35" pos:end="49:36"><expr pos:start="49:35" pos:end="49:36"><name pos:start="49:35" pos:end="49:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><call pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:26">tcg_gen_xor_tl</name><argument_list pos:start="51:27" pos:end="51:38">(<argument pos:start="51:28" pos:end="51:29"><expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">t1</name></expr></argument>, <argument pos:start="51:32" pos:end="51:33"><expr pos:start="51:32" pos:end="51:33"><name pos:start="51:32" pos:end="51:33">t1</name></expr></argument>, <argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><name pos:start="51:36" pos:end="51:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><call pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:26">tcg_gen_xor_tl</name><argument_list pos:start="53:27" pos:end="53:38">(<argument pos:start="53:28" pos:end="53:29"><expr pos:start="53:28" pos:end="53:29"><name pos:start="53:28" pos:end="53:29">t2</name></expr></argument>, <argument pos:start="53:32" pos:end="53:33"><expr pos:start="53:32" pos:end="53:33"><name pos:start="53:32" pos:end="53:33">t0</name></expr></argument>, <argument pos:start="53:36" pos:end="53:37"><expr pos:start="53:36" pos:end="53:37"><name pos:start="53:36" pos:end="53:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><call pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:27">tcg_gen_andc_tl</name><argument_list pos:start="55:28" pos:end="55:39">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">t1</name></expr></argument>, <argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">t2</name></expr></argument>, <argument pos:start="55:37" pos:end="55:38"><expr pos:start="55:37" pos:end="55:38"><name pos:start="55:37" pos:end="55:38">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><call pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:25">tcg_temp_free</name><argument_list pos:start="57:26" pos:end="57:29">(<argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:55"><expr pos:start="59:13" pos:end="59:54"><call pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:30">tcg_gen_brcondi_tl</name><argument_list pos:start="59:31" pos:end="59:54">(<argument pos:start="59:32" pos:end="59:42"><expr pos:start="59:32" pos:end="59:42"><name pos:start="59:32" pos:end="59:42">TCG_COND_GE</name></expr></argument>, <argument pos:start="59:45" pos:end="59:46"><expr pos:start="59:45" pos:end="59:46"><name pos:start="59:45" pos:end="59:46">t1</name></expr></argument>, <argument pos:start="59:49" pos:end="59:49"><expr pos:start="59:49" pos:end="59:49"><literal type="number" pos:start="59:49" pos:end="59:49">0</literal></expr></argument>, <argument pos:start="59:52" pos:end="59:53"><expr pos:start="59:52" pos:end="59:53"><name pos:start="59:52" pos:end="59:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><call pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:25">tcg_temp_free</name><argument_list pos:start="61:26" pos:end="61:29">(<argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="63:13" pos:end="63:62">/* operands of same sign, result different sign */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:51"><expr pos:start="65:13" pos:end="65:50"><call pos:start="65:13" pos:end="65:50"><name pos:start="65:13" pos:end="65:30">generate_exception</name><argument_list pos:start="65:31" pos:end="65:50">(<argument pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:34">ctx</name></expr></argument>, <argument pos:start="65:37" pos:end="65:49"><expr pos:start="65:37" pos:end="65:49"><name pos:start="65:37" pos:end="65:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:30"><expr pos:start="67:13" pos:end="67:29"><call pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:25">gen_set_label</name><argument_list pos:start="67:26" pos:end="67:29">(<argument pos:start="67:27" pos:end="67:28"><expr pos:start="67:27" pos:end="67:28"><name pos:start="67:27" pos:end="67:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><call pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:25">gen_store_gpr</name><argument_list pos:start="69:26" pos:end="69:33">(<argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">t0</name></expr></argument>, <argument pos:start="69:31" pos:end="69:32"><expr pos:start="69:31" pos:end="69:32"><name pos:start="69:31" pos:end="69:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><call pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:25">tcg_temp_free</name><argument_list pos:start="71:26" pos:end="71:29">(<argument pos:start="71:27" pos:end="71:28"><expr pos:start="71:27" pos:end="71:28"><name pos:start="71:27" pos:end="71:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="75:9" pos:end="75:20"><expr pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:11">opn</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <literal type="string" pos:start="75:15" pos:end="75:19">"add"</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:18">case <expr pos:start="79:10" pos:end="79:17"><name pos:start="79:10" pos:end="79:17">OPC_ADDU</name></expr>:</case>

        <if_stmt pos:start="81:9" pos:end="99:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:31">(<expr pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:14">rs</name> <operator pos:start="81:16" pos:end="81:17">!=</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal> <operator pos:start="81:21" pos:end="81:22">&amp;&amp;</operator> <name pos:start="81:24" pos:end="81:25">rt</name> <operator pos:start="81:27" pos:end="81:28">!=</operator> <literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr>)</condition> <block pos:start="81:33" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:56">

            <expr_stmt pos:start="83:13" pos:end="83:66"><expr pos:start="83:13" pos:end="83:65"><call pos:start="83:13" pos:end="83:65"><name pos:start="83:13" pos:end="83:26">tcg_gen_add_tl</name><argument_list pos:start="83:27" pos:end="83:65">(<argument pos:start="83:28" pos:end="83:38"><expr pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:34">cpu_gpr</name><index pos:start="83:35" pos:end="83:38">[<expr pos:start="83:36" pos:end="83:37"><name pos:start="83:36" pos:end="83:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="83:41" pos:end="83:51"><expr pos:start="83:41" pos:end="83:51"><name pos:start="83:41" pos:end="83:51"><name pos:start="83:41" pos:end="83:47">cpu_gpr</name><index pos:start="83:48" pos:end="83:51">[<expr pos:start="83:49" pos:end="83:50"><name pos:start="83:49" pos:end="83:50">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="83:54" pos:end="83:64"><expr pos:start="83:54" pos:end="83:64"><name pos:start="83:54" pos:end="83:64"><name pos:start="83:54" pos:end="83:60">cpu_gpr</name><index pos:start="83:61" pos:end="83:64">[<expr pos:start="83:62" pos:end="83:63"><name pos:start="83:62" pos:end="83:63">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:56"><expr pos:start="85:13" pos:end="85:55"><call pos:start="85:13" pos:end="85:55"><name pos:start="85:13" pos:end="85:29">tcg_gen_ext32s_tl</name><argument_list pos:start="85:30" pos:end="85:55">(<argument pos:start="85:31" pos:end="85:41"><expr pos:start="85:31" pos:end="85:41"><name pos:start="85:31" pos:end="85:41"><name pos:start="85:31" pos:end="85:37">cpu_gpr</name><index pos:start="85:38" pos:end="85:41">[<expr pos:start="85:39" pos:end="85:40"><name pos:start="85:39" pos:end="85:40">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="85:44" pos:end="85:54"><expr pos:start="85:44" pos:end="85:54"><name pos:start="85:44" pos:end="85:54"><name pos:start="85:44" pos:end="85:50">cpu_gpr</name><index pos:start="85:51" pos:end="85:54">[<expr pos:start="85:52" pos:end="85:53"><name pos:start="85:52" pos:end="85:53">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="87:11" pos:end="91:9">else if <condition pos:start="87:19" pos:end="87:38">(<expr pos:start="87:20" pos:end="87:37"><name pos:start="87:20" pos:end="87:21">rs</name> <operator pos:start="87:23" pos:end="87:24">==</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal> <operator pos:start="87:28" pos:end="87:29">&amp;&amp;</operator> <name pos:start="87:31" pos:end="87:32">rt</name> <operator pos:start="87:34" pos:end="87:35">!=</operator> <literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr>)</condition> <block pos:start="87:40" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:53">

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><call pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:26">tcg_gen_mov_tl</name><argument_list pos:start="89:27" pos:end="89:52">(<argument pos:start="89:28" pos:end="89:38"><expr pos:start="89:28" pos:end="89:38"><name pos:start="89:28" pos:end="89:38"><name pos:start="89:28" pos:end="89:34">cpu_gpr</name><index pos:start="89:35" pos:end="89:38">[<expr pos:start="89:36" pos:end="89:37"><name pos:start="89:36" pos:end="89:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="89:41" pos:end="89:51"><expr pos:start="89:41" pos:end="89:51"><name pos:start="89:41" pos:end="89:51"><name pos:start="89:41" pos:end="89:47">cpu_gpr</name><index pos:start="89:48" pos:end="89:51">[<expr pos:start="89:49" pos:end="89:50"><name pos:start="89:49" pos:end="89:50">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="91:11" pos:end="95:9">else if <condition pos:start="91:19" pos:end="91:38">(<expr pos:start="91:20" pos:end="91:37"><name pos:start="91:20" pos:end="91:21">rs</name> <operator pos:start="91:23" pos:end="91:24">!=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">0</literal> <operator pos:start="91:28" pos:end="91:29">&amp;&amp;</operator> <name pos:start="91:31" pos:end="91:32">rt</name> <operator pos:start="91:34" pos:end="91:35">==</operator> <literal type="number" pos:start="91:37" pos:end="91:37">0</literal></expr>)</condition> <block pos:start="91:40" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:53">

            <expr_stmt pos:start="93:13" pos:end="93:53"><expr pos:start="93:13" pos:end="93:52"><call pos:start="93:13" pos:end="93:52"><name pos:start="93:13" pos:end="93:26">tcg_gen_mov_tl</name><argument_list pos:start="93:27" pos:end="93:52">(<argument pos:start="93:28" pos:end="93:38"><expr pos:start="93:28" pos:end="93:38"><name pos:start="93:28" pos:end="93:38"><name pos:start="93:28" pos:end="93:34">cpu_gpr</name><index pos:start="93:35" pos:end="93:38">[<expr pos:start="93:36" pos:end="93:37"><name pos:start="93:36" pos:end="93:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="93:41" pos:end="93:51"><expr pos:start="93:41" pos:end="93:51"><name pos:start="93:41" pos:end="93:51"><name pos:start="93:41" pos:end="93:47">cpu_gpr</name><index pos:start="93:48" pos:end="93:51">[<expr pos:start="93:49" pos:end="93:50"><name pos:start="93:49" pos:end="93:50">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="99:9">else <block pos:start="95:16" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:44">

            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><call pos:start="97:13" pos:end="97:43"><name pos:start="97:13" pos:end="97:27">tcg_gen_movi_tl</name><argument_list pos:start="97:28" pos:end="97:43">(<argument pos:start="97:29" pos:end="97:39"><expr pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:35">cpu_gpr</name><index pos:start="97:36" pos:end="97:39">[<expr pos:start="97:37" pos:end="97:38"><name pos:start="97:37" pos:end="97:38">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="97:42" pos:end="97:42"><expr pos:start="97:42" pos:end="97:42"><literal type="number" pos:start="97:42" pos:end="97:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:11">opn</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <literal type="string" pos:start="101:15" pos:end="101:20">"addu"</literal></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:17">case <expr pos:start="105:10" pos:end="105:16"><name pos:start="105:10" pos:end="105:16">OPC_SUB</name></expr>:</case>

        <block pos:start="107:9" pos:end="149:9">{<block_content pos:start="109:13" pos:end="147:30">

            <decl_stmt pos:start="109:13" pos:end="109:43"><decl pos:start="109:13" pos:end="109:42"><type pos:start="109:13" pos:end="109:16"><name pos:start="109:13" pos:end="109:16">TCGv</name></type> <name pos:start="109:18" pos:end="109:19">t0</name> <init pos:start="109:21" pos:end="109:42">= <expr pos:start="109:23" pos:end="109:42"><call pos:start="109:23" pos:end="109:42"><name pos:start="109:23" pos:end="109:40">tcg_temp_local_new</name><argument_list pos:start="109:41" pos:end="109:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="111:13" pos:end="111:37"><decl pos:start="111:13" pos:end="111:36"><type pos:start="111:13" pos:end="111:16"><name pos:start="111:13" pos:end="111:16">TCGv</name></type> <name pos:start="111:18" pos:end="111:19">t1</name> <init pos:start="111:21" pos:end="111:36">= <expr pos:start="111:23" pos:end="111:36"><call pos:start="111:23" pos:end="111:36"><name pos:start="111:23" pos:end="111:34">tcg_temp_new</name><argument_list pos:start="111:35" pos:end="111:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="113:13" pos:end="113:37"><decl pos:start="113:13" pos:end="113:36"><type pos:start="113:13" pos:end="113:16"><name pos:start="113:13" pos:end="113:16">TCGv</name></type> <name pos:start="113:18" pos:end="113:19">t2</name> <init pos:start="113:21" pos:end="113:36">= <expr pos:start="113:23" pos:end="113:36"><call pos:start="113:23" pos:end="113:36"><name pos:start="113:23" pos:end="113:34">tcg_temp_new</name><argument_list pos:start="113:35" pos:end="113:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="115:13" pos:end="115:37"><decl pos:start="115:13" pos:end="115:36"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:18">l1</name> <init pos:start="115:20" pos:end="115:36">= <expr pos:start="115:22" pos:end="115:36"><call pos:start="115:22" pos:end="115:36"><name pos:start="115:22" pos:end="115:34">gen_new_label</name><argument_list pos:start="115:35" pos:end="115:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:33"><expr pos:start="119:13" pos:end="119:32"><call pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:24">gen_load_gpr</name><argument_list pos:start="119:25" pos:end="119:32">(<argument pos:start="119:26" pos:end="119:27"><expr pos:start="119:26" pos:end="119:27"><name pos:start="119:26" pos:end="119:27">t1</name></expr></argument>, <argument pos:start="119:30" pos:end="119:31"><expr pos:start="119:30" pos:end="119:31"><name pos:start="119:30" pos:end="119:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><call pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:24">gen_load_gpr</name><argument_list pos:start="121:25" pos:end="121:32">(<argument pos:start="121:26" pos:end="121:27"><expr pos:start="121:26" pos:end="121:27"><name pos:start="121:26" pos:end="121:27">t2</name></expr></argument>, <argument pos:start="121:30" pos:end="121:31"><expr pos:start="121:30" pos:end="121:31"><name pos:start="121:30" pos:end="121:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:39"><expr pos:start="123:13" pos:end="123:38"><call pos:start="123:13" pos:end="123:38"><name pos:start="123:13" pos:end="123:26">tcg_gen_sub_tl</name><argument_list pos:start="123:27" pos:end="123:38">(<argument pos:start="123:28" pos:end="123:29"><expr pos:start="123:28" pos:end="123:29"><name pos:start="123:28" pos:end="123:29">t0</name></expr></argument>, <argument pos:start="123:32" pos:end="123:33"><expr pos:start="123:32" pos:end="123:33"><name pos:start="123:32" pos:end="123:33">t1</name></expr></argument>, <argument pos:start="123:36" pos:end="123:37"><expr pos:start="123:36" pos:end="123:37"><name pos:start="123:36" pos:end="123:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:38"><expr pos:start="125:13" pos:end="125:37"><call pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:29">tcg_gen_ext32s_tl</name><argument_list pos:start="125:30" pos:end="125:37">(<argument pos:start="125:31" pos:end="125:32"><expr pos:start="125:31" pos:end="125:32"><name pos:start="125:31" pos:end="125:32">t0</name></expr></argument>, <argument pos:start="125:35" pos:end="125:36"><expr pos:start="125:35" pos:end="125:36"><name pos:start="125:35" pos:end="125:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:39"><expr pos:start="127:13" pos:end="127:38"><call pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:26">tcg_gen_xor_tl</name><argument_list pos:start="127:27" pos:end="127:38">(<argument pos:start="127:28" pos:end="127:29"><expr pos:start="127:28" pos:end="127:29"><name pos:start="127:28" pos:end="127:29">t2</name></expr></argument>, <argument pos:start="127:32" pos:end="127:33"><expr pos:start="127:32" pos:end="127:33"><name pos:start="127:32" pos:end="127:33">t1</name></expr></argument>, <argument pos:start="127:36" pos:end="127:37"><expr pos:start="127:36" pos:end="127:37"><name pos:start="127:36" pos:end="127:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:39"><expr pos:start="129:13" pos:end="129:38"><call pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:26">tcg_gen_xor_tl</name><argument_list pos:start="129:27" pos:end="129:38">(<argument pos:start="129:28" pos:end="129:29"><expr pos:start="129:28" pos:end="129:29"><name pos:start="129:28" pos:end="129:29">t1</name></expr></argument>, <argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><name pos:start="129:32" pos:end="129:33">t0</name></expr></argument>, <argument pos:start="129:36" pos:end="129:37"><expr pos:start="129:36" pos:end="129:37"><name pos:start="129:36" pos:end="129:37">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:39"><expr pos:start="131:13" pos:end="131:38"><call pos:start="131:13" pos:end="131:38"><name pos:start="131:13" pos:end="131:26">tcg_gen_and_tl</name><argument_list pos:start="131:27" pos:end="131:38">(<argument pos:start="131:28" pos:end="131:29"><expr pos:start="131:28" pos:end="131:29"><name pos:start="131:28" pos:end="131:29">t1</name></expr></argument>, <argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><name pos:start="131:32" pos:end="131:33">t1</name></expr></argument>, <argument pos:start="131:36" pos:end="131:37"><expr pos:start="131:36" pos:end="131:37"><name pos:start="131:36" pos:end="131:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:30"><expr pos:start="133:13" pos:end="133:29"><call pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:25">tcg_temp_free</name><argument_list pos:start="133:26" pos:end="133:29">(<argument pos:start="133:27" pos:end="133:28"><expr pos:start="133:27" pos:end="133:28"><name pos:start="133:27" pos:end="133:28">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:55"><expr pos:start="135:13" pos:end="135:54"><call pos:start="135:13" pos:end="135:54"><name pos:start="135:13" pos:end="135:30">tcg_gen_brcondi_tl</name><argument_list pos:start="135:31" pos:end="135:54">(<argument pos:start="135:32" pos:end="135:42"><expr pos:start="135:32" pos:end="135:42"><name pos:start="135:32" pos:end="135:42">TCG_COND_GE</name></expr></argument>, <argument pos:start="135:45" pos:end="135:46"><expr pos:start="135:45" pos:end="135:46"><name pos:start="135:45" pos:end="135:46">t1</name></expr></argument>, <argument pos:start="135:49" pos:end="135:49"><expr pos:start="135:49" pos:end="135:49"><literal type="number" pos:start="135:49" pos:end="135:49">0</literal></expr></argument>, <argument pos:start="135:52" pos:end="135:53"><expr pos:start="135:52" pos:end="135:53"><name pos:start="135:52" pos:end="135:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:30"><expr pos:start="137:13" pos:end="137:29"><call pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:25">tcg_temp_free</name><argument_list pos:start="137:26" pos:end="137:29">(<argument pos:start="137:27" pos:end="137:28"><expr pos:start="137:27" pos:end="137:28"><name pos:start="137:27" pos:end="137:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="139:13" pos:end="139:85">/* operands of different sign, first operand and result different sign */</comment>

            <expr_stmt pos:start="141:13" pos:end="141:51"><expr pos:start="141:13" pos:end="141:50"><call pos:start="141:13" pos:end="141:50"><name pos:start="141:13" pos:end="141:30">generate_exception</name><argument_list pos:start="141:31" pos:end="141:50">(<argument pos:start="141:32" pos:end="141:34"><expr pos:start="141:32" pos:end="141:34"><name pos:start="141:32" pos:end="141:34">ctx</name></expr></argument>, <argument pos:start="141:37" pos:end="141:49"><expr pos:start="141:37" pos:end="141:49"><name pos:start="141:37" pos:end="141:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:30"><expr pos:start="143:13" pos:end="143:29"><call pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:25">gen_set_label</name><argument_list pos:start="143:26" pos:end="143:29">(<argument pos:start="143:27" pos:end="143:28"><expr pos:start="143:27" pos:end="143:28"><name pos:start="143:27" pos:end="143:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:34"><expr pos:start="145:13" pos:end="145:33"><call pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:25">gen_store_gpr</name><argument_list pos:start="145:26" pos:end="145:33">(<argument pos:start="145:27" pos:end="145:28"><expr pos:start="145:27" pos:end="145:28"><name pos:start="145:27" pos:end="145:28">t0</name></expr></argument>, <argument pos:start="145:31" pos:end="145:32"><expr pos:start="145:31" pos:end="145:32"><name pos:start="145:31" pos:end="145:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:29"><call pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:25">tcg_temp_free</name><argument_list pos:start="147:26" pos:end="147:29">(<argument pos:start="147:27" pos:end="147:28"><expr pos:start="147:27" pos:end="147:28"><name pos:start="147:27" pos:end="147:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="151:9" pos:end="151:20"><expr pos:start="151:9" pos:end="151:19"><name pos:start="151:9" pos:end="151:11">opn</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <literal type="string" pos:start="151:15" pos:end="151:19">"sub"</literal></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:18">case <expr pos:start="155:10" pos:end="155:17"><name pos:start="155:10" pos:end="155:17">OPC_SUBU</name></expr>:</case>

        <if_stmt pos:start="157:9" pos:end="177:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:31">(<expr pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:14">rs</name> <operator pos:start="157:16" pos:end="157:17">!=</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal> <operator pos:start="157:21" pos:end="157:22">&amp;&amp;</operator> <name pos:start="157:24" pos:end="157:25">rt</name> <operator pos:start="157:27" pos:end="157:28">!=</operator> <literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr>)</condition> <block pos:start="157:33" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:56">

            <expr_stmt pos:start="159:13" pos:end="159:66"><expr pos:start="159:13" pos:end="159:65"><call pos:start="159:13" pos:end="159:65"><name pos:start="159:13" pos:end="159:26">tcg_gen_sub_tl</name><argument_list pos:start="159:27" pos:end="159:65">(<argument pos:start="159:28" pos:end="159:38"><expr pos:start="159:28" pos:end="159:38"><name pos:start="159:28" pos:end="159:38"><name pos:start="159:28" pos:end="159:34">cpu_gpr</name><index pos:start="159:35" pos:end="159:38">[<expr pos:start="159:36" pos:end="159:37"><name pos:start="159:36" pos:end="159:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="159:41" pos:end="159:51"><expr pos:start="159:41" pos:end="159:51"><name pos:start="159:41" pos:end="159:51"><name pos:start="159:41" pos:end="159:47">cpu_gpr</name><index pos:start="159:48" pos:end="159:51">[<expr pos:start="159:49" pos:end="159:50"><name pos:start="159:49" pos:end="159:50">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="159:54" pos:end="159:64"><expr pos:start="159:54" pos:end="159:64"><name pos:start="159:54" pos:end="159:64"><name pos:start="159:54" pos:end="159:60">cpu_gpr</name><index pos:start="159:61" pos:end="159:64">[<expr pos:start="159:62" pos:end="159:63"><name pos:start="159:62" pos:end="159:63">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:56"><expr pos:start="161:13" pos:end="161:55"><call pos:start="161:13" pos:end="161:55"><name pos:start="161:13" pos:end="161:29">tcg_gen_ext32s_tl</name><argument_list pos:start="161:30" pos:end="161:55">(<argument pos:start="161:31" pos:end="161:41"><expr pos:start="161:31" pos:end="161:41"><name pos:start="161:31" pos:end="161:41"><name pos:start="161:31" pos:end="161:37">cpu_gpr</name><index pos:start="161:38" pos:end="161:41">[<expr pos:start="161:39" pos:end="161:40"><name pos:start="161:39" pos:end="161:40">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="161:44" pos:end="161:54"><expr pos:start="161:44" pos:end="161:54"><name pos:start="161:44" pos:end="161:54"><name pos:start="161:44" pos:end="161:50">cpu_gpr</name><index pos:start="161:51" pos:end="161:54">[<expr pos:start="161:52" pos:end="161:53"><name pos:start="161:52" pos:end="161:53">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="163:11" pos:end="169:9">else if <condition pos:start="163:19" pos:end="163:38">(<expr pos:start="163:20" pos:end="163:37"><name pos:start="163:20" pos:end="163:21">rs</name> <operator pos:start="163:23" pos:end="163:24">==</operator> <literal type="number" pos:start="163:26" pos:end="163:26">0</literal> <operator pos:start="163:28" pos:end="163:29">&amp;&amp;</operator> <name pos:start="163:31" pos:end="163:32">rt</name> <operator pos:start="163:34" pos:end="163:35">!=</operator> <literal type="number" pos:start="163:37" pos:end="163:37">0</literal></expr>)</condition> <block pos:start="163:40" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:56">

            <expr_stmt pos:start="165:13" pos:end="165:53"><expr pos:start="165:13" pos:end="165:52"><call pos:start="165:13" pos:end="165:52"><name pos:start="165:13" pos:end="165:26">tcg_gen_neg_tl</name><argument_list pos:start="165:27" pos:end="165:52">(<argument pos:start="165:28" pos:end="165:38"><expr pos:start="165:28" pos:end="165:38"><name pos:start="165:28" pos:end="165:38"><name pos:start="165:28" pos:end="165:34">cpu_gpr</name><index pos:start="165:35" pos:end="165:38">[<expr pos:start="165:36" pos:end="165:37"><name pos:start="165:36" pos:end="165:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="165:41" pos:end="165:51"><expr pos:start="165:41" pos:end="165:51"><name pos:start="165:41" pos:end="165:51"><name pos:start="165:41" pos:end="165:47">cpu_gpr</name><index pos:start="165:48" pos:end="165:51">[<expr pos:start="165:49" pos:end="165:50"><name pos:start="165:49" pos:end="165:50">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:56"><expr pos:start="167:13" pos:end="167:55"><call pos:start="167:13" pos:end="167:55"><name pos:start="167:13" pos:end="167:29">tcg_gen_ext32s_tl</name><argument_list pos:start="167:30" pos:end="167:55">(<argument pos:start="167:31" pos:end="167:41"><expr pos:start="167:31" pos:end="167:41"><name pos:start="167:31" pos:end="167:41"><name pos:start="167:31" pos:end="167:37">cpu_gpr</name><index pos:start="167:38" pos:end="167:41">[<expr pos:start="167:39" pos:end="167:40"><name pos:start="167:39" pos:end="167:40">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="167:44" pos:end="167:54"><expr pos:start="167:44" pos:end="167:54"><name pos:start="167:44" pos:end="167:54"><name pos:start="167:44" pos:end="167:50">cpu_gpr</name><index pos:start="167:51" pos:end="167:54">[<expr pos:start="167:52" pos:end="167:53"><name pos:start="167:52" pos:end="167:53">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="173:9">else if <condition pos:start="169:19" pos:end="169:38">(<expr pos:start="169:20" pos:end="169:37"><name pos:start="169:20" pos:end="169:21">rs</name> <operator pos:start="169:23" pos:end="169:24">!=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">0</literal> <operator pos:start="169:28" pos:end="169:29">&amp;&amp;</operator> <name pos:start="169:31" pos:end="169:32">rt</name> <operator pos:start="169:34" pos:end="169:35">==</operator> <literal type="number" pos:start="169:37" pos:end="169:37">0</literal></expr>)</condition> <block pos:start="169:40" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:53">

            <expr_stmt pos:start="171:13" pos:end="171:53"><expr pos:start="171:13" pos:end="171:52"><call pos:start="171:13" pos:end="171:52"><name pos:start="171:13" pos:end="171:26">tcg_gen_mov_tl</name><argument_list pos:start="171:27" pos:end="171:52">(<argument pos:start="171:28" pos:end="171:38"><expr pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:34">cpu_gpr</name><index pos:start="171:35" pos:end="171:38">[<expr pos:start="171:36" pos:end="171:37"><name pos:start="171:36" pos:end="171:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="171:41" pos:end="171:51"><expr pos:start="171:41" pos:end="171:51"><name pos:start="171:41" pos:end="171:51"><name pos:start="171:41" pos:end="171:47">cpu_gpr</name><index pos:start="171:48" pos:end="171:51">[<expr pos:start="171:49" pos:end="171:50"><name pos:start="171:49" pos:end="171:50">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="173:11" pos:end="177:9">else <block pos:start="173:16" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:44">

            <expr_stmt pos:start="175:13" pos:end="175:44"><expr pos:start="175:13" pos:end="175:43"><call pos:start="175:13" pos:end="175:43"><name pos:start="175:13" pos:end="175:27">tcg_gen_movi_tl</name><argument_list pos:start="175:28" pos:end="175:43">(<argument pos:start="175:29" pos:end="175:39"><expr pos:start="175:29" pos:end="175:39"><name pos:start="175:29" pos:end="175:39"><name pos:start="175:29" pos:end="175:35">cpu_gpr</name><index pos:start="175:36" pos:end="175:39">[<expr pos:start="175:37" pos:end="175:38"><name pos:start="175:37" pos:end="175:38">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="175:42" pos:end="175:42"><expr pos:start="175:42" pos:end="175:42"><literal type="number" pos:start="175:42" pos:end="175:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:21"><expr pos:start="179:9" pos:end="179:20"><name pos:start="179:9" pos:end="179:11">opn</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <literal type="string" pos:start="179:15" pos:end="179:20">"subu"</literal></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="184:0">break;</break>

<cpp:if pos:start="183:1" pos:end="183:26">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:26"><call pos:start="183:5" pos:end="183:26"><name pos:start="183:5" pos:end="183:11">defined</name><argument_list pos:start="183:12" pos:end="183:26">(<argument pos:start="183:13" pos:end="183:25"><expr pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="185:5" pos:end="185:18">case <expr pos:start="185:10" pos:end="185:17"><name pos:start="185:10" pos:end="185:17">OPC_DADD</name></expr>:</case>

        <block pos:start="187:9" pos:end="227:9">{<block_content pos:start="189:13" pos:end="225:30">

            <decl_stmt pos:start="189:13" pos:end="189:43"><decl pos:start="189:13" pos:end="189:42"><type pos:start="189:13" pos:end="189:16"><name pos:start="189:13" pos:end="189:16">TCGv</name></type> <name pos:start="189:18" pos:end="189:19">t0</name> <init pos:start="189:21" pos:end="189:42">= <expr pos:start="189:23" pos:end="189:42"><call pos:start="189:23" pos:end="189:42"><name pos:start="189:23" pos:end="189:40">tcg_temp_local_new</name><argument_list pos:start="189:41" pos:end="189:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="191:13" pos:end="191:37"><decl pos:start="191:13" pos:end="191:36"><type pos:start="191:13" pos:end="191:16"><name pos:start="191:13" pos:end="191:16">TCGv</name></type> <name pos:start="191:18" pos:end="191:19">t1</name> <init pos:start="191:21" pos:end="191:36">= <expr pos:start="191:23" pos:end="191:36"><call pos:start="191:23" pos:end="191:36"><name pos:start="191:23" pos:end="191:34">tcg_temp_new</name><argument_list pos:start="191:35" pos:end="191:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="193:13" pos:end="193:37"><decl pos:start="193:13" pos:end="193:36"><type pos:start="193:13" pos:end="193:16"><name pos:start="193:13" pos:end="193:16">TCGv</name></type> <name pos:start="193:18" pos:end="193:19">t2</name> <init pos:start="193:21" pos:end="193:36">= <expr pos:start="193:23" pos:end="193:36"><call pos:start="193:23" pos:end="193:36"><name pos:start="193:23" pos:end="193:34">tcg_temp_new</name><argument_list pos:start="193:35" pos:end="193:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="195:13" pos:end="195:37"><decl pos:start="195:13" pos:end="195:36"><type pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:15">int</name></type> <name pos:start="195:17" pos:end="195:18">l1</name> <init pos:start="195:20" pos:end="195:36">= <expr pos:start="195:22" pos:end="195:36"><call pos:start="195:22" pos:end="195:36"><name pos:start="195:22" pos:end="195:34">gen_new_label</name><argument_list pos:start="195:35" pos:end="195:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="199:13" pos:end="199:33"><expr pos:start="199:13" pos:end="199:32"><call pos:start="199:13" pos:end="199:32"><name pos:start="199:13" pos:end="199:24">gen_load_gpr</name><argument_list pos:start="199:25" pos:end="199:32">(<argument pos:start="199:26" pos:end="199:27"><expr pos:start="199:26" pos:end="199:27"><name pos:start="199:26" pos:end="199:27">t1</name></expr></argument>, <argument pos:start="199:30" pos:end="199:31"><expr pos:start="199:30" pos:end="199:31"><name pos:start="199:30" pos:end="199:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:33"><expr pos:start="201:13" pos:end="201:32"><call pos:start="201:13" pos:end="201:32"><name pos:start="201:13" pos:end="201:24">gen_load_gpr</name><argument_list pos:start="201:25" pos:end="201:32">(<argument pos:start="201:26" pos:end="201:27"><expr pos:start="201:26" pos:end="201:27"><name pos:start="201:26" pos:end="201:27">t2</name></expr></argument>, <argument pos:start="201:30" pos:end="201:31"><expr pos:start="201:30" pos:end="201:31"><name pos:start="201:30" pos:end="201:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:39"><expr pos:start="203:13" pos:end="203:38"><call pos:start="203:13" pos:end="203:38"><name pos:start="203:13" pos:end="203:26">tcg_gen_add_tl</name><argument_list pos:start="203:27" pos:end="203:38">(<argument pos:start="203:28" pos:end="203:29"><expr pos:start="203:28" pos:end="203:29"><name pos:start="203:28" pos:end="203:29">t0</name></expr></argument>, <argument pos:start="203:32" pos:end="203:33"><expr pos:start="203:32" pos:end="203:33"><name pos:start="203:32" pos:end="203:33">t1</name></expr></argument>, <argument pos:start="203:36" pos:end="203:37"><expr pos:start="203:36" pos:end="203:37"><name pos:start="203:36" pos:end="203:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:39"><expr pos:start="205:13" pos:end="205:38"><call pos:start="205:13" pos:end="205:38"><name pos:start="205:13" pos:end="205:26">tcg_gen_xor_tl</name><argument_list pos:start="205:27" pos:end="205:38">(<argument pos:start="205:28" pos:end="205:29"><expr pos:start="205:28" pos:end="205:29"><name pos:start="205:28" pos:end="205:29">t1</name></expr></argument>, <argument pos:start="205:32" pos:end="205:33"><expr pos:start="205:32" pos:end="205:33"><name pos:start="205:32" pos:end="205:33">t1</name></expr></argument>, <argument pos:start="205:36" pos:end="205:37"><expr pos:start="205:36" pos:end="205:37"><name pos:start="205:36" pos:end="205:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:39"><expr pos:start="207:13" pos:end="207:38"><call pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:26">tcg_gen_xor_tl</name><argument_list pos:start="207:27" pos:end="207:38">(<argument pos:start="207:28" pos:end="207:29"><expr pos:start="207:28" pos:end="207:29"><name pos:start="207:28" pos:end="207:29">t2</name></expr></argument>, <argument pos:start="207:32" pos:end="207:33"><expr pos:start="207:32" pos:end="207:33"><name pos:start="207:32" pos:end="207:33">t0</name></expr></argument>, <argument pos:start="207:36" pos:end="207:37"><expr pos:start="207:36" pos:end="207:37"><name pos:start="207:36" pos:end="207:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:40"><expr pos:start="209:13" pos:end="209:39"><call pos:start="209:13" pos:end="209:39"><name pos:start="209:13" pos:end="209:27">tcg_gen_andc_tl</name><argument_list pos:start="209:28" pos:end="209:39">(<argument pos:start="209:29" pos:end="209:30"><expr pos:start="209:29" pos:end="209:30"><name pos:start="209:29" pos:end="209:30">t1</name></expr></argument>, <argument pos:start="209:33" pos:end="209:34"><expr pos:start="209:33" pos:end="209:34"><name pos:start="209:33" pos:end="209:34">t2</name></expr></argument>, <argument pos:start="209:37" pos:end="209:38"><expr pos:start="209:37" pos:end="209:38"><name pos:start="209:37" pos:end="209:38">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:30"><expr pos:start="211:13" pos:end="211:29"><call pos:start="211:13" pos:end="211:29"><name pos:start="211:13" pos:end="211:25">tcg_temp_free</name><argument_list pos:start="211:26" pos:end="211:29">(<argument pos:start="211:27" pos:end="211:28"><expr pos:start="211:27" pos:end="211:28"><name pos:start="211:27" pos:end="211:28">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:55"><expr pos:start="213:13" pos:end="213:54"><call pos:start="213:13" pos:end="213:54"><name pos:start="213:13" pos:end="213:30">tcg_gen_brcondi_tl</name><argument_list pos:start="213:31" pos:end="213:54">(<argument pos:start="213:32" pos:end="213:42"><expr pos:start="213:32" pos:end="213:42"><name pos:start="213:32" pos:end="213:42">TCG_COND_GE</name></expr></argument>, <argument pos:start="213:45" pos:end="213:46"><expr pos:start="213:45" pos:end="213:46"><name pos:start="213:45" pos:end="213:46">t1</name></expr></argument>, <argument pos:start="213:49" pos:end="213:49"><expr pos:start="213:49" pos:end="213:49"><literal type="number" pos:start="213:49" pos:end="213:49">0</literal></expr></argument>, <argument pos:start="213:52" pos:end="213:53"><expr pos:start="213:52" pos:end="213:53"><name pos:start="213:52" pos:end="213:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:30"><expr pos:start="215:13" pos:end="215:29"><call pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:25">tcg_temp_free</name><argument_list pos:start="215:26" pos:end="215:29">(<argument pos:start="215:27" pos:end="215:28"><expr pos:start="215:27" pos:end="215:28"><name pos:start="215:27" pos:end="215:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="217:13" pos:end="217:62">/* operands of same sign, result different sign */</comment>

            <expr_stmt pos:start="219:13" pos:end="219:51"><expr pos:start="219:13" pos:end="219:50"><call pos:start="219:13" pos:end="219:50"><name pos:start="219:13" pos:end="219:30">generate_exception</name><argument_list pos:start="219:31" pos:end="219:50">(<argument pos:start="219:32" pos:end="219:34"><expr pos:start="219:32" pos:end="219:34"><name pos:start="219:32" pos:end="219:34">ctx</name></expr></argument>, <argument pos:start="219:37" pos:end="219:49"><expr pos:start="219:37" pos:end="219:49"><name pos:start="219:37" pos:end="219:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:30"><expr pos:start="221:13" pos:end="221:29"><call pos:start="221:13" pos:end="221:29"><name pos:start="221:13" pos:end="221:25">gen_set_label</name><argument_list pos:start="221:26" pos:end="221:29">(<argument pos:start="221:27" pos:end="221:28"><expr pos:start="221:27" pos:end="221:28"><name pos:start="221:27" pos:end="221:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:34"><expr pos:start="223:13" pos:end="223:33"><call pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:25">gen_store_gpr</name><argument_list pos:start="223:26" pos:end="223:33">(<argument pos:start="223:27" pos:end="223:28"><expr pos:start="223:27" pos:end="223:28"><name pos:start="223:27" pos:end="223:28">t0</name></expr></argument>, <argument pos:start="223:31" pos:end="223:32"><expr pos:start="223:31" pos:end="223:32"><name pos:start="223:31" pos:end="223:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:30"><expr pos:start="225:13" pos:end="225:29"><call pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:25">tcg_temp_free</name><argument_list pos:start="225:26" pos:end="225:29">(<argument pos:start="225:27" pos:end="225:28"><expr pos:start="225:27" pos:end="225:28"><name pos:start="225:27" pos:end="225:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="229:9" pos:end="229:21"><expr pos:start="229:9" pos:end="229:20"><name pos:start="229:9" pos:end="229:11">opn</name> <operator pos:start="229:13" pos:end="229:13">=</operator> <literal type="string" pos:start="229:15" pos:end="229:20">"dadd"</literal></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:19">case <expr pos:start="233:10" pos:end="233:18"><name pos:start="233:10" pos:end="233:18">OPC_DADDU</name></expr>:</case>

        <if_stmt pos:start="235:9" pos:end="251:9"><if pos:start="235:9" pos:end="239:9">if <condition pos:start="235:12" pos:end="235:31">(<expr pos:start="235:13" pos:end="235:30"><name pos:start="235:13" pos:end="235:14">rs</name> <operator pos:start="235:16" pos:end="235:17">!=</operator> <literal type="number" pos:start="235:19" pos:end="235:19">0</literal> <operator pos:start="235:21" pos:end="235:22">&amp;&amp;</operator> <name pos:start="235:24" pos:end="235:25">rt</name> <operator pos:start="235:27" pos:end="235:28">!=</operator> <literal type="number" pos:start="235:30" pos:end="235:30">0</literal></expr>)</condition> <block pos:start="235:33" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:66">

            <expr_stmt pos:start="237:13" pos:end="237:66"><expr pos:start="237:13" pos:end="237:65"><call pos:start="237:13" pos:end="237:65"><name pos:start="237:13" pos:end="237:26">tcg_gen_add_tl</name><argument_list pos:start="237:27" pos:end="237:65">(<argument pos:start="237:28" pos:end="237:38"><expr pos:start="237:28" pos:end="237:38"><name pos:start="237:28" pos:end="237:38"><name pos:start="237:28" pos:end="237:34">cpu_gpr</name><index pos:start="237:35" pos:end="237:38">[<expr pos:start="237:36" pos:end="237:37"><name pos:start="237:36" pos:end="237:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="237:41" pos:end="237:51"><expr pos:start="237:41" pos:end="237:51"><name pos:start="237:41" pos:end="237:51"><name pos:start="237:41" pos:end="237:47">cpu_gpr</name><index pos:start="237:48" pos:end="237:51">[<expr pos:start="237:49" pos:end="237:50"><name pos:start="237:49" pos:end="237:50">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="237:54" pos:end="237:64"><expr pos:start="237:54" pos:end="237:64"><name pos:start="237:54" pos:end="237:64"><name pos:start="237:54" pos:end="237:60">cpu_gpr</name><index pos:start="237:61" pos:end="237:64">[<expr pos:start="237:62" pos:end="237:63"><name pos:start="237:62" pos:end="237:63">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="239:11" pos:end="243:9">else if <condition pos:start="239:19" pos:end="239:38">(<expr pos:start="239:20" pos:end="239:37"><name pos:start="239:20" pos:end="239:21">rs</name> <operator pos:start="239:23" pos:end="239:24">==</operator> <literal type="number" pos:start="239:26" pos:end="239:26">0</literal> <operator pos:start="239:28" pos:end="239:29">&amp;&amp;</operator> <name pos:start="239:31" pos:end="239:32">rt</name> <operator pos:start="239:34" pos:end="239:35">!=</operator> <literal type="number" pos:start="239:37" pos:end="239:37">0</literal></expr>)</condition> <block pos:start="239:40" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:53">

            <expr_stmt pos:start="241:13" pos:end="241:53"><expr pos:start="241:13" pos:end="241:52"><call pos:start="241:13" pos:end="241:52"><name pos:start="241:13" pos:end="241:26">tcg_gen_mov_tl</name><argument_list pos:start="241:27" pos:end="241:52">(<argument pos:start="241:28" pos:end="241:38"><expr pos:start="241:28" pos:end="241:38"><name pos:start="241:28" pos:end="241:38"><name pos:start="241:28" pos:end="241:34">cpu_gpr</name><index pos:start="241:35" pos:end="241:38">[<expr pos:start="241:36" pos:end="241:37"><name pos:start="241:36" pos:end="241:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="241:41" pos:end="241:51"><expr pos:start="241:41" pos:end="241:51"><name pos:start="241:41" pos:end="241:51"><name pos:start="241:41" pos:end="241:47">cpu_gpr</name><index pos:start="241:48" pos:end="241:51">[<expr pos:start="241:49" pos:end="241:50"><name pos:start="241:49" pos:end="241:50">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="243:11" pos:end="247:9">else if <condition pos:start="243:19" pos:end="243:38">(<expr pos:start="243:20" pos:end="243:37"><name pos:start="243:20" pos:end="243:21">rs</name> <operator pos:start="243:23" pos:end="243:24">!=</operator> <literal type="number" pos:start="243:26" pos:end="243:26">0</literal> <operator pos:start="243:28" pos:end="243:29">&amp;&amp;</operator> <name pos:start="243:31" pos:end="243:32">rt</name> <operator pos:start="243:34" pos:end="243:35">==</operator> <literal type="number" pos:start="243:37" pos:end="243:37">0</literal></expr>)</condition> <block pos:start="243:40" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:53">

            <expr_stmt pos:start="245:13" pos:end="245:53"><expr pos:start="245:13" pos:end="245:52"><call pos:start="245:13" pos:end="245:52"><name pos:start="245:13" pos:end="245:26">tcg_gen_mov_tl</name><argument_list pos:start="245:27" pos:end="245:52">(<argument pos:start="245:28" pos:end="245:38"><expr pos:start="245:28" pos:end="245:38"><name pos:start="245:28" pos:end="245:38"><name pos:start="245:28" pos:end="245:34">cpu_gpr</name><index pos:start="245:35" pos:end="245:38">[<expr pos:start="245:36" pos:end="245:37"><name pos:start="245:36" pos:end="245:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="245:41" pos:end="245:51"><expr pos:start="245:41" pos:end="245:51"><name pos:start="245:41" pos:end="245:51"><name pos:start="245:41" pos:end="245:47">cpu_gpr</name><index pos:start="245:48" pos:end="245:51">[<expr pos:start="245:49" pos:end="245:50"><name pos:start="245:49" pos:end="245:50">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="247:11" pos:end="251:9">else <block pos:start="247:16" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:44">

            <expr_stmt pos:start="249:13" pos:end="249:44"><expr pos:start="249:13" pos:end="249:43"><call pos:start="249:13" pos:end="249:43"><name pos:start="249:13" pos:end="249:27">tcg_gen_movi_tl</name><argument_list pos:start="249:28" pos:end="249:43">(<argument pos:start="249:29" pos:end="249:39"><expr pos:start="249:29" pos:end="249:39"><name pos:start="249:29" pos:end="249:39"><name pos:start="249:29" pos:end="249:35">cpu_gpr</name><index pos:start="249:36" pos:end="249:39">[<expr pos:start="249:37" pos:end="249:38"><name pos:start="249:37" pos:end="249:38">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="249:42" pos:end="249:42"><expr pos:start="249:42" pos:end="249:42"><literal type="number" pos:start="249:42" pos:end="249:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:22"><expr pos:start="253:9" pos:end="253:21"><name pos:start="253:9" pos:end="253:11">opn</name> <operator pos:start="253:13" pos:end="253:13">=</operator> <literal type="string" pos:start="253:15" pos:end="253:21">"daddu"</literal></expr>;</expr_stmt>

        <break pos:start="255:9" pos:end="255:14">break;</break>

    <case pos:start="257:5" pos:end="257:18">case <expr pos:start="257:10" pos:end="257:17"><name pos:start="257:10" pos:end="257:17">OPC_DSUB</name></expr>:</case>

        <block pos:start="259:9" pos:end="299:9">{<block_content pos:start="261:13" pos:end="297:30">

            <decl_stmt pos:start="261:13" pos:end="261:43"><decl pos:start="261:13" pos:end="261:42"><type pos:start="261:13" pos:end="261:16"><name pos:start="261:13" pos:end="261:16">TCGv</name></type> <name pos:start="261:18" pos:end="261:19">t0</name> <init pos:start="261:21" pos:end="261:42">= <expr pos:start="261:23" pos:end="261:42"><call pos:start="261:23" pos:end="261:42"><name pos:start="261:23" pos:end="261:40">tcg_temp_local_new</name><argument_list pos:start="261:41" pos:end="261:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="263:13" pos:end="263:37"><decl pos:start="263:13" pos:end="263:36"><type pos:start="263:13" pos:end="263:16"><name pos:start="263:13" pos:end="263:16">TCGv</name></type> <name pos:start="263:18" pos:end="263:19">t1</name> <init pos:start="263:21" pos:end="263:36">= <expr pos:start="263:23" pos:end="263:36"><call pos:start="263:23" pos:end="263:36"><name pos:start="263:23" pos:end="263:34">tcg_temp_new</name><argument_list pos:start="263:35" pos:end="263:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="265:13" pos:end="265:37"><decl pos:start="265:13" pos:end="265:36"><type pos:start="265:13" pos:end="265:16"><name pos:start="265:13" pos:end="265:16">TCGv</name></type> <name pos:start="265:18" pos:end="265:19">t2</name> <init pos:start="265:21" pos:end="265:36">= <expr pos:start="265:23" pos:end="265:36"><call pos:start="265:23" pos:end="265:36"><name pos:start="265:23" pos:end="265:34">tcg_temp_new</name><argument_list pos:start="265:35" pos:end="265:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="267:13" pos:end="267:37"><decl pos:start="267:13" pos:end="267:36"><type pos:start="267:13" pos:end="267:15"><name pos:start="267:13" pos:end="267:15">int</name></type> <name pos:start="267:17" pos:end="267:18">l1</name> <init pos:start="267:20" pos:end="267:36">= <expr pos:start="267:22" pos:end="267:36"><call pos:start="267:22" pos:end="267:36"><name pos:start="267:22" pos:end="267:34">gen_new_label</name><argument_list pos:start="267:35" pos:end="267:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="271:13" pos:end="271:33"><expr pos:start="271:13" pos:end="271:32"><call pos:start="271:13" pos:end="271:32"><name pos:start="271:13" pos:end="271:24">gen_load_gpr</name><argument_list pos:start="271:25" pos:end="271:32">(<argument pos:start="271:26" pos:end="271:27"><expr pos:start="271:26" pos:end="271:27"><name pos:start="271:26" pos:end="271:27">t1</name></expr></argument>, <argument pos:start="271:30" pos:end="271:31"><expr pos:start="271:30" pos:end="271:31"><name pos:start="271:30" pos:end="271:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:33"><expr pos:start="273:13" pos:end="273:32"><call pos:start="273:13" pos:end="273:32"><name pos:start="273:13" pos:end="273:24">gen_load_gpr</name><argument_list pos:start="273:25" pos:end="273:32">(<argument pos:start="273:26" pos:end="273:27"><expr pos:start="273:26" pos:end="273:27"><name pos:start="273:26" pos:end="273:27">t2</name></expr></argument>, <argument pos:start="273:30" pos:end="273:31"><expr pos:start="273:30" pos:end="273:31"><name pos:start="273:30" pos:end="273:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:39"><expr pos:start="275:13" pos:end="275:38"><call pos:start="275:13" pos:end="275:38"><name pos:start="275:13" pos:end="275:26">tcg_gen_sub_tl</name><argument_list pos:start="275:27" pos:end="275:38">(<argument pos:start="275:28" pos:end="275:29"><expr pos:start="275:28" pos:end="275:29"><name pos:start="275:28" pos:end="275:29">t0</name></expr></argument>, <argument pos:start="275:32" pos:end="275:33"><expr pos:start="275:32" pos:end="275:33"><name pos:start="275:32" pos:end="275:33">t1</name></expr></argument>, <argument pos:start="275:36" pos:end="275:37"><expr pos:start="275:36" pos:end="275:37"><name pos:start="275:36" pos:end="275:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:39"><expr pos:start="277:13" pos:end="277:38"><call pos:start="277:13" pos:end="277:38"><name pos:start="277:13" pos:end="277:26">tcg_gen_xor_tl</name><argument_list pos:start="277:27" pos:end="277:38">(<argument pos:start="277:28" pos:end="277:29"><expr pos:start="277:28" pos:end="277:29"><name pos:start="277:28" pos:end="277:29">t2</name></expr></argument>, <argument pos:start="277:32" pos:end="277:33"><expr pos:start="277:32" pos:end="277:33"><name pos:start="277:32" pos:end="277:33">t1</name></expr></argument>, <argument pos:start="277:36" pos:end="277:37"><expr pos:start="277:36" pos:end="277:37"><name pos:start="277:36" pos:end="277:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:39"><expr pos:start="279:13" pos:end="279:38"><call pos:start="279:13" pos:end="279:38"><name pos:start="279:13" pos:end="279:26">tcg_gen_xor_tl</name><argument_list pos:start="279:27" pos:end="279:38">(<argument pos:start="279:28" pos:end="279:29"><expr pos:start="279:28" pos:end="279:29"><name pos:start="279:28" pos:end="279:29">t1</name></expr></argument>, <argument pos:start="279:32" pos:end="279:33"><expr pos:start="279:32" pos:end="279:33"><name pos:start="279:32" pos:end="279:33">t0</name></expr></argument>, <argument pos:start="279:36" pos:end="279:37"><expr pos:start="279:36" pos:end="279:37"><name pos:start="279:36" pos:end="279:37">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:39"><expr pos:start="281:13" pos:end="281:38"><call pos:start="281:13" pos:end="281:38"><name pos:start="281:13" pos:end="281:26">tcg_gen_and_tl</name><argument_list pos:start="281:27" pos:end="281:38">(<argument pos:start="281:28" pos:end="281:29"><expr pos:start="281:28" pos:end="281:29"><name pos:start="281:28" pos:end="281:29">t1</name></expr></argument>, <argument pos:start="281:32" pos:end="281:33"><expr pos:start="281:32" pos:end="281:33"><name pos:start="281:32" pos:end="281:33">t1</name></expr></argument>, <argument pos:start="281:36" pos:end="281:37"><expr pos:start="281:36" pos:end="281:37"><name pos:start="281:36" pos:end="281:37">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:30"><expr pos:start="283:13" pos:end="283:29"><call pos:start="283:13" pos:end="283:29"><name pos:start="283:13" pos:end="283:25">tcg_temp_free</name><argument_list pos:start="283:26" pos:end="283:29">(<argument pos:start="283:27" pos:end="283:28"><expr pos:start="283:27" pos:end="283:28"><name pos:start="283:27" pos:end="283:28">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:55"><expr pos:start="285:13" pos:end="285:54"><call pos:start="285:13" pos:end="285:54"><name pos:start="285:13" pos:end="285:30">tcg_gen_brcondi_tl</name><argument_list pos:start="285:31" pos:end="285:54">(<argument pos:start="285:32" pos:end="285:42"><expr pos:start="285:32" pos:end="285:42"><name pos:start="285:32" pos:end="285:42">TCG_COND_GE</name></expr></argument>, <argument pos:start="285:45" pos:end="285:46"><expr pos:start="285:45" pos:end="285:46"><name pos:start="285:45" pos:end="285:46">t1</name></expr></argument>, <argument pos:start="285:49" pos:end="285:49"><expr pos:start="285:49" pos:end="285:49"><literal type="number" pos:start="285:49" pos:end="285:49">0</literal></expr></argument>, <argument pos:start="285:52" pos:end="285:53"><expr pos:start="285:52" pos:end="285:53"><name pos:start="285:52" pos:end="285:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:30"><expr pos:start="287:13" pos:end="287:29"><call pos:start="287:13" pos:end="287:29"><name pos:start="287:13" pos:end="287:25">tcg_temp_free</name><argument_list pos:start="287:26" pos:end="287:29">(<argument pos:start="287:27" pos:end="287:28"><expr pos:start="287:27" pos:end="287:28"><name pos:start="287:27" pos:end="287:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="289:13" pos:end="289:85">/* operands of different sign, first operand and result different sign */</comment>

            <expr_stmt pos:start="291:13" pos:end="291:51"><expr pos:start="291:13" pos:end="291:50"><call pos:start="291:13" pos:end="291:50"><name pos:start="291:13" pos:end="291:30">generate_exception</name><argument_list pos:start="291:31" pos:end="291:50">(<argument pos:start="291:32" pos:end="291:34"><expr pos:start="291:32" pos:end="291:34"><name pos:start="291:32" pos:end="291:34">ctx</name></expr></argument>, <argument pos:start="291:37" pos:end="291:49"><expr pos:start="291:37" pos:end="291:49"><name pos:start="291:37" pos:end="291:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:30"><expr pos:start="293:13" pos:end="293:29"><call pos:start="293:13" pos:end="293:29"><name pos:start="293:13" pos:end="293:25">gen_set_label</name><argument_list pos:start="293:26" pos:end="293:29">(<argument pos:start="293:27" pos:end="293:28"><expr pos:start="293:27" pos:end="293:28"><name pos:start="293:27" pos:end="293:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:34"><expr pos:start="295:13" pos:end="295:33"><call pos:start="295:13" pos:end="295:33"><name pos:start="295:13" pos:end="295:25">gen_store_gpr</name><argument_list pos:start="295:26" pos:end="295:33">(<argument pos:start="295:27" pos:end="295:28"><expr pos:start="295:27" pos:end="295:28"><name pos:start="295:27" pos:end="295:28">t0</name></expr></argument>, <argument pos:start="295:31" pos:end="295:32"><expr pos:start="295:31" pos:end="295:32"><name pos:start="295:31" pos:end="295:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:30"><expr pos:start="297:13" pos:end="297:29"><call pos:start="297:13" pos:end="297:29"><name pos:start="297:13" pos:end="297:25">tcg_temp_free</name><argument_list pos:start="297:26" pos:end="297:29">(<argument pos:start="297:27" pos:end="297:28"><expr pos:start="297:27" pos:end="297:28"><name pos:start="297:27" pos:end="297:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="301:9" pos:end="301:21"><expr pos:start="301:9" pos:end="301:20"><name pos:start="301:9" pos:end="301:11">opn</name> <operator pos:start="301:13" pos:end="301:13">=</operator> <literal type="string" pos:start="301:15" pos:end="301:20">"dsub"</literal></expr>;</expr_stmt>

        <break pos:start="303:9" pos:end="303:14">break;</break>

    <case pos:start="305:5" pos:end="305:19">case <expr pos:start="305:10" pos:end="305:18"><name pos:start="305:10" pos:end="305:18">OPC_DSUBU</name></expr>:</case>

        <if_stmt pos:start="307:9" pos:end="323:9"><if pos:start="307:9" pos:end="311:9">if <condition pos:start="307:12" pos:end="307:31">(<expr pos:start="307:13" pos:end="307:30"><name pos:start="307:13" pos:end="307:14">rs</name> <operator pos:start="307:16" pos:end="307:17">!=</operator> <literal type="number" pos:start="307:19" pos:end="307:19">0</literal> <operator pos:start="307:21" pos:end="307:22">&amp;&amp;</operator> <name pos:start="307:24" pos:end="307:25">rt</name> <operator pos:start="307:27" pos:end="307:28">!=</operator> <literal type="number" pos:start="307:30" pos:end="307:30">0</literal></expr>)</condition> <block pos:start="307:33" pos:end="311:9">{<block_content pos:start="309:13" pos:end="309:66">

            <expr_stmt pos:start="309:13" pos:end="309:66"><expr pos:start="309:13" pos:end="309:65"><call pos:start="309:13" pos:end="309:65"><name pos:start="309:13" pos:end="309:26">tcg_gen_sub_tl</name><argument_list pos:start="309:27" pos:end="309:65">(<argument pos:start="309:28" pos:end="309:38"><expr pos:start="309:28" pos:end="309:38"><name pos:start="309:28" pos:end="309:38"><name pos:start="309:28" pos:end="309:34">cpu_gpr</name><index pos:start="309:35" pos:end="309:38">[<expr pos:start="309:36" pos:end="309:37"><name pos:start="309:36" pos:end="309:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="309:41" pos:end="309:51"><expr pos:start="309:41" pos:end="309:51"><name pos:start="309:41" pos:end="309:51"><name pos:start="309:41" pos:end="309:47">cpu_gpr</name><index pos:start="309:48" pos:end="309:51">[<expr pos:start="309:49" pos:end="309:50"><name pos:start="309:49" pos:end="309:50">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="309:54" pos:end="309:64"><expr pos:start="309:54" pos:end="309:64"><name pos:start="309:54" pos:end="309:64"><name pos:start="309:54" pos:end="309:60">cpu_gpr</name><index pos:start="309:61" pos:end="309:64">[<expr pos:start="309:62" pos:end="309:63"><name pos:start="309:62" pos:end="309:63">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="311:11" pos:end="315:9">else if <condition pos:start="311:19" pos:end="311:38">(<expr pos:start="311:20" pos:end="311:37"><name pos:start="311:20" pos:end="311:21">rs</name> <operator pos:start="311:23" pos:end="311:24">==</operator> <literal type="number" pos:start="311:26" pos:end="311:26">0</literal> <operator pos:start="311:28" pos:end="311:29">&amp;&amp;</operator> <name pos:start="311:31" pos:end="311:32">rt</name> <operator pos:start="311:34" pos:end="311:35">!=</operator> <literal type="number" pos:start="311:37" pos:end="311:37">0</literal></expr>)</condition> <block pos:start="311:40" pos:end="315:9">{<block_content pos:start="313:13" pos:end="313:53">

            <expr_stmt pos:start="313:13" pos:end="313:53"><expr pos:start="313:13" pos:end="313:52"><call pos:start="313:13" pos:end="313:52"><name pos:start="313:13" pos:end="313:26">tcg_gen_neg_tl</name><argument_list pos:start="313:27" pos:end="313:52">(<argument pos:start="313:28" pos:end="313:38"><expr pos:start="313:28" pos:end="313:38"><name pos:start="313:28" pos:end="313:38"><name pos:start="313:28" pos:end="313:34">cpu_gpr</name><index pos:start="313:35" pos:end="313:38">[<expr pos:start="313:36" pos:end="313:37"><name pos:start="313:36" pos:end="313:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="313:41" pos:end="313:51"><expr pos:start="313:41" pos:end="313:51"><name pos:start="313:41" pos:end="313:51"><name pos:start="313:41" pos:end="313:47">cpu_gpr</name><index pos:start="313:48" pos:end="313:51">[<expr pos:start="313:49" pos:end="313:50"><name pos:start="313:49" pos:end="313:50">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="315:11" pos:end="319:9">else if <condition pos:start="315:19" pos:end="315:38">(<expr pos:start="315:20" pos:end="315:37"><name pos:start="315:20" pos:end="315:21">rs</name> <operator pos:start="315:23" pos:end="315:24">!=</operator> <literal type="number" pos:start="315:26" pos:end="315:26">0</literal> <operator pos:start="315:28" pos:end="315:29">&amp;&amp;</operator> <name pos:start="315:31" pos:end="315:32">rt</name> <operator pos:start="315:34" pos:end="315:35">==</operator> <literal type="number" pos:start="315:37" pos:end="315:37">0</literal></expr>)</condition> <block pos:start="315:40" pos:end="319:9">{<block_content pos:start="317:13" pos:end="317:53">

            <expr_stmt pos:start="317:13" pos:end="317:53"><expr pos:start="317:13" pos:end="317:52"><call pos:start="317:13" pos:end="317:52"><name pos:start="317:13" pos:end="317:26">tcg_gen_mov_tl</name><argument_list pos:start="317:27" pos:end="317:52">(<argument pos:start="317:28" pos:end="317:38"><expr pos:start="317:28" pos:end="317:38"><name pos:start="317:28" pos:end="317:38"><name pos:start="317:28" pos:end="317:34">cpu_gpr</name><index pos:start="317:35" pos:end="317:38">[<expr pos:start="317:36" pos:end="317:37"><name pos:start="317:36" pos:end="317:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="317:41" pos:end="317:51"><expr pos:start="317:41" pos:end="317:51"><name pos:start="317:41" pos:end="317:51"><name pos:start="317:41" pos:end="317:47">cpu_gpr</name><index pos:start="317:48" pos:end="317:51">[<expr pos:start="317:49" pos:end="317:50"><name pos:start="317:49" pos:end="317:50">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="319:11" pos:end="323:9">else <block pos:start="319:16" pos:end="323:9">{<block_content pos:start="321:13" pos:end="321:44">

            <expr_stmt pos:start="321:13" pos:end="321:44"><expr pos:start="321:13" pos:end="321:43"><call pos:start="321:13" pos:end="321:43"><name pos:start="321:13" pos:end="321:27">tcg_gen_movi_tl</name><argument_list pos:start="321:28" pos:end="321:43">(<argument pos:start="321:29" pos:end="321:39"><expr pos:start="321:29" pos:end="321:39"><name pos:start="321:29" pos:end="321:39"><name pos:start="321:29" pos:end="321:35">cpu_gpr</name><index pos:start="321:36" pos:end="321:39">[<expr pos:start="321:37" pos:end="321:38"><name pos:start="321:37" pos:end="321:38">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="321:42" pos:end="321:42"><expr pos:start="321:42" pos:end="321:42"><literal type="number" pos:start="321:42" pos:end="321:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:22"><expr pos:start="325:9" pos:end="325:21"><name pos:start="325:9" pos:end="325:11">opn</name> <operator pos:start="325:13" pos:end="325:13">=</operator> <literal type="string" pos:start="325:15" pos:end="325:21">"dsubu"</literal></expr>;</expr_stmt>

        <break pos:start="327:9" pos:end="330:0">break;</break>

<cpp:endif pos:start="329:1" pos:end="329:6">#<cpp:directive pos:start="329:2" pos:end="329:6">endif</cpp:directive></cpp:endif>

    <case pos:start="331:5" pos:end="331:17">case <expr pos:start="331:10" pos:end="331:16"><name pos:start="331:10" pos:end="331:16">OPC_MUL</name></expr>:</case>

        <if_stmt pos:start="333:9" pos:end="343:9"><if pos:start="333:9" pos:end="339:9">if <condition pos:start="333:12" pos:end="333:39">(<expr pos:start="333:13" pos:end="333:38"><call pos:start="333:13" pos:end="333:38"><name pos:start="333:13" pos:end="333:18">likely</name><argument_list pos:start="333:19" pos:end="333:38">(<argument pos:start="333:20" pos:end="333:37"><expr pos:start="333:20" pos:end="333:37"><name pos:start="333:20" pos:end="333:21">rs</name> <operator pos:start="333:23" pos:end="333:24">!=</operator> <literal type="number" pos:start="333:26" pos:end="333:26">0</literal> <operator pos:start="333:28" pos:end="333:29">&amp;&amp;</operator> <name pos:start="333:31" pos:end="333:32">rt</name> <operator pos:start="333:34" pos:end="333:35">!=</operator> <literal type="number" pos:start="333:37" pos:end="333:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="333:41" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:56">

            <expr_stmt pos:start="335:13" pos:end="335:66"><expr pos:start="335:13" pos:end="335:65"><call pos:start="335:13" pos:end="335:65"><name pos:start="335:13" pos:end="335:26">tcg_gen_mul_tl</name><argument_list pos:start="335:27" pos:end="335:65">(<argument pos:start="335:28" pos:end="335:38"><expr pos:start="335:28" pos:end="335:38"><name pos:start="335:28" pos:end="335:38"><name pos:start="335:28" pos:end="335:34">cpu_gpr</name><index pos:start="335:35" pos:end="335:38">[<expr pos:start="335:36" pos:end="335:37"><name pos:start="335:36" pos:end="335:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="335:41" pos:end="335:51"><expr pos:start="335:41" pos:end="335:51"><name pos:start="335:41" pos:end="335:51"><name pos:start="335:41" pos:end="335:47">cpu_gpr</name><index pos:start="335:48" pos:end="335:51">[<expr pos:start="335:49" pos:end="335:50"><name pos:start="335:49" pos:end="335:50">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="335:54" pos:end="335:64"><expr pos:start="335:54" pos:end="335:64"><name pos:start="335:54" pos:end="335:64"><name pos:start="335:54" pos:end="335:60">cpu_gpr</name><index pos:start="335:61" pos:end="335:64">[<expr pos:start="335:62" pos:end="335:63"><name pos:start="335:62" pos:end="335:63">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:56"><expr pos:start="337:13" pos:end="337:55"><call pos:start="337:13" pos:end="337:55"><name pos:start="337:13" pos:end="337:29">tcg_gen_ext32s_tl</name><argument_list pos:start="337:30" pos:end="337:55">(<argument pos:start="337:31" pos:end="337:41"><expr pos:start="337:31" pos:end="337:41"><name pos:start="337:31" pos:end="337:41"><name pos:start="337:31" pos:end="337:37">cpu_gpr</name><index pos:start="337:38" pos:end="337:41">[<expr pos:start="337:39" pos:end="337:40"><name pos:start="337:39" pos:end="337:40">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="337:44" pos:end="337:54"><expr pos:start="337:44" pos:end="337:54"><name pos:start="337:44" pos:end="337:54"><name pos:start="337:44" pos:end="337:50">cpu_gpr</name><index pos:start="337:51" pos:end="337:54">[<expr pos:start="337:52" pos:end="337:53"><name pos:start="337:52" pos:end="337:53">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="339:11" pos:end="343:9">else <block pos:start="339:16" pos:end="343:9">{<block_content pos:start="341:13" pos:end="341:44">

            <expr_stmt pos:start="341:13" pos:end="341:44"><expr pos:start="341:13" pos:end="341:43"><call pos:start="341:13" pos:end="341:43"><name pos:start="341:13" pos:end="341:27">tcg_gen_movi_tl</name><argument_list pos:start="341:28" pos:end="341:43">(<argument pos:start="341:29" pos:end="341:39"><expr pos:start="341:29" pos:end="341:39"><name pos:start="341:29" pos:end="341:39"><name pos:start="341:29" pos:end="341:35">cpu_gpr</name><index pos:start="341:36" pos:end="341:39">[<expr pos:start="341:37" pos:end="341:38"><name pos:start="341:37" pos:end="341:38">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="341:42" pos:end="341:42"><expr pos:start="341:42" pos:end="341:42"><literal type="number" pos:start="341:42" pos:end="341:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:20"><expr pos:start="345:9" pos:end="345:19"><name pos:start="345:9" pos:end="345:11">opn</name> <operator pos:start="345:13" pos:end="345:13">=</operator> <literal type="string" pos:start="345:15" pos:end="345:19">"mul"</literal></expr>;</expr_stmt>

        <break pos:start="347:9" pos:end="347:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="351:5" pos:end="351:14"><expr pos:start="351:5" pos:end="351:13"><operator pos:start="351:5" pos:end="351:5">(</operator><name pos:start="351:6" pos:end="351:9">void</name><operator pos:start="351:10" pos:end="351:10">)</operator><name pos:start="351:11" pos:end="351:13">opn</name></expr>;</expr_stmt> <comment type="block" pos:start="351:16" pos:end="351:45">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="353:5" pos:end="353:79"><expr pos:start="353:5" pos:end="353:78"><call pos:start="353:5" pos:end="353:78"><name pos:start="353:5" pos:end="353:14">MIPS_DEBUG</name><argument_list pos:start="353:15" pos:end="353:78">(<argument pos:start="353:16" pos:end="353:30"><expr pos:start="353:16" pos:end="353:30"><literal type="string" pos:start="353:16" pos:end="353:30">"%s %s, %s, %s"</literal></expr></argument>, <argument pos:start="353:33" pos:end="353:35"><expr pos:start="353:33" pos:end="353:35"><name pos:start="353:33" pos:end="353:35">opn</name></expr></argument>, <argument pos:start="353:38" pos:end="353:49"><expr pos:start="353:38" pos:end="353:49"><name pos:start="353:38" pos:end="353:49"><name pos:start="353:38" pos:end="353:45">regnames</name><index pos:start="353:46" pos:end="353:49">[<expr pos:start="353:47" pos:end="353:48"><name pos:start="353:47" pos:end="353:48">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="353:52" pos:end="353:63"><expr pos:start="353:52" pos:end="353:63"><name pos:start="353:52" pos:end="353:63"><name pos:start="353:52" pos:end="353:59">regnames</name><index pos:start="353:60" pos:end="353:63">[<expr pos:start="353:61" pos:end="353:62"><name pos:start="353:61" pos:end="353:62">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="353:66" pos:end="353:77"><expr pos:start="353:66" pos:end="353:77"><name pos:start="353:66" pos:end="353:77"><name pos:start="353:66" pos:end="353:73">regnames</name><index pos:start="353:74" pos:end="353:77">[<expr pos:start="353:75" pos:end="353:76"><name pos:start="353:75" pos:end="353:76">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
