<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22146.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:37">bonito_spciconf_readw</name><parameter_list pos:start="1:38" pos:end="1:76">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:75"><decl pos:start="1:53" pos:end="1:75"><type pos:start="1:53" pos:end="1:75"><name pos:start="1:53" pos:end="1:70">target_phys_addr_t</name></type> <name pos:start="1:72" pos:end="1:75">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:69">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCIBonitoState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">pciaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:19">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><call pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:63">(<argument pos:start="13:13" pos:end="13:56"><expr pos:start="13:13" pos:end="13:56"><literal type="string" pos:start="13:13" pos:end="13:36">"bonito_spciconf_readw "</literal><name pos:start="13:37" pos:end="13:50">TARGET_FMT_plx</name><literal type="string" pos:start="13:51" pos:end="13:56">"  \n"</literal></expr></argument>, <argument pos:start="13:59" pos:end="13:62"><expr pos:start="13:59" pos:end="13:62"><name pos:start="13:59" pos:end="13:62">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:25">(<argument pos:start="15:12" pos:end="15:24"><expr pos:start="15:12" pos:end="15:24"><operator pos:start="15:12" pos:end="15:12">(</operator><name pos:start="15:13" pos:end="15:16">addr</name><operator pos:start="15:17" pos:end="15:17">&amp;</operator><literal type="number" pos:start="15:18" pos:end="15:20">0x1</literal><operator pos:start="15:21" pos:end="15:21">)</operator><operator pos:start="15:22" pos:end="15:23">==</operator><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:11">pciaddr</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:45"><name pos:start="19:15" pos:end="19:36">bonito_sbridge_pciaddr</name><argument_list pos:start="19:37" pos:end="19:45">(<argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">s</name></expr></argument>, <argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:15">pciaddr</name> <operator pos:start="23:17" pos:end="23:18">==</operator> <literal type="number" pos:start="23:20" pos:end="23:29">0xffffffff</literal></expr>)</condition> <block pos:start="23:32" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:22">

        <return pos:start="25:9" pos:end="25:22">return <expr pos:start="25:16" pos:end="25:21"><literal type="number" pos:start="25:16" pos:end="25:21">0xffff</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:46">/* set the pci address in s-&gt;config_reg */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">pcihost</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:26">config_reg</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <operator pos:start="33:30" pos:end="33:30">(</operator><name pos:start="33:31" pos:end="33:37">pciaddr</name><operator pos:start="33:38" pos:end="33:38">)</operator> <operator pos:start="33:40" pos:end="33:40">|</operator> <operator pos:start="33:42" pos:end="33:42">(</operator><literal type="number" pos:start="33:43" pos:end="33:44">1u</literal> <operator pos:start="33:46" pos:end="33:47">&lt;&lt;</operator> <literal type="number" pos:start="33:49" pos:end="33:50">31</literal><operator pos:start="33:51" pos:end="33:51">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:75">/* clear PCI_STATUS_REC_MASTER_ABORT and PCI_STATUS_REC_TARGET_ABORT */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:10">status</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:53"><name pos:start="39:14" pos:end="39:25">pci_get_word</name><argument_list pos:start="39:26" pos:end="39:53">(<argument pos:start="39:27" pos:end="39:52"><expr pos:start="39:27" pos:end="39:52"><name pos:start="39:27" pos:end="39:39"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:32">dev</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:39">config</name></name> <operator pos:start="39:41" pos:end="39:41">+</operator> <name pos:start="39:43" pos:end="39:52">PCI_STATUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:75"><expr pos:start="41:5" pos:end="41:74"><name pos:start="41:5" pos:end="41:10">status</name> <operator pos:start="41:12" pos:end="41:13">&amp;=</operator> <operator pos:start="41:15" pos:end="41:15">~</operator><operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:43">PCI_STATUS_REC_MASTER_ABORT</name> <operator pos:start="41:45" pos:end="41:45">|</operator> <name pos:start="41:47" pos:end="41:73">PCI_STATUS_REC_TARGET_ABORT</name><operator pos:start="41:74" pos:end="41:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><call pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:16">pci_set_word</name><argument_list pos:start="43:17" pos:end="43:52">(<argument pos:start="43:18" pos:end="43:43"><expr pos:start="43:18" pos:end="43:43"><name pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">dev</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:30">config</name></name> <operator pos:start="43:32" pos:end="43:32">+</operator> <name pos:start="43:34" pos:end="43:43">PCI_STATUS</name></expr></argument>, <argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><name pos:start="43:46" pos:end="43:51">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:69">return <expr pos:start="47:12" pos:end="47:68"><call pos:start="47:12" pos:end="47:68"><name pos:start="47:12" pos:end="47:24">pci_data_read</name><argument_list pos:start="47:25" pos:end="47:68">(<argument pos:start="47:26" pos:end="47:40"><expr pos:start="47:26" pos:end="47:40"><name pos:start="47:26" pos:end="47:40"><name pos:start="47:26" pos:end="47:26">s</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:35">pcihost</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:40">bus</name></name></expr></argument>, <argument pos:start="47:43" pos:end="47:64"><expr pos:start="47:43" pos:end="47:64"><name pos:start="47:43" pos:end="47:64"><name pos:start="47:43" pos:end="47:43">s</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:52">pcihost</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:64">config_reg</name></name></expr></argument>, <argument pos:start="47:67" pos:end="47:67"><expr pos:start="47:67" pos:end="47:67"><literal type="number" pos:start="47:67" pos:end="47:67">2</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
