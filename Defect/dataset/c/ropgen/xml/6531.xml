<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6531.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">omap_ulpd_pm_write</name><parameter_list pos:start="1:31" pos:end="3:61">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:63">target_phys_addr_t</name></type> <name pos:start="1:65" pos:end="1:68">addr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:39">uint64_t</name></type> <name pos:start="3:41" pos:end="3:45">value</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">unsigned</name></type> <name pos:start="3:57" pos:end="3:60">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="235:1">{<block_content pos:start="7:5" pos:end="233:5">

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">omap_mpu_state_s</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:30">s</name> <init pos:start="7:32" pos:end="7:67">= <expr pos:start="7:34" pos:end="7:67"><operator pos:start="7:34" pos:end="7:34">(</operator>struct <name pos:start="7:42" pos:end="7:57">omap_mpu_state_s</name> <operator pos:start="7:59" pos:end="7:59">*</operator><operator pos:start="7:60" pos:end="7:60">)</operator> <name pos:start="7:62" pos:end="7:67">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">now</name></decl>, <decl pos:start="9:18" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:18" pos:end="9:22">ticks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">div</name></decl>, <decl pos:start="11:14" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:17">mult</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <specifier pos:start="13:12" pos:end="13:16">const</specifier> <name pos:start="13:18" pos:end="13:20">int</name></type> <name pos:start="13:22" pos:end="13:34"><name pos:start="13:22" pos:end="13:31">bypass_div</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">4</literal></expr>]</index></name> <init pos:start="13:36" pos:end="13:51">= <expr pos:start="13:38" pos:end="13:51"><block pos:start="13:38" pos:end="13:51">{ <expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">1</literal></expr>, <expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">2</literal></expr>, <expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">4</literal></expr>, <expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">4</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:17">diff</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:15">!=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">2</literal></expr>)</condition> <block pos:start="19:20" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:58">

        <return pos:start="21:9" pos:end="21:58">return <expr pos:start="21:16" pos:end="21:57"><call pos:start="21:16" pos:end="21:57"><name pos:start="21:16" pos:end="21:36">omap_badwidth_write16</name><argument_list pos:start="21:37" pos:end="21:57">(<argument pos:start="21:38" pos:end="21:43"><expr pos:start="21:38" pos:end="21:43"><name pos:start="21:38" pos:end="21:43">opaque</name></expr></argument>, <argument pos:start="21:46" pos:end="21:49"><expr pos:start="21:46" pos:end="21:49"><name pos:start="21:46" pos:end="21:49">addr</name></expr></argument>, <argument pos:start="21:52" pos:end="21:56"><expr pos:start="21:52" pos:end="21:56"><name pos:start="21:52" pos:end="21:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="27:5" pos:end="233:5">switch <condition pos:start="27:12" pos:end="27:17">(<expr pos:start="27:13" pos:end="27:16"><name pos:start="27:13" pos:end="27:16">addr</name></expr>)</condition> <block pos:start="27:19" pos:end="233:5">{<block_content pos:start="29:5" pos:end="231:27">

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="29:17" pos:end="29:36">/* COUNTER_32_LSB */</comment>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:36">/* COUNTER_32_MSB */</comment>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="33:17" pos:end="33:43">/* COUNTER_HIGH_FREQ_LSB */</comment>

    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="35:17" pos:end="35:43">/* COUNTER_HIGH_FREQ_MSB */</comment>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:31">/* IT_STATUS */</comment>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x40</literal></expr>:</case>	<comment type="block" pos:start="39:17" pos:end="39:32">/* STATUS_REQ */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><call pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:19">OMAP_RO_REG</name><argument_list pos:start="41:20" pos:end="41:25">(<argument pos:start="41:21" pos:end="41:24"><expr pos:start="41:21" pos:end="41:24"><name pos:start="41:21" pos:end="41:24">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>



    <case pos:start="47:5" pos:end="47:14">case <expr pos:start="47:10" pos:end="47:13"><literal type="number" pos:start="47:10" pos:end="47:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="47:17" pos:end="47:34">/* GAUGING_CTRL */</comment>

        <comment type="block" pos:start="49:9" pos:end="49:66">/* Bits 0 and 1 seem to be confused in the OMAP 310 TRM */</comment>

        <if_stmt pos:start="51:9" pos:end="101:9"><if pos:start="51:9" pos:end="101:9">if <condition pos:start="51:12" pos:end="51:53">(<expr pos:start="51:13" pos:end="51:52"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:39"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:28">ulpd_pm_regs</name><index pos:start="51:29" pos:end="51:39">[<expr pos:start="51:30" pos:end="51:38"><name pos:start="51:30" pos:end="51:33">addr</name> <operator pos:start="51:35" pos:end="51:36">&gt;&gt;</operator> <literal type="number" pos:start="51:38" pos:end="51:38">2</literal></expr>]</index></name> <operator pos:start="51:41" pos:end="51:41">^</operator> <name pos:start="51:43" pos:end="51:47">value</name><operator pos:start="51:48" pos:end="51:48">)</operator> <operator pos:start="51:50" pos:end="51:50">&amp;</operator> <literal type="number" pos:start="51:52" pos:end="51:52">1</literal></expr>)</condition> <block pos:start="51:55" pos:end="101:9">{<block_content pos:start="53:13" pos:end="99:13">

            <expr_stmt pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:45"><name pos:start="53:13" pos:end="53:15">now</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:45"><name pos:start="53:19" pos:end="53:35">qemu_get_clock_ns</name><argument_list pos:start="53:36" pos:end="53:45">(<argument pos:start="53:37" pos:end="53:44"><expr pos:start="53:37" pos:end="53:44"><name pos:start="53:37" pos:end="53:44">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="57:13" pos:end="99:13"><if pos:start="57:13" pos:end="59:42">if <condition pos:start="57:16" pos:end="57:26">(<expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:21">value</name> <operator pos:start="57:23" pos:end="57:23">&amp;</operator> <literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:42"><block_content pos:start="59:17" pos:end="59:42">

                <expr_stmt pos:start="59:17" pos:end="59:42"><expr pos:start="59:17" pos:end="59:41"><name pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:35">ulpd_gauge_start</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <name pos:start="59:39" pos:end="59:41">now</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="61:13" pos:end="99:13">else <block pos:start="61:18" pos:end="99:13">{<block_content pos:start="63:17" pos:end="97:79">

                <expr_stmt pos:start="63:17" pos:end="63:43"><expr pos:start="63:17" pos:end="63:42"><name pos:start="63:17" pos:end="63:19">now</name> <operator pos:start="63:21" pos:end="63:22">-=</operator> <name pos:start="63:24" pos:end="63:42"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:42">ulpd_gauge_start</name></name></expr>;</expr_stmt>



                <comment type="block" pos:start="67:17" pos:end="67:34">/* 32-kHz ticks */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:66"><expr pos:start="69:17" pos:end="69:65"><name pos:start="69:17" pos:end="69:21">ticks</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:65"><name pos:start="69:25" pos:end="69:32">muldiv64</name><argument_list pos:start="69:33" pos:end="69:65">(<argument pos:start="69:34" pos:end="69:36"><expr pos:start="69:34" pos:end="69:36"><name pos:start="69:34" pos:end="69:36">now</name></expr></argument>, <argument pos:start="69:39" pos:end="69:43"><expr pos:start="69:39" pos:end="69:43"><literal type="number" pos:start="69:39" pos:end="69:43">32768</literal></expr></argument>, <argument pos:start="69:46" pos:end="69:64"><expr pos:start="69:46" pos:end="69:64"><call pos:start="69:46" pos:end="69:64"><name pos:start="69:46" pos:end="69:62">get_ticks_per_sec</name><argument_list pos:start="69:63" pos:end="69:64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:68"><expr pos:start="71:17" pos:end="71:67"><name pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:31">ulpd_pm_regs</name><index pos:start="71:32" pos:end="71:42">[<expr pos:start="71:33" pos:end="71:41"><literal type="number" pos:start="71:33" pos:end="71:36">0x00</literal> <operator pos:start="71:38" pos:end="71:39">&gt;&gt;</operator> <literal type="number" pos:start="71:41" pos:end="71:41">2</literal></expr>]</index></name> <operator pos:start="71:44" pos:end="71:44">=</operator> <operator pos:start="71:46" pos:end="71:46">(</operator><name pos:start="71:47" pos:end="71:51">ticks</name> <operator pos:start="71:53" pos:end="71:54">&gt;&gt;</operator>  <literal type="number" pos:start="71:57" pos:end="71:57">0</literal><operator pos:start="71:58" pos:end="71:58">)</operator> <operator pos:start="71:60" pos:end="71:60">&amp;</operator> <literal type="number" pos:start="71:62" pos:end="71:67">0xffff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:68"><expr pos:start="73:17" pos:end="73:67"><name pos:start="73:17" pos:end="73:42"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:31">ulpd_pm_regs</name><index pos:start="73:32" pos:end="73:42">[<expr pos:start="73:33" pos:end="73:41"><literal type="number" pos:start="73:33" pos:end="73:36">0x04</literal> <operator pos:start="73:38" pos:end="73:39">&gt;&gt;</operator> <literal type="number" pos:start="73:41" pos:end="73:41">2</literal></expr>]</index></name> <operator pos:start="73:44" pos:end="73:44">=</operator> <operator pos:start="73:46" pos:end="73:46">(</operator><name pos:start="73:47" pos:end="73:51">ticks</name> <operator pos:start="73:53" pos:end="73:54">&gt;&gt;</operator> <literal type="number" pos:start="73:56" pos:end="73:57">16</literal><operator pos:start="73:58" pos:end="73:58">)</operator> <operator pos:start="73:60" pos:end="73:60">&amp;</operator> <literal type="number" pos:start="73:62" pos:end="73:67">0xffff</literal></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="77:57"><if pos:start="75:17" pos:end="77:57">if <condition pos:start="75:20" pos:end="75:32">(<expr pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:25">ticks</name> <operator pos:start="75:27" pos:end="75:28">&gt;&gt;</operator> <literal type="number" pos:start="75:30" pos:end="75:31">32</literal></expr>)</condition><block type="pseudo" pos:start="77:21" pos:end="77:57"><block_content pos:start="77:21" pos:end="77:57">	<comment type="block" pos:start="75:41" pos:end="75:58">/* OVERFLOW_32K */</comment>

                    <expr_stmt pos:start="77:21" pos:end="77:57"><expr pos:start="77:21" pos:end="77:56"><name pos:start="77:21" pos:end="77:46"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:35">ulpd_pm_regs</name><index pos:start="77:36" pos:end="77:46">[<expr pos:start="77:37" pos:end="77:45"><literal type="number" pos:start="77:37" pos:end="77:40">0x14</literal> <operator pos:start="77:42" pos:end="77:43">&gt;&gt;</operator> <literal type="number" pos:start="77:45" pos:end="77:45">2</literal></expr>]</index></name> <operator pos:start="77:48" pos:end="77:49">|=</operator> <literal type="number" pos:start="77:51" pos:end="77:51">1</literal> <operator pos:start="77:53" pos:end="77:54">&lt;&lt;</operator> <literal type="number" pos:start="77:56" pos:end="77:56">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="81:17" pos:end="81:42">/* High frequency ticks */</comment>

                <expr_stmt pos:start="83:17" pos:end="83:69"><expr pos:start="83:17" pos:end="83:68"><name pos:start="83:17" pos:end="83:21">ticks</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <call pos:start="83:25" pos:end="83:68"><name pos:start="83:25" pos:end="83:32">muldiv64</name><argument_list pos:start="83:33" pos:end="83:68">(<argument pos:start="83:34" pos:end="83:36"><expr pos:start="83:34" pos:end="83:36"><name pos:start="83:34" pos:end="83:36">now</name></expr></argument>, <argument pos:start="83:39" pos:end="83:46"><expr pos:start="83:39" pos:end="83:46"><literal type="number" pos:start="83:39" pos:end="83:46">12000000</literal></expr></argument>, <argument pos:start="83:49" pos:end="83:67"><expr pos:start="83:49" pos:end="83:67"><call pos:start="83:49" pos:end="83:67"><name pos:start="83:49" pos:end="83:65">get_ticks_per_sec</name><argument_list pos:start="83:66" pos:end="83:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:68"><expr pos:start="85:17" pos:end="85:67"><name pos:start="85:17" pos:end="85:42"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:31">ulpd_pm_regs</name><index pos:start="85:32" pos:end="85:42">[<expr pos:start="85:33" pos:end="85:41"><literal type="number" pos:start="85:33" pos:end="85:36">0x08</literal> <operator pos:start="85:38" pos:end="85:39">&gt;&gt;</operator> <literal type="number" pos:start="85:41" pos:end="85:41">2</literal></expr>]</index></name> <operator pos:start="85:44" pos:end="85:44">=</operator> <operator pos:start="85:46" pos:end="85:46">(</operator><name pos:start="85:47" pos:end="85:51">ticks</name> <operator pos:start="85:53" pos:end="85:54">&gt;&gt;</operator>  <literal type="number" pos:start="85:57" pos:end="85:57">0</literal><operator pos:start="85:58" pos:end="85:58">)</operator> <operator pos:start="85:60" pos:end="85:60">&amp;</operator> <literal type="number" pos:start="85:62" pos:end="85:67">0xffff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:68"><expr pos:start="87:17" pos:end="87:67"><name pos:start="87:17" pos:end="87:42"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:31">ulpd_pm_regs</name><index pos:start="87:32" pos:end="87:42">[<expr pos:start="87:33" pos:end="87:41"><literal type="number" pos:start="87:33" pos:end="87:36">0x0c</literal> <operator pos:start="87:38" pos:end="87:39">&gt;&gt;</operator> <literal type="number" pos:start="87:41" pos:end="87:41">2</literal></expr>]</index></name> <operator pos:start="87:44" pos:end="87:44">=</operator> <operator pos:start="87:46" pos:end="87:46">(</operator><name pos:start="87:47" pos:end="87:51">ticks</name> <operator pos:start="87:53" pos:end="87:54">&gt;&gt;</operator> <literal type="number" pos:start="87:56" pos:end="87:57">16</literal><operator pos:start="87:58" pos:end="87:58">)</operator> <operator pos:start="87:60" pos:end="87:60">&amp;</operator> <literal type="number" pos:start="87:62" pos:end="87:67">0xffff</literal></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:57"><if pos:start="89:17" pos:end="91:57">if <condition pos:start="89:20" pos:end="89:32">(<expr pos:start="89:21" pos:end="89:31"><name pos:start="89:21" pos:end="89:25">ticks</name> <operator pos:start="89:27" pos:end="89:28">&gt;&gt;</operator> <literal type="number" pos:start="89:30" pos:end="89:31">32</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:57"><block_content pos:start="91:21" pos:end="91:57">	<comment type="block" pos:start="89:41" pos:end="89:62">/* OVERFLOW_HI_FREQ */</comment>

                    <expr_stmt pos:start="91:21" pos:end="91:57"><expr pos:start="91:21" pos:end="91:56"><name pos:start="91:21" pos:end="91:46"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:35">ulpd_pm_regs</name><index pos:start="91:36" pos:end="91:46">[<expr pos:start="91:37" pos:end="91:45"><literal type="number" pos:start="91:37" pos:end="91:40">0x14</literal> <operator pos:start="91:42" pos:end="91:43">&gt;&gt;</operator> <literal type="number" pos:start="91:45" pos:end="91:45">2</literal></expr>]</index></name> <operator pos:start="91:48" pos:end="91:49">|=</operator> <literal type="number" pos:start="91:51" pos:end="91:51">1</literal> <operator pos:start="91:53" pos:end="91:54">&lt;&lt;</operator> <literal type="number" pos:start="91:56" pos:end="91:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="95:17" pos:end="95:53"><expr pos:start="95:17" pos:end="95:52"><name pos:start="95:17" pos:end="95:42"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:31">ulpd_pm_regs</name><index pos:start="95:32" pos:end="95:42">[<expr pos:start="95:33" pos:end="95:41"><literal type="number" pos:start="95:33" pos:end="95:36">0x14</literal> <operator pos:start="95:38" pos:end="95:39">&gt;&gt;</operator> <literal type="number" pos:start="95:41" pos:end="95:41">2</literal></expr>]</index></name> <operator pos:start="95:44" pos:end="95:45">|=</operator> <literal type="number" pos:start="95:47" pos:end="95:47">1</literal> <operator pos:start="95:49" pos:end="95:50">&lt;&lt;</operator> <literal type="number" pos:start="95:52" pos:end="95:52">0</literal></expr>;</expr_stmt>	<comment type="block" pos:start="95:57" pos:end="95:72">/* IT_GAUGING */</comment>

                <expr_stmt pos:start="97:17" pos:end="97:79"><expr pos:start="97:17" pos:end="97:78"><call pos:start="97:17" pos:end="97:78"><name pos:start="97:17" pos:end="97:30">qemu_irq_raise</name><argument_list pos:start="97:31" pos:end="97:78">(<argument pos:start="97:32" pos:end="97:77"><expr pos:start="97:32" pos:end="97:77"><call pos:start="97:32" pos:end="97:77"><name pos:start="97:32" pos:end="97:47">qdev_get_gpio_in</name><argument_list pos:start="97:48" pos:end="97:77">(<argument pos:start="97:49" pos:end="97:56"><expr pos:start="97:49" pos:end="97:56"><name pos:start="97:49" pos:end="97:56"><name pos:start="97:49" pos:end="97:49">s</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:53">ih</name><index pos:start="97:54" pos:end="97:56">[<expr pos:start="97:55" pos:end="97:55"><literal type="number" pos:start="97:55" pos:end="97:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:59" pos:end="97:76"><expr pos:start="97:59" pos:end="97:76"><name pos:start="97:59" pos:end="97:76">OMAP_INT_GAUGE_32K</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:23">ulpd_pm_regs</name><index pos:start="103:24" pos:end="103:34">[<expr pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:28">addr</name> <operator pos:start="103:30" pos:end="103:31">&gt;&gt;</operator> <literal type="number" pos:start="103:33" pos:end="103:33">2</literal></expr>]</index></name> <operator pos:start="103:36" pos:end="103:36">=</operator> <name pos:start="103:38" pos:end="103:42">value</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>



    <case pos:start="109:5" pos:end="109:14">case <expr pos:start="109:10" pos:end="109:13"><literal type="number" pos:start="109:10" pos:end="109:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="109:17" pos:end="109:30">/* Reserved */</comment>

    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="111:17" pos:end="111:30">/* Reserved */</comment>

    <case pos:start="113:5" pos:end="113:14">case <expr pos:start="113:10" pos:end="113:13"><literal type="number" pos:start="113:10" pos:end="113:13">0x20</literal></expr>:</case>	<comment type="block" pos:start="113:17" pos:end="113:30">/* Reserved */</comment>

    <case pos:start="115:5" pos:end="115:14">case <expr pos:start="115:10" pos:end="115:13"><literal type="number" pos:start="115:10" pos:end="115:13">0x28</literal></expr>:</case>	<comment type="block" pos:start="115:17" pos:end="115:30">/* Reserved */</comment>

    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="117:17" pos:end="117:30">/* Reserved */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><call pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:20">OMAP_BAD_REG</name><argument_list pos:start="119:21" pos:end="119:26">(<argument pos:start="119:22" pos:end="119:25"><expr pos:start="119:22" pos:end="119:25"><name pos:start="119:22" pos:end="119:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="121:5" pos:end="121:14">case <expr pos:start="121:10" pos:end="121:13"><literal type="number" pos:start="121:10" pos:end="121:13">0x24</literal></expr>:</case>	<comment type="block" pos:start="121:17" pos:end="121:46">/* SETUP_ANALOG_CELL3_ULPD1 */</comment>

    <case pos:start="123:5" pos:end="123:14">case <expr pos:start="123:10" pos:end="123:13"><literal type="number" pos:start="123:10" pos:end="123:13">0x38</literal></expr>:</case>	<comment type="block" pos:start="123:17" pos:end="123:36">/* COUNTER_32_FIQ */</comment>

    <case pos:start="125:5" pos:end="125:14">case <expr pos:start="125:10" pos:end="125:13"><literal type="number" pos:start="125:10" pos:end="125:13">0x48</literal></expr>:</case>	<comment type="block" pos:start="125:17" pos:end="125:31">/* LOCL_TIME */</comment>

    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x50</literal></expr>:</case>	<comment type="block" pos:start="127:17" pos:end="127:32">/* POWER_CTRL */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:23">ulpd_pm_regs</name><index pos:start="129:24" pos:end="129:34">[<expr pos:start="129:25" pos:end="129:33"><name pos:start="129:25" pos:end="129:28">addr</name> <operator pos:start="129:30" pos:end="129:31">&gt;&gt;</operator> <literal type="number" pos:start="129:33" pos:end="129:33">2</literal></expr>]</index></name> <operator pos:start="129:36" pos:end="129:36">=</operator> <name pos:start="129:38" pos:end="129:42">value</name></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>



    <case pos:start="135:5" pos:end="135:14">case <expr pos:start="135:10" pos:end="135:13"><literal type="number" pos:start="135:10" pos:end="135:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="135:17" pos:end="135:32">/* CLOCK_CTRL */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:50"><expr pos:start="137:9" pos:end="137:49"><name pos:start="137:9" pos:end="137:12">diff</name> <operator pos:start="137:14" pos:end="137:14">=</operator> <name pos:start="137:16" pos:end="137:41"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:30">ulpd_pm_regs</name><index pos:start="137:31" pos:end="137:41">[<expr pos:start="137:32" pos:end="137:40"><name pos:start="137:32" pos:end="137:35">addr</name> <operator pos:start="137:37" pos:end="137:38">&gt;&gt;</operator> <literal type="number" pos:start="137:40" pos:end="137:40">2</literal></expr>]</index></name> <operator pos:start="137:43" pos:end="137:43">^</operator> <name pos:start="137:45" pos:end="137:49">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:50"><expr pos:start="139:9" pos:end="139:49"><name pos:start="139:9" pos:end="139:34"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:23">ulpd_pm_regs</name><index pos:start="139:24" pos:end="139:34">[<expr pos:start="139:25" pos:end="139:33"><name pos:start="139:25" pos:end="139:28">addr</name> <operator pos:start="139:30" pos:end="139:31">&gt;&gt;</operator> <literal type="number" pos:start="139:33" pos:end="139:33">2</literal></expr>]</index></name> <operator pos:start="139:36" pos:end="139:36">=</operator> <name pos:start="139:38" pos:end="139:42">value</name> <operator pos:start="139:44" pos:end="139:44">&amp;</operator> <literal type="number" pos:start="139:46" pos:end="139:49">0x3f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:45"><expr pos:start="141:9" pos:end="141:44"><call pos:start="141:9" pos:end="141:44"><name pos:start="141:9" pos:end="141:28">omap_ulpd_clk_update</name><argument_list pos:start="141:29" pos:end="141:44">(<argument pos:start="141:30" pos:end="141:30"><expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">s</name></expr></argument>, <argument pos:start="141:33" pos:end="141:36"><expr pos:start="141:33" pos:end="141:36"><name pos:start="141:33" pos:end="141:36">diff</name></expr></argument>, <argument pos:start="141:39" pos:end="141:43"><expr pos:start="141:39" pos:end="141:43"><name pos:start="141:39" pos:end="141:43">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>



    <case pos:start="147:5" pos:end="147:14">case <expr pos:start="147:10" pos:end="147:13"><literal type="number" pos:start="147:10" pos:end="147:13">0x34</literal></expr>:</case>	<comment type="block" pos:start="147:17" pos:end="147:30">/* SOFT_REQ */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:50"><expr pos:start="149:9" pos:end="149:49"><name pos:start="149:9" pos:end="149:12">diff</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <name pos:start="149:16" pos:end="149:41"><name pos:start="149:16" pos:end="149:16">s</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:30">ulpd_pm_regs</name><index pos:start="149:31" pos:end="149:41">[<expr pos:start="149:32" pos:end="149:40"><name pos:start="149:32" pos:end="149:35">addr</name> <operator pos:start="149:37" pos:end="149:38">&gt;&gt;</operator> <literal type="number" pos:start="149:40" pos:end="149:40">2</literal></expr>]</index></name> <operator pos:start="149:43" pos:end="149:43">^</operator> <name pos:start="149:45" pos:end="149:49">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:50"><expr pos:start="151:9" pos:end="151:49"><name pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:23">ulpd_pm_regs</name><index pos:start="151:24" pos:end="151:34">[<expr pos:start="151:25" pos:end="151:33"><name pos:start="151:25" pos:end="151:28">addr</name> <operator pos:start="151:30" pos:end="151:31">&gt;&gt;</operator> <literal type="number" pos:start="151:33" pos:end="151:33">2</literal></expr>]</index></name> <operator pos:start="151:36" pos:end="151:36">=</operator> <name pos:start="151:38" pos:end="151:42">value</name> <operator pos:start="151:44" pos:end="151:44">&amp;</operator> <literal type="number" pos:start="151:46" pos:end="151:49">0x1f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:45"><expr pos:start="153:9" pos:end="153:44"><call pos:start="153:9" pos:end="153:44"><name pos:start="153:9" pos:end="153:28">omap_ulpd_req_update</name><argument_list pos:start="153:29" pos:end="153:44">(<argument pos:start="153:30" pos:end="153:30"><expr pos:start="153:30" pos:end="153:30"><name pos:start="153:30" pos:end="153:30">s</name></expr></argument>, <argument pos:start="153:33" pos:end="153:36"><expr pos:start="153:33" pos:end="153:36"><name pos:start="153:33" pos:end="153:36">diff</name></expr></argument>, <argument pos:start="153:39" pos:end="153:43"><expr pos:start="153:39" pos:end="153:43"><name pos:start="153:39" pos:end="153:43">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>



    <case pos:start="159:5" pos:end="159:14">case <expr pos:start="159:10" pos:end="159:13"><literal type="number" pos:start="159:10" pos:end="159:13">0x3c</literal></expr>:</case>	<comment type="block" pos:start="159:17" pos:end="159:31">/* DPLL_CTRL */</comment>

        <comment type="block" pos:start="161:9" pos:end="163:51">/* XXX: OMAP310 TRM claims bit 3 is PLL_ENABLE, and bit 4 is

         * omitted altogether, probably a typo.  */</comment>

        <comment type="block" pos:start="165:9" pos:end="167:46">/* This register has identical semantics with DPLL(1:3) control

         * registers, see omap_dpll_write() */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:50"><expr pos:start="169:9" pos:end="169:49"><name pos:start="169:9" pos:end="169:12">diff</name> <operator pos:start="169:14" pos:end="169:14">=</operator> <name pos:start="169:16" pos:end="169:41"><name pos:start="169:16" pos:end="169:16">s</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:30">ulpd_pm_regs</name><index pos:start="169:31" pos:end="169:41">[<expr pos:start="169:32" pos:end="169:40"><name pos:start="169:32" pos:end="169:35">addr</name> <operator pos:start="169:37" pos:end="169:38">&gt;&gt;</operator> <literal type="number" pos:start="169:40" pos:end="169:40">2</literal></expr>]</index></name> <operator pos:start="169:43" pos:end="169:43">&amp;</operator> <name pos:start="169:45" pos:end="169:49">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:52"><expr pos:start="171:9" pos:end="171:51"><name pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:23">ulpd_pm_regs</name><index pos:start="171:24" pos:end="171:34">[<expr pos:start="171:25" pos:end="171:33"><name pos:start="171:25" pos:end="171:28">addr</name> <operator pos:start="171:30" pos:end="171:31">&gt;&gt;</operator> <literal type="number" pos:start="171:33" pos:end="171:33">2</literal></expr>]</index></name> <operator pos:start="171:36" pos:end="171:36">=</operator> <name pos:start="171:38" pos:end="171:42">value</name> <operator pos:start="171:44" pos:end="171:44">&amp;</operator> <literal type="number" pos:start="171:46" pos:end="171:51">0x2fff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="191:9"><if pos:start="173:9" pos:end="191:9">if <condition pos:start="173:12" pos:end="173:32">(<expr pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:16">diff</name> <operator pos:start="173:18" pos:end="173:18">&amp;</operator> <operator pos:start="173:20" pos:end="173:20">(</operator><literal type="number" pos:start="173:21" pos:end="173:25">0x3ff</literal> <operator pos:start="173:27" pos:end="173:28">&lt;&lt;</operator> <literal type="number" pos:start="173:30" pos:end="173:30">2</literal><operator pos:start="173:31" pos:end="173:31">)</operator></expr>)</condition> <block pos:start="173:34" pos:end="191:9">{<block_content pos:start="175:13" pos:end="189:66">

            <if_stmt pos:start="175:13" pos:end="187:13"><if pos:start="175:13" pos:end="181:13">if <condition pos:start="175:16" pos:end="175:33">(<expr pos:start="175:17" pos:end="175:32"><name pos:start="175:17" pos:end="175:21">value</name> <operator pos:start="175:23" pos:end="175:23">&amp;</operator> <operator pos:start="175:25" pos:end="175:25">(</operator><literal type="number" pos:start="175:26" pos:end="175:26">1</literal> <operator pos:start="175:28" pos:end="175:29">&lt;&lt;</operator> <literal type="number" pos:start="175:31" pos:end="175:31">4</literal><operator pos:start="175:32" pos:end="175:32">)</operator></expr>)</condition> <block pos:start="175:35" pos:end="181:13">{<block_content pos:start="177:17" pos:end="179:51">			<comment type="block" pos:start="175:57" pos:end="175:72">/* PLL_ENABLE */</comment>

                <expr_stmt pos:start="177:17" pos:end="177:45"><expr pos:start="177:17" pos:end="177:44"><name pos:start="177:17" pos:end="177:19">div</name> <operator pos:start="177:21" pos:end="177:21">=</operator> <operator pos:start="177:23" pos:end="177:23">(</operator><operator pos:start="177:24" pos:end="177:24">(</operator><name pos:start="177:25" pos:end="177:29">value</name> <operator pos:start="177:31" pos:end="177:32">&gt;&gt;</operator> <literal type="number" pos:start="177:34" pos:end="177:34">5</literal><operator pos:start="177:35" pos:end="177:35">)</operator> <operator pos:start="177:37" pos:end="177:37">&amp;</operator> <literal type="number" pos:start="177:39" pos:end="177:39">3</literal><operator pos:start="177:40" pos:end="177:40">)</operator> <operator pos:start="177:42" pos:end="177:42">+</operator> <literal type="number" pos:start="177:44" pos:end="177:44">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="177:57" pos:end="177:69">/* PLL_DIV */</comment>

                <expr_stmt pos:start="179:17" pos:end="179:51"><expr pos:start="179:17" pos:end="179:50"><name pos:start="179:17" pos:end="179:20">mult</name> <operator pos:start="179:22" pos:end="179:22">=</operator> <call pos:start="179:24" pos:end="179:50"><name pos:start="179:24" pos:end="179:26">MIN</name><argument_list pos:start="179:27" pos:end="179:50">(<argument pos:start="179:28" pos:end="179:46"><expr pos:start="179:28" pos:end="179:46"><operator pos:start="179:28" pos:end="179:28">(</operator><name pos:start="179:29" pos:end="179:33">value</name> <operator pos:start="179:35" pos:end="179:36">&gt;&gt;</operator> <literal type="number" pos:start="179:38" pos:end="179:38">7</literal><operator pos:start="179:39" pos:end="179:39">)</operator> <operator pos:start="179:41" pos:end="179:41">&amp;</operator> <literal type="number" pos:start="179:43" pos:end="179:46">0x1f</literal></expr></argument>, <argument pos:start="179:49" pos:end="179:49"><expr pos:start="179:49" pos:end="179:49"><literal type="number" pos:start="179:49" pos:end="179:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="179:57" pos:end="179:70">/* PLL_MULT */</comment>

            </block_content>}</block></if> <else pos:start="181:15" pos:end="187:13">else <block pos:start="181:20" pos:end="187:13">{<block_content pos:start="183:17" pos:end="185:25">

                <expr_stmt pos:start="183:17" pos:end="183:53"><expr pos:start="183:17" pos:end="183:52"><name pos:start="183:17" pos:end="183:19">div</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:52"><name pos:start="183:23" pos:end="183:32">bypass_div</name><index pos:start="183:33" pos:end="183:52">[<expr pos:start="183:34" pos:end="183:51"><operator pos:start="183:34" pos:end="183:34">(</operator><operator pos:start="183:35" pos:end="183:35">(</operator><name pos:start="183:36" pos:end="183:40">value</name> <operator pos:start="183:42" pos:end="183:43">&gt;&gt;</operator> <literal type="number" pos:start="183:45" pos:end="183:45">2</literal><operator pos:start="183:46" pos:end="183:46">)</operator> <operator pos:start="183:48" pos:end="183:48">&amp;</operator> <literal type="number" pos:start="183:50" pos:end="183:50">3</literal><operator pos:start="183:51" pos:end="183:51">)</operator></expr>]</index></name></expr>;</expr_stmt>	<comment type="block" pos:start="183:57" pos:end="183:72">/* BYPASS_DIV */</comment>

                <expr_stmt pos:start="185:17" pos:end="185:25"><expr pos:start="185:17" pos:end="185:24"><name pos:start="185:17" pos:end="185:20">mult</name> <operator pos:start="185:22" pos:end="185:22">=</operator> <literal type="number" pos:start="185:24" pos:end="185:24">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:66"><expr pos:start="189:13" pos:end="189:65"><call pos:start="189:13" pos:end="189:65"><name pos:start="189:13" pos:end="189:28">omap_clk_setrate</name><argument_list pos:start="189:29" pos:end="189:65">(<argument pos:start="189:30" pos:end="189:53"><expr pos:start="189:30" pos:end="189:53"><call pos:start="189:30" pos:end="189:53"><name pos:start="189:30" pos:end="189:41">omap_findclk</name><argument_list pos:start="189:42" pos:end="189:53">(<argument pos:start="189:43" pos:end="189:43"><expr pos:start="189:43" pos:end="189:43"><name pos:start="189:43" pos:end="189:43">s</name></expr></argument>, <argument pos:start="189:46" pos:end="189:52"><expr pos:start="189:46" pos:end="189:52"><literal type="string" pos:start="189:46" pos:end="189:52">"dpll4"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="189:56" pos:end="189:58"><expr pos:start="189:56" pos:end="189:58"><name pos:start="189:56" pos:end="189:58">div</name></expr></argument>, <argument pos:start="189:61" pos:end="189:64"><expr pos:start="189:61" pos:end="189:64"><name pos:start="189:61" pos:end="189:64">mult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="195:9" pos:end="195:38">/* Enter the desired mode.  */</comment>

        <expr_stmt pos:start="197:9" pos:end="201:56"><expr pos:start="197:9" pos:end="201:55"><name pos:start="197:9" pos:end="197:34"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:23">ulpd_pm_regs</name><index pos:start="197:24" pos:end="197:34">[<expr pos:start="197:25" pos:end="197:33"><name pos:start="197:25" pos:end="197:28">addr</name> <operator pos:start="197:30" pos:end="197:31">&gt;&gt;</operator> <literal type="number" pos:start="197:33" pos:end="197:33">2</literal></expr>]</index></name> <operator pos:start="197:36" pos:end="197:36">=</operator>

                <operator pos:start="199:17" pos:end="199:17">(</operator><name pos:start="199:18" pos:end="199:43"><name pos:start="199:18" pos:end="199:18">s</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:32">ulpd_pm_regs</name><index pos:start="199:33" pos:end="199:43">[<expr pos:start="199:34" pos:end="199:42"><name pos:start="199:34" pos:end="199:37">addr</name> <operator pos:start="199:39" pos:end="199:40">&gt;&gt;</operator> <literal type="number" pos:start="199:42" pos:end="199:42">2</literal></expr>]</index></name> <operator pos:start="199:45" pos:end="199:45">&amp;</operator> <literal type="number" pos:start="199:47" pos:end="199:52">0xfffe</literal><operator pos:start="199:53" pos:end="199:53">)</operator> <operator pos:start="199:55" pos:end="199:55">|</operator>

                <operator pos:start="201:17" pos:end="201:17">(</operator><operator pos:start="201:18" pos:end="201:18">(</operator><name pos:start="201:19" pos:end="201:44"><name pos:start="201:19" pos:end="201:19">s</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:33">ulpd_pm_regs</name><index pos:start="201:34" pos:end="201:44">[<expr pos:start="201:35" pos:end="201:43"><name pos:start="201:35" pos:end="201:38">addr</name> <operator pos:start="201:40" pos:end="201:41">&gt;&gt;</operator> <literal type="number" pos:start="201:43" pos:end="201:43">2</literal></expr>]</index></name> <operator pos:start="201:46" pos:end="201:47">&gt;&gt;</operator> <literal type="number" pos:start="201:49" pos:end="201:49">4</literal><operator pos:start="201:50" pos:end="201:50">)</operator> <operator pos:start="201:52" pos:end="201:52">&amp;</operator> <literal type="number" pos:start="201:54" pos:end="201:54">1</literal><operator pos:start="201:55" pos:end="201:55">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="205:9" pos:end="205:46">/* Act as if the lock is restored.  */</comment>

        <expr_stmt pos:start="207:9" pos:end="207:40"><expr pos:start="207:9" pos:end="207:39"><name pos:start="207:9" pos:end="207:34"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:23">ulpd_pm_regs</name><index pos:start="207:24" pos:end="207:34">[<expr pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:28">addr</name> <operator pos:start="207:30" pos:end="207:31">&gt;&gt;</operator> <literal type="number" pos:start="207:33" pos:end="207:33">2</literal></expr>]</index></name> <operator pos:start="207:36" pos:end="207:37">|=</operator> <literal type="number" pos:start="207:39" pos:end="207:39">2</literal></expr>;</expr_stmt>

        <break pos:start="209:9" pos:end="209:14">break;</break>



    <case pos:start="213:5" pos:end="213:14">case <expr pos:start="213:10" pos:end="213:13"><literal type="number" pos:start="213:10" pos:end="213:13">0x4c</literal></expr>:</case>	<comment type="block" pos:start="213:17" pos:end="213:31">/* APLL_CTRL */</comment>

        <expr_stmt pos:start="215:9" pos:end="215:50"><expr pos:start="215:9" pos:end="215:49"><name pos:start="215:9" pos:end="215:12">diff</name> <operator pos:start="215:14" pos:end="215:14">=</operator> <name pos:start="215:16" pos:end="215:41"><name pos:start="215:16" pos:end="215:16">s</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator><name pos:start="215:19" pos:end="215:30">ulpd_pm_regs</name><index pos:start="215:31" pos:end="215:41">[<expr pos:start="215:32" pos:end="215:40"><name pos:start="215:32" pos:end="215:35">addr</name> <operator pos:start="215:37" pos:end="215:38">&gt;&gt;</operator> <literal type="number" pos:start="215:40" pos:end="215:40">2</literal></expr>]</index></name> <operator pos:start="215:43" pos:end="215:43">&amp;</operator> <name pos:start="215:45" pos:end="215:49">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:49"><expr pos:start="217:9" pos:end="217:48"><name pos:start="217:9" pos:end="217:34"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:23">ulpd_pm_regs</name><index pos:start="217:24" pos:end="217:34">[<expr pos:start="217:25" pos:end="217:33"><name pos:start="217:25" pos:end="217:28">addr</name> <operator pos:start="217:30" pos:end="217:31">&gt;&gt;</operator> <literal type="number" pos:start="217:33" pos:end="217:33">2</literal></expr>]</index></name> <operator pos:start="217:36" pos:end="217:36">=</operator> <name pos:start="217:38" pos:end="217:42">value</name> <operator pos:start="217:44" pos:end="217:44">&amp;</operator> <literal type="number" pos:start="217:46" pos:end="217:48">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="223:76"><if pos:start="219:9" pos:end="223:76">if <condition pos:start="219:12" pos:end="219:28">(<expr pos:start="219:13" pos:end="219:27"><name pos:start="219:13" pos:end="219:16">diff</name> <operator pos:start="219:18" pos:end="219:18">&amp;</operator> <operator pos:start="219:20" pos:end="219:20">(</operator><literal type="number" pos:start="219:21" pos:end="219:21">1</literal> <operator pos:start="219:23" pos:end="219:24">&lt;&lt;</operator> <literal type="number" pos:start="219:26" pos:end="219:26">0</literal><operator pos:start="219:27" pos:end="219:27">)</operator></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="223:76"><block_content pos:start="221:13" pos:end="223:76">				<comment type="block" pos:start="219:57" pos:end="219:79">/* APLL_NDPLL_SWITCH */</comment>

            <expr_stmt pos:start="221:13" pos:end="223:76"><expr pos:start="221:13" pos:end="223:75"><call pos:start="221:13" pos:end="223:75"><name pos:start="221:13" pos:end="221:29">omap_clk_reparent</name><argument_list pos:start="221:30" pos:end="223:75">(<argument pos:start="221:31" pos:end="221:55"><expr pos:start="221:31" pos:end="221:55"><call pos:start="221:31" pos:end="221:55"><name pos:start="221:31" pos:end="221:42">omap_findclk</name><argument_list pos:start="221:43" pos:end="221:55">(<argument pos:start="221:44" pos:end="221:44"><expr pos:start="221:44" pos:end="221:44"><name pos:start="221:44" pos:end="221:44">s</name></expr></argument>, <argument pos:start="221:47" pos:end="221:54"><expr pos:start="221:47" pos:end="221:54"><literal type="string" pos:start="221:47" pos:end="221:54">"ck_48m"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="221:58" pos:end="223:74"><expr pos:start="221:58" pos:end="223:74"><call pos:start="221:58" pos:end="223:74"><name pos:start="221:58" pos:end="221:69">omap_findclk</name><argument_list pos:start="221:70" pos:end="223:74">(<argument pos:start="221:71" pos:end="221:71"><expr pos:start="221:71" pos:end="221:71"><name pos:start="221:71" pos:end="221:71">s</name></expr></argument>,

                                    <argument pos:start="223:37" pos:end="223:73"><expr pos:start="223:37" pos:end="223:73"><ternary pos:start="223:37" pos:end="223:73"><condition pos:start="223:37" pos:end="223:56"><expr pos:start="223:37" pos:end="223:54"><operator pos:start="223:37" pos:end="223:37">(</operator><name pos:start="223:38" pos:end="223:42">value</name> <operator pos:start="223:44" pos:end="223:44">&amp;</operator> <operator pos:start="223:46" pos:end="223:46">(</operator><literal type="number" pos:start="223:47" pos:end="223:47">1</literal> <operator pos:start="223:49" pos:end="223:50">&lt;&lt;</operator> <literal type="number" pos:start="223:52" pos:end="223:52">0</literal><operator pos:start="223:53" pos:end="223:53">)</operator><operator pos:start="223:54" pos:end="223:54">)</operator></expr> ?</condition><then pos:start="223:58" pos:end="223:63"> <expr pos:start="223:58" pos:end="223:63"><literal type="string" pos:start="223:58" pos:end="223:63">"apll"</literal></expr> </then><else pos:start="223:65" pos:end="223:73">: <expr pos:start="223:67" pos:end="223:73"><literal type="string" pos:start="223:67" pos:end="223:73">"dpll4"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="225:9" pos:end="225:14">break;</break>



    <default pos:start="229:5" pos:end="229:12">default:</default>

        <expr_stmt pos:start="231:9" pos:end="231:27"><expr pos:start="231:9" pos:end="231:26"><call pos:start="231:9" pos:end="231:26"><name pos:start="231:9" pos:end="231:20">OMAP_BAD_REG</name><argument_list pos:start="231:21" pos:end="231:26">(<argument pos:start="231:22" pos:end="231:25"><expr pos:start="231:22" pos:end="231:25"><name pos:start="231:22" pos:end="231:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
