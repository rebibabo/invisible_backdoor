<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17942.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">flush_encoders</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="237:5">for <control pos:start="9:9" pos:end="9:43">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:38"><expr pos:start="9:17" pos:end="9:37"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:37">nb_output_streams</name></expr>;</condition> <incr pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:40">i</name><operator pos:start="9:41" pos:end="9:42">++</operator></expr></incr>)</control> <block pos:start="9:45" pos:end="237:5">{<block_content pos:start="11:9" pos:end="235:9">

        <decl_stmt pos:start="11:9" pos:end="11:48"><decl pos:start="11:9" pos:end="11:47"><type pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:20">OutputStream</name>   <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:27">ost</name> <init pos:start="11:29" pos:end="11:47">= <expr pos:start="11:31" pos:end="11:47"><name pos:start="11:31" pos:end="11:47"><name pos:start="11:31" pos:end="11:44">output_streams</name><index pos:start="11:45" pos:end="11:47">[<expr pos:start="11:46" pos:end="11:46"><name pos:start="11:46" pos:end="11:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:43"><decl pos:start="13:9" pos:end="13:42"><type pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:22">AVCodecContext</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:27">enc</name> <init pos:start="13:29" pos:end="13:42">= <expr pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:33">ost</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">enc_ctx</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:60"><decl pos:start="15:9" pos:end="15:59"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:18">OutputFile</name>      <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:27">of</name> <init pos:start="15:29" pos:end="15:59">= <expr pos:start="15:31" pos:end="15:59"><name pos:start="15:31" pos:end="15:59"><name pos:start="15:31" pos:end="15:42">output_files</name><index pos:start="15:43" pos:end="15:59">[<expr pos:start="15:44" pos:end="15:58"><name pos:start="15:44" pos:end="15:58"><name pos:start="15:44" pos:end="15:46">ost</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:58">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:34">(<expr pos:start="19:13" pos:end="19:33"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:33"><name pos:start="19:14" pos:end="19:16">ost</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:33">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="25:9" pos:end="25:55">// Try to enable encoding with no input frames.</comment>

        <comment type="line" pos:start="27:9" pos:end="27:58">// Maybe we should just let encoding fail instead.</comment>

        <if_stmt pos:start="29:9" pos:end="117:9"><if pos:start="29:9" pos:end="117:9">if <condition pos:start="29:12" pos:end="29:30">(<expr pos:start="29:13" pos:end="29:29"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:29"><name pos:start="29:14" pos:end="29:16">ost</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:29">initialized</name></name></expr>)</condition> <block pos:start="29:32" pos:end="117:9">{<block_content pos:start="31:13" pos:end="115:13">

            <decl_stmt pos:start="31:13" pos:end="31:49"><decl pos:start="31:13" pos:end="31:48"><type pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:23">FilterGraph</name> <modifier pos:start="31:25" pos:end="31:25">*</modifier></type><name pos:start="31:26" pos:end="31:27">fg</name> <init pos:start="31:29" pos:end="31:48">= <expr pos:start="31:31" pos:end="31:48"><name pos:start="31:31" pos:end="31:48"><name pos:start="31:31" pos:end="31:33">ost</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">filter</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:48">graph</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:29"><decl pos:start="33:13" pos:end="33:28"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">char</name></type> <name pos:start="33:18" pos:end="33:28"><name pos:start="33:18" pos:end="33:22">error</name><index pos:start="33:23" pos:end="33:28">[<expr pos:start="33:24" pos:end="33:27"><literal type="number" pos:start="33:24" pos:end="33:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="37:13" pos:end="41:52"><expr pos:start="37:13" pos:end="41:51"><call pos:start="37:13" pos:end="41:51"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="41:51">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">NULL</name></expr></argument>, <argument pos:start="37:26" pos:end="37:39"><expr pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:39">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:77"><expr pos:start="39:20" pos:end="39:77"><literal type="string" pos:start="39:20" pos:end="39:77">"Finishing stream %d:%d without any data written to it.\n"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:34"><expr pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:22">ost</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:34">file_index</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:50"><expr pos:start="41:37" pos:end="41:50"><name pos:start="41:37" pos:end="41:50"><name pos:start="41:37" pos:end="41:39">ost</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:43">st</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:50">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="45:13" pos:end="101:13"><if pos:start="45:13" pos:end="101:13">if <condition pos:start="45:16" pos:end="45:42">(<expr pos:start="45:17" pos:end="45:41"><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:19">ost</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">filter</name></name> <operator pos:start="45:29" pos:end="45:30">&amp;&amp;</operator> <operator pos:start="45:32" pos:end="45:32">!</operator><name pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:34">fg</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:41">graph</name></name></expr>)</condition> <block pos:start="45:44" pos:end="101:13">{<block_content pos:start="47:17" pos:end="99:42">

                <decl_stmt pos:start="47:17" pos:end="47:22"><decl pos:start="47:17" pos:end="47:21"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:21">x</name></decl>;</decl_stmt>

                <for pos:start="49:17" pos:end="77:17">for <control pos:start="49:21" pos:end="49:51">(<init pos:start="49:22" pos:end="49:27"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:22">x</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>;</init> <condition pos:start="49:29" pos:end="49:46"><expr pos:start="49:29" pos:end="49:45"><name pos:start="49:29" pos:end="49:29">x</name> <operator pos:start="49:31" pos:end="49:31">&lt;</operator> <name pos:start="49:33" pos:end="49:45"><name pos:start="49:33" pos:end="49:34">fg</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:45">nb_inputs</name></name></expr>;</condition> <incr pos:start="49:48" pos:end="49:50"><expr pos:start="49:48" pos:end="49:50"><name pos:start="49:48" pos:end="49:48">x</name><operator pos:start="49:49" pos:end="49:50">++</operator></expr></incr>)</control> <block pos:start="49:53" pos:end="77:17">{<block_content pos:start="51:21" pos:end="75:21">

                    <decl_stmt pos:start="51:21" pos:end="51:57"><decl pos:start="51:21" pos:end="51:56"><type pos:start="51:21" pos:end="51:33"><name pos:start="51:21" pos:end="51:31">InputFilter</name> <modifier pos:start="51:33" pos:end="51:33">*</modifier></type><name pos:start="51:34" pos:end="51:40">ifilter</name> <init pos:start="51:42" pos:end="51:56">= <expr pos:start="51:44" pos:end="51:56"><name pos:start="51:44" pos:end="51:56"><name pos:start="51:44" pos:end="51:45">fg</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:53">inputs</name><index pos:start="51:54" pos:end="51:56">[<expr pos:start="51:55" pos:end="51:55"><name pos:start="51:55" pos:end="51:55">x</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="53:21" pos:end="75:21"><if pos:start="53:21" pos:end="75:21">if <condition pos:start="53:24" pos:end="53:44">(<expr pos:start="53:25" pos:end="53:43"><name pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:31">ifilter</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:39">format</name></name> <operator pos:start="53:41" pos:end="53:41">&lt;</operator> <literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr>)</condition> <block pos:start="53:46" pos:end="75:21">{<block_content pos:start="55:25" pos:end="73:83">

                        <decl_stmt pos:start="55:25" pos:end="55:76"><decl pos:start="55:25" pos:end="55:75"><type pos:start="55:25" pos:end="55:43"><name pos:start="55:25" pos:end="55:41">AVCodecParameters</name> <modifier pos:start="55:43" pos:end="55:43">*</modifier></type><name pos:start="55:44" pos:end="55:46">par</name> <init pos:start="55:48" pos:end="55:75">= <expr pos:start="55:50" pos:end="55:75"><name pos:start="55:50" pos:end="55:75"><name pos:start="55:50" pos:end="55:56">ifilter</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:61">ist</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:65">st</name><operator pos:start="55:66" pos:end="55:67">-&gt;</operator><name pos:start="55:68" pos:end="55:75">codecpar</name></name></expr></init></decl>;</decl_stmt>

                        <comment type="line" pos:start="57:25" pos:end="57:80">// We never got any input. Set a fake format, which will</comment>

                        <comment type="line" pos:start="59:25" pos:end="59:49">// come from libavformat.</comment>

                        <expr_stmt pos:start="61:25" pos:end="61:70"><expr pos:start="61:25" pos:end="61:69"><name pos:start="61:25" pos:end="61:39"><name pos:start="61:25" pos:end="61:31">ifilter</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:39">format</name></name>                 <operator pos:start="61:57" pos:end="61:57">=</operator> <name pos:start="61:59" pos:end="61:69"><name pos:start="61:59" pos:end="61:61">par</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:69">format</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="63:25" pos:end="63:75"><expr pos:start="63:25" pos:end="63:74"><name pos:start="63:25" pos:end="63:44"><name pos:start="63:25" pos:end="63:31">ifilter</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:44">sample_rate</name></name>            <operator pos:start="63:57" pos:end="63:57">=</operator> <name pos:start="63:59" pos:end="63:74"><name pos:start="63:59" pos:end="63:61">par</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:74">sample_rate</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="65:25" pos:end="65:72"><expr pos:start="65:25" pos:end="65:71"><name pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:31">ifilter</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:41">channels</name></name>               <operator pos:start="65:57" pos:end="65:57">=</operator> <name pos:start="65:59" pos:end="65:71"><name pos:start="65:59" pos:end="65:61">par</name><operator pos:start="65:62" pos:end="65:63">-&gt;</operator><name pos:start="65:64" pos:end="65:71">channels</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="67:25" pos:end="67:78"><expr pos:start="67:25" pos:end="67:77"><name pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:31">ifilter</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:47">channel_layout</name></name>         <operator pos:start="67:57" pos:end="67:57">=</operator> <name pos:start="67:59" pos:end="67:77"><name pos:start="67:59" pos:end="67:61">par</name><operator pos:start="67:62" pos:end="67:63">-&gt;</operator><name pos:start="67:64" pos:end="67:77">channel_layout</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="69:25" pos:end="69:69"><expr pos:start="69:25" pos:end="69:68"><name pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:31">ifilter</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:38">width</name></name>                  <operator pos:start="69:57" pos:end="69:57">=</operator> <name pos:start="69:59" pos:end="69:68"><name pos:start="69:59" pos:end="69:61">par</name><operator pos:start="69:62" pos:end="69:63">-&gt;</operator><name pos:start="69:64" pos:end="69:68">width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="71:25" pos:end="71:70"><expr pos:start="71:25" pos:end="71:69"><name pos:start="71:25" pos:end="71:39"><name pos:start="71:25" pos:end="71:31">ifilter</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:39">height</name></name>                 <operator pos:start="71:57" pos:end="71:57">=</operator> <name pos:start="71:59" pos:end="71:69"><name pos:start="71:59" pos:end="71:61">par</name><operator pos:start="71:62" pos:end="71:63">-&gt;</operator><name pos:start="71:64" pos:end="71:69">height</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="73:25" pos:end="73:83"><expr pos:start="73:25" pos:end="73:82"><name pos:start="73:25" pos:end="73:52"><name pos:start="73:25" pos:end="73:31">ifilter</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:52">sample_aspect_ratio</name></name>    <operator pos:start="73:57" pos:end="73:57">=</operator> <name pos:start="73:59" pos:end="73:82"><name pos:start="73:59" pos:end="73:61">par</name><operator pos:start="73:62" pos:end="73:63">-&gt;</operator><name pos:start="73:64" pos:end="73:82">sample_aspect_ratio</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="81:17" pos:end="83:29"><if pos:start="81:17" pos:end="83:29">if <condition pos:start="81:20" pos:end="81:55">(<expr pos:start="81:21" pos:end="81:54"><operator pos:start="81:21" pos:end="81:21">!</operator><call pos:start="81:22" pos:end="81:54"><name pos:start="81:22" pos:end="81:50">ifilter_has_all_input_formats</name><argument_list pos:start="81:51" pos:end="81:54">(<argument pos:start="81:52" pos:end="81:53"><expr pos:start="81:52" pos:end="81:53"><name pos:start="81:52" pos:end="81:53">fg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:29"><block_content pos:start="83:21" pos:end="83:29">

                    <continue pos:start="83:21" pos:end="83:29">continue;</continue></block_content></block></if></if_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:48"><expr pos:start="87:17" pos:end="87:47"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:47"><name pos:start="87:23" pos:end="87:43">configure_filtergraph</name><argument_list pos:start="87:44" pos:end="87:47">(<argument pos:start="87:45" pos:end="87:46"><expr pos:start="87:45" pos:end="87:46"><name pos:start="87:45" pos:end="87:46">fg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="95:17"><if pos:start="89:17" pos:end="95:17">if <condition pos:start="89:20" pos:end="89:28">(<expr pos:start="89:21" pos:end="89:27"><name pos:start="89:21" pos:end="89:23">ret</name> <operator pos:start="89:25" pos:end="89:25">&lt;</operator> <literal type="number" pos:start="89:27" pos:end="89:27">0</literal></expr>)</condition> <block pos:start="89:30" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:36">

                    <expr_stmt pos:start="91:21" pos:end="91:83"><expr pos:start="91:21" pos:end="91:82"><call pos:start="91:21" pos:end="91:82"><name pos:start="91:21" pos:end="91:26">av_log</name><argument_list pos:start="91:27" pos:end="91:82">(<argument pos:start="91:28" pos:end="91:31"><expr pos:start="91:28" pos:end="91:31"><name pos:start="91:28" pos:end="91:31">NULL</name></expr></argument>, <argument pos:start="91:34" pos:end="91:45"><expr pos:start="91:34" pos:end="91:45"><name pos:start="91:34" pos:end="91:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:48" pos:end="91:81"><expr pos:start="91:48" pos:end="91:81"><literal type="string" pos:start="91:48" pos:end="91:81">"Error configuring filter graph\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:36"><expr pos:start="93:21" pos:end="93:35"><call pos:start="93:21" pos:end="93:35"><name pos:start="93:21" pos:end="93:32">exit_program</name><argument_list pos:start="93:33" pos:end="93:35">(<argument pos:start="93:34" pos:end="93:34"><expr pos:start="93:34" pos:end="93:34"><literal type="number" pos:start="93:34" pos:end="93:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="99:17" pos:end="99:42"><expr pos:start="99:17" pos:end="99:41"><call pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:36">finish_output_stream</name><argument_list pos:start="99:37" pos:end="99:41">(<argument pos:start="99:38" pos:end="99:40"><expr pos:start="99:38" pos:end="99:40"><name pos:start="99:38" pos:end="99:40">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:64"><expr pos:start="105:13" pos:end="105:63"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <call pos:start="105:19" pos:end="105:63"><name pos:start="105:19" pos:end="105:36">init_output_stream</name><argument_list pos:start="105:37" pos:end="105:63">(<argument pos:start="105:38" pos:end="105:40"><expr pos:start="105:38" pos:end="105:40"><name pos:start="105:38" pos:end="105:40">ost</name></expr></argument>, <argument pos:start="105:43" pos:end="105:47"><expr pos:start="105:43" pos:end="105:47"><name pos:start="105:43" pos:end="105:47">error</name></expr></argument>, <argument pos:start="105:50" pos:end="105:62"><expr pos:start="105:50" pos:end="105:62"><sizeof pos:start="105:50" pos:end="105:62">sizeof<argument_list pos:start="105:56" pos:end="105:62">(<argument pos:start="105:57" pos:end="105:61"><expr pos:start="105:57" pos:end="105:61"><name pos:start="105:57" pos:end="105:61">error</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="115:13"><if pos:start="107:13" pos:end="115:13">if <condition pos:start="107:16" pos:end="107:24">(<expr pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:19">ret</name> <operator pos:start="107:21" pos:end="107:21">&lt;</operator> <literal type="number" pos:start="107:23" pos:end="107:23">0</literal></expr>)</condition> <block pos:start="107:26" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:32">

                <expr_stmt pos:start="109:17" pos:end="111:59"><expr pos:start="109:17" pos:end="111:58"><call pos:start="109:17" pos:end="111:58"><name pos:start="109:17" pos:end="109:22">av_log</name><argument_list pos:start="109:23" pos:end="111:58">(<argument pos:start="109:24" pos:end="109:27"><expr pos:start="109:24" pos:end="109:27"><name pos:start="109:24" pos:end="109:27">NULL</name></expr></argument>, <argument pos:start="109:30" pos:end="109:41"><expr pos:start="109:30" pos:end="109:41"><name pos:start="109:30" pos:end="109:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:44" pos:end="109:91"><expr pos:start="109:44" pos:end="109:91"><literal type="string" pos:start="109:44" pos:end="109:91">"Error initializing output stream %d:%d -- %s\n"</literal></expr></argument>,

                       <argument pos:start="111:24" pos:end="111:38"><expr pos:start="111:24" pos:end="111:38"><name pos:start="111:24" pos:end="111:38"><name pos:start="111:24" pos:end="111:26">ost</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:38">file_index</name></name></expr></argument>, <argument pos:start="111:41" pos:end="111:50"><expr pos:start="111:41" pos:end="111:50"><name pos:start="111:41" pos:end="111:50"><name pos:start="111:41" pos:end="111:43">ost</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:50">index</name></name></expr></argument>, <argument pos:start="111:53" pos:end="111:57"><expr pos:start="111:53" pos:end="111:57"><name pos:start="111:53" pos:end="111:57">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:32"><expr pos:start="113:17" pos:end="113:31"><call pos:start="113:17" pos:end="113:31"><name pos:start="113:17" pos:end="113:28">exit_program</name><argument_list pos:start="113:29" pos:end="113:31">(<argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><literal type="number" pos:start="113:30" pos:end="113:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="121:9" pos:end="126:0"><if pos:start="121:9" pos:end="126:0">if <condition pos:start="121:12" pos:end="121:74">(<expr pos:start="121:13" pos:end="121:73"><name pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:15">enc</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:27">codec_type</name></name> <operator pos:start="121:29" pos:end="121:30">==</operator> <name pos:start="121:32" pos:end="121:49">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="121:51" pos:end="121:52">&amp;&amp;</operator> <name pos:start="121:54" pos:end="121:68"><name pos:start="121:54" pos:end="121:56">enc</name><operator pos:start="121:57" pos:end="121:58">-&gt;</operator><name pos:start="121:59" pos:end="121:68">frame_size</name></name> <operator pos:start="121:70" pos:end="121:71">&lt;=</operator> <literal type="number" pos:start="121:73" pos:end="121:73">1</literal></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="126:0"><block_content pos:start="123:13" pos:end="126:0">

            <continue pos:start="123:13" pos:end="126:0">continue;</continue></block_content></block></if></if_stmt>

<cpp:if pos:start="125:1" pos:end="125:30">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:30"><name pos:start="125:5" pos:end="125:30">FF_API_LAVF_FMT_RAWPICTURE</name></expr></cpp:if>

        <if_stmt pos:start="127:9" pos:end="132:0"><if pos:start="127:9" pos:end="132:0">if <condition pos:start="127:12" pos:end="127:140">(<expr pos:start="127:13" pos:end="127:139"><name pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:15">enc</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:27">codec_type</name></name> <operator pos:start="127:29" pos:end="127:30">==</operator> <name pos:start="127:32" pos:end="127:49">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="127:51" pos:end="127:52">&amp;&amp;</operator> <operator pos:start="127:54" pos:end="127:54">(</operator><name pos:start="127:55" pos:end="127:77"><name pos:start="127:55" pos:end="127:56">of</name><operator pos:start="127:57" pos:end="127:58">-&gt;</operator><name pos:start="127:59" pos:end="127:61">ctx</name><operator pos:start="127:62" pos:end="127:63">-&gt;</operator><name pos:start="127:64" pos:end="127:70">oformat</name><operator pos:start="127:71" pos:end="127:72">-&gt;</operator><name pos:start="127:73" pos:end="127:77">flags</name></name> <operator pos:start="127:79" pos:end="127:79">&amp;</operator> <name pos:start="127:81" pos:end="127:96">AVFMT_RAWPICTURE</name><operator pos:start="127:97" pos:end="127:97">)</operator> <operator pos:start="127:99" pos:end="127:100">&amp;&amp;</operator> <name pos:start="127:102" pos:end="127:115"><name pos:start="127:102" pos:end="127:104">enc</name><operator pos:start="127:105" pos:end="127:106">-&gt;</operator><name pos:start="127:107" pos:end="127:111">codec</name><operator pos:start="127:112" pos:end="127:113">-&gt;</operator><name pos:start="127:114" pos:end="127:115">id</name></name> <operator pos:start="127:117" pos:end="127:118">==</operator> <name pos:start="127:120" pos:end="127:139">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="132:0"><block_content pos:start="129:13" pos:end="132:0">

            <continue pos:start="129:13" pos:end="132:0">continue;</continue></block_content></block></if></if_stmt>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="135:9" pos:end="137:21"><if pos:start="135:9" pos:end="137:21">if <condition pos:start="135:12" pos:end="135:91">(<expr pos:start="135:13" pos:end="135:90"><name pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:15">enc</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:27">codec_type</name></name> <operator pos:start="135:29" pos:end="135:30">!=</operator> <name pos:start="135:32" pos:end="135:49">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="135:51" pos:end="135:52">&amp;&amp;</operator> <name pos:start="135:54" pos:end="135:68"><name pos:start="135:54" pos:end="135:56">enc</name><operator pos:start="135:57" pos:end="135:58">-&gt;</operator><name pos:start="135:59" pos:end="135:68">codec_type</name></name> <operator pos:start="135:70" pos:end="135:71">!=</operator> <name pos:start="135:73" pos:end="135:90">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:21"><block_content pos:start="137:13" pos:end="137:21">

            <continue pos:start="137:13" pos:end="137:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:38"><expr pos:start="141:9" pos:end="141:37"><call pos:start="141:9" pos:end="141:37"><name pos:start="141:9" pos:end="141:26">avcodec_send_frame</name><argument_list pos:start="141:27" pos:end="141:37">(<argument pos:start="141:28" pos:end="141:30"><expr pos:start="141:28" pos:end="141:30"><name pos:start="141:28" pos:end="141:30">enc</name></expr></argument>, <argument pos:start="141:33" pos:end="141:36"><expr pos:start="141:33" pos:end="141:36"><name pos:start="141:33" pos:end="141:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="145:9" pos:end="235:9">for <control pos:start="145:13" pos:end="145:16">(<init pos:start="145:14" pos:end="145:14">;</init><condition pos:start="145:15" pos:end="145:15">;</condition><incr/>)</control> <block pos:start="145:18" pos:end="235:9">{<block_content pos:start="147:13" pos:end="233:17">

            <decl_stmt pos:start="147:13" pos:end="147:36"><decl pos:start="147:13" pos:end="147:35"><type pos:start="147:13" pos:end="147:24"><specifier pos:start="147:13" pos:end="147:17">const</specifier> <name pos:start="147:19" pos:end="147:22">char</name> <modifier pos:start="147:24" pos:end="147:24">*</modifier></type><name pos:start="147:25" pos:end="147:28">desc</name> <init pos:start="147:30" pos:end="147:35">= <expr pos:start="147:32" pos:end="147:35"><name pos:start="147:32" pos:end="147:35">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:25"><decl pos:start="149:13" pos:end="149:24"><type pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:20">AVPacket</name></type> <name pos:start="149:22" pos:end="149:24">pkt</name></decl>;</decl_stmt>

            <decl_stmt pos:start="151:13" pos:end="151:25"><decl pos:start="151:13" pos:end="151:24"><type pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:15">int</name></type> <name pos:start="151:17" pos:end="151:24">pkt_size</name></decl>;</decl_stmt>



            <switch pos:start="155:13" pos:end="173:13">switch <condition pos:start="155:20" pos:end="155:36">(<expr pos:start="155:21" pos:end="155:35"><name pos:start="155:21" pos:end="155:35"><name pos:start="155:21" pos:end="155:23">enc</name><operator pos:start="155:24" pos:end="155:25">-&gt;</operator><name pos:start="155:26" pos:end="155:35">codec_type</name></name></expr>)</condition> <block pos:start="155:38" pos:end="173:13">{<block_content pos:start="157:13" pos:end="171:30">

            <case pos:start="157:13" pos:end="157:36">case <expr pos:start="157:18" pos:end="157:35"><name pos:start="157:18" pos:end="157:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="159:17" pos:end="159:33"><expr pos:start="159:17" pos:end="159:32"><name pos:start="159:17" pos:end="159:20">desc</name>   <operator pos:start="159:24" pos:end="159:24">=</operator> <literal type="string" pos:start="159:26" pos:end="159:32">"audio"</literal></expr>;</expr_stmt>

                <break pos:start="161:17" pos:end="161:22">break;</break>

            <case pos:start="163:13" pos:end="163:36">case <expr pos:start="163:18" pos:end="163:35"><name pos:start="163:18" pos:end="163:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="165:17" pos:end="165:33"><expr pos:start="165:17" pos:end="165:32"><name pos:start="165:17" pos:end="165:20">desc</name>   <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="string" pos:start="165:26" pos:end="165:32">"video"</literal></expr>;</expr_stmt>

                <break pos:start="167:17" pos:end="167:22">break;</break>

            <default pos:start="169:13" pos:end="169:20">default:</default>

                <expr_stmt pos:start="171:17" pos:end="171:30"><expr pos:start="171:17" pos:end="171:29"><call pos:start="171:17" pos:end="171:29"><name pos:start="171:17" pos:end="171:26">av_assert0</name><argument_list pos:start="171:27" pos:end="171:29">(<argument pos:start="171:28" pos:end="171:28"><expr pos:start="171:28" pos:end="171:28"><literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



                <expr_stmt pos:start="177:17" pos:end="177:37"><expr pos:start="177:17" pos:end="177:36"><call pos:start="177:17" pos:end="177:36"><name pos:start="177:17" pos:end="177:30">av_init_packet</name><argument_list pos:start="177:31" pos:end="177:36">(<argument pos:start="177:32" pos:end="177:35"><expr pos:start="177:32" pos:end="177:35"><operator pos:start="177:32" pos:end="177:32">&amp;</operator><name pos:start="177:33" pos:end="177:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:32"><expr pos:start="179:17" pos:end="179:31"><name pos:start="179:17" pos:end="179:24"><name pos:start="179:17" pos:end="179:19">pkt</name><operator pos:start="179:20" pos:end="179:20">.</operator><name pos:start="179:21" pos:end="179:24">data</name></name> <operator pos:start="179:26" pos:end="179:26">=</operator> <name pos:start="179:28" pos:end="179:31">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:29"><expr pos:start="181:17" pos:end="181:28"><name pos:start="181:17" pos:end="181:24"><name pos:start="181:17" pos:end="181:19">pkt</name><operator pos:start="181:20" pos:end="181:20">.</operator><name pos:start="181:21" pos:end="181:24">size</name></name> <operator pos:start="181:26" pos:end="181:26">=</operator> <literal type="number" pos:start="181:28" pos:end="181:28">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="185:17" pos:end="185:39"><expr pos:start="185:17" pos:end="185:38"><call pos:start="185:17" pos:end="185:38"><name pos:start="185:17" pos:end="185:32">update_benchmark</name><argument_list pos:start="185:33" pos:end="185:38">(<argument pos:start="185:34" pos:end="185:37"><expr pos:start="185:34" pos:end="185:37"><name pos:start="185:34" pos:end="185:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:56"><expr pos:start="187:17" pos:end="187:55"><name pos:start="187:17" pos:end="187:19">ret</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <call pos:start="187:23" pos:end="187:55"><name pos:start="187:23" pos:end="187:44">avcodec_receive_packet</name><argument_list pos:start="187:45" pos:end="187:55">(<argument pos:start="187:46" pos:end="187:48"><expr pos:start="187:46" pos:end="187:48"><name pos:start="187:46" pos:end="187:48">enc</name></expr></argument>, <argument pos:start="187:51" pos:end="187:54"><expr pos:start="187:51" pos:end="187:54"><operator pos:start="187:51" pos:end="187:51">&amp;</operator><name pos:start="187:52" pos:end="187:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:86"><expr pos:start="189:17" pos:end="189:85"><call pos:start="189:17" pos:end="189:85"><name pos:start="189:17" pos:end="189:32">update_benchmark</name><argument_list pos:start="189:33" pos:end="189:85">(<argument pos:start="189:34" pos:end="189:49"><expr pos:start="189:34" pos:end="189:49"><literal type="string" pos:start="189:34" pos:end="189:49">"flush_%s %d.%d"</literal></expr></argument>, <argument pos:start="189:52" pos:end="189:55"><expr pos:start="189:52" pos:end="189:55"><name pos:start="189:52" pos:end="189:55">desc</name></expr></argument>, <argument pos:start="189:58" pos:end="189:72"><expr pos:start="189:58" pos:end="189:72"><name pos:start="189:58" pos:end="189:72"><name pos:start="189:58" pos:end="189:60">ost</name><operator pos:start="189:61" pos:end="189:62">-&gt;</operator><name pos:start="189:63" pos:end="189:72">file_index</name></name></expr></argument>, <argument pos:start="189:75" pos:end="189:84"><expr pos:start="189:75" pos:end="189:84"><name pos:start="189:75" pos:end="189:84"><name pos:start="189:75" pos:end="189:77">ost</name><operator pos:start="189:78" pos:end="189:79">-&gt;</operator><name pos:start="189:80" pos:end="189:84">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="191:17" pos:end="201:17"><if pos:start="191:17" pos:end="201:17">if <condition pos:start="191:20" pos:end="191:50">(<expr pos:start="191:21" pos:end="191:49"><name pos:start="191:21" pos:end="191:23">ret</name> <operator pos:start="191:25" pos:end="191:25">&lt;</operator> <literal type="number" pos:start="191:27" pos:end="191:27">0</literal> <operator pos:start="191:29" pos:end="191:30">&amp;&amp;</operator> <name pos:start="191:32" pos:end="191:34">ret</name> <operator pos:start="191:36" pos:end="191:37">!=</operator> <name pos:start="191:39" pos:end="191:49">AVERROR_EOF</name></expr>)</condition> <block pos:start="191:52" pos:end="201:17">{<block_content pos:start="193:21" pos:end="199:36">

                    <expr_stmt pos:start="193:21" pos:end="197:44"><expr pos:start="193:21" pos:end="197:43"><call pos:start="193:21" pos:end="197:43"><name pos:start="193:21" pos:end="193:26">av_log</name><argument_list pos:start="193:27" pos:end="197:43">(<argument pos:start="193:28" pos:end="193:31"><expr pos:start="193:28" pos:end="193:31"><name pos:start="193:28" pos:end="193:31">NULL</name></expr></argument>, <argument pos:start="193:34" pos:end="193:45"><expr pos:start="193:34" pos:end="193:45"><name pos:start="193:34" pos:end="193:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="193:48" pos:end="193:73"><expr pos:start="193:48" pos:end="193:73"><literal type="string" pos:start="193:48" pos:end="193:73">"%s encoding failed: %s\n"</literal></expr></argument>,

                           <argument pos:start="195:28" pos:end="195:31"><expr pos:start="195:28" pos:end="195:31"><name pos:start="195:28" pos:end="195:31">desc</name></expr></argument>,

                           <argument pos:start="197:28" pos:end="197:42"><expr pos:start="197:28" pos:end="197:42"><call pos:start="197:28" pos:end="197:42"><name pos:start="197:28" pos:end="197:37">av_err2str</name><argument_list pos:start="197:38" pos:end="197:42">(<argument pos:start="197:39" pos:end="197:41"><expr pos:start="197:39" pos:end="197:41"><name pos:start="197:39" pos:end="197:41">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:36"><expr pos:start="199:21" pos:end="199:35"><call pos:start="199:21" pos:end="199:35"><name pos:start="199:21" pos:end="199:32">exit_program</name><argument_list pos:start="199:33" pos:end="199:35">(<argument pos:start="199:34" pos:end="199:34"><expr pos:start="199:34" pos:end="199:34"><literal type="number" pos:start="199:34" pos:end="199:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="203:17" pos:end="207:17"><if pos:start="203:17" pos:end="207:17">if <condition pos:start="203:20" pos:end="203:51">(<expr pos:start="203:21" pos:end="203:50"><name pos:start="203:21" pos:end="203:32"><name pos:start="203:21" pos:end="203:23">ost</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:32">logfile</name></name> <operator pos:start="203:34" pos:end="203:35">&amp;&amp;</operator> <name pos:start="203:37" pos:end="203:50"><name pos:start="203:37" pos:end="203:39">enc</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:50">stats_out</name></name></expr>)</condition> <block pos:start="203:53" pos:end="207:17">{<block_content pos:start="205:21" pos:end="205:64">

                    <expr_stmt pos:start="205:21" pos:end="205:64"><expr pos:start="205:21" pos:end="205:63"><call pos:start="205:21" pos:end="205:63"><name pos:start="205:21" pos:end="205:27">fprintf</name><argument_list pos:start="205:28" pos:end="205:63">(<argument pos:start="205:29" pos:end="205:40"><expr pos:start="205:29" pos:end="205:40"><name pos:start="205:29" pos:end="205:40"><name pos:start="205:29" pos:end="205:31">ost</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:40">logfile</name></name></expr></argument>, <argument pos:start="205:43" pos:end="205:46"><expr pos:start="205:43" pos:end="205:46"><literal type="string" pos:start="205:43" pos:end="205:46">"%s"</literal></expr></argument>, <argument pos:start="205:49" pos:end="205:62"><expr pos:start="205:49" pos:end="205:62"><name pos:start="205:49" pos:end="205:62"><name pos:start="205:49" pos:end="205:51">enc</name><operator pos:start="205:52" pos:end="205:53">-&gt;</operator><name pos:start="205:54" pos:end="205:62">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="209:17" pos:end="213:17"><if pos:start="209:17" pos:end="213:17">if <condition pos:start="209:20" pos:end="209:39">(<expr pos:start="209:21" pos:end="209:38"><name pos:start="209:21" pos:end="209:23">ret</name> <operator pos:start="209:25" pos:end="209:26">==</operator> <name pos:start="209:28" pos:end="209:38">AVERROR_EOF</name></expr>)</condition> <block pos:start="209:41" pos:end="213:17">{<block_content pos:start="211:21" pos:end="211:26">

                    <break pos:start="211:21" pos:end="211:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="215:17" pos:end="221:17"><if pos:start="215:17" pos:end="221:17">if <condition pos:start="215:20" pos:end="215:51">(<expr pos:start="215:21" pos:end="215:50"><name pos:start="215:21" pos:end="215:33"><name pos:start="215:21" pos:end="215:23">ost</name><operator pos:start="215:24" pos:end="215:25">-&gt;</operator><name pos:start="215:26" pos:end="215:33">finished</name></name> <operator pos:start="215:35" pos:end="215:35">&amp;</operator> <name pos:start="215:37" pos:end="215:50">MUXER_FINISHED</name></expr>)</condition> <block pos:start="215:53" pos:end="221:17">{<block_content pos:start="217:21" pos:end="219:29">

                    <expr_stmt pos:start="217:21" pos:end="217:42"><expr pos:start="217:21" pos:end="217:41"><call pos:start="217:21" pos:end="217:41"><name pos:start="217:21" pos:end="217:35">av_packet_unref</name><argument_list pos:start="217:36" pos:end="217:41">(<argument pos:start="217:37" pos:end="217:40"><expr pos:start="217:37" pos:end="217:40"><operator pos:start="217:37" pos:end="217:37">&amp;</operator><name pos:start="217:38" pos:end="217:40">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="219:21" pos:end="219:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:78"><expr pos:start="223:17" pos:end="223:77"><call pos:start="223:17" pos:end="223:77"><name pos:start="223:17" pos:end="223:36">av_packet_rescale_ts</name><argument_list pos:start="223:37" pos:end="223:77">(<argument pos:start="223:38" pos:end="223:41"><expr pos:start="223:38" pos:end="223:41"><operator pos:start="223:38" pos:end="223:38">&amp;</operator><name pos:start="223:39" pos:end="223:41">pkt</name></expr></argument>, <argument pos:start="223:44" pos:end="223:57"><expr pos:start="223:44" pos:end="223:57"><name pos:start="223:44" pos:end="223:57"><name pos:start="223:44" pos:end="223:46">enc</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:57">time_base</name></name></expr></argument>, <argument pos:start="223:60" pos:end="223:76"><expr pos:start="223:60" pos:end="223:76"><name pos:start="223:60" pos:end="223:76"><name pos:start="223:60" pos:end="223:62">ost</name><operator pos:start="223:63" pos:end="223:64">-&gt;</operator><name pos:start="223:65" pos:end="223:76">mux_timebase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:36"><expr pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:24">pkt_size</name> <operator pos:start="225:26" pos:end="225:26">=</operator> <name pos:start="225:28" pos:end="225:35"><name pos:start="225:28" pos:end="225:30">pkt</name><operator pos:start="225:31" pos:end="225:31">.</operator><name pos:start="225:32" pos:end="225:35">size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:45"><expr pos:start="227:17" pos:end="227:44"><call pos:start="227:17" pos:end="227:44"><name pos:start="227:17" pos:end="227:29">output_packet</name><argument_list pos:start="227:30" pos:end="227:44">(<argument pos:start="227:31" pos:end="227:32"><expr pos:start="227:31" pos:end="227:32"><name pos:start="227:31" pos:end="227:32">of</name></expr></argument>, <argument pos:start="227:35" pos:end="227:38"><expr pos:start="227:35" pos:end="227:38"><operator pos:start="227:35" pos:end="227:35">&amp;</operator><name pos:start="227:36" pos:end="227:38">pkt</name></expr></argument>, <argument pos:start="227:41" pos:end="227:43"><expr pos:start="227:41" pos:end="227:43"><name pos:start="227:41" pos:end="227:43">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="229:17" pos:end="233:17"><if pos:start="229:17" pos:end="233:17">if <condition pos:start="229:20" pos:end="229:86">(<expr pos:start="229:21" pos:end="229:85"><name pos:start="229:21" pos:end="229:44"><name pos:start="229:21" pos:end="229:23">ost</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:32">enc_ctx</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:44">codec_type</name></name> <operator pos:start="229:46" pos:end="229:47">==</operator> <name pos:start="229:49" pos:end="229:66">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="229:68" pos:end="229:69">&amp;&amp;</operator> <name pos:start="229:71" pos:end="229:85">vstats_filename</name></expr>)</condition> <block pos:start="229:88" pos:end="233:17">{<block_content pos:start="231:21" pos:end="231:50">

                    <expr_stmt pos:start="231:21" pos:end="231:50"><expr pos:start="231:21" pos:end="231:49"><call pos:start="231:21" pos:end="231:49"><name pos:start="231:21" pos:end="231:34">do_video_stats</name><argument_list pos:start="231:35" pos:end="231:49">(<argument pos:start="231:36" pos:end="231:38"><expr pos:start="231:36" pos:end="231:38"><name pos:start="231:36" pos:end="231:38">ost</name></expr></argument>, <argument pos:start="231:41" pos:end="231:48"><expr pos:start="231:41" pos:end="231:48"><name pos:start="231:41" pos:end="231:48">pkt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
