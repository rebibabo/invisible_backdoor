<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26091.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">avresample_get_matrix</name><parameter_list pos:start="1:26" pos:end="3:37">(<parameter pos:start="1:27" pos:end="1:53"><decl pos:start="1:27" pos:end="1:53"><type pos:start="1:27" pos:end="1:53"><name pos:start="1:27" pos:end="1:48">AVAudioResampleContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">avr</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:61">double</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">matrix</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:36"><decl pos:start="3:27" pos:end="3:36"><type pos:start="3:27" pos:end="3:36"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:36">stride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">in_channels</name></decl>, <decl pos:start="7:22" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:33">out_channels</name></decl>, <decl pos:start="7:36" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:36">i</name></decl>, <decl pos:start="7:39" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:39" pos:end="7:39">o</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:77"><expr pos:start="11:5" pos:end="11:76"><name pos:start="11:5" pos:end="11:15">in_channels</name>  <operator pos:start="11:18" pos:end="11:18">=</operator> <call pos:start="11:20" pos:end="11:76"><name pos:start="11:20" pos:end="11:52">av_get_channel_layout_nb_channels</name><argument_list pos:start="11:53" pos:end="11:76">(<argument pos:start="11:54" pos:end="11:75"><expr pos:start="11:54" pos:end="11:75"><name pos:start="11:54" pos:end="11:75"><name pos:start="11:54" pos:end="11:56">avr</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:75">in_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:78"><expr pos:start="13:5" pos:end="13:77"><name pos:start="13:5" pos:end="13:16">out_channels</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:77"><name pos:start="13:20" pos:end="13:52">av_get_channel_layout_nb_channels</name><argument_list pos:start="13:53" pos:end="13:77">(<argument pos:start="13:54" pos:end="13:76"><expr pos:start="13:54" pos:end="13:76"><name pos:start="13:54" pos:end="13:76"><name pos:start="13:54" pos:end="13:56">avr</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:76">out_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="19:67">( <expr pos:start="17:10" pos:end="19:66"><name pos:start="17:10" pos:end="17:42"><name pos:start="17:10" pos:end="17:20">in_channels</name> <argument_list type="generic" pos:start="17:22" pos:end="17:42">&lt; <argument pos:start="17:24" pos:end="17:40"><expr pos:start="17:24" pos:end="17:40"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal> <operator pos:start="17:26" pos:end="17:27">||</operator>  <name pos:start="17:30" pos:end="17:40">in_channels</name></expr></argument> &gt;</argument_list></name> <name pos:start="17:44" pos:end="17:66">AVRESAMPLE_MAX_CHANNELS</name> <operator pos:start="17:68" pos:end="17:69">||</operator>

        <name pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:20">out_channels</name> <argument_list type="generic" pos:start="19:22" pos:end="19:42">&lt; <argument pos:start="19:24" pos:end="19:40"><expr pos:start="19:24" pos:end="19:40"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal> <operator pos:start="19:26" pos:end="19:27">||</operator> <name pos:start="19:29" pos:end="19:40">out_channels</name></expr></argument> &gt;</argument_list></name> <name pos:start="19:44" pos:end="19:66">AVRESAMPLE_MAX_CHANNELS</name></expr>)</condition> <block pos:start="19:69" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:62">(<argument pos:start="21:16" pos:end="21:18"><expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">avr</name></expr></argument>, <argument pos:start="21:21" pos:end="21:32"><expr pos:start="21:21" pos:end="21:32"><name pos:start="21:21" pos:end="21:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:35" pos:end="21:61"><expr pos:start="21:35" pos:end="21:61"><literal type="string" pos:start="21:35" pos:end="21:61">"Invalid channel layouts\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="29:5" pos:end="91:5">switch <condition pos:start="29:12" pos:end="29:32">(<expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:15">avr</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:31">mix_coeff_type</name></name></expr>)</condition> <block pos:start="29:34" pos:end="91:5">{<block_content pos:start="31:5" pos:end="89:31">

    <case pos:start="31:5" pos:end="31:30">case <expr pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:29">AV_MIX_COEFF_TYPE_Q8</name></expr>:</case>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:34"><name pos:start="33:14" pos:end="33:16">avr</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">am</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:31">matrix_q8</name><index pos:start="33:32" pos:end="33:34">[<expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="33:37" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:35">

            <expr_stmt pos:start="35:13" pos:end="35:61"><expr pos:start="35:13" pos:end="35:60"><call pos:start="35:13" pos:end="35:60"><name pos:start="35:13" pos:end="35:18">av_log</name><argument_list pos:start="35:19" pos:end="35:60">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">avr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:36"><expr pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:39" pos:end="35:59"><expr pos:start="35:39" pos:end="35:59"><literal type="string" pos:start="35:39" pos:end="35:59">"matrix is not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:35">return <expr pos:start="37:20" pos:end="37:34"><call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="41:9" pos:end="45:74">for <control pos:start="41:13" pos:end="41:42">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">o</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:37"><expr pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:21">o</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:36">out_channels</name></expr>;</condition> <incr pos:start="41:39" pos:end="41:41"><expr pos:start="41:39" pos:end="41:41"><name pos:start="41:39" pos:end="41:39">o</name><operator pos:start="41:40" pos:end="41:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:13" pos:end="45:74"><block_content pos:start="43:13" pos:end="45:74">

            <for pos:start="43:13" pos:end="45:74">for <control pos:start="43:17" pos:end="43:45">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:40"><expr pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <name pos:start="43:29" pos:end="43:39">in_channels</name></expr>;</condition> <incr pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:42">i</name><operator pos:start="43:43" pos:end="43:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:17" pos:end="45:74"><block_content pos:start="45:17" pos:end="45:74">

                <expr_stmt pos:start="45:17" pos:end="45:74"><expr pos:start="45:17" pos:end="45:73"><name pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:22">matrix</name><index pos:start="45:23" pos:end="45:38">[<expr pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:24">o</name> <operator pos:start="45:26" pos:end="45:26">*</operator> <name pos:start="45:28" pos:end="45:33">stride</name> <operator pos:start="45:35" pos:end="45:35">+</operator> <name pos:start="45:37" pos:end="45:37">i</name></expr>]</index></name> <operator pos:start="45:40" pos:end="45:40">=</operator> <name pos:start="45:42" pos:end="45:65"><name pos:start="45:42" pos:end="45:44">avr</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:48">am</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:59">matrix_q8</name><index pos:start="45:60" pos:end="45:62">[<expr pos:start="45:61" pos:end="45:61"><name pos:start="45:61" pos:end="45:61">o</name></expr>]</index><index pos:start="45:63" pos:end="45:65">[<expr pos:start="45:64" pos:end="45:64"><name pos:start="45:64" pos:end="45:64">i</name></expr>]</index></name> <operator pos:start="45:67" pos:end="45:67">/</operator> <literal type="number" pos:start="45:69" pos:end="45:73">256.0</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:31">case <expr pos:start="49:10" pos:end="49:30"><name pos:start="49:10" pos:end="49:30">AV_MIX_COEFF_TYPE_Q15</name></expr>:</case>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:36">(<expr pos:start="51:13" pos:end="51:35"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:35"><name pos:start="51:14" pos:end="51:16">avr</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:20">am</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:32">matrix_q15</name><index pos:start="51:33" pos:end="51:35">[<expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="51:38" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:35">

            <expr_stmt pos:start="53:13" pos:end="53:61"><expr pos:start="53:13" pos:end="53:60"><call pos:start="53:13" pos:end="53:60"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:60">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">avr</name></expr></argument>, <argument pos:start="53:25" pos:end="53:36"><expr pos:start="53:25" pos:end="53:36"><name pos:start="53:25" pos:end="53:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:39" pos:end="53:59"><expr pos:start="53:39" pos:end="53:59"><literal type="string" pos:start="53:39" pos:end="53:59">"matrix is not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:35">return <expr pos:start="55:20" pos:end="55:34"><call pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:26">AVERROR</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="59:9" pos:end="63:77">for <control pos:start="59:13" pos:end="59:42">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">o</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:37"><expr pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:21">o</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:36">out_channels</name></expr>;</condition> <incr pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:39">o</name><operator pos:start="59:40" pos:end="59:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:13" pos:end="63:77"><block_content pos:start="61:13" pos:end="63:77">

            <for pos:start="61:13" pos:end="63:77">for <control pos:start="61:17" pos:end="61:45">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">i</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:40"><expr pos:start="61:25" pos:end="61:39"><name pos:start="61:25" pos:end="61:25">i</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:39">in_channels</name></expr>;</condition> <incr pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:42">i</name><operator pos:start="61:43" pos:end="61:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:17" pos:end="63:77"><block_content pos:start="63:17" pos:end="63:77">

                <expr_stmt pos:start="63:17" pos:end="63:77"><expr pos:start="63:17" pos:end="63:76"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:22">matrix</name><index pos:start="63:23" pos:end="63:38">[<expr pos:start="63:24" pos:end="63:37"><name pos:start="63:24" pos:end="63:24">o</name> <operator pos:start="63:26" pos:end="63:26">*</operator> <name pos:start="63:28" pos:end="63:33">stride</name> <operator pos:start="63:35" pos:end="63:35">+</operator> <name pos:start="63:37" pos:end="63:37">i</name></expr>]</index></name> <operator pos:start="63:40" pos:end="63:40">=</operator> <name pos:start="63:42" pos:end="63:66"><name pos:start="63:42" pos:end="63:44">avr</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:48">am</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:60">matrix_q15</name><index pos:start="63:61" pos:end="63:63">[<expr pos:start="63:62" pos:end="63:62"><name pos:start="63:62" pos:end="63:62">o</name></expr>]</index><index pos:start="63:64" pos:end="63:66">[<expr pos:start="63:65" pos:end="63:65"><name pos:start="63:65" pos:end="63:65">i</name></expr>]</index></name> <operator pos:start="63:68" pos:end="63:68">/</operator> <literal type="number" pos:start="63:70" pos:end="63:76">32768.0</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:31">case <expr pos:start="67:10" pos:end="67:30"><name pos:start="67:10" pos:end="67:30">AV_MIX_COEFF_TYPE_FLT</name></expr>:</case>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:36">(<expr pos:start="69:13" pos:end="69:35"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:35"><name pos:start="69:14" pos:end="69:16">avr</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:20">am</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:32">matrix_flt</name><index pos:start="69:33" pos:end="69:35">[<expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="69:38" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:35">

            <expr_stmt pos:start="71:13" pos:end="71:61"><expr pos:start="71:13" pos:end="71:60"><call pos:start="71:13" pos:end="71:60"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:60">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">avr</name></expr></argument>, <argument pos:start="71:25" pos:end="71:36"><expr pos:start="71:25" pos:end="71:36"><name pos:start="71:25" pos:end="71:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:39" pos:end="71:59"><expr pos:start="71:39" pos:end="71:59"><literal type="string" pos:start="71:39" pos:end="71:59">"matrix is not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:35">return <expr pos:start="73:20" pos:end="73:34"><call pos:start="73:20" pos:end="73:34"><name pos:start="73:20" pos:end="73:26">AVERROR</name><argument_list pos:start="73:27" pos:end="73:34">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="77:9" pos:end="81:67">for <control pos:start="77:13" pos:end="77:42">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">o</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:37"><expr pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:21">o</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:36">out_channels</name></expr>;</condition> <incr pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:39">o</name><operator pos:start="77:40" pos:end="77:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:13" pos:end="81:67"><block_content pos:start="79:13" pos:end="81:67">

            <for pos:start="79:13" pos:end="81:67">for <control pos:start="79:17" pos:end="79:45">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">i</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:40"><expr pos:start="79:25" pos:end="79:39"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:39">in_channels</name></expr>;</condition> <incr pos:start="79:42" pos:end="79:44"><expr pos:start="79:42" pos:end="79:44"><name pos:start="79:42" pos:end="79:42">i</name><operator pos:start="79:43" pos:end="79:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:17" pos:end="81:67"><block_content pos:start="81:17" pos:end="81:67">

                <expr_stmt pos:start="81:17" pos:end="81:67"><expr pos:start="81:17" pos:end="81:66"><name pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:22">matrix</name><index pos:start="81:23" pos:end="81:38">[<expr pos:start="81:24" pos:end="81:37"><name pos:start="81:24" pos:end="81:24">o</name> <operator pos:start="81:26" pos:end="81:26">*</operator> <name pos:start="81:28" pos:end="81:33">stride</name> <operator pos:start="81:35" pos:end="81:35">+</operator> <name pos:start="81:37" pos:end="81:37">i</name></expr>]</index></name> <operator pos:start="81:40" pos:end="81:40">=</operator> <name pos:start="81:42" pos:end="81:66"><name pos:start="81:42" pos:end="81:44">avr</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:48">am</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:60">matrix_flt</name><index pos:start="81:61" pos:end="81:63">[<expr pos:start="81:62" pos:end="81:62"><name pos:start="81:62" pos:end="81:62">o</name></expr>]</index><index pos:start="81:64" pos:end="81:66">[<expr pos:start="81:65" pos:end="81:65"><name pos:start="81:65" pos:end="81:65">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <default pos:start="85:5" pos:end="85:12">default:</default>

        <expr_stmt pos:start="87:9" pos:end="87:62"><expr pos:start="87:9" pos:end="87:61"><call pos:start="87:9" pos:end="87:61"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:61">(<argument pos:start="87:16" pos:end="87:18"><expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">avr</name></expr></argument>, <argument pos:start="87:21" pos:end="87:32"><expr pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:35" pos:end="87:60"><expr pos:start="87:35" pos:end="87:60"><literal type="string" pos:start="87:35" pos:end="87:60">"Invalid mix coeff type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:31">return <expr pos:start="89:16" pos:end="89:30"><call pos:start="89:16" pos:end="89:30"><name pos:start="89:16" pos:end="89:22">AVERROR</name><argument_list pos:start="89:23" pos:end="89:30">(<argument pos:start="89:24" pos:end="89:29"><expr pos:start="89:24" pos:end="89:29"><name pos:start="89:24" pos:end="89:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
