<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26124.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:19">s1d13745_init</name><parameter_list pos:start="1:20" pos:end="1:38">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:28"><name pos:start="1:21" pos:end="1:28">qemu_irq</name></type> <name pos:start="1:30" pos:end="1:37">gpio_int</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BlizzardState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:62">= <expr pos:start="5:24" pos:end="5:62"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:37">BlizzardState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator> <call pos:start="5:42" pos:end="5:62"><name pos:start="5:42" pos:end="5:50">g_malloc0</name><argument_list pos:start="5:51" pos:end="5:62">(<argument pos:start="5:52" pos:end="5:61"><expr pos:start="5:52" pos:end="5:61"><sizeof pos:start="5:52" pos:end="5:61">sizeof<argument_list pos:start="5:58" pos:end="5:61">(<argument pos:start="5:59" pos:end="5:60"><expr pos:start="5:59" pos:end="5:60"><operator pos:start="5:59" pos:end="5:59">*</operator><name pos:start="5:60" pos:end="5:60">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">DisplaySurface</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">surface</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:9">fb</name></name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:20">g_malloc</name><argument_list pos:start="11:21" pos:end="11:30">(<argument pos:start="11:22" pos:end="11:29"><expr pos:start="11:22" pos:end="11:29"><literal type="number" pos:start="11:22" pos:end="11:29">0x180000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="19:65"><expr pos:start="15:5" pos:end="19:64"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">con</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="19:64"><name pos:start="15:14" pos:end="15:33">graphic_console_init</name><argument_list pos:start="15:34" pos:end="19:64">(<argument pos:start="15:35" pos:end="15:57"><expr pos:start="15:35" pos:end="15:57"><name pos:start="15:35" pos:end="15:57">blizzard_update_display</name></expr></argument>,

                                  <argument pos:start="17:35" pos:end="17:61"><expr pos:start="17:35" pos:end="17:61"><name pos:start="17:35" pos:end="17:61">blizzard_invalidate_display</name></expr></argument>,

                                  <argument pos:start="19:35" pos:end="19:54"><expr pos:start="19:35" pos:end="19:54"><name pos:start="19:35" pos:end="19:54">blizzard_screen_dump</name></expr></argument>, <argument pos:start="19:57" pos:end="19:60"><expr pos:start="19:57" pos:end="19:60"><name pos:start="19:57" pos:end="19:60">NULL</name></expr></argument>, <argument pos:start="19:63" pos:end="19:63"><expr pos:start="19:63" pos:end="19:63"><name pos:start="19:63" pos:end="19:63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:11">surface</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:42"><name pos:start="21:15" pos:end="21:34">qemu_console_surface</name><argument_list pos:start="21:35" pos:end="21:42">(<argument pos:start="21:36" pos:end="21:41"><expr pos:start="21:36" pos:end="21:41"><name pos:start="21:36" pos:end="21:41"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:41">con</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="81:5">switch <condition pos:start="25:12" pos:end="25:44">(<expr pos:start="25:13" pos:end="25:43"><call pos:start="25:13" pos:end="25:43"><name pos:start="25:13" pos:end="25:34">surface_bits_per_pixel</name><argument_list pos:start="25:35" pos:end="25:43">(<argument pos:start="25:36" pos:end="25:42"><expr pos:start="25:36" pos:end="25:42"><name pos:start="25:36" pos:end="25:42">surface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:46" pos:end="81:5">{<block_content pos:start="27:5" pos:end="79:16">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">0</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="31:56"><expr pos:start="29:9" pos:end="31:55"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">line_fn_tab</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>]</index></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:42">line_fn_tab</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">1</literal></expr>]</index></name> <operator pos:start="29:47" pos:end="29:47">=</operator>

                <call pos:start="31:17" pos:end="31:55"><name pos:start="31:17" pos:end="31:25">g_malloc0</name><argument_list pos:start="31:26" pos:end="31:55">(<argument pos:start="31:27" pos:end="31:54"><expr pos:start="31:27" pos:end="31:54"><sizeof pos:start="31:27" pos:end="31:47">sizeof<argument_list pos:start="31:33" pos:end="31:47">(<argument pos:start="31:34" pos:end="31:46"><expr pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:46">blizzard_fn_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:49" pos:end="31:49">*</operator> <literal type="number" pos:start="31:51" pos:end="31:54">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">8</literal></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:22">line_fn_tab</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>]</index></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:46">blizzard_draw_fn_8</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:22">line_fn_tab</name><index pos:start="39:23" pos:end="39:25">[<expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr>]</index></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:48">blizzard_draw_fn_r_8</name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:12">case <expr pos:start="43:10" pos:end="43:11"><literal type="number" pos:start="43:10" pos:end="43:11">15</literal></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">line_fn_tab</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:47">blizzard_draw_fn_15</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">line_fn_tab</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">1</literal></expr>]</index></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:49">blizzard_draw_fn_r_15</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:12">case <expr pos:start="51:10" pos:end="51:11"><literal type="number" pos:start="51:10" pos:end="51:11">16</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:22">line_fn_tab</name><index pos:start="53:23" pos:end="53:25">[<expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:47">blizzard_draw_fn_16</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">line_fn_tab</name><index pos:start="55:23" pos:end="55:25">[<expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:49">blizzard_draw_fn_r_16</name></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:12">case <expr pos:start="59:10" pos:end="59:11"><literal type="number" pos:start="59:10" pos:end="59:11">24</literal></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:48"><expr pos:start="61:9" pos:end="61:47"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:22">line_fn_tab</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>]</index></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:47">blizzard_draw_fn_24</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:22">line_fn_tab</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">1</literal></expr>]</index></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:49">blizzard_draw_fn_r_24</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:12">case <expr pos:start="67:10" pos:end="67:11"><literal type="number" pos:start="67:10" pos:end="67:11">32</literal></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:48"><expr pos:start="69:9" pos:end="69:47"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:22">line_fn_tab</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">0</literal></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:47">blizzard_draw_fn_32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:50"><expr pos:start="71:9" pos:end="71:49"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:22">line_fn_tab</name><index pos:start="71:23" pos:end="71:25">[<expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">1</literal></expr>]</index></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:49">blizzard_draw_fn_r_32</name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default>

        <expr_stmt pos:start="77:9" pos:end="77:63"><expr pos:start="77:9" pos:end="77:62"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:15">fprintf</name><argument_list pos:start="77:16" pos:end="77:62">(<argument pos:start="77:17" pos:end="77:22"><expr pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:22">stderr</name></expr></argument>, <argument pos:start="77:25" pos:end="77:47"><expr pos:start="77:25" pos:end="77:47"><literal type="string" pos:start="77:25" pos:end="77:47">"%s: Bad color depth\n"</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:61"><expr pos:start="77:50" pos:end="77:61"><name pos:start="77:50" pos:end="77:61">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:16"><expr pos:start="79:9" pos:end="79:15"><call pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:12">exit</name><argument_list pos:start="79:13" pos:end="79:15">(<argument pos:start="79:14" pos:end="79:14"><expr pos:start="79:14" pos:end="79:14"><literal type="number" pos:start="79:14" pos:end="79:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="85:5" pos:end="85:22"><expr pos:start="85:5" pos:end="85:21"><call pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:18">blizzard_reset</name><argument_list pos:start="85:19" pos:end="85:21">(<argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><name pos:start="89:12" pos:end="89:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
