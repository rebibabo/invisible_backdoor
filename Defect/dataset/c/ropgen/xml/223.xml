<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/223.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:25">replay_next_event_is</name><parameter_list pos:start="1:26" pos:end="1:36">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:29"><name pos:start="1:27" pos:end="1:29">int</name></type> <name pos:start="1:31" pos:end="1:35">event</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:12">res</name> <init pos:start="5:14" pos:end="5:20">= <expr pos:start="5:16" pos:end="5:20"><name pos:start="5:16" pos:end="5:20">false</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:53">/* nothing to skip - not all instructions used */</comment>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:45">(<expr pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:20">replay_state</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:39">instructions_count</name></name> <operator pos:start="11:41" pos:end="11:42">!=</operator> <literal type="number" pos:start="11:44" pos:end="11:44">0</literal></expr>)</condition> <block pos:start="11:47" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:42">

        <expr_stmt pos:start="13:9" pos:end="13:54"><expr pos:start="13:9" pos:end="13:53"><call pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:14">assert</name><argument_list pos:start="13:15" pos:end="13:53">(<argument pos:start="13:16" pos:end="13:52"><expr pos:start="13:16" pos:end="13:52"><name pos:start="13:16" pos:end="13:31">replay_data_kind</name> <operator pos:start="13:33" pos:end="13:34">==</operator> <name pos:start="13:36" pos:end="13:52">EVENT_INSTRUCTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:42">return <expr pos:start="15:16" pos:end="15:41"><name pos:start="15:16" pos:end="15:20">event</name> <operator pos:start="15:22" pos:end="15:23">==</operator> <name pos:start="15:25" pos:end="15:41">EVENT_INSTRUCTION</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="21:5" pos:end="47:5">while <condition pos:start="21:11" pos:end="21:16">(<expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">true</name></expr>)</condition> <block pos:start="21:18" pos:end="47:5">{<block_content pos:start="23:9" pos:end="45:9">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:38">(<expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:17">event</name> <operator pos:start="23:19" pos:end="23:20">==</operator> <name pos:start="23:22" pos:end="23:37">replay_data_kind</name></expr>)</condition> <block pos:start="23:40" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:23">

            <expr_stmt pos:start="25:13" pos:end="25:23"><expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:15">res</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:22">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="29:9" pos:end="45:9">switch <condition pos:start="29:16" pos:end="29:33">(<expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:32">replay_data_kind</name></expr>)</condition> <block pos:start="29:35" pos:end="45:9">{<block_content pos:start="31:9" pos:end="43:23">

        <case pos:start="31:9" pos:end="31:28">case <expr pos:start="31:14" pos:end="31:27"><name pos:start="31:14" pos:end="31:27">EVENT_SHUTDOWN</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><call pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:31">replay_finish_event</name><argument_list pos:start="33:32" pos:end="33:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><call pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:40">qemu_system_shutdown_request</name><argument_list pos:start="35:41" pos:end="35:42">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <default pos:start="39:9" pos:end="39:16">default:</default>

            <comment type="block" pos:start="41:13" pos:end="41:60">/* clock, time_t, checkpoint and other events */</comment>

            <return pos:start="43:13" pos:end="43:23">return <expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">res</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
