<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17915.c" pos:tabs="8"><function pos:start="1:1" pos:end="939:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_vc1_parse_frame_header_adv</name><parameter_list pos:start="1:34" pos:end="1:67">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:44">VC1Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:62">GetBitContext</name><modifier pos:start="1:63" pos:end="1:63">*</modifier></type> <name pos:start="1:65" pos:end="1:66">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="939:1">{<block_content pos:start="5:5" pos:end="937:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pqindex</name></decl>, <decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:25">lowquant</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">mbmodetab</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">imvtab</name></decl>, <decl pos:start="9:28" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:34">icbptab</name></decl>, <decl pos:start="9:37" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:46">twomvbptab</name></decl>, <decl pos:start="9:49" pos:end="9:59"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:49" pos:end="9:59">fourmvbptab</name></decl>;</decl_stmt> <comment type="block" pos:start="9:62" pos:end="9:92">/* useful only for debugging */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">scale</name></decl>, <decl pos:start="11:16" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:20">shift</name></decl>, <decl pos:start="11:23" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:23">i</name></decl>;</decl_stmt> <comment type="block" pos:start="11:26" pos:end="11:78">/* for initializing LUT for intensity compensation */</comment>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:13">numref</name></name><operator pos:start="15:14" pos:end="15:14">=</operator><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">p_frame_skipped</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="37:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">v</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">second_field</name></name></expr>)</condition> <block pos:start="19:26" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:35">

        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if<condition pos:start="21:11" pos:end="21:41">(<expr pos:start="21:12" pos:end="21:40"><name pos:start="21:12" pos:end="21:17"><name pos:start="21:12" pos:end="21:12">v</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">fcm</name></name><operator pos:start="21:18" pos:end="21:19">!=</operator><literal type="number" pos:start="21:20" pos:end="21:20">2</literal> <operator pos:start="21:22" pos:end="21:23">||</operator> <name pos:start="21:25" pos:end="21:37"><name pos:start="21:25" pos:end="21:25">v</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:37">field_mode</name></name><operator pos:start="21:38" pos:end="21:39">!=</operator><literal type="number" pos:start="21:40" pos:end="21:40">1</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:81"><expr pos:start="25:9" pos:end="25:80"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">v</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:22">pict_type</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <ternary pos:start="25:26" pos:end="25:80"><condition pos:start="25:26" pos:end="25:42"><expr pos:start="25:26" pos:end="25:40"><operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:27">v</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">fptype</name></name> <operator pos:start="25:37" pos:end="25:37">&amp;</operator> <literal type="number" pos:start="25:39" pos:end="25:39">1</literal><operator pos:start="25:40" pos:end="25:40">)</operator></expr> ?</condition><then pos:start="25:44" pos:end="25:60"> <expr pos:start="25:44" pos:end="25:60"><name pos:start="25:44" pos:end="25:60">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="25:62" pos:end="25:80">: <expr pos:start="25:64" pos:end="25:80"><name pos:start="25:64" pos:end="25:80">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:86"><if pos:start="27:9" pos:end="29:86">if <condition pos:start="27:12" pos:end="27:26">(<expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:13">v</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">fptype</name></name> <operator pos:start="27:23" pos:end="27:23">&amp;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">4</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:86"><block_content pos:start="29:13" pos:end="29:86">

            <expr_stmt pos:start="29:13" pos:end="29:86"><expr pos:start="29:13" pos:end="29:85"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">v</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:26">pict_type</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <ternary pos:start="29:30" pos:end="29:85"><condition pos:start="29:30" pos:end="29:46"><expr pos:start="29:30" pos:end="29:44"><operator pos:start="29:30" pos:end="29:30">(</operator><name pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:31">v</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:39">fptype</name></name> <operator pos:start="29:41" pos:end="29:41">&amp;</operator> <literal type="number" pos:start="29:43" pos:end="29:43">1</literal><operator pos:start="29:44" pos:end="29:44">)</operator></expr> ?</condition><then pos:start="29:48" pos:end="29:65"> <expr pos:start="29:48" pos:end="29:65"><name pos:start="29:48" pos:end="29:65">AV_PICTURE_TYPE_BI</name></expr> </then><else pos:start="29:67" pos:end="29:85">: <expr pos:start="29:69" pos:end="29:85"><name pos:start="29:69" pos:end="29:85">AV_PICTURE_TYPE_B</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:63"><expr pos:start="31:9" pos:end="31:62"><name pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:9">v</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:32">current_picture_ptr</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:35">f</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:45">pict_type</name></name> <operator pos:start="31:47" pos:end="31:47">=</operator> <name pos:start="31:49" pos:end="31:62"><name pos:start="31:49" pos:end="31:49">v</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:53">.</operator><name pos:start="31:54" pos:end="31:62">pict_type</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:35"><if pos:start="33:9" pos:end="35:35">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:14">v</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:31">pic_header_flag</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">

            <goto pos:start="35:13" pos:end="35:35">goto <name pos:start="35:18" pos:end="35:34">parse_common_info</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:5">v</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:17">field_mode</name></name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="61:5">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:9">v</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">interlace</name></name></expr>)</condition> <block pos:start="43:23" pos:end="61:5">{<block_content pos:start="45:9" pos:end="59:9">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:9">v</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:14">fcm</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:26">decode012</name><argument_list pos:start="45:27" pos:end="45:30">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="59:9"><if pos:start="47:9" pos:end="59:9">if <condition pos:start="47:12" pos:end="47:19">(<expr pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:13">v</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">fcm</name></name></expr>)</condition> <block pos:start="47:21" pos:end="59:9">{<block_content pos:start="49:13" pos:end="57:75">

            <if_stmt pos:start="49:13" pos:end="51:34"><if pos:start="49:13" pos:end="51:34">if <condition pos:start="49:16" pos:end="49:38">(<expr pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:17">v</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:22">fcm</name></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <name pos:start="49:27" pos:end="49:37">ILACE_FIELD</name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:34"><block_content pos:start="51:17" pos:end="51:34">

                <expr_stmt pos:start="51:17" pos:end="51:34"><expr pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:17">v</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:29">field_mode</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <literal type="number" pos:start="51:33" pos:end="51:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="57:75"><if pos:start="53:13" pos:end="57:75">if <condition pos:start="53:16" pos:end="53:38">(<expr pos:start="53:17" pos:end="53:37"><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:35"><name pos:start="53:18" pos:end="53:18">v</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:35">warn_interlaced</name></name><operator pos:start="53:36" pos:end="53:37">++</operator></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="57:75"><block_content pos:start="55:17" pos:end="57:75">

                <expr_stmt pos:start="55:17" pos:end="57:75"><expr pos:start="55:17" pos:end="57:74"><call pos:start="55:17" pos:end="57:74"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="57:74">(<argument pos:start="55:24" pos:end="55:33"><expr pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:24">v</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:28">.</operator><name pos:start="55:29" pos:end="55:33">avctx</name></name></expr></argument>, <argument pos:start="55:36" pos:end="55:47"><expr pos:start="55:36" pos:end="55:47"><name pos:start="55:36" pos:end="55:47">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="57:24" pos:end="57:73"><expr pos:start="57:24" pos:end="57:73"><literal type="string" pos:start="57:24" pos:end="57:73">"Interlaced frames/fields support is incomplete\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="65:5">else <block pos:start="61:12" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:29">

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">v</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">fcm</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:28">PROGRESSIVE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="117:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:22">(<expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">v</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">field_mode</name></name></expr>)</condition> <block pos:start="69:24" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:86">

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:9">v</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:17">fptype</name></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:28">get_bits</name><argument_list pos:start="71:29" pos:end="71:35">(<argument pos:start="71:30" pos:end="71:31"><expr pos:start="71:30" pos:end="71:31"><name pos:start="71:30" pos:end="71:31">gb</name></expr></argument>, <argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><literal type="number" pos:start="71:34" pos:end="71:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:81"><expr pos:start="73:9" pos:end="73:80"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:9">v</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:22">pict_type</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <ternary pos:start="73:26" pos:end="73:80"><condition pos:start="73:26" pos:end="73:42"><expr pos:start="73:26" pos:end="73:40"><operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:35"><name pos:start="73:27" pos:end="73:27">v</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:35">fptype</name></name> <operator pos:start="73:37" pos:end="73:37">&amp;</operator> <literal type="number" pos:start="73:39" pos:end="73:39">2</literal><operator pos:start="73:40" pos:end="73:40">)</operator></expr> ?</condition><then pos:start="73:44" pos:end="73:60"> <expr pos:start="73:44" pos:end="73:60"><name pos:start="73:44" pos:end="73:60">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="73:62" pos:end="73:80">: <expr pos:start="73:64" pos:end="73:80"><name pos:start="73:64" pos:end="73:80">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:86"><if pos:start="75:9" pos:end="77:86">if <condition pos:start="75:12" pos:end="75:26">(<expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:13">v</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:21">fptype</name></name> <operator pos:start="75:23" pos:end="75:23">&amp;</operator> <literal type="number" pos:start="75:25" pos:end="75:25">4</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:86"><block_content pos:start="77:13" pos:end="77:86"> <comment type="line" pos:start="75:28" pos:end="75:39">// B-picture</comment>

            <expr_stmt pos:start="77:13" pos:end="77:86"><expr pos:start="77:13" pos:end="77:85"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">v</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:17">.</operator><name pos:start="77:18" pos:end="77:26">pict_type</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <ternary pos:start="77:30" pos:end="77:85"><condition pos:start="77:30" pos:end="77:46"><expr pos:start="77:30" pos:end="77:44"><operator pos:start="77:30" pos:end="77:30">(</operator><name pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:31">v</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:39">fptype</name></name> <operator pos:start="77:41" pos:end="77:41">&amp;</operator> <literal type="number" pos:start="77:43" pos:end="77:43">2</literal><operator pos:start="77:44" pos:end="77:44">)</operator></expr> ?</condition><then pos:start="77:48" pos:end="77:65"> <expr pos:start="77:48" pos:end="77:65"><name pos:start="77:48" pos:end="77:65">AV_PICTURE_TYPE_BI</name></expr> </then><else pos:start="77:67" pos:end="77:85">: <expr pos:start="77:69" pos:end="77:85"><name pos:start="77:69" pos:end="77:85">AV_PICTURE_TYPE_B</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="117:5">else <block pos:start="79:12" pos:end="117:5">{<block_content pos:start="81:9" pos:end="115:9">

        <switch pos:start="81:9" pos:end="115:9">switch <condition pos:start="81:16" pos:end="81:36">(<expr pos:start="81:17" pos:end="81:35"><call pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:25">get_unary</name><argument_list pos:start="81:26" pos:end="81:35">(<argument pos:start="81:27" pos:end="81:28"><expr pos:start="81:27" pos:end="81:28"><name pos:start="81:27" pos:end="81:28">gb</name></expr></argument>, <argument pos:start="81:31" pos:end="81:31"><expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr></argument>, <argument pos:start="81:34" pos:end="81:34"><expr pos:start="81:34" pos:end="81:34"><literal type="number" pos:start="81:34" pos:end="81:34">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:38" pos:end="115:9">{<block_content pos:start="83:9" pos:end="113:18">

        <case pos:start="83:9" pos:end="83:15">case <expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:47"><expr pos:start="85:13" pos:end="85:46"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:13">v</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:16">s</name><operator pos:start="85:17" pos:end="85:17">.</operator><name pos:start="85:18" pos:end="85:26">pict_type</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:15">case <expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">1</literal></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:47"><expr pos:start="91:13" pos:end="91:46"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:13">v</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:17">.</operator><name pos:start="91:18" pos:end="91:26">pict_type</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:46">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">2</literal></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:47"><expr pos:start="97:13" pos:end="97:46"><name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:13">v</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:16">s</name><operator pos:start="97:17" pos:end="97:17">.</operator><name pos:start="97:18" pos:end="97:26">pict_type</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:15">case <expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">3</literal></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:48"><expr pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:13">v</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:16">s</name><operator pos:start="103:17" pos:end="103:17">.</operator><name pos:start="103:18" pos:end="103:26">pict_type</name></name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:47">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:15">case <expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">4</literal></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:47"><expr pos:start="109:13" pos:end="109:46"><name pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:13">v</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:16">s</name><operator pos:start="109:17" pos:end="109:17">.</operator><name pos:start="109:18" pos:end="109:26">pict_type</name></name> <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt> <comment type="line" pos:start="109:49" pos:end="109:62">// skipped pic</comment>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:13">v</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">p_frame_skipped</name></name> <operator pos:start="111:32" pos:end="111:32">=</operator> <literal type="number" pos:start="111:34" pos:end="111:34">1</literal></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="119:5" pos:end="121:25"><if pos:start="119:5" pos:end="121:25">if <condition pos:start="119:8" pos:end="119:22">(<expr pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:9">v</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:21">tfcntrflag</name></name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:25"><block_content pos:start="121:9" pos:end="121:25">

        <expr_stmt pos:start="121:9" pos:end="121:25"><expr pos:start="121:9" pos:end="121:24"><call pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:17">skip_bits</name><argument_list pos:start="121:18" pos:end="121:24">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">gb</name></expr></argument>, <argument pos:start="121:23" pos:end="121:23"><expr pos:start="121:23" pos:end="121:23"><literal type="number" pos:start="121:23" pos:end="121:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="137:5"><if pos:start="123:5" pos:end="137:5">if <condition pos:start="123:8" pos:end="123:21">(<expr pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:9">v</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:20">broadcast</name></name></expr>)</condition> <block pos:start="123:23" pos:end="137:5">{<block_content pos:start="125:9" pos:end="135:9">

        <if_stmt pos:start="125:9" pos:end="135:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:36">(<expr pos:start="125:13" pos:end="125:35"><operator pos:start="125:13" pos:end="125:13">!</operator><name pos:start="125:14" pos:end="125:25"><name pos:start="125:14" pos:end="125:14">v</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:25">interlace</name></name> <operator pos:start="125:27" pos:end="125:28">||</operator> <name pos:start="125:30" pos:end="125:35"><name pos:start="125:30" pos:end="125:30">v</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:35">psf</name></name></expr>)</condition> <block pos:start="125:38" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:40">

            <expr_stmt pos:start="127:13" pos:end="127:40"><expr pos:start="127:13" pos:end="127:39"><name pos:start="127:13" pos:end="127:21"><name pos:start="127:13" pos:end="127:13">v</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:21">rptfrm</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <call pos:start="127:25" pos:end="127:39"><name pos:start="127:25" pos:end="127:32">get_bits</name><argument_list pos:start="127:33" pos:end="127:39">(<argument pos:start="127:34" pos:end="127:35"><expr pos:start="127:34" pos:end="127:35"><name pos:start="127:34" pos:end="127:35">gb</name></expr></argument>, <argument pos:start="127:38" pos:end="127:38"><expr pos:start="127:38" pos:end="127:38"><literal type="number" pos:start="127:38" pos:end="127:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="129:11" pos:end="135:9">else <block pos:start="129:16" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:35">

            <expr_stmt pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:13">v</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:18">tff</name></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <call pos:start="131:22" pos:end="131:34"><name pos:start="131:22" pos:end="131:30">get_bits1</name><argument_list pos:start="131:31" pos:end="131:34">(<argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><name pos:start="131:32" pos:end="131:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:35"><expr pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:18"><name pos:start="133:13" pos:end="133:13">v</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:18">rff</name></name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="133:34"><name pos:start="133:22" pos:end="133:30">get_bits1</name><argument_list pos:start="133:31" pos:end="133:34">(<argument pos:start="133:32" pos:end="133:33"><expr pos:start="133:32" pos:end="133:33"><name pos:start="133:32" pos:end="133:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:23">(<expr pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:9">v</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:22">panscanflag</name></name></expr>)</condition> <block pos:start="139:25" pos:end="145:5">{<block_content pos:start="141:9" pos:end="141:58">

        <expr_stmt pos:start="141:9" pos:end="141:58"><expr pos:start="141:9" pos:end="141:57"><call pos:start="141:9" pos:end="141:57"><name pos:start="141:9" pos:end="141:30">av_log_missing_feature</name><argument_list pos:start="141:31" pos:end="141:57">(<argument pos:start="141:32" pos:end="141:41"><expr pos:start="141:32" pos:end="141:41"><name pos:start="141:32" pos:end="141:41"><name pos:start="141:32" pos:end="141:32">v</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:35">s</name><operator pos:start="141:36" pos:end="141:36">.</operator><name pos:start="141:37" pos:end="141:41">avctx</name></name></expr></argument>, <argument pos:start="141:44" pos:end="141:53"><expr pos:start="141:44" pos:end="141:53"><literal type="string" pos:start="141:44" pos:end="141:53">"Pan-scan"</literal></expr></argument>, <argument pos:start="141:56" pos:end="141:56"><expr pos:start="141:56" pos:end="141:56"><literal type="number" pos:start="141:56" pos:end="141:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="143:9" pos:end="143:13">//...</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:27">(<expr pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:9">v</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:26">p_frame_skipped</name></name></expr>)</condition> <block pos:start="147:29" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:17">

        <return pos:start="149:9" pos:end="149:17">return <expr pos:start="149:16" pos:end="149:16"><literal type="number" pos:start="149:16" pos:end="149:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:27"><expr pos:start="153:5" pos:end="153:26"><name pos:start="153:5" pos:end="153:10"><name pos:start="153:5" pos:end="153:5">v</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:10">rnd</name></name> <operator pos:start="153:12" pos:end="153:12">=</operator> <call pos:start="153:14" pos:end="153:26"><name pos:start="153:14" pos:end="153:22">get_bits1</name><argument_list pos:start="153:23" pos:end="153:26">(<argument pos:start="153:24" pos:end="153:25"><expr pos:start="153:24" pos:end="153:25"><name pos:start="153:24" pos:end="153:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="157:34"><if pos:start="155:5" pos:end="157:34">if <condition pos:start="155:8" pos:end="155:21">(<expr pos:start="155:9" pos:end="155:20"><name pos:start="155:9" pos:end="155:20"><name pos:start="155:9" pos:end="155:9">v</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:20">interlace</name></name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:34"><block_content pos:start="157:9" pos:end="157:34">

        <expr_stmt pos:start="157:9" pos:end="157:34"><expr pos:start="157:9" pos:end="157:33"><name pos:start="157:9" pos:end="157:17"><name pos:start="157:9" pos:end="157:9">v</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:17">uvsamp</name></name> <operator pos:start="157:19" pos:end="157:19">=</operator> <call pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:29">get_bits1</name><argument_list pos:start="157:30" pos:end="157:33">(<argument pos:start="157:31" pos:end="157:32"><expr pos:start="157:31" pos:end="157:32"><name pos:start="157:31" pos:end="157:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="161:17"><if pos:start="159:5" pos:end="161:17">if<condition pos:start="159:7" pos:end="159:35">(<expr pos:start="159:8" pos:end="159:34"><operator pos:start="159:8" pos:end="159:8">!</operator><name pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:28">ff_vc1_bfraction_vlc</name><operator pos:start="159:29" pos:end="159:29">.</operator><name pos:start="159:30" pos:end="159:34">table</name></name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:17"><block_content pos:start="161:9" pos:end="161:17">

        <return pos:start="161:9" pos:end="161:17">return <expr pos:start="161:16" pos:end="161:16"><literal type="number" pos:start="161:16" pos:end="161:16">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="161:19" pos:end="161:65">//parsing only, vlc tables havnt been allocated</comment>

    <if_stmt pos:start="163:5" pos:end="197:5"><if pos:start="163:5" pos:end="197:5">if <condition pos:start="163:8" pos:end="163:22">(<expr pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:9">v</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:21">field_mode</name></name></expr>)</condition> <block pos:start="163:24" pos:end="197:5">{<block_content pos:start="165:9" pos:end="195:31">

        <if_stmt pos:start="165:9" pos:end="177:9"><if pos:start="165:9" pos:end="167:27">if <condition pos:start="165:12" pos:end="165:29">(<expr pos:start="165:13" pos:end="165:28"><operator pos:start="165:13" pos:end="165:13">!</operator><name pos:start="165:14" pos:end="165:28"><name pos:start="165:14" pos:end="165:14">v</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:28">refdist_flag</name></name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:27"><block_content pos:start="167:13" pos:end="167:27">

            <expr_stmt pos:start="167:13" pos:end="167:27"><expr pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:22"><name pos:start="167:13" pos:end="167:13">v</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:22">refdist</name></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:26">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="169:9" pos:end="177:9">else if <condition pos:start="169:17" pos:end="169:97">(<expr pos:start="169:18" pos:end="169:96"><operator pos:start="169:18" pos:end="169:18">(</operator><name pos:start="169:19" pos:end="169:32"><name pos:start="169:19" pos:end="169:19">v</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:22">s</name><operator pos:start="169:23" pos:end="169:23">.</operator><name pos:start="169:24" pos:end="169:32">pict_type</name></name> <operator pos:start="169:34" pos:end="169:35">!=</operator> <name pos:start="169:37" pos:end="169:53">AV_PICTURE_TYPE_B</name><operator pos:start="169:54" pos:end="169:54">)</operator> <operator pos:start="169:56" pos:end="169:57">&amp;&amp;</operator> <operator pos:start="169:59" pos:end="169:59">(</operator><name pos:start="169:60" pos:end="169:73"><name pos:start="169:60" pos:end="169:60">v</name><operator pos:start="169:61" pos:end="169:62">-&gt;</operator><name pos:start="169:63" pos:end="169:63">s</name><operator pos:start="169:64" pos:end="169:64">.</operator><name pos:start="169:65" pos:end="169:73">pict_type</name></name> <operator pos:start="169:75" pos:end="169:76">!=</operator> <name pos:start="169:78" pos:end="169:95">AV_PICTURE_TYPE_BI</name><operator pos:start="169:96" pos:end="169:96">)</operator></expr>)</condition> <block pos:start="169:99" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:51">

            <expr_stmt pos:start="171:13" pos:end="171:41"><expr pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:22"><name pos:start="171:13" pos:end="171:13">v</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:22">refdist</name></name> <operator pos:start="171:24" pos:end="171:24">=</operator> <call pos:start="171:26" pos:end="171:40"><name pos:start="171:26" pos:end="171:33">get_bits</name><argument_list pos:start="171:34" pos:end="171:40">(<argument pos:start="171:35" pos:end="171:36"><expr pos:start="171:35" pos:end="171:36"><name pos:start="171:35" pos:end="171:36">gb</name></expr></argument>, <argument pos:start="171:39" pos:end="171:39"><expr pos:start="171:39" pos:end="171:39"><literal type="number" pos:start="171:39" pos:end="171:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="173:13" pos:end="175:51"><if pos:start="173:13" pos:end="175:51">if <condition pos:start="173:16" pos:end="173:32">(<expr pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:17">v</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:26">refdist</name></name> <operator pos:start="173:28" pos:end="173:29">==</operator> <literal type="number" pos:start="173:31" pos:end="173:31">3</literal></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:51"><block_content pos:start="175:17" pos:end="175:51">

                <expr_stmt pos:start="175:17" pos:end="175:51"><expr pos:start="175:17" pos:end="175:50"><name pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:17">v</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:26">refdist</name></name> <operator pos:start="175:28" pos:end="175:29">+=</operator> <call pos:start="175:31" pos:end="175:50"><name pos:start="175:31" pos:end="175:39">get_unary</name><argument_list pos:start="175:40" pos:end="175:50">(<argument pos:start="175:41" pos:end="175:42"><expr pos:start="175:41" pos:end="175:42"><name pos:start="175:41" pos:end="175:42">gb</name></expr></argument>, <argument pos:start="175:45" pos:end="175:45"><expr pos:start="175:45" pos:end="175:45"><literal type="number" pos:start="175:45" pos:end="175:45">0</literal></expr></argument>, <argument pos:start="175:48" pos:end="175:49"><expr pos:start="175:48" pos:end="175:49"><literal type="number" pos:start="175:48" pos:end="175:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="193:9"><if pos:start="179:9" pos:end="193:9">if <condition pos:start="179:12" pos:end="179:92">(<expr pos:start="179:13" pos:end="179:91"><operator pos:start="179:13" pos:end="179:13">(</operator><name pos:start="179:14" pos:end="179:27"><name pos:start="179:14" pos:end="179:14">v</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:17">s</name><operator pos:start="179:18" pos:end="179:18">.</operator><name pos:start="179:19" pos:end="179:27">pict_type</name></name> <operator pos:start="179:29" pos:end="179:30">==</operator> <name pos:start="179:32" pos:end="179:48">AV_PICTURE_TYPE_B</name><operator pos:start="179:49" pos:end="179:49">)</operator> <operator pos:start="179:51" pos:end="179:52">||</operator> <operator pos:start="179:54" pos:end="179:54">(</operator><name pos:start="179:55" pos:end="179:68"><name pos:start="179:55" pos:end="179:55">v</name><operator pos:start="179:56" pos:end="179:57">-&gt;</operator><name pos:start="179:58" pos:end="179:58">s</name><operator pos:start="179:59" pos:end="179:59">.</operator><name pos:start="179:60" pos:end="179:68">pict_type</name></name> <operator pos:start="179:70" pos:end="179:71">==</operator> <name pos:start="179:73" pos:end="179:90">AV_PICTURE_TYPE_BI</name><operator pos:start="179:91" pos:end="179:91">)</operator></expr>)</condition> <block pos:start="179:94" pos:end="193:9">{<block_content pos:start="181:13" pos:end="191:28">

            <expr_stmt pos:start="181:13" pos:end="181:105"><expr pos:start="181:13" pos:end="181:104"><name pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:13">v</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:34">bfraction_lut_index</name></name> <operator pos:start="181:36" pos:end="181:36">=</operator> <call pos:start="181:38" pos:end="181:104"><name pos:start="181:38" pos:end="181:45">get_vlc2</name><argument_list pos:start="181:46" pos:end="181:104">(<argument pos:start="181:47" pos:end="181:48"><expr pos:start="181:47" pos:end="181:48"><name pos:start="181:47" pos:end="181:48">gb</name></expr></argument>, <argument pos:start="181:51" pos:end="181:76"><expr pos:start="181:51" pos:end="181:76"><name pos:start="181:51" pos:end="181:76"><name pos:start="181:51" pos:end="181:70">ff_vc1_bfraction_vlc</name><operator pos:start="181:71" pos:end="181:71">.</operator><name pos:start="181:72" pos:end="181:76">table</name></name></expr></argument>, <argument pos:start="181:79" pos:end="181:100"><expr pos:start="181:79" pos:end="181:100"><name pos:start="181:79" pos:end="181:100">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="181:103" pos:end="181:103"><expr pos:start="181:103" pos:end="181:103"><literal type="number" pos:start="181:103" pos:end="181:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:82"><expr pos:start="183:13" pos:end="183:81"><name pos:start="183:13" pos:end="183:24"><name pos:start="183:13" pos:end="183:13">v</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:24">bfraction</name></name>           <operator pos:start="183:36" pos:end="183:36">=</operator> <name pos:start="183:38" pos:end="183:81"><name pos:start="183:38" pos:end="183:57">ff_vc1_bfraction_lut</name><index pos:start="183:58" pos:end="183:81">[<expr pos:start="183:59" pos:end="183:80"><name pos:start="183:59" pos:end="183:80"><name pos:start="183:59" pos:end="183:59">v</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:80">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:55"><expr pos:start="185:13" pos:end="185:54"><name pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:13">v</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:19">frfd</name></name> <operator pos:start="185:21" pos:end="185:21">=</operator> <operator pos:start="185:23" pos:end="185:23">(</operator><name pos:start="185:24" pos:end="185:35"><name pos:start="185:24" pos:end="185:24">v</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:35">bfraction</name></name> <operator pos:start="185:37" pos:end="185:37">*</operator> <name pos:start="185:39" pos:end="185:48"><name pos:start="185:39" pos:end="185:39">v</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:48">refdist</name></name><operator pos:start="185:49" pos:end="185:49">)</operator> <operator pos:start="185:51" pos:end="185:52">&gt;&gt;</operator> <literal type="number" pos:start="185:54" pos:end="185:54">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:47"><expr pos:start="187:13" pos:end="187:46"><name pos:start="187:13" pos:end="187:19"><name pos:start="187:13" pos:end="187:13">v</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:19">brfd</name></name> <operator pos:start="187:21" pos:end="187:21">=</operator> <name pos:start="187:23" pos:end="187:32"><name pos:start="187:23" pos:end="187:23">v</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:32">refdist</name></name> <operator pos:start="187:34" pos:end="187:34">-</operator> <name pos:start="187:36" pos:end="187:42"><name pos:start="187:36" pos:end="187:36">v</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:42">frfd</name></name> <operator pos:start="187:44" pos:end="187:44">-</operator> <literal type="number" pos:start="187:46" pos:end="187:46">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="189:13" pos:end="191:28"><if pos:start="189:13" pos:end="191:28">if <condition pos:start="189:16" pos:end="189:28">(<expr pos:start="189:17" pos:end="189:27"><name pos:start="189:17" pos:end="189:23"><name pos:start="189:17" pos:end="189:17">v</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:23">brfd</name></name> <operator pos:start="189:25" pos:end="189:25">&lt;</operator> <literal type="number" pos:start="189:27" pos:end="189:27">0</literal></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:28"><block_content pos:start="191:17" pos:end="191:28">

                <expr_stmt pos:start="191:17" pos:end="191:28"><expr pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:23"><name pos:start="191:17" pos:end="191:17">v</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:23">brfd</name></name> <operator pos:start="191:25" pos:end="191:25">=</operator> <literal type="number" pos:start="191:27" pos:end="191:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="195:9" pos:end="195:31">goto <name pos:start="195:14" pos:end="195:30">parse_common_info</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="199:5" pos:end="219:5"><if pos:start="199:5" pos:end="219:5">if <condition pos:start="199:8" pos:end="199:30">(<expr pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:14"><name pos:start="199:9" pos:end="199:9">v</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:14">fcm</name></name> <operator pos:start="199:16" pos:end="199:17">==</operator> <name pos:start="199:19" pos:end="199:29">PROGRESSIVE</name></expr>)</condition> <block pos:start="199:32" pos:end="219:5">{<block_content pos:start="201:9" pos:end="217:9">

        <if_stmt pos:start="201:9" pos:end="203:41"><if pos:start="201:9" pos:end="203:41">if <condition pos:start="201:12" pos:end="201:27">(<expr pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:13">v</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:26">finterpflag</name></name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:41"><block_content pos:start="203:13" pos:end="203:41">

            <expr_stmt pos:start="203:13" pos:end="203:41"><expr pos:start="203:13" pos:end="203:40"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:13">v</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:24">interpfrm</name></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <call pos:start="203:28" pos:end="203:40"><name pos:start="203:28" pos:end="203:36">get_bits1</name><argument_list pos:start="203:37" pos:end="203:40">(<argument pos:start="203:38" pos:end="203:39"><expr pos:start="203:38" pos:end="203:39"><name pos:start="203:38" pos:end="203:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="205:9" pos:end="217:9"><if pos:start="205:9" pos:end="217:9">if <condition pos:start="205:12" pos:end="205:48">(<expr pos:start="205:13" pos:end="205:47"><name pos:start="205:13" pos:end="205:26"><name pos:start="205:13" pos:end="205:13">v</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:16">s</name><operator pos:start="205:17" pos:end="205:17">.</operator><name pos:start="205:18" pos:end="205:26">pict_type</name></name> <operator pos:start="205:28" pos:end="205:29">==</operator> <name pos:start="205:31" pos:end="205:47">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="205:50" pos:end="217:9">{<block_content pos:start="207:13" pos:end="215:13">

            <expr_stmt pos:start="207:13" pos:end="207:105"><expr pos:start="207:13" pos:end="207:104"><name pos:start="207:13" pos:end="207:34"><name pos:start="207:13" pos:end="207:13">v</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:34">bfraction_lut_index</name></name> <operator pos:start="207:36" pos:end="207:36">=</operator> <call pos:start="207:38" pos:end="207:104"><name pos:start="207:38" pos:end="207:45">get_vlc2</name><argument_list pos:start="207:46" pos:end="207:104">(<argument pos:start="207:47" pos:end="207:48"><expr pos:start="207:47" pos:end="207:48"><name pos:start="207:47" pos:end="207:48">gb</name></expr></argument>, <argument pos:start="207:51" pos:end="207:76"><expr pos:start="207:51" pos:end="207:76"><name pos:start="207:51" pos:end="207:76"><name pos:start="207:51" pos:end="207:70">ff_vc1_bfraction_vlc</name><operator pos:start="207:71" pos:end="207:71">.</operator><name pos:start="207:72" pos:end="207:76">table</name></name></expr></argument>, <argument pos:start="207:79" pos:end="207:100"><expr pos:start="207:79" pos:end="207:100"><name pos:start="207:79" pos:end="207:100">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="207:103" pos:end="207:103"><expr pos:start="207:103" pos:end="207:103"><literal type="number" pos:start="207:103" pos:end="207:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:82"><expr pos:start="209:13" pos:end="209:81"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:13">v</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:24">bfraction</name></name>           <operator pos:start="209:36" pos:end="209:36">=</operator> <name pos:start="209:38" pos:end="209:81"><name pos:start="209:38" pos:end="209:57">ff_vc1_bfraction_lut</name><index pos:start="209:58" pos:end="209:81">[<expr pos:start="209:59" pos:end="209:80"><name pos:start="209:59" pos:end="209:80"><name pos:start="209:59" pos:end="209:59">v</name><operator pos:start="209:60" pos:end="209:61">-&gt;</operator><name pos:start="209:62" pos:end="209:80">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="215:13"><if pos:start="211:13" pos:end="215:13">if <condition pos:start="211:16" pos:end="211:34">(<expr pos:start="211:17" pos:end="211:33"><name pos:start="211:17" pos:end="211:28"><name pos:start="211:17" pos:end="211:17">v</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:28">bfraction</name></name> <operator pos:start="211:30" pos:end="211:31">==</operator> <literal type="number" pos:start="211:33" pos:end="211:33">0</literal></expr>)</condition> <block pos:start="211:36" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:52">

                <expr_stmt pos:start="213:17" pos:end="213:52"><expr pos:start="213:17" pos:end="213:51"><name pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:17">v</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:20">s</name><operator pos:start="213:21" pos:end="213:21">.</operator><name pos:start="213:22" pos:end="213:30">pict_type</name></name> <operator pos:start="213:32" pos:end="213:32">=</operator> <name pos:start="213:34" pos:end="213:51">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt> <comment type="block" pos:start="213:54" pos:end="213:86">/* XXX: should not happen here */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <label pos:start="223:5" pos:end="223:22"><name pos:start="223:5" pos:end="223:21">parse_common_info</name>:</label>

    <if_stmt pos:start="225:5" pos:end="227:56"><if pos:start="225:5" pos:end="227:56">if <condition pos:start="225:8" pos:end="225:22">(<expr pos:start="225:9" pos:end="225:21"><name pos:start="225:9" pos:end="225:21"><name pos:start="225:9" pos:end="225:9">v</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:21">field_mode</name></name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:56"><block_content pos:start="227:9" pos:end="227:56">

        <expr_stmt pos:start="227:9" pos:end="227:56"><expr pos:start="227:9" pos:end="227:55"><name pos:start="227:9" pos:end="227:25"><name pos:start="227:9" pos:end="227:9">v</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:25">cur_field_type</name></name> <operator pos:start="227:27" pos:end="227:27">=</operator> <operator pos:start="227:29" pos:end="227:29">!</operator><operator pos:start="227:30" pos:end="227:30">(</operator><name pos:start="227:31" pos:end="227:36"><name pos:start="227:31" pos:end="227:31">v</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:36">tff</name></name> <operator pos:start="227:38" pos:end="227:38">^</operator> <name pos:start="227:40" pos:end="227:54"><name pos:start="227:40" pos:end="227:40">v</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:54">second_field</name></name><operator pos:start="227:55" pos:end="227:55">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:30"><expr pos:start="229:5" pos:end="229:29"><name pos:start="229:5" pos:end="229:11">pqindex</name> <operator pos:start="229:13" pos:end="229:13">=</operator> <call pos:start="229:15" pos:end="229:29"><name pos:start="229:15" pos:end="229:22">get_bits</name><argument_list pos:start="229:23" pos:end="229:29">(<argument pos:start="229:24" pos:end="229:25"><expr pos:start="229:24" pos:end="229:25"><name pos:start="229:24" pos:end="229:25">gb</name></expr></argument>, <argument pos:start="229:28" pos:end="229:28"><expr pos:start="229:28" pos:end="229:28"><literal type="number" pos:start="229:28" pos:end="229:28">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="233:18"><if pos:start="231:5" pos:end="233:18">if <condition pos:start="231:8" pos:end="231:17">(<expr pos:start="231:9" pos:end="231:16"><operator pos:start="231:9" pos:end="231:9">!</operator><name pos:start="231:10" pos:end="231:16">pqindex</name></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:18"><block_content pos:start="233:9" pos:end="233:18">

        <return pos:start="233:9" pos:end="233:18">return <expr pos:start="233:16" pos:end="233:17"><operator pos:start="233:16" pos:end="233:16">-</operator><literal type="number" pos:start="233:17" pos:end="233:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:25"><expr pos:start="235:5" pos:end="235:24"><name pos:start="235:5" pos:end="235:14"><name pos:start="235:5" pos:end="235:5">v</name><operator pos:start="235:6" pos:end="235:7">-&gt;</operator><name pos:start="235:8" pos:end="235:14">pqindex</name></name> <operator pos:start="235:16" pos:end="235:16">=</operator> <name pos:start="235:18" pos:end="235:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="243:48"><if pos:start="237:5" pos:end="239:48">if <condition pos:start="237:8" pos:end="237:50">(<expr pos:start="237:9" pos:end="237:49"><name pos:start="237:9" pos:end="237:25"><name pos:start="237:9" pos:end="237:9">v</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:25">quantizer_mode</name></name> <operator pos:start="237:27" pos:end="237:28">==</operator> <name pos:start="237:30" pos:end="237:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="239:9" pos:end="239:48"><block_content pos:start="239:9" pos:end="239:48">

        <expr_stmt pos:start="239:9" pos:end="239:48"><expr pos:start="239:9" pos:end="239:47"><name pos:start="239:9" pos:end="239:13"><name pos:start="239:9" pos:end="239:9">v</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:13">pq</name></name> <operator pos:start="239:15" pos:end="239:15">=</operator> <name pos:start="239:17" pos:end="239:47"><name pos:start="239:17" pos:end="239:35">ff_vc1_pquant_table</name><index pos:start="239:36" pos:end="239:38">[<expr pos:start="239:37" pos:end="239:37"><literal type="number" pos:start="239:37" pos:end="239:37">0</literal></expr>]</index><index pos:start="239:39" pos:end="239:47">[<expr pos:start="239:40" pos:end="239:46"><name pos:start="239:40" pos:end="239:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="241:5" pos:end="243:48">else<block type="pseudo" pos:start="243:9" pos:end="243:48"><block_content pos:start="243:9" pos:end="243:48">

        <expr_stmt pos:start="243:9" pos:end="243:48"><expr pos:start="243:9" pos:end="243:47"><name pos:start="243:9" pos:end="243:13"><name pos:start="243:9" pos:end="243:9">v</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:13">pq</name></name> <operator pos:start="243:15" pos:end="243:15">=</operator> <name pos:start="243:17" pos:end="243:47"><name pos:start="243:17" pos:end="243:35">ff_vc1_pquant_table</name><index pos:start="243:36" pos:end="243:38">[<expr pos:start="243:37" pos:end="243:37"><literal type="number" pos:start="243:37" pos:end="243:37">1</literal></expr>]</index><index pos:start="243:39" pos:end="243:47">[<expr pos:start="243:40" pos:end="243:46"><name pos:start="243:40" pos:end="243:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:22"><expr pos:start="247:5" pos:end="247:21"><name pos:start="247:5" pos:end="247:17"><name pos:start="247:5" pos:end="247:5">v</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:17">pquantizer</name></name> <operator pos:start="247:19" pos:end="247:19">=</operator> <literal type="number" pos:start="247:21" pos:end="247:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="249:5" pos:end="251:36"><if pos:start="249:5" pos:end="251:36">if <condition pos:start="249:8" pos:end="249:50">(<expr pos:start="249:9" pos:end="249:49"><name pos:start="249:9" pos:end="249:25"><name pos:start="249:9" pos:end="249:9">v</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:25">quantizer_mode</name></name> <operator pos:start="249:27" pos:end="249:28">==</operator> <name pos:start="249:30" pos:end="249:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:36"><block_content pos:start="251:9" pos:end="251:36">

        <expr_stmt pos:start="251:9" pos:end="251:36"><expr pos:start="251:9" pos:end="251:35"><name pos:start="251:9" pos:end="251:21"><name pos:start="251:9" pos:end="251:9">v</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:21">pquantizer</name></name> <operator pos:start="251:23" pos:end="251:23">=</operator> <name pos:start="251:25" pos:end="251:31">pqindex</name> <operator pos:start="251:33" pos:end="251:33">&lt;</operator> <literal type="number" pos:start="251:35" pos:end="251:35">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="253:5" pos:end="255:26"><if pos:start="253:5" pos:end="255:26">if <condition pos:start="253:8" pos:end="253:47">(<expr pos:start="253:9" pos:end="253:46"><name pos:start="253:9" pos:end="253:25"><name pos:start="253:9" pos:end="253:9">v</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:25">quantizer_mode</name></name> <operator pos:start="253:27" pos:end="253:28">==</operator> <name pos:start="253:30" pos:end="253:46">QUANT_NON_UNIFORM</name></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:26"><block_content pos:start="255:9" pos:end="255:26">

        <expr_stmt pos:start="255:9" pos:end="255:26"><expr pos:start="255:9" pos:end="255:25"><name pos:start="255:9" pos:end="255:21"><name pos:start="255:9" pos:end="255:9">v</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:21">pquantizer</name></name> <operator pos:start="255:23" pos:end="255:23">=</operator> <literal type="number" pos:start="255:25" pos:end="255:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:25"><expr pos:start="257:5" pos:end="257:24"><name pos:start="257:5" pos:end="257:14"><name pos:start="257:5" pos:end="257:5">v</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:14">pqindex</name></name> <operator pos:start="257:16" pos:end="257:16">=</operator> <name pos:start="257:18" pos:end="257:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="259:5" pos:end="265:22"><if pos:start="259:5" pos:end="261:34">if <condition pos:start="259:8" pos:end="259:20">(<expr pos:start="259:9" pos:end="259:19"><name pos:start="259:9" pos:end="259:15">pqindex</name> <operator pos:start="259:17" pos:end="259:17">&lt;</operator> <literal type="number" pos:start="259:19" pos:end="259:19">9</literal></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:34"><block_content pos:start="261:9" pos:end="261:34">

        <expr_stmt pos:start="261:9" pos:end="261:34"><expr pos:start="261:9" pos:end="261:33"><name pos:start="261:9" pos:end="261:17"><name pos:start="261:9" pos:end="261:9">v</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:17">halfpq</name></name> <operator pos:start="261:19" pos:end="261:19">=</operator> <call pos:start="261:21" pos:end="261:33"><name pos:start="261:21" pos:end="261:29">get_bits1</name><argument_list pos:start="261:30" pos:end="261:33">(<argument pos:start="261:31" pos:end="261:32"><expr pos:start="261:31" pos:end="261:32"><name pos:start="261:31" pos:end="261:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="263:5" pos:end="265:22">else<block type="pseudo" pos:start="265:9" pos:end="265:22"><block_content pos:start="265:9" pos:end="265:22">

        <expr_stmt pos:start="265:9" pos:end="265:22"><expr pos:start="265:9" pos:end="265:21"><name pos:start="265:9" pos:end="265:17"><name pos:start="265:9" pos:end="265:9">v</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:17">halfpq</name></name> <operator pos:start="265:19" pos:end="265:19">=</operator> <literal type="number" pos:start="265:21" pos:end="265:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="267:5" pos:end="269:38"><if pos:start="267:5" pos:end="269:38">if <condition pos:start="267:8" pos:end="267:50">(<expr pos:start="267:9" pos:end="267:49"><name pos:start="267:9" pos:end="267:25"><name pos:start="267:9" pos:end="267:9">v</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:25">quantizer_mode</name></name> <operator pos:start="267:27" pos:end="267:28">==</operator> <name pos:start="267:30" pos:end="267:49">QUANT_FRAME_EXPLICIT</name></expr>)</condition><block type="pseudo" pos:start="269:9" pos:end="269:38"><block_content pos:start="269:9" pos:end="269:38">

        <expr_stmt pos:start="269:9" pos:end="269:38"><expr pos:start="269:9" pos:end="269:37"><name pos:start="269:9" pos:end="269:21"><name pos:start="269:9" pos:end="269:9">v</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:21">pquantizer</name></name> <operator pos:start="269:23" pos:end="269:23">=</operator> <call pos:start="269:25" pos:end="269:37"><name pos:start="269:25" pos:end="269:33">get_bits1</name><argument_list pos:start="269:34" pos:end="269:37">(<argument pos:start="269:35" pos:end="269:36"><expr pos:start="269:35" pos:end="269:36"><name pos:start="269:35" pos:end="269:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="271:5" pos:end="273:38"><if pos:start="271:5" pos:end="273:38">if <condition pos:start="271:8" pos:end="271:24">(<expr pos:start="271:9" pos:end="271:23"><name pos:start="271:9" pos:end="271:23"><name pos:start="271:9" pos:end="271:9">v</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:23">postprocflag</name></name></expr>)</condition><block type="pseudo" pos:start="273:9" pos:end="273:38"><block_content pos:start="273:9" pos:end="273:38">

        <expr_stmt pos:start="273:9" pos:end="273:38"><expr pos:start="273:9" pos:end="273:37"><name pos:start="273:9" pos:end="273:19"><name pos:start="273:9" pos:end="273:9">v</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:19">postproc</name></name> <operator pos:start="273:21" pos:end="273:21">=</operator> <call pos:start="273:23" pos:end="273:37"><name pos:start="273:23" pos:end="273:30">get_bits</name><argument_list pos:start="273:31" pos:end="273:37">(<argument pos:start="273:32" pos:end="273:33"><expr pos:start="273:32" pos:end="273:33"><name pos:start="273:32" pos:end="273:33">gb</name></expr></argument>, <argument pos:start="273:36" pos:end="273:36"><expr pos:start="273:36" pos:end="273:36"><literal type="number" pos:start="273:36" pos:end="273:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="279:22"><if pos:start="277:5" pos:end="279:22">if <condition pos:start="277:8" pos:end="277:83">(<expr pos:start="277:9" pos:end="277:82"><name pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:9">v</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:12">s</name><operator pos:start="277:13" pos:end="277:13">.</operator><name pos:start="277:14" pos:end="277:22">pict_type</name></name> <operator pos:start="277:24" pos:end="277:25">==</operator> <name pos:start="277:27" pos:end="277:43">AV_PICTURE_TYPE_I</name> <operator pos:start="277:45" pos:end="277:46">||</operator> <name pos:start="277:48" pos:end="277:61"><name pos:start="277:48" pos:end="277:48">v</name><operator pos:start="277:49" pos:end="277:50">-&gt;</operator><name pos:start="277:51" pos:end="277:51">s</name><operator pos:start="277:52" pos:end="277:52">.</operator><name pos:start="277:53" pos:end="277:61">pict_type</name></name> <operator pos:start="277:63" pos:end="277:64">==</operator> <name pos:start="277:66" pos:end="277:82">AV_PICTURE_TYPE_P</name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:22"><block_content pos:start="279:9" pos:end="279:22">

        <expr_stmt pos:start="279:9" pos:end="279:22"><expr pos:start="279:9" pos:end="279:21"><name pos:start="279:9" pos:end="279:17"><name pos:start="279:9" pos:end="279:9">v</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:17">use_ic</name></name> <operator pos:start="279:19" pos:end="279:19">=</operator> <literal type="number" pos:start="279:21" pos:end="279:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="283:5" pos:end="285:17"><if pos:start="283:5" pos:end="285:17">if <condition pos:start="283:8" pos:end="283:22">(<expr pos:start="283:9" pos:end="283:21"><name pos:start="283:9" pos:end="283:21"><name pos:start="283:9" pos:end="283:9">v</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:21">parse_only</name></name></expr>)</condition><block type="pseudo" pos:start="285:9" pos:end="285:17"><block_content pos:start="285:9" pos:end="285:17">

        <return pos:start="285:9" pos:end="285:17">return <expr pos:start="285:16" pos:end="285:16"><literal type="number" pos:start="285:16" pos:end="285:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="289:5" pos:end="887:5">switch <condition pos:start="289:12" pos:end="289:27">(<expr pos:start="289:13" pos:end="289:26"><name pos:start="289:13" pos:end="289:26"><name pos:start="289:13" pos:end="289:13">v</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:16">s</name><operator pos:start="289:17" pos:end="289:17">.</operator><name pos:start="289:18" pos:end="289:26">pict_type</name></name></expr>)</condition> <block pos:start="289:29" pos:end="887:5">{<block_content pos:start="291:5" pos:end="885:14">

    <case pos:start="291:5" pos:end="291:27">case <expr pos:start="291:10" pos:end="291:26"><name pos:start="291:10" pos:end="291:26">AV_PICTURE_TYPE_I</name></expr>:</case>

    <case pos:start="293:5" pos:end="293:28">case <expr pos:start="293:10" pos:end="293:27"><name pos:start="293:10" pos:end="293:27">AV_PICTURE_TYPE_BI</name></expr>:</case>

        <if_stmt pos:start="295:9" pos:end="307:9"><if pos:start="295:9" pos:end="307:9">if <condition pos:start="295:12" pos:end="295:34">(<expr pos:start="295:13" pos:end="295:33"><name pos:start="295:13" pos:end="295:18"><name pos:start="295:13" pos:end="295:13">v</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:18">fcm</name></name> <operator pos:start="295:20" pos:end="295:21">==</operator> <name pos:start="295:23" pos:end="295:33">ILACE_FRAME</name></expr>)</condition> <block pos:start="295:36" pos:end="307:9">{<block_content pos:start="297:13" pos:end="305:67"> <comment type="line" pos:start="295:38" pos:end="295:62">//interlace frame picture</comment>

            <expr_stmt pos:start="297:13" pos:end="297:80"><expr pos:start="297:13" pos:end="297:79"><name pos:start="297:13" pos:end="297:18">status</name> <operator pos:start="297:20" pos:end="297:20">=</operator> <call pos:start="297:22" pos:end="297:79"><name pos:start="297:22" pos:end="297:38">bitplane_decoding</name><argument_list pos:start="297:39" pos:end="297:79">(<argument pos:start="297:40" pos:end="297:55"><expr pos:start="297:40" pos:end="297:55"><name pos:start="297:40" pos:end="297:55"><name pos:start="297:40" pos:end="297:40">v</name><operator pos:start="297:41" pos:end="297:42">-&gt;</operator><name pos:start="297:43" pos:end="297:55">fieldtx_plane</name></name></expr></argument>, <argument pos:start="297:58" pos:end="297:75"><expr pos:start="297:58" pos:end="297:75"><operator pos:start="297:58" pos:end="297:58">&amp;</operator><name pos:start="297:59" pos:end="297:75"><name pos:start="297:59" pos:end="297:59">v</name><operator pos:start="297:60" pos:end="297:61">-&gt;</operator><name pos:start="297:62" pos:end="297:75">fieldtx_is_raw</name></name></expr></argument>, <argument pos:start="297:78" pos:end="297:78"><expr pos:start="297:78" pos:end="297:78"><name pos:start="297:78" pos:end="297:78">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="299:13" pos:end="301:26"><if pos:start="299:13" pos:end="301:26">if <condition pos:start="299:16" pos:end="299:27">(<expr pos:start="299:17" pos:end="299:26"><name pos:start="299:17" pos:end="299:22">status</name> <operator pos:start="299:24" pos:end="299:24">&lt;</operator> <literal type="number" pos:start="299:26" pos:end="299:26">0</literal></expr>)</condition><block type="pseudo" pos:start="301:17" pos:end="301:26"><block_content pos:start="301:17" pos:end="301:26">

                <return pos:start="301:17" pos:end="301:26">return <expr pos:start="301:24" pos:end="301:25"><operator pos:start="301:24" pos:end="301:24">-</operator><literal type="number" pos:start="301:25" pos:end="301:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="303:13" pos:end="305:67"><expr pos:start="303:13" pos:end="305:66"><call pos:start="303:13" pos:end="305:66"><name pos:start="303:13" pos:end="303:18">av_log</name><argument_list pos:start="303:19" pos:end="305:66">(<argument pos:start="303:20" pos:end="303:29"><expr pos:start="303:20" pos:end="303:29"><name pos:start="303:20" pos:end="303:29"><name pos:start="303:20" pos:end="303:20">v</name><operator pos:start="303:21" pos:end="303:22">-&gt;</operator><name pos:start="303:23" pos:end="303:23">s</name><operator pos:start="303:24" pos:end="303:24">.</operator><name pos:start="303:25" pos:end="303:29">avctx</name></name></expr></argument>, <argument pos:start="303:32" pos:end="303:43"><expr pos:start="303:32" pos:end="303:43"><name pos:start="303:32" pos:end="303:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="303:46" pos:end="305:44"><expr pos:start="303:46" pos:end="305:44"><literal type="string" pos:start="303:46" pos:end="303:71">"FIELDTX plane encoding: "</literal>

                   <literal type="string" pos:start="305:20" pos:end="305:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="305:47" pos:end="305:55"><expr pos:start="305:47" pos:end="305:55"><name pos:start="305:47" pos:end="305:52">status</name><operator pos:start="305:53" pos:end="305:54">&gt;&gt;</operator><literal type="number" pos:start="305:55" pos:end="305:55">1</literal></expr></argument>, <argument pos:start="305:58" pos:end="305:65"><expr pos:start="305:58" pos:end="305:65"><name pos:start="305:58" pos:end="305:63">status</name><operator pos:start="305:64" pos:end="305:64">&amp;</operator><literal type="number" pos:start="305:65" pos:end="305:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:74"><expr pos:start="309:9" pos:end="309:73"><name pos:start="309:9" pos:end="309:14">status</name> <operator pos:start="309:16" pos:end="309:16">=</operator> <call pos:start="309:18" pos:end="309:73"><name pos:start="309:18" pos:end="309:34">bitplane_decoding</name><argument_list pos:start="309:35" pos:end="309:73">(<argument pos:start="309:36" pos:end="309:50"><expr pos:start="309:36" pos:end="309:50"><name pos:start="309:36" pos:end="309:50"><name pos:start="309:36" pos:end="309:36">v</name><operator pos:start="309:37" pos:end="309:38">-&gt;</operator><name pos:start="309:39" pos:end="309:50">acpred_plane</name></name></expr></argument>, <argument pos:start="309:53" pos:end="309:69"><expr pos:start="309:53" pos:end="309:69"><operator pos:start="309:53" pos:end="309:53">&amp;</operator><name pos:start="309:54" pos:end="309:69"><name pos:start="309:54" pos:end="309:54">v</name><operator pos:start="309:55" pos:end="309:56">-&gt;</operator><name pos:start="309:57" pos:end="309:69">acpred_is_raw</name></name></expr></argument>, <argument pos:start="309:72" pos:end="309:72"><expr pos:start="309:72" pos:end="309:72"><name pos:start="309:72" pos:end="309:72">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="311:9" pos:end="313:22"><if pos:start="311:9" pos:end="313:22">if <condition pos:start="311:12" pos:end="311:23">(<expr pos:start="311:13" pos:end="311:22"><name pos:start="311:13" pos:end="311:18">status</name> <operator pos:start="311:20" pos:end="311:20">&lt;</operator> <literal type="number" pos:start="311:22" pos:end="311:22">0</literal></expr>)</condition><block type="pseudo" pos:start="313:13" pos:end="313:22"><block_content pos:start="313:13" pos:end="313:22">

            <return pos:start="313:13" pos:end="313:22">return <expr pos:start="313:20" pos:end="313:21"><operator pos:start="313:20" pos:end="313:20">-</operator><literal type="number" pos:start="313:21" pos:end="313:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="315:9" pos:end="317:63"><expr pos:start="315:9" pos:end="317:62"><call pos:start="315:9" pos:end="317:62"><name pos:start="315:9" pos:end="315:14">av_log</name><argument_list pos:start="315:15" pos:end="317:62">(<argument pos:start="315:16" pos:end="315:25"><expr pos:start="315:16" pos:end="315:25"><name pos:start="315:16" pos:end="315:25"><name pos:start="315:16" pos:end="315:16">v</name><operator pos:start="315:17" pos:end="315:18">-&gt;</operator><name pos:start="315:19" pos:end="315:19">s</name><operator pos:start="315:20" pos:end="315:20">.</operator><name pos:start="315:21" pos:end="315:25">avctx</name></name></expr></argument>, <argument pos:start="315:28" pos:end="315:39"><expr pos:start="315:28" pos:end="315:39"><name pos:start="315:28" pos:end="315:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="315:42" pos:end="317:40"><expr pos:start="315:42" pos:end="317:40"><literal type="string" pos:start="315:42" pos:end="315:66">"ACPRED plane encoding: "</literal>

               <literal type="string" pos:start="317:16" pos:end="317:40">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="317:43" pos:end="317:51"><expr pos:start="317:43" pos:end="317:51"><name pos:start="317:43" pos:end="317:48">status</name><operator pos:start="317:49" pos:end="317:50">&gt;&gt;</operator><literal type="number" pos:start="317:51" pos:end="317:51">1</literal></expr></argument>, <argument pos:start="317:54" pos:end="317:61"><expr pos:start="317:54" pos:end="317:61"><name pos:start="317:54" pos:end="317:59">status</name><operator pos:start="317:60" pos:end="317:60">&amp;</operator><literal type="number" pos:start="317:61" pos:end="317:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:36"><expr pos:start="319:9" pos:end="319:35"><name pos:start="319:9" pos:end="319:19"><name pos:start="319:9" pos:end="319:9">v</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:19">condover</name></name> <operator pos:start="319:21" pos:end="319:21">=</operator> <name pos:start="319:23" pos:end="319:35">CONDOVER_NONE</name></expr>;</expr_stmt>

        <if_stmt pos:start="321:9" pos:end="339:9"><if pos:start="321:9" pos:end="339:9">if <condition pos:start="321:12" pos:end="321:37">(<expr pos:start="321:13" pos:end="321:36"><name pos:start="321:13" pos:end="321:22"><name pos:start="321:13" pos:end="321:13">v</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:22">overlap</name></name> <operator pos:start="321:24" pos:end="321:25">&amp;&amp;</operator> <name pos:start="321:27" pos:end="321:31"><name pos:start="321:27" pos:end="321:27">v</name><operator pos:start="321:28" pos:end="321:29">-&gt;</operator><name pos:start="321:30" pos:end="321:31">pq</name></name> <operator pos:start="321:33" pos:end="321:34">&lt;=</operator> <literal type="number" pos:start="321:36" pos:end="321:36">8</literal></expr>)</condition> <block pos:start="321:39" pos:end="339:9">{<block_content pos:start="323:13" pos:end="337:13">

            <expr_stmt pos:start="323:13" pos:end="323:40"><expr pos:start="323:13" pos:end="323:39"><name pos:start="323:13" pos:end="323:23"><name pos:start="323:13" pos:end="323:13">v</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:23">condover</name></name> <operator pos:start="323:25" pos:end="323:25">=</operator> <call pos:start="323:27" pos:end="323:39"><name pos:start="323:27" pos:end="323:35">decode012</name><argument_list pos:start="323:36" pos:end="323:39">(<argument pos:start="323:37" pos:end="323:38"><expr pos:start="323:37" pos:end="323:38"><name pos:start="323:37" pos:end="323:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="325:13" pos:end="337:13"><if pos:start="325:13" pos:end="337:13">if <condition pos:start="325:16" pos:end="325:47">(<expr pos:start="325:17" pos:end="325:46"><name pos:start="325:17" pos:end="325:27"><name pos:start="325:17" pos:end="325:17">v</name><operator pos:start="325:18" pos:end="325:19">-&gt;</operator><name pos:start="325:20" pos:end="325:27">condover</name></name> <operator pos:start="325:29" pos:end="325:30">==</operator> <name pos:start="325:32" pos:end="325:46">CONDOVER_SELECT</name></expr>)</condition> <block pos:start="325:49" pos:end="337:13">{<block_content pos:start="327:17" pos:end="335:71">

                <expr_stmt pos:start="327:17" pos:end="327:87"><expr pos:start="327:17" pos:end="327:86"><name pos:start="327:17" pos:end="327:22">status</name> <operator pos:start="327:24" pos:end="327:24">=</operator> <call pos:start="327:26" pos:end="327:86"><name pos:start="327:26" pos:end="327:42">bitplane_decoding</name><argument_list pos:start="327:43" pos:end="327:86">(<argument pos:start="327:44" pos:end="327:62"><expr pos:start="327:44" pos:end="327:62"><name pos:start="327:44" pos:end="327:62"><name pos:start="327:44" pos:end="327:44">v</name><operator pos:start="327:45" pos:end="327:46">-&gt;</operator><name pos:start="327:47" pos:end="327:62">over_flags_plane</name></name></expr></argument>, <argument pos:start="327:65" pos:end="327:82"><expr pos:start="327:65" pos:end="327:82"><operator pos:start="327:65" pos:end="327:65">&amp;</operator><name pos:start="327:66" pos:end="327:82"><name pos:start="327:66" pos:end="327:66">v</name><operator pos:start="327:67" pos:end="327:68">-&gt;</operator><name pos:start="327:69" pos:end="327:82">overflg_is_raw</name></name></expr></argument>, <argument pos:start="327:85" pos:end="327:85"><expr pos:start="327:85" pos:end="327:85"><name pos:start="327:85" pos:end="327:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="329:17" pos:end="331:30"><if pos:start="329:17" pos:end="331:30">if <condition pos:start="329:20" pos:end="329:31">(<expr pos:start="329:21" pos:end="329:30"><name pos:start="329:21" pos:end="329:26">status</name> <operator pos:start="329:28" pos:end="329:28">&lt;</operator> <literal type="number" pos:start="329:30" pos:end="329:30">0</literal></expr>)</condition><block type="pseudo" pos:start="331:21" pos:end="331:30"><block_content pos:start="331:21" pos:end="331:30">

                    <return pos:start="331:21" pos:end="331:30">return <expr pos:start="331:28" pos:end="331:29"><operator pos:start="331:28" pos:end="331:28">-</operator><literal type="number" pos:start="331:29" pos:end="331:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="333:17" pos:end="335:71"><expr pos:start="333:17" pos:end="335:70"><call pos:start="333:17" pos:end="335:70"><name pos:start="333:17" pos:end="333:22">av_log</name><argument_list pos:start="333:23" pos:end="335:70">(<argument pos:start="333:24" pos:end="333:33"><expr pos:start="333:24" pos:end="333:33"><name pos:start="333:24" pos:end="333:33"><name pos:start="333:24" pos:end="333:24">v</name><operator pos:start="333:25" pos:end="333:26">-&gt;</operator><name pos:start="333:27" pos:end="333:27">s</name><operator pos:start="333:28" pos:end="333:28">.</operator><name pos:start="333:29" pos:end="333:33">avctx</name></name></expr></argument>, <argument pos:start="333:36" pos:end="333:47"><expr pos:start="333:36" pos:end="333:47"><name pos:start="333:36" pos:end="333:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="333:50" pos:end="335:48"><expr pos:start="333:50" pos:end="335:48"><literal type="string" pos:start="333:50" pos:end="333:76">"CONDOVER plane encoding: "</literal>

                       <literal type="string" pos:start="335:24" pos:end="335:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="335:51" pos:end="335:59"><expr pos:start="335:51" pos:end="335:59"><name pos:start="335:51" pos:end="335:56">status</name><operator pos:start="335:57" pos:end="335:58">&gt;&gt;</operator><literal type="number" pos:start="335:59" pos:end="335:59">1</literal></expr></argument>, <argument pos:start="335:62" pos:end="335:69"><expr pos:start="335:62" pos:end="335:69"><name pos:start="335:62" pos:end="335:67">status</name><operator pos:start="335:68" pos:end="335:68">&amp;</operator><literal type="number" pos:start="335:69" pos:end="335:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="341:9" pos:end="341:14">break;</break>

    <case pos:start="343:5" pos:end="343:27">case <expr pos:start="343:10" pos:end="343:26"><name pos:start="343:10" pos:end="343:26">AV_PICTURE_TYPE_P</name></expr>:</case>

        <if_stmt pos:start="345:9" pos:end="357:9"><if pos:start="345:9" pos:end="357:9">if <condition pos:start="345:12" pos:end="345:26">(<expr pos:start="345:13" pos:end="345:25"><name pos:start="345:13" pos:end="345:25"><name pos:start="345:13" pos:end="345:13">v</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:25">field_mode</name></name></expr>)</condition> <block pos:start="345:28" pos:end="357:9">{<block_content pos:start="347:13" pos:end="355:13">

            <expr_stmt pos:start="347:13" pos:end="347:38"><expr pos:start="347:13" pos:end="347:37"><name pos:start="347:13" pos:end="347:21"><name pos:start="347:13" pos:end="347:13">v</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:21">numref</name></name> <operator pos:start="347:23" pos:end="347:23">=</operator> <call pos:start="347:25" pos:end="347:37"><name pos:start="347:25" pos:end="347:33">get_bits1</name><argument_list pos:start="347:34" pos:end="347:37">(<argument pos:start="347:35" pos:end="347:36"><expr pos:start="347:35" pos:end="347:36"><name pos:start="347:35" pos:end="347:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="349:13" pos:end="355:13"><if pos:start="349:13" pos:end="355:13">if <condition pos:start="349:16" pos:end="349:27">(<expr pos:start="349:17" pos:end="349:26"><operator pos:start="349:17" pos:end="349:17">!</operator><name pos:start="349:18" pos:end="349:26"><name pos:start="349:18" pos:end="349:18">v</name><operator pos:start="349:19" pos:end="349:20">-&gt;</operator><name pos:start="349:21" pos:end="349:26">numref</name></name></expr>)</condition> <block pos:start="349:29" pos:end="355:13">{<block_content pos:start="351:17" pos:end="353:72">

                <expr_stmt pos:start="351:17" pos:end="351:53"><expr pos:start="351:17" pos:end="351:52"><name pos:start="351:17" pos:end="351:27"><name pos:start="351:17" pos:end="351:17">v</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:27">reffield</name></name>          <operator pos:start="351:38" pos:end="351:38">=</operator> <call pos:start="351:40" pos:end="351:52"><name pos:start="351:40" pos:end="351:48">get_bits1</name><argument_list pos:start="351:49" pos:end="351:52">(<argument pos:start="351:50" pos:end="351:51"><expr pos:start="351:50" pos:end="351:51"><name pos:start="351:50" pos:end="351:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:72"><expr pos:start="353:17" pos:end="353:71"><name pos:start="353:17" pos:end="353:36"><name pos:start="353:17" pos:end="353:17">v</name><operator pos:start="353:18" pos:end="353:19">-&gt;</operator><name pos:start="353:20" pos:end="353:33">ref_field_type</name><index pos:start="353:34" pos:end="353:36">[<expr pos:start="353:35" pos:end="353:35"><literal type="number" pos:start="353:35" pos:end="353:35">0</literal></expr>]</index></name> <operator pos:start="353:38" pos:end="353:38">=</operator> <name pos:start="353:40" pos:end="353:50"><name pos:start="353:40" pos:end="353:40">v</name><operator pos:start="353:41" pos:end="353:42">-&gt;</operator><name pos:start="353:43" pos:end="353:50">reffield</name></name> <operator pos:start="353:52" pos:end="353:52">^</operator> <operator pos:start="353:54" pos:end="353:54">!</operator><name pos:start="353:55" pos:end="353:71"><name pos:start="353:55" pos:end="353:55">v</name><operator pos:start="353:56" pos:end="353:57">-&gt;</operator><name pos:start="353:58" pos:end="353:71">cur_field_type</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="359:9" pos:end="365:27"><if pos:start="359:9" pos:end="361:45">if <condition pos:start="359:12" pos:end="359:27">(<expr pos:start="359:13" pos:end="359:26"><name pos:start="359:13" pos:end="359:26"><name pos:start="359:13" pos:end="359:13">v</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:26">extended_mv</name></name></expr>)</condition><block type="pseudo" pos:start="361:13" pos:end="361:45"><block_content pos:start="361:13" pos:end="361:45">

            <expr_stmt pos:start="361:13" pos:end="361:45"><expr pos:start="361:13" pos:end="361:44"><name pos:start="361:13" pos:end="361:22"><name pos:start="361:13" pos:end="361:13">v</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:22">mvrange</name></name> <operator pos:start="361:24" pos:end="361:24">=</operator> <call pos:start="361:26" pos:end="361:44"><name pos:start="361:26" pos:end="361:34">get_unary</name><argument_list pos:start="361:35" pos:end="361:44">(<argument pos:start="361:36" pos:end="361:37"><expr pos:start="361:36" pos:end="361:37"><name pos:start="361:36" pos:end="361:37">gb</name></expr></argument>, <argument pos:start="361:40" pos:end="361:40"><expr pos:start="361:40" pos:end="361:40"><literal type="number" pos:start="361:40" pos:end="361:40">0</literal></expr></argument>, <argument pos:start="361:43" pos:end="361:43"><expr pos:start="361:43" pos:end="361:43"><literal type="number" pos:start="361:43" pos:end="361:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="363:9" pos:end="365:27">else<block type="pseudo" pos:start="365:13" pos:end="365:27"><block_content pos:start="365:13" pos:end="365:27">

            <expr_stmt pos:start="365:13" pos:end="365:27"><expr pos:start="365:13" pos:end="365:26"><name pos:start="365:13" pos:end="365:22"><name pos:start="365:13" pos:end="365:13">v</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:22">mvrange</name></name> <operator pos:start="365:24" pos:end="365:24">=</operator> <literal type="number" pos:start="365:26" pos:end="365:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="367:9" pos:end="433:9"><if pos:start="367:9" pos:end="433:9">if <condition pos:start="367:12" pos:end="367:25">(<expr pos:start="367:13" pos:end="367:24"><name pos:start="367:13" pos:end="367:24"><name pos:start="367:13" pos:end="367:13">v</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:24">interlace</name></name></expr>)</condition> <block pos:start="367:27" pos:end="433:9">{<block_content pos:start="369:13" pos:end="431:13">

            <if_stmt pos:start="369:13" pos:end="375:32"><if pos:start="369:13" pos:end="371:50">if <condition pos:start="369:16" pos:end="369:32">(<expr pos:start="369:17" pos:end="369:31"><name pos:start="369:17" pos:end="369:31"><name pos:start="369:17" pos:end="369:17">v</name><operator pos:start="369:18" pos:end="369:19">-&gt;</operator><name pos:start="369:20" pos:end="369:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="371:50"><block_content pos:start="371:17" pos:end="371:50">

                <expr_stmt pos:start="371:17" pos:end="371:50"><expr pos:start="371:17" pos:end="371:49"><name pos:start="371:17" pos:end="371:27"><name pos:start="371:17" pos:end="371:17">v</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:27">dmvrange</name></name> <operator pos:start="371:29" pos:end="371:29">=</operator> <call pos:start="371:31" pos:end="371:49"><name pos:start="371:31" pos:end="371:39">get_unary</name><argument_list pos:start="371:40" pos:end="371:49">(<argument pos:start="371:41" pos:end="371:42"><expr pos:start="371:41" pos:end="371:42"><name pos:start="371:41" pos:end="371:42">gb</name></expr></argument>, <argument pos:start="371:45" pos:end="371:45"><expr pos:start="371:45" pos:end="371:45"><literal type="number" pos:start="371:45" pos:end="371:45">0</literal></expr></argument>, <argument pos:start="371:48" pos:end="371:48"><expr pos:start="371:48" pos:end="371:48"><literal type="number" pos:start="371:48" pos:end="371:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="373:13" pos:end="375:32">else<block type="pseudo" pos:start="375:17" pos:end="375:32"><block_content pos:start="375:17" pos:end="375:32">

                <expr_stmt pos:start="375:17" pos:end="375:32"><expr pos:start="375:17" pos:end="375:31"><name pos:start="375:17" pos:end="375:27"><name pos:start="375:17" pos:end="375:17">v</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:27">dmvrange</name></name> <operator pos:start="375:29" pos:end="375:29">=</operator> <literal type="number" pos:start="375:31" pos:end="375:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="377:13" pos:end="431:13"><if pos:start="377:13" pos:end="431:13">if <condition pos:start="377:16" pos:end="377:38">(<expr pos:start="377:17" pos:end="377:37"><name pos:start="377:17" pos:end="377:22"><name pos:start="377:17" pos:end="377:17">v</name><operator pos:start="377:18" pos:end="377:19">-&gt;</operator><name pos:start="377:20" pos:end="377:22">fcm</name></name> <operator pos:start="377:24" pos:end="377:25">==</operator> <name pos:start="377:27" pos:end="377:37">ILACE_FRAME</name></expr>)</condition> <block pos:start="377:40" pos:end="431:13">{<block_content pos:start="379:17" pos:end="429:17"> <comment type="line" pos:start="377:42" pos:end="377:68">// interlaced frame picture</comment>

                <expr_stmt pos:start="379:17" pos:end="379:48"><expr pos:start="379:17" pos:end="379:47"><name pos:start="379:17" pos:end="379:31"><name pos:start="379:17" pos:end="379:17">v</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:31">fourmvswitch</name></name> <operator pos:start="379:33" pos:end="379:33">=</operator> <call pos:start="379:35" pos:end="379:47"><name pos:start="379:35" pos:end="379:43">get_bits1</name><argument_list pos:start="379:44" pos:end="379:47">(<argument pos:start="379:45" pos:end="379:46"><expr pos:start="379:45" pos:end="379:46"><name pos:start="379:45" pos:end="379:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:48"><expr pos:start="381:17" pos:end="381:47"><name pos:start="381:17" pos:end="381:26"><name pos:start="381:17" pos:end="381:17">v</name><operator pos:start="381:18" pos:end="381:19">-&gt;</operator><name pos:start="381:20" pos:end="381:26">intcomp</name></name>      <operator pos:start="381:33" pos:end="381:33">=</operator> <call pos:start="381:35" pos:end="381:47"><name pos:start="381:35" pos:end="381:43">get_bits1</name><argument_list pos:start="381:44" pos:end="381:47">(<argument pos:start="381:45" pos:end="381:46"><expr pos:start="381:45" pos:end="381:46"><name pos:start="381:45" pos:end="381:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="383:17" pos:end="391:17"><if pos:start="383:17" pos:end="391:17">if <condition pos:start="383:20" pos:end="383:31">(<expr pos:start="383:21" pos:end="383:30"><name pos:start="383:21" pos:end="383:30"><name pos:start="383:21" pos:end="383:21">v</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:30">intcomp</name></name></expr>)</condition> <block pos:start="383:33" pos:end="391:17">{<block_content pos:start="385:21" pos:end="389:74">

                    <expr_stmt pos:start="385:21" pos:end="385:50"><expr pos:start="385:21" pos:end="385:49"><name pos:start="385:21" pos:end="385:31"><name pos:start="385:21" pos:end="385:21">v</name><operator pos:start="385:22" pos:end="385:23">-&gt;</operator><name pos:start="385:24" pos:end="385:31">lumscale</name></name> <operator pos:start="385:33" pos:end="385:33">=</operator> <call pos:start="385:35" pos:end="385:49"><name pos:start="385:35" pos:end="385:42">get_bits</name><argument_list pos:start="385:43" pos:end="385:49">(<argument pos:start="385:44" pos:end="385:45"><expr pos:start="385:44" pos:end="385:45"><name pos:start="385:44" pos:end="385:45">gb</name></expr></argument>, <argument pos:start="385:48" pos:end="385:48"><expr pos:start="385:48" pos:end="385:48"><literal type="number" pos:start="385:48" pos:end="385:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:50"><expr pos:start="387:21" pos:end="387:49"><name pos:start="387:21" pos:end="387:31"><name pos:start="387:21" pos:end="387:21">v</name><operator pos:start="387:22" pos:end="387:23">-&gt;</operator><name pos:start="387:24" pos:end="387:31">lumshift</name></name> <operator pos:start="387:33" pos:end="387:33">=</operator> <call pos:start="387:35" pos:end="387:49"><name pos:start="387:35" pos:end="387:42">get_bits</name><argument_list pos:start="387:43" pos:end="387:49">(<argument pos:start="387:44" pos:end="387:45"><expr pos:start="387:44" pos:end="387:45"><name pos:start="387:44" pos:end="387:45">gb</name></expr></argument>, <argument pos:start="387:48" pos:end="387:48"><expr pos:start="387:48" pos:end="387:48"><literal type="number" pos:start="387:48" pos:end="387:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="389:21" pos:end="389:74"><expr pos:start="389:21" pos:end="389:73"><call pos:start="389:21" pos:end="389:73"><name pos:start="389:21" pos:end="389:28">INIT_LUT</name><argument_list pos:start="389:29" pos:end="389:73">(<argument pos:start="389:30" pos:end="389:40"><expr pos:start="389:30" pos:end="389:40"><name pos:start="389:30" pos:end="389:40"><name pos:start="389:30" pos:end="389:30">v</name><operator pos:start="389:31" pos:end="389:32">-&gt;</operator><name pos:start="389:33" pos:end="389:40">lumscale</name></name></expr></argument>, <argument pos:start="389:43" pos:end="389:53"><expr pos:start="389:43" pos:end="389:53"><name pos:start="389:43" pos:end="389:53"><name pos:start="389:43" pos:end="389:43">v</name><operator pos:start="389:44" pos:end="389:45">-&gt;</operator><name pos:start="389:46" pos:end="389:53">lumshift</name></name></expr></argument>, <argument pos:start="389:56" pos:end="389:62"><expr pos:start="389:56" pos:end="389:62"><name pos:start="389:56" pos:end="389:62"><name pos:start="389:56" pos:end="389:56">v</name><operator pos:start="389:57" pos:end="389:58">-&gt;</operator><name pos:start="389:59" pos:end="389:62">luty</name></name></expr></argument>, <argument pos:start="389:65" pos:end="389:72"><expr pos:start="389:65" pos:end="389:72"><name pos:start="389:65" pos:end="389:72"><name pos:start="389:65" pos:end="389:65">v</name><operator pos:start="389:66" pos:end="389:67">-&gt;</operator><name pos:start="389:68" pos:end="389:72">lutuv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:82"><expr pos:start="393:17" pos:end="393:81"><name pos:start="393:17" pos:end="393:22">status</name> <operator pos:start="393:24" pos:end="393:24">=</operator> <call pos:start="393:26" pos:end="393:81"><name pos:start="393:26" pos:end="393:42">bitplane_decoding</name><argument_list pos:start="393:43" pos:end="393:81">(<argument pos:start="393:44" pos:end="393:60"><expr pos:start="393:44" pos:end="393:60"><name pos:start="393:44" pos:end="393:60"><name pos:start="393:44" pos:end="393:44">v</name><operator pos:start="393:45" pos:end="393:46">-&gt;</operator><name pos:start="393:47" pos:end="393:47">s</name><operator pos:start="393:48" pos:end="393:48">.</operator><name pos:start="393:49" pos:end="393:60">mbskip_table</name></name></expr></argument>, <argument pos:start="393:63" pos:end="393:77"><expr pos:start="393:63" pos:end="393:77"><operator pos:start="393:63" pos:end="393:63">&amp;</operator><name pos:start="393:64" pos:end="393:77"><name pos:start="393:64" pos:end="393:64">v</name><operator pos:start="393:65" pos:end="393:66">-&gt;</operator><name pos:start="393:67" pos:end="393:77">skip_is_raw</name></name></expr></argument>, <argument pos:start="393:80" pos:end="393:80"><expr pos:start="393:80" pos:end="393:80"><name pos:start="393:80" pos:end="393:80">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="395:17" pos:end="397:71"><expr pos:start="395:17" pos:end="397:70"><call pos:start="395:17" pos:end="397:70"><name pos:start="395:17" pos:end="395:22">av_log</name><argument_list pos:start="395:23" pos:end="397:70">(<argument pos:start="395:24" pos:end="395:33"><expr pos:start="395:24" pos:end="395:33"><name pos:start="395:24" pos:end="395:33"><name pos:start="395:24" pos:end="395:24">v</name><operator pos:start="395:25" pos:end="395:26">-&gt;</operator><name pos:start="395:27" pos:end="395:27">s</name><operator pos:start="395:28" pos:end="395:28">.</operator><name pos:start="395:29" pos:end="395:33">avctx</name></name></expr></argument>, <argument pos:start="395:36" pos:end="395:47"><expr pos:start="395:36" pos:end="395:47"><name pos:start="395:36" pos:end="395:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="395:50" pos:end="397:48"><expr pos:start="395:50" pos:end="397:48"><literal type="string" pos:start="395:50" pos:end="395:74">"SKIPMB plane encoding: "</literal>

                       <literal type="string" pos:start="397:24" pos:end="397:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="397:51" pos:end="397:59"><expr pos:start="397:51" pos:end="397:59"><name pos:start="397:51" pos:end="397:56">status</name><operator pos:start="397:57" pos:end="397:58">&gt;&gt;</operator><literal type="number" pos:start="397:59" pos:end="397:59">1</literal></expr></argument>, <argument pos:start="397:62" pos:end="397:69"><expr pos:start="397:62" pos:end="397:69"><name pos:start="397:62" pos:end="397:67">status</name><operator pos:start="397:68" pos:end="397:68">&amp;</operator><literal type="number" pos:start="397:69" pos:end="397:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:44"><expr pos:start="399:17" pos:end="399:43"><name pos:start="399:17" pos:end="399:25">mbmodetab</name> <operator pos:start="399:27" pos:end="399:27">=</operator> <call pos:start="399:29" pos:end="399:43"><name pos:start="399:29" pos:end="399:36">get_bits</name><argument_list pos:start="399:37" pos:end="399:43">(<argument pos:start="399:38" pos:end="399:39"><expr pos:start="399:38" pos:end="399:39"><name pos:start="399:38" pos:end="399:39">gb</name></expr></argument>, <argument pos:start="399:42" pos:end="399:42"><expr pos:start="399:42" pos:end="399:42"><literal type="number" pos:start="399:42" pos:end="399:42">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="401:17" pos:end="407:79"><if pos:start="401:17" pos:end="403:76">if <condition pos:start="401:20" pos:end="401:36">(<expr pos:start="401:21" pos:end="401:35"><name pos:start="401:21" pos:end="401:35"><name pos:start="401:21" pos:end="401:21">v</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:35">fourmvswitch</name></name></expr>)</condition><block type="pseudo" pos:start="403:21" pos:end="403:76"><block_content pos:start="403:21" pos:end="403:76">

                    <expr_stmt pos:start="403:21" pos:end="403:76"><expr pos:start="403:21" pos:end="403:75"><name pos:start="403:21" pos:end="403:33"><name pos:start="403:21" pos:end="403:21">v</name><operator pos:start="403:22" pos:end="403:23">-&gt;</operator><name pos:start="403:24" pos:end="403:33">mbmode_vlc</name></name> <operator pos:start="403:35" pos:end="403:35">=</operator> <operator pos:start="403:37" pos:end="403:37">&amp;</operator><name pos:start="403:38" pos:end="403:75"><name pos:start="403:38" pos:end="403:64">ff_vc1_intfr_4mv_mbmode_vlc</name><index pos:start="403:65" pos:end="403:75">[<expr pos:start="403:66" pos:end="403:74"><name pos:start="403:66" pos:end="403:74">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="405:17" pos:end="407:79">else<block type="pseudo" pos:start="407:21" pos:end="407:79"><block_content pos:start="407:21" pos:end="407:79">

                    <expr_stmt pos:start="407:21" pos:end="407:79"><expr pos:start="407:21" pos:end="407:78"><name pos:start="407:21" pos:end="407:33"><name pos:start="407:21" pos:end="407:21">v</name><operator pos:start="407:22" pos:end="407:23">-&gt;</operator><name pos:start="407:24" pos:end="407:33">mbmode_vlc</name></name> <operator pos:start="407:35" pos:end="407:35">=</operator> <operator pos:start="407:37" pos:end="407:37">&amp;</operator><name pos:start="407:38" pos:end="407:78"><name pos:start="407:38" pos:end="407:67">ff_vc1_intfr_non4mv_mbmode_vlc</name><index pos:start="407:68" pos:end="407:78">[<expr pos:start="407:69" pos:end="407:77"><name pos:start="407:69" pos:end="407:77">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="409:17" pos:end="409:49"><expr pos:start="409:17" pos:end="409:48"><name pos:start="409:17" pos:end="409:22">imvtab</name>         <operator pos:start="409:32" pos:end="409:32">=</operator> <call pos:start="409:34" pos:end="409:48"><name pos:start="409:34" pos:end="409:41">get_bits</name><argument_list pos:start="409:42" pos:end="409:48">(<argument pos:start="409:43" pos:end="409:44"><expr pos:start="409:43" pos:end="409:44"><name pos:start="409:43" pos:end="409:44">gb</name></expr></argument>, <argument pos:start="409:47" pos:end="409:47"><expr pos:start="409:47" pos:end="409:47"><literal type="number" pos:start="409:47" pos:end="409:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:65"><expr pos:start="411:17" pos:end="411:64"><name pos:start="411:17" pos:end="411:26"><name pos:start="411:17" pos:end="411:17">v</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:26">imv_vlc</name></name>     <operator pos:start="411:32" pos:end="411:32">=</operator> <operator pos:start="411:34" pos:end="411:34">&amp;</operator><name pos:start="411:35" pos:end="411:64"><name pos:start="411:35" pos:end="411:56">ff_vc1_1ref_mvdata_vlc</name><index pos:start="411:57" pos:end="411:64">[<expr pos:start="411:58" pos:end="411:63"><name pos:start="411:58" pos:end="411:63">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

                <comment type="line" pos:start="413:17" pos:end="413:62">// interlaced p-picture cbpcy range is [1, 63]</comment>

                <expr_stmt pos:start="415:17" pos:end="415:49"><expr pos:start="415:17" pos:end="415:48"><name pos:start="415:17" pos:end="415:23">icbptab</name>        <operator pos:start="415:32" pos:end="415:32">=</operator> <call pos:start="415:34" pos:end="415:48"><name pos:start="415:34" pos:end="415:41">get_bits</name><argument_list pos:start="415:42" pos:end="415:48">(<argument pos:start="415:43" pos:end="415:44"><expr pos:start="415:43" pos:end="415:44"><name pos:start="415:43" pos:end="415:44">gb</name></expr></argument>, <argument pos:start="415:47" pos:end="415:47"><expr pos:start="415:47" pos:end="415:47"><literal type="number" pos:start="415:47" pos:end="415:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:61"><expr pos:start="417:17" pos:end="417:60"><name pos:start="417:17" pos:end="417:28"><name pos:start="417:17" pos:end="417:17">v</name><operator pos:start="417:18" pos:end="417:19">-&gt;</operator><name pos:start="417:20" pos:end="417:28">cbpcy_vlc</name></name>   <operator pos:start="417:32" pos:end="417:32">=</operator> <operator pos:start="417:34" pos:end="417:34">&amp;</operator><name pos:start="417:35" pos:end="417:60"><name pos:start="417:35" pos:end="417:51">ff_vc1_icbpcy_vlc</name><index pos:start="417:52" pos:end="417:60">[<expr pos:start="417:53" pos:end="417:59"><name pos:start="417:53" pos:end="417:59">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:49"><expr pos:start="419:17" pos:end="419:48"><name pos:start="419:17" pos:end="419:26">twomvbptab</name>     <operator pos:start="419:32" pos:end="419:32">=</operator> <call pos:start="419:34" pos:end="419:48"><name pos:start="419:34" pos:end="419:41">get_bits</name><argument_list pos:start="419:42" pos:end="419:48">(<argument pos:start="419:43" pos:end="419:44"><expr pos:start="419:43" pos:end="419:44"><name pos:start="419:43" pos:end="419:44">gb</name></expr></argument>, <argument pos:start="419:47" pos:end="419:47"><expr pos:start="419:47" pos:end="419:47"><literal type="number" pos:start="419:47" pos:end="419:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="421:75"><expr pos:start="421:17" pos:end="421:74"><name pos:start="421:17" pos:end="421:30"><name pos:start="421:17" pos:end="421:17">v</name><operator pos:start="421:18" pos:end="421:19">-&gt;</operator><name pos:start="421:20" pos:end="421:30">twomvbp_vlc</name></name> <operator pos:start="421:32" pos:end="421:32">=</operator> <operator pos:start="421:34" pos:end="421:34">&amp;</operator><name pos:start="421:35" pos:end="421:74"><name pos:start="421:35" pos:end="421:62">ff_vc1_2mv_block_pattern_vlc</name><index pos:start="421:63" pos:end="421:74">[<expr pos:start="421:64" pos:end="421:73"><name pos:start="421:64" pos:end="421:73">twomvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="423:17" pos:end="429:17"><if pos:start="423:17" pos:end="429:17">if <condition pos:start="423:20" pos:end="423:36">(<expr pos:start="423:21" pos:end="423:35"><name pos:start="423:21" pos:end="423:35"><name pos:start="423:21" pos:end="423:21">v</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:35">fourmvswitch</name></name></expr>)</condition> <block pos:start="423:38" pos:end="429:17">{<block_content pos:start="425:21" pos:end="427:81">

                    <expr_stmt pos:start="425:21" pos:end="425:54"><expr pos:start="425:21" pos:end="425:53"><name pos:start="425:21" pos:end="425:31">fourmvbptab</name>     <operator pos:start="425:37" pos:end="425:37">=</operator> <call pos:start="425:39" pos:end="425:53"><name pos:start="425:39" pos:end="425:46">get_bits</name><argument_list pos:start="425:47" pos:end="425:53">(<argument pos:start="425:48" pos:end="425:49"><expr pos:start="425:48" pos:end="425:49"><name pos:start="425:48" pos:end="425:49">gb</name></expr></argument>, <argument pos:start="425:52" pos:end="425:52"><expr pos:start="425:52" pos:end="425:52"><literal type="number" pos:start="425:52" pos:end="425:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:81"><expr pos:start="427:21" pos:end="427:80"><name pos:start="427:21" pos:end="427:35"><name pos:start="427:21" pos:end="427:21">v</name><operator pos:start="427:22" pos:end="427:23">-&gt;</operator><name pos:start="427:24" pos:end="427:35">fourmvbp_vlc</name></name> <operator pos:start="427:37" pos:end="427:37">=</operator> <operator pos:start="427:39" pos:end="427:39">&amp;</operator><name pos:start="427:40" pos:end="427:80"><name pos:start="427:40" pos:end="427:67">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="427:68" pos:end="427:80">[<expr pos:start="427:69" pos:end="427:79"><name pos:start="427:69" pos:end="427:79">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="435:9" pos:end="435:52"><expr pos:start="435:9" pos:end="435:51"><name pos:start="435:9" pos:end="435:14"><name pos:start="435:9" pos:end="435:9">v</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:14">k_x</name></name> <operator pos:start="435:16" pos:end="435:16">=</operator> <name pos:start="435:18" pos:end="435:27"><name pos:start="435:18" pos:end="435:18">v</name><operator pos:start="435:19" pos:end="435:20">-&gt;</operator><name pos:start="435:21" pos:end="435:27">mvrange</name></name> <operator pos:start="435:29" pos:end="435:29">+</operator> <literal type="number" pos:start="435:31" pos:end="435:33">9</literal> <operator pos:start="435:33" pos:end="435:33">+</operator> <operator pos:start="435:35" pos:end="435:35">(</operator><name pos:start="435:36" pos:end="435:45"><name pos:start="435:36" pos:end="435:36">v</name><operator pos:start="435:37" pos:end="435:38">-&gt;</operator><name pos:start="435:39" pos:end="435:45">mvrange</name></name> <operator pos:start="435:47" pos:end="435:48">&gt;&gt;</operator> <literal type="number" pos:start="435:50" pos:end="435:50">1</literal><operator pos:start="435:51" pos:end="435:51">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="435:54" pos:end="435:76">//k_x can be 9 10 12 13</comment>

        <expr_stmt pos:start="437:9" pos:end="437:32"><expr pos:start="437:9" pos:end="437:31"><name pos:start="437:9" pos:end="437:14"><name pos:start="437:9" pos:end="437:9">v</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:14">k_y</name></name> <operator pos:start="437:16" pos:end="437:16">=</operator> <name pos:start="437:18" pos:end="437:27"><name pos:start="437:18" pos:end="437:18">v</name><operator pos:start="437:19" pos:end="437:20">-&gt;</operator><name pos:start="437:21" pos:end="437:27">mvrange</name></name> <operator pos:start="437:29" pos:end="437:29">+</operator> <literal type="number" pos:start="437:31" pos:end="437:31">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="437:34" pos:end="437:55">//k_y can be 8 9 10 11</comment>

        <expr_stmt pos:start="439:9" pos:end="439:39"><expr pos:start="439:9" pos:end="439:38"><name pos:start="439:9" pos:end="439:18"><name pos:start="439:9" pos:end="439:9">v</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:18">range_x</name></name> <operator pos:start="439:20" pos:end="439:20">=</operator> <literal type="number" pos:start="439:22" pos:end="439:22">1</literal> <operator pos:start="439:24" pos:end="439:25">&lt;&lt;</operator> <operator pos:start="439:27" pos:end="439:27">(</operator><name pos:start="439:28" pos:end="439:33"><name pos:start="439:28" pos:end="439:28">v</name><operator pos:start="439:29" pos:end="439:30">-&gt;</operator><name pos:start="439:31" pos:end="439:33">k_x</name></name> <operator pos:start="439:35" pos:end="439:35">-</operator> <literal type="number" pos:start="439:37" pos:end="439:37">1</literal><operator pos:start="439:38" pos:end="439:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:39"><expr pos:start="441:9" pos:end="441:38"><name pos:start="441:9" pos:end="441:18"><name pos:start="441:9" pos:end="441:9">v</name><operator pos:start="441:10" pos:end="441:11">-&gt;</operator><name pos:start="441:12" pos:end="441:18">range_y</name></name> <operator pos:start="441:20" pos:end="441:20">=</operator> <literal type="number" pos:start="441:22" pos:end="441:22">1</literal> <operator pos:start="441:24" pos:end="441:25">&lt;&lt;</operator> <operator pos:start="441:27" pos:end="441:27">(</operator><name pos:start="441:28" pos:end="441:33"><name pos:start="441:28" pos:end="441:28">v</name><operator pos:start="441:29" pos:end="441:30">-&gt;</operator><name pos:start="441:31" pos:end="441:33">k_y</name></name> <operator pos:start="441:35" pos:end="441:35">-</operator> <literal type="number" pos:start="441:37" pos:end="441:37">1</literal><operator pos:start="441:38" pos:end="441:38">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="445:9" pos:end="455:28"><if pos:start="445:9" pos:end="447:28">if <condition pos:start="445:12" pos:end="445:22">(<expr pos:start="445:13" pos:end="445:21"><name pos:start="445:13" pos:end="445:17"><name pos:start="445:13" pos:end="445:13">v</name><operator pos:start="445:14" pos:end="445:15">-&gt;</operator><name pos:start="445:16" pos:end="445:17">pq</name></name> <operator pos:start="445:19" pos:end="445:19">&lt;</operator> <literal type="number" pos:start="445:21" pos:end="445:21">5</literal></expr>)</condition><block type="pseudo" pos:start="447:13" pos:end="447:28"><block_content pos:start="447:13" pos:end="447:28">

            <expr_stmt pos:start="447:13" pos:end="447:28"><expr pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:23"><name pos:start="447:13" pos:end="447:13">v</name><operator pos:start="447:14" pos:end="447:15">-&gt;</operator><name pos:start="447:16" pos:end="447:23">tt_index</name></name> <operator pos:start="447:25" pos:end="447:25">=</operator> <literal type="number" pos:start="447:27" pos:end="447:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="449:9" pos:end="451:28">else if <condition pos:start="449:17" pos:end="449:28">(<expr pos:start="449:18" pos:end="449:27"><name pos:start="449:18" pos:end="449:22"><name pos:start="449:18" pos:end="449:18">v</name><operator pos:start="449:19" pos:end="449:20">-&gt;</operator><name pos:start="449:21" pos:end="449:22">pq</name></name> <operator pos:start="449:24" pos:end="449:24">&lt;</operator> <literal type="number" pos:start="449:26" pos:end="449:27">13</literal></expr>)</condition><block type="pseudo" pos:start="451:13" pos:end="451:28"><block_content pos:start="451:13" pos:end="451:28">

            <expr_stmt pos:start="451:13" pos:end="451:28"><expr pos:start="451:13" pos:end="451:27"><name pos:start="451:13" pos:end="451:23"><name pos:start="451:13" pos:end="451:13">v</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:23">tt_index</name></name> <operator pos:start="451:25" pos:end="451:25">=</operator> <literal type="number" pos:start="451:27" pos:end="451:27">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="453:9" pos:end="455:28">else<block type="pseudo" pos:start="455:13" pos:end="455:28"><block_content pos:start="455:13" pos:end="455:28">

            <expr_stmt pos:start="455:13" pos:end="455:28"><expr pos:start="455:13" pos:end="455:27"><name pos:start="455:13" pos:end="455:23"><name pos:start="455:13" pos:end="455:13">v</name><operator pos:start="455:14" pos:end="455:15">-&gt;</operator><name pos:start="455:16" pos:end="455:23">tt_index</name></name> <operator pos:start="455:25" pos:end="455:25">=</operator> <literal type="number" pos:start="455:27" pos:end="455:27">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="457:9" pos:end="525:9"><if pos:start="457:9" pos:end="525:9">if <condition pos:start="457:12" pos:end="457:34">(<expr pos:start="457:13" pos:end="457:33"><name pos:start="457:13" pos:end="457:18"><name pos:start="457:13" pos:end="457:13">v</name><operator pos:start="457:14" pos:end="457:15">-&gt;</operator><name pos:start="457:16" pos:end="457:18">fcm</name></name> <operator pos:start="457:20" pos:end="457:21">!=</operator> <name pos:start="457:23" pos:end="457:33">ILACE_FRAME</name></expr>)</condition> <block pos:start="457:36" pos:end="525:9">{<block_content pos:start="459:13" pos:end="523:75">

            <decl_stmt pos:start="459:13" pos:end="459:23"><decl pos:start="459:13" pos:end="459:22"><type pos:start="459:13" pos:end="459:15"><name pos:start="459:13" pos:end="459:15">int</name></type> <name pos:start="459:17" pos:end="459:22">mvmode</name></decl>;</decl_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:45"><expr pos:start="461:13" pos:end="461:44"><name pos:start="461:13" pos:end="461:18">mvmode</name>     <operator pos:start="461:24" pos:end="461:24">=</operator> <call pos:start="461:26" pos:end="461:44"><name pos:start="461:26" pos:end="461:34">get_unary</name><argument_list pos:start="461:35" pos:end="461:44">(<argument pos:start="461:36" pos:end="461:37"><expr pos:start="461:36" pos:end="461:37"><name pos:start="461:36" pos:end="461:37">gb</name></expr></argument>, <argument pos:start="461:40" pos:end="461:40"><expr pos:start="461:40" pos:end="461:40"><literal type="number" pos:start="461:40" pos:end="461:40">1</literal></expr></argument>, <argument pos:start="461:43" pos:end="461:43"><expr pos:start="461:43" pos:end="461:43"><literal type="number" pos:start="461:43" pos:end="461:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:46"><expr pos:start="463:13" pos:end="463:45"><name pos:start="463:13" pos:end="463:20">lowquant</name>   <operator pos:start="463:24" pos:end="463:24">=</operator> <ternary pos:start="463:26" pos:end="463:45"><condition pos:start="463:26" pos:end="463:39"><expr pos:start="463:26" pos:end="463:37"><operator pos:start="463:26" pos:end="463:26">(</operator><name pos:start="463:27" pos:end="463:31"><name pos:start="463:27" pos:end="463:27">v</name><operator pos:start="463:28" pos:end="463:29">-&gt;</operator><name pos:start="463:30" pos:end="463:31">pq</name></name> <operator pos:start="463:33" pos:end="463:33">&gt;</operator> <literal type="number" pos:start="463:35" pos:end="463:36">12</literal><operator pos:start="463:37" pos:end="463:37">)</operator></expr> ?</condition><then pos:start="463:41" pos:end="463:41"> <expr pos:start="463:41" pos:end="463:41"><literal type="number" pos:start="463:41" pos:end="463:41">0</literal></expr> </then><else pos:start="463:43" pos:end="463:45">: <expr pos:start="463:45" pos:end="463:45"><literal type="number" pos:start="463:45" pos:end="463:45">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:65"><expr pos:start="465:13" pos:end="465:64"><name pos:start="465:13" pos:end="465:22"><name pos:start="465:13" pos:end="465:13">v</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:22">mv_mode</name></name> <operator pos:start="465:24" pos:end="465:24">=</operator> <name pos:start="465:26" pos:end="465:64"><name pos:start="465:26" pos:end="465:46">ff_vc1_mv_pmode_table</name><index pos:start="465:47" pos:end="465:56">[<expr pos:start="465:48" pos:end="465:55"><name pos:start="465:48" pos:end="465:55">lowquant</name></expr>]</index><index pos:start="465:57" pos:end="465:64">[<expr pos:start="465:58" pos:end="465:63"><name pos:start="465:58" pos:end="465:63">mvmode</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="467:13" pos:end="497:13"><if pos:start="467:13" pos:end="497:13">if <condition pos:start="467:16" pos:end="467:54">(<expr pos:start="467:17" pos:end="467:53"><name pos:start="467:17" pos:end="467:26"><name pos:start="467:17" pos:end="467:17">v</name><operator pos:start="467:18" pos:end="467:19">-&gt;</operator><name pos:start="467:20" pos:end="467:26">mv_mode</name></name> <operator pos:start="467:28" pos:end="467:29">==</operator> <name pos:start="467:31" pos:end="467:53">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="467:56" pos:end="497:13">{<block_content pos:start="469:17" pos:end="495:30">

                <decl_stmt pos:start="469:17" pos:end="469:28"><decl pos:start="469:17" pos:end="469:27"><type pos:start="469:17" pos:end="469:19"><name pos:start="469:17" pos:end="469:19">int</name></type> <name pos:start="469:21" pos:end="469:27">mvmode2</name></decl>;</decl_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:46"><expr pos:start="471:17" pos:end="471:45"><name pos:start="471:17" pos:end="471:23">mvmode2</name> <operator pos:start="471:25" pos:end="471:25">=</operator> <call pos:start="471:27" pos:end="471:45"><name pos:start="471:27" pos:end="471:35">get_unary</name><argument_list pos:start="471:36" pos:end="471:45">(<argument pos:start="471:37" pos:end="471:38"><expr pos:start="471:37" pos:end="471:38"><name pos:start="471:37" pos:end="471:38">gb</name></expr></argument>, <argument pos:start="471:41" pos:end="471:41"><expr pos:start="471:41" pos:end="471:41"><literal type="number" pos:start="471:41" pos:end="471:41">1</literal></expr></argument>, <argument pos:start="471:44" pos:end="471:44"><expr pos:start="471:44" pos:end="471:44"><literal type="number" pos:start="471:44" pos:end="471:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:72"><expr pos:start="473:17" pos:end="473:71"><name pos:start="473:17" pos:end="473:27"><name pos:start="473:17" pos:end="473:17">v</name><operator pos:start="473:18" pos:end="473:19">-&gt;</operator><name pos:start="473:20" pos:end="473:27">mv_mode2</name></name> <operator pos:start="473:29" pos:end="473:29">=</operator> <name pos:start="473:31" pos:end="473:71"><name pos:start="473:31" pos:end="473:52">ff_vc1_mv_pmode_table2</name><index pos:start="473:53" pos:end="473:62">[<expr pos:start="473:54" pos:end="473:61"><name pos:start="473:54" pos:end="473:61">lowquant</name></expr>]</index><index pos:start="473:63" pos:end="473:71">[<expr pos:start="473:64" pos:end="473:70"><name pos:start="473:64" pos:end="473:70">mvmode2</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="475:17" pos:end="477:52"><if pos:start="475:17" pos:end="477:52">if <condition pos:start="475:20" pos:end="475:34">(<expr pos:start="475:21" pos:end="475:33"><name pos:start="475:21" pos:end="475:33"><name pos:start="475:21" pos:end="475:21">v</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:33">field_mode</name></name></expr>)</condition><block type="pseudo" pos:start="477:21" pos:end="477:52"><block_content pos:start="477:21" pos:end="477:52">

                    <expr_stmt pos:start="477:21" pos:end="477:52"><expr pos:start="477:21" pos:end="477:51"><name pos:start="477:21" pos:end="477:35"><name pos:start="477:21" pos:end="477:21">v</name><operator pos:start="477:22" pos:end="477:23">-&gt;</operator><name pos:start="477:24" pos:end="477:35">intcompfield</name></name> <operator pos:start="477:37" pos:end="477:37">=</operator> <call pos:start="477:39" pos:end="477:51"><name pos:start="477:39" pos:end="477:47">decode210</name><argument_list pos:start="477:48" pos:end="477:51">(<argument pos:start="477:49" pos:end="477:50"><expr pos:start="477:49" pos:end="477:50"><name pos:start="477:49" pos:end="477:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="479:17" pos:end="479:46"><expr pos:start="479:17" pos:end="479:45"><name pos:start="479:17" pos:end="479:27"><name pos:start="479:17" pos:end="479:17">v</name><operator pos:start="479:18" pos:end="479:19">-&gt;</operator><name pos:start="479:20" pos:end="479:27">lumscale</name></name> <operator pos:start="479:29" pos:end="479:29">=</operator> <call pos:start="479:31" pos:end="479:45"><name pos:start="479:31" pos:end="479:38">get_bits</name><argument_list pos:start="479:39" pos:end="479:45">(<argument pos:start="479:40" pos:end="479:41"><expr pos:start="479:40" pos:end="479:41"><name pos:start="479:40" pos:end="479:41">gb</name></expr></argument>, <argument pos:start="479:44" pos:end="479:44"><expr pos:start="479:44" pos:end="479:44"><literal type="number" pos:start="479:44" pos:end="479:44">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="481:17" pos:end="481:46"><expr pos:start="481:17" pos:end="481:45"><name pos:start="481:17" pos:end="481:27"><name pos:start="481:17" pos:end="481:17">v</name><operator pos:start="481:18" pos:end="481:19">-&gt;</operator><name pos:start="481:20" pos:end="481:27">lumshift</name></name> <operator pos:start="481:29" pos:end="481:29">=</operator> <call pos:start="481:31" pos:end="481:45"><name pos:start="481:31" pos:end="481:38">get_bits</name><argument_list pos:start="481:39" pos:end="481:45">(<argument pos:start="481:40" pos:end="481:41"><expr pos:start="481:40" pos:end="481:41"><name pos:start="481:40" pos:end="481:41">gb</name></expr></argument>, <argument pos:start="481:44" pos:end="481:44"><expr pos:start="481:44" pos:end="481:44"><literal type="number" pos:start="481:44" pos:end="481:44">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="483:17" pos:end="483:70"><expr pos:start="483:17" pos:end="483:69"><call pos:start="483:17" pos:end="483:69"><name pos:start="483:17" pos:end="483:24">INIT_LUT</name><argument_list pos:start="483:25" pos:end="483:69">(<argument pos:start="483:26" pos:end="483:36"><expr pos:start="483:26" pos:end="483:36"><name pos:start="483:26" pos:end="483:36"><name pos:start="483:26" pos:end="483:26">v</name><operator pos:start="483:27" pos:end="483:28">-&gt;</operator><name pos:start="483:29" pos:end="483:36">lumscale</name></name></expr></argument>, <argument pos:start="483:39" pos:end="483:49"><expr pos:start="483:39" pos:end="483:49"><name pos:start="483:39" pos:end="483:49"><name pos:start="483:39" pos:end="483:39">v</name><operator pos:start="483:40" pos:end="483:41">-&gt;</operator><name pos:start="483:42" pos:end="483:49">lumshift</name></name></expr></argument>, <argument pos:start="483:52" pos:end="483:58"><expr pos:start="483:52" pos:end="483:58"><name pos:start="483:52" pos:end="483:58"><name pos:start="483:52" pos:end="483:52">v</name><operator pos:start="483:53" pos:end="483:54">-&gt;</operator><name pos:start="483:55" pos:end="483:58">luty</name></name></expr></argument>, <argument pos:start="483:61" pos:end="483:68"><expr pos:start="483:61" pos:end="483:68"><name pos:start="483:61" pos:end="483:68"><name pos:start="483:61" pos:end="483:61">v</name><operator pos:start="483:62" pos:end="483:63">-&gt;</operator><name pos:start="483:64" pos:end="483:68">lutuv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="485:17" pos:end="493:17"><if pos:start="485:17" pos:end="493:17">if <condition pos:start="485:20" pos:end="485:56">(<expr pos:start="485:21" pos:end="485:55"><operator pos:start="485:21" pos:end="485:21">(</operator><name pos:start="485:22" pos:end="485:34"><name pos:start="485:22" pos:end="485:22">v</name><operator pos:start="485:23" pos:end="485:24">-&gt;</operator><name pos:start="485:25" pos:end="485:34">field_mode</name></name><operator pos:start="485:35" pos:end="485:35">)</operator> <operator pos:start="485:37" pos:end="485:38">&amp;&amp;</operator> <operator pos:start="485:40" pos:end="485:40">!</operator><name pos:start="485:41" pos:end="485:55"><name pos:start="485:41" pos:end="485:41">v</name><operator pos:start="485:42" pos:end="485:43">-&gt;</operator><name pos:start="485:44" pos:end="485:55">intcompfield</name></name></expr>)</condition> <block pos:start="485:58" pos:end="493:17">{<block_content pos:start="487:21" pos:end="491:78">

                    <expr_stmt pos:start="487:21" pos:end="487:51"><expr pos:start="487:21" pos:end="487:50"><name pos:start="487:21" pos:end="487:32"><name pos:start="487:21" pos:end="487:21">v</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:32">lumscale2</name></name> <operator pos:start="487:34" pos:end="487:34">=</operator> <call pos:start="487:36" pos:end="487:50"><name pos:start="487:36" pos:end="487:43">get_bits</name><argument_list pos:start="487:44" pos:end="487:50">(<argument pos:start="487:45" pos:end="487:46"><expr pos:start="487:45" pos:end="487:46"><name pos:start="487:45" pos:end="487:46">gb</name></expr></argument>, <argument pos:start="487:49" pos:end="487:49"><expr pos:start="487:49" pos:end="487:49"><literal type="number" pos:start="487:49" pos:end="487:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="489:21" pos:end="489:51"><expr pos:start="489:21" pos:end="489:50"><name pos:start="489:21" pos:end="489:32"><name pos:start="489:21" pos:end="489:21">v</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:32">lumshift2</name></name> <operator pos:start="489:34" pos:end="489:34">=</operator> <call pos:start="489:36" pos:end="489:50"><name pos:start="489:36" pos:end="489:43">get_bits</name><argument_list pos:start="489:44" pos:end="489:50">(<argument pos:start="489:45" pos:end="489:46"><expr pos:start="489:45" pos:end="489:46"><name pos:start="489:45" pos:end="489:46">gb</name></expr></argument>, <argument pos:start="489:49" pos:end="489:49"><expr pos:start="489:49" pos:end="489:49"><literal type="number" pos:start="489:49" pos:end="489:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="491:21" pos:end="491:78"><expr pos:start="491:21" pos:end="491:77"><call pos:start="491:21" pos:end="491:77"><name pos:start="491:21" pos:end="491:28">INIT_LUT</name><argument_list pos:start="491:29" pos:end="491:77">(<argument pos:start="491:30" pos:end="491:41"><expr pos:start="491:30" pos:end="491:41"><name pos:start="491:30" pos:end="491:41"><name pos:start="491:30" pos:end="491:30">v</name><operator pos:start="491:31" pos:end="491:32">-&gt;</operator><name pos:start="491:33" pos:end="491:41">lumscale2</name></name></expr></argument>, <argument pos:start="491:44" pos:end="491:55"><expr pos:start="491:44" pos:end="491:55"><name pos:start="491:44" pos:end="491:55"><name pos:start="491:44" pos:end="491:44">v</name><operator pos:start="491:45" pos:end="491:46">-&gt;</operator><name pos:start="491:47" pos:end="491:55">lumshift2</name></name></expr></argument>, <argument pos:start="491:58" pos:end="491:65"><expr pos:start="491:58" pos:end="491:65"><name pos:start="491:58" pos:end="491:65"><name pos:start="491:58" pos:end="491:58">v</name><operator pos:start="491:59" pos:end="491:60">-&gt;</operator><name pos:start="491:61" pos:end="491:65">luty2</name></name></expr></argument>, <argument pos:start="491:68" pos:end="491:76"><expr pos:start="491:68" pos:end="491:76"><name pos:start="491:68" pos:end="491:76"><name pos:start="491:68" pos:end="491:68">v</name><operator pos:start="491:69" pos:end="491:70">-&gt;</operator><name pos:start="491:71" pos:end="491:76">lutuv2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="495:17" pos:end="495:30"><expr pos:start="495:17" pos:end="495:29"><name pos:start="495:17" pos:end="495:25"><name pos:start="495:17" pos:end="495:17">v</name><operator pos:start="495:18" pos:end="495:19">-&gt;</operator><name pos:start="495:20" pos:end="495:25">use_ic</name></name> <operator pos:start="495:27" pos:end="495:27">=</operator> <literal type="number" pos:start="495:29" pos:end="495:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:45"><expr pos:start="499:13" pos:end="499:44"><name pos:start="499:13" pos:end="499:22"><name pos:start="499:13" pos:end="499:13">v</name><operator pos:start="499:14" pos:end="499:15">-&gt;</operator><name pos:start="499:16" pos:end="499:22">qs_last</name></name> <operator pos:start="499:24" pos:end="499:24">=</operator> <name pos:start="499:26" pos:end="499:44"><name pos:start="499:26" pos:end="499:26">v</name><operator pos:start="499:27" pos:end="499:28">-&gt;</operator><name pos:start="499:29" pos:end="499:29">s</name><operator pos:start="499:30" pos:end="499:30">.</operator><name pos:start="499:31" pos:end="499:44">quarter_sample</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="501:13" pos:end="517:40"><if pos:start="501:13" pos:end="503:40">if <condition pos:start="501:16" pos:end="501:89">(<expr pos:start="501:17" pos:end="501:88"><name pos:start="501:17" pos:end="501:26"><name pos:start="501:17" pos:end="501:17">v</name><operator pos:start="501:18" pos:end="501:19">-&gt;</operator><name pos:start="501:20" pos:end="501:26">mv_mode</name></name> <operator pos:start="501:28" pos:end="501:29">==</operator> <name pos:start="501:31" pos:end="501:47">MV_PMODE_1MV_HPEL</name> <operator pos:start="501:49" pos:end="501:50">||</operator> <name pos:start="501:52" pos:end="501:61"><name pos:start="501:52" pos:end="501:52">v</name><operator pos:start="501:53" pos:end="501:54">-&gt;</operator><name pos:start="501:55" pos:end="501:61">mv_mode</name></name> <operator pos:start="501:63" pos:end="501:64">==</operator> <name pos:start="501:66" pos:end="501:88">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="503:17" pos:end="503:40"><block_content pos:start="503:17" pos:end="503:40">

                <expr_stmt pos:start="503:17" pos:end="503:40"><expr pos:start="503:17" pos:end="503:39"><name pos:start="503:17" pos:end="503:35"><name pos:start="503:17" pos:end="503:17">v</name><operator pos:start="503:18" pos:end="503:19">-&gt;</operator><name pos:start="503:20" pos:end="503:20">s</name><operator pos:start="503:21" pos:end="503:21">.</operator><name pos:start="503:22" pos:end="503:35">quarter_sample</name></name> <operator pos:start="503:37" pos:end="503:37">=</operator> <literal type="number" pos:start="503:39" pos:end="503:39">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="505:13" pos:end="515:13">else if <condition pos:start="505:21" pos:end="505:59">(<expr pos:start="505:22" pos:end="505:58"><name pos:start="505:22" pos:end="505:31"><name pos:start="505:22" pos:end="505:22">v</name><operator pos:start="505:23" pos:end="505:24">-&gt;</operator><name pos:start="505:25" pos:end="505:31">mv_mode</name></name> <operator pos:start="505:33" pos:end="505:34">==</operator> <name pos:start="505:36" pos:end="505:58">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="505:61" pos:end="515:13">{<block_content pos:start="507:17" pos:end="513:44">

                <if_stmt pos:start="507:17" pos:end="513:44"><if pos:start="507:17" pos:end="509:44">if <condition pos:start="507:20" pos:end="507:95">(<expr pos:start="507:21" pos:end="507:94"><name pos:start="507:21" pos:end="507:31"><name pos:start="507:21" pos:end="507:21">v</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:31">mv_mode2</name></name> <operator pos:start="507:33" pos:end="507:34">==</operator> <name pos:start="507:36" pos:end="507:52">MV_PMODE_1MV_HPEL</name> <operator pos:start="507:54" pos:end="507:55">||</operator> <name pos:start="507:57" pos:end="507:67"><name pos:start="507:57" pos:end="507:57">v</name><operator pos:start="507:58" pos:end="507:59">-&gt;</operator><name pos:start="507:60" pos:end="507:67">mv_mode2</name></name> <operator pos:start="507:69" pos:end="507:70">==</operator> <name pos:start="507:72" pos:end="507:94">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="509:21" pos:end="509:44"><block_content pos:start="509:21" pos:end="509:44">

                    <expr_stmt pos:start="509:21" pos:end="509:44"><expr pos:start="509:21" pos:end="509:43"><name pos:start="509:21" pos:end="509:39"><name pos:start="509:21" pos:end="509:21">v</name><operator pos:start="509:22" pos:end="509:23">-&gt;</operator><name pos:start="509:24" pos:end="509:24">s</name><operator pos:start="509:25" pos:end="509:25">.</operator><name pos:start="509:26" pos:end="509:39">quarter_sample</name></name> <operator pos:start="509:41" pos:end="509:41">=</operator> <literal type="number" pos:start="509:43" pos:end="509:43">0</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="511:17" pos:end="513:44">else<block type="pseudo" pos:start="513:21" pos:end="513:44"><block_content pos:start="513:21" pos:end="513:44">

                    <expr_stmt pos:start="513:21" pos:end="513:44"><expr pos:start="513:21" pos:end="513:43"><name pos:start="513:21" pos:end="513:39"><name pos:start="513:21" pos:end="513:21">v</name><operator pos:start="513:22" pos:end="513:23">-&gt;</operator><name pos:start="513:24" pos:end="513:24">s</name><operator pos:start="513:25" pos:end="513:25">.</operator><name pos:start="513:26" pos:end="513:39">quarter_sample</name></name> <operator pos:start="513:41" pos:end="513:41">=</operator> <literal type="number" pos:start="513:43" pos:end="513:43">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="515:15" pos:end="517:40">else<block type="pseudo" pos:start="517:17" pos:end="517:40"><block_content pos:start="517:17" pos:end="517:40">

                <expr_stmt pos:start="517:17" pos:end="517:40"><expr pos:start="517:17" pos:end="517:39"><name pos:start="517:17" pos:end="517:35"><name pos:start="517:17" pos:end="517:17">v</name><operator pos:start="517:18" pos:end="517:19">-&gt;</operator><name pos:start="517:20" pos:end="517:20">s</name><operator pos:start="517:21" pos:end="517:21">.</operator><name pos:start="517:22" pos:end="517:35">quarter_sample</name></name> <operator pos:start="517:37" pos:end="517:37">=</operator> <literal type="number" pos:start="517:39" pos:end="517:39">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="519:13" pos:end="523:75"><expr pos:start="519:13" pos:end="523:74"><name pos:start="519:13" pos:end="519:22"><name pos:start="519:13" pos:end="519:13">v</name><operator pos:start="519:14" pos:end="519:15">-&gt;</operator><name pos:start="519:16" pos:end="519:16">s</name><operator pos:start="519:17" pos:end="519:17">.</operator><name pos:start="519:18" pos:end="519:22">mspel</name></name> <operator pos:start="519:24" pos:end="519:24">=</operator> <operator pos:start="519:26" pos:end="519:26">!</operator><operator pos:start="519:27" pos:end="519:27">(</operator><name pos:start="519:28" pos:end="519:37"><name pos:start="519:28" pos:end="519:28">v</name><operator pos:start="519:29" pos:end="519:30">-&gt;</operator><name pos:start="519:31" pos:end="519:37">mv_mode</name></name> <operator pos:start="519:39" pos:end="519:40">==</operator> <name pos:start="519:42" pos:end="519:64">MV_PMODE_1MV_HPEL_BILIN</name>

                           <operator pos:start="521:28" pos:end="521:29">||</operator> <operator pos:start="521:31" pos:end="521:31">(</operator><name pos:start="521:32" pos:end="521:41"><name pos:start="521:32" pos:end="521:32">v</name><operator pos:start="521:33" pos:end="521:34">-&gt;</operator><name pos:start="521:35" pos:end="521:41">mv_mode</name></name> <operator pos:start="521:43" pos:end="521:44">==</operator> <name pos:start="521:46" pos:end="521:68">MV_PMODE_INTENSITY_COMP</name>

                               <operator pos:start="523:32" pos:end="523:33">&amp;&amp;</operator> <name pos:start="523:35" pos:end="523:45"><name pos:start="523:35" pos:end="523:35">v</name><operator pos:start="523:36" pos:end="523:37">-&gt;</operator><name pos:start="523:38" pos:end="523:45">mv_mode2</name></name> <operator pos:start="523:47" pos:end="523:48">==</operator> <name pos:start="523:50" pos:end="523:72">MV_PMODE_1MV_HPEL_BILIN</name><operator pos:start="523:73" pos:end="523:73">)</operator><operator pos:start="523:74" pos:end="523:74">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="527:9" pos:end="613:9"><if pos:start="527:9" pos:end="571:9">if <condition pos:start="527:12" pos:end="527:34">(<expr pos:start="527:13" pos:end="527:33"><name pos:start="527:13" pos:end="527:18"><name pos:start="527:13" pos:end="527:13">v</name><operator pos:start="527:14" pos:end="527:15">-&gt;</operator><name pos:start="527:16" pos:end="527:18">fcm</name></name> <operator pos:start="527:20" pos:end="527:21">==</operator> <name pos:start="527:23" pos:end="527:33">PROGRESSIVE</name></expr>)</condition> <block pos:start="527:36" pos:end="571:9">{<block_content pos:start="529:13" pos:end="569:71"> <comment type="line" pos:start="527:38" pos:end="527:51">// progressive</comment>

            <if_stmt pos:start="529:13" pos:end="551:13"><if pos:start="529:13" pos:end="545:13">if <condition pos:start="529:16" pos:end="533:51">(<expr pos:start="529:17" pos:end="533:50"><operator pos:start="529:17" pos:end="529:17">(</operator><name pos:start="529:18" pos:end="529:27"><name pos:start="529:18" pos:end="529:18">v</name><operator pos:start="529:19" pos:end="529:20">-&gt;</operator><name pos:start="529:21" pos:end="529:27">mv_mode</name></name> <operator pos:start="529:29" pos:end="529:30">==</operator> <name pos:start="529:32" pos:end="529:54">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="529:56" pos:end="529:57">&amp;&amp;</operator>

                 <name pos:start="531:18" pos:end="531:28"><name pos:start="531:18" pos:end="531:18">v</name><operator pos:start="531:19" pos:end="531:20">-&gt;</operator><name pos:start="531:21" pos:end="531:28">mv_mode2</name></name> <operator pos:start="531:30" pos:end="531:31">==</operator> <name pos:start="531:33" pos:end="531:49">MV_PMODE_MIXED_MV</name><operator pos:start="531:50" pos:end="531:50">)</operator>

                <operator pos:start="533:17" pos:end="533:18">||</operator> <name pos:start="533:20" pos:end="533:29"><name pos:start="533:20" pos:end="533:20">v</name><operator pos:start="533:21" pos:end="533:22">-&gt;</operator><name pos:start="533:23" pos:end="533:29">mv_mode</name></name> <operator pos:start="533:31" pos:end="533:32">==</operator> <name pos:start="533:34" pos:end="533:50">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="533:53" pos:end="545:13">{<block_content pos:start="535:17" pos:end="543:71">

                <expr_stmt pos:start="535:17" pos:end="535:87"><expr pos:start="535:17" pos:end="535:86"><name pos:start="535:17" pos:end="535:22">status</name> <operator pos:start="535:24" pos:end="535:24">=</operator> <call pos:start="535:26" pos:end="535:86"><name pos:start="535:26" pos:end="535:42">bitplane_decoding</name><argument_list pos:start="535:43" pos:end="535:86">(<argument pos:start="535:44" pos:end="535:62"><expr pos:start="535:44" pos:end="535:62"><name pos:start="535:44" pos:end="535:62"><name pos:start="535:44" pos:end="535:44">v</name><operator pos:start="535:45" pos:end="535:46">-&gt;</operator><name pos:start="535:47" pos:end="535:62">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="535:65" pos:end="535:82"><expr pos:start="535:65" pos:end="535:82"><operator pos:start="535:65" pos:end="535:65">&amp;</operator><name pos:start="535:66" pos:end="535:82"><name pos:start="535:66" pos:end="535:66">v</name><operator pos:start="535:67" pos:end="535:68">-&gt;</operator><name pos:start="535:69" pos:end="535:82">mv_type_is_raw</name></name></expr></argument>, <argument pos:start="535:85" pos:end="535:85"><expr pos:start="535:85" pos:end="535:85"><name pos:start="535:85" pos:end="535:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="537:17" pos:end="539:30"><if pos:start="537:17" pos:end="539:30">if <condition pos:start="537:20" pos:end="537:31">(<expr pos:start="537:21" pos:end="537:30"><name pos:start="537:21" pos:end="537:26">status</name> <operator pos:start="537:28" pos:end="537:28">&lt;</operator> <literal type="number" pos:start="537:30" pos:end="537:30">0</literal></expr>)</condition><block type="pseudo" pos:start="539:21" pos:end="539:30"><block_content pos:start="539:21" pos:end="539:30">

                    <return pos:start="539:21" pos:end="539:30">return <expr pos:start="539:28" pos:end="539:29"><operator pos:start="539:28" pos:end="539:28">-</operator><literal type="number" pos:start="539:29" pos:end="539:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="541:17" pos:end="543:71"><expr pos:start="541:17" pos:end="543:70"><call pos:start="541:17" pos:end="543:70"><name pos:start="541:17" pos:end="541:22">av_log</name><argument_list pos:start="541:23" pos:end="543:70">(<argument pos:start="541:24" pos:end="541:33"><expr pos:start="541:24" pos:end="541:33"><name pos:start="541:24" pos:end="541:33"><name pos:start="541:24" pos:end="541:24">v</name><operator pos:start="541:25" pos:end="541:26">-&gt;</operator><name pos:start="541:27" pos:end="541:27">s</name><operator pos:start="541:28" pos:end="541:28">.</operator><name pos:start="541:29" pos:end="541:33">avctx</name></name></expr></argument>, <argument pos:start="541:36" pos:end="541:47"><expr pos:start="541:36" pos:end="541:47"><name pos:start="541:36" pos:end="541:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="541:50" pos:end="543:48"><expr pos:start="541:50" pos:end="543:48"><literal type="string" pos:start="541:50" pos:end="541:78">"MB MV Type plane encoding: "</literal>

                       <literal type="string" pos:start="543:24" pos:end="543:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="543:51" pos:end="543:59"><expr pos:start="543:51" pos:end="543:59"><name pos:start="543:51" pos:end="543:56">status</name><operator pos:start="543:57" pos:end="543:58">&gt;&gt;</operator><literal type="number" pos:start="543:59" pos:end="543:59">1</literal></expr></argument>, <argument pos:start="543:62" pos:end="543:69"><expr pos:start="543:62" pos:end="543:69"><name pos:start="543:62" pos:end="543:67">status</name><operator pos:start="543:68" pos:end="543:68">&amp;</operator><literal type="number" pos:start="543:69" pos:end="543:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="545:15" pos:end="551:13">else <block pos:start="545:20" pos:end="551:13">{<block_content pos:start="547:17" pos:end="549:80">

                <expr_stmt pos:start="547:17" pos:end="547:38"><expr pos:start="547:17" pos:end="547:37"><name pos:start="547:17" pos:end="547:33"><name pos:start="547:17" pos:end="547:17">v</name><operator pos:start="547:18" pos:end="547:19">-&gt;</operator><name pos:start="547:20" pos:end="547:33">mv_type_is_raw</name></name> <operator pos:start="547:35" pos:end="547:35">=</operator> <literal type="number" pos:start="547:37" pos:end="547:37">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:80"><expr pos:start="549:17" pos:end="549:79"><call pos:start="549:17" pos:end="549:79"><name pos:start="549:17" pos:end="549:22">memset</name><argument_list pos:start="549:23" pos:end="549:79">(<argument pos:start="549:24" pos:end="549:42"><expr pos:start="549:24" pos:end="549:42"><name pos:start="549:24" pos:end="549:42"><name pos:start="549:24" pos:end="549:24">v</name><operator pos:start="549:25" pos:end="549:26">-&gt;</operator><name pos:start="549:27" pos:end="549:42">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="549:45" pos:end="549:45"><expr pos:start="549:45" pos:end="549:45"><literal type="number" pos:start="549:45" pos:end="549:45">0</literal></expr></argument>, <argument pos:start="549:48" pos:end="549:78"><expr pos:start="549:48" pos:end="549:78"><name pos:start="549:48" pos:end="549:61"><name pos:start="549:48" pos:end="549:48">v</name><operator pos:start="549:49" pos:end="549:50">-&gt;</operator><name pos:start="549:51" pos:end="549:51">s</name><operator pos:start="549:52" pos:end="549:52">.</operator><name pos:start="549:53" pos:end="549:61">mb_stride</name></name> <operator pos:start="549:63" pos:end="549:63">*</operator> <name pos:start="549:65" pos:end="549:78"><name pos:start="549:65" pos:end="549:65">v</name><operator pos:start="549:66" pos:end="549:67">-&gt;</operator><name pos:start="549:68" pos:end="549:68">s</name><operator pos:start="549:69" pos:end="549:69">.</operator><name pos:start="549:70" pos:end="549:78">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:78"><expr pos:start="553:13" pos:end="553:77"><name pos:start="553:13" pos:end="553:18">status</name> <operator pos:start="553:20" pos:end="553:20">=</operator> <call pos:start="553:22" pos:end="553:77"><name pos:start="553:22" pos:end="553:38">bitplane_decoding</name><argument_list pos:start="553:39" pos:end="553:77">(<argument pos:start="553:40" pos:end="553:56"><expr pos:start="553:40" pos:end="553:56"><name pos:start="553:40" pos:end="553:56"><name pos:start="553:40" pos:end="553:40">v</name><operator pos:start="553:41" pos:end="553:42">-&gt;</operator><name pos:start="553:43" pos:end="553:43">s</name><operator pos:start="553:44" pos:end="553:44">.</operator><name pos:start="553:45" pos:end="553:56">mbskip_table</name></name></expr></argument>, <argument pos:start="553:59" pos:end="553:73"><expr pos:start="553:59" pos:end="553:73"><operator pos:start="553:59" pos:end="553:59">&amp;</operator><name pos:start="553:60" pos:end="553:73"><name pos:start="553:60" pos:end="553:60">v</name><operator pos:start="553:61" pos:end="553:62">-&gt;</operator><name pos:start="553:63" pos:end="553:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="553:76" pos:end="553:76"><expr pos:start="553:76" pos:end="553:76"><name pos:start="553:76" pos:end="553:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="555:13" pos:end="557:26"><if pos:start="555:13" pos:end="557:26">if <condition pos:start="555:16" pos:end="555:27">(<expr pos:start="555:17" pos:end="555:26"><name pos:start="555:17" pos:end="555:22">status</name> <operator pos:start="555:24" pos:end="555:24">&lt;</operator> <literal type="number" pos:start="555:26" pos:end="555:26">0</literal></expr>)</condition><block type="pseudo" pos:start="557:17" pos:end="557:26"><block_content pos:start="557:17" pos:end="557:26">

                <return pos:start="557:17" pos:end="557:26">return <expr pos:start="557:24" pos:end="557:25"><operator pos:start="557:24" pos:end="557:24">-</operator><literal type="number" pos:start="557:25" pos:end="557:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="559:13" pos:end="561:67"><expr pos:start="559:13" pos:end="561:66"><call pos:start="559:13" pos:end="561:66"><name pos:start="559:13" pos:end="559:18">av_log</name><argument_list pos:start="559:19" pos:end="561:66">(<argument pos:start="559:20" pos:end="559:29"><expr pos:start="559:20" pos:end="559:29"><name pos:start="559:20" pos:end="559:29"><name pos:start="559:20" pos:end="559:20">v</name><operator pos:start="559:21" pos:end="559:22">-&gt;</operator><name pos:start="559:23" pos:end="559:23">s</name><operator pos:start="559:24" pos:end="559:24">.</operator><name pos:start="559:25" pos:end="559:29">avctx</name></name></expr></argument>, <argument pos:start="559:32" pos:end="559:43"><expr pos:start="559:32" pos:end="559:43"><name pos:start="559:32" pos:end="559:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="559:46" pos:end="561:44"><expr pos:start="559:46" pos:end="561:44"><literal type="string" pos:start="559:46" pos:end="559:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="561:20" pos:end="561:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="561:47" pos:end="561:55"><expr pos:start="561:47" pos:end="561:55"><name pos:start="561:47" pos:end="561:52">status</name><operator pos:start="561:53" pos:end="561:54">&gt;&gt;</operator><literal type="number" pos:start="561:55" pos:end="561:55">1</literal></expr></argument>, <argument pos:start="561:58" pos:end="561:65"><expr pos:start="561:58" pos:end="561:65"><name pos:start="561:58" pos:end="561:63">status</name><operator pos:start="561:64" pos:end="561:64">&amp;</operator><literal type="number" pos:start="561:65" pos:end="561:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="565:13" pos:end="565:56">/* Hopefully this is correct for P frames */</comment>

            <expr_stmt pos:start="567:13" pos:end="567:50"><expr pos:start="567:13" pos:end="567:49"><name pos:start="567:13" pos:end="567:31"><name pos:start="567:13" pos:end="567:13">v</name><operator pos:start="567:14" pos:end="567:15">-&gt;</operator><name pos:start="567:16" pos:end="567:16">s</name><operator pos:start="567:17" pos:end="567:17">.</operator><name pos:start="567:18" pos:end="567:31">mv_table_index</name></name> <operator pos:start="567:33" pos:end="567:33">=</operator> <call pos:start="567:35" pos:end="567:49"><name pos:start="567:35" pos:end="567:42">get_bits</name><argument_list pos:start="567:43" pos:end="567:49">(<argument pos:start="567:44" pos:end="567:45"><expr pos:start="567:44" pos:end="567:45"><name pos:start="567:44" pos:end="567:45">gb</name></expr></argument>, <argument pos:start="567:48" pos:end="567:48"><expr pos:start="567:48" pos:end="567:48"><literal type="number" pos:start="567:48" pos:end="567:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="567:52" pos:end="567:77">//but using ff_vc1_ tables</comment>

            <expr_stmt pos:start="569:13" pos:end="569:71"><expr pos:start="569:13" pos:end="569:70"><name pos:start="569:13" pos:end="569:24"><name pos:start="569:13" pos:end="569:13">v</name><operator pos:start="569:14" pos:end="569:15">-&gt;</operator><name pos:start="569:16" pos:end="569:24">cbpcy_vlc</name></name>        <operator pos:start="569:33" pos:end="569:33">=</operator> <operator pos:start="569:35" pos:end="569:35">&amp;</operator><name pos:start="569:36" pos:end="569:70"><name pos:start="569:36" pos:end="569:53">ff_vc1_cbpcy_p_vlc</name><index pos:start="569:54" pos:end="569:70">[<expr pos:start="569:55" pos:end="569:69"><call pos:start="569:55" pos:end="569:69"><name pos:start="569:55" pos:end="569:62">get_bits</name><argument_list pos:start="569:63" pos:end="569:69">(<argument pos:start="569:64" pos:end="569:65"><expr pos:start="569:64" pos:end="569:65"><name pos:start="569:64" pos:end="569:65">gb</name></expr></argument>, <argument pos:start="569:68" pos:end="569:68"><expr pos:start="569:68" pos:end="569:68"><literal type="number" pos:start="569:68" pos:end="569:68">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="571:11" pos:end="579:9">else if <condition pos:start="571:19" pos:end="571:41">(<expr pos:start="571:20" pos:end="571:40"><name pos:start="571:20" pos:end="571:25"><name pos:start="571:20" pos:end="571:20">v</name><operator pos:start="571:21" pos:end="571:22">-&gt;</operator><name pos:start="571:23" pos:end="571:25">fcm</name></name> <operator pos:start="571:27" pos:end="571:28">==</operator> <name pos:start="571:30" pos:end="571:40">ILACE_FRAME</name></expr>)</condition> <block pos:start="571:43" pos:end="579:9">{<block_content pos:start="573:13" pos:end="577:36"> <comment type="line" pos:start="571:45" pos:end="571:63">// frame interlaced</comment>

            <expr_stmt pos:start="573:13" pos:end="573:54"><expr pos:start="573:13" pos:end="573:53"><name pos:start="573:13" pos:end="573:22"><name pos:start="573:13" pos:end="573:13">v</name><operator pos:start="573:14" pos:end="573:15">-&gt;</operator><name pos:start="573:16" pos:end="573:22">qs_last</name></name>          <operator pos:start="573:33" pos:end="573:33">=</operator> <name pos:start="573:35" pos:end="573:53"><name pos:start="573:35" pos:end="573:35">v</name><operator pos:start="573:36" pos:end="573:37">-&gt;</operator><name pos:start="573:38" pos:end="573:38">s</name><operator pos:start="573:39" pos:end="573:39">.</operator><name pos:start="573:40" pos:end="573:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="575:13" pos:end="575:36"><expr pos:start="575:13" pos:end="575:35"><name pos:start="575:13" pos:end="575:31"><name pos:start="575:13" pos:end="575:13">v</name><operator pos:start="575:14" pos:end="575:15">-&gt;</operator><name pos:start="575:16" pos:end="575:16">s</name><operator pos:start="575:17" pos:end="575:17">.</operator><name pos:start="575:18" pos:end="575:31">quarter_sample</name></name> <operator pos:start="575:33" pos:end="575:33">=</operator> <literal type="number" pos:start="575:35" pos:end="575:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:36"><expr pos:start="577:13" pos:end="577:35"><name pos:start="577:13" pos:end="577:22"><name pos:start="577:13" pos:end="577:13">v</name><operator pos:start="577:14" pos:end="577:15">-&gt;</operator><name pos:start="577:16" pos:end="577:16">s</name><operator pos:start="577:17" pos:end="577:17">.</operator><name pos:start="577:18" pos:end="577:22">mspel</name></name>          <operator pos:start="577:33" pos:end="577:33">=</operator> <literal type="number" pos:start="577:35" pos:end="577:35">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="579:11" pos:end="613:9">else <block pos:start="579:16" pos:end="613:9">{<block_content pos:start="581:13" pos:end="611:13">    <comment type="line" pos:start="579:21" pos:end="579:39">// field interlaced</comment>

            <expr_stmt pos:start="581:13" pos:end="581:40"><expr pos:start="581:13" pos:end="581:39"><name pos:start="581:13" pos:end="581:21">mbmodetab</name> <operator pos:start="581:23" pos:end="581:23">=</operator> <call pos:start="581:25" pos:end="581:39"><name pos:start="581:25" pos:end="581:32">get_bits</name><argument_list pos:start="581:33" pos:end="581:39">(<argument pos:start="581:34" pos:end="581:35"><expr pos:start="581:34" pos:end="581:35"><name pos:start="581:34" pos:end="581:35">gb</name></expr></argument>, <argument pos:start="581:38" pos:end="581:38"><expr pos:start="581:38" pos:end="581:38"><literal type="number" pos:start="581:38" pos:end="581:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:49"><expr pos:start="583:13" pos:end="583:48"><name pos:start="583:13" pos:end="583:18">imvtab</name> <operator pos:start="583:20" pos:end="583:20">=</operator> <call pos:start="583:22" pos:end="583:48"><name pos:start="583:22" pos:end="583:29">get_bits</name><argument_list pos:start="583:30" pos:end="583:48">(<argument pos:start="583:31" pos:end="583:32"><expr pos:start="583:31" pos:end="583:32"><name pos:start="583:31" pos:end="583:32">gb</name></expr></argument>, <argument pos:start="583:35" pos:end="583:47"><expr pos:start="583:35" pos:end="583:47"><literal type="number" pos:start="583:35" pos:end="583:37">2</literal> <operator pos:start="583:37" pos:end="583:37">+</operator> <name pos:start="583:39" pos:end="583:47"><name pos:start="583:39" pos:end="583:39">v</name><operator pos:start="583:40" pos:end="583:41">-&gt;</operator><name pos:start="583:42" pos:end="583:47">numref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="585:13" pos:end="591:61"><if pos:start="585:13" pos:end="587:61">if <condition pos:start="585:16" pos:end="585:27">(<expr pos:start="585:17" pos:end="585:26"><operator pos:start="585:17" pos:end="585:17">!</operator><name pos:start="585:18" pos:end="585:26"><name pos:start="585:18" pos:end="585:18">v</name><operator pos:start="585:19" pos:end="585:20">-&gt;</operator><name pos:start="585:21" pos:end="585:26">numref</name></name></expr>)</condition><block type="pseudo" pos:start="587:17" pos:end="587:61"><block_content pos:start="587:17" pos:end="587:61">

                <expr_stmt pos:start="587:17" pos:end="587:61"><expr pos:start="587:17" pos:end="587:60"><name pos:start="587:17" pos:end="587:26"><name pos:start="587:17" pos:end="587:17">v</name><operator pos:start="587:18" pos:end="587:19">-&gt;</operator><name pos:start="587:20" pos:end="587:26">imv_vlc</name></name> <operator pos:start="587:28" pos:end="587:28">=</operator> <operator pos:start="587:30" pos:end="587:30">&amp;</operator><name pos:start="587:31" pos:end="587:60"><name pos:start="587:31" pos:end="587:52">ff_vc1_1ref_mvdata_vlc</name><index pos:start="587:53" pos:end="587:60">[<expr pos:start="587:54" pos:end="587:59"><name pos:start="587:54" pos:end="587:59">imvtab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="589:13" pos:end="591:61">else<block type="pseudo" pos:start="591:17" pos:end="591:61"><block_content pos:start="591:17" pos:end="591:61">

                <expr_stmt pos:start="591:17" pos:end="591:61"><expr pos:start="591:17" pos:end="591:60"><name pos:start="591:17" pos:end="591:26"><name pos:start="591:17" pos:end="591:17">v</name><operator pos:start="591:18" pos:end="591:19">-&gt;</operator><name pos:start="591:20" pos:end="591:26">imv_vlc</name></name> <operator pos:start="591:28" pos:end="591:28">=</operator> <operator pos:start="591:30" pos:end="591:30">&amp;</operator><name pos:start="591:31" pos:end="591:60"><name pos:start="591:31" pos:end="591:52">ff_vc1_2ref_mvdata_vlc</name><index pos:start="591:53" pos:end="591:60">[<expr pos:start="591:54" pos:end="591:59"><name pos:start="591:54" pos:end="591:59">imvtab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:38"><expr pos:start="593:13" pos:end="593:37"><name pos:start="593:13" pos:end="593:19">icbptab</name> <operator pos:start="593:21" pos:end="593:21">=</operator> <call pos:start="593:23" pos:end="593:37"><name pos:start="593:23" pos:end="593:30">get_bits</name><argument_list pos:start="593:31" pos:end="593:37">(<argument pos:start="593:32" pos:end="593:33"><expr pos:start="593:32" pos:end="593:33"><name pos:start="593:32" pos:end="593:33">gb</name></expr></argument>, <argument pos:start="593:36" pos:end="593:36"><expr pos:start="593:36" pos:end="593:36"><literal type="number" pos:start="593:36" pos:end="593:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:55"><expr pos:start="595:13" pos:end="595:54"><name pos:start="595:13" pos:end="595:24"><name pos:start="595:13" pos:end="595:13">v</name><operator pos:start="595:14" pos:end="595:15">-&gt;</operator><name pos:start="595:16" pos:end="595:24">cbpcy_vlc</name></name> <operator pos:start="595:26" pos:end="595:26">=</operator> <operator pos:start="595:28" pos:end="595:28">&amp;</operator><name pos:start="595:29" pos:end="595:54"><name pos:start="595:29" pos:end="595:45">ff_vc1_icbpcy_vlc</name><index pos:start="595:46" pos:end="595:54">[<expr pos:start="595:47" pos:end="595:53"><name pos:start="595:47" pos:end="595:53">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="597:13" pos:end="611:13"><if pos:start="597:13" pos:end="607:13">if <condition pos:start="597:16" pos:end="599:85">(<expr pos:start="597:17" pos:end="599:84"><operator pos:start="597:17" pos:end="597:17">(</operator><name pos:start="597:18" pos:end="597:27"><name pos:start="597:18" pos:end="597:18">v</name><operator pos:start="597:19" pos:end="597:20">-&gt;</operator><name pos:start="597:21" pos:end="597:27">mv_mode</name></name> <operator pos:start="597:29" pos:end="597:30">==</operator> <name pos:start="597:32" pos:end="597:54">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="597:56" pos:end="597:57">&amp;&amp;</operator>

                <name pos:start="599:17" pos:end="599:27"><name pos:start="599:17" pos:end="599:17">v</name><operator pos:start="599:18" pos:end="599:19">-&gt;</operator><name pos:start="599:20" pos:end="599:27">mv_mode2</name></name> <operator pos:start="599:29" pos:end="599:30">==</operator> <name pos:start="599:32" pos:end="599:48">MV_PMODE_MIXED_MV</name><operator pos:start="599:49" pos:end="599:49">)</operator> <operator pos:start="599:51" pos:end="599:52">||</operator> <name pos:start="599:54" pos:end="599:63"><name pos:start="599:54" pos:end="599:54">v</name><operator pos:start="599:55" pos:end="599:56">-&gt;</operator><name pos:start="599:57" pos:end="599:63">mv_mode</name></name> <operator pos:start="599:65" pos:end="599:66">==</operator> <name pos:start="599:68" pos:end="599:84">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="599:87" pos:end="607:13">{<block_content pos:start="601:17" pos:end="605:69">

                <expr_stmt pos:start="601:17" pos:end="601:50"><expr pos:start="601:17" pos:end="601:49"><name pos:start="601:17" pos:end="601:27">fourmvbptab</name>     <operator pos:start="601:33" pos:end="601:33">=</operator> <call pos:start="601:35" pos:end="601:49"><name pos:start="601:35" pos:end="601:42">get_bits</name><argument_list pos:start="601:43" pos:end="601:49">(<argument pos:start="601:44" pos:end="601:45"><expr pos:start="601:44" pos:end="601:45"><name pos:start="601:44" pos:end="601:45">gb</name></expr></argument>, <argument pos:start="601:48" pos:end="601:48"><expr pos:start="601:48" pos:end="601:48"><literal type="number" pos:start="601:48" pos:end="601:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:77"><expr pos:start="603:17" pos:end="603:76"><name pos:start="603:17" pos:end="603:31"><name pos:start="603:17" pos:end="603:17">v</name><operator pos:start="603:18" pos:end="603:19">-&gt;</operator><name pos:start="603:20" pos:end="603:31">fourmvbp_vlc</name></name> <operator pos:start="603:33" pos:end="603:33">=</operator> <operator pos:start="603:35" pos:end="603:35">&amp;</operator><name pos:start="603:36" pos:end="603:76"><name pos:start="603:36" pos:end="603:63">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="603:64" pos:end="603:76">[<expr pos:start="603:65" pos:end="603:75"><name pos:start="603:65" pos:end="603:75">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:69"><expr pos:start="605:17" pos:end="605:68"><name pos:start="605:17" pos:end="605:29"><name pos:start="605:17" pos:end="605:17">v</name><operator pos:start="605:18" pos:end="605:19">-&gt;</operator><name pos:start="605:20" pos:end="605:29">mbmode_vlc</name></name> <operator pos:start="605:31" pos:end="605:31">=</operator> <operator pos:start="605:33" pos:end="605:33">&amp;</operator><name pos:start="605:34" pos:end="605:68"><name pos:start="605:34" pos:end="605:57">ff_vc1_if_mmv_mbmode_vlc</name><index pos:start="605:58" pos:end="605:68">[<expr pos:start="605:59" pos:end="605:67"><name pos:start="605:59" pos:end="605:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="607:15" pos:end="611:13">else <block pos:start="607:20" pos:end="611:13">{<block_content pos:start="609:17" pos:end="609:69">

                <expr_stmt pos:start="609:17" pos:end="609:69"><expr pos:start="609:17" pos:end="609:68"><name pos:start="609:17" pos:end="609:29"><name pos:start="609:17" pos:end="609:17">v</name><operator pos:start="609:18" pos:end="609:19">-&gt;</operator><name pos:start="609:20" pos:end="609:29">mbmode_vlc</name></name> <operator pos:start="609:31" pos:end="609:31">=</operator> <operator pos:start="609:33" pos:end="609:33">&amp;</operator><name pos:start="609:34" pos:end="609:68"><name pos:start="609:34" pos:end="609:57">ff_vc1_if_1mv_mbmode_vlc</name><index pos:start="609:58" pos:end="609:68">[<expr pos:start="609:59" pos:end="609:67"><name pos:start="609:59" pos:end="609:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="615:9" pos:end="621:9"><if pos:start="615:9" pos:end="621:9">if <condition pos:start="615:12" pos:end="615:22">(<expr pos:start="615:13" pos:end="615:21"><name pos:start="615:13" pos:end="615:21"><name pos:start="615:13" pos:end="615:13">v</name><operator pos:start="615:14" pos:end="615:15">-&gt;</operator><name pos:start="615:16" pos:end="615:21">dquant</name></name></expr>)</condition> <block pos:start="615:24" pos:end="621:9">{<block_content pos:start="617:13" pos:end="619:35">

            <expr_stmt pos:start="617:13" pos:end="617:66"><expr pos:start="617:13" pos:end="617:65"><call pos:start="617:13" pos:end="617:65"><name pos:start="617:13" pos:end="617:18">av_log</name><argument_list pos:start="617:19" pos:end="617:65">(<argument pos:start="617:20" pos:end="617:29"><expr pos:start="617:20" pos:end="617:29"><name pos:start="617:20" pos:end="617:29"><name pos:start="617:20" pos:end="617:20">v</name><operator pos:start="617:21" pos:end="617:22">-&gt;</operator><name pos:start="617:23" pos:end="617:23">s</name><operator pos:start="617:24" pos:end="617:24">.</operator><name pos:start="617:25" pos:end="617:29">avctx</name></name></expr></argument>, <argument pos:start="617:32" pos:end="617:43"><expr pos:start="617:32" pos:end="617:43"><name pos:start="617:32" pos:end="617:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="617:46" pos:end="617:64"><expr pos:start="617:46" pos:end="617:64"><literal type="string" pos:start="617:46" pos:end="617:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="619:13" pos:end="619:35"><expr pos:start="619:13" pos:end="619:34"><call pos:start="619:13" pos:end="619:34"><name pos:start="619:13" pos:end="619:31">vop_dquant_decoding</name><argument_list pos:start="619:32" pos:end="619:34">(<argument pos:start="619:33" pos:end="619:33"><expr pos:start="619:33" pos:end="619:33"><name pos:start="619:33" pos:end="619:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="625:9" pos:end="625:21"><expr pos:start="625:9" pos:end="625:20"><name pos:start="625:9" pos:end="625:16"><name pos:start="625:9" pos:end="625:9">v</name><operator pos:start="625:10" pos:end="625:11">-&gt;</operator><name pos:start="625:12" pos:end="625:16">ttfrm</name></name> <operator pos:start="625:18" pos:end="625:18">=</operator> <literal type="number" pos:start="625:20" pos:end="625:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="625:23" pos:end="625:42">//FIXME Is that so ?</comment>

        <if_stmt pos:start="627:9" pos:end="643:9"><if pos:start="627:9" pos:end="637:9">if <condition pos:start="627:12" pos:end="627:27">(<expr pos:start="627:13" pos:end="627:26"><name pos:start="627:13" pos:end="627:26"><name pos:start="627:13" pos:end="627:13">v</name><operator pos:start="627:14" pos:end="627:15">-&gt;</operator><name pos:start="627:16" pos:end="627:26">vstransform</name></name></expr>)</condition> <block pos:start="627:29" pos:end="637:9">{<block_content pos:start="629:13" pos:end="635:13">

            <expr_stmt pos:start="629:13" pos:end="629:37"><expr pos:start="629:13" pos:end="629:36"><name pos:start="629:13" pos:end="629:20"><name pos:start="629:13" pos:end="629:13">v</name><operator pos:start="629:14" pos:end="629:15">-&gt;</operator><name pos:start="629:16" pos:end="629:20">ttmbf</name></name> <operator pos:start="629:22" pos:end="629:22">=</operator> <call pos:start="629:24" pos:end="629:36"><name pos:start="629:24" pos:end="629:32">get_bits1</name><argument_list pos:start="629:33" pos:end="629:36">(<argument pos:start="629:34" pos:end="629:35"><expr pos:start="629:34" pos:end="629:35"><name pos:start="629:34" pos:end="629:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="631:13" pos:end="635:13"><if pos:start="631:13" pos:end="635:13">if <condition pos:start="631:16" pos:end="631:25">(<expr pos:start="631:17" pos:end="631:24"><name pos:start="631:17" pos:end="631:24"><name pos:start="631:17" pos:end="631:17">v</name><operator pos:start="631:18" pos:end="631:19">-&gt;</operator><name pos:start="631:20" pos:end="631:24">ttmbf</name></name></expr>)</condition> <block pos:start="631:27" pos:end="635:13">{<block_content pos:start="633:17" pos:end="633:63">

                <expr_stmt pos:start="633:17" pos:end="633:63"><expr pos:start="633:17" pos:end="633:62"><name pos:start="633:17" pos:end="633:24"><name pos:start="633:17" pos:end="633:17">v</name><operator pos:start="633:18" pos:end="633:19">-&gt;</operator><name pos:start="633:20" pos:end="633:24">ttfrm</name></name> <operator pos:start="633:26" pos:end="633:26">=</operator> <name pos:start="633:28" pos:end="633:62"><name pos:start="633:28" pos:end="633:45">ff_vc1_ttfrm_to_tt</name><index pos:start="633:46" pos:end="633:62">[<expr pos:start="633:47" pos:end="633:61"><call pos:start="633:47" pos:end="633:61"><name pos:start="633:47" pos:end="633:54">get_bits</name><argument_list pos:start="633:55" pos:end="633:61">(<argument pos:start="633:56" pos:end="633:57"><expr pos:start="633:56" pos:end="633:57"><name pos:start="633:56" pos:end="633:57">gb</name></expr></argument>, <argument pos:start="633:60" pos:end="633:60"><expr pos:start="633:60" pos:end="633:60"><literal type="number" pos:start="633:60" pos:end="633:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="637:11" pos:end="643:9">else <block pos:start="637:16" pos:end="643:9">{<block_content pos:start="639:13" pos:end="641:30">

            <expr_stmt pos:start="639:13" pos:end="639:25"><expr pos:start="639:13" pos:end="639:24"><name pos:start="639:13" pos:end="639:20"><name pos:start="639:13" pos:end="639:13">v</name><operator pos:start="639:14" pos:end="639:15">-&gt;</operator><name pos:start="639:16" pos:end="639:20">ttmbf</name></name> <operator pos:start="639:22" pos:end="639:22">=</operator> <literal type="number" pos:start="639:24" pos:end="639:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:30"><expr pos:start="641:13" pos:end="641:29"><name pos:start="641:13" pos:end="641:20"><name pos:start="641:13" pos:end="641:13">v</name><operator pos:start="641:14" pos:end="641:15">-&gt;</operator><name pos:start="641:16" pos:end="641:20">ttfrm</name></name> <operator pos:start="641:22" pos:end="641:22">=</operator> <name pos:start="641:24" pos:end="641:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="645:9" pos:end="645:14">break;</break>

    <case pos:start="647:5" pos:end="647:27">case <expr pos:start="647:10" pos:end="647:26"><name pos:start="647:10" pos:end="647:26">AV_PICTURE_TYPE_B</name></expr>:</case>

        <if_stmt pos:start="649:9" pos:end="661:9"><if pos:start="649:9" pos:end="661:9">if <condition pos:start="649:12" pos:end="649:34">(<expr pos:start="649:13" pos:end="649:33"><name pos:start="649:13" pos:end="649:18"><name pos:start="649:13" pos:end="649:13">v</name><operator pos:start="649:14" pos:end="649:15">-&gt;</operator><name pos:start="649:16" pos:end="649:18">fcm</name></name> <operator pos:start="649:20" pos:end="649:21">==</operator> <name pos:start="649:23" pos:end="649:33">ILACE_FRAME</name></expr>)</condition> <block pos:start="649:36" pos:end="661:9">{<block_content pos:start="651:13" pos:end="659:13">

            <expr_stmt pos:start="651:13" pos:end="651:105"><expr pos:start="651:13" pos:end="651:104"><name pos:start="651:13" pos:end="651:34"><name pos:start="651:13" pos:end="651:13">v</name><operator pos:start="651:14" pos:end="651:15">-&gt;</operator><name pos:start="651:16" pos:end="651:34">bfraction_lut_index</name></name> <operator pos:start="651:36" pos:end="651:36">=</operator> <call pos:start="651:38" pos:end="651:104"><name pos:start="651:38" pos:end="651:45">get_vlc2</name><argument_list pos:start="651:46" pos:end="651:104">(<argument pos:start="651:47" pos:end="651:48"><expr pos:start="651:47" pos:end="651:48"><name pos:start="651:47" pos:end="651:48">gb</name></expr></argument>, <argument pos:start="651:51" pos:end="651:76"><expr pos:start="651:51" pos:end="651:76"><name pos:start="651:51" pos:end="651:76"><name pos:start="651:51" pos:end="651:70">ff_vc1_bfraction_vlc</name><operator pos:start="651:71" pos:end="651:71">.</operator><name pos:start="651:72" pos:end="651:76">table</name></name></expr></argument>, <argument pos:start="651:79" pos:end="651:100"><expr pos:start="651:79" pos:end="651:100"><name pos:start="651:79" pos:end="651:100">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="651:103" pos:end="651:103"><expr pos:start="651:103" pos:end="651:103"><literal type="number" pos:start="651:103" pos:end="651:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="653:13" pos:end="653:82"><expr pos:start="653:13" pos:end="653:81"><name pos:start="653:13" pos:end="653:24"><name pos:start="653:13" pos:end="653:13">v</name><operator pos:start="653:14" pos:end="653:15">-&gt;</operator><name pos:start="653:16" pos:end="653:24">bfraction</name></name>           <operator pos:start="653:36" pos:end="653:36">=</operator> <name pos:start="653:38" pos:end="653:81"><name pos:start="653:38" pos:end="653:57">ff_vc1_bfraction_lut</name><index pos:start="653:58" pos:end="653:81">[<expr pos:start="653:59" pos:end="653:80"><name pos:start="653:59" pos:end="653:80"><name pos:start="653:59" pos:end="653:59">v</name><operator pos:start="653:60" pos:end="653:61">-&gt;</operator><name pos:start="653:62" pos:end="653:80">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="655:13" pos:end="659:13"><if pos:start="655:13" pos:end="659:13">if <condition pos:start="655:16" pos:end="655:34">(<expr pos:start="655:17" pos:end="655:33"><name pos:start="655:17" pos:end="655:28"><name pos:start="655:17" pos:end="655:17">v</name><operator pos:start="655:18" pos:end="655:19">-&gt;</operator><name pos:start="655:20" pos:end="655:28">bfraction</name></name> <operator pos:start="655:30" pos:end="655:31">==</operator> <literal type="number" pos:start="655:33" pos:end="655:33">0</literal></expr>)</condition> <block pos:start="655:36" pos:end="659:13">{<block_content pos:start="657:17" pos:end="657:26">

                <return pos:start="657:17" pos:end="657:26">return <expr pos:start="657:24" pos:end="657:25"><operator pos:start="657:24" pos:end="657:24">-</operator><literal type="number" pos:start="657:25" pos:end="657:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="663:9" pos:end="669:27"><if pos:start="663:9" pos:end="665:45">if <condition pos:start="663:12" pos:end="663:27">(<expr pos:start="663:13" pos:end="663:26"><name pos:start="663:13" pos:end="663:26"><name pos:start="663:13" pos:end="663:13">v</name><operator pos:start="663:14" pos:end="663:15">-&gt;</operator><name pos:start="663:16" pos:end="663:26">extended_mv</name></name></expr>)</condition><block type="pseudo" pos:start="665:13" pos:end="665:45"><block_content pos:start="665:13" pos:end="665:45">

            <expr_stmt pos:start="665:13" pos:end="665:45"><expr pos:start="665:13" pos:end="665:44"><name pos:start="665:13" pos:end="665:22"><name pos:start="665:13" pos:end="665:13">v</name><operator pos:start="665:14" pos:end="665:15">-&gt;</operator><name pos:start="665:16" pos:end="665:22">mvrange</name></name> <operator pos:start="665:24" pos:end="665:24">=</operator> <call pos:start="665:26" pos:end="665:44"><name pos:start="665:26" pos:end="665:34">get_unary</name><argument_list pos:start="665:35" pos:end="665:44">(<argument pos:start="665:36" pos:end="665:37"><expr pos:start="665:36" pos:end="665:37"><name pos:start="665:36" pos:end="665:37">gb</name></expr></argument>, <argument pos:start="665:40" pos:end="665:40"><expr pos:start="665:40" pos:end="665:40"><literal type="number" pos:start="665:40" pos:end="665:40">0</literal></expr></argument>, <argument pos:start="665:43" pos:end="665:43"><expr pos:start="665:43" pos:end="665:43"><literal type="number" pos:start="665:43" pos:end="665:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="667:9" pos:end="669:27">else<block type="pseudo" pos:start="669:13" pos:end="669:27"><block_content pos:start="669:13" pos:end="669:27">

            <expr_stmt pos:start="669:13" pos:end="669:27"><expr pos:start="669:13" pos:end="669:26"><name pos:start="669:13" pos:end="669:22"><name pos:start="669:13" pos:end="669:13">v</name><operator pos:start="669:14" pos:end="669:15">-&gt;</operator><name pos:start="669:16" pos:end="669:22">mvrange</name></name> <operator pos:start="669:24" pos:end="669:24">=</operator> <literal type="number" pos:start="669:26" pos:end="669:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="671:9" pos:end="671:56"><expr pos:start="671:9" pos:end="671:55"><name pos:start="671:9" pos:end="671:14"><name pos:start="671:9" pos:end="671:9">v</name><operator pos:start="671:10" pos:end="671:11">-&gt;</operator><name pos:start="671:12" pos:end="671:14">k_x</name></name>     <operator pos:start="671:20" pos:end="671:20">=</operator> <name pos:start="671:22" pos:end="671:31"><name pos:start="671:22" pos:end="671:22">v</name><operator pos:start="671:23" pos:end="671:24">-&gt;</operator><name pos:start="671:25" pos:end="671:31">mvrange</name></name> <operator pos:start="671:33" pos:end="671:33">+</operator> <literal type="number" pos:start="671:35" pos:end="671:37">9</literal> <operator pos:start="671:37" pos:end="671:37">+</operator> <operator pos:start="671:39" pos:end="671:39">(</operator><name pos:start="671:40" pos:end="671:49"><name pos:start="671:40" pos:end="671:40">v</name><operator pos:start="671:41" pos:end="671:42">-&gt;</operator><name pos:start="671:43" pos:end="671:49">mvrange</name></name> <operator pos:start="671:51" pos:end="671:52">&gt;&gt;</operator> <literal type="number" pos:start="671:54" pos:end="671:54">1</literal><operator pos:start="671:55" pos:end="671:55">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="671:58" pos:end="671:80">//k_x can be 9 10 12 13</comment>

        <expr_stmt pos:start="673:9" pos:end="673:36"><expr pos:start="673:9" pos:end="673:35"><name pos:start="673:9" pos:end="673:14"><name pos:start="673:9" pos:end="673:9">v</name><operator pos:start="673:10" pos:end="673:11">-&gt;</operator><name pos:start="673:12" pos:end="673:14">k_y</name></name>     <operator pos:start="673:20" pos:end="673:20">=</operator> <name pos:start="673:22" pos:end="673:31"><name pos:start="673:22" pos:end="673:22">v</name><operator pos:start="673:23" pos:end="673:24">-&gt;</operator><name pos:start="673:25" pos:end="673:31">mvrange</name></name> <operator pos:start="673:33" pos:end="673:33">+</operator> <literal type="number" pos:start="673:35" pos:end="673:35">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="673:38" pos:end="673:59">//k_y can be 8 9 10 11</comment>

        <expr_stmt pos:start="675:9" pos:end="675:39"><expr pos:start="675:9" pos:end="675:38"><name pos:start="675:9" pos:end="675:18"><name pos:start="675:9" pos:end="675:9">v</name><operator pos:start="675:10" pos:end="675:11">-&gt;</operator><name pos:start="675:12" pos:end="675:18">range_x</name></name> <operator pos:start="675:20" pos:end="675:20">=</operator> <literal type="number" pos:start="675:22" pos:end="675:22">1</literal> <operator pos:start="675:24" pos:end="675:25">&lt;&lt;</operator> <operator pos:start="675:27" pos:end="675:27">(</operator><name pos:start="675:28" pos:end="675:33"><name pos:start="675:28" pos:end="675:28">v</name><operator pos:start="675:29" pos:end="675:30">-&gt;</operator><name pos:start="675:31" pos:end="675:33">k_x</name></name> <operator pos:start="675:35" pos:end="675:35">-</operator> <literal type="number" pos:start="675:37" pos:end="675:37">1</literal><operator pos:start="675:38" pos:end="675:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="677:9" pos:end="677:39"><expr pos:start="677:9" pos:end="677:38"><name pos:start="677:9" pos:end="677:18"><name pos:start="677:9" pos:end="677:9">v</name><operator pos:start="677:10" pos:end="677:11">-&gt;</operator><name pos:start="677:12" pos:end="677:18">range_y</name></name> <operator pos:start="677:20" pos:end="677:20">=</operator> <literal type="number" pos:start="677:22" pos:end="677:22">1</literal> <operator pos:start="677:24" pos:end="677:25">&lt;&lt;</operator> <operator pos:start="677:27" pos:end="677:27">(</operator><name pos:start="677:28" pos:end="677:33"><name pos:start="677:28" pos:end="677:28">v</name><operator pos:start="677:29" pos:end="677:30">-&gt;</operator><name pos:start="677:31" pos:end="677:33">k_y</name></name> <operator pos:start="677:35" pos:end="677:35">-</operator> <literal type="number" pos:start="677:37" pos:end="677:37">1</literal><operator pos:start="677:38" pos:end="677:38">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="681:9" pos:end="691:28"><if pos:start="681:9" pos:end="683:28">if <condition pos:start="681:12" pos:end="681:22">(<expr pos:start="681:13" pos:end="681:21"><name pos:start="681:13" pos:end="681:17"><name pos:start="681:13" pos:end="681:13">v</name><operator pos:start="681:14" pos:end="681:15">-&gt;</operator><name pos:start="681:16" pos:end="681:17">pq</name></name> <operator pos:start="681:19" pos:end="681:19">&lt;</operator> <literal type="number" pos:start="681:21" pos:end="681:21">5</literal></expr>)</condition><block type="pseudo" pos:start="683:13" pos:end="683:28"><block_content pos:start="683:13" pos:end="683:28">

            <expr_stmt pos:start="683:13" pos:end="683:28"><expr pos:start="683:13" pos:end="683:27"><name pos:start="683:13" pos:end="683:23"><name pos:start="683:13" pos:end="683:13">v</name><operator pos:start="683:14" pos:end="683:15">-&gt;</operator><name pos:start="683:16" pos:end="683:23">tt_index</name></name> <operator pos:start="683:25" pos:end="683:25">=</operator> <literal type="number" pos:start="683:27" pos:end="683:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="685:9" pos:end="687:28">else if <condition pos:start="685:17" pos:end="685:28">(<expr pos:start="685:18" pos:end="685:27"><name pos:start="685:18" pos:end="685:22"><name pos:start="685:18" pos:end="685:18">v</name><operator pos:start="685:19" pos:end="685:20">-&gt;</operator><name pos:start="685:21" pos:end="685:22">pq</name></name> <operator pos:start="685:24" pos:end="685:24">&lt;</operator> <literal type="number" pos:start="685:26" pos:end="685:27">13</literal></expr>)</condition><block type="pseudo" pos:start="687:13" pos:end="687:28"><block_content pos:start="687:13" pos:end="687:28">

            <expr_stmt pos:start="687:13" pos:end="687:28"><expr pos:start="687:13" pos:end="687:27"><name pos:start="687:13" pos:end="687:23"><name pos:start="687:13" pos:end="687:13">v</name><operator pos:start="687:14" pos:end="687:15">-&gt;</operator><name pos:start="687:16" pos:end="687:23">tt_index</name></name> <operator pos:start="687:25" pos:end="687:25">=</operator> <literal type="number" pos:start="687:27" pos:end="687:27">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="689:9" pos:end="691:28">else<block type="pseudo" pos:start="691:13" pos:end="691:28"><block_content pos:start="691:13" pos:end="691:28">

            <expr_stmt pos:start="691:13" pos:end="691:28"><expr pos:start="691:13" pos:end="691:27"><name pos:start="691:13" pos:end="691:23"><name pos:start="691:13" pos:end="691:13">v</name><operator pos:start="691:14" pos:end="691:15">-&gt;</operator><name pos:start="691:16" pos:end="691:23">tt_index</name></name> <operator pos:start="691:25" pos:end="691:25">=</operator> <literal type="number" pos:start="691:27" pos:end="691:27">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="695:9" pos:end="851:9"><if pos:start="695:9" pos:end="755:9">if <condition pos:start="695:12" pos:end="695:26">(<expr pos:start="695:13" pos:end="695:25"><name pos:start="695:13" pos:end="695:25"><name pos:start="695:13" pos:end="695:13">v</name><operator pos:start="695:14" pos:end="695:15">-&gt;</operator><name pos:start="695:16" pos:end="695:25">field_mode</name></name></expr>)</condition> <block pos:start="695:28" pos:end="755:9">{<block_content pos:start="697:13" pos:end="753:26">

            <decl_stmt pos:start="697:13" pos:end="697:23"><decl pos:start="697:13" pos:end="697:22"><type pos:start="697:13" pos:end="697:15"><name pos:start="697:13" pos:end="697:15">int</name></type> <name pos:start="697:17" pos:end="697:22">mvmode</name></decl>;</decl_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:59"><expr pos:start="699:13" pos:end="699:58"><call pos:start="699:13" pos:end="699:58"><name pos:start="699:13" pos:end="699:18">av_log</name><argument_list pos:start="699:19" pos:end="699:58">(<argument pos:start="699:20" pos:end="699:29"><expr pos:start="699:20" pos:end="699:29"><name pos:start="699:20" pos:end="699:29"><name pos:start="699:20" pos:end="699:20">v</name><operator pos:start="699:21" pos:end="699:22">-&gt;</operator><name pos:start="699:23" pos:end="699:23">s</name><operator pos:start="699:24" pos:end="699:24">.</operator><name pos:start="699:25" pos:end="699:29">avctx</name></name></expr></argument>, <argument pos:start="699:32" pos:end="699:43"><expr pos:start="699:32" pos:end="699:43"><name pos:start="699:32" pos:end="699:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="699:46" pos:end="699:57"><expr pos:start="699:46" pos:end="699:57"><literal type="string" pos:start="699:46" pos:end="699:57">"B Fields\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="701:13" pos:end="703:50"><if pos:start="701:13" pos:end="703:50">if <condition pos:start="701:16" pos:end="701:32">(<expr pos:start="701:17" pos:end="701:31"><name pos:start="701:17" pos:end="701:31"><name pos:start="701:17" pos:end="701:17">v</name><operator pos:start="701:18" pos:end="701:19">-&gt;</operator><name pos:start="701:20" pos:end="701:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="703:17" pos:end="703:50"><block_content pos:start="703:17" pos:end="703:50">

                <expr_stmt pos:start="703:17" pos:end="703:50"><expr pos:start="703:17" pos:end="703:49"><name pos:start="703:17" pos:end="703:27"><name pos:start="703:17" pos:end="703:17">v</name><operator pos:start="703:18" pos:end="703:19">-&gt;</operator><name pos:start="703:20" pos:end="703:27">dmvrange</name></name> <operator pos:start="703:29" pos:end="703:29">=</operator> <call pos:start="703:31" pos:end="703:49"><name pos:start="703:31" pos:end="703:39">get_unary</name><argument_list pos:start="703:40" pos:end="703:49">(<argument pos:start="703:41" pos:end="703:42"><expr pos:start="703:41" pos:end="703:42"><name pos:start="703:41" pos:end="703:42">gb</name></expr></argument>, <argument pos:start="703:45" pos:end="703:45"><expr pos:start="703:45" pos:end="703:45"><literal type="number" pos:start="703:45" pos:end="703:45">0</literal></expr></argument>, <argument pos:start="703:48" pos:end="703:48"><expr pos:start="703:48" pos:end="703:48"><literal type="number" pos:start="703:48" pos:end="703:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="705:13" pos:end="705:41"><expr pos:start="705:13" pos:end="705:40"><name pos:start="705:13" pos:end="705:18">mvmode</name> <operator pos:start="705:20" pos:end="705:20">=</operator> <call pos:start="705:22" pos:end="705:40"><name pos:start="705:22" pos:end="705:30">get_unary</name><argument_list pos:start="705:31" pos:end="705:40">(<argument pos:start="705:32" pos:end="705:33"><expr pos:start="705:32" pos:end="705:33"><name pos:start="705:32" pos:end="705:33">gb</name></expr></argument>, <argument pos:start="705:36" pos:end="705:36"><expr pos:start="705:36" pos:end="705:36"><literal type="number" pos:start="705:36" pos:end="705:36">1</literal></expr></argument>, <argument pos:start="705:39" pos:end="705:39"><expr pos:start="705:39" pos:end="705:39"><literal type="number" pos:start="705:39" pos:end="705:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:44"><expr pos:start="707:13" pos:end="707:43"><name pos:start="707:13" pos:end="707:20">lowquant</name> <operator pos:start="707:22" pos:end="707:22">=</operator> <ternary pos:start="707:24" pos:end="707:43"><condition pos:start="707:24" pos:end="707:37"><expr pos:start="707:24" pos:end="707:35"><operator pos:start="707:24" pos:end="707:24">(</operator><name pos:start="707:25" pos:end="707:29"><name pos:start="707:25" pos:end="707:25">v</name><operator pos:start="707:26" pos:end="707:27">-&gt;</operator><name pos:start="707:28" pos:end="707:29">pq</name></name> <operator pos:start="707:31" pos:end="707:31">&gt;</operator> <literal type="number" pos:start="707:33" pos:end="707:34">12</literal><operator pos:start="707:35" pos:end="707:35">)</operator></expr> ?</condition><then pos:start="707:39" pos:end="707:39"> <expr pos:start="707:39" pos:end="707:39"><literal type="number" pos:start="707:39" pos:end="707:39">0</literal></expr> </then><else pos:start="707:41" pos:end="707:43">: <expr pos:start="707:43" pos:end="707:43"><literal type="number" pos:start="707:43" pos:end="707:43">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:75"><expr pos:start="709:13" pos:end="709:74"><name pos:start="709:13" pos:end="709:22"><name pos:start="709:13" pos:end="709:13">v</name><operator pos:start="709:14" pos:end="709:15">-&gt;</operator><name pos:start="709:16" pos:end="709:22">mv_mode</name></name>          <operator pos:start="709:33" pos:end="709:33">=</operator> <name pos:start="709:35" pos:end="709:74"><name pos:start="709:35" pos:end="709:56">ff_vc1_mv_pmode_table2</name><index pos:start="709:57" pos:end="709:66">[<expr pos:start="709:58" pos:end="709:65"><name pos:start="709:58" pos:end="709:65">lowquant</name></expr>]</index><index pos:start="709:67" pos:end="709:74">[<expr pos:start="709:68" pos:end="709:73"><name pos:start="709:68" pos:end="709:73">mvmode</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:54"><expr pos:start="711:13" pos:end="711:53"><name pos:start="711:13" pos:end="711:22"><name pos:start="711:13" pos:end="711:13">v</name><operator pos:start="711:14" pos:end="711:15">-&gt;</operator><name pos:start="711:16" pos:end="711:22">qs_last</name></name>          <operator pos:start="711:33" pos:end="711:33">=</operator> <name pos:start="711:35" pos:end="711:53"><name pos:start="711:35" pos:end="711:35">v</name><operator pos:start="711:36" pos:end="711:37">-&gt;</operator><name pos:start="711:38" pos:end="711:38">s</name><operator pos:start="711:39" pos:end="711:39">.</operator><name pos:start="711:40" pos:end="711:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="713:13" pos:end="713:98"><expr pos:start="713:13" pos:end="713:97"><name pos:start="713:13" pos:end="713:31"><name pos:start="713:13" pos:end="713:13">v</name><operator pos:start="713:14" pos:end="713:15">-&gt;</operator><name pos:start="713:16" pos:end="713:16">s</name><operator pos:start="713:17" pos:end="713:17">.</operator><name pos:start="713:18" pos:end="713:31">quarter_sample</name></name> <operator pos:start="713:33" pos:end="713:33">=</operator> <operator pos:start="713:35" pos:end="713:35">(</operator><name pos:start="713:36" pos:end="713:45"><name pos:start="713:36" pos:end="713:36">v</name><operator pos:start="713:37" pos:end="713:38">-&gt;</operator><name pos:start="713:39" pos:end="713:45">mv_mode</name></name> <operator pos:start="713:47" pos:end="713:48">==</operator> <name pos:start="713:50" pos:end="713:61">MV_PMODE_1MV</name> <operator pos:start="713:63" pos:end="713:64">||</operator> <name pos:start="713:66" pos:end="713:75"><name pos:start="713:66" pos:end="713:66">v</name><operator pos:start="713:67" pos:end="713:68">-&gt;</operator><name pos:start="713:69" pos:end="713:75">mv_mode</name></name> <operator pos:start="713:77" pos:end="713:78">==</operator> <name pos:start="713:80" pos:end="713:96">MV_PMODE_MIXED_MV</name><operator pos:start="713:97" pos:end="713:97">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="715:13" pos:end="715:110"><expr pos:start="715:13" pos:end="715:109"><name pos:start="715:13" pos:end="715:22"><name pos:start="715:13" pos:end="715:13">v</name><operator pos:start="715:14" pos:end="715:15">-&gt;</operator><name pos:start="715:16" pos:end="715:16">s</name><operator pos:start="715:17" pos:end="715:17">.</operator><name pos:start="715:18" pos:end="715:22">mspel</name></name>          <operator pos:start="715:33" pos:end="715:33">=</operator> <operator pos:start="715:35" pos:end="715:35">!</operator><operator pos:start="715:36" pos:end="715:36">(</operator><name pos:start="715:37" pos:end="715:46"><name pos:start="715:37" pos:end="715:37">v</name><operator pos:start="715:38" pos:end="715:39">-&gt;</operator><name pos:start="715:40" pos:end="715:46">mv_mode</name></name> <operator pos:start="715:48" pos:end="715:49">==</operator> <name pos:start="715:51" pos:end="715:73">MV_PMODE_1MV_HPEL_BILIN</name> <operator pos:start="715:75" pos:end="715:76">||</operator> <name pos:start="715:78" pos:end="715:87"><name pos:start="715:78" pos:end="715:78">v</name><operator pos:start="715:79" pos:end="715:80">-&gt;</operator><name pos:start="715:81" pos:end="715:87">mv_mode</name></name> <operator pos:start="715:89" pos:end="715:90">==</operator> <name pos:start="715:92" pos:end="715:108">MV_PMODE_1MV_HPEL</name><operator pos:start="715:109" pos:end="715:109">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="717:13" pos:end="717:79"><expr pos:start="717:13" pos:end="717:78"><name pos:start="717:13" pos:end="717:18">status</name> <operator pos:start="717:20" pos:end="717:20">=</operator> <call pos:start="717:22" pos:end="717:78"><name pos:start="717:22" pos:end="717:38">bitplane_decoding</name><argument_list pos:start="717:39" pos:end="717:78">(<argument pos:start="717:40" pos:end="717:58"><expr pos:start="717:40" pos:end="717:58"><name pos:start="717:40" pos:end="717:58"><name pos:start="717:40" pos:end="717:40">v</name><operator pos:start="717:41" pos:end="717:42">-&gt;</operator><name pos:start="717:43" pos:end="717:58">forward_mb_plane</name></name></expr></argument>, <argument pos:start="717:61" pos:end="717:74"><expr pos:start="717:61" pos:end="717:74"><operator pos:start="717:61" pos:end="717:61">&amp;</operator><name pos:start="717:62" pos:end="717:74"><name pos:start="717:62" pos:end="717:62">v</name><operator pos:start="717:63" pos:end="717:64">-&gt;</operator><name pos:start="717:65" pos:end="717:74">fmb_is_raw</name></name></expr></argument>, <argument pos:start="717:77" pos:end="717:77"><expr pos:start="717:77" pos:end="717:77"><name pos:start="717:77" pos:end="717:77">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="719:13" pos:end="721:26"><if pos:start="719:13" pos:end="721:26">if <condition pos:start="719:16" pos:end="719:27">(<expr pos:start="719:17" pos:end="719:26"><name pos:start="719:17" pos:end="719:22">status</name> <operator pos:start="719:24" pos:end="719:24">&lt;</operator> <literal type="number" pos:start="719:26" pos:end="719:26">0</literal></expr>)</condition><block type="pseudo" pos:start="721:17" pos:end="721:26"><block_content pos:start="721:17" pos:end="721:26">

                <return pos:start="721:17" pos:end="721:26">return <expr pos:start="721:24" pos:end="721:25"><operator pos:start="721:24" pos:end="721:24">-</operator><literal type="number" pos:start="721:25" pos:end="721:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="723:13" pos:end="725:67"><expr pos:start="723:13" pos:end="725:66"><call pos:start="723:13" pos:end="725:66"><name pos:start="723:13" pos:end="723:18">av_log</name><argument_list pos:start="723:19" pos:end="725:66">(<argument pos:start="723:20" pos:end="723:29"><expr pos:start="723:20" pos:end="723:29"><name pos:start="723:20" pos:end="723:29"><name pos:start="723:20" pos:end="723:20">v</name><operator pos:start="723:21" pos:end="723:22">-&gt;</operator><name pos:start="723:23" pos:end="723:23">s</name><operator pos:start="723:24" pos:end="723:24">.</operator><name pos:start="723:25" pos:end="723:29">avctx</name></name></expr></argument>, <argument pos:start="723:32" pos:end="723:43"><expr pos:start="723:32" pos:end="723:43"><name pos:start="723:32" pos:end="723:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="723:46" pos:end="725:44"><expr pos:start="723:46" pos:end="725:44"><literal type="string" pos:start="723:46" pos:end="723:79">"MB Forward Type plane encoding: "</literal>

                   <literal type="string" pos:start="725:20" pos:end="725:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="725:47" pos:end="725:55"><expr pos:start="725:47" pos:end="725:55"><name pos:start="725:47" pos:end="725:52">status</name><operator pos:start="725:53" pos:end="725:54">&gt;&gt;</operator><literal type="number" pos:start="725:55" pos:end="725:55">1</literal></expr></argument>, <argument pos:start="725:58" pos:end="725:65"><expr pos:start="725:58" pos:end="725:65"><name pos:start="725:58" pos:end="725:63">status</name><operator pos:start="725:64" pos:end="725:64">&amp;</operator><literal type="number" pos:start="725:65" pos:end="725:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="727:13" pos:end="727:40"><expr pos:start="727:13" pos:end="727:39"><name pos:start="727:13" pos:end="727:21">mbmodetab</name> <operator pos:start="727:23" pos:end="727:23">=</operator> <call pos:start="727:25" pos:end="727:39"><name pos:start="727:25" pos:end="727:32">get_bits</name><argument_list pos:start="727:33" pos:end="727:39">(<argument pos:start="727:34" pos:end="727:35"><expr pos:start="727:34" pos:end="727:35"><name pos:start="727:34" pos:end="727:35">gb</name></expr></argument>, <argument pos:start="727:38" pos:end="727:38"><expr pos:start="727:38" pos:end="727:38"><literal type="number" pos:start="727:38" pos:end="727:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="729:13" pos:end="735:69"><if pos:start="729:13" pos:end="731:69">if <condition pos:start="729:16" pos:end="729:48">(<expr pos:start="729:17" pos:end="729:47"><name pos:start="729:17" pos:end="729:26"><name pos:start="729:17" pos:end="729:17">v</name><operator pos:start="729:18" pos:end="729:19">-&gt;</operator><name pos:start="729:20" pos:end="729:26">mv_mode</name></name> <operator pos:start="729:28" pos:end="729:29">==</operator> <name pos:start="729:31" pos:end="729:47">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="731:17" pos:end="731:69"><block_content pos:start="731:17" pos:end="731:69">

                <expr_stmt pos:start="731:17" pos:end="731:69"><expr pos:start="731:17" pos:end="731:68"><name pos:start="731:17" pos:end="731:29"><name pos:start="731:17" pos:end="731:17">v</name><operator pos:start="731:18" pos:end="731:19">-&gt;</operator><name pos:start="731:20" pos:end="731:29">mbmode_vlc</name></name> <operator pos:start="731:31" pos:end="731:31">=</operator> <operator pos:start="731:33" pos:end="731:33">&amp;</operator><name pos:start="731:34" pos:end="731:68"><name pos:start="731:34" pos:end="731:57">ff_vc1_if_mmv_mbmode_vlc</name><index pos:start="731:58" pos:end="731:68">[<expr pos:start="731:59" pos:end="731:67"><name pos:start="731:59" pos:end="731:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="733:13" pos:end="735:69">else<block type="pseudo" pos:start="735:17" pos:end="735:69"><block_content pos:start="735:17" pos:end="735:69">

                <expr_stmt pos:start="735:17" pos:end="735:69"><expr pos:start="735:17" pos:end="735:68"><name pos:start="735:17" pos:end="735:29"><name pos:start="735:17" pos:end="735:17">v</name><operator pos:start="735:18" pos:end="735:19">-&gt;</operator><name pos:start="735:20" pos:end="735:29">mbmode_vlc</name></name> <operator pos:start="735:31" pos:end="735:31">=</operator> <operator pos:start="735:33" pos:end="735:33">&amp;</operator><name pos:start="735:34" pos:end="735:68"><name pos:start="735:34" pos:end="735:57">ff_vc1_if_1mv_mbmode_vlc</name><index pos:start="735:58" pos:end="735:68">[<expr pos:start="735:59" pos:end="735:67"><name pos:start="735:59" pos:end="735:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="737:13" pos:end="737:43"><expr pos:start="737:13" pos:end="737:42"><name pos:start="737:13" pos:end="737:18">imvtab</name>       <operator pos:start="737:26" pos:end="737:26">=</operator> <call pos:start="737:28" pos:end="737:42"><name pos:start="737:28" pos:end="737:35">get_bits</name><argument_list pos:start="737:36" pos:end="737:42">(<argument pos:start="737:37" pos:end="737:38"><expr pos:start="737:37" pos:end="737:38"><name pos:start="737:37" pos:end="737:38">gb</name></expr></argument>, <argument pos:start="737:41" pos:end="737:41"><expr pos:start="737:41" pos:end="737:41"><literal type="number" pos:start="737:41" pos:end="737:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:59"><expr pos:start="739:13" pos:end="739:58"><name pos:start="739:13" pos:end="739:22"><name pos:start="739:13" pos:end="739:13">v</name><operator pos:start="739:14" pos:end="739:15">-&gt;</operator><name pos:start="739:16" pos:end="739:22">imv_vlc</name></name>   <operator pos:start="739:26" pos:end="739:26">=</operator> <operator pos:start="739:28" pos:end="739:28">&amp;</operator><name pos:start="739:29" pos:end="739:58"><name pos:start="739:29" pos:end="739:50">ff_vc1_2ref_mvdata_vlc</name><index pos:start="739:51" pos:end="739:58">[<expr pos:start="739:52" pos:end="739:57"><name pos:start="739:52" pos:end="739:57">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="741:13" pos:end="741:43"><expr pos:start="741:13" pos:end="741:42"><name pos:start="741:13" pos:end="741:19">icbptab</name>      <operator pos:start="741:26" pos:end="741:26">=</operator> <call pos:start="741:28" pos:end="741:42"><name pos:start="741:28" pos:end="741:35">get_bits</name><argument_list pos:start="741:36" pos:end="741:42">(<argument pos:start="741:37" pos:end="741:38"><expr pos:start="741:37" pos:end="741:38"><name pos:start="741:37" pos:end="741:38">gb</name></expr></argument>, <argument pos:start="741:41" pos:end="741:41"><expr pos:start="741:41" pos:end="741:41"><literal type="number" pos:start="741:41" pos:end="741:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="743:13" pos:end="743:55"><expr pos:start="743:13" pos:end="743:54"><name pos:start="743:13" pos:end="743:24"><name pos:start="743:13" pos:end="743:13">v</name><operator pos:start="743:14" pos:end="743:15">-&gt;</operator><name pos:start="743:16" pos:end="743:24">cbpcy_vlc</name></name> <operator pos:start="743:26" pos:end="743:26">=</operator> <operator pos:start="743:28" pos:end="743:28">&amp;</operator><name pos:start="743:29" pos:end="743:54"><name pos:start="743:29" pos:end="743:45">ff_vc1_icbpcy_vlc</name><index pos:start="743:46" pos:end="743:54">[<expr pos:start="743:47" pos:end="743:53"><name pos:start="743:47" pos:end="743:53">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="745:13" pos:end="751:13"><if pos:start="745:13" pos:end="751:13">if <condition pos:start="745:16" pos:end="745:48">(<expr pos:start="745:17" pos:end="745:47"><name pos:start="745:17" pos:end="745:26"><name pos:start="745:17" pos:end="745:17">v</name><operator pos:start="745:18" pos:end="745:19">-&gt;</operator><name pos:start="745:20" pos:end="745:26">mv_mode</name></name> <operator pos:start="745:28" pos:end="745:29">==</operator> <name pos:start="745:31" pos:end="745:47">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="745:50" pos:end="751:13">{<block_content pos:start="747:17" pos:end="749:77">

                <expr_stmt pos:start="747:17" pos:end="747:50"><expr pos:start="747:17" pos:end="747:49"><name pos:start="747:17" pos:end="747:27">fourmvbptab</name>     <operator pos:start="747:33" pos:end="747:33">=</operator> <call pos:start="747:35" pos:end="747:49"><name pos:start="747:35" pos:end="747:42">get_bits</name><argument_list pos:start="747:43" pos:end="747:49">(<argument pos:start="747:44" pos:end="747:45"><expr pos:start="747:44" pos:end="747:45"><name pos:start="747:44" pos:end="747:45">gb</name></expr></argument>, <argument pos:start="747:48" pos:end="747:48"><expr pos:start="747:48" pos:end="747:48"><literal type="number" pos:start="747:48" pos:end="747:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="749:17" pos:end="749:77"><expr pos:start="749:17" pos:end="749:76"><name pos:start="749:17" pos:end="749:31"><name pos:start="749:17" pos:end="749:17">v</name><operator pos:start="749:18" pos:end="749:19">-&gt;</operator><name pos:start="749:20" pos:end="749:31">fourmvbp_vlc</name></name> <operator pos:start="749:33" pos:end="749:33">=</operator> <operator pos:start="749:35" pos:end="749:35">&amp;</operator><name pos:start="749:36" pos:end="749:76"><name pos:start="749:36" pos:end="749:63">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="749:64" pos:end="749:76">[<expr pos:start="749:65" pos:end="749:75"><name pos:start="749:65" pos:end="749:75">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:26"><expr pos:start="753:13" pos:end="753:25"><name pos:start="753:13" pos:end="753:21"><name pos:start="753:13" pos:end="753:13">v</name><operator pos:start="753:14" pos:end="753:15">-&gt;</operator><name pos:start="753:16" pos:end="753:21">numref</name></name> <operator pos:start="753:23" pos:end="753:23">=</operator> <literal type="number" pos:start="753:25" pos:end="753:25">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="753:28" pos:end="753:74">// interlaced field B pictures are always 2-ref</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="755:11" pos:end="817:9">else if <condition pos:start="755:19" pos:end="755:41">(<expr pos:start="755:20" pos:end="755:40"><name pos:start="755:20" pos:end="755:25"><name pos:start="755:20" pos:end="755:20">v</name><operator pos:start="755:21" pos:end="755:22">-&gt;</operator><name pos:start="755:23" pos:end="755:25">fcm</name></name> <operator pos:start="755:27" pos:end="755:28">==</operator> <name pos:start="755:30" pos:end="755:40">ILACE_FRAME</name></expr>)</condition> <block pos:start="755:43" pos:end="817:9">{<block_content pos:start="757:13" pos:end="815:73">

            <if_stmt pos:start="757:13" pos:end="759:50"><if pos:start="757:13" pos:end="759:50">if <condition pos:start="757:16" pos:end="757:32">(<expr pos:start="757:17" pos:end="757:31"><name pos:start="757:17" pos:end="757:31"><name pos:start="757:17" pos:end="757:17">v</name><operator pos:start="757:18" pos:end="757:19">-&gt;</operator><name pos:start="757:20" pos:end="757:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="759:17" pos:end="759:50"><block_content pos:start="759:17" pos:end="759:50">

                <expr_stmt pos:start="759:17" pos:end="759:50"><expr pos:start="759:17" pos:end="759:49"><name pos:start="759:17" pos:end="759:27"><name pos:start="759:17" pos:end="759:17">v</name><operator pos:start="759:18" pos:end="759:19">-&gt;</operator><name pos:start="759:20" pos:end="759:27">dmvrange</name></name> <operator pos:start="759:29" pos:end="759:29">=</operator> <call pos:start="759:31" pos:end="759:49"><name pos:start="759:31" pos:end="759:39">get_unary</name><argument_list pos:start="759:40" pos:end="759:49">(<argument pos:start="759:41" pos:end="759:42"><expr pos:start="759:41" pos:end="759:42"><name pos:start="759:41" pos:end="759:42">gb</name></expr></argument>, <argument pos:start="759:45" pos:end="759:45"><expr pos:start="759:45" pos:end="759:45"><literal type="number" pos:start="759:45" pos:end="759:45">0</literal></expr></argument>, <argument pos:start="759:48" pos:end="759:48"><expr pos:start="759:48" pos:end="759:48"><literal type="number" pos:start="759:48" pos:end="759:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="761:13" pos:end="761:26"><expr pos:start="761:13" pos:end="761:25"><call pos:start="761:13" pos:end="761:25"><name pos:start="761:13" pos:end="761:21">get_bits1</name><argument_list pos:start="761:22" pos:end="761:25">(<argument pos:start="761:23" pos:end="761:24"><expr pos:start="761:23" pos:end="761:24"><name pos:start="761:23" pos:end="761:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="761:28" pos:end="761:72">/* intcomp - present but shall always be 0 */</comment>

            <expr_stmt pos:start="763:13" pos:end="763:36"><expr pos:start="763:13" pos:end="763:35"><name pos:start="763:13" pos:end="763:22"><name pos:start="763:13" pos:end="763:13">v</name><operator pos:start="763:14" pos:end="763:15">-&gt;</operator><name pos:start="763:16" pos:end="763:22">intcomp</name></name>          <operator pos:start="763:33" pos:end="763:33">=</operator> <literal type="number" pos:start="763:35" pos:end="763:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="765:13" pos:end="765:47"><expr pos:start="765:13" pos:end="765:46"><name pos:start="765:13" pos:end="765:22"><name pos:start="765:13" pos:end="765:13">v</name><operator pos:start="765:14" pos:end="765:15">-&gt;</operator><name pos:start="765:16" pos:end="765:22">mv_mode</name></name>          <operator pos:start="765:33" pos:end="765:33">=</operator> <name pos:start="765:35" pos:end="765:46">MV_PMODE_1MV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="767:13" pos:end="767:36"><expr pos:start="767:13" pos:end="767:35"><name pos:start="767:13" pos:end="767:27"><name pos:start="767:13" pos:end="767:13">v</name><operator pos:start="767:14" pos:end="767:15">-&gt;</operator><name pos:start="767:16" pos:end="767:27">fourmvswitch</name></name>     <operator pos:start="767:33" pos:end="767:33">=</operator> <literal type="number" pos:start="767:35" pos:end="767:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="769:13" pos:end="769:54"><expr pos:start="769:13" pos:end="769:53"><name pos:start="769:13" pos:end="769:22"><name pos:start="769:13" pos:end="769:13">v</name><operator pos:start="769:14" pos:end="769:15">-&gt;</operator><name pos:start="769:16" pos:end="769:22">qs_last</name></name>          <operator pos:start="769:33" pos:end="769:33">=</operator> <name pos:start="769:35" pos:end="769:53"><name pos:start="769:35" pos:end="769:35">v</name><operator pos:start="769:36" pos:end="769:37">-&gt;</operator><name pos:start="769:38" pos:end="769:38">s</name><operator pos:start="769:39" pos:end="769:39">.</operator><name pos:start="769:40" pos:end="769:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="771:13" pos:end="771:36"><expr pos:start="771:13" pos:end="771:35"><name pos:start="771:13" pos:end="771:31"><name pos:start="771:13" pos:end="771:13">v</name><operator pos:start="771:14" pos:end="771:15">-&gt;</operator><name pos:start="771:16" pos:end="771:16">s</name><operator pos:start="771:17" pos:end="771:17">.</operator><name pos:start="771:18" pos:end="771:31">quarter_sample</name></name> <operator pos:start="771:33" pos:end="771:33">=</operator> <literal type="number" pos:start="771:35" pos:end="771:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="773:13" pos:end="773:36"><expr pos:start="773:13" pos:end="773:35"><name pos:start="773:13" pos:end="773:22"><name pos:start="773:13" pos:end="773:13">v</name><operator pos:start="773:14" pos:end="773:15">-&gt;</operator><name pos:start="773:16" pos:end="773:16">s</name><operator pos:start="773:17" pos:end="773:17">.</operator><name pos:start="773:18" pos:end="773:22">mspel</name></name>          <operator pos:start="773:33" pos:end="773:33">=</operator> <literal type="number" pos:start="773:35" pos:end="773:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:91"><expr pos:start="775:13" pos:end="775:90"><name pos:start="775:13" pos:end="775:18">status</name>              <operator pos:start="775:33" pos:end="775:33">=</operator> <call pos:start="775:35" pos:end="775:90"><name pos:start="775:35" pos:end="775:51">bitplane_decoding</name><argument_list pos:start="775:52" pos:end="775:90">(<argument pos:start="775:53" pos:end="775:70"><expr pos:start="775:53" pos:end="775:70"><name pos:start="775:53" pos:end="775:70"><name pos:start="775:53" pos:end="775:53">v</name><operator pos:start="775:54" pos:end="775:55">-&gt;</operator><name pos:start="775:56" pos:end="775:70">direct_mb_plane</name></name></expr></argument>, <argument pos:start="775:73" pos:end="775:86"><expr pos:start="775:73" pos:end="775:86"><operator pos:start="775:73" pos:end="775:73">&amp;</operator><name pos:start="775:74" pos:end="775:86"><name pos:start="775:74" pos:end="775:74">v</name><operator pos:start="775:75" pos:end="775:76">-&gt;</operator><name pos:start="775:77" pos:end="775:86">dmb_is_raw</name></name></expr></argument>, <argument pos:start="775:89" pos:end="775:89"><expr pos:start="775:89" pos:end="775:89"><name pos:start="775:89" pos:end="775:89">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="777:13" pos:end="779:26"><if pos:start="777:13" pos:end="779:26">if <condition pos:start="777:16" pos:end="777:27">(<expr pos:start="777:17" pos:end="777:26"><name pos:start="777:17" pos:end="777:22">status</name> <operator pos:start="777:24" pos:end="777:24">&lt;</operator> <literal type="number" pos:start="777:26" pos:end="777:26">0</literal></expr>)</condition><block type="pseudo" pos:start="779:17" pos:end="779:26"><block_content pos:start="779:17" pos:end="779:26">

                <return pos:start="779:17" pos:end="779:26">return <expr pos:start="779:24" pos:end="779:25"><operator pos:start="779:24" pos:end="779:24">-</operator><literal type="number" pos:start="779:25" pos:end="779:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="781:13" pos:end="783:67"><expr pos:start="781:13" pos:end="783:66"><call pos:start="781:13" pos:end="783:66"><name pos:start="781:13" pos:end="781:18">av_log</name><argument_list pos:start="781:19" pos:end="783:66">(<argument pos:start="781:20" pos:end="781:29"><expr pos:start="781:20" pos:end="781:29"><name pos:start="781:20" pos:end="781:29"><name pos:start="781:20" pos:end="781:20">v</name><operator pos:start="781:21" pos:end="781:22">-&gt;</operator><name pos:start="781:23" pos:end="781:23">s</name><operator pos:start="781:24" pos:end="781:24">.</operator><name pos:start="781:25" pos:end="781:29">avctx</name></name></expr></argument>, <argument pos:start="781:32" pos:end="781:43"><expr pos:start="781:32" pos:end="781:43"><name pos:start="781:32" pos:end="781:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="781:46" pos:end="783:44"><expr pos:start="781:46" pos:end="783:44"><literal type="string" pos:start="781:46" pos:end="781:78">"MB Direct Type plane encoding: "</literal>

                   <literal type="string" pos:start="783:20" pos:end="783:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="783:47" pos:end="783:55"><expr pos:start="783:47" pos:end="783:55"><name pos:start="783:47" pos:end="783:52">status</name><operator pos:start="783:53" pos:end="783:54">&gt;&gt;</operator><literal type="number" pos:start="783:55" pos:end="783:55">1</literal></expr></argument>, <argument pos:start="783:58" pos:end="783:65"><expr pos:start="783:58" pos:end="783:65"><name pos:start="783:58" pos:end="783:63">status</name><operator pos:start="783:64" pos:end="783:64">&amp;</operator><literal type="number" pos:start="783:65" pos:end="783:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="785:13" pos:end="785:78"><expr pos:start="785:13" pos:end="785:77"><name pos:start="785:13" pos:end="785:18">status</name> <operator pos:start="785:20" pos:end="785:20">=</operator> <call pos:start="785:22" pos:end="785:77"><name pos:start="785:22" pos:end="785:38">bitplane_decoding</name><argument_list pos:start="785:39" pos:end="785:77">(<argument pos:start="785:40" pos:end="785:56"><expr pos:start="785:40" pos:end="785:56"><name pos:start="785:40" pos:end="785:56"><name pos:start="785:40" pos:end="785:40">v</name><operator pos:start="785:41" pos:end="785:42">-&gt;</operator><name pos:start="785:43" pos:end="785:43">s</name><operator pos:start="785:44" pos:end="785:44">.</operator><name pos:start="785:45" pos:end="785:56">mbskip_table</name></name></expr></argument>, <argument pos:start="785:59" pos:end="785:73"><expr pos:start="785:59" pos:end="785:73"><operator pos:start="785:59" pos:end="785:59">&amp;</operator><name pos:start="785:60" pos:end="785:73"><name pos:start="785:60" pos:end="785:60">v</name><operator pos:start="785:61" pos:end="785:62">-&gt;</operator><name pos:start="785:63" pos:end="785:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="785:76" pos:end="785:76"><expr pos:start="785:76" pos:end="785:76"><name pos:start="785:76" pos:end="785:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="787:13" pos:end="789:26"><if pos:start="787:13" pos:end="789:26">if <condition pos:start="787:16" pos:end="787:27">(<expr pos:start="787:17" pos:end="787:26"><name pos:start="787:17" pos:end="787:22">status</name> <operator pos:start="787:24" pos:end="787:24">&lt;</operator> <literal type="number" pos:start="787:26" pos:end="787:26">0</literal></expr>)</condition><block type="pseudo" pos:start="789:17" pos:end="789:26"><block_content pos:start="789:17" pos:end="789:26">

                <return pos:start="789:17" pos:end="789:26">return <expr pos:start="789:24" pos:end="789:25"><operator pos:start="789:24" pos:end="789:24">-</operator><literal type="number" pos:start="789:25" pos:end="789:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="791:13" pos:end="793:67"><expr pos:start="791:13" pos:end="793:66"><call pos:start="791:13" pos:end="793:66"><name pos:start="791:13" pos:end="791:18">av_log</name><argument_list pos:start="791:19" pos:end="793:66">(<argument pos:start="791:20" pos:end="791:29"><expr pos:start="791:20" pos:end="791:29"><name pos:start="791:20" pos:end="791:29"><name pos:start="791:20" pos:end="791:20">v</name><operator pos:start="791:21" pos:end="791:22">-&gt;</operator><name pos:start="791:23" pos:end="791:23">s</name><operator pos:start="791:24" pos:end="791:24">.</operator><name pos:start="791:25" pos:end="791:29">avctx</name></name></expr></argument>, <argument pos:start="791:32" pos:end="791:43"><expr pos:start="791:32" pos:end="791:43"><name pos:start="791:32" pos:end="791:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="791:46" pos:end="793:44"><expr pos:start="791:46" pos:end="793:44"><literal type="string" pos:start="791:46" pos:end="791:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="793:20" pos:end="793:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="793:47" pos:end="793:55"><expr pos:start="793:47" pos:end="793:55"><name pos:start="793:47" pos:end="793:52">status</name><operator pos:start="793:53" pos:end="793:54">&gt;&gt;</operator><literal type="number" pos:start="793:55" pos:end="793:55">1</literal></expr></argument>, <argument pos:start="793:58" pos:end="793:65"><expr pos:start="793:58" pos:end="793:65"><name pos:start="793:58" pos:end="793:63">status</name><operator pos:start="793:64" pos:end="793:64">&amp;</operator><literal type="number" pos:start="793:65" pos:end="793:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="795:13" pos:end="795:46"><expr pos:start="795:13" pos:end="795:45"><name pos:start="795:13" pos:end="795:21">mbmodetab</name>       <operator pos:start="795:29" pos:end="795:29">=</operator> <call pos:start="795:31" pos:end="795:45"><name pos:start="795:31" pos:end="795:38">get_bits</name><argument_list pos:start="795:39" pos:end="795:45">(<argument pos:start="795:40" pos:end="795:41"><expr pos:start="795:40" pos:end="795:41"><name pos:start="795:40" pos:end="795:41">gb</name></expr></argument>, <argument pos:start="795:44" pos:end="795:44"><expr pos:start="795:44" pos:end="795:44"><literal type="number" pos:start="795:44" pos:end="795:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="797:13" pos:end="797:73"><expr pos:start="797:13" pos:end="797:72"><name pos:start="797:13" pos:end="797:25"><name pos:start="797:13" pos:end="797:13">v</name><operator pos:start="797:14" pos:end="797:15">-&gt;</operator><name pos:start="797:16" pos:end="797:25">mbmode_vlc</name></name>   <operator pos:start="797:29" pos:end="797:29">=</operator> <operator pos:start="797:31" pos:end="797:31">&amp;</operator><name pos:start="797:32" pos:end="797:72"><name pos:start="797:32" pos:end="797:61">ff_vc1_intfr_non4mv_mbmode_vlc</name><index pos:start="797:62" pos:end="797:72">[<expr pos:start="797:63" pos:end="797:71"><name pos:start="797:63" pos:end="797:71">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:46"><expr pos:start="799:13" pos:end="799:45"><name pos:start="799:13" pos:end="799:18">imvtab</name>          <operator pos:start="799:29" pos:end="799:29">=</operator> <call pos:start="799:31" pos:end="799:45"><name pos:start="799:31" pos:end="799:38">get_bits</name><argument_list pos:start="799:39" pos:end="799:45">(<argument pos:start="799:40" pos:end="799:41"><expr pos:start="799:40" pos:end="799:41"><name pos:start="799:40" pos:end="799:41">gb</name></expr></argument>, <argument pos:start="799:44" pos:end="799:44"><expr pos:start="799:44" pos:end="799:44"><literal type="number" pos:start="799:44" pos:end="799:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="801:13" pos:end="801:62"><expr pos:start="801:13" pos:end="801:61"><name pos:start="801:13" pos:end="801:22"><name pos:start="801:13" pos:end="801:13">v</name><operator pos:start="801:14" pos:end="801:15">-&gt;</operator><name pos:start="801:16" pos:end="801:22">imv_vlc</name></name>      <operator pos:start="801:29" pos:end="801:29">=</operator> <operator pos:start="801:31" pos:end="801:31">&amp;</operator><name pos:start="801:32" pos:end="801:61"><name pos:start="801:32" pos:end="801:53">ff_vc1_1ref_mvdata_vlc</name><index pos:start="801:54" pos:end="801:61">[<expr pos:start="801:55" pos:end="801:60"><name pos:start="801:55" pos:end="801:60">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

            <comment type="line" pos:start="803:13" pos:end="803:60">// interlaced p/b-picture cbpcy range is [1, 63]</comment>

            <expr_stmt pos:start="805:13" pos:end="805:46"><expr pos:start="805:13" pos:end="805:45"><name pos:start="805:13" pos:end="805:19">icbptab</name>         <operator pos:start="805:29" pos:end="805:29">=</operator> <call pos:start="805:31" pos:end="805:45"><name pos:start="805:31" pos:end="805:38">get_bits</name><argument_list pos:start="805:39" pos:end="805:45">(<argument pos:start="805:40" pos:end="805:41"><expr pos:start="805:40" pos:end="805:41"><name pos:start="805:40" pos:end="805:41">gb</name></expr></argument>, <argument pos:start="805:44" pos:end="805:44"><expr pos:start="805:44" pos:end="805:44"><literal type="number" pos:start="805:44" pos:end="805:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="807:13" pos:end="807:58"><expr pos:start="807:13" pos:end="807:57"><name pos:start="807:13" pos:end="807:24"><name pos:start="807:13" pos:end="807:13">v</name><operator pos:start="807:14" pos:end="807:15">-&gt;</operator><name pos:start="807:16" pos:end="807:24">cbpcy_vlc</name></name>    <operator pos:start="807:29" pos:end="807:29">=</operator> <operator pos:start="807:31" pos:end="807:31">&amp;</operator><name pos:start="807:32" pos:end="807:57"><name pos:start="807:32" pos:end="807:48">ff_vc1_icbpcy_vlc</name><index pos:start="807:49" pos:end="807:57">[<expr pos:start="807:50" pos:end="807:56"><name pos:start="807:50" pos:end="807:56">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="809:13" pos:end="809:46"><expr pos:start="809:13" pos:end="809:45"><name pos:start="809:13" pos:end="809:22">twomvbptab</name>      <operator pos:start="809:29" pos:end="809:29">=</operator> <call pos:start="809:31" pos:end="809:45"><name pos:start="809:31" pos:end="809:38">get_bits</name><argument_list pos:start="809:39" pos:end="809:45">(<argument pos:start="809:40" pos:end="809:41"><expr pos:start="809:40" pos:end="809:41"><name pos:start="809:40" pos:end="809:41">gb</name></expr></argument>, <argument pos:start="809:44" pos:end="809:44"><expr pos:start="809:44" pos:end="809:44"><literal type="number" pos:start="809:44" pos:end="809:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:72"><expr pos:start="811:13" pos:end="811:71"><name pos:start="811:13" pos:end="811:26"><name pos:start="811:13" pos:end="811:13">v</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:26">twomvbp_vlc</name></name>  <operator pos:start="811:29" pos:end="811:29">=</operator> <operator pos:start="811:31" pos:end="811:31">&amp;</operator><name pos:start="811:32" pos:end="811:71"><name pos:start="811:32" pos:end="811:59">ff_vc1_2mv_block_pattern_vlc</name><index pos:start="811:60" pos:end="811:71">[<expr pos:start="811:61" pos:end="811:70"><name pos:start="811:61" pos:end="811:70">twomvbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="813:13" pos:end="813:46"><expr pos:start="813:13" pos:end="813:45"><name pos:start="813:13" pos:end="813:23">fourmvbptab</name>     <operator pos:start="813:29" pos:end="813:29">=</operator> <call pos:start="813:31" pos:end="813:45"><name pos:start="813:31" pos:end="813:38">get_bits</name><argument_list pos:start="813:39" pos:end="813:45">(<argument pos:start="813:40" pos:end="813:41"><expr pos:start="813:40" pos:end="813:41"><name pos:start="813:40" pos:end="813:41">gb</name></expr></argument>, <argument pos:start="813:44" pos:end="813:44"><expr pos:start="813:44" pos:end="813:44"><literal type="number" pos:start="813:44" pos:end="813:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="815:13" pos:end="815:73"><expr pos:start="815:13" pos:end="815:72"><name pos:start="815:13" pos:end="815:27"><name pos:start="815:13" pos:end="815:13">v</name><operator pos:start="815:14" pos:end="815:15">-&gt;</operator><name pos:start="815:16" pos:end="815:27">fourmvbp_vlc</name></name> <operator pos:start="815:29" pos:end="815:29">=</operator> <operator pos:start="815:31" pos:end="815:31">&amp;</operator><name pos:start="815:32" pos:end="815:72"><name pos:start="815:32" pos:end="815:59">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="815:60" pos:end="815:72">[<expr pos:start="815:61" pos:end="815:71"><name pos:start="815:61" pos:end="815:71">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="817:11" pos:end="851:9">else <block pos:start="817:16" pos:end="851:9">{<block_content pos:start="819:13" pos:end="849:64">

            <expr_stmt pos:start="819:13" pos:end="819:89"><expr pos:start="819:13" pos:end="819:88"><name pos:start="819:13" pos:end="819:22"><name pos:start="819:13" pos:end="819:13">v</name><operator pos:start="819:14" pos:end="819:15">-&gt;</operator><name pos:start="819:16" pos:end="819:22">mv_mode</name></name>          <operator pos:start="819:33" pos:end="819:33">=</operator> <ternary pos:start="819:35" pos:end="819:88"><condition pos:start="819:35" pos:end="819:49"><expr pos:start="819:35" pos:end="819:47"><call pos:start="819:35" pos:end="819:47"><name pos:start="819:35" pos:end="819:43">get_bits1</name><argument_list pos:start="819:44" pos:end="819:47">(<argument pos:start="819:45" pos:end="819:46"><expr pos:start="819:45" pos:end="819:46"><name pos:start="819:45" pos:end="819:46">gb</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="819:51" pos:end="819:62"> <expr pos:start="819:51" pos:end="819:62"><name pos:start="819:51" pos:end="819:62">MV_PMODE_1MV</name></expr> </then><else pos:start="819:64" pos:end="819:88">: <expr pos:start="819:66" pos:end="819:88"><name pos:start="819:66" pos:end="819:88">MV_PMODE_1MV_HPEL_BILIN</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:54"><expr pos:start="821:13" pos:end="821:53"><name pos:start="821:13" pos:end="821:22"><name pos:start="821:13" pos:end="821:13">v</name><operator pos:start="821:14" pos:end="821:15">-&gt;</operator><name pos:start="821:16" pos:end="821:22">qs_last</name></name>          <operator pos:start="821:33" pos:end="821:33">=</operator> <name pos:start="821:35" pos:end="821:53"><name pos:start="821:35" pos:end="821:35">v</name><operator pos:start="821:36" pos:end="821:37">-&gt;</operator><name pos:start="821:38" pos:end="821:38">s</name><operator pos:start="821:39" pos:end="821:39">.</operator><name pos:start="821:40" pos:end="821:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:63"><expr pos:start="823:13" pos:end="823:62"><name pos:start="823:13" pos:end="823:31"><name pos:start="823:13" pos:end="823:13">v</name><operator pos:start="823:14" pos:end="823:15">-&gt;</operator><name pos:start="823:16" pos:end="823:16">s</name><operator pos:start="823:17" pos:end="823:17">.</operator><name pos:start="823:18" pos:end="823:31">quarter_sample</name></name> <operator pos:start="823:33" pos:end="823:33">=</operator> <operator pos:start="823:35" pos:end="823:35">(</operator><name pos:start="823:36" pos:end="823:45"><name pos:start="823:36" pos:end="823:36">v</name><operator pos:start="823:37" pos:end="823:38">-&gt;</operator><name pos:start="823:39" pos:end="823:45">mv_mode</name></name> <operator pos:start="823:47" pos:end="823:48">==</operator> <name pos:start="823:50" pos:end="823:61">MV_PMODE_1MV</name><operator pos:start="823:62" pos:end="823:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="825:13" pos:end="825:54"><expr pos:start="825:13" pos:end="825:53"><name pos:start="825:13" pos:end="825:22"><name pos:start="825:13" pos:end="825:13">v</name><operator pos:start="825:14" pos:end="825:15">-&gt;</operator><name pos:start="825:16" pos:end="825:16">s</name><operator pos:start="825:17" pos:end="825:17">.</operator><name pos:start="825:18" pos:end="825:22">mspel</name></name>          <operator pos:start="825:33" pos:end="825:33">=</operator> <name pos:start="825:35" pos:end="825:53"><name pos:start="825:35" pos:end="825:35">v</name><operator pos:start="825:36" pos:end="825:37">-&gt;</operator><name pos:start="825:38" pos:end="825:38">s</name><operator pos:start="825:39" pos:end="825:39">.</operator><name pos:start="825:40" pos:end="825:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="827:13" pos:end="827:91"><expr pos:start="827:13" pos:end="827:90"><name pos:start="827:13" pos:end="827:18">status</name>              <operator pos:start="827:33" pos:end="827:33">=</operator> <call pos:start="827:35" pos:end="827:90"><name pos:start="827:35" pos:end="827:51">bitplane_decoding</name><argument_list pos:start="827:52" pos:end="827:90">(<argument pos:start="827:53" pos:end="827:70"><expr pos:start="827:53" pos:end="827:70"><name pos:start="827:53" pos:end="827:70"><name pos:start="827:53" pos:end="827:53">v</name><operator pos:start="827:54" pos:end="827:55">-&gt;</operator><name pos:start="827:56" pos:end="827:70">direct_mb_plane</name></name></expr></argument>, <argument pos:start="827:73" pos:end="827:86"><expr pos:start="827:73" pos:end="827:86"><operator pos:start="827:73" pos:end="827:73">&amp;</operator><name pos:start="827:74" pos:end="827:86"><name pos:start="827:74" pos:end="827:74">v</name><operator pos:start="827:75" pos:end="827:76">-&gt;</operator><name pos:start="827:77" pos:end="827:86">dmb_is_raw</name></name></expr></argument>, <argument pos:start="827:89" pos:end="827:89"><expr pos:start="827:89" pos:end="827:89"><name pos:start="827:89" pos:end="827:89">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="829:13" pos:end="831:26"><if pos:start="829:13" pos:end="831:26">if <condition pos:start="829:16" pos:end="829:27">(<expr pos:start="829:17" pos:end="829:26"><name pos:start="829:17" pos:end="829:22">status</name> <operator pos:start="829:24" pos:end="829:24">&lt;</operator> <literal type="number" pos:start="829:26" pos:end="829:26">0</literal></expr>)</condition><block type="pseudo" pos:start="831:17" pos:end="831:26"><block_content pos:start="831:17" pos:end="831:26">

                <return pos:start="831:17" pos:end="831:26">return <expr pos:start="831:24" pos:end="831:25"><operator pos:start="831:24" pos:end="831:24">-</operator><literal type="number" pos:start="831:25" pos:end="831:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="833:13" pos:end="835:67"><expr pos:start="833:13" pos:end="835:66"><call pos:start="833:13" pos:end="835:66"><name pos:start="833:13" pos:end="833:18">av_log</name><argument_list pos:start="833:19" pos:end="835:66">(<argument pos:start="833:20" pos:end="833:29"><expr pos:start="833:20" pos:end="833:29"><name pos:start="833:20" pos:end="833:29"><name pos:start="833:20" pos:end="833:20">v</name><operator pos:start="833:21" pos:end="833:22">-&gt;</operator><name pos:start="833:23" pos:end="833:23">s</name><operator pos:start="833:24" pos:end="833:24">.</operator><name pos:start="833:25" pos:end="833:29">avctx</name></name></expr></argument>, <argument pos:start="833:32" pos:end="833:43"><expr pos:start="833:32" pos:end="833:43"><name pos:start="833:32" pos:end="833:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="833:46" pos:end="835:44"><expr pos:start="833:46" pos:end="835:44"><literal type="string" pos:start="833:46" pos:end="833:78">"MB Direct Type plane encoding: "</literal>

                   <literal type="string" pos:start="835:20" pos:end="835:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="835:47" pos:end="835:55"><expr pos:start="835:47" pos:end="835:55"><name pos:start="835:47" pos:end="835:52">status</name><operator pos:start="835:53" pos:end="835:54">&gt;&gt;</operator><literal type="number" pos:start="835:55" pos:end="835:55">1</literal></expr></argument>, <argument pos:start="835:58" pos:end="835:65"><expr pos:start="835:58" pos:end="835:65"><name pos:start="835:58" pos:end="835:63">status</name><operator pos:start="835:64" pos:end="835:64">&amp;</operator><literal type="number" pos:start="835:65" pos:end="835:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="837:13" pos:end="837:78"><expr pos:start="837:13" pos:end="837:77"><name pos:start="837:13" pos:end="837:18">status</name> <operator pos:start="837:20" pos:end="837:20">=</operator> <call pos:start="837:22" pos:end="837:77"><name pos:start="837:22" pos:end="837:38">bitplane_decoding</name><argument_list pos:start="837:39" pos:end="837:77">(<argument pos:start="837:40" pos:end="837:56"><expr pos:start="837:40" pos:end="837:56"><name pos:start="837:40" pos:end="837:56"><name pos:start="837:40" pos:end="837:40">v</name><operator pos:start="837:41" pos:end="837:42">-&gt;</operator><name pos:start="837:43" pos:end="837:43">s</name><operator pos:start="837:44" pos:end="837:44">.</operator><name pos:start="837:45" pos:end="837:56">mbskip_table</name></name></expr></argument>, <argument pos:start="837:59" pos:end="837:73"><expr pos:start="837:59" pos:end="837:73"><operator pos:start="837:59" pos:end="837:59">&amp;</operator><name pos:start="837:60" pos:end="837:73"><name pos:start="837:60" pos:end="837:60">v</name><operator pos:start="837:61" pos:end="837:62">-&gt;</operator><name pos:start="837:63" pos:end="837:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="837:76" pos:end="837:76"><expr pos:start="837:76" pos:end="837:76"><name pos:start="837:76" pos:end="837:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="839:13" pos:end="841:26"><if pos:start="839:13" pos:end="841:26">if <condition pos:start="839:16" pos:end="839:27">(<expr pos:start="839:17" pos:end="839:26"><name pos:start="839:17" pos:end="839:22">status</name> <operator pos:start="839:24" pos:end="839:24">&lt;</operator> <literal type="number" pos:start="839:26" pos:end="839:26">0</literal></expr>)</condition><block type="pseudo" pos:start="841:17" pos:end="841:26"><block_content pos:start="841:17" pos:end="841:26">

                <return pos:start="841:17" pos:end="841:26">return <expr pos:start="841:24" pos:end="841:25"><operator pos:start="841:24" pos:end="841:24">-</operator><literal type="number" pos:start="841:25" pos:end="841:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="843:13" pos:end="845:67"><expr pos:start="843:13" pos:end="845:66"><call pos:start="843:13" pos:end="845:66"><name pos:start="843:13" pos:end="843:18">av_log</name><argument_list pos:start="843:19" pos:end="845:66">(<argument pos:start="843:20" pos:end="843:29"><expr pos:start="843:20" pos:end="843:29"><name pos:start="843:20" pos:end="843:29"><name pos:start="843:20" pos:end="843:20">v</name><operator pos:start="843:21" pos:end="843:22">-&gt;</operator><name pos:start="843:23" pos:end="843:23">s</name><operator pos:start="843:24" pos:end="843:24">.</operator><name pos:start="843:25" pos:end="843:29">avctx</name></name></expr></argument>, <argument pos:start="843:32" pos:end="843:43"><expr pos:start="843:32" pos:end="843:43"><name pos:start="843:32" pos:end="843:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="843:46" pos:end="845:44"><expr pos:start="843:46" pos:end="845:44"><literal type="string" pos:start="843:46" pos:end="843:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="845:20" pos:end="845:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="845:47" pos:end="845:55"><expr pos:start="845:47" pos:end="845:55"><name pos:start="845:47" pos:end="845:52">status</name><operator pos:start="845:53" pos:end="845:54">&gt;&gt;</operator><literal type="number" pos:start="845:55" pos:end="845:55">1</literal></expr></argument>, <argument pos:start="845:58" pos:end="845:65"><expr pos:start="845:58" pos:end="845:65"><name pos:start="845:58" pos:end="845:63">status</name><operator pos:start="845:64" pos:end="845:64">&amp;</operator><literal type="number" pos:start="845:65" pos:end="845:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="847:13" pos:end="847:50"><expr pos:start="847:13" pos:end="847:49"><name pos:start="847:13" pos:end="847:31"><name pos:start="847:13" pos:end="847:13">v</name><operator pos:start="847:14" pos:end="847:15">-&gt;</operator><name pos:start="847:16" pos:end="847:16">s</name><operator pos:start="847:17" pos:end="847:17">.</operator><name pos:start="847:18" pos:end="847:31">mv_table_index</name></name> <operator pos:start="847:33" pos:end="847:33">=</operator> <call pos:start="847:35" pos:end="847:49"><name pos:start="847:35" pos:end="847:42">get_bits</name><argument_list pos:start="847:43" pos:end="847:49">(<argument pos:start="847:44" pos:end="847:45"><expr pos:start="847:44" pos:end="847:45"><name pos:start="847:44" pos:end="847:45">gb</name></expr></argument>, <argument pos:start="847:48" pos:end="847:48"><expr pos:start="847:48" pos:end="847:48"><literal type="number" pos:start="847:48" pos:end="847:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="849:13" pos:end="849:64"><expr pos:start="849:13" pos:end="849:63"><name pos:start="849:13" pos:end="849:24"><name pos:start="849:13" pos:end="849:13">v</name><operator pos:start="849:14" pos:end="849:15">-&gt;</operator><name pos:start="849:16" pos:end="849:24">cbpcy_vlc</name></name> <operator pos:start="849:26" pos:end="849:26">=</operator> <operator pos:start="849:28" pos:end="849:28">&amp;</operator><name pos:start="849:29" pos:end="849:63"><name pos:start="849:29" pos:end="849:46">ff_vc1_cbpcy_p_vlc</name><index pos:start="849:47" pos:end="849:63">[<expr pos:start="849:48" pos:end="849:62"><call pos:start="849:48" pos:end="849:62"><name pos:start="849:48" pos:end="849:55">get_bits</name><argument_list pos:start="849:56" pos:end="849:62">(<argument pos:start="849:57" pos:end="849:58"><expr pos:start="849:57" pos:end="849:58"><name pos:start="849:57" pos:end="849:58">gb</name></expr></argument>, <argument pos:start="849:61" pos:end="849:61"><expr pos:start="849:61" pos:end="849:61"><literal type="number" pos:start="849:61" pos:end="849:61">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="855:9" pos:end="861:9"><if pos:start="855:9" pos:end="861:9">if <condition pos:start="855:12" pos:end="855:22">(<expr pos:start="855:13" pos:end="855:21"><name pos:start="855:13" pos:end="855:21"><name pos:start="855:13" pos:end="855:13">v</name><operator pos:start="855:14" pos:end="855:15">-&gt;</operator><name pos:start="855:16" pos:end="855:21">dquant</name></name></expr>)</condition> <block pos:start="855:24" pos:end="861:9">{<block_content pos:start="857:13" pos:end="859:35">

            <expr_stmt pos:start="857:13" pos:end="857:66"><expr pos:start="857:13" pos:end="857:65"><call pos:start="857:13" pos:end="857:65"><name pos:start="857:13" pos:end="857:18">av_log</name><argument_list pos:start="857:19" pos:end="857:65">(<argument pos:start="857:20" pos:end="857:29"><expr pos:start="857:20" pos:end="857:29"><name pos:start="857:20" pos:end="857:29"><name pos:start="857:20" pos:end="857:20">v</name><operator pos:start="857:21" pos:end="857:22">-&gt;</operator><name pos:start="857:23" pos:end="857:23">s</name><operator pos:start="857:24" pos:end="857:24">.</operator><name pos:start="857:25" pos:end="857:29">avctx</name></name></expr></argument>, <argument pos:start="857:32" pos:end="857:43"><expr pos:start="857:32" pos:end="857:43"><name pos:start="857:32" pos:end="857:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="857:46" pos:end="857:64"><expr pos:start="857:46" pos:end="857:64"><literal type="string" pos:start="857:46" pos:end="857:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="859:13" pos:end="859:35"><expr pos:start="859:13" pos:end="859:34"><call pos:start="859:13" pos:end="859:34"><name pos:start="859:13" pos:end="859:31">vop_dquant_decoding</name><argument_list pos:start="859:32" pos:end="859:34">(<argument pos:start="859:33" pos:end="859:33"><expr pos:start="859:33" pos:end="859:33"><name pos:start="859:33" pos:end="859:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="865:9" pos:end="865:21"><expr pos:start="865:9" pos:end="865:20"><name pos:start="865:9" pos:end="865:16"><name pos:start="865:9" pos:end="865:9">v</name><operator pos:start="865:10" pos:end="865:11">-&gt;</operator><name pos:start="865:12" pos:end="865:16">ttfrm</name></name> <operator pos:start="865:18" pos:end="865:18">=</operator> <literal type="number" pos:start="865:20" pos:end="865:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="867:9" pos:end="883:9"><if pos:start="867:9" pos:end="877:9">if <condition pos:start="867:12" pos:end="867:27">(<expr pos:start="867:13" pos:end="867:26"><name pos:start="867:13" pos:end="867:26"><name pos:start="867:13" pos:end="867:13">v</name><operator pos:start="867:14" pos:end="867:15">-&gt;</operator><name pos:start="867:16" pos:end="867:26">vstransform</name></name></expr>)</condition> <block pos:start="867:29" pos:end="877:9">{<block_content pos:start="869:13" pos:end="875:13">

            <expr_stmt pos:start="869:13" pos:end="869:37"><expr pos:start="869:13" pos:end="869:36"><name pos:start="869:13" pos:end="869:20"><name pos:start="869:13" pos:end="869:13">v</name><operator pos:start="869:14" pos:end="869:15">-&gt;</operator><name pos:start="869:16" pos:end="869:20">ttmbf</name></name> <operator pos:start="869:22" pos:end="869:22">=</operator> <call pos:start="869:24" pos:end="869:36"><name pos:start="869:24" pos:end="869:32">get_bits1</name><argument_list pos:start="869:33" pos:end="869:36">(<argument pos:start="869:34" pos:end="869:35"><expr pos:start="869:34" pos:end="869:35"><name pos:start="869:34" pos:end="869:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="871:13" pos:end="875:13"><if pos:start="871:13" pos:end="875:13">if <condition pos:start="871:16" pos:end="871:25">(<expr pos:start="871:17" pos:end="871:24"><name pos:start="871:17" pos:end="871:24"><name pos:start="871:17" pos:end="871:17">v</name><operator pos:start="871:18" pos:end="871:19">-&gt;</operator><name pos:start="871:20" pos:end="871:24">ttmbf</name></name></expr>)</condition> <block pos:start="871:27" pos:end="875:13">{<block_content pos:start="873:17" pos:end="873:63">

                <expr_stmt pos:start="873:17" pos:end="873:63"><expr pos:start="873:17" pos:end="873:62"><name pos:start="873:17" pos:end="873:24"><name pos:start="873:17" pos:end="873:17">v</name><operator pos:start="873:18" pos:end="873:19">-&gt;</operator><name pos:start="873:20" pos:end="873:24">ttfrm</name></name> <operator pos:start="873:26" pos:end="873:26">=</operator> <name pos:start="873:28" pos:end="873:62"><name pos:start="873:28" pos:end="873:45">ff_vc1_ttfrm_to_tt</name><index pos:start="873:46" pos:end="873:62">[<expr pos:start="873:47" pos:end="873:61"><call pos:start="873:47" pos:end="873:61"><name pos:start="873:47" pos:end="873:54">get_bits</name><argument_list pos:start="873:55" pos:end="873:61">(<argument pos:start="873:56" pos:end="873:57"><expr pos:start="873:56" pos:end="873:57"><name pos:start="873:56" pos:end="873:57">gb</name></expr></argument>, <argument pos:start="873:60" pos:end="873:60"><expr pos:start="873:60" pos:end="873:60"><literal type="number" pos:start="873:60" pos:end="873:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="877:11" pos:end="883:9">else <block pos:start="877:16" pos:end="883:9">{<block_content pos:start="879:13" pos:end="881:30">

            <expr_stmt pos:start="879:13" pos:end="879:25"><expr pos:start="879:13" pos:end="879:24"><name pos:start="879:13" pos:end="879:20"><name pos:start="879:13" pos:end="879:13">v</name><operator pos:start="879:14" pos:end="879:15">-&gt;</operator><name pos:start="879:16" pos:end="879:20">ttmbf</name></name> <operator pos:start="879:22" pos:end="879:22">=</operator> <literal type="number" pos:start="879:24" pos:end="879:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="881:13" pos:end="881:30"><expr pos:start="881:13" pos:end="881:29"><name pos:start="881:13" pos:end="881:20"><name pos:start="881:13" pos:end="881:13">v</name><operator pos:start="881:14" pos:end="881:15">-&gt;</operator><name pos:start="881:16" pos:end="881:20">ttfrm</name></name> <operator pos:start="881:22" pos:end="881:22">=</operator> <name pos:start="881:24" pos:end="881:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="885:9" pos:end="885:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="891:5" pos:end="897:5"><if pos:start="891:5" pos:end="897:5">if <condition pos:start="891:8" pos:end="891:54">(<expr pos:start="891:9" pos:end="891:53"><name pos:start="891:9" pos:end="891:14"><name pos:start="891:9" pos:end="891:9">v</name><operator pos:start="891:10" pos:end="891:11">-&gt;</operator><name pos:start="891:12" pos:end="891:14">fcm</name></name> <operator pos:start="891:16" pos:end="891:17">!=</operator> <name pos:start="891:19" pos:end="891:29">PROGRESSIVE</name> <operator pos:start="891:31" pos:end="891:32">&amp;&amp;</operator> <operator pos:start="891:34" pos:end="891:34">!</operator><name pos:start="891:35" pos:end="891:53"><name pos:start="891:35" pos:end="891:35">v</name><operator pos:start="891:36" pos:end="891:37">-&gt;</operator><name pos:start="891:38" pos:end="891:38">s</name><operator pos:start="891:39" pos:end="891:39">.</operator><name pos:start="891:40" pos:end="891:53">quarter_sample</name></name></expr>)</condition> <block pos:start="891:56" pos:end="897:5">{<block_content pos:start="893:9" pos:end="895:25">

        <expr_stmt pos:start="893:9" pos:end="893:25"><expr pos:start="893:9" pos:end="893:24"><name pos:start="893:9" pos:end="893:18"><name pos:start="893:9" pos:end="893:9">v</name><operator pos:start="893:10" pos:end="893:11">-&gt;</operator><name pos:start="893:12" pos:end="893:18">range_x</name></name> <operator pos:start="893:20" pos:end="893:22">&lt;&lt;=</operator> <literal type="number" pos:start="893:24" pos:end="893:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="895:9" pos:end="895:25"><expr pos:start="895:9" pos:end="895:24"><name pos:start="895:9" pos:end="895:18"><name pos:start="895:9" pos:end="895:9">v</name><operator pos:start="895:10" pos:end="895:11">-&gt;</operator><name pos:start="895:12" pos:end="895:18">range_y</name></name> <operator pos:start="895:20" pos:end="895:22">&lt;&lt;=</operator> <literal type="number" pos:start="895:24" pos:end="895:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="901:5" pos:end="901:19">/* AC Syntax */</comment>

    <expr_stmt pos:start="903:5" pos:end="903:40"><expr pos:start="903:5" pos:end="903:39"><name pos:start="903:5" pos:end="903:23"><name pos:start="903:5" pos:end="903:5">v</name><operator pos:start="903:6" pos:end="903:7">-&gt;</operator><name pos:start="903:8" pos:end="903:23">c_ac_table_index</name></name> <operator pos:start="903:25" pos:end="903:25">=</operator> <call pos:start="903:27" pos:end="903:39"><name pos:start="903:27" pos:end="903:35">decode012</name><argument_list pos:start="903:36" pos:end="903:39">(<argument pos:start="903:37" pos:end="903:38"><expr pos:start="903:37" pos:end="903:38"><name pos:start="903:37" pos:end="903:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="905:5" pos:end="909:5"><if pos:start="905:5" pos:end="909:5">if <condition pos:start="905:8" pos:end="905:84">(<expr pos:start="905:9" pos:end="905:83"><name pos:start="905:9" pos:end="905:22"><name pos:start="905:9" pos:end="905:9">v</name><operator pos:start="905:10" pos:end="905:11">-&gt;</operator><name pos:start="905:12" pos:end="905:12">s</name><operator pos:start="905:13" pos:end="905:13">.</operator><name pos:start="905:14" pos:end="905:22">pict_type</name></name> <operator pos:start="905:24" pos:end="905:25">==</operator> <name pos:start="905:27" pos:end="905:43">AV_PICTURE_TYPE_I</name> <operator pos:start="905:45" pos:end="905:46">||</operator> <name pos:start="905:48" pos:end="905:61"><name pos:start="905:48" pos:end="905:48">v</name><operator pos:start="905:49" pos:end="905:50">-&gt;</operator><name pos:start="905:51" pos:end="905:51">s</name><operator pos:start="905:52" pos:end="905:52">.</operator><name pos:start="905:53" pos:end="905:61">pict_type</name></name> <operator pos:start="905:63" pos:end="905:64">==</operator> <name pos:start="905:66" pos:end="905:83">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="905:86" pos:end="909:5">{<block_content pos:start="907:9" pos:end="907:44">

        <expr_stmt pos:start="907:9" pos:end="907:44"><expr pos:start="907:9" pos:end="907:43"><name pos:start="907:9" pos:end="907:27"><name pos:start="907:9" pos:end="907:9">v</name><operator pos:start="907:10" pos:end="907:11">-&gt;</operator><name pos:start="907:12" pos:end="907:27">y_ac_table_index</name></name> <operator pos:start="907:29" pos:end="907:29">=</operator> <call pos:start="907:31" pos:end="907:43"><name pos:start="907:31" pos:end="907:39">decode012</name><argument_list pos:start="907:40" pos:end="907:43">(<argument pos:start="907:41" pos:end="907:42"><expr pos:start="907:41" pos:end="907:42"><name pos:start="907:41" pos:end="907:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="911:5" pos:end="911:19">/* DC Syntax */</comment>

    <expr_stmt pos:start="913:5" pos:end="913:40"><expr pos:start="913:5" pos:end="913:39"><name pos:start="913:5" pos:end="913:23"><name pos:start="913:5" pos:end="913:5">v</name><operator pos:start="913:6" pos:end="913:7">-&gt;</operator><name pos:start="913:8" pos:end="913:8">s</name><operator pos:start="913:9" pos:end="913:9">.</operator><name pos:start="913:10" pos:end="913:23">dc_table_index</name></name> <operator pos:start="913:25" pos:end="913:25">=</operator> <call pos:start="913:27" pos:end="913:39"><name pos:start="913:27" pos:end="913:35">get_bits1</name><argument_list pos:start="913:36" pos:end="913:39">(<argument pos:start="913:37" pos:end="913:38"><expr pos:start="913:37" pos:end="913:38"><name pos:start="913:37" pos:end="913:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="915:5" pos:end="923:5"><if pos:start="915:5" pos:end="923:5">if <condition pos:start="915:8" pos:end="917:21">(<expr pos:start="915:9" pos:end="917:20"><operator pos:start="915:9" pos:end="915:9">(</operator><name pos:start="915:10" pos:end="915:23"><name pos:start="915:10" pos:end="915:10">v</name><operator pos:start="915:11" pos:end="915:12">-&gt;</operator><name pos:start="915:13" pos:end="915:13">s</name><operator pos:start="915:14" pos:end="915:14">.</operator><name pos:start="915:15" pos:end="915:23">pict_type</name></name> <operator pos:start="915:25" pos:end="915:26">==</operator> <name pos:start="915:28" pos:end="915:44">AV_PICTURE_TYPE_I</name> <operator pos:start="915:46" pos:end="915:47">||</operator> <name pos:start="915:49" pos:end="915:62"><name pos:start="915:49" pos:end="915:49">v</name><operator pos:start="915:50" pos:end="915:51">-&gt;</operator><name pos:start="915:52" pos:end="915:52">s</name><operator pos:start="915:53" pos:end="915:53">.</operator><name pos:start="915:54" pos:end="915:62">pict_type</name></name> <operator pos:start="915:64" pos:end="915:65">==</operator> <name pos:start="915:67" pos:end="915:84">AV_PICTURE_TYPE_BI</name><operator pos:start="915:85" pos:end="915:85">)</operator>

        <operator pos:start="917:9" pos:end="917:10">&amp;&amp;</operator> <name pos:start="917:12" pos:end="917:20"><name pos:start="917:12" pos:end="917:12">v</name><operator pos:start="917:13" pos:end="917:14">-&gt;</operator><name pos:start="917:15" pos:end="917:20">dquant</name></name></expr>)</condition> <block pos:start="917:23" pos:end="923:5">{<block_content pos:start="919:9" pos:end="921:31">

        <expr_stmt pos:start="919:9" pos:end="919:62"><expr pos:start="919:9" pos:end="919:61"><call pos:start="919:9" pos:end="919:61"><name pos:start="919:9" pos:end="919:14">av_log</name><argument_list pos:start="919:15" pos:end="919:61">(<argument pos:start="919:16" pos:end="919:25"><expr pos:start="919:16" pos:end="919:25"><name pos:start="919:16" pos:end="919:25"><name pos:start="919:16" pos:end="919:16">v</name><operator pos:start="919:17" pos:end="919:18">-&gt;</operator><name pos:start="919:19" pos:end="919:19">s</name><operator pos:start="919:20" pos:end="919:20">.</operator><name pos:start="919:21" pos:end="919:25">avctx</name></name></expr></argument>, <argument pos:start="919:28" pos:end="919:39"><expr pos:start="919:28" pos:end="919:39"><name pos:start="919:28" pos:end="919:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="919:42" pos:end="919:60"><expr pos:start="919:42" pos:end="919:60"><literal type="string" pos:start="919:42" pos:end="919:60">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="921:9" pos:end="921:31"><expr pos:start="921:9" pos:end="921:30"><call pos:start="921:9" pos:end="921:30"><name pos:start="921:9" pos:end="921:27">vop_dquant_decoding</name><argument_list pos:start="921:28" pos:end="921:30">(<argument pos:start="921:29" pos:end="921:29"><expr pos:start="921:29" pos:end="921:29"><name pos:start="921:29" pos:end="921:29">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="927:5" pos:end="927:19"><expr pos:start="927:5" pos:end="927:18"><name pos:start="927:5" pos:end="927:14"><name pos:start="927:5" pos:end="927:5">v</name><operator pos:start="927:6" pos:end="927:7">-&gt;</operator><name pos:start="927:8" pos:end="927:14">bi_type</name></name> <operator pos:start="927:16" pos:end="927:16">=</operator> <literal type="number" pos:start="927:18" pos:end="927:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="929:5" pos:end="935:5"><if pos:start="929:5" pos:end="935:5">if <condition pos:start="929:8" pos:end="929:45">(<expr pos:start="929:9" pos:end="929:44"><name pos:start="929:9" pos:end="929:22"><name pos:start="929:9" pos:end="929:9">v</name><operator pos:start="929:10" pos:end="929:11">-&gt;</operator><name pos:start="929:12" pos:end="929:12">s</name><operator pos:start="929:13" pos:end="929:13">.</operator><name pos:start="929:14" pos:end="929:22">pict_type</name></name> <operator pos:start="929:24" pos:end="929:25">==</operator> <name pos:start="929:27" pos:end="929:44">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="929:47" pos:end="935:5">{<block_content pos:start="931:9" pos:end="933:23">

        <expr_stmt pos:start="931:9" pos:end="931:43"><expr pos:start="931:9" pos:end="931:42"><name pos:start="931:9" pos:end="931:22"><name pos:start="931:9" pos:end="931:9">v</name><operator pos:start="931:10" pos:end="931:11">-&gt;</operator><name pos:start="931:12" pos:end="931:12">s</name><operator pos:start="931:13" pos:end="931:13">.</operator><name pos:start="931:14" pos:end="931:22">pict_type</name></name> <operator pos:start="931:24" pos:end="931:24">=</operator> <name pos:start="931:26" pos:end="931:42">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <expr_stmt pos:start="933:9" pos:end="933:23"><expr pos:start="933:9" pos:end="933:22"><name pos:start="933:9" pos:end="933:18"><name pos:start="933:9" pos:end="933:9">v</name><operator pos:start="933:10" pos:end="933:11">-&gt;</operator><name pos:start="933:12" pos:end="933:18">bi_type</name></name> <operator pos:start="933:20" pos:end="933:20">=</operator> <literal type="number" pos:start="933:22" pos:end="933:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="937:5" pos:end="937:13">return <expr pos:start="937:12" pos:end="937:12"><literal type="number" pos:start="937:12" pos:end="937:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
