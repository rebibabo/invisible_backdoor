<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7264.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">send_sub_rect_jpeg</name><parameter_list pos:start="1:30" pos:end="5:50">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:38">VncState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">vs</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:49"><decl pos:start="1:45" pos:end="1:49"><type pos:start="1:45" pos:end="1:49"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:49">x</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:56"><decl pos:start="1:52" pos:end="1:56"><type pos:start="1:52" pos:end="1:56"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:56">y</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:63"><decl pos:start="1:59" pos:end="1:63"><type pos:start="1:59" pos:end="1:63"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:63">w</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">h</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:36"><decl pos:start="3:31" pos:end="3:36"><type pos:start="3:31" pos:end="3:36"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:36">bg</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:44"><decl pos:start="3:39" pos:end="3:44"><type pos:start="3:39" pos:end="3:44"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:44">fg</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:56"><decl pos:start="3:47" pos:end="3:56"><type pos:start="3:47" pos:end="3:56"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:56">colors</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:49"><decl pos:start="5:31" pos:end="5:49"><type pos:start="5:31" pos:end="5:49"><name pos:start="5:31" pos:end="5:40">VncPalette</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:49">palette</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="59:1">{<block_content pos:start="9:5" pos:end="57:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="55:5"><if pos:start="13:5" pos:end="28:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:14">colors</name> <operator pos:start="13:16" pos:end="13:17">==</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>)</condition> <block pos:start="13:22" pos:end="28:5">{<block_content pos:start="15:9" pos:end="26:9">

        <if_stmt pos:start="15:9" pos:end="26:9"><if pos:start="15:9" pos:end="26:9">if <condition pos:start="15:12" pos:end="15:48">(<expr pos:start="15:13" pos:end="15:47"><call pos:start="15:13" pos:end="15:47"><name pos:start="15:13" pos:end="15:37">tight_detect_smooth_image</name><argument_list pos:start="15:38" pos:end="15:47">(<argument pos:start="15:39" pos:end="15:40"><expr pos:start="15:39" pos:end="15:40"><name pos:start="15:39" pos:end="15:40">vs</name></expr></argument>, <argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><name pos:start="15:43" pos:end="15:43">w</name></expr></argument>, <argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><name pos:start="15:46" pos:end="15:46">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:50" pos:end="26:9">{<block_content pos:start="17:13" pos:end="24:55">

            <decl_stmt pos:start="17:13" pos:end="17:69"><decl pos:start="17:13" pos:end="17:68"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:23">quality</name> <init pos:start="17:25" pos:end="17:68">= <expr pos:start="17:27" pos:end="17:68"><name pos:start="17:27" pos:end="17:55"><name pos:start="17:27" pos:end="17:36">tight_conf</name><index pos:start="17:37" pos:end="17:55">[<expr pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:39">vs</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:46">tight</name><operator pos:start="17:47" pos:end="17:47">.</operator><name pos:start="17:48" pos:end="17:54">quality</name></name></expr>]</index></name><operator pos:start="17:56" pos:end="17:56">.</operator><name pos:start="17:57" pos:end="17:68">jpeg_quality</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="21:13" pos:end="21:58"><expr pos:start="21:13" pos:end="21:57"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:57"><name pos:start="21:19" pos:end="21:32">send_jpeg_rect</name><argument_list pos:start="21:33" pos:end="21:57">(<argument pos:start="21:34" pos:end="21:35"><expr pos:start="21:34" pos:end="21:35"><name pos:start="21:34" pos:end="21:35">vs</name></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">x</name></expr></argument>, <argument pos:start="21:41" pos:end="21:41"><expr pos:start="21:41" pos:end="21:41"><name pos:start="21:41" pos:end="21:41">y</name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><name pos:start="21:44" pos:end="21:44">w</name></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><name pos:start="21:47" pos:end="21:47">h</name></expr></argument>, <argument pos:start="21:50" pos:end="21:56"><expr pos:start="21:50" pos:end="21:56"><name pos:start="21:50" pos:end="21:56">quality</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="24:13" pos:end="24:55"><expr pos:start="24:13" pos:end="24:54"><name pos:start="24:13" pos:end="24:15">ret</name> <operator pos:start="24:17" pos:end="24:17">=</operator> <call pos:start="24:19" pos:end="24:54"><name pos:start="24:19" pos:end="24:38">send_full_color_rect</name><argument_list pos:start="24:39" pos:end="24:54">(<argument pos:start="24:40" pos:end="24:41"><expr pos:start="24:40" pos:end="24:41"><name pos:start="24:40" pos:end="24:41">vs</name></expr></argument>, <argument pos:start="24:44" pos:end="24:44"><expr pos:start="24:44" pos:end="24:44"><name pos:start="24:44" pos:end="24:44">x</name></expr></argument>, <argument pos:start="24:47" pos:end="24:47"><expr pos:start="24:47" pos:end="24:47"><name pos:start="24:47" pos:end="24:47">y</name></expr></argument>, <argument pos:start="24:50" pos:end="24:50"><expr pos:start="24:50" pos:end="24:50"><name pos:start="24:50" pos:end="24:50">w</name></expr></argument>, <argument pos:start="24:53" pos:end="24:53"><expr pos:start="24:53" pos:end="24:53"><name pos:start="24:53" pos:end="24:53">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="28:7" pos:end="32:5">else if <condition pos:start="28:15" pos:end="28:27">(<expr pos:start="28:16" pos:end="28:26"><name pos:start="28:16" pos:end="28:21">colors</name> <operator pos:start="28:23" pos:end="28:24">==</operator> <literal type="number" pos:start="28:26" pos:end="28:26">1</literal></expr>)</condition> <block pos:start="28:29" pos:end="32:5">{<block_content pos:start="30:9" pos:end="30:34">

        <expr_stmt pos:start="30:9" pos:end="30:34"><expr pos:start="30:9" pos:end="30:33"><name pos:start="30:9" pos:end="30:11">ret</name> <operator pos:start="30:13" pos:end="30:13">=</operator> <call pos:start="30:15" pos:end="30:33"><name pos:start="30:15" pos:end="30:29">send_solid_rect</name><argument_list pos:start="30:30" pos:end="30:33">(<argument pos:start="30:31" pos:end="30:32"><expr pos:start="30:31" pos:end="30:32"><name pos:start="30:31" pos:end="30:32">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="32:7" pos:end="36:5">else if <condition pos:start="32:15" pos:end="32:27">(<expr pos:start="32:16" pos:end="32:26"><name pos:start="32:16" pos:end="32:21">colors</name> <operator pos:start="32:23" pos:end="32:24">==</operator> <literal type="number" pos:start="32:26" pos:end="32:26">2</literal></expr>)</condition> <block pos:start="32:29" pos:end="36:5">{<block_content pos:start="34:9" pos:end="34:53">

        <expr_stmt pos:start="34:9" pos:end="34:53"><expr pos:start="34:9" pos:end="34:52"><name pos:start="34:9" pos:end="34:11">ret</name> <operator pos:start="34:13" pos:end="34:13">=</operator> <call pos:start="34:15" pos:end="34:52"><name pos:start="34:15" pos:end="34:28">send_mono_rect</name><argument_list pos:start="34:29" pos:end="34:52">(<argument pos:start="34:30" pos:end="34:31"><expr pos:start="34:30" pos:end="34:31"><name pos:start="34:30" pos:end="34:31">vs</name></expr></argument>, <argument pos:start="34:34" pos:end="34:34"><expr pos:start="34:34" pos:end="34:34"><name pos:start="34:34" pos:end="34:34">x</name></expr></argument>, <argument pos:start="34:37" pos:end="34:37"><expr pos:start="34:37" pos:end="34:37"><name pos:start="34:37" pos:end="34:37">y</name></expr></argument>, <argument pos:start="34:40" pos:end="34:40"><expr pos:start="34:40" pos:end="34:40"><name pos:start="34:40" pos:end="34:40">w</name></expr></argument>, <argument pos:start="34:43" pos:end="34:43"><expr pos:start="34:43" pos:end="34:43"><name pos:start="34:43" pos:end="34:43">h</name></expr></argument>, <argument pos:start="34:46" pos:end="34:47"><expr pos:start="34:46" pos:end="34:47"><name pos:start="34:46" pos:end="34:47">bg</name></expr></argument>, <argument pos:start="34:50" pos:end="34:51"><expr pos:start="34:50" pos:end="34:51"><name pos:start="34:50" pos:end="34:51">fg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="36:7" pos:end="55:5">else if <condition pos:start="36:15" pos:end="36:29">(<expr pos:start="36:16" pos:end="36:28"><name pos:start="36:16" pos:end="36:21">colors</name> <operator pos:start="36:23" pos:end="36:24">&lt;=</operator> <literal type="number" pos:start="36:26" pos:end="36:28">256</literal></expr>)</condition> <block pos:start="36:31" pos:end="55:5">{<block_content pos:start="38:9" pos:end="51:9">

        <if_stmt pos:start="38:9" pos:end="51:9"><if pos:start="38:9" pos:end="51:9">if <condition pos:start="38:12" pos:end="40:48">(<expr pos:start="38:13" pos:end="40:47"><name pos:start="38:13" pos:end="38:18">colors</name> <operator pos:start="38:20" pos:end="38:20">&gt;</operator> <literal type="number" pos:start="38:22" pos:end="38:23">96</literal> <operator pos:start="38:25" pos:end="38:26">&amp;&amp;</operator>

            <call pos:start="40:13" pos:end="40:47"><name pos:start="40:13" pos:end="40:37">tight_detect_smooth_image</name><argument_list pos:start="40:38" pos:end="40:47">(<argument pos:start="40:39" pos:end="40:40"><expr pos:start="40:39" pos:end="40:40"><name pos:start="40:39" pos:end="40:40">vs</name></expr></argument>, <argument pos:start="40:43" pos:end="40:43"><expr pos:start="40:43" pos:end="40:43"><name pos:start="40:43" pos:end="40:43">w</name></expr></argument>, <argument pos:start="40:46" pos:end="40:46"><expr pos:start="40:46" pos:end="40:46"><name pos:start="40:46" pos:end="40:46">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="40:50" pos:end="51:9">{<block_content pos:start="42:13" pos:end="49:61">

            <decl_stmt pos:start="42:13" pos:end="42:69"><decl pos:start="42:13" pos:end="42:68"><type pos:start="42:13" pos:end="42:15"><name pos:start="42:13" pos:end="42:15">int</name></type> <name pos:start="42:17" pos:end="42:23">quality</name> <init pos:start="42:25" pos:end="42:68">= <expr pos:start="42:27" pos:end="42:68"><name pos:start="42:27" pos:end="42:55"><name pos:start="42:27" pos:end="42:36">tight_conf</name><index pos:start="42:37" pos:end="42:55">[<expr pos:start="42:38" pos:end="42:54"><name pos:start="42:38" pos:end="42:54"><name pos:start="42:38" pos:end="42:39">vs</name><operator pos:start="42:40" pos:end="42:41">-&gt;</operator><name pos:start="42:42" pos:end="42:46">tight</name><operator pos:start="42:47" pos:end="42:47">.</operator><name pos:start="42:48" pos:end="42:54">quality</name></name></expr>]</index></name><operator pos:start="42:56" pos:end="42:56">.</operator><name pos:start="42:57" pos:end="42:68">jpeg_quality</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="46:13" pos:end="46:58"><expr pos:start="46:13" pos:end="46:57"><name pos:start="46:13" pos:end="46:15">ret</name> <operator pos:start="46:17" pos:end="46:17">=</operator> <call pos:start="46:19" pos:end="46:57"><name pos:start="46:19" pos:end="46:32">send_jpeg_rect</name><argument_list pos:start="46:33" pos:end="46:57">(<argument pos:start="46:34" pos:end="46:35"><expr pos:start="46:34" pos:end="46:35"><name pos:start="46:34" pos:end="46:35">vs</name></expr></argument>, <argument pos:start="46:38" pos:end="46:38"><expr pos:start="46:38" pos:end="46:38"><name pos:start="46:38" pos:end="46:38">x</name></expr></argument>, <argument pos:start="46:41" pos:end="46:41"><expr pos:start="46:41" pos:end="46:41"><name pos:start="46:41" pos:end="46:41">y</name></expr></argument>, <argument pos:start="46:44" pos:end="46:44"><expr pos:start="46:44" pos:end="46:44"><name pos:start="46:44" pos:end="46:44">w</name></expr></argument>, <argument pos:start="46:47" pos:end="46:47"><expr pos:start="46:47" pos:end="46:47"><name pos:start="46:47" pos:end="46:47">h</name></expr></argument>, <argument pos:start="46:50" pos:end="46:56"><expr pos:start="46:50" pos:end="46:56"><name pos:start="46:50" pos:end="46:56">quality</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="49:13" pos:end="49:61"><expr pos:start="49:13" pos:end="49:60"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:60"><name pos:start="49:19" pos:end="49:35">send_palette_rect</name><argument_list pos:start="49:36" pos:end="49:60">(<argument pos:start="49:37" pos:end="49:38"><expr pos:start="49:37" pos:end="49:38"><name pos:start="49:37" pos:end="49:38">vs</name></expr></argument>, <argument pos:start="49:41" pos:end="49:41"><expr pos:start="49:41" pos:end="49:41"><name pos:start="49:41" pos:end="49:41">x</name></expr></argument>, <argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><name pos:start="49:44" pos:end="49:44">y</name></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><name pos:start="49:47" pos:end="49:47">w</name></expr></argument>, <argument pos:start="49:50" pos:end="49:50"><expr pos:start="49:50" pos:end="49:50"><name pos:start="49:50" pos:end="49:50">h</name></expr></argument>, <argument pos:start="49:53" pos:end="49:59"><expr pos:start="49:53" pos:end="49:59"><name pos:start="49:53" pos:end="49:59">palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
