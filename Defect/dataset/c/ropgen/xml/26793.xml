<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26793.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">virtio_scsi_dataplane_start</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">VirtIOSCSI</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:32">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">qbus</name> <init pos:start="9:20" pos:end="9:56">= <expr pos:start="9:22" pos:end="9:56"><call pos:start="9:22" pos:end="9:56"><name pos:start="9:22" pos:end="9:24">BUS</name><argument_list pos:start="9:25" pos:end="9:56">(<argument pos:start="9:26" pos:end="9:55"><expr pos:start="9:26" pos:end="9:55"><call pos:start="9:26" pos:end="9:55"><name pos:start="9:26" pos:end="9:44">qdev_get_parent_bus</name><argument_list pos:start="9:45" pos:end="9:55">(<argument pos:start="9:46" pos:end="9:54"><expr pos:start="9:46" pos:end="9:54"><call pos:start="9:46" pos:end="9:54"><name pos:start="9:46" pos:end="9:51">DEVICE</name><argument_list pos:start="9:52" pos:end="9:54">(<argument pos:start="9:53" pos:end="9:53"><expr pos:start="9:53" pos:end="9:53"><name pos:start="9:53" pos:end="9:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">VirtioBusClass</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">k</name> <init pos:start="11:23" pos:end="11:50">= <expr pos:start="11:25" pos:end="11:50"><call pos:start="11:25" pos:end="11:50"><name pos:start="11:25" pos:end="11:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="11:45" pos:end="11:50">(<argument pos:start="11:46" pos:end="11:49"><expr pos:start="11:46" pos:end="11:49"><name pos:start="11:46" pos:end="11:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">VirtIOSCSICommon</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">vs</name> <init pos:start="13:26" pos:end="13:48">= <expr pos:start="13:28" pos:end="13:48"><call pos:start="13:28" pos:end="13:48"><name pos:start="13:28" pos:end="13:45">VIRTIO_SCSI_COMMON</name><argument_list pos:start="13:46" pos:end="13:48">(<argument pos:start="13:47" pos:end="13:47"><expr pos:start="13:47" pos:end="13:47"><name pos:start="13:47" pos:end="13:47">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="23:62">(<expr pos:start="17:9" pos:end="23:61"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:28">dataplane_started</name></name> <operator pos:start="17:30" pos:end="17:31">||</operator>

        <name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:29">dataplane_starting</name></name> <operator pos:start="19:31" pos:end="19:32">||</operator>

        <name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:27">dataplane_fenced</name></name> <operator pos:start="21:29" pos:end="21:30">||</operator>

        <name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">ctx</name></name> <operator pos:start="23:16" pos:end="23:17">!=</operator> <call pos:start="23:19" pos:end="23:61"><name pos:start="23:19" pos:end="23:42">iothread_get_aio_context</name><argument_list pos:start="23:43" pos:end="23:61">(<argument pos:start="23:44" pos:end="23:60"><expr pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:45">vs</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:51">conf</name><operator pos:start="23:52" pos:end="23:52">.</operator><name pos:start="23:53" pos:end="23:60">iothread</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:25">dataplane_starting</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:32">true</name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:37">/* Set up guest notifier (irq) */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:77"><expr pos:start="37:5" pos:end="37:76"><name pos:start="37:5" pos:end="37:6">rc</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:76"><name pos:start="37:10" pos:end="37:31"><name pos:start="37:10" pos:end="37:10">k</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:31">set_guest_notifiers</name></name><argument_list pos:start="37:32" pos:end="37:76">(<argument pos:start="37:33" pos:end="37:44"><expr pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:36">qbus</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:44">parent</name></name></expr></argument>, <argument pos:start="37:47" pos:end="37:69"><expr pos:start="37:47" pos:end="37:69"><name pos:start="37:47" pos:end="37:65"><name pos:start="37:47" pos:end="37:48">vs</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:54">conf</name><operator pos:start="37:55" pos:end="37:55">.</operator><name pos:start="37:56" pos:end="37:65">num_queues</name></name> <operator pos:start="37:67" pos:end="37:67">+</operator> <literal type="number" pos:start="37:69" pos:end="37:69">2</literal></expr></argument>, <argument pos:start="37:72" pos:end="37:75"><expr pos:start="37:72" pos:end="37:75"><name pos:start="37:72" pos:end="37:75">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:10">rc</name> <operator pos:start="39:12" pos:end="39:13">!=</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:34">

        <expr_stmt pos:start="41:9" pos:end="43:51"><expr pos:start="41:9" pos:end="43:50"><call pos:start="41:9" pos:end="43:50"><name pos:start="41:9" pos:end="41:15">fprintf</name><argument_list pos:start="41:16" pos:end="43:50">(<argument pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">stderr</name></expr></argument>, <argument pos:start="41:25" pos:end="43:45"><expr pos:start="41:25" pos:end="43:45"><literal type="string" pos:start="41:25" pos:end="41:75">"virtio-scsi: Failed to set guest notifiers (%d), "</literal>

                <literal type="string" pos:start="43:17" pos:end="43:45">"ensure -enable-kvm is set\n"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><name pos:start="43:48" pos:end="43:49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:34">goto <name pos:start="45:14" pos:end="45:33">fail_guest_notifiers</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><call pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:23">aio_context_acquire</name><argument_list pos:start="51:24" pos:end="51:31">(<argument pos:start="51:25" pos:end="51:30"><expr pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:68"><expr pos:start="53:5" pos:end="55:67"><name pos:start="53:5" pos:end="53:6">rc</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="55:67"><name pos:start="53:10" pos:end="53:31">virtio_scsi_vring_init</name><argument_list pos:start="53:32" pos:end="55:67">(<argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">s</name></expr></argument>, <argument pos:start="53:36" pos:end="53:46"><expr pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:37">vs</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:46">ctrl_vq</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:49"><expr pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">0</literal></expr></argument>,

                                <argument pos:start="55:33" pos:end="55:66"><expr pos:start="55:33" pos:end="55:66"><name pos:start="55:33" pos:end="55:66">virtio_scsi_data_plane_handle_ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:11">(<expr pos:start="57:9" pos:end="57:10"><name pos:start="57:9" pos:end="57:10">rc</name></expr>)</condition> <block pos:start="57:13" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:25">

        <goto pos:start="59:9" pos:end="59:25">goto <name pos:start="59:14" pos:end="59:24">fail_vrings</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:69"><expr pos:start="63:5" pos:end="65:68"><name pos:start="63:5" pos:end="63:6">rc</name> <operator pos:start="63:8" pos:end="63:8">=</operator> <call pos:start="63:10" pos:end="65:68"><name pos:start="63:10" pos:end="63:31">virtio_scsi_vring_init</name><argument_list pos:start="63:32" pos:end="65:68">(<argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><name pos:start="63:33" pos:end="63:33">s</name></expr></argument>, <argument pos:start="63:36" pos:end="63:47"><expr pos:start="63:36" pos:end="63:47"><name pos:start="63:36" pos:end="63:47"><name pos:start="63:36" pos:end="63:37">vs</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:47">event_vq</name></name></expr></argument>, <argument pos:start="63:50" pos:end="63:50"><expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">1</literal></expr></argument>,

                                <argument pos:start="65:33" pos:end="65:67"><expr pos:start="65:33" pos:end="65:67"><name pos:start="65:33" pos:end="65:67">virtio_scsi_data_plane_handle_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:11">(<expr pos:start="67:9" pos:end="67:10"><name pos:start="67:9" pos:end="67:10">rc</name></expr>)</condition> <block pos:start="67:13" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:25">

        <goto pos:start="69:9" pos:end="69:25">goto <name pos:start="69:14" pos:end="69:24">fail_vrings</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="73:5" pos:end="85:5">for <control pos:start="73:9" pos:end="73:45">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:40"><expr pos:start="73:17" pos:end="73:39"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:22">vs</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:28">conf</name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:39">num_queues</name></name></expr>;</condition> <incr pos:start="73:42" pos:end="73:44"><expr pos:start="73:42" pos:end="73:44"><name pos:start="73:42" pos:end="73:42">i</name><operator pos:start="73:43" pos:end="73:44">++</operator></expr></incr>)</control> <block pos:start="73:47" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:9">

        <expr_stmt pos:start="75:9" pos:end="77:71"><expr pos:start="75:9" pos:end="77:70"><name pos:start="75:9" pos:end="75:10">rc</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <call pos:start="75:14" pos:end="77:70"><name pos:start="75:14" pos:end="75:35">virtio_scsi_vring_init</name><argument_list pos:start="75:36" pos:end="77:70">(<argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">s</name></expr></argument>, <argument pos:start="75:40" pos:end="75:53"><expr pos:start="75:40" pos:end="75:53"><name pos:start="75:40" pos:end="75:53"><name pos:start="75:40" pos:end="75:41">vs</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:50">cmd_vqs</name><index pos:start="75:51" pos:end="75:53">[<expr pos:start="75:52" pos:end="75:52"><name pos:start="75:52" pos:end="75:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="75:56" pos:end="75:60"><expr pos:start="75:56" pos:end="75:60"><name pos:start="75:56" pos:end="75:56">i</name> <operator pos:start="75:58" pos:end="75:58">+</operator> <literal type="number" pos:start="75:60" pos:end="75:60">2</literal></expr></argument>,

                                    <argument pos:start="77:37" pos:end="77:69"><expr pos:start="77:37" pos:end="77:69"><name pos:start="77:37" pos:end="77:69">virtio_scsi_data_plane_handle_cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:15">(<expr pos:start="79:13" pos:end="79:14"><name pos:start="79:13" pos:end="79:14">rc</name></expr>)</condition> <block pos:start="79:17" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:29">

            <goto pos:start="81:13" pos:end="81:29">goto <name pos:start="81:18" pos:end="81:28">fail_vrings</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="89:5" pos:end="89:34"><expr pos:start="89:5" pos:end="89:33"><name pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:25">dataplane_starting</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:33">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><name pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:24">dataplane_started</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:31">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:32"><expr pos:start="93:5" pos:end="93:31"><call pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:23">aio_context_release</name><argument_list pos:start="93:24" pos:end="93:31">(<argument pos:start="93:25" pos:end="93:30"><expr pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:11">return;</return>



<label pos:start="99:1" pos:end="99:12"><name pos:start="99:1" pos:end="99:11">fail_vrings</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><call pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:25">virtio_scsi_clear_aio</name><argument_list pos:start="101:26" pos:end="101:28">(<argument pos:start="101:27" pos:end="101:27"><expr pos:start="101:27" pos:end="101:27"><name pos:start="101:27" pos:end="101:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:32"><expr pos:start="103:5" pos:end="103:31"><call pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:23">aio_context_release</name><argument_list pos:start="103:24" pos:end="103:31">(<argument pos:start="103:25" pos:end="103:30"><expr pos:start="103:25" pos:end="103:30"><name pos:start="103:25" pos:end="103:30"><name pos:start="103:25" pos:end="103:25">s</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="105:5" pos:end="109:5">for <control pos:start="105:9" pos:end="105:49">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:44"><expr pos:start="105:17" pos:end="105:43"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <name pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:22">vs</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:28">conf</name><operator pos:start="105:29" pos:end="105:29">.</operator><name pos:start="105:30" pos:end="105:39">num_queues</name></name> <operator pos:start="105:41" pos:end="105:41">+</operator> <literal type="number" pos:start="105:43" pos:end="105:43">2</literal></expr>;</condition> <incr pos:start="105:46" pos:end="105:48"><expr pos:start="105:46" pos:end="105:48"><name pos:start="105:46" pos:end="105:46">i</name><operator pos:start="105:47" pos:end="105:48">++</operator></expr></incr>)</control> <block pos:start="105:51" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:65">

        <expr_stmt pos:start="107:9" pos:end="107:65"><expr pos:start="107:9" pos:end="107:64"><call pos:start="107:9" pos:end="107:64"><name pos:start="107:9" pos:end="107:36">virtio_bus_set_host_notifier</name><argument_list pos:start="107:37" pos:end="107:64">(<argument pos:start="107:38" pos:end="107:53"><expr pos:start="107:38" pos:end="107:53"><call pos:start="107:38" pos:end="107:53"><name pos:start="107:38" pos:end="107:47">VIRTIO_BUS</name><argument_list pos:start="107:48" pos:end="107:53">(<argument pos:start="107:49" pos:end="107:52"><expr pos:start="107:49" pos:end="107:52"><name pos:start="107:49" pos:end="107:52">qbus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:56" pos:end="107:56"><expr pos:start="107:56" pos:end="107:56"><name pos:start="107:56" pos:end="107:56">i</name></expr></argument>, <argument pos:start="107:59" pos:end="107:63"><expr pos:start="107:59" pos:end="107:63"><name pos:start="107:59" pos:end="107:63">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="111:5" pos:end="111:73"><expr pos:start="111:5" pos:end="111:72"><call pos:start="111:5" pos:end="111:72"><name pos:start="111:5" pos:end="111:26"><name pos:start="111:5" pos:end="111:5">k</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:26">set_guest_notifiers</name></name><argument_list pos:start="111:27" pos:end="111:72">(<argument pos:start="111:28" pos:end="111:39"><expr pos:start="111:28" pos:end="111:39"><name pos:start="111:28" pos:end="111:39"><name pos:start="111:28" pos:end="111:31">qbus</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:39">parent</name></name></expr></argument>, <argument pos:start="111:42" pos:end="111:64"><expr pos:start="111:42" pos:end="111:64"><name pos:start="111:42" pos:end="111:60"><name pos:start="111:42" pos:end="111:43">vs</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:49">conf</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:60">num_queues</name></name> <operator pos:start="111:62" pos:end="111:62">+</operator> <literal type="number" pos:start="111:64" pos:end="111:64">2</literal></expr></argument>, <argument pos:start="111:67" pos:end="111:71"><expr pos:start="111:67" pos:end="111:71"><name pos:start="111:67" pos:end="111:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="113:1" pos:end="113:21"><name pos:start="113:1" pos:end="113:20">fail_guest_notifiers</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:31"><expr pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:23">dataplane_fenced</name></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:30">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:25">dataplane_starting</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:33">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:32"><expr pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:24"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:24">dataplane_started</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:31">true</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
