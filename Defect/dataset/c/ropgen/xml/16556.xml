<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16556.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">kvm_get_fpu</name><parameter_list pos:start="1:23" pos:end="1:35">(<parameter pos:start="1:24" pos:end="1:34"><decl pos:start="1:24" pos:end="1:34"><type pos:start="1:24" pos:end="1:31"><name pos:start="1:24" pos:end="1:29">X86CPU</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">kvm_fpu</name></name></type> <name pos:start="7:20" pos:end="7:22">fpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:53"><name pos:start="13:11" pos:end="13:24">kvm_vcpu_ioctl</name><argument_list pos:start="13:25" pos:end="13:53">(<argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><call pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:28">CPU</name><argument_list pos:start="13:29" pos:end="13:33">(<argument pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:32">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:36" pos:end="13:46"><expr pos:start="13:36" pos:end="13:46"><name pos:start="13:36" pos:end="13:46">KVM_GET_FPU</name></expr></argument>, <argument pos:start="13:49" pos:end="13:52"><expr pos:start="13:49" pos:end="13:52"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:52">fpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:14">fpstt</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:25"><name pos:start="23:19" pos:end="23:21">fpu</name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:25">fsw</name></name> <operator pos:start="23:27" pos:end="23:28">&gt;&gt;</operator> <literal type="number" pos:start="23:30" pos:end="23:31">11</literal><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <literal type="number" pos:start="23:36" pos:end="23:36">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">env</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">fpus</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:19">fpu</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:23">fsw</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">fpuc</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:19">fpu</name><operator pos:start="27:20" pos:end="27:20">.</operator><name pos:start="27:21" pos:end="27:23">fcw</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">fpop</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:31"><name pos:start="29:17" pos:end="29:19">fpu</name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:31">last_opcode</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:13">fpip</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:19">fpu</name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:27">last_ip</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:13">fpdp</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:19">fpu</name><operator pos:start="33:20" pos:end="33:20">.</operator><name pos:start="33:21" pos:end="33:27">last_dp</name></name></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="39:5">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">8</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><operator pos:start="35:24" pos:end="35:25">++</operator><name pos:start="35:26" pos:end="35:26">i</name></expr></incr>)</control> <block pos:start="35:29" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:48">

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">env</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">fptags</name><index pos:start="37:20" pos:end="37:22">[<expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">i</name></expr>]</index></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <operator pos:start="37:26" pos:end="37:26">!</operator><operator pos:start="37:27" pos:end="37:27">(</operator><operator pos:start="37:28" pos:end="37:28">(</operator><name pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:31">fpu</name><operator pos:start="37:32" pos:end="37:32">.</operator><name pos:start="37:33" pos:end="37:36">ftwx</name></name> <operator pos:start="37:38" pos:end="37:39">&gt;&gt;</operator> <name pos:start="37:41" pos:end="37:41">i</name><operator pos:start="37:42" pos:end="37:42">)</operator> <operator pos:start="37:44" pos:end="37:44">&amp;</operator> <literal type="number" pos:start="37:46" pos:end="37:46">1</literal><operator pos:start="37:47" pos:end="37:47">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><call pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:10">memcpy</name><argument_list pos:start="41:11" pos:end="41:52">(<argument pos:start="41:12" pos:end="41:22"><expr pos:start="41:12" pos:end="41:22"><name pos:start="41:12" pos:end="41:22"><name pos:start="41:12" pos:end="41:14">env</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:22">fpregs</name></name></expr></argument>, <argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:27">fpu</name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:31">fpr</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:51"><expr pos:start="41:34" pos:end="41:51"><sizeof pos:start="41:34" pos:end="41:51">sizeof <name pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:43">env</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:51">fpregs</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><call pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:10">memcpy</name><argument_list pos:start="43:11" pos:end="43:56">(<argument pos:start="43:12" pos:end="43:24"><expr pos:start="43:12" pos:end="43:24"><name pos:start="43:12" pos:end="43:24"><name pos:start="43:12" pos:end="43:14">env</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:24">xmm_regs</name></name></expr></argument>, <argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><name pos:start="43:27" pos:end="43:33"><name pos:start="43:27" pos:end="43:29">fpu</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:33">xmm</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:55"><expr pos:start="43:36" pos:end="43:55"><sizeof pos:start="43:36" pos:end="43:55">sizeof <name pos:start="43:43" pos:end="43:55"><name pos:start="43:43" pos:end="43:45">env</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:55">xmm_regs</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:7">env</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:14">mxcsr</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:26"><name pos:start="45:18" pos:end="45:20">fpu</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:26">mxcsr</name></name></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
