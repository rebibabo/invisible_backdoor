<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2779.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">free_ahci_device</name><parameter_list pos:start="1:29" pos:end="1:45">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:39">QPCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:25">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QPCIBus</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:19">pcibus</name> <init pos:start="5:21" pos:end="5:43">= <expr pos:start="5:23" pos:end="5:43"><ternary pos:start="5:23" pos:end="5:43"><condition pos:start="5:23" pos:end="5:27"><expr pos:start="5:23" pos:end="5:25"><name pos:start="5:23" pos:end="5:25">dev</name></expr> ?</condition><then pos:start="5:29" pos:end="5:36"> <expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:31">dev</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">bus</name></name></expr> </then><else pos:start="5:38" pos:end="5:43">: <expr pos:start="5:40" pos:end="5:43"><name pos:start="5:40" pos:end="5:43">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:70">/* libqos doesn't have a function for this, so free it manually */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:16"><expr pos:start="11:5" pos:end="11:15"><call pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">g_free</name><argument_list pos:start="11:11" pos:end="11:15">(<argument pos:start="11:12" pos:end="11:14"><expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:16">qpci_free_pc</name><argument_list pos:start="13:17" pos:end="13:24">(<argument pos:start="13:18" pos:end="13:23"><expr pos:start="13:18" pos:end="13:23"><name pos:start="13:18" pos:end="13:23">pcibus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
