<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6984.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier><name pos:start="1:7" pos:end="1:12">HELPER</name></type>(<name pos:start="1:14" pos:end="1:26">lookup_tb_ptr</name>)<parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:40">CPUArchState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:22">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><call pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:31">ENV_GET_CPU</name><argument_list pos:start="5:32" pos:end="5:36">(<argument pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:35">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">TranslationBlock</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:24">cs_base</name></decl>, <decl pos:start="9:27" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:27" pos:end="9:28">pc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">flags</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:21" pos:end="11:24">hash</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><call pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:24">cpu_get_tb_cpu_state</name><argument_list pos:start="15:25" pos:end="15:52">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">env</name></expr></argument>, <argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:33">pc</name></expr></argument>, <argument pos:start="15:36" pos:end="15:43"><expr pos:start="15:36" pos:end="15:43"><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:43">cs_base</name></expr></argument>, <argument pos:start="15:46" pos:end="15:51"><expr pos:start="15:46" pos:end="15:51"><operator pos:start="15:46" pos:end="15:46">&amp;</operator><name pos:start="15:47" pos:end="15:51">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:8">hash</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:37"><name pos:start="17:12" pos:end="17:33">tb_jmp_cache_hash_func</name><argument_list pos:start="17:34" pos:end="17:37">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:6">tb</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:50"><name pos:start="19:10" pos:end="19:24">atomic_rcu_read</name><argument_list pos:start="19:25" pos:end="19:50">(<argument pos:start="19:26" pos:end="19:49"><expr pos:start="19:26" pos:end="19:49"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:49"><name pos:start="19:27" pos:end="19:29">cpu</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:43">tb_jmp_cache</name><index pos:start="19:44" pos:end="19:49">[<expr pos:start="19:45" pos:end="19:48"><name pos:start="19:45" pos:end="19:48">hash</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="43:5"><if pos:start="23:5" pos:end="43:5">if <condition pos:start="23:8" pos:end="31:68">(<expr pos:start="23:9" pos:end="31:67"><call pos:start="23:9" pos:end="31:67"><name pos:start="23:9" pos:end="23:16">unlikely</name><argument_list pos:start="23:17" pos:end="31:67">(<argument pos:start="23:18" pos:end="31:66"><expr pos:start="23:18" pos:end="31:66"><operator pos:start="23:18" pos:end="23:18">!</operator><operator pos:start="23:19" pos:end="23:19">(</operator><name pos:start="23:20" pos:end="23:21">tb</name>

                   <operator pos:start="25:20" pos:end="25:21">&amp;&amp;</operator> <name pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:24">tb</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">pc</name></name> <operator pos:start="25:30" pos:end="25:31">==</operator> <name pos:start="25:33" pos:end="25:34">pc</name>

                   <operator pos:start="27:20" pos:end="27:21">&amp;&amp;</operator> <name pos:start="27:23" pos:end="27:33"><name pos:start="27:23" pos:end="27:24">tb</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:33">cs_base</name></name> <operator pos:start="27:35" pos:end="27:36">==</operator> <name pos:start="27:38" pos:end="27:44">cs_base</name>

                   <operator pos:start="29:20" pos:end="29:21">&amp;&amp;</operator> <name pos:start="29:23" pos:end="29:31"><name pos:start="29:23" pos:end="29:24">tb</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">flags</name></name> <operator pos:start="29:33" pos:end="29:34">==</operator> <name pos:start="29:36" pos:end="29:40">flags</name>

                   <operator pos:start="31:20" pos:end="31:21">&amp;&amp;</operator> <name pos:start="31:23" pos:end="31:43"><name pos:start="31:23" pos:end="31:24">tb</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:43">trace_vcpu_dstate</name></name> <operator pos:start="31:45" pos:end="31:46">==</operator> <operator pos:start="31:48" pos:end="31:48">*</operator><name pos:start="31:49" pos:end="31:65"><name pos:start="31:49" pos:end="31:51">cpu</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:65">trace_dstate</name></name><operator pos:start="31:66" pos:end="31:66">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:70" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:49">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:10">tb</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:54"><name pos:start="33:14" pos:end="33:29">tb_htable_lookup</name><argument_list pos:start="33:30" pos:end="33:54">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">cpu</name></expr></argument>, <argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><name pos:start="33:36" pos:end="33:37">pc</name></expr></argument>, <argument pos:start="33:40" pos:end="33:46"><expr pos:start="33:40" pos:end="33:46"><name pos:start="33:40" pos:end="33:46">cs_base</name></expr></argument>, <argument pos:start="33:49" pos:end="33:53"><expr pos:start="33:49" pos:end="33:53"><name pos:start="33:49" pos:end="33:53">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:16">(<expr pos:start="35:13" pos:end="35:15"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:15">tb</name></expr>)</condition> <block pos:start="35:18" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:45">

            <return pos:start="37:13" pos:end="37:45">return <expr pos:start="37:20" pos:end="37:44"><name pos:start="37:20" pos:end="37:44"><name pos:start="37:20" pos:end="37:26">tcg_ctx</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:44">code_gen_epilogue</name></name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:18">atomic_set</name><argument_list pos:start="41:19" pos:end="41:48">(<argument pos:start="41:20" pos:end="41:43"><expr pos:start="41:20" pos:end="41:43"><operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:43"><name pos:start="41:21" pos:end="41:23">cpu</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:37">tb_jmp_cache</name><index pos:start="41:38" pos:end="41:43">[<expr pos:start="41:39" pos:end="41:42"><name pos:start="41:39" pos:end="41:42">hash</name></expr>]</index></name></expr></argument>, <argument pos:start="41:46" pos:end="41:47"><expr pos:start="41:46" pos:end="41:47"><name pos:start="41:46" pos:end="41:47">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="53:46"><expr pos:start="47:5" pos:end="53:45"><call pos:start="47:5" pos:end="53:45"><name pos:start="47:5" pos:end="47:26">qemu_log_mask_and_addr</name><argument_list pos:start="47:27" pos:end="53:45">(<argument pos:start="47:28" pos:end="47:39"><expr pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:39">CPU_LOG_EXEC</name></expr></argument>, <argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><name pos:start="47:42" pos:end="47:43">pc</name></expr></argument>,

                           <argument pos:start="49:28" pos:end="49:66"><expr pos:start="49:28" pos:end="49:66"><literal type="string" pos:start="49:28" pos:end="49:43">"Chain %p [%d: "</literal> <name pos:start="49:45" pos:end="49:57">TARGET_FMT_lx</name> <literal type="string" pos:start="49:59" pos:end="49:66">"] %s\n"</literal></expr></argument>,

                           <argument pos:start="51:28" pos:end="51:37"><expr pos:start="51:28" pos:end="51:37"><name pos:start="51:28" pos:end="51:37"><name pos:start="51:28" pos:end="51:29">tb</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:37">tc_ptr</name></name></expr></argument>, <argument pos:start="51:40" pos:end="51:53"><expr pos:start="51:40" pos:end="51:53"><name pos:start="51:40" pos:end="51:53"><name pos:start="51:40" pos:end="51:42">cpu</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:53">cpu_index</name></name></expr></argument>, <argument pos:start="51:56" pos:end="51:57"><expr pos:start="51:56" pos:end="51:57"><name pos:start="51:56" pos:end="51:57">pc</name></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:44"><expr pos:start="53:28" pos:end="53:44"><call pos:start="53:28" pos:end="53:44"><name pos:start="53:28" pos:end="53:40">lookup_symbol</name><argument_list pos:start="53:41" pos:end="53:44">(<argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><name pos:start="53:42" pos:end="53:43">pc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:22">return <expr pos:start="55:12" pos:end="55:21"><name pos:start="55:12" pos:end="55:21"><name pos:start="55:12" pos:end="55:13">tb</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:21">tc_ptr</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
