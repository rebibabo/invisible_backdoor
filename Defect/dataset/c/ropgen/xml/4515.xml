<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4515.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">txd_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">data_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list> <block pos:start="3:46" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:14">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:14">TXDContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier> <specifier pos:start="7:18" pos:end="7:22">const</specifier></type> <name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">picture</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier> <specifier pos:start="11:15" pos:end="11:19">const</specifier></type> <name pos:start="11:21" pos:end="11:21">p</name> <init pos:start="11:23" pos:end="11:35">= <expr pos:start="11:25" pos:end="11:35"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:35"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:35">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:79"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:24">version</name></decl>, <decl pos:start="13:27" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:27" pos:end="13:27">w</name></decl>, <decl pos:start="13:30" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:30" pos:end="13:30">h</name></decl>, <decl pos:start="13:33" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:33" pos:end="13:42">d3d_format</name></decl>, <decl pos:start="13:45" pos:end="13:49"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:45" pos:end="13:49">depth</name></decl>, <decl pos:start="13:52" pos:end="13:57"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:52" pos:end="13:57">stride</name></decl>, <decl pos:start="13:60" pos:end="13:71"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:60" pos:end="13:71">mipmap_count</name></decl>, <decl pos:start="13:74" pos:end="13:78"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:74" pos:end="13:78">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:18">y</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:21" pos:end="15:21">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">cur</name> <init pos:start="19:24" pos:end="19:28">= <expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:59"><decl pos:start="21:5" pos:end="21:58"><type pos:start="21:5" pos:end="21:20"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:18">uint32_t</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:27">palette</name> <init pos:start="21:29" pos:end="21:58">= <expr pos:start="21:31" pos:end="21:58"><operator pos:start="21:31" pos:end="21:31">(</operator><specifier pos:start="21:32" pos:end="21:36">const</specifier> <name pos:start="21:38" pos:end="21:45">uint32_t</name> <operator pos:start="21:47" pos:end="21:47">*</operator><operator pos:start="21:48" pos:end="21:48">)</operator><operator pos:start="21:49" pos:end="21:49">(</operator><name pos:start="21:50" pos:end="21:52">cur</name> <operator pos:start="21:54" pos:end="21:54">+</operator> <literal type="number" pos:start="21:56" pos:end="21:57">88</literal><operator pos:start="21:58" pos:end="21:58">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">uint32_t</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:17">pal</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:11">version</name>         <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:29">AV_RL32</name><argument_list pos:start="27:30" pos:end="27:34">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:14">d3d_format</name>      <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:29">AV_RL32</name><argument_list pos:start="29:30" pos:end="29:37">(<argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:33">cur</name><operator pos:start="29:34" pos:end="29:34">+</operator><literal type="number" pos:start="29:35" pos:end="29:36">76</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:5">w</name>               <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:29">AV_RL16</name><argument_list pos:start="31:30" pos:end="31:37">(<argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:33">cur</name><operator pos:start="31:34" pos:end="31:34">+</operator><literal type="number" pos:start="31:35" pos:end="31:36">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:5">h</name>               <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:29">AV_RL16</name><argument_list pos:start="33:30" pos:end="33:37">(<argument pos:start="33:31" pos:end="33:36"><expr pos:start="33:31" pos:end="33:36"><name pos:start="33:31" pos:end="33:33">cur</name><operator pos:start="33:34" pos:end="33:34">+</operator><literal type="number" pos:start="33:35" pos:end="33:36">82</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:9">depth</name>           <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:28">AV_RL8</name> <argument_list pos:start="35:30" pos:end="35:37">(<argument pos:start="35:31" pos:end="35:36"><expr pos:start="35:31" pos:end="35:36"><name pos:start="35:31" pos:end="35:33">cur</name><operator pos:start="35:34" pos:end="35:34">+</operator><literal type="number" pos:start="35:35" pos:end="35:36">84</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:16">mipmap_count</name>    <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:28">AV_RL8</name> <argument_list pos:start="37:30" pos:end="37:37">(<argument pos:start="37:31" pos:end="37:36"><expr pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:33">cur</name><operator pos:start="37:34" pos:end="37:34">+</operator><literal type="number" pos:start="37:35" pos:end="37:36">85</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:9">flags</name>           <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:37"><name pos:start="39:23" pos:end="39:28">AV_RL8</name> <argument_list pos:start="39:30" pos:end="39:37">(<argument pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:33">cur</name><operator pos:start="39:34" pos:end="39:34">+</operator><literal type="number" pos:start="39:35" pos:end="39:36">87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:7">cur</name>            <operator pos:start="41:20" pos:end="41:21">+=</operator> <literal type="number" pos:start="41:23" pos:end="41:24">92</literal></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:35">(<expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:15">version</name> <argument_list type="generic" pos:start="45:17" pos:end="45:32">&lt; <argument pos:start="45:19" pos:end="45:30"><expr pos:start="45:19" pos:end="45:30"><literal type="number" pos:start="45:19" pos:end="45:19">8</literal> <operator pos:start="45:21" pos:end="45:22">||</operator> <name pos:start="45:24" pos:end="45:30">version</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="45:34" pos:end="45:34">9</literal></expr>)</condition> <block pos:start="45:37" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:18">

        <expr_stmt pos:start="47:9" pos:end="49:77"><expr pos:start="47:9" pos:end="49:76"><call pos:start="47:9" pos:end="49:76"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="49:76">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:78"><expr pos:start="47:37" pos:end="47:78"><literal type="string" pos:start="47:37" pos:end="47:78">"texture data version %i is unsupported\n"</literal></expr></argument>,

                                                                    <argument pos:start="49:69" pos:end="49:75"><expr pos:start="49:69" pos:end="49:75"><name pos:start="49:69" pos:end="49:75">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:19">(<expr pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:13">depth</name> <operator pos:start="57:15" pos:end="57:16">==</operator> <literal type="number" pos:start="57:18" pos:end="57:18">8</literal></expr>)</condition> <block pos:start="57:21" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:20">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:13">avctx</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:22">pix_fmt</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:37">PIX_FMT_PAL8</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:11">cur</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <literal type="number" pos:start="61:16" pos:end="61:19">1024</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="63:7" pos:end="65:39">else if <condition pos:start="63:15" pos:end="63:42">(<expr pos:start="63:16" pos:end="63:41"><name pos:start="63:16" pos:end="63:20">depth</name> <operator pos:start="63:22" pos:end="63:23">==</operator> <literal type="number" pos:start="63:25" pos:end="63:26">16</literal> <operator pos:start="63:28" pos:end="63:29">||</operator> <name pos:start="63:31" pos:end="63:35">depth</name> <operator pos:start="63:37" pos:end="63:38">==</operator> <literal type="number" pos:start="63:40" pos:end="63:41">32</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:39"><block_content pos:start="65:9" pos:end="65:39">

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:13">avctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">pix_fmt</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:38">PIX_FMT_RGB32</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="67:5" pos:end="73:5">else <block pos:start="67:10" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:75"><expr pos:start="69:9" pos:end="69:74"><call pos:start="69:9" pos:end="69:74"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:74">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:66"><expr pos:start="69:37" pos:end="69:66"><literal type="string" pos:start="69:37" pos:end="69:66">"depth of %i is unsupported\n"</literal></expr></argument>, <argument pos:start="69:69" pos:end="69:73"><expr pos:start="69:69" pos:end="69:73"><name pos:start="69:69" pos:end="69:73">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:40"><if pos:start="77:5" pos:end="79:40">if <condition pos:start="77:8" pos:end="77:19">(<expr pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:9">p</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">data</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:40"><block_content pos:start="79:9" pos:end="79:40">

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><call pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:13">avctx</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:29">release_buffer</name></name><argument_list pos:start="79:30" pos:end="79:39">(<argument pos:start="79:31" pos:end="79:35"><expr pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:35">avctx</name></expr></argument>, <argument pos:start="79:38" pos:end="79:38"><expr pos:start="79:38" pos:end="79:38"><name pos:start="79:38" pos:end="79:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="85:18"><if pos:start="83:5" pos:end="85:18">if <condition pos:start="83:8" pos:end="83:44">(<expr pos:start="83:9" pos:end="83:43"><call pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:27">av_image_check_size</name><argument_list pos:start="83:28" pos:end="83:43">(<argument pos:start="83:29" pos:end="83:29"><expr pos:start="83:29" pos:end="83:29"><name pos:start="83:29" pos:end="83:29">w</name></expr></argument>, <argument pos:start="83:32" pos:end="83:32"><expr pos:start="83:32" pos:end="83:32"><name pos:start="83:32" pos:end="83:32">h</name></expr></argument>, <argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">0</literal></expr></argument>, <argument pos:start="83:38" pos:end="83:42"><expr pos:start="83:38" pos:end="83:42"><name pos:start="83:38" pos:end="83:42">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:18"><block_content pos:start="85:9" pos:end="85:18">

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:44"><if pos:start="87:5" pos:end="89:44">if <condition pos:start="87:8" pos:end="87:48">(<expr pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:9">w</name> <operator pos:start="87:11" pos:end="87:12">!=</operator> <name pos:start="87:14" pos:end="87:25"><name pos:start="87:14" pos:end="87:18">avctx</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:25">width</name></name> <operator pos:start="87:27" pos:end="87:28">||</operator> <name pos:start="87:30" pos:end="87:30">h</name> <operator pos:start="87:32" pos:end="87:33">!=</operator> <name pos:start="87:35" pos:end="87:47"><name pos:start="87:35" pos:end="87:39">avctx</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:47">height</name></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:44"><block_content pos:start="89:9" pos:end="89:44">

        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><call pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:30">avcodec_set_dimensions</name><argument_list pos:start="89:31" pos:end="89:43">(<argument pos:start="89:32" pos:end="89:36"><expr pos:start="89:32" pos:end="89:36"><name pos:start="89:32" pos:end="89:36">avctx</name></expr></argument>, <argument pos:start="89:39" pos:end="89:39"><expr pos:start="89:39" pos:end="89:39"><name pos:start="89:39" pos:end="89:39">w</name></expr></argument>, <argument pos:start="89:42" pos:end="89:42"><expr pos:start="89:42" pos:end="89:42"><name pos:start="89:42" pos:end="89:42">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:40">(<expr pos:start="91:9" pos:end="91:39"><call pos:start="91:9" pos:end="91:35"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:13">avctx</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:25">get_buffer</name></name><argument_list pos:start="91:26" pos:end="91:35">(<argument pos:start="91:27" pos:end="91:31"><expr pos:start="91:27" pos:end="91:31"><name pos:start="91:27" pos:end="91:31">avctx</name></expr></argument>, <argument pos:start="91:34" pos:end="91:34"><expr pos:start="91:34" pos:end="91:34"><name pos:start="91:34" pos:end="91:34">p</name></expr></argument>)</argument_list></call> <operator pos:start="91:37" pos:end="91:37">&lt;</operator> <literal type="number" pos:start="91:39" pos:end="91:39">0</literal></expr>)</condition> <block pos:start="91:42" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:61"><expr pos:start="93:9" pos:end="93:60"><call pos:start="93:9" pos:end="93:60"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:60">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:37" pos:end="93:59"><expr pos:start="93:37" pos:end="93:59"><literal type="string" pos:start="93:37" pos:end="93:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:37"><expr pos:start="101:5" pos:end="101:36"><name pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:5">p</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:16">pict_type</name></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:36">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:7">ptr</name>    <operator pos:start="105:12" pos:end="105:12">=</operator> <name pos:start="105:14" pos:end="105:23"><name pos:start="105:14" pos:end="105:14">p</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:20">data</name><index pos:start="105:21" pos:end="105:23">[<expr pos:start="105:22" pos:end="105:22"><literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:10">stride</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:27"><name pos:start="107:14" pos:end="107:14">p</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:24">linesize</name><index pos:start="107:25" pos:end="107:27">[<expr pos:start="107:26" pos:end="107:26"><literal type="number" pos:start="107:26" pos:end="107:26">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="187:5"><if pos:start="111:5" pos:end="133:5">if <condition pos:start="111:8" pos:end="111:19">(<expr pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:13">depth</name> <operator pos:start="111:15" pos:end="111:16">==</operator> <literal type="number" pos:start="111:18" pos:end="111:18">8</literal></expr>)</condition> <block pos:start="111:21" pos:end="133:5">{<block_content pos:start="113:9" pos:end="131:9">

        <expr_stmt pos:start="113:9" pos:end="113:38"><expr pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:11">pal</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <operator pos:start="113:15" pos:end="113:15">(</operator><name pos:start="113:16" pos:end="113:23">uint32_t</name> <operator pos:start="113:25" pos:end="113:25">*</operator><operator pos:start="113:26" pos:end="113:26">)</operator> <name pos:start="113:28" pos:end="113:37"><name pos:start="113:28" pos:end="113:28">p</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:34">data</name><index pos:start="113:35" pos:end="113:37">[<expr pos:start="113:36" pos:end="113:36"><literal type="number" pos:start="113:36" pos:end="113:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="115:9" pos:end="121:9">for <control pos:start="115:13" pos:end="115:29">(<init pos:start="115:14" pos:end="115:17"><expr pos:start="115:14" pos:end="115:16"><name pos:start="115:14" pos:end="115:14">y</name><operator pos:start="115:15" pos:end="115:15">=</operator><literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</init> <condition pos:start="115:19" pos:end="115:24"><expr pos:start="115:19" pos:end="115:23"><name pos:start="115:19" pos:end="115:19">y</name><operator pos:start="115:20" pos:end="115:20">&lt;</operator><literal type="number" pos:start="115:21" pos:end="115:23">256</literal></expr>;</condition> <incr pos:start="115:26" pos:end="115:28"><expr pos:start="115:26" pos:end="115:28"><name pos:start="115:26" pos:end="115:26">y</name><operator pos:start="115:27" pos:end="115:28">++</operator></expr></incr>)</control> <block pos:start="115:31" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:38">

            <expr_stmt pos:start="117:13" pos:end="117:35"><expr pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:13">v</name> <operator pos:start="117:15" pos:end="117:15">=</operator> <call pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:23">AV_RB32</name><argument_list pos:start="117:24" pos:end="117:34">(<argument pos:start="117:25" pos:end="117:33"><expr pos:start="117:25" pos:end="117:33"><name pos:start="117:25" pos:end="117:31">palette</name><operator pos:start="117:32" pos:end="117:32">+</operator><name pos:start="117:33" pos:end="117:33">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:15">pal</name><index pos:start="119:16" pos:end="119:18">[<expr pos:start="119:17" pos:end="119:17"><name pos:start="119:17" pos:end="119:17">y</name></expr>]</index></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <operator pos:start="119:22" pos:end="119:22">(</operator><name pos:start="119:23" pos:end="119:23">v</name><operator pos:start="119:24" pos:end="119:25">&gt;&gt;</operator><literal type="number" pos:start="119:26" pos:end="119:26">8</literal><operator pos:start="119:27" pos:end="119:27">)</operator> <operator pos:start="119:29" pos:end="119:29">+</operator> <operator pos:start="119:31" pos:end="119:31">(</operator><name pos:start="119:32" pos:end="119:32">v</name><operator pos:start="119:33" pos:end="119:34">&lt;&lt;</operator><literal type="number" pos:start="119:35" pos:end="119:36">24</literal><operator pos:start="119:37" pos:end="119:37">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="123:9" pos:end="131:9">for <control pos:start="123:13" pos:end="123:27">(<init pos:start="123:14" pos:end="123:17"><expr pos:start="123:14" pos:end="123:16"><name pos:start="123:14" pos:end="123:14">y</name><operator pos:start="123:15" pos:end="123:15">=</operator><literal type="number" pos:start="123:16" pos:end="123:16">0</literal></expr>;</init> <condition pos:start="123:19" pos:end="123:22"><expr pos:start="123:19" pos:end="123:21"><name pos:start="123:19" pos:end="123:19">y</name><operator pos:start="123:20" pos:end="123:20">&lt;</operator><name pos:start="123:21" pos:end="123:21">h</name></expr>;</condition> <incr pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:24">y</name><operator pos:start="123:25" pos:end="123:26">++</operator></expr></incr>)</control> <block pos:start="123:29" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:21">

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><call pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:18">memcpy</name><argument_list pos:start="125:19" pos:end="125:31">(<argument pos:start="125:20" pos:end="125:22"><expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">ptr</name></expr></argument>, <argument pos:start="125:25" pos:end="125:27"><expr pos:start="125:25" pos:end="125:27"><name pos:start="125:25" pos:end="125:27">cur</name></expr></argument>, <argument pos:start="125:30" pos:end="125:30"><expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:26"><expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:15">ptr</name> <operator pos:start="127:17" pos:end="127:18">+=</operator> <name pos:start="127:20" pos:end="127:25">stride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:21"><expr pos:start="129:13" pos:end="129:20"><name pos:start="129:13" pos:end="129:15">cur</name> <operator pos:start="129:17" pos:end="129:18">+=</operator> <name pos:start="129:20" pos:end="129:20">w</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="133:7" pos:end="161:5">else if <condition pos:start="133:15" pos:end="133:27">(<expr pos:start="133:16" pos:end="133:26"><name pos:start="133:16" pos:end="133:20">depth</name> <operator pos:start="133:22" pos:end="133:23">==</operator> <literal type="number" pos:start="133:25" pos:end="133:26">16</literal></expr>)</condition> <block pos:start="133:29" pos:end="161:5">{<block_content pos:start="135:9" pos:end="159:9">

        <switch pos:start="135:9" pos:end="159:9">switch <condition pos:start="135:16" pos:end="135:27">(<expr pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:26">d3d_format</name></expr>)</condition> <block pos:start="135:29" pos:end="159:9">{<block_content pos:start="137:9" pos:end="157:29">

        <case pos:start="137:9" pos:end="137:15">case <expr pos:start="137:14" pos:end="137:14"><literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>:</case>

            <if_stmt pos:start="139:13" pos:end="141:33"><if pos:start="139:13" pos:end="141:33">if <condition pos:start="139:16" pos:end="139:29">(<expr pos:start="139:17" pos:end="139:28"><operator pos:start="139:17" pos:end="139:17">!</operator><operator pos:start="139:18" pos:end="139:18">(</operator><name pos:start="139:19" pos:end="139:23">flags</name> <operator pos:start="139:25" pos:end="139:25">&amp;</operator> <literal type="number" pos:start="139:27" pos:end="139:27">1</literal><operator pos:start="139:28" pos:end="139:28">)</operator></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:33"><block_content pos:start="141:17" pos:end="141:33">

                <goto pos:start="141:17" pos:end="141:33">goto <name pos:start="141:22" pos:end="141:32">unsupported</name>;</goto></block_content></block></if></if_stmt>

        <case pos:start="143:9" pos:end="143:26">case <expr pos:start="143:14" pos:end="143:25"><name pos:start="143:14" pos:end="143:25">FF_S3TC_DXT1</name></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:51"><expr pos:start="145:13" pos:end="145:50"><call pos:start="145:13" pos:end="145:50"><name pos:start="145:13" pos:end="145:26">ff_decode_dxt1</name><argument_list pos:start="145:27" pos:end="145:50">(<argument pos:start="145:28" pos:end="145:30"><expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:30">cur</name></expr></argument>, <argument pos:start="145:33" pos:end="145:35"><expr pos:start="145:33" pos:end="145:35"><name pos:start="145:33" pos:end="145:35">ptr</name></expr></argument>, <argument pos:start="145:38" pos:end="145:38"><expr pos:start="145:38" pos:end="145:38"><name pos:start="145:38" pos:end="145:38">w</name></expr></argument>, <argument pos:start="145:41" pos:end="145:41"><expr pos:start="145:41" pos:end="145:41"><name pos:start="145:41" pos:end="145:41">h</name></expr></argument>, <argument pos:start="145:44" pos:end="145:49"><expr pos:start="145:44" pos:end="145:49"><name pos:start="145:44" pos:end="145:49">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:26">case <expr pos:start="149:14" pos:end="149:25"><name pos:start="149:14" pos:end="149:25">FF_S3TC_DXT3</name></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:51"><expr pos:start="151:13" pos:end="151:50"><call pos:start="151:13" pos:end="151:50"><name pos:start="151:13" pos:end="151:26">ff_decode_dxt3</name><argument_list pos:start="151:27" pos:end="151:50">(<argument pos:start="151:28" pos:end="151:30"><expr pos:start="151:28" pos:end="151:30"><name pos:start="151:28" pos:end="151:30">cur</name></expr></argument>, <argument pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:35">ptr</name></expr></argument>, <argument pos:start="151:38" pos:end="151:38"><expr pos:start="151:38" pos:end="151:38"><name pos:start="151:38" pos:end="151:38">w</name></expr></argument>, <argument pos:start="151:41" pos:end="151:41"><expr pos:start="151:41" pos:end="151:41"><name pos:start="151:41" pos:end="151:41">h</name></expr></argument>, <argument pos:start="151:44" pos:end="151:49"><expr pos:start="151:44" pos:end="151:49"><name pos:start="151:44" pos:end="151:49">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <default pos:start="155:9" pos:end="155:16">default:</default>

            <goto pos:start="157:13" pos:end="157:29">goto <name pos:start="157:18" pos:end="157:28">unsupported</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="161:7" pos:end="187:5">else if <condition pos:start="161:15" pos:end="161:27">(<expr pos:start="161:16" pos:end="161:26"><name pos:start="161:16" pos:end="161:20">depth</name> <operator pos:start="161:22" pos:end="161:23">==</operator> <literal type="number" pos:start="161:25" pos:end="161:26">32</literal></expr>)</condition> <block pos:start="161:29" pos:end="187:5">{<block_content pos:start="163:9" pos:end="185:9">

        <switch pos:start="163:9" pos:end="185:9">switch <condition pos:start="163:16" pos:end="163:27">(<expr pos:start="163:17" pos:end="163:26"><name pos:start="163:17" pos:end="163:26">d3d_format</name></expr>)</condition> <block pos:start="163:29" pos:end="185:9">{<block_content pos:start="165:9" pos:end="183:29">

        <case pos:start="165:9" pos:end="165:18">case <expr pos:start="165:14" pos:end="165:17"><literal type="number" pos:start="165:14" pos:end="165:17">0x15</literal></expr>:</case>

        <case pos:start="167:9" pos:end="167:18">case <expr pos:start="167:14" pos:end="167:17"><literal type="number" pos:start="167:14" pos:end="167:17">0x16</literal></expr>:</case>

            <for pos:start="169:13" pos:end="177:13">for <control pos:start="169:17" pos:end="169:31">(<init pos:start="169:18" pos:end="169:21"><expr pos:start="169:18" pos:end="169:20"><name pos:start="169:18" pos:end="169:18">y</name><operator pos:start="169:19" pos:end="169:19">=</operator><literal type="number" pos:start="169:20" pos:end="169:20">0</literal></expr>;</init> <condition pos:start="169:23" pos:end="169:26"><expr pos:start="169:23" pos:end="169:25"><name pos:start="169:23" pos:end="169:23">y</name><operator pos:start="169:24" pos:end="169:24">&lt;</operator><name pos:start="169:25" pos:end="169:25">h</name></expr>;</condition> <incr pos:start="169:28" pos:end="169:30"><expr pos:start="169:28" pos:end="169:30"><name pos:start="169:28" pos:end="169:28">y</name><operator pos:start="169:29" pos:end="169:30">++</operator></expr></incr>)</control> <block pos:start="169:33" pos:end="177:13">{<block_content pos:start="171:17" pos:end="175:27">

                <expr_stmt pos:start="171:17" pos:end="171:38"><expr pos:start="171:17" pos:end="171:37"><call pos:start="171:17" pos:end="171:37"><name pos:start="171:17" pos:end="171:22">memcpy</name><argument_list pos:start="171:23" pos:end="171:37">(<argument pos:start="171:24" pos:end="171:26"><expr pos:start="171:24" pos:end="171:26"><name pos:start="171:24" pos:end="171:26">ptr</name></expr></argument>, <argument pos:start="171:29" pos:end="171:31"><expr pos:start="171:29" pos:end="171:31"><name pos:start="171:29" pos:end="171:31">cur</name></expr></argument>, <argument pos:start="171:34" pos:end="171:36"><expr pos:start="171:34" pos:end="171:36"><name pos:start="171:34" pos:end="171:34">w</name><operator pos:start="171:35" pos:end="171:35">*</operator><literal type="number" pos:start="171:36" pos:end="171:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:30"><expr pos:start="173:17" pos:end="173:29"><name pos:start="173:17" pos:end="173:19">ptr</name> <operator pos:start="173:21" pos:end="173:22">+=</operator> <name pos:start="173:24" pos:end="173:29">stride</name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:27"><expr pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:19">cur</name> <operator pos:start="175:21" pos:end="175:22">+=</operator> <name pos:start="175:24" pos:end="175:24">w</name><operator pos:start="175:25" pos:end="175:25">*</operator><literal type="number" pos:start="175:26" pos:end="175:26">4</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <default pos:start="181:9" pos:end="181:16">default:</default>

            <goto pos:start="183:13" pos:end="183:29">goto <name pos:start="183:18" pos:end="183:28">unsupported</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <for pos:start="191:5" pos:end="193:32">for <control pos:start="191:9" pos:end="191:44">(<init pos:start="191:10" pos:end="191:10">;</init> <condition pos:start="191:12" pos:end="191:28"><expr pos:start="191:12" pos:end="191:27"><name pos:start="191:12" pos:end="191:23">mipmap_count</name> <operator pos:start="191:25" pos:end="191:25">&gt;</operator> <literal type="number" pos:start="191:27" pos:end="191:27">1</literal></expr>;</condition> <incr pos:start="191:30" pos:end="191:43"><expr pos:start="191:30" pos:end="191:43"><name pos:start="191:30" pos:end="191:41">mipmap_count</name><operator pos:start="191:42" pos:end="191:43">--</operator></expr></incr>)</control><block type="pseudo" pos:start="193:9" pos:end="193:32"><block_content pos:start="193:9" pos:end="193:32">

        <expr_stmt pos:start="193:9" pos:end="193:32"><expr pos:start="193:9" pos:end="193:31"><name pos:start="193:9" pos:end="193:11">cur</name> <operator pos:start="193:13" pos:end="193:14">+=</operator> <call pos:start="193:16" pos:end="193:27"><name pos:start="193:16" pos:end="193:22">AV_RL32</name><argument_list pos:start="193:23" pos:end="193:27">(<argument pos:start="193:24" pos:end="193:26"><expr pos:start="193:24" pos:end="193:26"><name pos:start="193:24" pos:end="193:26">cur</name></expr></argument>)</argument_list></call> <operator pos:start="193:29" pos:end="193:29">+</operator> <literal type="number" pos:start="193:31" pos:end="193:31">4</literal></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="197:5" pos:end="197:28"><expr pos:start="197:5" pos:end="197:27"><operator pos:start="197:5" pos:end="197:5">*</operator><name pos:start="197:6" pos:end="197:12">picture</name>   <operator pos:start="197:16" pos:end="197:16">=</operator> <name pos:start="197:18" pos:end="197:27"><name pos:start="197:18" pos:end="197:18">s</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:27">picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:35"><expr pos:start="199:5" pos:end="199:34"><operator pos:start="199:5" pos:end="199:5">*</operator><name pos:start="199:6" pos:end="199:14">data_size</name> <operator pos:start="199:16" pos:end="199:16">=</operator> <sizeof pos:start="199:18" pos:end="199:34">sizeof<argument_list pos:start="199:24" pos:end="199:34">(<argument pos:start="199:25" pos:end="199:33"><expr pos:start="199:25" pos:end="199:33"><name pos:start="199:25" pos:end="199:33">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="203:5" pos:end="203:21">return <expr pos:start="203:12" pos:end="203:20"><name pos:start="203:12" pos:end="203:14">cur</name> <operator pos:start="203:16" pos:end="203:16">-</operator> <name pos:start="203:18" pos:end="203:20">buf</name></expr>;</return>



<label pos:start="207:1" pos:end="207:12"><name pos:start="207:1" pos:end="207:11">unsupported</name>:</label>

    <expr_stmt pos:start="209:5" pos:end="209:79"><expr pos:start="209:5" pos:end="209:78"><call pos:start="209:5" pos:end="209:78"><name pos:start="209:5" pos:end="209:10">av_log</name><argument_list pos:start="209:11" pos:end="209:78">(<argument pos:start="209:12" pos:end="209:16"><expr pos:start="209:12" pos:end="209:16"><name pos:start="209:12" pos:end="209:16">avctx</name></expr></argument>, <argument pos:start="209:19" pos:end="209:30"><expr pos:start="209:19" pos:end="209:30"><name pos:start="209:19" pos:end="209:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:33" pos:end="209:65"><expr pos:start="209:33" pos:end="209:65"><literal type="string" pos:start="209:33" pos:end="209:65">"unsupported d3d format (%08x)\n"</literal></expr></argument>, <argument pos:start="209:68" pos:end="209:77"><expr pos:start="209:68" pos:end="209:77"><name pos:start="209:68" pos:end="209:77">d3d_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="211:5" pos:end="211:14">return <expr pos:start="211:12" pos:end="211:13"><operator pos:start="211:12" pos:end="211:12">-</operator><literal type="number" pos:start="211:13" pos:end="211:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
