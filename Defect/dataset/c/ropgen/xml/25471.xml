<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25471.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:62">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:44"><decl pos:start="3:30" pos:end="3:44"><type pos:start="3:30" pos:end="3:44"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:44">got_output</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:61"><decl pos:start="3:47" pos:end="3:61"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:54">AVPacket</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:68">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">Mpeg1Context</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:19">s</name> <init pos:start="11:21" pos:end="11:38">= <expr pos:start="11:23" pos:end="11:38"><name pos:start="11:23" pos:end="11:38"><name pos:start="11:23" pos:end="11:27">avctx</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">picture</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">MpegEncContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">s2</name> <init pos:start="15:24" pos:end="15:41">= <expr pos:start="15:26" pos:end="15:41"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:41"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:11">av_dlog</name><argument_list pos:start="17:12" pos:end="17:35">(<argument pos:start="17:13" pos:end="17:17"><expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">avctx</name></expr></argument>, <argument pos:start="17:20" pos:end="17:34"><expr pos:start="17:20" pos:end="17:34"><literal type="string" pos:start="17:20" pos:end="17:34">"fill_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="45:5"><if pos:start="21:5" pos:end="45:5">if <condition pos:start="21:8" pos:end="21:73">(<expr pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:16">buf_size</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal> <operator pos:start="21:23" pos:end="21:24">||</operator> <operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:34">buf_size</name> <operator pos:start="21:36" pos:end="21:37">==</operator> <literal type="number" pos:start="21:39" pos:end="21:39">4</literal> <operator pos:start="21:41" pos:end="21:42">&amp;&amp;</operator> <call pos:start="21:44" pos:end="21:55"><name pos:start="21:44" pos:end="21:50">AV_RB32</name><argument_list pos:start="21:51" pos:end="21:55">(<argument pos:start="21:52" pos:end="21:54"><expr pos:start="21:52" pos:end="21:54"><name pos:start="21:52" pos:end="21:54">buf</name></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:58">==</operator> <name pos:start="21:60" pos:end="21:71">SEQ_END_CODE</name><operator pos:start="21:72" pos:end="21:72">)</operator></expr>)</condition> <block pos:start="21:75" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:24">

        <comment type="block" pos:start="23:9" pos:end="23:43">/* special case for last picture */</comment>

        <if_stmt pos:start="25:9" pos:end="41:9"><if pos:start="25:9" pos:end="41:9">if <condition pos:start="25:12" pos:end="25:55">(<expr pos:start="25:13" pos:end="25:54"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:14">s2</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">low_delay</name></name> <operator pos:start="25:27" pos:end="25:28">==</operator> <literal type="number" pos:start="25:30" pos:end="25:30">0</literal> <operator pos:start="25:32" pos:end="25:33">&amp;&amp;</operator> <name pos:start="25:35" pos:end="25:54"><name pos:start="25:35" pos:end="25:36">s2</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:54">next_picture_ptr</name></name></expr>)</condition> <block pos:start="25:57" pos:end="41:9">{<block_content pos:start="27:13" pos:end="39:28">

            <decl_stmt pos:start="27:13" pos:end="27:70"><decl pos:start="27:13" pos:end="27:69"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:19">ret</name> <init pos:start="27:21" pos:end="27:69">= <expr pos:start="27:23" pos:end="27:69"><call pos:start="27:23" pos:end="27:69"><name pos:start="27:23" pos:end="27:34">av_frame_ref</name><argument_list pos:start="27:35" pos:end="27:69">(<argument pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:42">picture</name></expr></argument>, <argument pos:start="27:45" pos:end="27:68"><expr pos:start="27:45" pos:end="27:68"><operator pos:start="27:45" pos:end="27:45">&amp;</operator><name pos:start="27:46" pos:end="27:68"><name pos:start="27:46" pos:end="27:47">s2</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:65">next_picture_ptr</name><operator pos:start="27:66" pos:end="27:67">-&gt;</operator><name pos:start="27:68" pos:end="27:68">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="31:27"><if pos:start="29:13" pos:end="31:27">if <condition pos:start="29:16" pos:end="29:24">(<expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:19">ret</name> <operator pos:start="29:21" pos:end="29:21">&lt;</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:27"><block_content pos:start="31:17" pos:end="31:27">

                <return pos:start="31:17" pos:end="31:27">return <expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:14">s2</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:32">next_picture_ptr</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:39">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:27"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:23">got_output</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="43:9" pos:end="43:24">return <expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="49:41">(<expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:10">s2</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:17">flags</name></name> <operator pos:start="49:19" pos:end="49:19">&amp;</operator> <name pos:start="49:21" pos:end="49:40">CODEC_FLAG_TRUNCATED</name></expr>)</condition> <block pos:start="49:43" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:28">

        <decl_stmt pos:start="51:9" pos:end="53:59"><decl pos:start="51:9" pos:end="53:58"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:16">next</name> <init pos:start="51:18" pos:end="53:58">= <expr pos:start="51:20" pos:end="53:58"><call pos:start="51:20" pos:end="53:58"><name pos:start="51:20" pos:end="51:42">ff_mpeg1_find_frame_end</name><argument_list pos:start="51:43" pos:end="53:58">(<argument pos:start="51:44" pos:end="51:61"><expr pos:start="51:44" pos:end="51:61"><operator pos:start="51:44" pos:end="51:44">&amp;</operator><name pos:start="51:45" pos:end="51:61"><name pos:start="51:45" pos:end="51:46">s2</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:61">parse_context</name></name></expr></argument>, <argument pos:start="51:64" pos:end="51:66"><expr pos:start="51:64" pos:end="51:66"><name pos:start="51:64" pos:end="51:66">buf</name></expr></argument>,

                                           <argument pos:start="53:44" pos:end="53:51"><expr pos:start="53:44" pos:end="53:51"><name pos:start="53:44" pos:end="53:51">buf_size</name></expr></argument>, <argument pos:start="53:54" pos:end="53:57"><expr pos:start="53:54" pos:end="53:57"><name pos:start="53:54" pos:end="53:57">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="57:9" pos:end="61:28"><if pos:start="57:9" pos:end="61:28">if <condition pos:start="57:12" pos:end="59:69">(<expr pos:start="57:13" pos:end="59:68"><call pos:start="57:13" pos:end="59:64"><name pos:start="57:13" pos:end="57:28">ff_combine_frame</name><argument_list pos:start="57:29" pos:end="59:64">(<argument pos:start="57:30" pos:end="57:47"><expr pos:start="57:30" pos:end="57:47"><operator pos:start="57:30" pos:end="57:30">&amp;</operator><name pos:start="57:31" pos:end="57:47"><name pos:start="57:31" pos:end="57:32">s2</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:47">parse_context</name></name></expr></argument>, <argument pos:start="57:50" pos:end="57:53"><expr pos:start="57:50" pos:end="57:53"><name pos:start="57:50" pos:end="57:53">next</name></expr></argument>,

                             <argument pos:start="59:30" pos:end="59:52"><expr pos:start="59:30" pos:end="59:52"><operator pos:start="59:30" pos:end="59:30">(</operator><specifier pos:start="59:31" pos:end="59:35">const</specifier> <name pos:start="59:37" pos:end="59:43">uint8_t</name> <operator pos:start="59:45" pos:end="59:45">*</operator><operator pos:start="59:46" pos:end="59:46">*</operator><operator pos:start="59:47" pos:end="59:47">)</operator> <operator pos:start="59:49" pos:end="59:49">&amp;</operator><name pos:start="59:50" pos:end="59:52">buf</name></expr></argument>, <argument pos:start="59:55" pos:end="59:63"><expr pos:start="59:55" pos:end="59:63"><operator pos:start="59:55" pos:end="59:55">&amp;</operator><name pos:start="59:56" pos:end="59:63">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="59:66" pos:end="59:66">&lt;</operator> <literal type="number" pos:start="59:68" pos:end="59:68">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:28"><block_content pos:start="61:13" pos:end="61:28">

            <return pos:start="61:13" pos:end="61:28">return <expr pos:start="61:20" pos:end="61:27"><name pos:start="61:20" pos:end="61:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="69:34"><if pos:start="67:5" pos:end="69:34">if <condition pos:start="67:8" pos:end="67:78">(<expr pos:start="67:9" pos:end="67:77"><name pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:33">mpeg_enc_ctx_allocated</name></name> <operator pos:start="67:35" pos:end="67:36">==</operator> <literal type="number" pos:start="67:38" pos:end="67:38">0</literal> <operator pos:start="67:40" pos:end="67:41">&amp;&amp;</operator> <name pos:start="67:43" pos:end="67:58"><name pos:start="67:43" pos:end="67:47">avctx</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:58">codec_tag</name></name> <operator pos:start="67:60" pos:end="67:61">==</operator> <call pos:start="67:63" pos:end="67:77"><name pos:start="67:63" pos:end="67:69">AV_RL32</name><argument_list pos:start="67:70" pos:end="67:77">(<argument pos:start="67:71" pos:end="67:76"><expr pos:start="67:71" pos:end="67:76"><literal type="string" pos:start="67:71" pos:end="67:76">"VCR2"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:34"><block_content pos:start="69:9" pos:end="69:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:26">vcr2_init_sequence</name><argument_list pos:start="69:27" pos:end="69:33">(<argument pos:start="69:28" pos:end="69:32"><expr pos:start="69:28" pos:end="69:32"><name pos:start="69:28" pos:end="69:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:18">slice_count</name></name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="89:5"><if pos:start="77:5" pos:end="89:5">if <condition pos:start="77:8" pos:end="77:50">(<expr pos:start="77:9" pos:end="77:49"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:13">avctx</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:24">extradata</name></name> <operator pos:start="77:26" pos:end="77:27">&amp;&amp;</operator> <operator pos:start="77:29" pos:end="77:29">!</operator><name pos:start="77:30" pos:end="77:49"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:49">extradata_decoded</name></name></expr>)</condition> <block pos:start="77:52" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:23">

        <decl_stmt pos:start="79:9" pos:end="81:73"><decl pos:start="79:9" pos:end="81:72"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:15">ret</name> <init pos:start="79:17" pos:end="81:72">= <expr pos:start="79:19" pos:end="81:72"><call pos:start="79:19" pos:end="81:72"><name pos:start="79:19" pos:end="79:31">decode_chunks</name><argument_list pos:start="79:32" pos:end="81:72">(<argument pos:start="79:33" pos:end="79:37"><expr pos:start="79:33" pos:end="79:37"><name pos:start="79:33" pos:end="79:37">avctx</name></expr></argument>, <argument pos:start="79:40" pos:end="79:46"><expr pos:start="79:40" pos:end="79:46"><name pos:start="79:40" pos:end="79:46">picture</name></expr></argument>, <argument pos:start="79:49" pos:end="79:58"><expr pos:start="79:49" pos:end="79:58"><name pos:start="79:49" pos:end="79:58">got_output</name></expr></argument>,

                                <argument pos:start="81:33" pos:end="81:48"><expr pos:start="81:33" pos:end="81:48"><name pos:start="81:33" pos:end="81:48"><name pos:start="81:33" pos:end="81:37">avctx</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:48">extradata</name></name></expr></argument>, <argument pos:start="81:51" pos:end="81:71"><expr pos:start="81:51" pos:end="81:71"><name pos:start="81:51" pos:end="81:71"><name pos:start="81:51" pos:end="81:55">avctx</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:71">extradata_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:28">extradata_decoded</name></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <literal type="number" pos:start="83:32" pos:end="83:32">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:23"><if pos:start="85:9" pos:end="87:23">if <condition pos:start="85:12" pos:end="85:64">(<expr pos:start="85:13" pos:end="85:63"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">&lt;</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal> <operator pos:start="85:21" pos:end="85:22">&amp;&amp;</operator> <operator pos:start="85:24" pos:end="85:24">(</operator><name pos:start="85:25" pos:end="85:46"><name pos:start="85:25" pos:end="85:29">avctx</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:46">err_recognition</name></name> <operator pos:start="85:48" pos:end="85:48">&amp;</operator> <name pos:start="85:50" pos:end="85:62">AV_EF_EXPLODE</name><operator pos:start="85:63" pos:end="85:63">)</operator></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:23"><block_content pos:start="87:13" pos:end="87:23">

            <return pos:start="87:13" pos:end="87:23">return <expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="93:5" pos:end="93:68">return <expr pos:start="93:12" pos:end="93:67"><call pos:start="93:12" pos:end="93:67"><name pos:start="93:12" pos:end="93:24">decode_chunks</name><argument_list pos:start="93:25" pos:end="93:67">(<argument pos:start="93:26" pos:end="93:30"><expr pos:start="93:26" pos:end="93:30"><name pos:start="93:26" pos:end="93:30">avctx</name></expr></argument>, <argument pos:start="93:33" pos:end="93:39"><expr pos:start="93:33" pos:end="93:39"><name pos:start="93:33" pos:end="93:39">picture</name></expr></argument>, <argument pos:start="93:42" pos:end="93:51"><expr pos:start="93:42" pos:end="93:51"><name pos:start="93:42" pos:end="93:51">got_output</name></expr></argument>, <argument pos:start="93:54" pos:end="93:56"><expr pos:start="93:54" pos:end="93:56"><name pos:start="93:54" pos:end="93:56">buf</name></expr></argument>, <argument pos:start="93:59" pos:end="93:66"><expr pos:start="93:59" pos:end="93:66"><name pos:start="93:59" pos:end="93:66">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
