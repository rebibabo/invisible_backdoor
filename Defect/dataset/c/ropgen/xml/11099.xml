<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11099.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">create_cpu_without_cps</name><parameter_list pos:start="1:35" pos:end="3:75">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">cpu_model</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:43">qemu_irq</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:53">cbus_irq</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:74"><decl pos:start="3:56" pos:end="3:74"><type pos:start="3:56" pos:end="3:74"><name pos:start="3:56" pos:end="3:63">qemu_irq</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:74">i8259_irq</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:28">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CPUMIPSState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">MIPSCPU</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="37:5">for <control pos:start="15:9" pos:end="15:34">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:29"><expr pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:28">smp_cpus</name></expr>;</condition> <incr pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:31">i</name><operator pos:start="15:32" pos:end="15:33">++</operator></expr></incr>)</control> <block pos:start="15:36" pos:end="37:5">{<block_content pos:start="17:9" pos:end="35:49">

        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:11">cpu</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:38"><name pos:start="17:15" pos:end="17:27">cpu_mips_init</name><argument_list pos:start="17:28" pos:end="17:38">(<argument pos:start="17:29" pos:end="17:37"><expr pos:start="17:29" pos:end="17:37"><name pos:start="17:29" pos:end="17:37">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:24">(<expr pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:15">cpu</name> <operator pos:start="19:17" pos:end="19:18">==</operator> <name pos:start="19:20" pos:end="19:23">NULL</name></expr>)</condition> <block pos:start="19:26" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:20">

            <expr_stmt pos:start="21:13" pos:end="21:63"><expr pos:start="21:13" pos:end="21:62"><call pos:start="21:13" pos:end="21:62"><name pos:start="21:13" pos:end="21:19">fprintf</name><argument_list pos:start="21:20" pos:end="21:62">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26">stderr</name></expr></argument>, <argument pos:start="21:29" pos:end="21:61"><expr pos:start="21:29" pos:end="21:61"><literal type="string" pos:start="21:29" pos:end="21:61">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:20"><expr pos:start="23:13" pos:end="23:19"><call pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:16">exit</name><argument_list pos:start="23:17" pos:end="23:19">(<argument pos:start="23:18" pos:end="23:18"><expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:35">/* Init internal devices */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:29">cpu_mips_irq_init_cpu</name><argument_list pos:start="31:30" pos:end="31:34">(<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><call pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:27">cpu_mips_clock_init</name><argument_list pos:start="33:28" pos:end="33:32">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><call pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:27">qemu_register_reset</name><argument_list pos:start="35:28" pos:end="35:48">(<argument pos:start="35:29" pos:end="35:42"><expr pos:start="35:29" pos:end="35:42"><name pos:start="35:29" pos:end="35:42">main_cpu_reset</name></expr></argument>, <argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:47">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:7">cpu</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:29"><name pos:start="41:11" pos:end="41:18">MIPS_CPU</name><argument_list pos:start="41:19" pos:end="41:29">(<argument pos:start="41:20" pos:end="41:28"><expr pos:start="41:20" pos:end="41:28"><name pos:start="41:20" pos:end="41:28">first_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">env</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <operator pos:start="43:11" pos:end="43:11">&amp;</operator><name pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:14">cpu</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:19">env</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:14">i8259_irq</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:28"><name pos:start="45:18" pos:end="45:20">env</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:25">irq</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:13">cbus_irq</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:19">env</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:24">irq</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">4</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
