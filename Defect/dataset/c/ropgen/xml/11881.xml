<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11881.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">add_codec</name><parameter_list pos:start="1:22" pos:end="1:65">(<parameter pos:start="1:23" pos:end="1:44"><decl pos:start="1:23" pos:end="1:44"><type pos:start="1:23" pos:end="1:44"><name pos:start="1:23" pos:end="1:36">FFServerStream</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">stream</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">av</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:50">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if<condition pos:start="9:7" pos:end="9:61">(<expr pos:start="9:8" pos:end="9:60"><name pos:start="9:8" pos:end="9:25"><name pos:start="9:8" pos:end="9:13">stream</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:25">nb_streams</name></name> <operator pos:start="9:27" pos:end="9:28">&gt;=</operator> <call pos:start="9:30" pos:end="9:60"><name pos:start="9:30" pos:end="9:43">FF_ARRAY_ELEMS</name><argument_list pos:start="9:44" pos:end="9:60">(<argument pos:start="9:45" pos:end="9:59"><expr pos:start="9:45" pos:end="9:59"><name pos:start="9:45" pos:end="9:59"><name pos:start="9:45" pos:end="9:50">stream</name><operator pos:start="9:51" pos:end="9:52">-&gt;</operator><name pos:start="9:53" pos:end="9:59">streams</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:36">/* compute default parameters */</comment>

    <switch pos:start="17:5" pos:end="137:5">switch<condition pos:start="17:11" pos:end="17:26">(<expr pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:13">av</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">codec_type</name></name></expr>)</condition> <block pos:start="17:28" pos:end="137:5">{<block_content pos:start="19:5" pos:end="135:16">

    <case pos:start="19:5" pos:end="19:28">case <expr pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="23:33"><if pos:start="21:9" pos:end="23:33">if <condition pos:start="21:12" pos:end="21:30">(<expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:14">av</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:24">bit_rate</name></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:33"><block_content pos:start="23:13" pos:end="23:33">

            <expr_stmt pos:start="23:13" pos:end="23:33"><expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:14">av</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:24">bit_rate</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:32">64000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:36"><if pos:start="25:9" pos:end="27:36">if <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:14">av</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:27">sample_rate</name></name> <operator pos:start="25:29" pos:end="25:30">==</operator> <literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:36"><block_content pos:start="27:13" pos:end="27:36">

            <expr_stmt pos:start="27:13" pos:end="27:36"><expr pos:start="27:13" pos:end="27:35"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:14">av</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:27">sample_rate</name></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <literal type="number" pos:start="27:31" pos:end="27:35">22050</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:29"><if pos:start="29:9" pos:end="31:29">if <condition pos:start="29:12" pos:end="29:30">(<expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:14">av</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:24">channels</name></name> <operator pos:start="29:26" pos:end="29:27">==</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:29"><block_content pos:start="31:13" pos:end="31:29">

            <expr_stmt pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:14">av</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:24">channels</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:28">case <expr pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <if_stmt pos:start="37:9" pos:end="39:33"><if pos:start="37:9" pos:end="39:33">if <condition pos:start="37:12" pos:end="37:30">(<expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:14">av</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:24">bit_rate</name></name> <operator pos:start="37:26" pos:end="37:27">==</operator> <literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:33"><block_content pos:start="39:13" pos:end="39:33">

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">av</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:24">bit_rate</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <literal type="number" pos:start="39:28" pos:end="39:32">64000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:14">av</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:25">time_base</name><operator pos:start="41:26" pos:end="41:26">.</operator><name pos:start="41:27" pos:end="41:29">num</name></name> <operator pos:start="41:31" pos:end="41:32">==</operator> <literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>)</condition><block pos:start="41:36" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:34">

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:14">av</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:25">time_base</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:29">den</name></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <literal type="number" pos:start="43:33" pos:end="43:33">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:14">av</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:25">time_base</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:29">num</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:46">(<expr pos:start="49:13" pos:end="49:45"><name pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:14">av</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">width</name></name> <operator pos:start="49:23" pos:end="49:24">==</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal> <operator pos:start="49:28" pos:end="49:29">||</operator> <name pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:32">av</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:40">height</name></name> <operator pos:start="49:42" pos:end="49:43">==</operator> <literal type="number" pos:start="49:45" pos:end="49:45">0</literal></expr>)</condition> <block pos:start="49:48" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:29">

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:14">av</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">width</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <literal type="number" pos:start="51:25" pos:end="51:27">160</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:14">av</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">height</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="number" pos:start="53:26" pos:end="53:28">128</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="57:9" pos:end="57:53">/* Bitrate tolerance is less for streaming */</comment>

        <if_stmt pos:start="59:9" pos:end="63:81"><if pos:start="59:9" pos:end="63:81">if <condition pos:start="59:12" pos:end="59:40">(<expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:14">av</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:34">bit_rate_tolerance</name></name> <operator pos:start="59:36" pos:end="59:37">==</operator> <literal type="number" pos:start="59:39" pos:end="59:39">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="63:81"><block_content pos:start="61:13" pos:end="63:81">

            <expr_stmt pos:start="61:13" pos:end="63:81"><expr pos:start="61:13" pos:end="63:80"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:14">av</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:34">bit_rate_tolerance</name></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <call pos:start="61:38" pos:end="63:80"><name pos:start="61:38" pos:end="61:42">FFMAX</name><argument_list pos:start="61:43" pos:end="63:80">(<argument pos:start="61:44" pos:end="61:59"><expr pos:start="61:44" pos:end="61:59"><name pos:start="61:44" pos:end="61:55"><name pos:start="61:44" pos:end="61:45">av</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:55">bit_rate</name></name> <operator pos:start="61:57" pos:end="61:57">/</operator> <literal type="number" pos:start="61:59" pos:end="61:59">4</literal></expr></argument>,

                      <argument pos:start="63:23" pos:end="63:79"><expr pos:start="63:23" pos:end="63:79"><operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:30">int64_t</name><operator pos:start="63:31" pos:end="63:31">)</operator><name pos:start="63:32" pos:end="63:43"><name pos:start="63:32" pos:end="63:33">av</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:43">bit_rate</name></name><operator pos:start="63:44" pos:end="63:44">*</operator><name pos:start="63:45" pos:end="63:61"><name pos:start="63:45" pos:end="63:46">av</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:57">time_base</name><operator pos:start="63:58" pos:end="63:58">.</operator><name pos:start="63:59" pos:end="63:61">num</name></name><operator pos:start="63:62" pos:end="63:62">/</operator><name pos:start="63:63" pos:end="63:79"><name pos:start="63:63" pos:end="63:64">av</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:75">time_base</name><operator pos:start="63:76" pos:end="63:76">.</operator><name pos:start="63:77" pos:end="63:79">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="67:25"><if pos:start="65:9" pos:end="67:25">if <condition pos:start="65:12" pos:end="65:26">(<expr pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:14">av</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:20">qmin</name></name> <operator pos:start="65:22" pos:end="65:23">==</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:25"><block_content pos:start="67:13" pos:end="67:25">

            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:14">av</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:20">qmin</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <literal type="number" pos:start="67:24" pos:end="67:24">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="71:26"><if pos:start="69:9" pos:end="71:26">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:14">av</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:20">qmax</name></name> <operator pos:start="69:22" pos:end="69:23">==</operator> <literal type="number" pos:start="69:25" pos:end="69:25">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:26"><block_content pos:start="71:13" pos:end="71:26">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:14">av</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:20">qmax</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:25">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="75:30"><if pos:start="73:9" pos:end="75:30">if <condition pos:start="73:12" pos:end="73:31">(<expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:14">av</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:25">max_qdiff</name></name> <operator pos:start="73:27" pos:end="73:28">==</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:30"><block_content pos:start="75:13" pos:end="75:30">

            <expr_stmt pos:start="75:13" pos:end="75:30"><expr pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:14">av</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:25">max_qdiff</name></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <literal type="number" pos:start="75:29" pos:end="75:29">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:10">av</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:21">qcompress</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:27">0.5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:24"><expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:10">av</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:17">qblur</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <literal type="number" pos:start="79:21" pos:end="79:23">0.5</literal></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="85:32"><if pos:start="83:9" pos:end="85:32">if <condition pos:start="83:12" pos:end="83:29">(<expr pos:start="83:13" pos:end="83:28"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:28"><name pos:start="83:14" pos:end="83:15">av</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:28">nsse_weight</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:32"><block_content pos:start="85:13" pos:end="85:32">

            <expr_stmt pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:14">av</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:27">nsse_weight</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <literal type="number" pos:start="85:31" pos:end="85:31">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:10">av</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:26">frame_skip_cmp</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:42">FF_CMP_DCTMAX</name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:36"><if pos:start="91:9" pos:end="93:36">if <condition pos:start="91:12" pos:end="91:27">(<expr pos:start="91:13" pos:end="91:26"><operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:26"><name pos:start="91:14" pos:end="91:15">av</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:26">me_method</name></name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:36"><block_content pos:start="93:13" pos:end="93:36">

            <expr_stmt pos:start="93:13" pos:end="93:36"><expr pos:start="93:13" pos:end="93:35"><name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:14">av</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">me_method</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:35">ME_EPZS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:41"><expr pos:start="95:9" pos:end="95:40"><name pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:10">av</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:34">rc_buffer_aggressivity</name></name> <operator pos:start="95:36" pos:end="95:36">=</operator> <literal type="number" pos:start="95:38" pos:end="95:40">1.0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="101:47"><if pos:start="99:9" pos:end="101:47">if <condition pos:start="99:12" pos:end="99:23">(<expr pos:start="99:13" pos:end="99:22"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:22"><name pos:start="99:14" pos:end="99:15">av</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:22">rc_eq</name></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:47"><block_content pos:start="101:13" pos:end="101:47">

            <expr_stmt pos:start="101:13" pos:end="101:47"><expr pos:start="101:13" pos:end="101:46"><name pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:14">av</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:21">rc_eq</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <call pos:start="101:25" pos:end="101:46"><name pos:start="101:25" pos:end="101:33">av_strdup</name><argument_list pos:start="101:34" pos:end="101:46">(<argument pos:start="101:35" pos:end="101:45"><expr pos:start="101:35" pos:end="101:45"><literal type="string" pos:start="101:35" pos:end="101:45">"tex^qComp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="105:38"><if pos:start="103:9" pos:end="105:38">if <condition pos:start="103:12" pos:end="103:32">(<expr pos:start="103:13" pos:end="103:31"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:31"><name pos:start="103:14" pos:end="103:15">av</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:31">i_quant_factor</name></name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:38"><block_content pos:start="105:13" pos:end="105:38">

            <expr_stmt pos:start="105:13" pos:end="105:38"><expr pos:start="105:13" pos:end="105:37"><name pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:14">av</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:30">i_quant_factor</name></name> <operator pos:start="105:32" pos:end="105:32">=</operator> <operator pos:start="105:34" pos:end="105:34">-</operator><literal type="number" pos:start="105:35" pos:end="105:37">0.8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="109:38"><if pos:start="107:9" pos:end="109:38">if <condition pos:start="107:12" pos:end="107:32">(<expr pos:start="107:13" pos:end="107:31"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:31"><name pos:start="107:14" pos:end="107:15">av</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:31">b_quant_factor</name></name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:38"><block_content pos:start="109:13" pos:end="109:38">

            <expr_stmt pos:start="109:13" pos:end="109:38"><expr pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:14">av</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:30">b_quant_factor</name></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <literal type="number" pos:start="109:34" pos:end="109:37">1.25</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="113:38"><if pos:start="111:9" pos:end="113:38">if <condition pos:start="111:12" pos:end="111:32">(<expr pos:start="111:13" pos:end="111:31"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:31"><name pos:start="111:14" pos:end="111:15">av</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:31">b_quant_offset</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:38"><block_content pos:start="113:13" pos:end="113:38">

            <expr_stmt pos:start="113:13" pos:end="113:38"><expr pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:14">av</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:30">b_quant_offset</name></name> <operator pos:start="113:32" pos:end="113:32">=</operator> <literal type="number" pos:start="113:34" pos:end="113:37">1.25</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="117:47"><if pos:start="115:9" pos:end="117:47">if <condition pos:start="115:12" pos:end="115:29">(<expr pos:start="115:13" pos:end="115:28"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:28"><name pos:start="115:14" pos:end="115:15">av</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:28">rc_max_rate</name></name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:47"><block_content pos:start="117:13" pos:end="117:47">

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:14">av</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:27">rc_max_rate</name></name> <operator pos:start="117:29" pos:end="117:29">=</operator> <name pos:start="117:31" pos:end="117:42"><name pos:start="117:31" pos:end="117:32">av</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:42">bit_rate</name></name> <operator pos:start="117:44" pos:end="117:44">*</operator> <literal type="number" pos:start="117:46" pos:end="117:46">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:51">(<expr pos:start="121:13" pos:end="121:50"><name pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:14">av</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:27">rc_max_rate</name></name> <operator pos:start="121:29" pos:end="121:30">&amp;&amp;</operator> <operator pos:start="121:32" pos:end="121:32">!</operator><name pos:start="121:33" pos:end="121:50"><name pos:start="121:33" pos:end="121:34">av</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:50">rc_buffer_size</name></name></expr>)</condition> <block pos:start="121:53" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:49">

            <expr_stmt pos:start="123:13" pos:end="123:49"><expr pos:start="123:13" pos:end="123:48"><name pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:14">av</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:30">rc_buffer_size</name></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <name pos:start="123:34" pos:end="123:48"><name pos:start="123:34" pos:end="123:35">av</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:48">rc_max_rate</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>





        <break pos:start="131:9" pos:end="131:14">break;</break>

    <default pos:start="133:5" pos:end="133:12">default:</default>

        <expr_stmt pos:start="135:9" pos:end="135:16"><expr pos:start="135:9" pos:end="135:15"><call pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:13">abort</name><argument_list pos:start="135:14" pos:end="135:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="141:5" pos:end="141:38"><expr pos:start="141:5" pos:end="141:37"><name pos:start="141:5" pos:end="141:6">st</name> <operator pos:start="141:8" pos:end="141:8">=</operator> <call pos:start="141:10" pos:end="141:37"><name pos:start="141:10" pos:end="141:19">av_mallocz</name><argument_list pos:start="141:20" pos:end="141:37">(<argument pos:start="141:21" pos:end="141:36"><expr pos:start="141:21" pos:end="141:36"><sizeof pos:start="141:21" pos:end="141:36">sizeof<argument_list pos:start="141:27" pos:end="141:36">(<argument pos:start="141:28" pos:end="141:35"><expr pos:start="141:28" pos:end="141:35"><name pos:start="141:28" pos:end="141:35">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="145:15"><if pos:start="143:5" pos:end="145:15">if <condition pos:start="143:8" pos:end="143:12">(<expr pos:start="143:9" pos:end="143:11"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:11">st</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:15"><block_content pos:start="145:9" pos:end="145:15">

        <return pos:start="145:9" pos:end="145:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:45"><expr pos:start="147:5" pos:end="147:44"><name pos:start="147:5" pos:end="147:13"><name pos:start="147:5" pos:end="147:6">st</name><operator pos:start="147:7" pos:end="147:8">-&gt;</operator><name pos:start="147:9" pos:end="147:13">codec</name></name> <operator pos:start="147:15" pos:end="147:15">=</operator> <call pos:start="147:17" pos:end="147:44"><name pos:start="147:17" pos:end="147:38">avcodec_alloc_context3</name><argument_list pos:start="147:39" pos:end="147:44">(<argument pos:start="147:40" pos:end="147:43"><expr pos:start="147:40" pos:end="147:43"><name pos:start="147:40" pos:end="147:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:47"><expr pos:start="149:5" pos:end="149:46"><name pos:start="149:5" pos:end="149:41"><name pos:start="149:5" pos:end="149:10">stream</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:19">streams</name><index pos:start="149:20" pos:end="149:41">[<expr pos:start="149:21" pos:end="149:40"><name pos:start="149:21" pos:end="149:38"><name pos:start="149:21" pos:end="149:26">stream</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:38">nb_streams</name></name><operator pos:start="149:39" pos:end="149:40">++</operator></expr>]</index></name> <operator pos:start="149:43" pos:end="149:43">=</operator> <name pos:start="149:45" pos:end="149:46">st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:50"><expr pos:start="151:5" pos:end="151:49"><call pos:start="151:5" pos:end="151:49"><name pos:start="151:5" pos:end="151:10">memcpy</name><argument_list pos:start="151:11" pos:end="151:49">(<argument pos:start="151:12" pos:end="151:20"><expr pos:start="151:12" pos:end="151:20"><name pos:start="151:12" pos:end="151:20"><name pos:start="151:12" pos:end="151:13">st</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">codec</name></name></expr></argument>, <argument pos:start="151:23" pos:end="151:24"><expr pos:start="151:23" pos:end="151:24"><name pos:start="151:23" pos:end="151:24">av</name></expr></argument>, <argument pos:start="151:27" pos:end="151:48"><expr pos:start="151:27" pos:end="151:48"><sizeof pos:start="151:27" pos:end="151:48">sizeof<argument_list pos:start="151:33" pos:end="151:48">(<argument pos:start="151:34" pos:end="151:47"><expr pos:start="151:34" pos:end="151:47"><name pos:start="151:34" pos:end="151:47">AVCodecContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
