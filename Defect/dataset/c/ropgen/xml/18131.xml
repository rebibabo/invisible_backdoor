<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18131.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">xilinx_spips_reset</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">DeviceState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:36">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">XilinxSPIPS</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><call pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:33">XILINX_SPIPS</name><argument_list pos:start="5:34" pos:end="5:36">(<argument pos:start="5:35" pos:end="5:35"><expr pos:start="5:35" pos:end="5:35"><name pos:start="5:35" pos:end="5:35">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <for pos:start="11:5" pos:end="15:5">for <control pos:start="11:9" pos:end="11:42">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:37"><expr pos:start="11:17" pos:end="11:36"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:36">XLNX_SPIPS_R_MAX</name></expr>;</condition> <incr pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:39">i</name><operator pos:start="11:40" pos:end="11:41">++</operator></expr></incr>)</control> <block pos:start="11:44" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:23">

        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">regs</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">i</name></expr>]</index></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><call pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:15">fifo8_reset</name><argument_list pos:start="19:16" pos:end="19:28">(<argument pos:start="19:17" pos:end="19:27"><expr pos:start="19:17" pos:end="19:27"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:27"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">rx_fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:15">fifo8_reset</name><argument_list pos:start="21:16" pos:end="21:28">(<argument pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:27"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:27"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">rx_fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:25">/* non zero resets */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">regs</name><index pos:start="25:12" pos:end="25:21">[<expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:20">R_CONFIG</name></expr>]</index></name> <operator pos:start="25:23" pos:end="25:24">|=</operator> <name pos:start="25:26" pos:end="25:40">MODEFAIL_GEN_EN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">regs</name><index pos:start="27:12" pos:end="27:31">[<expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:30">R_SLAVE_IDLE_COUNT</name></expr>]</index></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <literal type="number" pos:start="27:35" pos:end="27:38">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:11">regs</name><index pos:start="29:12" pos:end="29:23">[<expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:22">R_TX_THRES</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:11">regs</name><index pos:start="31:12" pos:end="31:23">[<expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:22">R_RX_THRES</name></expr>]</index></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:64">/* FIXME: move magic number definition somewhere sensible */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">regs</name><index pos:start="35:12" pos:end="35:21">[<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:20">R_MOD_ID</name></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:34">0x01090106</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">regs</name><index pos:start="37:12" pos:end="37:24">[<expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:23">R_LQSPI_CFG</name></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:44">R_LQSPI_CFG_RESET</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:17">link_state</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:22">link_state_next</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:27">link_state_next_when</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:18">snoop_state</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:35">SNOOP_CHECKING</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:18">cmd_dummies</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:20">man_start_com</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:28">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><call pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:27">xilinx_spips_update_ixr</name><argument_list pos:start="51:28" pos:end="51:30">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><call pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:32">xilinx_spips_update_cs_lines</name><argument_list pos:start="53:33" pos:end="53:35">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><name pos:start="53:34" pos:end="53:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
