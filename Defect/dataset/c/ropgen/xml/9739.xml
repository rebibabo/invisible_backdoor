<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9739.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">size_t</name></type> <name pos:start="1:8" pos:end="1:18">nbd_wr_sync</name><parameter_list pos:start="1:19" pos:end="1:67">(<parameter pos:start="1:20" pos:end="1:25"><decl pos:start="1:20" pos:end="1:25"><type pos:start="1:20" pos:end="1:25"><name pos:start="1:20" pos:end="1:22">int</name></type> <name pos:start="1:24" pos:end="1:25">fd</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">buffer</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:47">size_t</name></type> <name pos:start="1:49" pos:end="1:52">size</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:58">bool</name></type> <name pos:start="1:60" pos:end="1:66">do_read</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:18">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:17">offset</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="21:5"><if pos:start="9:5" pos:end="21:5">if <condition pos:start="9:8" pos:end="9:28">(<expr pos:start="9:9" pos:end="9:27"><call pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:25">qemu_in_coroutine</name><argument_list pos:start="9:26" pos:end="9:27">()</argument_list></call></expr>)</condition> <block pos:start="9:30" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:9">

        <if_stmt pos:start="11:9" pos:end="19:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:20">(<expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:19">do_read</name></expr>)</condition> <block pos:start="11:22" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:50">

            <return pos:start="13:13" pos:end="13:50">return <expr pos:start="13:20" pos:end="13:49"><call pos:start="13:20" pos:end="13:49"><name pos:start="13:20" pos:end="13:31">qemu_co_recv</name><argument_list pos:start="13:32" pos:end="13:49">(<argument pos:start="13:33" pos:end="13:34"><expr pos:start="13:33" pos:end="13:34"><name pos:start="13:33" pos:end="13:34">fd</name></expr></argument>, <argument pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:42">buffer</name></expr></argument>, <argument pos:start="13:45" pos:end="13:48"><expr pos:start="13:45" pos:end="13:48"><name pos:start="13:45" pos:end="13:48">size</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="15:11" pos:end="19:9">else <block pos:start="15:16" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:50">

            <return pos:start="17:13" pos:end="17:50">return <expr pos:start="17:20" pos:end="17:49"><call pos:start="17:20" pos:end="17:49"><name pos:start="17:20" pos:end="17:31">qemu_co_send</name><argument_list pos:start="17:32" pos:end="17:49">(<argument pos:start="17:33" pos:end="17:34"><expr pos:start="17:33" pos:end="17:34"><name pos:start="17:33" pos:end="17:34">fd</name></expr></argument>, <argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:42">buffer</name></expr></argument>, <argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">size</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="25:5" pos:end="81:5">while <condition pos:start="25:11" pos:end="25:25">(<expr pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:17">offset</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:24">size</name></expr>)</condition> <block pos:start="25:27" pos:end="81:5">{<block_content pos:start="27:9" pos:end="79:22">

        <decl_stmt pos:start="27:9" pos:end="27:20"><decl pos:start="27:9" pos:end="27:19"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">ssize_t</name></type> <name pos:start="27:17" pos:end="27:19">len</name></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:19">do_read</name></expr>)</condition> <block pos:start="31:22" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:67">

            <expr_stmt pos:start="33:13" pos:end="33:67"><expr pos:start="33:13" pos:end="33:66"><name pos:start="33:13" pos:end="33:15">len</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:66"><name pos:start="33:19" pos:end="33:27">qemu_recv</name><argument_list pos:start="33:28" pos:end="33:66">(<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">fd</name></expr></argument>, <argument pos:start="33:33" pos:end="33:47"><expr pos:start="33:33" pos:end="33:47"><name pos:start="33:33" pos:end="33:38">buffer</name> <operator pos:start="33:40" pos:end="33:40">+</operator> <name pos:start="33:42" pos:end="33:47">offset</name></expr></argument>, <argument pos:start="33:50" pos:end="33:62"><expr pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:53">size</name> <operator pos:start="33:55" pos:end="33:55">-</operator> <name pos:start="33:57" pos:end="33:62">offset</name></expr></argument>, <argument pos:start="33:65" pos:end="33:65"><expr pos:start="33:65" pos:end="33:65"><literal type="number" pos:start="33:65" pos:end="33:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:62">

            <expr_stmt pos:start="37:13" pos:end="37:62"><expr pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:15">len</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:61"><name pos:start="37:19" pos:end="37:22">send</name><argument_list pos:start="37:23" pos:end="37:61">(<argument pos:start="37:24" pos:end="37:25"><expr pos:start="37:24" pos:end="37:25"><name pos:start="37:24" pos:end="37:25">fd</name></expr></argument>, <argument pos:start="37:28" pos:end="37:42"><expr pos:start="37:28" pos:end="37:42"><name pos:start="37:28" pos:end="37:33">buffer</name> <operator pos:start="37:35" pos:end="37:35">+</operator> <name pos:start="37:37" pos:end="37:42">offset</name></expr></argument>, <argument pos:start="37:45" pos:end="37:57"><expr pos:start="37:45" pos:end="37:57"><name pos:start="37:45" pos:end="37:48">size</name> <operator pos:start="37:50" pos:end="37:50">-</operator> <name pos:start="37:52" pos:end="37:57">offset</name></expr></argument>, <argument pos:start="37:60" pos:end="37:60"><expr pos:start="37:60" pos:end="37:60"><literal type="number" pos:start="37:60" pos:end="37:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="43:9" pos:end="45:35"><if pos:start="43:9" pos:end="45:35">if <condition pos:start="43:12" pos:end="43:22">(<expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:15">len</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:35"><block_content pos:start="45:13" pos:end="45:35">

            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:17">errno</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:32">socket_error</name><argument_list pos:start="45:33" pos:end="45:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="49:9" pos:end="49:31">/* recoverable error */</comment>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:61">(<expr pos:start="51:13" pos:end="51:60"><name pos:start="51:13" pos:end="51:15">len</name> <operator pos:start="51:17" pos:end="51:18">==</operator> <operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal> <operator pos:start="51:23" pos:end="51:24">&amp;&amp;</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:31">errno</name> <operator pos:start="51:33" pos:end="51:34">==</operator> <name pos:start="51:36" pos:end="51:41">EAGAIN</name> <operator pos:start="51:43" pos:end="51:44">||</operator> <name pos:start="51:46" pos:end="51:50">errno</name> <operator pos:start="51:52" pos:end="51:53">==</operator> <name pos:start="51:55" pos:end="51:59">EINTR</name><operator pos:start="51:60" pos:end="51:60">)</operator></expr>)</condition> <block pos:start="51:63" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:21">

            <continue pos:start="53:13" pos:end="53:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="59:9" pos:end="59:17">/* eof */</comment>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:15">len</name> <operator pos:start="61:17" pos:end="61:18">==</operator> <literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>)</condition> <block pos:start="61:23" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:33">/* unrecoverable error */</comment>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:22">(<expr pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:15">len</name> <operator pos:start="71:17" pos:end="71:18">==</operator> <operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>)</condition> <block pos:start="71:24" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:21">

            <return pos:start="73:13" pos:end="73:21">return <expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:22"><expr pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:14">offset</name> <operator pos:start="79:16" pos:end="79:17">+=</operator> <name pos:start="79:19" pos:end="79:21">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="85:5" pos:end="85:18">return <expr pos:start="85:12" pos:end="85:17"><name pos:start="85:12" pos:end="85:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
