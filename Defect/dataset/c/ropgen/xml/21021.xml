<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21021.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">mpeg_mux_read_header</name><parameter_list pos:start="1:32" pos:end="3:55">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:54"><decl pos:start="3:33" pos:end="3:54"><type pos:start="3:33" pos:end="3:54"><name pos:start="3:33" pos:end="3:50">AVFormatParameters</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:54">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="213:1">{<block_content pos:start="7:5" pos:end="211:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MpegDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:80"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:23">startcode</name></decl>, <decl pos:start="9:26" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:26">c</name></decl>, <decl pos:start="9:29" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:38">rate_bound</name></decl>, <decl pos:start="9:41" pos:end="9:51"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:41" pos:end="9:51">audio_bound</name></decl>, <decl pos:start="9:54" pos:end="9:64"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:54" pos:end="9:64">video_bound</name></decl>, <decl pos:start="9:67" pos:end="9:74"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:67" pos:end="9:74">mux_rate</name></decl>, <decl pos:start="9:77" pos:end="9:79"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:77" pos:end="9:79">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">codec_id</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:19">n</name></decl>, <decl pos:start="11:22" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:22">i</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:28">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:5">m</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:18">av_mallocz</name><argument_list pos:start="17:19" pos:end="17:44">(<argument pos:start="17:20" pos:end="17:43"><expr pos:start="17:20" pos:end="17:43"><sizeof pos:start="17:20" pos:end="17:43">sizeof<argument_list pos:start="17:26" pos:end="17:43">(<argument pos:start="17:27" pos:end="17:42"><expr pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:42">MpegDemuxContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:23"><if pos:start="19:5" pos:end="21:23">if <condition pos:start="19:8" pos:end="19:11">(<expr pos:start="19:9" pos:end="19:10"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:10">m</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:23"><block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">priv_data</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:20">m</name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:34">/* search first pack header */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:5">m</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:19">header_state</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:26">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:8">size</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:24">MAX_SYNC_SIZE</name></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="79:5">for<control pos:start="33:8" pos:end="33:11">(<init pos:start="33:9" pos:end="33:9">;</init><condition pos:start="33:10" pos:end="33:10">;</condition><incr/>)</control> <block pos:start="33:13" pos:end="79:5">{<block_content pos:start="35:9" pos:end="77:18">

        <while pos:start="35:9" pos:end="43:9">while <condition pos:start="35:15" pos:end="35:24">(<expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:19">size</name> <operator pos:start="35:21" pos:end="35:21">&gt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition> <block pos:start="35:26" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:27">

            <expr_stmt pos:start="37:13" pos:end="37:73"><expr pos:start="37:13" pos:end="37:72"><name pos:start="37:13" pos:end="37:21">startcode</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:72"><name pos:start="37:25" pos:end="37:39">find_start_code</name><argument_list pos:start="37:40" pos:end="37:72">(<argument pos:start="37:41" pos:end="37:46"><expr pos:start="37:41" pos:end="37:46"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:46"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:46">pb</name></name></expr></argument>, <argument pos:start="37:49" pos:end="37:53"><expr pos:start="37:49" pos:end="37:53"><operator pos:start="37:49" pos:end="37:49">&amp;</operator><name pos:start="37:50" pos:end="37:53">size</name></expr></argument>, <argument pos:start="37:56" pos:end="37:71"><expr pos:start="37:56" pos:end="37:71"><operator pos:start="37:56" pos:end="37:56">&amp;</operator><name pos:start="37:57" pos:end="37:71"><name pos:start="37:57" pos:end="37:57">m</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:71">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:27"><if pos:start="39:13" pos:end="41:27">if <condition pos:start="39:16" pos:end="39:45">(<expr pos:start="39:17" pos:end="39:44"><name pos:start="39:17" pos:end="39:25">startcode</name> <operator pos:start="39:27" pos:end="39:28">==</operator> <name pos:start="39:30" pos:end="39:44">PACK_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:27"><block_content pos:start="41:17" pos:end="41:27">

                <goto pos:start="41:17" pos:end="41:27">goto <name pos:start="41:22" pos:end="41:26">found</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></while>

        <return pos:start="45:9" pos:end="45:24">return <expr pos:start="45:16" pos:end="45:23"><operator pos:start="45:16" pos:end="45:16">-</operator><name pos:start="45:17" pos:end="45:23">ENODATA</name></expr>;</return>

    <label pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:9">found</name>:</label>

        <comment type="block" pos:start="49:9" pos:end="49:57">/* search system header just after pack header */</comment>

        <comment type="block" pos:start="51:9" pos:end="51:31">/* parse pack header */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><call pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:16">get_byte</name><argument_list pos:start="53:17" pos:end="53:24">(<argument pos:start="53:18" pos:end="53:23"><expr pos:start="53:18" pos:end="53:23"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:23"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:27" pos:end="53:35">/* ts1 */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><call pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:16">get_be16</name><argument_list pos:start="55:17" pos:end="55:24">(<argument pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:23"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:23"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:27" pos:end="55:35">/* ts2 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><call pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:16">get_be16</name><argument_list pos:start="57:17" pos:end="57:24">(<argument pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:23"><operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:23"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:27" pos:end="57:35">/* ts3 */</comment>



        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:16">mux_rate</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:35"><name pos:start="61:20" pos:end="61:27">get_byte</name><argument_list pos:start="61:28" pos:end="61:35">(<argument pos:start="61:29" pos:end="61:34"><expr pos:start="61:29" pos:end="61:34"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:34"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:34">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:37" pos:end="61:38">&lt;&lt;</operator> <literal type="number" pos:start="61:40" pos:end="61:41">16</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:16">mux_rate</name> <operator pos:start="63:18" pos:end="63:19">|=</operator> <call pos:start="63:21" pos:end="63:36"><name pos:start="63:21" pos:end="63:28">get_byte</name><argument_list pos:start="63:29" pos:end="63:36">(<argument pos:start="63:30" pos:end="63:35"><expr pos:start="63:30" pos:end="63:35"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:35"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:35">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:38" pos:end="63:39">&lt;&lt;</operator> <literal type="number" pos:start="63:41" pos:end="63:41">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:16">mux_rate</name> <operator pos:start="65:18" pos:end="65:19">|=</operator> <call pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:28">get_byte</name><argument_list pos:start="65:29" pos:end="65:36">(<argument pos:start="65:30" pos:end="65:35"><expr pos:start="65:30" pos:end="65:35"><operator pos:start="65:30" pos:end="65:30">&amp;</operator><name pos:start="65:31" pos:end="65:35"><name pos:start="65:31" pos:end="65:31">s</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:35">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:16">mux_rate</name> <operator pos:start="67:18" pos:end="67:19">&amp;=</operator> <operator pos:start="67:21" pos:end="67:21">(</operator><literal type="number" pos:start="67:22" pos:end="67:22">1</literal> <operator pos:start="67:24" pos:end="67:25">&lt;&lt;</operator> <literal type="number" pos:start="67:27" pos:end="67:28">22</literal><operator pos:start="67:29" pos:end="67:29">)</operator> <operator pos:start="67:31" pos:end="67:31">-</operator> <literal type="number" pos:start="67:33" pos:end="67:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:9">m</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:19">mux_rate</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <name pos:start="69:23" pos:end="69:30">mux_rate</name></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:69"><expr pos:start="73:9" pos:end="73:68"><name pos:start="73:9" pos:end="73:17">startcode</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <call pos:start="73:21" pos:end="73:68"><name pos:start="73:21" pos:end="73:35">find_start_code</name><argument_list pos:start="73:36" pos:end="73:68">(<argument pos:start="73:37" pos:end="73:42"><expr pos:start="73:37" pos:end="73:42"><operator pos:start="73:37" pos:end="73:37">&amp;</operator><name pos:start="73:38" pos:end="73:42"><name pos:start="73:38" pos:end="73:38">s</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:42">pb</name></name></expr></argument>, <argument pos:start="73:45" pos:end="73:49"><expr pos:start="73:45" pos:end="73:49"><operator pos:start="73:45" pos:end="73:45">&amp;</operator><name pos:start="73:46" pos:end="73:49">size</name></expr></argument>, <argument pos:start="73:52" pos:end="73:67"><expr pos:start="73:52" pos:end="73:67"><operator pos:start="73:52" pos:end="73:52">&amp;</operator><name pos:start="73:53" pos:end="73:67"><name pos:start="73:53" pos:end="73:53">m</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:67">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:18"><if pos:start="75:9" pos:end="77:18">if <condition pos:start="75:12" pos:end="75:50">(<expr pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:21">startcode</name> <operator pos:start="75:23" pos:end="75:24">==</operator> <name pos:start="75:26" pos:end="75:49">SYSTEM_HEADER_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:18"><block_content pos:start="77:13" pos:end="77:18">

            <break pos:start="77:13" pos:end="77:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:8">size</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <call pos:start="81:12" pos:end="81:27"><name pos:start="81:12" pos:end="81:19">get_be16</name><argument_list pos:start="81:20" pos:end="81:27">(<argument pos:start="81:21" pos:end="81:26"><expr pos:start="81:21" pos:end="81:26"><operator pos:start="81:21" pos:end="81:21">&amp;</operator><name pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:14">rate_bound</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:33"><name pos:start="83:18" pos:end="83:25">get_byte</name><argument_list pos:start="83:26" pos:end="83:33">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:32">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:35" pos:end="83:36">&lt;&lt;</operator> <literal type="number" pos:start="83:38" pos:end="83:39">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:14">rate_bound</name> <operator pos:start="85:16" pos:end="85:17">|=</operator> <call pos:start="85:19" pos:end="85:34"><name pos:start="85:19" pos:end="85:26">get_byte</name><argument_list pos:start="85:27" pos:end="85:34">(<argument pos:start="85:28" pos:end="85:33"><expr pos:start="85:28" pos:end="85:33"><operator pos:start="85:28" pos:end="85:28">&amp;</operator><name pos:start="85:29" pos:end="85:33"><name pos:start="85:29" pos:end="85:29">s</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="85:36" pos:end="85:37">&lt;&lt;</operator> <literal type="number" pos:start="85:39" pos:end="85:39">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:14">rate_bound</name> <operator pos:start="87:16" pos:end="87:17">|=</operator> <call pos:start="87:19" pos:end="87:34"><name pos:start="87:19" pos:end="87:26">get_byte</name><argument_list pos:start="87:27" pos:end="87:34">(<argument pos:start="87:28" pos:end="87:33"><expr pos:start="87:28" pos:end="87:33"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:53"><expr pos:start="89:5" pos:end="89:52"><name pos:start="89:5" pos:end="89:14">rate_bound</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <operator pos:start="89:18" pos:end="89:18">(</operator><name pos:start="89:19" pos:end="89:28">rate_bound</name> <operator pos:start="89:30" pos:end="89:31">&gt;&gt;</operator> <literal type="number" pos:start="89:33" pos:end="89:33">1</literal><operator pos:start="89:34" pos:end="89:34">)</operator> <operator pos:start="89:36" pos:end="89:36">&amp;</operator> <operator pos:start="89:38" pos:end="89:38">(</operator><operator pos:start="89:39" pos:end="89:39">(</operator><literal type="number" pos:start="89:40" pos:end="89:40">1</literal> <operator pos:start="89:42" pos:end="89:43">&lt;&lt;</operator> <literal type="number" pos:start="89:45" pos:end="89:46">22</literal><operator pos:start="89:47" pos:end="89:47">)</operator> <operator pos:start="89:49" pos:end="89:49">-</operator> <literal type="number" pos:start="89:51" pos:end="89:51">1</literal><operator pos:start="89:52" pos:end="89:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:15">audio_bound</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:34"><name pos:start="91:19" pos:end="91:26">get_byte</name><argument_list pos:start="91:27" pos:end="91:34">(<argument pos:start="91:28" pos:end="91:33"><expr pos:start="91:28" pos:end="91:33"><operator pos:start="91:28" pos:end="91:28">&amp;</operator><name pos:start="91:29" pos:end="91:33"><name pos:start="91:29" pos:end="91:29">s</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:36" pos:end="91:37">&gt;&gt;</operator> <literal type="number" pos:start="91:39" pos:end="91:39">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:42"><expr pos:start="93:5" pos:end="93:41"><name pos:start="93:5" pos:end="93:15">video_bound</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:34"><name pos:start="93:19" pos:end="93:26">get_byte</name><argument_list pos:start="93:27" pos:end="93:34">(<argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><operator pos:start="93:28" pos:end="93:28">&amp;</operator><name pos:start="93:29" pos:end="93:33"><name pos:start="93:29" pos:end="93:29">s</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:36" pos:end="93:36">&amp;</operator> <literal type="number" pos:start="93:38" pos:end="93:41">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="108:0"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:12">get_byte</name><argument_list pos:start="95:13" pos:end="95:20">(<argument pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:19"><operator pos:start="95:14" pos:end="95:14">&amp;</operator><name pos:start="95:15" pos:end="95:19"><name pos:start="95:15" pos:end="95:15">s</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:19">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:23" pos:end="95:41">/* reserved byte */</comment>

<cpp:if pos:start="97:1" pos:end="97:5">#<cpp:directive pos:start="97:2" pos:end="97:3">if</cpp:directive> <expr pos:start="97:5" pos:end="97:5"><literal type="number" pos:start="97:5" pos:end="97:5">0</literal></expr></cpp:if>

    printf("mux_rate=%d kbit/s\n", (m-&gt;mux_rate * 50 * 8) / 1000);

    printf("rate_bound=%d\n", rate_bound);

    printf("audio_bound=%d\n", audio_bound);

    printf("video_bound=%d\n", video_bound);

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="109:5" pos:end="109:14"><expr pos:start="109:5" pos:end="109:13"><name pos:start="109:5" pos:end="109:8">size</name> <operator pos:start="109:10" pos:end="109:11">-=</operator> <literal type="number" pos:start="109:13" pos:end="109:13">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:22"><expr pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:17">nb_streams</name></name> <operator pos:start="111:19" pos:end="111:19">=</operator> <literal type="number" pos:start="111:21" pos:end="111:21">0</literal></expr>;</expr_stmt>

    <while pos:start="113:5" pos:end="207:5">while <condition pos:start="113:11" pos:end="113:20">(<expr pos:start="113:12" pos:end="113:19"><name pos:start="113:12" pos:end="113:15">size</name> <operator pos:start="113:17" pos:end="113:17">&gt;</operator> <literal type="number" pos:start="113:19" pos:end="113:19">0</literal></expr>)</condition> <block pos:start="113:22" pos:end="207:5">{<block_content pos:start="115:9" pos:end="205:9">

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:9">c</name> <operator pos:start="115:11" pos:end="115:11">=</operator> <call pos:start="115:13" pos:end="115:28"><name pos:start="115:13" pos:end="115:20">get_byte</name><argument_list pos:start="115:21" pos:end="115:28">(<argument pos:start="115:22" pos:end="115:27"><expr pos:start="115:22" pos:end="115:27"><operator pos:start="115:22" pos:end="115:22">&amp;</operator><name pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:15"><expr pos:start="117:9" pos:end="117:14"><name pos:start="117:9" pos:end="117:12">size</name><operator pos:start="117:13" pos:end="117:14">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="121:18"><if pos:start="119:9" pos:end="121:18">if <condition pos:start="119:12" pos:end="119:28">(<expr pos:start="119:13" pos:end="119:27"><operator pos:start="119:13" pos:end="119:13">(</operator><name pos:start="119:14" pos:end="119:14">c</name> <operator pos:start="119:16" pos:end="119:16">&amp;</operator> <literal type="number" pos:start="119:18" pos:end="119:21">0x80</literal><operator pos:start="119:22" pos:end="119:22">)</operator> <operator pos:start="119:24" pos:end="119:25">==</operator> <literal type="number" pos:start="119:27" pos:end="119:27">0</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:18"><block_content pos:start="121:13" pos:end="121:18">

            <break pos:start="121:13" pos:end="121:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:31"><expr pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:11">val</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:30"><name pos:start="123:15" pos:end="123:22">get_be16</name><argument_list pos:start="123:23" pos:end="123:30">(<argument pos:start="123:24" pos:end="123:29"><expr pos:start="123:24" pos:end="123:29"><operator pos:start="123:24" pos:end="123:24">&amp;</operator><name pos:start="123:25" pos:end="123:29"><name pos:start="123:25" pos:end="123:25">s</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:18"><expr pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:12">size</name> <operator pos:start="125:14" pos:end="125:15">-=</operator> <literal type="number" pos:start="125:17" pos:end="125:17">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="187:9"><if pos:start="127:9" pos:end="139:9">if <condition pos:start="127:12" pos:end="127:35">(<expr pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:13">c</name> <operator pos:start="127:15" pos:end="127:16">&gt;=</operator> <literal type="number" pos:start="127:18" pos:end="127:21">0xc0</literal> <operator pos:start="127:23" pos:end="127:24">&amp;&amp;</operator> <name pos:start="127:26" pos:end="127:26">c</name> <operator pos:start="127:28" pos:end="127:29">&lt;=</operator> <literal type="number" pos:start="127:31" pos:end="127:34">0xdf</literal></expr>)</condition> <block pos:start="127:37" pos:end="139:9">{<block_content pos:start="131:13" pos:end="137:26">

            <comment type="block" pos:start="129:13" pos:end="129:35">/* mpeg audio stream */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:36"><expr pos:start="131:13" pos:end="131:35"><name pos:start="131:13" pos:end="131:16">type</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <name pos:start="131:20" pos:end="131:35">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:36"><expr pos:start="133:13" pos:end="133:35"><name pos:start="133:13" pos:end="133:20">codec_id</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <name pos:start="133:24" pos:end="133:35">CODEC_ID_MP2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:18"><expr pos:start="135:13" pos:end="135:17"><name pos:start="135:13" pos:end="135:13">n</name> <operator pos:start="135:15" pos:end="135:15">=</operator> <literal type="number" pos:start="135:17" pos:end="135:17">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:13">c</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <name pos:start="137:17" pos:end="137:17">c</name> <operator pos:start="137:19" pos:end="137:19">|</operator> <literal type="number" pos:start="137:21" pos:end="137:25">0x100</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="139:11" pos:end="149:9">else if <condition pos:start="139:19" pos:end="139:42">(<expr pos:start="139:20" pos:end="139:41"><name pos:start="139:20" pos:end="139:20">c</name> <operator pos:start="139:22" pos:end="139:23">&gt;=</operator> <literal type="number" pos:start="139:25" pos:end="139:28">0xe0</literal> <operator pos:start="139:30" pos:end="139:31">&amp;&amp;</operator> <name pos:start="139:33" pos:end="139:33">c</name> <operator pos:start="139:35" pos:end="139:36">&lt;=</operator> <literal type="number" pos:start="139:38" pos:end="139:41">0xef</literal></expr>)</condition> <block pos:start="139:44" pos:end="149:9">{<block_content pos:start="141:13" pos:end="147:26">

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:16">type</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <name pos:start="141:20" pos:end="141:35">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:43"><expr pos:start="143:13" pos:end="143:42"><name pos:start="143:13" pos:end="143:20">codec_id</name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:42">CODEC_ID_MPEG1VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:18"><expr pos:start="145:13" pos:end="145:17"><name pos:start="145:13" pos:end="145:13">n</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <literal type="number" pos:start="145:17" pos:end="145:17">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:26"><expr pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:13">c</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <name pos:start="147:17" pos:end="147:17">c</name> <operator pos:start="147:19" pos:end="147:19">|</operator> <literal type="number" pos:start="147:21" pos:end="147:25">0x100</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="149:11" pos:end="167:9">else if <condition pos:start="149:19" pos:end="149:29">(<expr pos:start="149:20" pos:end="149:28"><name pos:start="149:20" pos:end="149:20">c</name> <operator pos:start="149:22" pos:end="149:23">==</operator> <literal type="number" pos:start="149:25" pos:end="149:28">0xb8</literal></expr>)</condition> <block pos:start="149:31" pos:end="167:9">{<block_content pos:start="157:13" pos:end="163:21">

            <comment type="block" pos:start="151:13" pos:end="151:35">/* all audio streams */</comment>

            <comment type="block" pos:start="153:13" pos:end="155:51">/* XXX: hack for DVD: we force AC3, although we do not

               know that this codec will be used */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:36"><expr pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:16">type</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:35">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:36"><expr pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:20">codec_id</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:35">CODEC_ID_AC3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:28"><expr pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:13">n</name> <operator pos:start="161:15" pos:end="161:15">=</operator> <name pos:start="161:17" pos:end="161:27">audio_bound</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:21"><expr pos:start="163:13" pos:end="163:20"><name pos:start="163:13" pos:end="163:13">c</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <literal type="number" pos:start="163:17" pos:end="163:20">0x80</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="165:13" pos:end="165:39">/*            c = 0x1c0; */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="167:11" pos:end="179:9">else if <condition pos:start="167:19" pos:end="167:29">(<expr pos:start="167:20" pos:end="167:28"><name pos:start="167:20" pos:end="167:20">c</name> <operator pos:start="167:22" pos:end="167:23">==</operator> <literal type="number" pos:start="167:25" pos:end="167:28">0xb9</literal></expr>)</condition> <block pos:start="167:31" pos:end="179:9">{<block_content pos:start="171:13" pos:end="177:22">

            <comment type="block" pos:start="169:13" pos:end="169:35">/* all video streams */</comment>

            <expr_stmt pos:start="171:13" pos:end="171:36"><expr pos:start="171:13" pos:end="171:35"><name pos:start="171:13" pos:end="171:16">type</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:35">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:43"><expr pos:start="173:13" pos:end="173:42"><name pos:start="173:13" pos:end="173:20">codec_id</name> <operator pos:start="173:22" pos:end="173:22">=</operator> <name pos:start="173:24" pos:end="173:42">CODEC_ID_MPEG1VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:28"><expr pos:start="175:13" pos:end="175:27"><name pos:start="175:13" pos:end="175:13">n</name> <operator pos:start="175:15" pos:end="175:15">=</operator> <name pos:start="175:17" pos:end="175:27">video_bound</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:22"><expr pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:13">c</name> <operator pos:start="177:15" pos:end="177:15">=</operator> <literal type="number" pos:start="177:17" pos:end="177:21">0x1e0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="187:9">else <block pos:start="179:16" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:18">

            <expr_stmt pos:start="181:13" pos:end="181:21"><expr pos:start="181:13" pos:end="181:20"><name pos:start="181:13" pos:end="181:16">type</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <literal type="number" pos:start="181:20" pos:end="181:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:25"><expr pos:start="183:13" pos:end="183:24"><name pos:start="183:13" pos:end="183:20">codec_id</name> <operator pos:start="183:22" pos:end="183:22">=</operator> <literal type="number" pos:start="183:24" pos:end="183:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:18"><expr pos:start="185:13" pos:end="185:17"><name pos:start="185:13" pos:end="185:13">n</name> <operator pos:start="185:15" pos:end="185:15">=</operator> <literal type="number" pos:start="185:17" pos:end="185:17">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="189:9" pos:end="205:9">for<control pos:start="189:12" pos:end="189:24">(<init pos:start="189:13" pos:end="189:16"><expr pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:13">i</name><operator pos:start="189:14" pos:end="189:14">=</operator><literal type="number" pos:start="189:15" pos:end="189:15">0</literal></expr>;</init><condition pos:start="189:17" pos:end="189:20"><expr pos:start="189:17" pos:end="189:19"><name pos:start="189:17" pos:end="189:17">i</name><operator pos:start="189:18" pos:end="189:18">&lt;</operator><name pos:start="189:19" pos:end="189:19">n</name></expr>;</condition><incr pos:start="189:21" pos:end="189:23"><expr pos:start="189:21" pos:end="189:23"><name pos:start="189:21" pos:end="189:21">i</name><operator pos:start="189:22" pos:end="189:23">++</operator></expr></incr>)</control> <block pos:start="189:26" pos:end="205:9">{<block_content pos:start="191:13" pos:end="203:42">

            <expr_stmt pos:start="191:13" pos:end="191:46"><expr pos:start="191:13" pos:end="191:45"><name pos:start="191:13" pos:end="191:14">st</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <call pos:start="191:18" pos:end="191:45"><name pos:start="191:18" pos:end="191:27">av_mallocz</name><argument_list pos:start="191:28" pos:end="191:45">(<argument pos:start="191:29" pos:end="191:44"><expr pos:start="191:29" pos:end="191:44"><sizeof pos:start="191:29" pos:end="191:44">sizeof<argument_list pos:start="191:35" pos:end="191:44">(<argument pos:start="191:36" pos:end="191:43"><expr pos:start="191:36" pos:end="191:43"><name pos:start="191:36" pos:end="191:43">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="193:13" pos:end="195:31"><if pos:start="193:13" pos:end="195:31">if <condition pos:start="193:16" pos:end="193:20">(<expr pos:start="193:17" pos:end="193:19"><operator pos:start="193:17" pos:end="193:17">!</operator><name pos:start="193:18" pos:end="193:19">st</name></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:31"><block_content pos:start="195:17" pos:end="195:31">

                <return pos:start="195:17" pos:end="195:31">return <expr pos:start="195:24" pos:end="195:30"><operator pos:start="195:24" pos:end="195:24">-</operator><name pos:start="195:25" pos:end="195:30">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:45"><expr pos:start="197:13" pos:end="197:44"><name pos:start="197:13" pos:end="197:39"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:22">streams</name><index pos:start="197:23" pos:end="197:39">[<expr pos:start="197:24" pos:end="197:38"><name pos:start="197:24" pos:end="197:36"><name pos:start="197:24" pos:end="197:24">s</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:36">nb_streams</name></name><operator pos:start="197:37" pos:end="197:38">++</operator></expr>]</index></name> <operator pos:start="197:41" pos:end="197:41">=</operator> <name pos:start="197:43" pos:end="197:44">st</name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:27"><expr pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:18"><name pos:start="199:13" pos:end="199:14">st</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:18">id</name></name> <operator pos:start="199:20" pos:end="199:20">=</operator> <name pos:start="199:22" pos:end="199:22">c</name> <operator pos:start="199:24" pos:end="199:24">+</operator> <name pos:start="199:26" pos:end="199:26">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:40"><expr pos:start="201:13" pos:end="201:39"><name pos:start="201:13" pos:end="201:32"><name pos:start="201:13" pos:end="201:14">st</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:21">codec</name><operator pos:start="201:22" pos:end="201:22">.</operator><name pos:start="201:23" pos:end="201:32">codec_type</name></name> <operator pos:start="201:34" pos:end="201:34">=</operator> <name pos:start="201:36" pos:end="201:39">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:42"><expr pos:start="203:13" pos:end="203:41"><name pos:start="203:13" pos:end="203:30"><name pos:start="203:13" pos:end="203:14">st</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:21">codec</name><operator pos:start="203:22" pos:end="203:22">.</operator><name pos:start="203:23" pos:end="203:30">codec_id</name></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <name pos:start="203:34" pos:end="203:41">codec_id</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></while>



    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><literal type="number" pos:start="211:12" pos:end="211:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
