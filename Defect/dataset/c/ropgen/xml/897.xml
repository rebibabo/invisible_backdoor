<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/897.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:30">gen_evfsabs</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">DisasContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="24:0">

    <if_stmt pos:start="5:5" pos:end="14:0"><if pos:start="5:5" pos:end="14:0">if <condition pos:start="5:8" pos:end="5:36">(<expr pos:start="5:9" pos:end="5:35"><call pos:start="5:9" pos:end="5:35"><name pos:start="5:9" pos:end="5:16">unlikely</name><argument_list pos:start="5:17" pos:end="5:35">(<argument pos:start="5:18" pos:end="5:34"><expr pos:start="5:18" pos:end="5:34"><operator pos:start="5:18" pos:end="5:18">!</operator><name pos:start="5:19" pos:end="5:34"><name pos:start="5:19" pos:end="5:21">ctx</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:34">spe_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:38" pos:end="14:0">{<block_content pos:start="7:9" pos:end="9:15">

        <expr_stmt pos:start="7:9" pos:end="7:45"><expr pos:start="7:9" pos:end="7:44"><call pos:start="7:9" pos:end="7:44"><name pos:start="7:9" pos:end="7:21">gen_exception</name><argument_list pos:start="7:22" pos:end="7:44">(<argument pos:start="7:23" pos:end="7:25"><expr pos:start="7:23" pos:end="7:25"><name pos:start="7:23" pos:end="7:25">ctx</name></expr></argument>, <argument pos:start="7:28" pos:end="7:43"><expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43">POWERPC_EXCP_APU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="13:1" pos:end="13:25">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:25"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:11">defined</name><argument_list pos:start="13:12" pos:end="13:25">(<argument pos:start="13:13" pos:end="13:24"><expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:94"><call pos:start="15:5" pos:end="15:94"><name pos:start="15:5" pos:end="15:19">tcg_gen_andi_tl</name><argument_list pos:start="15:20" pos:end="15:94">(<argument pos:start="15:21" pos:end="15:44"><expr pos:start="15:21" pos:end="15:44"><name pos:start="15:21" pos:end="15:44"><name pos:start="15:21" pos:end="15:27">cpu_gpr</name><index pos:start="15:28" pos:end="15:44">[<expr pos:start="15:29" pos:end="15:43"><call pos:start="15:29" pos:end="15:43"><name pos:start="15:29" pos:end="15:30">rD</name><argument_list pos:start="15:31" pos:end="15:43">(<argument pos:start="15:32" pos:end="15:42"><expr pos:start="15:32" pos:end="15:42"><name pos:start="15:32" pos:end="15:42"><name pos:start="15:32" pos:end="15:34">ctx</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:42">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="15:47" pos:end="15:70"><expr pos:start="15:47" pos:end="15:70"><name pos:start="15:47" pos:end="15:70"><name pos:start="15:47" pos:end="15:53">cpu_gpr</name><index pos:start="15:54" pos:end="15:70">[<expr pos:start="15:55" pos:end="15:69"><call pos:start="15:55" pos:end="15:69"><name pos:start="15:55" pos:end="15:56">rA</name><argument_list pos:start="15:57" pos:end="15:69">(<argument pos:start="15:58" pos:end="15:68"><expr pos:start="15:58" pos:end="15:68"><name pos:start="15:58" pos:end="15:68"><name pos:start="15:58" pos:end="15:60">ctx</name><operator pos:start="15:61" pos:end="15:62">-&gt;</operator><name pos:start="15:63" pos:end="15:68">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="15:73" pos:end="15:93"><expr pos:start="15:73" pos:end="15:93"><operator pos:start="15:73" pos:end="15:73">~</operator><literal type="number" pos:start="15:74" pos:end="15:93">0x8000000080000000LL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="19:5" pos:end="19:85"><expr pos:start="19:5" pos:end="19:84"><call pos:start="19:5" pos:end="19:84"><name pos:start="19:5" pos:end="19:19">tcg_gen_andi_tl</name><argument_list pos:start="19:20" pos:end="19:84">(<argument pos:start="19:21" pos:end="19:44"><expr pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:27">cpu_gpr</name><index pos:start="19:28" pos:end="19:44">[<expr pos:start="19:29" pos:end="19:43"><call pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:30">rD</name><argument_list pos:start="19:31" pos:end="19:43">(<argument pos:start="19:32" pos:end="19:42"><expr pos:start="19:32" pos:end="19:42"><name pos:start="19:32" pos:end="19:42"><name pos:start="19:32" pos:end="19:34">ctx</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:42">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:47" pos:end="19:70"><expr pos:start="19:47" pos:end="19:70"><name pos:start="19:47" pos:end="19:70"><name pos:start="19:47" pos:end="19:53">cpu_gpr</name><index pos:start="19:54" pos:end="19:70">[<expr pos:start="19:55" pos:end="19:69"><call pos:start="19:55" pos:end="19:69"><name pos:start="19:55" pos:end="19:56">rA</name><argument_list pos:start="19:57" pos:end="19:69">(<argument pos:start="19:58" pos:end="19:68"><expr pos:start="19:58" pos:end="19:68"><name pos:start="19:58" pos:end="19:68"><name pos:start="19:58" pos:end="19:60">ctx</name><operator pos:start="19:61" pos:end="19:62">-&gt;</operator><name pos:start="19:63" pos:end="19:68">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:73" pos:end="19:83"><expr pos:start="19:73" pos:end="19:83"><operator pos:start="19:73" pos:end="19:73">~</operator><literal type="number" pos:start="19:74" pos:end="19:83">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:86"><call pos:start="21:5" pos:end="21:86"><name pos:start="21:5" pos:end="21:19">tcg_gen_andi_tl</name><argument_list pos:start="21:20" pos:end="21:86">(<argument pos:start="21:21" pos:end="21:45"><expr pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:28">cpu_gprh</name><index pos:start="21:29" pos:end="21:45">[<expr pos:start="21:30" pos:end="21:44"><call pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:31">rD</name><argument_list pos:start="21:32" pos:end="21:44">(<argument pos:start="21:33" pos:end="21:43"><expr pos:start="21:33" pos:end="21:43"><name pos:start="21:33" pos:end="21:43"><name pos:start="21:33" pos:end="21:35">ctx</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:43">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="21:48" pos:end="21:72"><expr pos:start="21:48" pos:end="21:72"><name pos:start="21:48" pos:end="21:72"><name pos:start="21:48" pos:end="21:55">cpu_gprh</name><index pos:start="21:56" pos:end="21:72">[<expr pos:start="21:57" pos:end="21:71"><call pos:start="21:57" pos:end="21:71"><name pos:start="21:57" pos:end="21:58">rA</name><argument_list pos:start="21:59" pos:end="21:71">(<argument pos:start="21:60" pos:end="21:70"><expr pos:start="21:60" pos:end="21:70"><name pos:start="21:60" pos:end="21:70"><name pos:start="21:60" pos:end="21:62">ctx</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:70">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="21:75" pos:end="21:85"><expr pos:start="21:75" pos:end="21:85"><operator pos:start="21:75" pos:end="21:75">~</operator><literal type="number" pos:start="21:76" pos:end="21:85">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
