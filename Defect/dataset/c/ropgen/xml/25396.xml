<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25396.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">gdb_set_spe_reg</name><parameter_list pos:start="1:27" pos:end="1:66">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:58">mem_buf</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <if_stmt pos:start="5:5" pos:end="23:5"><if pos:start="5:5" pos:end="23:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">n</name> <operator pos:start="5:11" pos:end="5:11">&lt;</operator> <literal type="number" pos:start="5:13" pos:end="5:14">32</literal></expr>)</condition> <block pos:start="5:17" pos:end="23:5">{<block_content pos:start="9:9" pos:end="21:17">

<cpp:if pos:start="7:1" pos:end="7:25">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:25"><call pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:11">defined</name><argument_list pos:start="7:12" pos:end="7:25">(<argument pos:start="7:13" pos:end="7:24"><expr pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <decl_stmt pos:start="9:9" pos:end="9:48"><decl pos:start="9:9" pos:end="9:47"><type pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:20">target_ulong</name></type> <name pos:start="9:22" pos:end="9:23">lo</name> <init pos:start="9:25" pos:end="9:47">= <expr pos:start="9:27" pos:end="9:47"><operator pos:start="9:27" pos:end="9:27">(</operator><name pos:start="9:28" pos:end="9:35">uint32_t</name><operator pos:start="9:36" pos:end="9:36">)</operator><name pos:start="9:37" pos:end="9:47"><name pos:start="9:37" pos:end="9:39">env</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:44">gpr</name><index pos:start="9:45" pos:end="9:47">[<expr pos:start="9:46" pos:end="9:46"><name pos:start="9:46" pos:end="9:46">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:61"><decl pos:start="11:9" pos:end="11:60"><type pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20">target_ulong</name></type> <name pos:start="11:22" pos:end="11:23">hi</name> <init pos:start="11:25" pos:end="11:60">= <expr pos:start="11:27" pos:end="11:60"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:39">target_ulong</name><operator pos:start="11:40" pos:end="11:40">)</operator><call pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:45">ldl_p</name><argument_list pos:start="11:46" pos:end="11:54">(<argument pos:start="11:47" pos:end="11:53"><expr pos:start="11:47" pos:end="11:53"><name pos:start="11:47" pos:end="11:53">mem_buf</name></expr></argument>)</argument_list></call> <operator pos:start="11:56" pos:end="11:57">&lt;&lt;</operator> <literal type="number" pos:start="11:59" pos:end="11:60">32</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">env</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">gpr</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">n</name></expr>]</index></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:24">lo</name> <operator pos:start="13:26" pos:end="13:26">|</operator> <name pos:start="13:28" pos:end="13:29">hi</name></expr>;</expr_stmt>

<cpp:else pos:start="15:1" pos:end="15:5">#<cpp:directive pos:start="15:2" pos:end="15:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:17">gprh</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">n</name></expr>]</index></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <call pos:start="17:24" pos:end="17:37"><name pos:start="17:24" pos:end="17:28">ldl_p</name><argument_list pos:start="17:29" pos:end="17:37">(<argument pos:start="17:30" pos:end="17:36"><expr pos:start="17:30" pos:end="17:36"><name pos:start="17:30" pos:end="17:36">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:12">==</operator> <literal type="number" pos:start="25:14" pos:end="25:15">33</literal></expr>)</condition> <block pos:start="25:18" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:20">spe_acc</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:37"><name pos:start="27:24" pos:end="27:28">ldq_p</name><argument_list pos:start="27:29" pos:end="27:37">(<argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><name pos:start="27:30" pos:end="27:36">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">8</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:9">n</name> <operator pos:start="33:11" pos:end="33:12">==</operator> <literal type="number" pos:start="33:14" pos:end="33:15">34</literal></expr>)</condition> <block pos:start="33:18" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:17">

        <comment type="block" pos:start="35:9" pos:end="35:37">/* SPEFSCR not implemented */</comment>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
