<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26775.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">handle_name_to_path</name><parameter_list pos:start="1:31" pos:end="3:65">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">FsContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:55">V9fsPath</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">dir_path</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:46"><decl pos:start="3:31" pos:end="3:46"><type pos:start="3:31" pos:end="3:46"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">char</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">name</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:64"><decl pos:start="3:49" pos:end="3:64"><type pos:start="3:49" pos:end="3:64"><name pos:start="3:49" pos:end="3:56">V9fsPath</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:64">target</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:15">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:25"><name pos:start="7:10" pos:end="7:15">buffer</name><index pos:start="7:16" pos:end="7:25">[<expr pos:start="7:17" pos:end="7:24"><name pos:start="7:17" pos:end="7:24">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:22">file_handle</name></name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:26">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">dirfd</name></decl>, <decl pos:start="11:16" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:18">ret</name></decl>, <decl pos:start="11:21" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:26">mnt_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:22">handle_data</name></name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:28">data</name> <init pos:start="13:30" pos:end="13:65">= <expr pos:start="13:32" pos:end="13:65"><operator pos:start="13:32" pos:end="13:32">(</operator>struct <name pos:start="13:40" pos:end="13:50">handle_data</name> <operator pos:start="13:52" pos:end="13:52">*</operator><operator pos:start="13:53" pos:end="13:53">)</operator><name pos:start="13:54" pos:end="13:65"><name pos:start="13:54" pos:end="13:56">ctx</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:65">private</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:38">/* "." and ".." are not allowed */</comment>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:50">(<expr pos:start="19:9" pos:end="19:49"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:15">strcmp</name><argument_list pos:start="19:16" pos:end="19:26">(<argument pos:start="19:17" pos:end="19:20"><expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">name</name></expr></argument>, <argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><literal type="string" pos:start="19:23" pos:end="19:25">"."</literal></expr></argument>)</argument_list></call> <operator pos:start="19:28" pos:end="19:29">||</operator> <operator pos:start="19:31" pos:end="19:31">!</operator><call pos:start="19:32" pos:end="19:49"><name pos:start="19:32" pos:end="19:37">strcmp</name><argument_list pos:start="19:38" pos:end="19:49">(<argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">name</name></expr></argument>, <argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><literal type="string" pos:start="19:45" pos:end="19:48">".."</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:52" pos:end="27:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:13">errno</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>



    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">dir_path</name></expr>)</condition> <block pos:start="29:19" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:70">

        <expr_stmt pos:start="31:9" pos:end="31:70"><expr pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:13">dirfd</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:69"><name pos:start="31:17" pos:end="31:30">open_by_handle</name><argument_list pos:start="31:31" pos:end="31:69">(<argument pos:start="31:32" pos:end="31:44"><expr pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:35">data</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:44">mountfd</name></name></expr></argument>, <argument pos:start="31:47" pos:end="31:60"><expr pos:start="31:47" pos:end="31:60"><name pos:start="31:47" pos:end="31:60"><name pos:start="31:47" pos:end="31:54">dir_path</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:60">data</name></name></expr></argument>, <argument pos:start="31:63" pos:end="31:68"><expr pos:start="31:63" pos:end="31:68"><name pos:start="31:63" pos:end="31:68">O_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:59">

        <comment type="block" pos:start="35:9" pos:end="35:37">/* relative to export root */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:13">dirfd</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:58"><name pos:start="37:17" pos:end="37:20">open</name><argument_list pos:start="37:21" pos:end="37:58">(<argument pos:start="37:22" pos:end="37:44"><expr pos:start="37:22" pos:end="37:44"><call pos:start="37:22" pos:end="37:44"><name pos:start="37:22" pos:end="37:26">rpath</name><argument_list pos:start="37:27" pos:end="37:44">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">ctx</name></expr></argument>, <argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><literal type="string" pos:start="37:33" pos:end="37:35">"."</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:43"><expr pos:start="37:38" pos:end="37:43"><name pos:start="37:38" pos:end="37:43">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:47" pos:end="37:57"><expr pos:start="37:47" pos:end="37:57"><name pos:start="37:47" pos:end="37:57">O_DIRECTORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:13">dirfd</name> <operator pos:start="41:15" pos:end="41:15">&lt;</operator> <literal type="number" pos:start="41:17" pos:end="41:17">0</literal></expr>)</condition> <block pos:start="41:20" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:21">

        <return pos:start="43:9" pos:end="43:21">return <expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">dirfd</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:67"><expr pos:start="47:5" pos:end="47:66"><name pos:start="47:5" pos:end="47:6">fh</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <call pos:start="47:10" pos:end="47:66"><name pos:start="47:10" pos:end="47:17">g_malloc</name><argument_list pos:start="47:18" pos:end="47:66">(<argument pos:start="47:19" pos:end="47:65"><expr pos:start="47:19" pos:end="47:65"><sizeof pos:start="47:19" pos:end="47:44">sizeof<argument_list pos:start="47:25" pos:end="47:44">(<argument pos:start="47:26" pos:end="47:43"><expr pos:start="47:26" pos:end="47:43">struct <name pos:start="47:33" pos:end="47:43">file_handle</name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:46" pos:end="47:46">+</operator> <name pos:start="47:48" pos:end="47:65"><name pos:start="47:48" pos:end="47:51">data</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:65">handle_bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:6">fh</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:20">handle_bytes</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:41"><name pos:start="49:24" pos:end="49:27">data</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:41">handle_bytes</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:49">/* add a "./" at the beginning of the path */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:12">snprintf</name><argument_list pos:start="53:13" pos:end="53:44">(<argument pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:19"><name pos:start="53:14" pos:end="53:19">buffer</name></expr></argument>, <argument pos:start="53:22" pos:end="53:29"><expr pos:start="53:22" pos:end="53:29"><name pos:start="53:22" pos:end="53:29">PATH_MAX</name></expr></argument>, <argument pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:37"><literal type="string" pos:start="53:32" pos:end="53:37">"./%s"</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:43"><expr pos:start="53:40" pos:end="53:43"><name pos:start="53:40" pos:end="53:43">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:45">/* flag = 0 imply don't follow symlink */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:56"><expr pos:start="57:5" pos:end="57:55"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:55"><name pos:start="57:11" pos:end="57:24">name_to_handle</name><argument_list pos:start="57:25" pos:end="57:55">(<argument pos:start="57:26" pos:end="57:30"><expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:30">dirfd</name></expr></argument>, <argument pos:start="57:33" pos:end="57:38"><expr pos:start="57:33" pos:end="57:38"><name pos:start="57:33" pos:end="57:38">buffer</name></expr></argument>, <argument pos:start="57:41" pos:end="57:42"><expr pos:start="57:41" pos:end="57:42"><name pos:start="57:41" pos:end="57:42">fh</name></expr></argument>, <argument pos:start="57:45" pos:end="57:51"><expr pos:start="57:45" pos:end="57:51"><operator pos:start="57:45" pos:end="57:45">&amp;</operator><name pos:start="57:46" pos:end="57:51">mnt_id</name></expr></argument>, <argument pos:start="57:54" pos:end="57:54"><expr pos:start="57:54" pos:end="57:54"><literal type="number" pos:start="57:54" pos:end="57:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:13">(<expr pos:start="59:9" pos:end="59:12"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:12">ret</name></expr>)</condition> <block pos:start="59:15" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:71">

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:14">target</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:20">data</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:28">char</name> <operator pos:start="61:30" pos:end="61:30">*</operator><operator pos:start="61:31" pos:end="61:31">)</operator><name pos:start="61:32" pos:end="61:33">fh</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:71"><expr pos:start="63:9" pos:end="63:70"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:14">target</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:20">size</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <sizeof pos:start="63:24" pos:end="63:49">sizeof<argument_list pos:start="63:30" pos:end="63:49">(<argument pos:start="63:31" pos:end="63:48"><expr pos:start="63:31" pos:end="63:48">struct <name pos:start="63:38" pos:end="63:48">file_handle</name></expr></argument>)</argument_list></sizeof> <operator pos:start="63:51" pos:end="63:51">+</operator> <name pos:start="63:53" pos:end="63:70"><name pos:start="63:53" pos:end="63:56">data</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:70">handle_bytes</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:19">

        <expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><call pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:14">g_free</name><argument_list pos:start="67:15" pos:end="67:18">(<argument pos:start="67:16" pos:end="67:17"><expr pos:start="67:16" pos:end="67:17"><name pos:start="67:16" pos:end="67:17">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:17"><expr pos:start="71:5" pos:end="71:16"><call pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:9">close</name><argument_list pos:start="71:10" pos:end="71:16">(<argument pos:start="71:11" pos:end="71:15"><expr pos:start="71:11" pos:end="71:15"><name pos:start="71:11" pos:end="71:15">dirfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
