<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18443.c" pos:tabs="8"><function pos:start="1:1" pos:end="34:74"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ff_er_add_slice</name><parameter_list pos:start="1:21" pos:end="1:95">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:35">MpegEncContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:50">startx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">starty</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:72"><decl pos:start="1:65" pos:end="1:72"><type pos:start="1:65" pos:end="1:72"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:72">endx</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:82"><decl pos:start="1:75" pos:end="1:82"><type pos:start="1:75" pos:end="1:82"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:82">endy</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:94"><decl pos:start="1:85" pos:end="1:94"><type pos:start="1:85" pos:end="1:94"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:94">status</name></decl></parameter>)</parameter_list><block pos:start="1:96" pos:end="34:74">{<block_content pos:start="2:5" pos:end="34:74">
    <decl_stmt pos:start="2:5" pos:end="2:79"><decl pos:start="2:5" pos:end="2:78"><type pos:start="2:5" pos:end="2:13"><specifier pos:start="2:5" pos:end="2:9">const</specifier> <name pos:start="2:11" pos:end="2:13">int</name></type> <name pos:start="2:15" pos:end="2:21">start_i</name><init pos:start="2:22" pos:end="2:78">= <expr pos:start="2:24" pos:end="2:78"><call pos:start="2:24" pos:end="2:78"><name pos:start="2:24" pos:end="2:27">clip</name><argument_list pos:start="2:28" pos:end="2:78">(<argument pos:start="2:29" pos:end="2:57"><expr pos:start="2:29" pos:end="2:57"><name pos:start="2:29" pos:end="2:34">startx</name> <operator pos:start="2:36" pos:end="2:36">+</operator> <name pos:start="2:38" pos:end="2:43">starty</name> <operator pos:start="2:45" pos:end="2:45">*</operator> <name pos:start="2:47" pos:end="2:57"><name pos:start="2:47" pos:end="2:47">s</name><operator pos:start="2:48" pos:end="2:49">-&gt;</operator><name pos:start="2:50" pos:end="2:57">mb_width</name></name></expr></argument>    , <argument pos:start="2:64" pos:end="2:64"><expr pos:start="2:64" pos:end="2:64"><literal type="number" pos:start="2:64" pos:end="2:64">0</literal></expr></argument>, <argument pos:start="2:67" pos:end="2:77"><expr pos:start="2:67" pos:end="2:77"><name pos:start="2:67" pos:end="2:75"><name pos:start="2:67" pos:end="2:67">s</name><operator pos:start="2:68" pos:end="2:69">-&gt;</operator><name pos:start="2:70" pos:end="2:75">mb_num</name></name><operator pos:start="2:76" pos:end="2:76">-</operator><literal type="number" pos:start="2:77" pos:end="2:77">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:77"><decl pos:start="3:5" pos:end="3:76"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:19">end_i</name>  <init pos:start="3:22" pos:end="3:76">= <expr pos:start="3:24" pos:end="3:76"><call pos:start="3:24" pos:end="3:76"><name pos:start="3:24" pos:end="3:27">clip</name><argument_list pos:start="3:28" pos:end="3:76">(<argument pos:start="3:29" pos:end="3:57"><expr pos:start="3:29" pos:end="3:57"><name pos:start="3:29" pos:end="3:32">endx</name>   <operator pos:start="3:36" pos:end="3:36">+</operator> <name pos:start="3:38" pos:end="3:41">endy</name>   <operator pos:start="3:45" pos:end="3:45">*</operator> <name pos:start="3:47" pos:end="3:57"><name pos:start="3:47" pos:end="3:47">s</name><operator pos:start="3:48" pos:end="3:49">-&gt;</operator><name pos:start="3:50" pos:end="3:57">mb_width</name></name></expr></argument>    , <argument pos:start="3:64" pos:end="3:64"><expr pos:start="3:64" pos:end="3:64"><literal type="number" pos:start="3:64" pos:end="3:64">0</literal></expr></argument>, <argument pos:start="3:67" pos:end="3:75"><expr pos:start="3:67" pos:end="3:75"><name pos:start="3:67" pos:end="3:75"><name pos:start="3:67" pos:end="3:67">s</name><operator pos:start="3:68" pos:end="3:69">-&gt;</operator><name pos:start="3:70" pos:end="3:75">mb_num</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:48"><decl pos:start="4:5" pos:end="4:47"><type pos:start="4:5" pos:end="4:13"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:13">int</name></type> <name pos:start="4:15" pos:end="4:22">start_xy</name><init pos:start="4:23" pos:end="4:47">= <expr pos:start="4:25" pos:end="4:47"><name pos:start="4:25" pos:end="4:47"><name pos:start="4:25" pos:end="4:25">s</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:38">mb_index2xy</name><index pos:start="4:39" pos:end="4:47">[<expr pos:start="4:40" pos:end="4:46"><name pos:start="4:40" pos:end="4:46">start_i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:20">end_xy</name>  <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:38">mb_index2xy</name><index pos:start="5:39" pos:end="5:45">[<expr pos:start="5:40" pos:end="5:44"><name pos:start="5:40" pos:end="5:44">end_i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:17"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:12">mask</name><init pos:start="6:13" pos:end="6:16">= <expr pos:start="6:15" pos:end="6:16"><operator pos:start="6:15" pos:end="6:15">-</operator><literal type="number" pos:start="6:16" pos:end="6:16">1</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="7:36"><if pos:start="7:5" pos:end="7:36">if<condition pos:start="7:7" pos:end="7:28">(<expr pos:start="7:8" pos:end="7:27"><operator pos:start="7:8" pos:end="7:8">!</operator><name pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:9">s</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:27">error_resilience</name></name></expr>)</condition><block type="pseudo" pos:start="7:30" pos:end="7:36"><block_content pos:start="7:30" pos:end="7:36"> <return pos:start="7:30" pos:end="7:36">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:22"><expr pos:start="8:5" pos:end="8:21"><name pos:start="8:5" pos:end="8:8">mask</name> <operator pos:start="8:10" pos:end="8:11">&amp;=</operator> <operator pos:start="8:13" pos:end="8:13">~</operator><name pos:start="8:14" pos:end="8:21">VP_START</name></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="34:74"><if pos:start="9:5" pos:end="34:74">if<condition pos:start="9:7" pos:end="9:34">(<expr pos:start="9:8" pos:end="9:33"><name pos:start="9:8" pos:end="9:13">status</name> <operator pos:start="9:15" pos:end="9:15">&amp;</operator> <operator pos:start="9:17" pos:end="9:17">(</operator><name pos:start="9:18" pos:end="9:25">AC_ERROR</name><operator pos:start="9:26" pos:end="9:26">|</operator><name pos:start="9:27" pos:end="9:32">AC_END</name><operator pos:start="9:33" pos:end="9:33">)</operator></expr>)</condition><block pos:start="9:35" pos:end="34:74">{<block_content pos:start="10:9" pos:end="34:74">
        <expr_stmt pos:start="10:9" pos:end="10:35"><expr pos:start="10:9" pos:end="10:34"><name pos:start="10:9" pos:end="10:12">mask</name> <operator pos:start="10:14" pos:end="10:15">&amp;=</operator> <operator pos:start="10:17" pos:end="10:17">~</operator><operator pos:start="10:18" pos:end="10:18">(</operator><name pos:start="10:19" pos:end="10:26">AC_ERROR</name><operator pos:start="10:27" pos:end="10:27">|</operator><name pos:start="10:28" pos:end="10:33">AC_END</name><operator pos:start="10:34" pos:end="10:34">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:22">error_count</name></name> <operator pos:start="11:24" pos:end="11:25">-=</operator> <name pos:start="11:27" pos:end="11:31">end_i</name> <operator pos:start="11:33" pos:end="11:33">-</operator> <name pos:start="11:35" pos:end="11:41">start_i</name> <operator pos:start="11:43" pos:end="11:43">+</operator> <literal type="number" pos:start="11:45" pos:end="11:45">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="34:74"><if pos:start="12:5" pos:end="34:74">if<condition pos:start="12:7" pos:end="12:34">(<expr pos:start="12:8" pos:end="12:33"><name pos:start="12:8" pos:end="12:13">status</name> <operator pos:start="12:15" pos:end="12:15">&amp;</operator> <operator pos:start="12:17" pos:end="12:17">(</operator><name pos:start="12:18" pos:end="12:25">DC_ERROR</name><operator pos:start="12:26" pos:end="12:26">|</operator><name pos:start="12:27" pos:end="12:32">DC_END</name><operator pos:start="12:33" pos:end="12:33">)</operator></expr>)</condition><block pos:start="12:35" pos:end="34:74">{<block_content pos:start="13:9" pos:end="34:74">
        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:12">mask</name> <operator pos:start="13:14" pos:end="13:15">&amp;=</operator> <operator pos:start="13:17" pos:end="13:17">~</operator><operator pos:start="13:18" pos:end="13:18">(</operator><name pos:start="13:19" pos:end="13:26">DC_ERROR</name><operator pos:start="13:27" pos:end="13:27">|</operator><name pos:start="13:28" pos:end="13:33">DC_END</name><operator pos:start="13:34" pos:end="13:34">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:46"><expr pos:start="14:9" pos:end="14:45"><name pos:start="14:9" pos:end="14:22"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:22">error_count</name></name> <operator pos:start="14:24" pos:end="14:25">-=</operator> <name pos:start="14:27" pos:end="14:31">end_i</name> <operator pos:start="14:33" pos:end="14:33">-</operator> <name pos:start="14:35" pos:end="14:41">start_i</name> <operator pos:start="14:43" pos:end="14:43">+</operator> <literal type="number" pos:start="14:45" pos:end="14:45">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="34:74"><if pos:start="15:5" pos:end="34:74">if<condition pos:start="15:7" pos:end="15:34">(<expr pos:start="15:8" pos:end="15:33"><name pos:start="15:8" pos:end="15:13">status</name> <operator pos:start="15:15" pos:end="15:15">&amp;</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:25">MV_ERROR</name><operator pos:start="15:26" pos:end="15:26">|</operator><name pos:start="15:27" pos:end="15:32">MV_END</name><operator pos:start="15:33" pos:end="15:33">)</operator></expr>)</condition><block pos:start="15:35" pos:end="34:74">{<block_content pos:start="16:9" pos:end="34:74">
        <expr_stmt pos:start="16:9" pos:end="16:35"><expr pos:start="16:9" pos:end="16:34"><name pos:start="16:9" pos:end="16:12">mask</name> <operator pos:start="16:14" pos:end="16:15">&amp;=</operator> <operator pos:start="16:17" pos:end="16:17">~</operator><operator pos:start="16:18" pos:end="16:18">(</operator><name pos:start="16:19" pos:end="16:26">MV_ERROR</name><operator pos:start="16:27" pos:end="16:27">|</operator><name pos:start="16:28" pos:end="16:33">MV_END</name><operator pos:start="16:34" pos:end="16:34">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">error_count</name></name> <operator pos:start="17:24" pos:end="17:25">-=</operator> <name pos:start="17:27" pos:end="17:31">end_i</name> <operator pos:start="17:33" pos:end="17:33">-</operator> <name pos:start="17:35" pos:end="17:41">start_i</name> <operator pos:start="17:43" pos:end="17:43">+</operator> <literal type="number" pos:start="17:45" pos:end="17:45">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="18:70"><if pos:start="18:5" pos:end="18:70">if<condition pos:start="18:7" pos:end="18:45">(<expr pos:start="18:8" pos:end="18:44"><name pos:start="18:8" pos:end="18:13">status</name> <operator pos:start="18:15" pos:end="18:15">&amp;</operator> <operator pos:start="18:17" pos:end="18:17">(</operator><name pos:start="18:18" pos:end="18:25">AC_ERROR</name><operator pos:start="18:26" pos:end="18:26">|</operator><name pos:start="18:27" pos:end="18:34">DC_ERROR</name><operator pos:start="18:35" pos:end="18:35">|</operator><name pos:start="18:36" pos:end="18:43">MV_ERROR</name><operator pos:start="18:44" pos:end="18:44">)</operator></expr>)</condition><block type="pseudo" pos:start="18:47" pos:end="18:70"><block_content pos:start="18:47" pos:end="18:70"> <expr_stmt pos:start="18:47" pos:end="18:70"><expr pos:start="18:47" pos:end="18:69"><name pos:start="18:47" pos:end="18:60"><name pos:start="18:47" pos:end="18:47">s</name><operator pos:start="18:48" pos:end="18:49">-&gt;</operator><name pos:start="18:50" pos:end="18:60">error_count</name></name><operator pos:start="18:61" pos:end="18:61">=</operator> <name pos:start="18:63" pos:end="18:69">INT_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="19:5" pos:end="34:74"><if pos:start="19:5" pos:end="21:5">if<condition pos:start="19:7" pos:end="19:21">(<expr pos:start="19:8" pos:end="19:20"><name pos:start="19:8" pos:end="19:11">mask</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <operator pos:start="19:16" pos:end="19:16">~</operator><literal type="number" pos:start="19:17" pos:end="19:20">0x7F</literal></expr>)</condition><block pos:start="19:22" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:91">
        <expr_stmt pos:start="20:9" pos:end="20:91"><expr pos:start="20:9" pos:end="20:90"><call pos:start="20:9" pos:end="20:90"><name pos:start="20:9" pos:end="20:14">memset</name><argument_list pos:start="20:15" pos:end="20:90">(<argument pos:start="20:16" pos:end="20:47"><expr pos:start="20:16" pos:end="20:47"><operator pos:start="20:16" pos:end="20:16">&amp;</operator><name pos:start="20:17" pos:end="20:47"><name pos:start="20:17" pos:end="20:17">s</name><operator pos:start="20:18" pos:end="20:19">-&gt;</operator><name pos:start="20:20" pos:end="20:37">error_status_table</name><index pos:start="20:38" pos:end="20:47">[<expr pos:start="20:39" pos:end="20:46"><name pos:start="20:39" pos:end="20:46">start_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="20:50" pos:end="20:50"><expr pos:start="20:50" pos:end="20:50"><literal type="number" pos:start="20:50" pos:end="20:50">0</literal></expr></argument>, <argument pos:start="20:53" pos:end="20:89"><expr pos:start="20:53" pos:end="20:89"><operator pos:start="20:53" pos:end="20:53">(</operator><name pos:start="20:54" pos:end="20:59">end_xy</name> <operator pos:start="20:61" pos:end="20:61">-</operator> <name pos:start="20:63" pos:end="20:70">start_xy</name><operator pos:start="20:71" pos:end="20:71">)</operator> <operator pos:start="20:73" pos:end="20:73">*</operator> <sizeof pos:start="20:75" pos:end="20:89">sizeof<argument_list pos:start="20:81" pos:end="20:89">(<argument pos:start="20:82" pos:end="20:88"><expr pos:start="20:82" pos:end="20:88"><name pos:start="20:82" pos:end="20:88">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="21:6" pos:end="34:74">else<block pos:start="21:10" pos:end="34:74">{<block_content pos:start="22:9" pos:end="34:74">
        <decl_stmt pos:start="22:9" pos:end="22:14"><decl pos:start="22:9" pos:end="22:13"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name></decl>;</decl_stmt>
        <for pos:start="23:9" pos:end="34:74">for<control pos:start="23:12" pos:end="23:38">(<init pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:13">i</name><operator pos:start="23:14" pos:end="23:14">=</operator><name pos:start="23:15" pos:end="23:22">start_xy</name></expr>;</init> <condition pos:start="23:25" pos:end="23:33"><expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:26">&lt;</operator><name pos:start="23:27" pos:end="23:32">end_xy</name></expr>;</condition> <incr pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><name pos:start="23:35" pos:end="23:35">i</name><operator pos:start="23:36" pos:end="23:37">++</operator></expr></incr>)</control><block pos:start="23:39" pos:end="34:74">{<block_content pos:start="24:13" pos:end="34:74">
            <expr_stmt pos:start="24:13" pos:end="24:47"><expr pos:start="24:13" pos:end="24:46"><name pos:start="24:13" pos:end="24:38"><name pos:start="24:13" pos:end="24:13">s</name><operator pos:start="24:14" pos:end="24:15">-&gt;</operator><name pos:start="24:16" pos:end="24:33">error_status_table</name><index pos:start="24:34" pos:end="24:38">[ <expr pos:start="24:36" pos:end="24:36"><name pos:start="24:36" pos:end="24:36">i</name></expr> ]</index></name> <operator pos:start="24:40" pos:end="24:41">&amp;=</operator> <name pos:start="24:43" pos:end="24:46">mask</name></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="34:74"><if pos:start="25:5" pos:end="26:32">if<condition pos:start="25:7" pos:end="25:26">(<expr pos:start="25:8" pos:end="25:25"><name pos:start="25:8" pos:end="25:12">end_i</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:25">mb_num</name></name></expr>)</condition><block type="pseudo" pos:start="26:9" pos:end="26:32"><block_content pos:start="26:9" pos:end="26:32">
        <expr_stmt pos:start="26:9" pos:end="26:32"><expr pos:start="26:9" pos:end="26:31"><name pos:start="26:9" pos:end="26:22"><name pos:start="26:9" pos:end="26:9">s</name><operator pos:start="26:10" pos:end="26:11">-&gt;</operator><name pos:start="26:12" pos:end="26:22">error_count</name></name><operator pos:start="26:23" pos:end="26:23">=</operator> <name pos:start="26:25" pos:end="26:31">INT_MAX</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="27:5" pos:end="34:74">else<block pos:start="27:9" pos:end="34:74">{<block_content pos:start="28:9" pos:end="34:74">
        <expr_stmt pos:start="28:9" pos:end="28:46"><expr pos:start="28:9" pos:end="28:45"><name pos:start="28:9" pos:end="28:37"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:29">error_status_table</name><index pos:start="28:30" pos:end="28:37">[<expr pos:start="28:31" pos:end="28:36"><name pos:start="28:31" pos:end="28:36">end_xy</name></expr>]</index></name> <operator pos:start="28:39" pos:end="28:40">&amp;=</operator> <name pos:start="28:42" pos:end="28:45">mask</name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:29">error_status_table</name><index pos:start="29:30" pos:end="29:37">[<expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36">end_xy</name></expr>]</index></name> <operator pos:start="29:39" pos:end="29:40">|=</operator> <name pos:start="29:42" pos:end="29:47">status</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:48"><expr pos:start="30:5" pos:end="30:47"><name pos:start="30:5" pos:end="30:35"><name pos:start="30:5" pos:end="30:5">s</name><operator pos:start="30:6" pos:end="30:7">-&gt;</operator><name pos:start="30:8" pos:end="30:25">error_status_table</name><index pos:start="30:26" pos:end="30:35">[<expr pos:start="30:27" pos:end="30:34"><name pos:start="30:27" pos:end="30:34">start_xy</name></expr>]</index></name> <operator pos:start="30:37" pos:end="30:38">|=</operator> <name pos:start="30:40" pos:end="30:47">VP_START</name></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="34:74"><if pos:start="31:5" pos:end="34:74">if<condition pos:start="31:7" pos:end="31:95">(<expr pos:start="31:8" pos:end="31:94"><name pos:start="31:8" pos:end="31:15">start_xy</name> <operator pos:start="31:17" pos:end="31:17">&gt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal> <operator pos:start="31:21" pos:end="31:22">&amp;&amp;</operator> <name pos:start="31:24" pos:end="31:45"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:31">avctx</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:45">thread_count</name></name> <operator pos:start="31:47" pos:end="31:48">&lt;=</operator> <literal type="number" pos:start="31:50" pos:end="31:50">1</literal> <operator pos:start="31:52" pos:end="31:53">&amp;&amp;</operator> <name pos:start="31:55" pos:end="31:72"><name pos:start="31:55" pos:end="31:55">s</name><operator pos:start="31:56" pos:end="31:57">-&gt;</operator><name pos:start="31:58" pos:end="31:62">avctx</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:72">skip_top</name></name><operator pos:start="31:73" pos:end="31:73">*</operator><name pos:start="31:74" pos:end="31:84"><name pos:start="31:74" pos:end="31:74">s</name><operator pos:start="31:75" pos:end="31:76">-&gt;</operator><name pos:start="31:77" pos:end="31:84">mb_width</name></name> <operator pos:start="31:86" pos:end="31:86">&lt;</operator> <name pos:start="31:88" pos:end="31:94">start_i</name></expr>)</condition><block pos:start="31:96" pos:end="34:74">{<block_content pos:start="32:9" pos:end="34:74">
        <decl_stmt pos:start="32:9" pos:end="32:78"><decl pos:start="32:9" pos:end="32:77"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:23">prev_status</name><init pos:start="32:24" pos:end="32:77">= <expr pos:start="32:26" pos:end="32:77"><name pos:start="32:26" pos:end="32:77"><name pos:start="32:26" pos:end="32:26">s</name><operator pos:start="32:27" pos:end="32:28">-&gt;</operator><name pos:start="32:29" pos:end="32:46">error_status_table</name><index pos:start="32:47" pos:end="32:77">[ <expr pos:start="32:49" pos:end="32:75"><name pos:start="32:49" pos:end="32:75"><name pos:start="32:49" pos:end="32:49">s</name><operator pos:start="32:50" pos:end="32:51">-&gt;</operator><name pos:start="32:52" pos:end="32:62">mb_index2xy</name><index pos:start="32:63" pos:end="32:75">[<expr pos:start="32:64" pos:end="32:74"><name pos:start="32:64" pos:end="32:70">start_i</name> <operator pos:start="32:72" pos:end="32:72">-</operator> <literal type="number" pos:start="32:74" pos:end="32:74">1</literal></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:19">prev_status</name> <operator pos:start="33:21" pos:end="33:22">&amp;=</operator> <operator pos:start="33:24" pos:end="33:24">~</operator> <name pos:start="33:26" pos:end="33:33">VP_START</name></expr>;</expr_stmt>
        <if_stmt pos:start="34:9" pos:end="34:74"><if pos:start="34:9" pos:end="34:74">if<condition pos:start="34:11" pos:end="34:49">(<expr pos:start="34:12" pos:end="34:48"><name pos:start="34:12" pos:end="34:22">prev_status</name> <operator pos:start="34:24" pos:end="34:25">!=</operator> <operator pos:start="34:27" pos:end="34:27">(</operator><name pos:start="34:28" pos:end="34:33">MV_END</name><operator pos:start="34:34" pos:end="34:34">|</operator><name pos:start="34:35" pos:end="34:40">DC_END</name><operator pos:start="34:41" pos:end="34:41">|</operator><name pos:start="34:42" pos:end="34:47">AC_END</name><operator pos:start="34:48" pos:end="34:48">)</operator></expr>)</condition><block type="pseudo" pos:start="34:51" pos:end="34:74"><block_content pos:start="34:51" pos:end="34:74"> <expr_stmt pos:start="34:51" pos:end="34:74"><expr pos:start="34:51" pos:end="34:73"><name pos:start="34:51" pos:end="34:64"><name pos:start="34:51" pos:end="34:51">s</name><operator pos:start="34:52" pos:end="34:53">-&gt;</operator><name pos:start="34:54" pos:end="34:64">error_count</name></name><operator pos:start="34:65" pos:end="34:65">=</operator> <name pos:start="34:67" pos:end="34:73">INT_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
