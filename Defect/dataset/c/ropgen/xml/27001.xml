<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27001.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">no_run_in</name> <parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:31">HWVoiceIn</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">hw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:19">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">NoVoiceIn</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">no</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:30">NoVoiceIn</name> <operator pos:start="5:32" pos:end="5:32">*</operator><operator pos:start="5:33" pos:end="5:33">)</operator> <name pos:start="5:35" pos:end="5:36">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">live</name> <init pos:start="7:14" pos:end="7:44">= <expr pos:start="7:16" pos:end="7:44"><call pos:start="7:16" pos:end="7:44"><name pos:start="7:16" pos:end="7:39">audio_pcm_hw_get_live_in</name> <argument_list pos:start="7:41" pos:end="7:44">(<argument pos:start="7:42" pos:end="7:43"><expr pos:start="7:42" pos:end="7:43"><name pos:start="7:42" pos:end="7:43">hw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">dead</name> <init pos:start="9:14" pos:end="9:33">= <expr pos:start="9:16" pos:end="9:33"><name pos:start="9:16" pos:end="9:26"><name pos:start="9:16" pos:end="9:17">hw</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:26">samples</name></name> <operator pos:start="9:28" pos:end="9:28">-</operator> <name pos:start="9:30" pos:end="9:33">live</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">samples</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="35:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">dead</name></expr>)</condition> <block pos:start="15:15" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:44">

        <decl_stmt pos:start="17:9" pos:end="17:48"><decl pos:start="17:9" pos:end="17:47"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:19">now</name> <init pos:start="17:21" pos:end="17:47">= <expr pos:start="17:23" pos:end="17:47"><call pos:start="17:23" pos:end="17:47"><name pos:start="17:23" pos:end="17:36">qemu_get_clock</name> <argument_list pos:start="17:38" pos:end="17:47">(<argument pos:start="17:39" pos:end="17:46"><expr pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:46">vm_clock</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:44"><decl pos:start="19:9" pos:end="19:43"><type pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15">int64_t</name></type> <name pos:start="19:17" pos:end="19:21">ticks</name> <init pos:start="19:23" pos:end="19:43">= <expr pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:27">now</name> <operator pos:start="19:29" pos:end="19:29">-</operator> <name pos:start="19:31" pos:end="19:43"><name pos:start="19:31" pos:end="19:32">no</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:43">old_ticks</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="23:78"><decl pos:start="21:9" pos:end="23:77"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">int64_t</name></type> <name pos:start="21:17" pos:end="21:21">bytes</name> <init pos:start="21:23" pos:end="23:77">=

            <expr pos:start="23:13" pos:end="23:77"><call pos:start="23:13" pos:end="23:77"><name pos:start="23:13" pos:end="23:20">muldiv64</name> <argument_list pos:start="23:22" pos:end="23:77">(<argument pos:start="23:23" pos:end="23:27"><expr pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:27">ticks</name></expr></argument>, <argument pos:start="23:30" pos:end="23:54"><expr pos:start="23:30" pos:end="23:54"><name pos:start="23:30" pos:end="23:54"><name pos:start="23:30" pos:end="23:31">hw</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:37">info</name><operator pos:start="23:38" pos:end="23:38">.</operator><name pos:start="23:39" pos:end="23:54">bytes_per_second</name></name></expr></argument>, <argument pos:start="23:57" pos:end="23:76"><expr pos:start="23:57" pos:end="23:76"><call pos:start="23:57" pos:end="23:76"><name pos:start="23:57" pos:end="23:73">get_ticks_per_sec</name> <argument_list pos:start="23:75" pos:end="23:76">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:10">no</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:21">old_ticks</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:27">now</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:13">bytes</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:42"><name pos:start="29:17" pos:end="29:25">audio_MIN</name> <argument_list pos:start="29:27" pos:end="29:42">(<argument pos:start="29:28" pos:end="29:32"><expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:32">bytes</name></expr></argument>, <argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:15">samples</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:23">bytes</name> <operator pos:start="31:25" pos:end="31:26">&gt;&gt;</operator> <name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:29">hw</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:35">info</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:41">shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:15">samples</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:43"><name pos:start="33:19" pos:end="33:27">audio_MIN</name> <argument_list pos:start="33:29" pos:end="33:43">(<argument pos:start="33:30" pos:end="33:36"><expr pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:36">samples</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">dead</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:19">return <expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:18">samples</name></expr>;</return>

</block_content>}</block></function>
</unit>
