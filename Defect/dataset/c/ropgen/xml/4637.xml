<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4637.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">eeprom_t</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:24">eeprom93xx_new</name><parameter_list pos:start="1:25" pos:end="1:59">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:51">uint16_t</name></type> <name pos:start="1:53" pos:end="1:58">nwords</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:18">

    <comment type="block" pos:start="5:5" pos:end="5:54">/* Add a new EEPROM (with 16, 64 or 256 words). */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">eeprom_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:20">eeprom</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:20">addrbits</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="39:5">switch <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">nwords</name></expr>)</condition> <block pos:start="13:21" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:25">

        <case pos:start="15:9" pos:end="15:16">case <expr pos:start="15:14" pos:end="15:15"><literal type="number" pos:start="15:14" pos:end="15:15">16</literal></expr>:</case>

        <case pos:start="17:9" pos:end="17:16">case <expr pos:start="17:14" pos:end="17:15"><literal type="number" pos:start="17:14" pos:end="17:15">64</literal></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:20">addrbits</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">6</literal></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="number" pos:start="23:14" pos:end="23:16">128</literal></expr>:</case>

        <case pos:start="25:9" pos:end="25:17">case <expr pos:start="25:14" pos:end="25:16"><literal type="number" pos:start="25:14" pos:end="25:16">256</literal></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:20">addrbits</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">8</literal></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <default pos:start="31:9" pos:end="31:16">default:</default>

            <expr_stmt pos:start="33:13" pos:end="33:70"><expr pos:start="33:13" pos:end="33:69"><call pos:start="33:13" pos:end="33:69"><name pos:start="33:13" pos:end="33:18">assert</name><argument_list pos:start="33:19" pos:end="33:69">(<argument pos:start="33:20" pos:end="33:68"><expr pos:start="33:20" pos:end="33:68"><operator pos:start="33:20" pos:end="33:20">!</operator><literal type="string" pos:start="33:21" pos:end="33:68">"Unsupported EEPROM size, fallback to 64 words!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:18">nwords</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:20">addrbits</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">6</literal></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="43:5" pos:end="43:65"><expr pos:start="43:5" pos:end="43:64"><name pos:start="43:5" pos:end="43:10">eeprom</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:22">eeprom_t</name> <operator pos:start="43:24" pos:end="43:24">*</operator><operator pos:start="43:25" pos:end="43:25">)</operator><call pos:start="43:26" pos:end="43:64"><name pos:start="43:26" pos:end="43:34">g_malloc0</name><argument_list pos:start="43:35" pos:end="43:64">(<argument pos:start="43:36" pos:end="43:63"><expr pos:start="43:36" pos:end="43:63"><sizeof pos:start="43:36" pos:end="43:50">sizeof<argument_list pos:start="43:42" pos:end="43:50">(<argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><operator pos:start="43:43" pos:end="43:43">*</operator><name pos:start="43:44" pos:end="43:49">eeprom</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:52" pos:end="43:52">+</operator> <name pos:start="43:54" pos:end="43:59">nwords</name> <operator pos:start="43:61" pos:end="43:61">*</operator> <literal type="number" pos:start="43:63" pos:end="43:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:10">eeprom</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:16">size</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:25">nwords</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:10">eeprom</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">addrbits</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:31">addrbits</name></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:51">/* Output DO is tristate, read results in 1. */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:10">eeprom</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:16">eedo</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><call pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:10">logout</name><argument_list pos:start="53:11" pos:end="53:58">(<argument pos:start="53:12" pos:end="53:41"><expr pos:start="53:12" pos:end="53:41"><literal type="string" pos:start="53:12" pos:end="53:41">"eeprom = 0x%p, nwords = %u\n"</literal></expr></argument>, <argument pos:start="53:44" pos:end="53:49"><expr pos:start="53:44" pos:end="53:49"><name pos:start="53:44" pos:end="53:49">eeprom</name></expr></argument>, <argument pos:start="53:52" pos:end="53:57"><expr pos:start="53:52" pos:end="53:57"><name pos:start="53:52" pos:end="53:57">nwords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:54"><expr pos:start="55:5" pos:end="55:53"><call pos:start="55:5" pos:end="55:53"><name pos:start="55:5" pos:end="55:20">vmstate_register</name><argument_list pos:start="55:21" pos:end="55:53">(<argument pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:24">dev</name></expr></argument>, <argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:44"><expr pos:start="55:30" pos:end="55:44"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:44">vmstate_eeprom</name></expr></argument>, <argument pos:start="55:47" pos:end="55:52"><expr pos:start="55:47" pos:end="55:52"><name pos:start="55:47" pos:end="55:52">eeprom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:18">return <expr pos:start="57:12" pos:end="57:17"><name pos:start="57:12" pos:end="57:17">eeprom</name></expr>;</return>

</block_content>}</block></function>
</unit>
