<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19158.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">adx_decode</name><parameter_list pos:start="1:22" pos:end="3:48">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">ADXContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">c</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:44">int16_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">out</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:61">offset</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:39"><decl pos:start="3:23" pos:end="3:39"><type pos:start="3:23" pos:end="3:39"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:39">in</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:47"><decl pos:start="3:42" pos:end="3:47"><type pos:start="3:42" pos:end="3:47"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:47">ch</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">ADXChannelState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">prev</name> <init pos:start="7:27" pos:end="7:40">= <expr pos:start="7:29" pos:end="7:40"><operator pos:start="7:29" pos:end="7:29">&amp;</operator><name pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:30">c</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">prev</name><index pos:start="7:37" pos:end="7:40">[<expr pos:start="7:38" pos:end="7:39"><name pos:start="7:38" pos:end="7:39">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">scale</name> <init pos:start="11:15" pos:end="11:27">= <expr pos:start="11:17" pos:end="11:27"><call pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:23">AV_RB16</name><argument_list pos:start="11:24" pos:end="11:27">(<argument pos:start="11:25" pos:end="11:26"><expr pos:start="11:25" pos:end="11:26"><name pos:start="11:25" pos:end="11:26">in</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">s0</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">s1</name></decl>, <decl pos:start="15:17" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:18">s2</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">d</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:40">/* check if this is an EOF packet */</comment>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:13">scale</name> <operator pos:start="21:15" pos:end="21:15">&amp;</operator> <literal type="number" pos:start="21:17" pos:end="21:22">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:17">init_get_bits</name><argument_list pos:start="27:18" pos:end="27:52">(<argument pos:start="27:19" pos:end="27:21"><expr pos:start="27:19" pos:end="27:21"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:21">gb</name></expr></argument>, <argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:25">in</name> <operator pos:start="27:27" pos:end="27:27">+</operator> <literal type="number" pos:start="27:29" pos:end="27:29">2</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:51"><expr pos:start="27:32" pos:end="27:51"><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:42">BLOCK_SIZE</name> <operator pos:start="27:44" pos:end="27:44">-</operator> <literal type="number" pos:start="27:46" pos:end="27:46">2</literal><operator pos:start="27:47" pos:end="27:47">)</operator> <operator pos:start="27:49" pos:end="27:49">*</operator> <literal type="number" pos:start="27:51" pos:end="27:51">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">out</name> <operator pos:start="29:9" pos:end="29:10">+=</operator> <name pos:start="29:12" pos:end="29:17">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:6">s1</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <name pos:start="31:10" pos:end="31:17"><name pos:start="31:10" pos:end="31:13">prev</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:17">s1</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">s2</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <name pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:13">prev</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:17">s2</name></name></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="47:5">for <control pos:start="35:9" pos:end="35:39">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:34"><expr pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:33">BLOCK_SAMPLES</name></expr>;</condition> <incr pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:36">i</name><operator pos:start="35:37" pos:end="35:38">++</operator></expr></incr>)</control> <block pos:start="35:41" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:20">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:9">d</name>  <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:30"><name pos:start="37:14" pos:end="37:22">get_sbits</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:26">gb</name></expr></argument>, <argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><literal type="number" pos:start="37:29" pos:end="37:29">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:93"><expr pos:start="39:9" pos:end="39:92"><name pos:start="39:9" pos:end="39:10">s0</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <operator pos:start="39:14" pos:end="39:14">(</operator><operator pos:start="39:15" pos:end="39:15">(</operator><name pos:start="39:16" pos:end="39:16">d</name> <operator pos:start="39:18" pos:end="39:19">&lt;&lt;</operator> <name pos:start="39:21" pos:end="39:30">COEFF_BITS</name><operator pos:start="39:31" pos:end="39:31">)</operator> <operator pos:start="39:33" pos:end="39:33">*</operator> <name pos:start="39:35" pos:end="39:39">scale</name> <operator pos:start="39:41" pos:end="39:41">+</operator> <name pos:start="39:43" pos:end="39:53"><name pos:start="39:43" pos:end="39:43">c</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:50">coeff</name><index pos:start="39:51" pos:end="39:53">[<expr pos:start="39:52" pos:end="39:52"><literal type="number" pos:start="39:52" pos:end="39:52">0</literal></expr>]</index></name> <operator pos:start="39:55" pos:end="39:55">*</operator> <name pos:start="39:57" pos:end="39:58">s1</name> <operator pos:start="39:60" pos:end="39:60">+</operator> <name pos:start="39:62" pos:end="39:72"><name pos:start="39:62" pos:end="39:62">c</name><operator pos:start="39:63" pos:end="39:64">-&gt;</operator><name pos:start="39:65" pos:end="39:69">coeff</name><index pos:start="39:70" pos:end="39:72">[<expr pos:start="39:71" pos:end="39:71"><literal type="number" pos:start="39:71" pos:end="39:71">1</literal></expr>]</index></name> <operator pos:start="39:74" pos:end="39:74">*</operator> <name pos:start="39:76" pos:end="39:77">s2</name><operator pos:start="39:78" pos:end="39:78">)</operator> <operator pos:start="39:80" pos:end="39:81">&gt;&gt;</operator> <name pos:start="39:83" pos:end="39:92">COEFF_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:10">s2</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:15">s1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:10">s1</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:30"><name pos:start="43:14" pos:end="43:26">av_clip_int16</name><argument_list pos:start="43:27" pos:end="43:30">(<argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><name pos:start="43:28" pos:end="43:29">s0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:12">out</name><operator pos:start="45:13" pos:end="45:14">++</operator> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:19">s1</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="49:5" pos:end="49:18"><expr pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:8">prev</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:12">s1</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:17">s1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:8">prev</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:12">s2</name></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:17">s2</name></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
