<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4241.c" pos:tabs="8"><function pos:start="1:1" pos:end="24:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">do_test_equality</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:33">bool</name></type> <name pos:start="1:35" pos:end="1:42">expected</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:49"><decl pos:start="1:45" pos:end="1:49"><type pos:start="1:45" pos:end="1:49"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:49">_</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:54"><decl pos:start="1:52" pos:end="1:54"><type pos:start="1:52" pos:end="1:54"><modifier pos:start="1:52" pos:end="1:54">...</modifier></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="24:1">{<block_content pos:start="3:5" pos:end="23:5">
    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">va_list</name></type> <name pos:start="3:13" pos:end="3:20">ap_count</name></decl>, <decl pos:start="3:23" pos:end="3:32"><type ref="prev" pos:start="3:5" pos:end="3:11"/><name pos:start="3:23" pos:end="3:32">ap_extract</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:19"><decl pos:start="4:5" pos:end="4:18"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:11">QObject</name> <modifier pos:start="4:13" pos:end="4:13">*</modifier><modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:18">args</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">arg_count</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>, <decl pos:start="6:12" pos:end="6:12"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:12">j</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:26"><expr pos:start="7:5" pos:end="7:25"><call pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:12">va_start</name><argument_list pos:start="7:13" pos:end="7:25">(<argument pos:start="7:14" pos:end="7:21"><expr pos:start="7:14" pos:end="7:21"><name pos:start="7:14" pos:end="7:21">ap_count</name></expr></argument>, <argument pos:start="7:24" pos:end="7:24"><expr pos:start="7:24" pos:end="7:24"><name pos:start="7:24" pos:end="7:24">_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">va_copy</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:22"><expr pos:start="8:13" pos:end="8:22"><name pos:start="8:13" pos:end="8:22">ap_extract</name></expr></argument>, <argument pos:start="8:25" pos:end="8:32"><expr pos:start="8:25" pos:end="8:32"><name pos:start="8:25" pos:end="8:32">ap_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="11:5">while <condition pos:start="9:11" pos:end="9:74">(<expr pos:start="9:12" pos:end="9:73"><call pos:start="9:12" pos:end="9:38"><name pos:start="9:12" pos:end="9:17">va_arg</name><argument_list pos:start="9:18" pos:end="9:38">(<argument pos:start="9:19" pos:end="9:26"><expr pos:start="9:19" pos:end="9:26"><name pos:start="9:19" pos:end="9:26">ap_count</name></expr></argument>, <argument pos:start="9:29" pos:end="9:37"><expr pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:35">QObject</name> <operator pos:start="9:37" pos:end="9:37">*</operator></expr></argument>)</argument_list></call> <operator pos:start="9:40" pos:end="9:41">!=</operator> <operator pos:start="9:43" pos:end="9:43">&amp;</operator><name pos:start="9:44" pos:end="9:73">test_equality_end_of_arguments</name></expr>)</condition> <block pos:start="9:76" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:20">
        <expr_stmt pos:start="10:9" pos:end="10:20"><expr pos:start="10:9" pos:end="10:19"><name pos:start="10:9" pos:end="10:17">arg_count</name><operator pos:start="10:18" pos:end="10:19">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="12:5" pos:end="12:21"><expr pos:start="12:5" pos:end="12:20"><call pos:start="12:5" pos:end="12:20"><name pos:start="12:5" pos:end="12:10">va_end</name><argument_list pos:start="12:11" pos:end="12:20">(<argument pos:start="12:12" pos:end="12:19"><expr pos:start="12:12" pos:end="12:19"><name pos:start="12:12" pos:end="12:19">ap_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:8">args</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:38"><name pos:start="13:12" pos:end="13:16">g_new</name><argument_list pos:start="13:17" pos:end="13:38">(<argument pos:start="13:18" pos:end="13:26"><expr pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:24">QObject</name> <operator pos:start="13:26" pos:end="13:26">*</operator></expr></argument>, <argument pos:start="13:29" pos:end="13:37"><expr pos:start="13:29" pos:end="13:37"><name pos:start="13:29" pos:end="13:37">arg_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="14:5" pos:end="16:5">for <control pos:start="14:9" pos:end="14:35">(<init pos:start="14:10" pos:end="14:15"><expr pos:start="14:10" pos:end="14:14"><name pos:start="14:10" pos:end="14:10">i</name> <operator pos:start="14:12" pos:end="14:12">=</operator> <literal type="number" pos:start="14:14" pos:end="14:14">0</literal></expr>;</init> <condition pos:start="14:17" pos:end="14:30"><expr pos:start="14:17" pos:end="14:29"><name pos:start="14:17" pos:end="14:17">i</name> <operator pos:start="14:19" pos:end="14:19">&lt;</operator> <name pos:start="14:21" pos:end="14:29">arg_count</name></expr>;</condition> <incr pos:start="14:32" pos:end="14:34"><expr pos:start="14:32" pos:end="14:34"><name pos:start="14:32" pos:end="14:32">i</name><operator pos:start="14:33" pos:end="14:34">++</operator></expr></incr>)</control> <block pos:start="14:37" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:48">
        <expr_stmt pos:start="15:9" pos:end="15:48"><expr pos:start="15:9" pos:end="15:47"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:12">args</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">i</name></expr>]</index></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="15:47"><name pos:start="15:19" pos:end="15:24">va_arg</name><argument_list pos:start="15:25" pos:end="15:47">(<argument pos:start="15:26" pos:end="15:35"><expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:35">ap_extract</name></expr></argument>, <argument pos:start="15:38" pos:end="15:46"><expr pos:start="15:38" pos:end="15:46"><name pos:start="15:38" pos:end="15:44">QObject</name> <operator pos:start="15:46" pos:end="15:46">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:10">va_end</name><argument_list pos:start="17:11" pos:end="17:22">(<argument pos:start="17:12" pos:end="17:21"><expr pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:21">ap_extract</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="23:5">for <control pos:start="18:9" pos:end="18:35">(<init pos:start="18:10" pos:end="18:15"><expr pos:start="18:10" pos:end="18:14"><name pos:start="18:10" pos:end="18:10">i</name> <operator pos:start="18:12" pos:end="18:12">=</operator> <literal type="number" pos:start="18:14" pos:end="18:14">0</literal></expr>;</init> <condition pos:start="18:17" pos:end="18:30"><expr pos:start="18:17" pos:end="18:29"><name pos:start="18:17" pos:end="18:17">i</name> <operator pos:start="18:19" pos:end="18:19">&lt;</operator> <name pos:start="18:21" pos:end="18:29">arg_count</name></expr>;</condition> <incr pos:start="18:32" pos:end="18:34"><expr pos:start="18:32" pos:end="18:34"><name pos:start="18:32" pos:end="18:32">i</name><operator pos:start="18:33" pos:end="18:34">++</operator></expr></incr>)</control> <block pos:start="18:37" pos:end="23:5">{<block_content pos:start="19:9" pos:end="22:9">
        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><call pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:16">g_assert</name><argument_list pos:start="19:17" pos:end="19:60">(<argument pos:start="19:18" pos:end="19:59"><expr pos:start="19:18" pos:end="19:59"><call pos:start="19:18" pos:end="19:51"><name pos:start="19:18" pos:end="19:33">qobject_is_equal</name><argument_list pos:start="19:34" pos:end="19:51">(<argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:38">args</name><index pos:start="19:39" pos:end="19:41">[<expr pos:start="19:40" pos:end="19:40"><name pos:start="19:40" pos:end="19:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:44" pos:end="19:50"><expr pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:47">args</name><index pos:start="19:48" pos:end="19:50">[<expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="19:53" pos:end="19:54">==</operator> <name pos:start="19:56" pos:end="19:59">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="20:9" pos:end="22:9">for <control pos:start="20:13" pos:end="20:43">(<init pos:start="20:14" pos:end="20:23"><expr pos:start="20:14" pos:end="20:22"><name pos:start="20:14" pos:end="20:14">j</name> <operator pos:start="20:16" pos:end="20:16">=</operator> <name pos:start="20:18" pos:end="20:18">i</name> <operator pos:start="20:20" pos:end="20:20">+</operator> <literal type="number" pos:start="20:22" pos:end="20:22">1</literal></expr>;</init> <condition pos:start="20:25" pos:end="20:38"><expr pos:start="20:25" pos:end="20:37"><name pos:start="20:25" pos:end="20:25">j</name> <operator pos:start="20:27" pos:end="20:27">&lt;</operator> <name pos:start="20:29" pos:end="20:37">arg_count</name></expr>;</condition> <incr pos:start="20:40" pos:end="20:42"><expr pos:start="20:40" pos:end="20:42"><name pos:start="20:40" pos:end="20:40">j</name><operator pos:start="20:41" pos:end="20:42">++</operator></expr></incr>)</control> <block pos:start="20:45" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:69">
            <expr_stmt pos:start="21:13" pos:end="21:69"><expr pos:start="21:13" pos:end="21:68"><call pos:start="21:13" pos:end="21:68"><name pos:start="21:13" pos:end="21:20">g_assert</name><argument_list pos:start="21:21" pos:end="21:68">(<argument pos:start="21:22" pos:end="21:67"><expr pos:start="21:22" pos:end="21:67"><call pos:start="21:22" pos:end="21:55"><name pos:start="21:22" pos:end="21:37">qobject_is_equal</name><argument_list pos:start="21:38" pos:end="21:55">(<argument pos:start="21:39" pos:end="21:45"><expr pos:start="21:39" pos:end="21:45"><name pos:start="21:39" pos:end="21:45"><name pos:start="21:39" pos:end="21:42">args</name><index pos:start="21:43" pos:end="21:45">[<expr pos:start="21:44" pos:end="21:44"><name pos:start="21:44" pos:end="21:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="21:48" pos:end="21:54"><expr pos:start="21:48" pos:end="21:54"><name pos:start="21:48" pos:end="21:54"><name pos:start="21:48" pos:end="21:51">args</name><index pos:start="21:52" pos:end="21:54">[<expr pos:start="21:53" pos:end="21:53"><name pos:start="21:53" pos:end="21:53">j</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:58">==</operator> <name pos:start="21:60" pos:end="21:67">expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
</block_content>}</block></function></unit>
