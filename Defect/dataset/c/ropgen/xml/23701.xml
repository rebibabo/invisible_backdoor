<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23701.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">slirp_init</name><parameter_list pos:start="1:16" pos:end="9:43">(<parameter pos:start="1:17" pos:end="1:30"><decl pos:start="1:17" pos:end="1:30"><type pos:start="1:17" pos:end="1:30"><name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:30">restricted</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:55"><decl pos:start="1:33" pos:end="1:55"><type pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:46">in_addr</name></name></type> <name pos:start="1:48" pos:end="1:55">vnetwork</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:39"><decl pos:start="3:17" pos:end="3:39"><type pos:start="3:17" pos:end="3:39"><name pos:start="3:17" pos:end="3:30"><name pos:start="3:17" pos:end="3:22">struct</name> <name pos:start="3:24" pos:end="3:30">in_addr</name></name></type> <name pos:start="3:32" pos:end="3:39">vnetmask</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:61"><decl pos:start="3:42" pos:end="3:61"><type pos:start="3:42" pos:end="3:61"><name pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:47">struct</name> <name pos:start="3:49" pos:end="3:55">in_addr</name></name></type> <name pos:start="3:57" pos:end="3:61">vhost</name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:37"><decl pos:start="5:17" pos:end="5:37"><type pos:start="5:17" pos:end="5:37"><specifier pos:start="5:17" pos:end="5:21">const</specifier> <name pos:start="5:23" pos:end="5:26">char</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:37">vhostname</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:60"><decl pos:start="5:40" pos:end="5:60"><type pos:start="5:40" pos:end="5:60"><specifier pos:start="5:40" pos:end="5:44">const</specifier> <name pos:start="5:46" pos:end="5:49">char</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:60">tftp_path</name></decl></parameter>,

                <parameter pos:start="7:17" pos:end="7:36"><decl pos:start="7:17" pos:end="7:36"><type pos:start="7:17" pos:end="7:36"><specifier pos:start="7:17" pos:end="7:21">const</specifier> <name pos:start="7:23" pos:end="7:26">char</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:36">bootfile</name></decl></parameter>, <parameter pos:start="7:39" pos:end="7:64"><decl pos:start="7:39" pos:end="7:64"><type pos:start="7:39" pos:end="7:64"><name pos:start="7:39" pos:end="7:52"><name pos:start="7:39" pos:end="7:44">struct</name> <name pos:start="7:46" pos:end="7:52">in_addr</name></name></type> <name pos:start="7:54" pos:end="7:64">vdhcp_start</name></decl></parameter>,

                <parameter pos:start="9:17" pos:end="9:42"><decl pos:start="9:17" pos:end="9:42"><type pos:start="9:17" pos:end="9:42"><name pos:start="9:17" pos:end="9:30"><name pos:start="9:17" pos:end="9:22">struct</name> <name pos:start="9:24" pos:end="9:30">in_addr</name></name></type> <name pos:start="9:32" pos:end="9:42">vnameserver</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="75:1">{<block_content pos:start="13:5" pos:end="73:77">

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">slirp_init_once</name><argument_list pos:start="13:20" pos:end="13:21">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:11">link_up</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:18">slirp_restrict</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:31">restricted</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><call pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">if_init</name><argument_list pos:start="23:12" pos:end="23:13">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><call pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">ip_init</name><argument_list pos:start="25:12" pos:end="25:13">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:50">/* Initialise mbufs *after* setting the MTU */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:13"><expr pos:start="31:5" pos:end="31:12"><call pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:10">m_init</name><argument_list pos:start="31:11" pos:end="31:12">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:17">vnetwork_addr</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:28">vnetwork</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:17">vnetwork_mask</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:28">vnetmask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:14">vhost_addr</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:22">vhost</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">vhostname</name></expr>)</condition> <block pos:start="41:20" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:67">

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:15">pstrcpy</name><argument_list pos:start="43:16" pos:end="43:66">(<argument pos:start="43:17" pos:end="43:30"><expr pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:30">slirp_hostname</name></expr></argument>, <argument pos:start="43:33" pos:end="43:54"><expr pos:start="43:33" pos:end="43:54"><sizeof pos:start="43:33" pos:end="43:54">sizeof<argument_list pos:start="43:39" pos:end="43:54">(<argument pos:start="43:40" pos:end="43:53"><expr pos:start="43:40" pos:end="43:53"><name pos:start="43:40" pos:end="43:53">slirp_hostname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:57" pos:end="43:65"><expr pos:start="43:57" pos:end="43:65"><name pos:start="43:57" pos:end="43:65">vhostname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><call pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:13">qemu_free</name><argument_list pos:start="47:14" pos:end="47:26">(<argument pos:start="47:15" pos:end="47:25"><expr pos:start="47:15" pos:end="47:25"><name pos:start="47:15" pos:end="47:25">tftp_prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:15">tftp_prefix</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:22">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:17">tftp_path</name></expr>)</condition> <block pos:start="51:20" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:45">

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:19">tftp_prefix</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:44"><name pos:start="53:23" pos:end="53:33">qemu_strdup</name><argument_list pos:start="53:34" pos:end="53:44">(<argument pos:start="53:35" pos:end="53:43"><expr pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:43">tftp_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:13">qemu_free</name><argument_list pos:start="57:14" pos:end="57:29">(<argument pos:start="57:15" pos:end="57:28"><expr pos:start="57:15" pos:end="57:28"><name pos:start="57:15" pos:end="57:28">bootp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:18">bootp_filename</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:17">(<expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">bootfile</name></expr>)</condition> <block pos:start="61:19" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:47">

        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:22">bootp_filename</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:46"><name pos:start="63:26" pos:end="63:36">qemu_strdup</name><argument_list pos:start="63:37" pos:end="63:46">(<argument pos:start="63:38" pos:end="63:45"><expr pos:start="63:38" pos:end="63:45"><name pos:start="63:38" pos:end="63:45">bootfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:19">vdhcp_startaddr</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:33">vdhcp_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:20">vnameserver_addr</name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:34">vnameserver</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:77"><expr pos:start="73:5" pos:end="73:76"><call pos:start="73:5" pos:end="73:76"><name pos:start="73:5" pos:end="73:19">register_savevm</name><argument_list pos:start="73:20" pos:end="73:76">(<argument pos:start="73:21" pos:end="73:27"><expr pos:start="73:21" pos:end="73:27"><literal type="string" pos:start="73:21" pos:end="73:27">"slirp"</literal></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr></argument>, <argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><literal type="number" pos:start="73:33" pos:end="73:33">1</literal></expr></argument>, <argument pos:start="73:36" pos:end="73:51"><expr pos:start="73:36" pos:end="73:51"><name pos:start="73:36" pos:end="73:51">slirp_state_save</name></expr></argument>, <argument pos:start="73:54" pos:end="73:69"><expr pos:start="73:54" pos:end="73:69"><name pos:start="73:54" pos:end="73:69">slirp_state_load</name></expr></argument>, <argument pos:start="73:72" pos:end="73:75"><expr pos:start="73:72" pos:end="73:75"><name pos:start="73:72" pos:end="73:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
