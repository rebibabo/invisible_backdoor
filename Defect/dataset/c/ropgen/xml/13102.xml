<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13102.c" pos:tabs="8"><function pos:start="1:1" pos:end="319:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:10">RENAME</name></type>(<name pos:start="1:12" pos:end="1:24">swri_resample</name>)<parameter_list pos:start="1:26" pos:end="1:134">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">ResampleContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:51">DELEM</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dst</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:69">DELEM</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">src</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:89"><decl pos:start="1:77" pos:end="1:89"><type pos:start="1:77" pos:end="1:89"><name pos:start="1:77" pos:end="1:79">int</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:89">consumed</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:103"><decl pos:start="1:92" pos:end="1:103"><type pos:start="1:92" pos:end="1:103"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:103">src_size</name></decl></parameter>, <parameter pos:start="1:106" pos:end="1:117"><decl pos:start="1:106" pos:end="1:117"><type pos:start="1:106" pos:end="1:117"><name pos:start="1:106" pos:end="1:108">int</name></type> <name pos:start="1:110" pos:end="1:117">dst_size</name></decl></parameter>, <parameter pos:start="1:120" pos:end="1:133"><decl pos:start="1:120" pos:end="1:133"><type pos:start="1:120" pos:end="1:133"><name pos:start="1:120" pos:end="1:122">int</name></type> <name pos:start="1:124" pos:end="1:133">update_ctx</name></decl></parameter>)</parameter_list><block pos:start="1:135" pos:end="319:1">{<block_content pos:start="3:5" pos:end="317:21">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:17">dst_index</name></decl>, <decl pos:start="3:20" pos:end="3:20"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:20" pos:end="3:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name><init pos:start="5:14" pos:end="5:23">= <expr pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:16">c</name><operator pos:start="5:17" pos:end="5:18">-&gt;</operator><name pos:start="5:19" pos:end="5:23">index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">frac</name><init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:15">c</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:21">frac</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">dst_incr_frac</name><init pos:start="9:22" pos:end="9:48">= <expr pos:start="9:24" pos:end="9:48"><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:24">c</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:34">dst_incr</name></name> <operator pos:start="9:36" pos:end="9:36">%</operator> <name pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:38">c</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">dst_incr</name><init pos:start="11:17" pos:end="11:48">=      <expr pos:start="11:24" pos:end="11:48"><name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:24">c</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">dst_incr</name></name> <operator pos:start="11:36" pos:end="11:36">/</operator> <name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:38">c</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:29">compensation_distance</name><init pos:start="13:30" pos:end="13:55">= <expr pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:32">c</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:55">compensation_distance</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:14">av_assert1</name><argument_list pos:start="17:15" pos:end="17:47">(<argument pos:start="17:16" pos:end="17:46"><expr pos:start="17:16" pos:end="17:46"><name pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:16">c</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:30">filter_shift</name></name> <operator pos:start="17:32" pos:end="17:33">==</operator> <name pos:start="17:35" pos:end="17:46">FILTER_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><call pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:14">av_assert1</name><argument_list pos:start="19:15" pos:end="19:46">(<argument pos:start="19:16" pos:end="19:45"><expr pos:start="19:16" pos:end="19:45"><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:16">c</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:28">felem_size</name></name> <operator pos:start="19:30" pos:end="19:31">==</operator> <sizeof pos:start="19:33" pos:end="19:45">sizeof<argument_list pos:start="19:39" pos:end="19:45">(<argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:44">FELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="299:5"><if pos:start="23:5" pos:end="57:5">if<condition pos:start="23:7" pos:end="23:80">(<expr pos:start="23:8" pos:end="23:79"><name pos:start="23:8" pos:end="23:28">compensation_distance</name> <operator pos:start="23:30" pos:end="23:31">==</operator> <literal type="number" pos:start="23:33" pos:end="23:33">0</literal> <operator pos:start="23:35" pos:end="23:36">&amp;&amp;</operator> <name pos:start="23:38" pos:end="23:53"><name pos:start="23:38" pos:end="23:38">c</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:53">filter_length</name></name> <operator pos:start="23:55" pos:end="23:56">==</operator> <literal type="number" pos:start="23:58" pos:end="23:58">1</literal> <operator pos:start="23:60" pos:end="23:61">&amp;&amp;</operator> <name pos:start="23:63" pos:end="23:76"><name pos:start="23:63" pos:end="23:63">c</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:76">phase_shift</name></name><operator pos:start="23:77" pos:end="23:78">==</operator><literal type="number" pos:start="23:79" pos:end="23:79">0</literal></expr>)</condition><block pos:start="23:81" pos:end="57:5">{<block_content pos:start="25:9" pos:end="55:18">

        <decl_stmt pos:start="25:9" pos:end="25:72"><decl pos:start="25:9" pos:end="25:71"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:22">index2</name><init pos:start="25:23" pos:end="25:71">= <expr pos:start="25:25" pos:end="25:71"><operator pos:start="25:25" pos:end="25:25">(</operator><literal type="number" pos:start="25:26" pos:end="25:28">1LL</literal><operator pos:start="25:29" pos:end="25:30">&lt;&lt;</operator><literal type="number" pos:start="25:31" pos:end="25:32">32</literal><operator pos:start="25:33" pos:end="25:33">)</operator><operator pos:start="25:34" pos:end="25:34">*</operator><name pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:35">c</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:41">frac</name></name><operator pos:start="25:42" pos:end="25:42">/</operator><name pos:start="25:43" pos:end="25:53"><name pos:start="25:43" pos:end="25:43">c</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:53">src_incr</name></name> <operator pos:start="25:55" pos:end="25:55">+</operator> <operator pos:start="25:57" pos:end="25:57">(</operator><literal type="number" pos:start="25:58" pos:end="25:60">1LL</literal><operator pos:start="25:61" pos:end="25:62">&lt;&lt;</operator><literal type="number" pos:start="25:63" pos:end="25:64">32</literal><operator pos:start="25:65" pos:end="25:65">)</operator><operator pos:start="25:66" pos:end="25:66">*</operator><name pos:start="25:67" pos:end="25:71">index</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:60"><decl pos:start="27:9" pos:end="27:59"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">int64_t</name></type> <name pos:start="27:17" pos:end="27:20">incr</name><init pos:start="27:21" pos:end="27:59">= <expr pos:start="27:23" pos:end="27:59"><operator pos:start="27:23" pos:end="27:23">(</operator><literal type="number" pos:start="27:24" pos:end="27:26">1LL</literal><operator pos:start="27:27" pos:end="27:28">&lt;&lt;</operator><literal type="number" pos:start="27:29" pos:end="27:30">32</literal><operator pos:start="27:31" pos:end="27:31">)</operator> <operator pos:start="27:33" pos:end="27:33">*</operator> <name pos:start="27:35" pos:end="27:45"><name pos:start="27:35" pos:end="27:35">c</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:45">dst_incr</name></name> <operator pos:start="27:47" pos:end="27:47">/</operator> <name pos:start="27:49" pos:end="27:59"><name pos:start="27:49" pos:end="27:49">c</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:59">src_incr</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:96"><decl pos:start="29:9" pos:end="29:95"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:20">new_size</name> <init pos:start="29:22" pos:end="29:95">= <expr pos:start="29:24" pos:end="29:95"><operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:32">src_size</name> <operator pos:start="29:34" pos:end="29:34">*</operator> <operator pos:start="29:36" pos:end="29:36">(</operator><name pos:start="29:37" pos:end="29:43">int64_t</name><operator pos:start="29:44" pos:end="29:44">)</operator><name pos:start="29:45" pos:end="29:55"><name pos:start="29:45" pos:end="29:45">c</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:55">src_incr</name></name> <operator pos:start="29:57" pos:end="29:57">-</operator> <name pos:start="29:59" pos:end="29:62">frac</name> <operator pos:start="29:64" pos:end="29:64">+</operator> <name pos:start="29:66" pos:end="29:76"><name pos:start="29:66" pos:end="29:66">c</name><operator pos:start="29:67" pos:end="29:68">-&gt;</operator><name pos:start="29:69" pos:end="29:76">dst_incr</name></name> <operator pos:start="29:78" pos:end="29:78">-</operator> <literal type="number" pos:start="29:80" pos:end="29:80">1</literal><operator pos:start="29:81" pos:end="29:81">)</operator> <operator pos:start="29:83" pos:end="29:83">/</operator> <name pos:start="29:85" pos:end="29:95"><name pos:start="29:85" pos:end="29:85">c</name><operator pos:start="29:86" pos:end="29:87">-&gt;</operator><name pos:start="29:88" pos:end="29:95">dst_incr</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:16">dst_size</name><operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:43"><name pos:start="33:19" pos:end="33:23">FFMIN</name><argument_list pos:start="33:24" pos:end="33:43">(<argument pos:start="33:25" pos:end="33:32"><expr pos:start="33:25" pos:end="33:32"><name pos:start="33:25" pos:end="33:32">dst_size</name></expr></argument>, <argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="37:9" pos:end="43:9">for<control pos:start="37:12" pos:end="37:59">(<init pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:21">dst_index</name><operator pos:start="37:22" pos:end="37:22">=</operator><literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>;</init> <condition pos:start="37:26" pos:end="37:46"><expr pos:start="37:26" pos:end="37:45"><name pos:start="37:26" pos:end="37:34">dst_index</name> <operator pos:start="37:36" pos:end="37:36">&lt;</operator> <name pos:start="37:38" pos:end="37:45">dst_size</name></expr>;</condition> <incr pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:56">dst_index</name><operator pos:start="37:57" pos:end="37:58">++</operator></expr></incr>)</control><block pos:start="37:60" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:27">

            <expr_stmt pos:start="39:13" pos:end="39:45"><expr pos:start="39:13" pos:end="39:44"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:15">dst</name><index pos:start="39:16" pos:end="39:26">[<expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:25">dst_index</name></expr>]</index></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:44"><name pos:start="39:30" pos:end="39:32">src</name><index pos:start="39:33" pos:end="39:44">[<expr pos:start="39:34" pos:end="39:43"><name pos:start="39:34" pos:end="39:39">index2</name><operator pos:start="39:40" pos:end="39:41">&gt;&gt;</operator><literal type="number" pos:start="39:42" pos:end="39:43">32</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:27"><expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:18">index2</name> <operator pos:start="41:20" pos:end="41:21">+=</operator> <name pos:start="41:23" pos:end="41:26">incr</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:13">index</name> <operator pos:start="45:15" pos:end="45:16">+=</operator> <name pos:start="45:18" pos:end="45:26">dst_index</name> <operator pos:start="45:28" pos:end="45:28">*</operator> <name pos:start="45:30" pos:end="45:37">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:75"><expr pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:13">index</name> <operator pos:start="47:15" pos:end="47:16">+=</operator> <operator pos:start="47:18" pos:end="47:18">(</operator><name pos:start="47:19" pos:end="47:22">frac</name> <operator pos:start="47:24" pos:end="47:24">+</operator> <name pos:start="47:26" pos:end="47:34">dst_index</name> <operator pos:start="47:36" pos:end="47:36">*</operator> <operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:45">int64_t</name><operator pos:start="47:46" pos:end="47:46">)</operator><name pos:start="47:47" pos:end="47:59">dst_incr_frac</name><operator pos:start="47:60" pos:end="47:60">)</operator> <operator pos:start="47:62" pos:end="47:62">/</operator> <name pos:start="47:64" pos:end="47:74"><name pos:start="47:64" pos:end="47:64">c</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:74">src_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:75"><expr pos:start="49:9" pos:end="49:74"><name pos:start="49:9" pos:end="49:12">frac</name>   <operator pos:start="49:16" pos:end="49:16">=</operator> <operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:22">frac</name> <operator pos:start="49:24" pos:end="49:24">+</operator> <name pos:start="49:26" pos:end="49:34">dst_index</name> <operator pos:start="49:36" pos:end="49:36">*</operator> <operator pos:start="49:38" pos:end="49:38">(</operator><name pos:start="49:39" pos:end="49:45">int64_t</name><operator pos:start="49:46" pos:end="49:46">)</operator><name pos:start="49:47" pos:end="49:59">dst_incr_frac</name><operator pos:start="49:60" pos:end="49:60">)</operator> <operator pos:start="49:62" pos:end="49:62">%</operator> <name pos:start="49:64" pos:end="49:74"><name pos:start="49:64" pos:end="49:64">c</name><operator pos:start="49:65" pos:end="49:66">-&gt;</operator><name pos:start="49:67" pos:end="49:74">src_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:18">av_assert2</name><argument_list pos:start="51:19" pos:end="51:30">(<argument pos:start="51:20" pos:end="51:29"><expr pos:start="51:20" pos:end="51:29"><name pos:start="51:20" pos:end="51:24">index</name> <operator pos:start="51:26" pos:end="51:27">&gt;=</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:17">consumed</name><operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:24">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:18"><expr pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:13">index</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <literal type="number" pos:start="55:17" pos:end="55:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="181:5">else if <condition pos:start="57:15" pos:end="57:56">(<expr pos:start="57:16" pos:end="57:55"><name pos:start="57:16" pos:end="57:36">compensation_distance</name> <operator pos:start="57:38" pos:end="57:39">==</operator> <literal type="number" pos:start="57:41" pos:end="57:41">0</literal> <operator pos:start="57:43" pos:end="57:44">&amp;&amp;</operator> <name pos:start="57:46" pos:end="57:50">index</name> <operator pos:start="57:52" pos:end="57:53">&gt;=</operator> <literal type="number" pos:start="57:55" pos:end="57:55">0</literal></expr>)</condition> <block pos:start="57:58" pos:end="181:5">{<block_content pos:start="59:9" pos:end="179:33">

        <decl_stmt pos:start="59:9" pos:end="59:80"><decl pos:start="59:9" pos:end="59:79"><type pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:15">int64_t</name></type> <name pos:start="59:17" pos:end="59:25">end_index</name> <init pos:start="59:27" pos:end="59:79">= <expr pos:start="59:29" pos:end="59:79"><operator pos:start="59:29" pos:end="59:29">(</operator><literal type="number" pos:start="59:30" pos:end="59:32">1</literal> <operator pos:start="59:32" pos:end="59:32">+</operator> <name pos:start="59:34" pos:end="59:41">src_size</name> <operator pos:start="59:43" pos:end="59:43">-</operator> <name pos:start="59:45" pos:end="59:60"><name pos:start="59:45" pos:end="59:45">c</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:60">filter_length</name></name><operator pos:start="59:61" pos:end="59:61">)</operator> <operator pos:start="59:63" pos:end="59:64">&lt;&lt;</operator> <name pos:start="59:66" pos:end="59:79"><name pos:start="59:66" pos:end="59:66">c</name><operator pos:start="59:67" pos:end="59:68">-&gt;</operator><name pos:start="59:69" pos:end="59:79">phase_shift</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:73"><decl pos:start="61:9" pos:end="61:72"><type pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:15">int64_t</name></type> <name pos:start="61:17" pos:end="61:26">delta_frac</name> <init pos:start="61:28" pos:end="61:72">= <expr pos:start="61:30" pos:end="61:72"><operator pos:start="61:30" pos:end="61:30">(</operator><name pos:start="61:31" pos:end="61:39">end_index</name> <operator pos:start="61:41" pos:end="61:41">-</operator> <name pos:start="61:43" pos:end="61:47">index</name><operator pos:start="61:48" pos:end="61:48">)</operator> <operator pos:start="61:50" pos:end="61:50">*</operator> <name pos:start="61:52" pos:end="61:62"><name pos:start="61:52" pos:end="61:52">c</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:62">src_incr</name></name> <operator pos:start="61:64" pos:end="61:64">-</operator> <name pos:start="61:66" pos:end="61:72"><name pos:start="61:66" pos:end="61:66">c</name><operator pos:start="61:67" pos:end="61:68">-&gt;</operator><name pos:start="61:69" pos:end="61:72">frac</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:67"><decl pos:start="63:9" pos:end="63:66"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:19">delta_n</name> <init pos:start="63:21" pos:end="63:66">= <expr pos:start="63:23" pos:end="63:66"><operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:33">delta_frac</name> <operator pos:start="63:35" pos:end="63:35">+</operator> <name pos:start="63:37" pos:end="63:47"><name pos:start="63:37" pos:end="63:37">c</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:47">dst_incr</name></name> <operator pos:start="63:49" pos:end="63:49">-</operator> <literal type="number" pos:start="63:51" pos:end="63:51">1</literal><operator pos:start="63:52" pos:end="63:52">)</operator> <operator pos:start="63:54" pos:end="63:54">/</operator> <name pos:start="63:56" pos:end="63:66"><name pos:start="63:56" pos:end="63:56">c</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:66">dst_incr</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:41"><decl pos:start="65:9" pos:end="65:40"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:13">n</name> <init pos:start="65:15" pos:end="65:40">= <expr pos:start="65:17" pos:end="65:40"><call pos:start="65:17" pos:end="65:40"><name pos:start="65:17" pos:end="65:21">FFMIN</name><argument_list pos:start="65:22" pos:end="65:40">(<argument pos:start="65:23" pos:end="65:30"><expr pos:start="65:23" pos:end="65:30"><name pos:start="65:23" pos:end="65:30">dst_size</name></expr></argument>, <argument pos:start="65:33" pos:end="65:39"><expr pos:start="65:33" pos:end="65:39"><name pos:start="65:33" pos:end="65:39">delta_n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:25"><decl pos:start="67:9" pos:end="67:24"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:24">sample_index</name></decl>;</decl_stmt>



        <if_stmt pos:start="71:9" pos:end="175:9"><if pos:start="71:9" pos:end="121:9">if <condition pos:start="71:12" pos:end="71:23">(<expr pos:start="71:13" pos:end="71:22"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:22"><name pos:start="71:14" pos:end="71:14">c</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:22">linear</name></name></expr>)</condition> <block pos:start="71:25" pos:end="121:9">{<block_content pos:start="73:13" pos:end="119:13">

            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:24">sample_index</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:32">index</name> <operator pos:start="73:34" pos:end="73:35">&gt;&gt;</operator> <name pos:start="73:37" pos:end="73:50"><name pos:start="73:37" pos:end="73:37">c</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:50">phase_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:35"><expr pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:17">index</name> <operator pos:start="75:19" pos:end="75:20">&amp;=</operator> <name pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:22">c</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:34">phase_mask</name></name></expr>;</expr_stmt>

            <for pos:start="77:13" pos:end="119:13">for <control pos:start="77:17" pos:end="77:59">(<init pos:start="77:18" pos:end="77:31"><expr pos:start="77:18" pos:end="77:30"><name pos:start="77:18" pos:end="77:26">dst_index</name> <operator pos:start="77:28" pos:end="77:28">=</operator> <literal type="number" pos:start="77:30" pos:end="77:30">0</literal></expr>;</init> <condition pos:start="77:33" pos:end="77:46"><expr pos:start="77:33" pos:end="77:45"><name pos:start="77:33" pos:end="77:41">dst_index</name> <operator pos:start="77:43" pos:end="77:43">&lt;</operator> <name pos:start="77:45" pos:end="77:45">n</name></expr>;</condition> <incr pos:start="77:48" pos:end="77:58"><expr pos:start="77:48" pos:end="77:58"><name pos:start="77:48" pos:end="77:56">dst_index</name><operator pos:start="77:57" pos:end="77:58">++</operator></expr></incr>)</control> <block pos:start="77:61" pos:end="119:13">{<block_content pos:start="79:17" pos:end="117:39">

                <decl_stmt pos:start="79:17" pos:end="84:0"><decl pos:start="79:17" pos:end="79:84"><type pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:21">FELEM</name> <modifier pos:start="79:23" pos:end="79:23">*</modifier></type><name pos:start="79:24" pos:end="79:29">filter</name> <init pos:start="79:31" pos:end="79:84">= <expr pos:start="79:33" pos:end="79:84"><operator pos:start="79:33" pos:end="79:33">(</operator><operator pos:start="79:34" pos:end="79:34">(</operator><name pos:start="79:35" pos:end="79:39">FELEM</name> <operator pos:start="79:41" pos:end="79:41">*</operator><operator pos:start="79:42" pos:end="79:42">)</operator> <name pos:start="79:44" pos:end="79:57"><name pos:start="79:44" pos:end="79:44">c</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:57">filter_bank</name></name><operator pos:start="79:58" pos:end="79:58">)</operator> <operator pos:start="79:60" pos:end="79:60">+</operator> <name pos:start="79:62" pos:end="79:76"><name pos:start="79:62" pos:end="79:62">c</name><operator pos:start="79:63" pos:end="79:64">-&gt;</operator><name pos:start="79:65" pos:end="79:76">filter_alloc</name></name> <operator pos:start="79:78" pos:end="79:78">*</operator> <name pos:start="79:80" pos:end="79:84">index</name></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="83:1" pos:end="83:18">#<cpp:directive pos:start="83:2" pos:end="83:6">ifdef</cpp:directive> <name pos:start="83:8" pos:end="83:18">COMMON_CORE</name></cpp:ifdef>

                <decl_stmt pos:start="85:17" pos:end="89:29"><decl pos:start="85:17" pos:end="89:28"><type pos:start="85:17" pos:end="89:22"><name pos:start="85:17" pos:end="88:0">COMMON_CORE</name>

<cpp:else pos:start="87:1" pos:end="87:5">#<cpp:directive pos:start="87:2" pos:end="87:5">else</cpp:directive></cpp:else>

                <name pos:start="89:17" pos:end="89:22">FELEM2</name></type> <name pos:start="89:24" pos:end="89:26">val</name><init pos:start="89:27" pos:end="89:28">=<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="91:17" pos:end="95:17">for <control pos:start="91:21" pos:end="91:54">(<init pos:start="91:22" pos:end="91:27"><expr pos:start="91:22" pos:end="91:26"><name pos:start="91:22" pos:end="91:22">i</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr>;</init> <condition pos:start="91:29" pos:end="91:49"><expr pos:start="91:29" pos:end="91:48"><name pos:start="91:29" pos:end="91:29">i</name> <operator pos:start="91:31" pos:end="91:31">&lt;</operator> <name pos:start="91:33" pos:end="91:48"><name pos:start="91:33" pos:end="91:33">c</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:48">filter_length</name></name></expr>;</condition> <incr pos:start="91:51" pos:end="91:53"><expr pos:start="91:51" pos:end="91:53"><name pos:start="91:51" pos:end="91:51">i</name><operator pos:start="91:52" pos:end="91:53">++</operator></expr></incr>)</control> <block pos:start="91:56" pos:end="95:17">{<block_content pos:start="93:21" pos:end="93:69">

                    <expr_stmt pos:start="93:21" pos:end="93:69"><expr pos:start="93:21" pos:end="93:68"><name pos:start="93:21" pos:end="93:23">val</name> <operator pos:start="93:25" pos:end="93:26">+=</operator> <name pos:start="93:28" pos:end="93:48"><name pos:start="93:28" pos:end="93:30">src</name><index pos:start="93:31" pos:end="93:48">[<expr pos:start="93:32" pos:end="93:47"><name pos:start="93:32" pos:end="93:43">sample_index</name> <operator pos:start="93:45" pos:end="93:45">+</operator> <name pos:start="93:47" pos:end="93:47">i</name></expr>]</index></name> <operator pos:start="93:50" pos:end="93:50">*</operator> <operator pos:start="93:52" pos:end="93:52">(</operator><name pos:start="93:53" pos:end="93:58">FELEM2</name><operator pos:start="93:59" pos:end="93:59">)</operator><name pos:start="93:60" pos:end="93:68"><name pos:start="93:60" pos:end="93:65">filter</name><index pos:start="93:66" pos:end="93:68">[<expr pos:start="93:67" pos:end="93:67"><name pos:start="93:67" pos:end="93:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="97:17" pos:end="100:0"><expr pos:start="97:17" pos:end="97:40"><call pos:start="97:17" pos:end="97:40"><name pos:start="97:17" pos:end="97:19">OUT</name><argument_list pos:start="97:20" pos:end="97:40">(<argument pos:start="97:21" pos:end="97:34"><expr pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:23">dst</name><index pos:start="97:24" pos:end="97:34">[<expr pos:start="97:25" pos:end="97:33"><name pos:start="97:25" pos:end="97:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="97:37" pos:end="97:39"><expr pos:start="97:37" pos:end="97:39"><name pos:start="97:37" pos:end="97:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>



                <expr_stmt pos:start="103:17" pos:end="103:38"><expr pos:start="103:17" pos:end="103:37"><name pos:start="103:17" pos:end="103:20">frac</name> <operator pos:start="103:22" pos:end="103:23">+=</operator> <name pos:start="103:25" pos:end="103:37">dst_incr_frac</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:34"><expr pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:21">index</name> <operator pos:start="105:23" pos:end="105:24">+=</operator> <name pos:start="105:26" pos:end="105:33">dst_incr</name></expr>;</expr_stmt>

                <if_stmt pos:start="107:17" pos:end="113:17"><if pos:start="107:17" pos:end="113:17">if <condition pos:start="107:20" pos:end="107:40">(<expr pos:start="107:21" pos:end="107:39"><name pos:start="107:21" pos:end="107:24">frac</name> <operator pos:start="107:26" pos:end="107:27">&gt;=</operator> <name pos:start="107:29" pos:end="107:39"><name pos:start="107:29" pos:end="107:29">c</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:39">src_incr</name></name></expr>)</condition> <block pos:start="107:42" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:28">

                    <expr_stmt pos:start="109:21" pos:end="109:40"><expr pos:start="109:21" pos:end="109:39"><name pos:start="109:21" pos:end="109:24">frac</name> <operator pos:start="109:26" pos:end="109:27">-=</operator> <name pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:29">c</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:39">src_incr</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:28"><expr pos:start="111:21" pos:end="111:27"><name pos:start="111:21" pos:end="111:25">index</name><operator pos:start="111:26" pos:end="111:27">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:56"><expr pos:start="115:17" pos:end="115:55"><name pos:start="115:17" pos:end="115:28">sample_index</name> <operator pos:start="115:30" pos:end="115:31">+=</operator> <name pos:start="115:33" pos:end="115:37">index</name> <operator pos:start="115:39" pos:end="115:40">&gt;&gt;</operator> <name pos:start="115:42" pos:end="115:55"><name pos:start="115:42" pos:end="115:42">c</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:55">phase_shift</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:39"><expr pos:start="117:17" pos:end="117:38"><name pos:start="117:17" pos:end="117:21">index</name> <operator pos:start="117:23" pos:end="117:24">&amp;=</operator> <name pos:start="117:26" pos:end="117:38"><name pos:start="117:26" pos:end="117:26">c</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:38">phase_mask</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="175:9">else <block pos:start="121:16" pos:end="175:9">{<block_content pos:start="123:13" pos:end="173:13">

            <expr_stmt pos:start="123:13" pos:end="123:51"><expr pos:start="123:13" pos:end="123:50"><name pos:start="123:13" pos:end="123:24">sample_index</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:32">index</name> <operator pos:start="123:34" pos:end="123:35">&gt;&gt;</operator> <name pos:start="123:37" pos:end="123:50"><name pos:start="123:37" pos:end="123:37">c</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:50">phase_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:35"><expr pos:start="125:13" pos:end="125:34"><name pos:start="125:13" pos:end="125:17">index</name> <operator pos:start="125:19" pos:end="125:20">&amp;=</operator> <name pos:start="125:22" pos:end="125:34"><name pos:start="125:22" pos:end="125:22">c</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:34">phase_mask</name></name></expr>;</expr_stmt>

            <for pos:start="127:13" pos:end="173:13">for <control pos:start="127:17" pos:end="127:59">(<init pos:start="127:18" pos:end="127:31"><expr pos:start="127:18" pos:end="127:30"><name pos:start="127:18" pos:end="127:26">dst_index</name> <operator pos:start="127:28" pos:end="127:28">=</operator> <literal type="number" pos:start="127:30" pos:end="127:30">0</literal></expr>;</init> <condition pos:start="127:33" pos:end="127:46"><expr pos:start="127:33" pos:end="127:45"><name pos:start="127:33" pos:end="127:41">dst_index</name> <operator pos:start="127:43" pos:end="127:43">&lt;</operator> <name pos:start="127:45" pos:end="127:45">n</name></expr>;</condition> <incr pos:start="127:48" pos:end="127:58"><expr pos:start="127:48" pos:end="127:58"><name pos:start="127:48" pos:end="127:56">dst_index</name><operator pos:start="127:57" pos:end="127:58">++</operator></expr></incr>)</control> <block pos:start="127:61" pos:end="173:13">{<block_content pos:start="129:17" pos:end="171:39">

                <decl_stmt pos:start="129:17" pos:end="129:85"><decl pos:start="129:17" pos:end="129:84"><type pos:start="129:17" pos:end="129:23"><name pos:start="129:17" pos:end="129:21">FELEM</name> <modifier pos:start="129:23" pos:end="129:23">*</modifier></type><name pos:start="129:24" pos:end="129:29">filter</name> <init pos:start="129:31" pos:end="129:84">= <expr pos:start="129:33" pos:end="129:84"><operator pos:start="129:33" pos:end="129:33">(</operator><operator pos:start="129:34" pos:end="129:34">(</operator><name pos:start="129:35" pos:end="129:39">FELEM</name> <operator pos:start="129:41" pos:end="129:41">*</operator><operator pos:start="129:42" pos:end="129:42">)</operator> <name pos:start="129:44" pos:end="129:57"><name pos:start="129:44" pos:end="129:44">c</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:57">filter_bank</name></name><operator pos:start="129:58" pos:end="129:58">)</operator> <operator pos:start="129:60" pos:end="129:60">+</operator> <name pos:start="129:62" pos:end="129:76"><name pos:start="129:62" pos:end="129:62">c</name><operator pos:start="129:63" pos:end="129:64">-&gt;</operator><name pos:start="129:65" pos:end="129:76">filter_alloc</name></name> <operator pos:start="129:78" pos:end="129:78">*</operator> <name pos:start="129:80" pos:end="129:84">index</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="131:17" pos:end="136:0"><decl pos:start="131:17" pos:end="131:28"><type pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:22">FELEM2</name></type> <name pos:start="131:24" pos:end="131:26">val</name><init pos:start="131:27" pos:end="131:28">=<expr pos:start="131:28" pos:end="131:28"><literal type="number" pos:start="131:28" pos:end="131:28">0</literal></expr></init></decl>, <decl pos:start="131:31" pos:end="131:36"><type ref="prev" pos:start="131:17" pos:end="131:22"/><name pos:start="131:31" pos:end="131:32">v2</name> <init pos:start="131:34" pos:end="131:36">= <expr pos:start="131:36" pos:end="131:36"><literal type="number" pos:start="131:36" pos:end="131:36">0</literal></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="135:1" pos:end="135:18">#<cpp:directive pos:start="135:2" pos:end="135:6">ifdef</cpp:directive> <name pos:start="135:8" pos:end="135:18">LINEAR_CORE</name></cpp:ifdef>

                <macro pos:start="137:17" pos:end="140:0"><name pos:start="137:17" pos:end="140:0">LINEAR_CORE</name></macro>

<cpp:else pos:start="139:1" pos:end="139:5">#<cpp:directive pos:start="139:2" pos:end="139:5">else</cpp:directive></cpp:else>

                <for pos:start="141:17" pos:end="150:0">for <control pos:start="141:21" pos:end="141:54">(<init pos:start="141:22" pos:end="141:27"><expr pos:start="141:22" pos:end="141:26"><name pos:start="141:22" pos:end="141:22">i</name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:26">0</literal></expr>;</init> <condition pos:start="141:29" pos:end="141:49"><expr pos:start="141:29" pos:end="141:48"><name pos:start="141:29" pos:end="141:29">i</name> <operator pos:start="141:31" pos:end="141:31">&lt;</operator> <name pos:start="141:33" pos:end="141:48"><name pos:start="141:33" pos:end="141:33">c</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:48">filter_length</name></name></expr>;</condition> <incr pos:start="141:51" pos:end="141:53"><expr pos:start="141:51" pos:end="141:53"><name pos:start="141:51" pos:end="141:51">i</name><operator pos:start="141:52" pos:end="141:53">++</operator></expr></incr>)</control> <block pos:start="141:56" pos:end="150:0">{<block_content pos:start="143:21" pos:end="145:87">

                    <expr_stmt pos:start="143:21" pos:end="143:69"><expr pos:start="143:21" pos:end="143:68"><name pos:start="143:21" pos:end="143:23">val</name> <operator pos:start="143:25" pos:end="143:26">+=</operator> <name pos:start="143:28" pos:end="143:48"><name pos:start="143:28" pos:end="143:30">src</name><index pos:start="143:31" pos:end="143:48">[<expr pos:start="143:32" pos:end="143:47"><name pos:start="143:32" pos:end="143:43">sample_index</name> <operator pos:start="143:45" pos:end="143:45">+</operator> <name pos:start="143:47" pos:end="143:47">i</name></expr>]</index></name> <operator pos:start="143:50" pos:end="143:50">*</operator> <operator pos:start="143:52" pos:end="143:52">(</operator><name pos:start="143:53" pos:end="143:58">FELEM2</name><operator pos:start="143:59" pos:end="143:59">)</operator><name pos:start="143:60" pos:end="143:68"><name pos:start="143:60" pos:end="143:65">filter</name><index pos:start="143:66" pos:end="143:68">[<expr pos:start="143:67" pos:end="143:67"><name pos:start="143:67" pos:end="143:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:87"><expr pos:start="145:21" pos:end="145:86"><name pos:start="145:21" pos:end="145:22">v2</name>  <operator pos:start="145:25" pos:end="145:26">+=</operator> <name pos:start="145:28" pos:end="145:48"><name pos:start="145:28" pos:end="145:30">src</name><index pos:start="145:31" pos:end="145:48">[<expr pos:start="145:32" pos:end="145:47"><name pos:start="145:32" pos:end="145:43">sample_index</name> <operator pos:start="145:45" pos:end="145:45">+</operator> <name pos:start="145:47" pos:end="145:47">i</name></expr>]</index></name> <operator pos:start="145:50" pos:end="145:50">*</operator> <operator pos:start="145:52" pos:end="145:52">(</operator><name pos:start="145:53" pos:end="145:58">FELEM2</name><operator pos:start="145:59" pos:end="145:59">)</operator><name pos:start="145:60" pos:end="145:86"><name pos:start="145:60" pos:end="145:65">filter</name><index pos:start="145:66" pos:end="145:86">[<expr pos:start="145:67" pos:end="145:85"><name pos:start="145:67" pos:end="145:67">i</name> <operator pos:start="145:69" pos:end="145:69">+</operator> <name pos:start="145:71" pos:end="145:85"><name pos:start="145:71" pos:end="145:71">c</name><operator pos:start="145:72" pos:end="145:73">-&gt;</operator><name pos:start="145:74" pos:end="145:85">filter_alloc</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

<cpp:endif pos:start="149:1" pos:end="149:6">#<cpp:directive pos:start="149:2" pos:end="149:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="151:17" pos:end="151:64"><expr pos:start="151:17" pos:end="151:63"><name pos:start="151:17" pos:end="151:19">val</name> <operator pos:start="151:21" pos:end="151:22">+=</operator> <operator pos:start="151:24" pos:end="151:24">(</operator><name pos:start="151:25" pos:end="151:26">v2</name> <operator pos:start="151:28" pos:end="151:28">-</operator> <name pos:start="151:30" pos:end="151:32">val</name><operator pos:start="151:33" pos:end="151:33">)</operator> <operator pos:start="151:35" pos:end="151:35">*</operator> <operator pos:start="151:37" pos:end="151:37">(</operator><name pos:start="151:38" pos:end="151:43">FELEML</name><operator pos:start="151:44" pos:end="151:44">)</operator> <name pos:start="151:46" pos:end="151:49">frac</name> <operator pos:start="151:51" pos:end="151:51">/</operator> <name pos:start="151:53" pos:end="151:63"><name pos:start="151:53" pos:end="151:53">c</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:63">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:41"><expr pos:start="153:17" pos:end="153:40"><call pos:start="153:17" pos:end="153:40"><name pos:start="153:17" pos:end="153:19">OUT</name><argument_list pos:start="153:20" pos:end="153:40">(<argument pos:start="153:21" pos:end="153:34"><expr pos:start="153:21" pos:end="153:34"><name pos:start="153:21" pos:end="153:34"><name pos:start="153:21" pos:end="153:23">dst</name><index pos:start="153:24" pos:end="153:34">[<expr pos:start="153:25" pos:end="153:33"><name pos:start="153:25" pos:end="153:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="153:37" pos:end="153:39"><expr pos:start="153:37" pos:end="153:39"><name pos:start="153:37" pos:end="153:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="157:17" pos:end="157:38"><expr pos:start="157:17" pos:end="157:37"><name pos:start="157:17" pos:end="157:20">frac</name> <operator pos:start="157:22" pos:end="157:23">+=</operator> <name pos:start="157:25" pos:end="157:37">dst_incr_frac</name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:34"><expr pos:start="159:17" pos:end="159:33"><name pos:start="159:17" pos:end="159:21">index</name> <operator pos:start="159:23" pos:end="159:24">+=</operator> <name pos:start="159:26" pos:end="159:33">dst_incr</name></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="167:17"><if pos:start="161:17" pos:end="167:17">if <condition pos:start="161:20" pos:end="161:40">(<expr pos:start="161:21" pos:end="161:39"><name pos:start="161:21" pos:end="161:24">frac</name> <operator pos:start="161:26" pos:end="161:27">&gt;=</operator> <name pos:start="161:29" pos:end="161:39"><name pos:start="161:29" pos:end="161:29">c</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:39">src_incr</name></name></expr>)</condition> <block pos:start="161:42" pos:end="167:17">{<block_content pos:start="163:21" pos:end="165:28">

                    <expr_stmt pos:start="163:21" pos:end="163:40"><expr pos:start="163:21" pos:end="163:39"><name pos:start="163:21" pos:end="163:24">frac</name> <operator pos:start="163:26" pos:end="163:27">-=</operator> <name pos:start="163:29" pos:end="163:39"><name pos:start="163:29" pos:end="163:29">c</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:39">src_incr</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:28"><expr pos:start="165:21" pos:end="165:27"><name pos:start="165:21" pos:end="165:25">index</name><operator pos:start="165:26" pos:end="165:27">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:56"><expr pos:start="169:17" pos:end="169:55"><name pos:start="169:17" pos:end="169:28">sample_index</name> <operator pos:start="169:30" pos:end="169:31">+=</operator> <name pos:start="169:33" pos:end="169:37">index</name> <operator pos:start="169:39" pos:end="169:40">&gt;&gt;</operator> <name pos:start="169:42" pos:end="169:55"><name pos:start="169:42" pos:end="169:42">c</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:55">phase_shift</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:39"><expr pos:start="171:17" pos:end="171:38"><name pos:start="171:17" pos:end="171:21">index</name> <operator pos:start="171:23" pos:end="171:24">&amp;=</operator> <name pos:start="171:26" pos:end="171:38"><name pos:start="171:26" pos:end="171:26">c</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:38">phase_mask</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:33"><expr pos:start="179:9" pos:end="179:32"><operator pos:start="179:9" pos:end="179:9">*</operator><name pos:start="179:10" pos:end="179:17">consumed</name> <operator pos:start="179:19" pos:end="179:19">=</operator> <name pos:start="179:21" pos:end="179:32">sample_index</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="181:7" pos:end="299:5">else <block pos:start="181:12" pos:end="299:5">{<block_content pos:start="183:9" pos:end="297:9">

        <decl_stmt pos:start="183:9" pos:end="183:29"><decl pos:start="183:9" pos:end="183:28"><type pos:start="183:9" pos:end="183:11"><name pos:start="183:9" pos:end="183:11">int</name></type> <name pos:start="183:13" pos:end="183:24">sample_index</name> <init pos:start="183:26" pos:end="183:28">= <expr pos:start="183:28" pos:end="183:28"><literal type="number" pos:start="183:28" pos:end="183:28">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="185:9" pos:end="283:9">for<control pos:start="185:12" pos:end="185:59">(<init pos:start="185:13" pos:end="185:24"><expr pos:start="185:13" pos:end="185:23"><name pos:start="185:13" pos:end="185:21">dst_index</name><operator pos:start="185:22" pos:end="185:22">=</operator><literal type="number" pos:start="185:23" pos:end="185:23">0</literal></expr>;</init> <condition pos:start="185:26" pos:end="185:46"><expr pos:start="185:26" pos:end="185:45"><name pos:start="185:26" pos:end="185:34">dst_index</name> <operator pos:start="185:36" pos:end="185:36">&lt;</operator> <name pos:start="185:38" pos:end="185:45">dst_size</name></expr>;</condition> <incr pos:start="185:48" pos:end="185:58"><expr pos:start="185:48" pos:end="185:58"><name pos:start="185:48" pos:end="185:56">dst_index</name><operator pos:start="185:57" pos:end="185:58">++</operator></expr></incr>)</control><block pos:start="185:60" pos:end="283:9">{<block_content pos:start="187:13" pos:end="281:13">

            <decl_stmt pos:start="187:13" pos:end="187:26"><decl pos:start="187:13" pos:end="187:25"><type pos:start="187:13" pos:end="187:19"><name pos:start="187:13" pos:end="187:17">FELEM</name> <modifier pos:start="187:19" pos:end="187:19">*</modifier></type><name pos:start="187:20" pos:end="187:25">filter</name></decl>;</decl_stmt>

            <decl_stmt pos:start="189:13" pos:end="189:25"><decl pos:start="189:13" pos:end="189:24"><type pos:start="189:13" pos:end="189:18"><name pos:start="189:13" pos:end="189:18">FELEM2</name></type> <name pos:start="189:20" pos:end="189:22">val</name><init pos:start="189:23" pos:end="189:24">=<expr pos:start="189:24" pos:end="189:24"><literal type="number" pos:start="189:24" pos:end="189:24">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="193:13" pos:end="193:52"><expr pos:start="193:13" pos:end="193:51"><name pos:start="193:13" pos:end="193:24">sample_index</name> <operator pos:start="193:26" pos:end="193:27">+=</operator> <name pos:start="193:29" pos:end="193:33">index</name> <operator pos:start="193:35" pos:end="193:36">&gt;&gt;</operator> <name pos:start="193:38" pos:end="193:51"><name pos:start="193:38" pos:end="193:38">c</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:51">phase_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:35"><expr pos:start="195:13" pos:end="195:34"><name pos:start="195:13" pos:end="195:17">index</name> <operator pos:start="195:19" pos:end="195:20">&amp;=</operator> <name pos:start="195:22" pos:end="195:34"><name pos:start="195:22" pos:end="195:22">c</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:34">phase_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:70"><expr pos:start="197:13" pos:end="197:69"><name pos:start="197:13" pos:end="197:18">filter</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <operator pos:start="197:22" pos:end="197:22">(</operator><operator pos:start="197:23" pos:end="197:23">(</operator><name pos:start="197:24" pos:end="197:28">FELEM</name><operator pos:start="197:29" pos:end="197:29">*</operator><operator pos:start="197:30" pos:end="197:30">)</operator><name pos:start="197:31" pos:end="197:44"><name pos:start="197:31" pos:end="197:31">c</name><operator pos:start="197:32" pos:end="197:33">-&gt;</operator><name pos:start="197:34" pos:end="197:44">filter_bank</name></name><operator pos:start="197:45" pos:end="197:45">)</operator> <operator pos:start="197:47" pos:end="197:47">+</operator> <name pos:start="197:49" pos:end="197:63"><name pos:start="197:49" pos:end="197:49">c</name><operator pos:start="197:50" pos:end="197:51">-&gt;</operator><name pos:start="197:52" pos:end="197:63">filter_alloc</name></name><operator pos:start="197:64" pos:end="197:64">*</operator><name pos:start="197:65" pos:end="197:69">index</name></expr>;</expr_stmt>



            <if_stmt pos:start="201:13" pos:end="255:13"><if pos:start="201:13" pos:end="205:13">if<condition pos:start="201:15" pos:end="201:87">(<expr pos:start="201:16" pos:end="201:86"><name pos:start="201:16" pos:end="201:27">sample_index</name> <operator pos:start="201:29" pos:end="201:29">+</operator> <name pos:start="201:31" pos:end="201:46"><name pos:start="201:31" pos:end="201:31">c</name><operator pos:start="201:32" pos:end="201:33">-&gt;</operator><name pos:start="201:34" pos:end="201:46">filter_length</name></name> <operator pos:start="201:48" pos:end="201:48">&gt;</operator> <name pos:start="201:50" pos:end="201:57">src_size</name> <operator pos:start="201:59" pos:end="201:60">||</operator> <operator pos:start="201:62" pos:end="201:62">-</operator><name pos:start="201:63" pos:end="201:74">sample_index</name> <operator pos:start="201:76" pos:end="201:77">&gt;=</operator> <name pos:start="201:79" pos:end="201:86">src_size</name></expr>)</condition><block pos:start="201:88" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:22">

                <break pos:start="203:17" pos:end="203:22">break;</break>

            </block_content>}</block></if><if type="elseif" pos:start="205:14" pos:end="213:13">else if<condition pos:start="205:21" pos:end="205:38">(<expr pos:start="205:22" pos:end="205:37"><name pos:start="205:22" pos:end="205:33">sample_index</name> <operator pos:start="205:35" pos:end="205:35">&lt;</operator> <literal type="number" pos:start="205:37" pos:end="205:37">0</literal></expr>)</condition><block pos:start="205:39" pos:end="213:13">{<block_content pos:start="207:17" pos:end="211:41">

                <for pos:start="207:17" pos:end="209:76">for<control pos:start="207:20" pos:end="207:49">(<init pos:start="207:21" pos:end="207:24"><expr pos:start="207:21" pos:end="207:23"><name pos:start="207:21" pos:end="207:21">i</name><operator pos:start="207:22" pos:end="207:22">=</operator><literal type="number" pos:start="207:23" pos:end="207:23">0</literal></expr>;</init> <condition pos:start="207:26" pos:end="207:44"><expr pos:start="207:26" pos:end="207:43"><name pos:start="207:26" pos:end="207:26">i</name><operator pos:start="207:27" pos:end="207:27">&lt;</operator><name pos:start="207:28" pos:end="207:43"><name pos:start="207:28" pos:end="207:28">c</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:43">filter_length</name></name></expr>;</condition> <incr pos:start="207:46" pos:end="207:48"><expr pos:start="207:46" pos:end="207:48"><name pos:start="207:46" pos:end="207:46">i</name><operator pos:start="207:47" pos:end="207:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="209:21" pos:end="209:76"><block_content pos:start="209:21" pos:end="209:76">

                    <expr_stmt pos:start="209:21" pos:end="209:76"><expr pos:start="209:21" pos:end="209:75"><name pos:start="209:21" pos:end="209:23">val</name> <operator pos:start="209:25" pos:end="209:26">+=</operator> <name pos:start="209:28" pos:end="209:55"><name pos:start="209:28" pos:end="209:30">src</name><index pos:start="209:31" pos:end="209:55">[<expr pos:start="209:32" pos:end="209:54"><call pos:start="209:32" pos:end="209:54"><name pos:start="209:32" pos:end="209:36">FFABS</name><argument_list pos:start="209:37" pos:end="209:54">(<argument pos:start="209:38" pos:end="209:53"><expr pos:start="209:38" pos:end="209:53"><name pos:start="209:38" pos:end="209:49">sample_index</name> <operator pos:start="209:51" pos:end="209:51">+</operator> <name pos:start="209:53" pos:end="209:53">i</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="209:57" pos:end="209:57">*</operator> <operator pos:start="209:59" pos:end="209:59">(</operator><name pos:start="209:60" pos:end="209:65">FELEM2</name><operator pos:start="209:66" pos:end="209:66">)</operator><name pos:start="209:67" pos:end="209:75"><name pos:start="209:67" pos:end="209:72">filter</name><index pos:start="209:73" pos:end="209:75">[<expr pos:start="209:74" pos:end="209:74"><name pos:start="209:74" pos:end="209:74">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="211:17" pos:end="211:41"><expr pos:start="211:17" pos:end="211:40"><call pos:start="211:17" pos:end="211:40"><name pos:start="211:17" pos:end="211:19">OUT</name><argument_list pos:start="211:20" pos:end="211:40">(<argument pos:start="211:21" pos:end="211:34"><expr pos:start="211:21" pos:end="211:34"><name pos:start="211:21" pos:end="211:34"><name pos:start="211:21" pos:end="211:23">dst</name><index pos:start="211:24" pos:end="211:34">[<expr pos:start="211:25" pos:end="211:33"><name pos:start="211:25" pos:end="211:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="211:37" pos:end="211:39"><expr pos:start="211:37" pos:end="211:39"><name pos:start="211:37" pos:end="211:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="213:14" pos:end="237:13">else if<condition pos:start="213:21" pos:end="213:31">(<expr pos:start="213:22" pos:end="213:30"><name pos:start="213:22" pos:end="213:30"><name pos:start="213:22" pos:end="213:22">c</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:30">linear</name></name></expr>)</condition><block pos:start="213:32" pos:end="237:13">{<block_content pos:start="215:17" pos:end="235:41">

                <decl_stmt pos:start="215:17" pos:end="218:0"><decl pos:start="215:17" pos:end="215:27"><type pos:start="215:17" pos:end="215:22"><name pos:start="215:17" pos:end="215:22">FELEM2</name></type> <name pos:start="215:24" pos:end="215:25">v2</name><init pos:start="215:26" pos:end="215:27">=<expr pos:start="215:27" pos:end="215:27"><literal type="number" pos:start="215:27" pos:end="215:27">0</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="217:1" pos:end="217:18">#<cpp:directive pos:start="217:2" pos:end="217:6">ifdef</cpp:directive> <name pos:start="217:8" pos:end="217:18">LINEAR_CORE</name></cpp:ifdef>

                <macro pos:start="219:17" pos:end="222:0"><name pos:start="219:17" pos:end="222:0">LINEAR_CORE</name></macro>

<cpp:else pos:start="221:1" pos:end="221:5">#<cpp:directive pos:start="221:2" pos:end="221:5">else</cpp:directive></cpp:else>

                <for pos:start="223:17" pos:end="232:0">for<control pos:start="223:20" pos:end="223:49">(<init pos:start="223:21" pos:end="223:24"><expr pos:start="223:21" pos:end="223:23"><name pos:start="223:21" pos:end="223:21">i</name><operator pos:start="223:22" pos:end="223:22">=</operator><literal type="number" pos:start="223:23" pos:end="223:23">0</literal></expr>;</init> <condition pos:start="223:26" pos:end="223:44"><expr pos:start="223:26" pos:end="223:43"><name pos:start="223:26" pos:end="223:26">i</name><operator pos:start="223:27" pos:end="223:27">&lt;</operator><name pos:start="223:28" pos:end="223:43"><name pos:start="223:28" pos:end="223:28">c</name><operator pos:start="223:29" pos:end="223:30">-&gt;</operator><name pos:start="223:31" pos:end="223:43">filter_length</name></name></expr>;</condition> <incr pos:start="223:46" pos:end="223:48"><expr pos:start="223:46" pos:end="223:48"><name pos:start="223:46" pos:end="223:46">i</name><operator pos:start="223:47" pos:end="223:48">++</operator></expr></incr>)</control><block pos:start="223:50" pos:end="232:0">{<block_content pos:start="225:21" pos:end="227:87">

                    <expr_stmt pos:start="225:21" pos:end="225:69"><expr pos:start="225:21" pos:end="225:68"><name pos:start="225:21" pos:end="225:23">val</name> <operator pos:start="225:25" pos:end="225:26">+=</operator> <name pos:start="225:28" pos:end="225:48"><name pos:start="225:28" pos:end="225:30">src</name><index pos:start="225:31" pos:end="225:48">[<expr pos:start="225:32" pos:end="225:47"><name pos:start="225:32" pos:end="225:43">sample_index</name> <operator pos:start="225:45" pos:end="225:45">+</operator> <name pos:start="225:47" pos:end="225:47">i</name></expr>]</index></name> <operator pos:start="225:50" pos:end="225:50">*</operator> <operator pos:start="225:52" pos:end="225:52">(</operator><name pos:start="225:53" pos:end="225:58">FELEM2</name><operator pos:start="225:59" pos:end="225:59">)</operator><name pos:start="225:60" pos:end="225:68"><name pos:start="225:60" pos:end="225:65">filter</name><index pos:start="225:66" pos:end="225:68">[<expr pos:start="225:67" pos:end="225:67"><name pos:start="225:67" pos:end="225:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:87"><expr pos:start="227:21" pos:end="227:86"><name pos:start="227:21" pos:end="227:22">v2</name>  <operator pos:start="227:25" pos:end="227:26">+=</operator> <name pos:start="227:28" pos:end="227:48"><name pos:start="227:28" pos:end="227:30">src</name><index pos:start="227:31" pos:end="227:48">[<expr pos:start="227:32" pos:end="227:47"><name pos:start="227:32" pos:end="227:43">sample_index</name> <operator pos:start="227:45" pos:end="227:45">+</operator> <name pos:start="227:47" pos:end="227:47">i</name></expr>]</index></name> <operator pos:start="227:50" pos:end="227:50">*</operator> <operator pos:start="227:52" pos:end="227:52">(</operator><name pos:start="227:53" pos:end="227:58">FELEM2</name><operator pos:start="227:59" pos:end="227:59">)</operator><name pos:start="227:60" pos:end="227:86"><name pos:start="227:60" pos:end="227:65">filter</name><index pos:start="227:66" pos:end="227:86">[<expr pos:start="227:67" pos:end="227:85"><name pos:start="227:67" pos:end="227:67">i</name> <operator pos:start="227:69" pos:end="227:69">+</operator> <name pos:start="227:71" pos:end="227:85"><name pos:start="227:71" pos:end="227:71">c</name><operator pos:start="227:72" pos:end="227:73">-&gt;</operator><name pos:start="227:74" pos:end="227:85">filter_alloc</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

<cpp:endif pos:start="231:1" pos:end="231:6">#<cpp:directive pos:start="231:2" pos:end="231:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="233:17" pos:end="233:57"><expr pos:start="233:17" pos:end="233:56"><name pos:start="233:17" pos:end="233:19">val</name><operator pos:start="233:20" pos:end="233:21">+=</operator><operator pos:start="233:22" pos:end="233:22">(</operator><name pos:start="233:23" pos:end="233:24">v2</name><operator pos:start="233:25" pos:end="233:25">-</operator><name pos:start="233:26" pos:end="233:28">val</name><operator pos:start="233:29" pos:end="233:29">)</operator><operator pos:start="233:30" pos:end="233:30">*</operator><operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:37">FELEML</name><operator pos:start="233:38" pos:end="233:38">)</operator><name pos:start="233:39" pos:end="233:42">frac</name> <operator pos:start="233:44" pos:end="233:44">/</operator> <name pos:start="233:46" pos:end="233:56"><name pos:start="233:46" pos:end="233:46">c</name><operator pos:start="233:47" pos:end="233:48">-&gt;</operator><name pos:start="233:49" pos:end="233:56">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:41"><expr pos:start="235:17" pos:end="235:40"><call pos:start="235:17" pos:end="235:40"><name pos:start="235:17" pos:end="235:19">OUT</name><argument_list pos:start="235:20" pos:end="235:40">(<argument pos:start="235:21" pos:end="235:34"><expr pos:start="235:21" pos:end="235:34"><name pos:start="235:21" pos:end="235:34"><name pos:start="235:21" pos:end="235:23">dst</name><index pos:start="235:24" pos:end="235:34">[<expr pos:start="235:25" pos:end="235:33"><name pos:start="235:25" pos:end="235:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="235:37" pos:end="235:39"><expr pos:start="235:37" pos:end="235:39"><name pos:start="235:37" pos:end="235:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="237:14" pos:end="255:13">else<block pos:start="237:18" pos:end="255:13">{<block_content pos:start="241:17" pos:end="254:0">

<cpp:ifdef pos:start="239:1" pos:end="239:18">#<cpp:directive pos:start="239:2" pos:end="239:6">ifdef</cpp:directive> <name pos:start="239:8" pos:end="239:18">COMMON_CORE</name></cpp:ifdef>

                <macro pos:start="241:17" pos:end="244:0"><name pos:start="241:17" pos:end="244:0">COMMON_CORE</name></macro>

<cpp:else pos:start="243:1" pos:end="243:5">#<cpp:directive pos:start="243:2" pos:end="243:5">else</cpp:directive></cpp:else>

                <for pos:start="245:17" pos:end="249:17">for<control pos:start="245:20" pos:end="245:49">(<init pos:start="245:21" pos:end="245:24"><expr pos:start="245:21" pos:end="245:23"><name pos:start="245:21" pos:end="245:21">i</name><operator pos:start="245:22" pos:end="245:22">=</operator><literal type="number" pos:start="245:23" pos:end="245:23">0</literal></expr>;</init> <condition pos:start="245:26" pos:end="245:44"><expr pos:start="245:26" pos:end="245:43"><name pos:start="245:26" pos:end="245:26">i</name><operator pos:start="245:27" pos:end="245:27">&lt;</operator><name pos:start="245:28" pos:end="245:43"><name pos:start="245:28" pos:end="245:28">c</name><operator pos:start="245:29" pos:end="245:30">-&gt;</operator><name pos:start="245:31" pos:end="245:43">filter_length</name></name></expr>;</condition> <incr pos:start="245:46" pos:end="245:48"><expr pos:start="245:46" pos:end="245:48"><name pos:start="245:46" pos:end="245:46">i</name><operator pos:start="245:47" pos:end="245:48">++</operator></expr></incr>)</control><block pos:start="245:50" pos:end="249:17">{<block_content pos:start="247:21" pos:end="247:69">

                    <expr_stmt pos:start="247:21" pos:end="247:69"><expr pos:start="247:21" pos:end="247:68"><name pos:start="247:21" pos:end="247:23">val</name> <operator pos:start="247:25" pos:end="247:26">+=</operator> <name pos:start="247:28" pos:end="247:48"><name pos:start="247:28" pos:end="247:30">src</name><index pos:start="247:31" pos:end="247:48">[<expr pos:start="247:32" pos:end="247:47"><name pos:start="247:32" pos:end="247:43">sample_index</name> <operator pos:start="247:45" pos:end="247:45">+</operator> <name pos:start="247:47" pos:end="247:47">i</name></expr>]</index></name> <operator pos:start="247:50" pos:end="247:50">*</operator> <operator pos:start="247:52" pos:end="247:52">(</operator><name pos:start="247:53" pos:end="247:58">FELEM2</name><operator pos:start="247:59" pos:end="247:59">)</operator><name pos:start="247:60" pos:end="247:68"><name pos:start="247:60" pos:end="247:65">filter</name><index pos:start="247:66" pos:end="247:68">[<expr pos:start="247:67" pos:end="247:67"><name pos:start="247:67" pos:end="247:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="251:17" pos:end="254:0"><expr pos:start="251:17" pos:end="251:40"><call pos:start="251:17" pos:end="251:40"><name pos:start="251:17" pos:end="251:19">OUT</name><argument_list pos:start="251:20" pos:end="251:40">(<argument pos:start="251:21" pos:end="251:34"><expr pos:start="251:21" pos:end="251:34"><name pos:start="251:21" pos:end="251:34"><name pos:start="251:21" pos:end="251:23">dst</name><index pos:start="251:24" pos:end="251:34">[<expr pos:start="251:25" pos:end="251:33"><name pos:start="251:25" pos:end="251:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="251:37" pos:end="251:39"><expr pos:start="251:37" pos:end="251:39"><name pos:start="251:37" pos:end="251:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="259:13" pos:end="259:34"><expr pos:start="259:13" pos:end="259:33"><name pos:start="259:13" pos:end="259:16">frac</name> <operator pos:start="259:18" pos:end="259:19">+=</operator> <name pos:start="259:21" pos:end="259:33">dst_incr_frac</name></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:30"><expr pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:17">index</name> <operator pos:start="261:19" pos:end="261:20">+=</operator> <name pos:start="261:22" pos:end="261:29">dst_incr</name></expr>;</expr_stmt>

            <if_stmt pos:start="263:13" pos:end="269:13"><if pos:start="263:13" pos:end="269:13">if<condition pos:start="263:15" pos:end="263:35">(<expr pos:start="263:16" pos:end="263:34"><name pos:start="263:16" pos:end="263:19">frac</name> <operator pos:start="263:21" pos:end="263:22">&gt;=</operator> <name pos:start="263:24" pos:end="263:34"><name pos:start="263:24" pos:end="263:24">c</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:34">src_incr</name></name></expr>)</condition><block pos:start="263:36" pos:end="269:13">{<block_content pos:start="265:17" pos:end="267:24">

                <expr_stmt pos:start="265:17" pos:end="265:36"><expr pos:start="265:17" pos:end="265:35"><name pos:start="265:17" pos:end="265:20">frac</name> <operator pos:start="265:22" pos:end="265:23">-=</operator> <name pos:start="265:25" pos:end="265:35"><name pos:start="265:25" pos:end="265:25">c</name><operator pos:start="265:26" pos:end="265:27">-&gt;</operator><name pos:start="265:28" pos:end="265:35">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:24"><expr pos:start="267:17" pos:end="267:23"><name pos:start="267:17" pos:end="267:21">index</name><operator pos:start="267:22" pos:end="267:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="273:13" pos:end="281:13"><if pos:start="273:13" pos:end="281:13">if<condition pos:start="273:15" pos:end="273:54">(<expr pos:start="273:16" pos:end="273:53"><name pos:start="273:16" pos:end="273:24">dst_index</name> <operator pos:start="273:26" pos:end="273:26">+</operator> <literal type="number" pos:start="273:28" pos:end="273:28">1</literal> <operator pos:start="273:30" pos:end="273:31">==</operator> <name pos:start="273:33" pos:end="273:53">compensation_distance</name></expr>)</condition><block pos:start="273:55" pos:end="281:13">{<block_content pos:start="275:17" pos:end="279:63">

                <expr_stmt pos:start="275:17" pos:end="275:41"><expr pos:start="275:17" pos:end="275:40"><name pos:start="275:17" pos:end="275:37">compensation_distance</name><operator pos:start="275:38" pos:end="275:38">=</operator> <literal type="number" pos:start="275:40" pos:end="275:40">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:63"><expr pos:start="277:17" pos:end="277:62"><name pos:start="277:17" pos:end="277:29">dst_incr_frac</name><operator pos:start="277:30" pos:end="277:30">=</operator> <name pos:start="277:32" pos:end="277:48"><name pos:start="277:32" pos:end="277:32">c</name><operator pos:start="277:33" pos:end="277:34">-&gt;</operator><name pos:start="277:35" pos:end="277:48">ideal_dst_incr</name></name> <operator pos:start="277:50" pos:end="277:50">%</operator> <name pos:start="277:52" pos:end="277:62"><name pos:start="277:52" pos:end="277:52">c</name><operator pos:start="277:53" pos:end="277:54">-&gt;</operator><name pos:start="277:55" pos:end="277:62">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:63"><expr pos:start="279:17" pos:end="279:62"><name pos:start="279:17" pos:end="279:24">dst_incr</name><operator pos:start="279:25" pos:end="279:25">=</operator>      <name pos:start="279:32" pos:end="279:48"><name pos:start="279:32" pos:end="279:32">c</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:48">ideal_dst_incr</name></name> <operator pos:start="279:50" pos:end="279:50">/</operator> <name pos:start="279:52" pos:end="279:62"><name pos:start="279:52" pos:end="279:52">c</name><operator pos:start="279:53" pos:end="279:54">-&gt;</operator><name pos:start="279:55" pos:end="279:62">src_incr</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="285:9" pos:end="285:42"><expr pos:start="285:9" pos:end="285:41"><operator pos:start="285:9" pos:end="285:9">*</operator><name pos:start="285:10" pos:end="285:17">consumed</name><operator pos:start="285:18" pos:end="285:18">=</operator> <call pos:start="285:20" pos:end="285:41"><name pos:start="285:20" pos:end="285:24">FFMAX</name><argument_list pos:start="285:25" pos:end="285:41">(<argument pos:start="285:26" pos:end="285:37"><expr pos:start="285:26" pos:end="285:37"><name pos:start="285:26" pos:end="285:37">sample_index</name></expr></argument>, <argument pos:start="285:40" pos:end="285:40"><expr pos:start="285:40" pos:end="285:40"><literal type="number" pos:start="285:40" pos:end="285:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:58"><expr pos:start="287:9" pos:end="287:57"><name pos:start="287:9" pos:end="287:13">index</name> <operator pos:start="287:15" pos:end="287:16">+=</operator> <call pos:start="287:18" pos:end="287:39"><name pos:start="287:18" pos:end="287:22">FFMIN</name><argument_list pos:start="287:23" pos:end="287:39">(<argument pos:start="287:24" pos:end="287:35"><expr pos:start="287:24" pos:end="287:35"><name pos:start="287:24" pos:end="287:35">sample_index</name></expr></argument>, <argument pos:start="287:38" pos:end="287:38"><expr pos:start="287:38" pos:end="287:38"><literal type="number" pos:start="287:38" pos:end="287:38">0</literal></expr></argument>)</argument_list></call> <operator pos:start="287:41" pos:end="287:42">&lt;&lt;</operator> <name pos:start="287:44" pos:end="287:57"><name pos:start="287:44" pos:end="287:44">c</name><operator pos:start="287:45" pos:end="287:46">-&gt;</operator><name pos:start="287:47" pos:end="287:57">phase_shift</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="291:9" pos:end="297:9"><if pos:start="291:9" pos:end="297:9">if<condition pos:start="291:11" pos:end="291:33">(<expr pos:start="291:12" pos:end="291:32"><name pos:start="291:12" pos:end="291:32">compensation_distance</name></expr>)</condition><block pos:start="291:34" pos:end="297:9">{<block_content pos:start="293:13" pos:end="295:50">

            <expr_stmt pos:start="293:13" pos:end="293:47"><expr pos:start="293:13" pos:end="293:46"><name pos:start="293:13" pos:end="293:33">compensation_distance</name> <operator pos:start="293:35" pos:end="293:36">-=</operator> <name pos:start="293:38" pos:end="293:46">dst_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:50"><expr pos:start="295:13" pos:end="295:49"><call pos:start="295:13" pos:end="295:49"><name pos:start="295:13" pos:end="295:22">av_assert1</name><argument_list pos:start="295:23" pos:end="295:49">(<argument pos:start="295:24" pos:end="295:48"><expr pos:start="295:24" pos:end="295:48"><name pos:start="295:24" pos:end="295:44">compensation_distance</name> <operator pos:start="295:46" pos:end="295:46">&gt;</operator> <literal type="number" pos:start="295:48" pos:end="295:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="303:5" pos:end="313:5"><if pos:start="303:5" pos:end="313:5">if<condition pos:start="303:7" pos:end="303:18">(<expr pos:start="303:8" pos:end="303:17"><name pos:start="303:8" pos:end="303:17">update_ctx</name></expr>)</condition><block pos:start="303:19" pos:end="313:5">{<block_content pos:start="305:9" pos:end="311:56">

        <expr_stmt pos:start="305:9" pos:end="305:22"><expr pos:start="305:9" pos:end="305:21"><name pos:start="305:9" pos:end="305:15"><name pos:start="305:9" pos:end="305:9">c</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:15">frac</name></name><operator pos:start="305:16" pos:end="305:16">=</operator> <name pos:start="305:18" pos:end="305:21">frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:24"><expr pos:start="307:9" pos:end="307:23"><name pos:start="307:9" pos:end="307:16"><name pos:start="307:9" pos:end="307:9">c</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:16">index</name></name><operator pos:start="307:17" pos:end="307:17">=</operator> <name pos:start="307:19" pos:end="307:23">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:58"><expr pos:start="309:9" pos:end="309:57"><name pos:start="309:9" pos:end="309:19"><name pos:start="309:9" pos:end="309:9">c</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:19">dst_incr</name></name><operator pos:start="309:20" pos:end="309:20">=</operator> <name pos:start="309:22" pos:end="309:34">dst_incr_frac</name> <operator pos:start="309:36" pos:end="309:36">+</operator> <name pos:start="309:38" pos:end="309:48"><name pos:start="309:38" pos:end="309:38">c</name><operator pos:start="309:39" pos:end="309:40">-&gt;</operator><name pos:start="309:41" pos:end="309:48">src_incr</name></name><operator pos:start="309:49" pos:end="309:49">*</operator><name pos:start="309:50" pos:end="309:57">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:56"><expr pos:start="311:9" pos:end="311:55"><name pos:start="311:9" pos:end="311:32"><name pos:start="311:9" pos:end="311:9">c</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:32">compensation_distance</name></name><operator pos:start="311:33" pos:end="311:33">=</operator> <name pos:start="311:35" pos:end="311:55">compensation_distance</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="317:5" pos:end="317:21">return <expr pos:start="317:12" pos:end="317:20"><name pos:start="317:12" pos:end="317:20">dst_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
