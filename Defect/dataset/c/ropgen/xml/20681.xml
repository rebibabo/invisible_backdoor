<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20681.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">setup_rt_frame_v1</name><parameter_list pos:start="1:30" pos:end="5:69">(<parameter pos:start="1:31" pos:end="1:38"><decl pos:start="1:31" pos:end="1:38"><type pos:start="1:31" pos:end="1:38"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:38">usig</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:67"><decl pos:start="1:41" pos:end="1:67"><type pos:start="1:41" pos:end="1:67"><name pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:46">struct</name> <name pos:start="1:48" pos:end="1:63">target_sigaction</name></name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">ka</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:52"><decl pos:start="3:31" pos:end="3:52"><type pos:start="3:31" pos:end="3:52"><name pos:start="3:31" pos:end="3:46">target_siginfo_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">info</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:50"><decl pos:start="5:31" pos:end="5:50"><type pos:start="5:31" pos:end="5:50"><name pos:start="5:31" pos:end="5:45">target_sigset_t</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:50">set</name></decl></parameter>, <parameter pos:start="5:53" pos:end="5:68"><decl pos:start="5:53" pos:end="5:68"><type pos:start="5:53" pos:end="5:68"><name pos:start="5:53" pos:end="5:63">CPUARMState</name> <modifier pos:start="5:65" pos:end="5:65">*</modifier></type><name pos:start="5:66" pos:end="5:68">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="85:1">{<block_content pos:start="9:9" pos:end="83:49">

	<decl_stmt pos:start="9:9" pos:end="9:37"><decl pos:start="9:9" pos:end="9:36"><type pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:29">rt_sigframe_v1</name></name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:36">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:69"><decl pos:start="11:9" pos:end="11:68"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17">abi_ulong</name></type> <name pos:start="11:19" pos:end="11:28">frame_addr</name> <init pos:start="11:30" pos:end="11:68">= <expr pos:start="11:32" pos:end="11:68"><call pos:start="11:32" pos:end="11:68"><name pos:start="11:32" pos:end="11:43">get_sigframe</name><argument_list pos:start="11:44" pos:end="11:68">(<argument pos:start="11:45" pos:end="11:46"><expr pos:start="11:45" pos:end="11:46"><name pos:start="11:45" pos:end="11:46">ka</name></expr></argument>, <argument pos:start="11:49" pos:end="11:51"><expr pos:start="11:49" pos:end="11:51"><name pos:start="11:49" pos:end="11:51">env</name></expr></argument>, <argument pos:start="11:54" pos:end="11:67"><expr pos:start="11:54" pos:end="11:67"><sizeof pos:start="11:54" pos:end="11:67">sizeof<argument_list pos:start="11:60" pos:end="11:67">(<argument pos:start="11:61" pos:end="11:66"><expr pos:start="11:61" pos:end="11:66"><operator pos:start="11:61" pos:end="11:61">*</operator><name pos:start="11:62" pos:end="11:66">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:40"><decl pos:start="13:9" pos:end="13:39"><type pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:14">struct</name> <name pos:start="13:16" pos:end="13:33">target_sigaltstack</name></name></type> <name pos:start="13:35" pos:end="13:39">stack</name></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:37"><decl pos:start="17:9" pos:end="17:27"><type pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17">abi_ulong</name></type> <name pos:start="17:19" pos:end="17:27">info_addr</name></decl>, <decl pos:start="17:30" pos:end="17:36"><type ref="prev" pos:start="17:9" pos:end="17:17"/><name pos:start="17:30" pos:end="17:36">uc_addr</name></decl>;</decl_stmt>



	<if_stmt pos:start="21:9" pos:end="23:27"><if pos:start="21:9" pos:end="23:27">if <condition pos:start="21:12" pos:end="21:66">(<expr pos:start="21:13" pos:end="21:65"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:65"><name pos:start="21:14" pos:end="21:29">lock_user_struct</name><argument_list pos:start="21:30" pos:end="21:65">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42">VERIFY_WRITE</name></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49">frame</name></expr></argument>, <argument pos:start="21:52" pos:end="21:61"><expr pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:61">frame_addr</name></expr></argument>, <argument pos:start="21:64" pos:end="21:64"><expr pos:start="21:64" pos:end="21:64"><literal type="number" pos:start="21:64" pos:end="21:64">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:27"><block_content pos:start="23:13" pos:end="23:27">

            <return pos:start="23:13" pos:end="23:27">return <comment type="block" pos:start="23:20" pos:end="23:26">/* 1 */</comment>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:17">info_addr</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:30">frame_addr</name> <operator pos:start="27:32" pos:end="27:32">+</operator> <call pos:start="27:34" pos:end="27:70"><name pos:start="27:34" pos:end="27:41">offsetof</name><argument_list pos:start="27:42" pos:end="27:70">(<argument pos:start="27:43" pos:end="27:63"><expr pos:start="27:43" pos:end="27:63">struct <name pos:start="27:50" pos:end="27:63">rt_sigframe_v1</name></expr></argument>, <argument pos:start="27:66" pos:end="27:69"><expr pos:start="27:66" pos:end="27:69"><name pos:start="27:66" pos:end="27:69">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:18">__put_user</name><argument_list pos:start="29:19" pos:end="29:44">(<argument pos:start="29:20" pos:end="29:28"><expr pos:start="29:20" pos:end="29:28"><name pos:start="29:20" pos:end="29:28">info_addr</name></expr></argument>, <argument pos:start="29:31" pos:end="29:43"><expr pos:start="29:31" pos:end="29:43"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:36">frame</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:43">pinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:15">uc_addr</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:28">frame_addr</name> <operator pos:start="31:30" pos:end="31:30">+</operator> <call pos:start="31:32" pos:end="31:66"><name pos:start="31:32" pos:end="31:39">offsetof</name><argument_list pos:start="31:40" pos:end="31:66">(<argument pos:start="31:41" pos:end="31:61"><expr pos:start="31:41" pos:end="31:61">struct <name pos:start="31:48" pos:end="31:61">rt_sigframe_v1</name></expr></argument>, <argument pos:start="31:64" pos:end="31:65"><expr pos:start="31:64" pos:end="31:65"><name pos:start="31:64" pos:end="31:65">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:18">__put_user</name><argument_list pos:start="33:19" pos:end="33:40">(<argument pos:start="33:20" pos:end="33:26"><expr pos:start="33:20" pos:end="33:26"><name pos:start="33:20" pos:end="33:26">uc_addr</name></expr></argument>, <argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:34">frame</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:39">puc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><call pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:28">copy_siginfo_to_user</name><argument_list pos:start="35:29" pos:end="35:48">(<argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:41"><name pos:start="35:31" pos:end="35:35">frame</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:41">info</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="39:9" pos:end="39:63">/* Clear all the bits of the ucontext we don't use.  */</comment>

	<expr_stmt pos:start="41:9" pos:end="41:81"><expr pos:start="41:9" pos:end="41:80"><call pos:start="41:9" pos:end="41:80"><name pos:start="41:9" pos:end="41:14">memset</name><argument_list pos:start="41:15" pos:end="41:80">(<argument pos:start="41:16" pos:end="41:25"><expr pos:start="41:16" pos:end="41:25"><operator pos:start="41:16" pos:end="41:16">&amp;</operator><name pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:21">frame</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:25">uc</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr></argument>, <argument pos:start="41:31" pos:end="41:79"><expr pos:start="41:31" pos:end="41:79"><call pos:start="41:31" pos:end="41:79"><name pos:start="41:31" pos:end="41:38">offsetof</name><argument_list pos:start="41:39" pos:end="41:79">(<argument pos:start="41:40" pos:end="41:64"><expr pos:start="41:40" pos:end="41:64">struct <name pos:start="41:47" pos:end="41:64">target_ucontext_v1</name></expr></argument>, <argument pos:start="41:67" pos:end="41:78"><expr pos:start="41:67" pos:end="41:78"><name pos:start="41:67" pos:end="41:78">tuc_mcontext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:14">memset</name><argument_list pos:start="45:15" pos:end="45:40">(<argument pos:start="45:16" pos:end="45:21"><expr pos:start="45:16" pos:end="45:21"><operator pos:start="45:16" pos:end="45:16">&amp;</operator><name pos:start="45:17" pos:end="45:21">stack</name></expr></argument>, <argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr></argument>, <argument pos:start="45:27" pos:end="45:39"><expr pos:start="45:27" pos:end="45:39"><sizeof pos:start="45:27" pos:end="45:39">sizeof<argument_list pos:start="45:33" pos:end="45:39">(<argument pos:start="45:34" pos:end="45:38"><expr pos:start="45:34" pos:end="45:38"><name pos:start="45:34" pos:end="45:38">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:64"><expr pos:start="47:9" pos:end="47:63"><call pos:start="47:9" pos:end="47:63"><name pos:start="47:9" pos:end="47:18">__put_user</name><argument_list pos:start="47:19" pos:end="47:63">(<argument pos:start="47:20" pos:end="47:48"><expr pos:start="47:20" pos:end="47:48"><name pos:start="47:20" pos:end="47:48"><name pos:start="47:20" pos:end="47:42">target_sigaltstack_used</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:48">ss_sp</name></name></expr></argument>, <argument pos:start="47:51" pos:end="47:62"><expr pos:start="47:51" pos:end="47:62"><operator pos:start="47:51" pos:end="47:51">&amp;</operator><name pos:start="47:52" pos:end="47:62"><name pos:start="47:52" pos:end="47:56">stack</name><operator pos:start="47:57" pos:end="47:57">.</operator><name pos:start="47:58" pos:end="47:62">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:68"><expr pos:start="49:9" pos:end="49:67"><call pos:start="49:9" pos:end="49:67"><name pos:start="49:9" pos:end="49:18">__put_user</name><argument_list pos:start="49:19" pos:end="49:67">(<argument pos:start="49:20" pos:end="49:50"><expr pos:start="49:20" pos:end="49:50"><name pos:start="49:20" pos:end="49:50"><name pos:start="49:20" pos:end="49:42">target_sigaltstack_used</name><operator pos:start="49:43" pos:end="49:43">.</operator><name pos:start="49:44" pos:end="49:50">ss_size</name></name></expr></argument>, <argument pos:start="49:53" pos:end="49:66"><expr pos:start="49:53" pos:end="49:66"><operator pos:start="49:53" pos:end="49:53">&amp;</operator><name pos:start="49:54" pos:end="49:66"><name pos:start="49:54" pos:end="49:58">stack</name><operator pos:start="49:59" pos:end="49:59">.</operator><name pos:start="49:60" pos:end="49:66">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:77"><expr pos:start="51:9" pos:end="51:76"><call pos:start="51:9" pos:end="51:76"><name pos:start="51:9" pos:end="51:18">__put_user</name><argument_list pos:start="51:19" pos:end="51:76">(<argument pos:start="51:20" pos:end="51:58"><expr pos:start="51:20" pos:end="51:58"><call pos:start="51:20" pos:end="51:58"><name pos:start="51:20" pos:end="51:31">sas_ss_flags</name><argument_list pos:start="51:32" pos:end="51:58">(<argument pos:start="51:33" pos:end="51:57"><expr pos:start="51:33" pos:end="51:57"><call pos:start="51:33" pos:end="51:57"><name pos:start="51:33" pos:end="51:52">get_sp_from_cpustate</name><argument_list pos:start="51:53" pos:end="51:57">(<argument pos:start="51:54" pos:end="51:56"><expr pos:start="51:54" pos:end="51:56"><name pos:start="51:54" pos:end="51:56">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:61" pos:end="51:75"><expr pos:start="51:61" pos:end="51:75"><operator pos:start="51:61" pos:end="51:61">&amp;</operator><name pos:start="51:62" pos:end="51:75"><name pos:start="51:62" pos:end="51:66">stack</name><operator pos:start="51:67" pos:end="51:67">.</operator><name pos:start="51:68" pos:end="51:75">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:60"><expr pos:start="53:9" pos:end="53:59"><call pos:start="53:9" pos:end="53:59"><name pos:start="53:9" pos:end="53:14">memcpy</name><argument_list pos:start="53:15" pos:end="53:59">(<argument pos:start="53:16" pos:end="53:35"><expr pos:start="53:16" pos:end="53:35"><operator pos:start="53:16" pos:end="53:16">&amp;</operator><name pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:21">frame</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:25">uc</name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:35">tuc_stack</name></name></expr></argument>, <argument pos:start="53:38" pos:end="53:43"><expr pos:start="53:38" pos:end="53:43"><operator pos:start="53:38" pos:end="53:38">&amp;</operator><name pos:start="53:39" pos:end="53:43">stack</name></expr></argument>, <argument pos:start="53:46" pos:end="53:58"><expr pos:start="53:46" pos:end="53:58"><sizeof pos:start="53:46" pos:end="53:58">sizeof<argument_list pos:start="53:52" pos:end="53:58">(<argument pos:start="53:53" pos:end="53:57"><expr pos:start="53:53" pos:end="53:57"><name pos:start="53:53" pos:end="53:57">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="57:9" pos:end="57:68"><expr pos:start="57:9" pos:end="57:67"><call pos:start="57:9" pos:end="57:67"><name pos:start="57:9" pos:end="57:24">setup_sigcontext</name><argument_list pos:start="57:25" pos:end="57:67">(<argument pos:start="57:26" pos:end="57:48"><expr pos:start="57:26" pos:end="57:48"><operator pos:start="57:26" pos:end="57:26">&amp;</operator><name pos:start="57:27" pos:end="57:48"><name pos:start="57:27" pos:end="57:31">frame</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:35">uc</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:48">tuc_mcontext</name></name></expr></argument>, <argument pos:start="57:51" pos:end="57:53"><expr pos:start="57:51" pos:end="57:53"><name pos:start="57:51" pos:end="57:53">env</name></expr></argument>, <argument pos:start="57:56" pos:end="57:66"><expr pos:start="57:56" pos:end="57:66"><name pos:start="57:56" pos:end="57:66"><name pos:start="57:56" pos:end="57:58">set</name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:63">sig</name><index pos:start="57:64" pos:end="57:66">[<expr pos:start="57:65" pos:end="57:65"><literal type="number" pos:start="57:65" pos:end="57:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="65:9">for<control pos:start="59:12" pos:end="59:46">(<init pos:start="59:13" pos:end="59:18"><expr pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:13">i</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</init> <condition pos:start="59:20" pos:end="59:41"><expr pos:start="59:20" pos:end="59:40"><name pos:start="59:20" pos:end="59:20">i</name> <operator pos:start="59:22" pos:end="59:22">&lt;</operator> <name pos:start="59:24" pos:end="59:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="59:43" pos:end="59:45"><expr pos:start="59:43" pos:end="59:45"><name pos:start="59:43" pos:end="59:43">i</name><operator pos:start="59:44" pos:end="59:45">++</operator></expr></incr>)</control> <block pos:start="59:48" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:25">

            <if_stmt pos:start="61:13" pos:end="63:25"><if pos:start="61:13" pos:end="63:25">if <condition pos:start="61:16" pos:end="61:71">(<expr pos:start="61:17" pos:end="61:70"><call pos:start="61:17" pos:end="61:70"><name pos:start="61:17" pos:end="61:26">__put_user</name><argument_list pos:start="61:27" pos:end="61:70">(<argument pos:start="61:28" pos:end="61:38"><expr pos:start="61:28" pos:end="61:38"><name pos:start="61:28" pos:end="61:38"><name pos:start="61:28" pos:end="61:30">set</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:35">sig</name><index pos:start="61:36" pos:end="61:38">[<expr pos:start="61:37" pos:end="61:37"><name pos:start="61:37" pos:end="61:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:41" pos:end="61:69"><expr pos:start="61:41" pos:end="61:69"><operator pos:start="61:41" pos:end="61:41">&amp;</operator><name pos:start="61:42" pos:end="61:69"><name pos:start="61:42" pos:end="61:46">frame</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:50">uc</name><operator pos:start="61:51" pos:end="61:51">.</operator><name pos:start="61:52" pos:end="61:62">tuc_sigmask</name><operator pos:start="61:63" pos:end="61:63">.</operator><name pos:start="61:64" pos:end="61:66">sig</name><index pos:start="61:67" pos:end="61:69">[<expr pos:start="61:68" pos:end="61:68"><name pos:start="61:68" pos:end="61:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:25"><block_content pos:start="63:17" pos:end="63:25">

                <goto pos:start="63:17" pos:end="63:25">goto <name pos:start="63:22" pos:end="63:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="69:9" pos:end="71:76"><expr pos:start="69:9" pos:end="71:75"><call pos:start="69:9" pos:end="71:75"><name pos:start="69:9" pos:end="69:20">setup_return</name><argument_list pos:start="69:21" pos:end="71:75">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><name pos:start="69:22" pos:end="69:24">env</name></expr></argument>, <argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">ka</name></expr></argument>, <argument pos:start="69:31" pos:end="69:45"><expr pos:start="69:31" pos:end="69:45"><operator pos:start="69:31" pos:end="69:31">&amp;</operator><name pos:start="69:32" pos:end="69:45"><name pos:start="69:32" pos:end="69:36">frame</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:45">retcode</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:57"><expr pos:start="69:48" pos:end="69:57"><name pos:start="69:48" pos:end="69:57">frame_addr</name></expr></argument>, <argument pos:start="69:60" pos:end="69:63"><expr pos:start="69:60" pos:end="69:63"><name pos:start="69:60" pos:end="69:63">usig</name></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:74"><expr pos:start="71:22" pos:end="71:74"><name pos:start="71:22" pos:end="71:31">frame_addr</name> <operator pos:start="71:33" pos:end="71:33">+</operator> <call pos:start="71:35" pos:end="71:74"><name pos:start="71:35" pos:end="71:42">offsetof</name><argument_list pos:start="71:43" pos:end="71:74">(<argument pos:start="71:44" pos:end="71:64"><expr pos:start="71:44" pos:end="71:64">struct <name pos:start="71:51" pos:end="71:64">rt_sigframe_v1</name></expr></argument>, <argument pos:start="71:67" pos:end="71:73"><expr pos:start="71:67" pos:end="71:73"><name pos:start="71:67" pos:end="71:73">retcode</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:11">env</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:17">regs</name><index pos:start="75:18" pos:end="75:20">[<expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">1</literal></expr>]</index></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:32">info_addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:17">regs</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">2</literal></expr>]</index></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:30">uc_addr</name></expr>;</expr_stmt>



<label pos:start="81:1" pos:end="81:4"><name pos:start="81:1" pos:end="81:3">end</name>:</label>

	<expr_stmt pos:start="83:9" pos:end="83:49"><expr pos:start="83:9" pos:end="83:48"><call pos:start="83:9" pos:end="83:48"><name pos:start="83:9" pos:end="83:26">unlock_user_struct</name><argument_list pos:start="83:27" pos:end="83:48">(<argument pos:start="83:28" pos:end="83:32"><expr pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:32">frame</name></expr></argument>, <argument pos:start="83:35" pos:end="83:44"><expr pos:start="83:35" pos:end="83:44"><name pos:start="83:35" pos:end="83:44">frame_addr</name></expr></argument>, <argument pos:start="83:47" pos:end="83:47"><expr pos:start="83:47" pos:end="83:47"><literal type="number" pos:start="83:47" pos:end="83:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
