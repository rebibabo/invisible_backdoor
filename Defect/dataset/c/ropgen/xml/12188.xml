<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12188.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">init_image</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:33">TiffContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint32_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">pal</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="79:5">switch <condition pos:start="11:12" pos:end="11:38">(<expr pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">bpp</name></name> <operator pos:start="11:20" pos:end="11:20">*</operator> <literal type="number" pos:start="11:22" pos:end="11:25">10</literal> <operator pos:start="11:25" pos:end="11:25">+</operator> <name pos:start="11:27" pos:end="11:37"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:37">bppcount</name></name></expr>)</condition> <block pos:start="11:40" pos:end="79:5">{<block_content pos:start="13:5" pos:end="77:35">

    <case pos:start="13:5" pos:end="13:12">case <expr pos:start="13:10" pos:end="13:11"><literal type="number" pos:start="13:10" pos:end="13:11">11</literal></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:31">(<expr pos:start="15:13" pos:end="15:30"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:30"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:30">palette_is_set</name></name></expr>)</condition> <block pos:start="15:33" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:18">

            <expr_stmt pos:start="17:13" pos:end="17:53"><expr pos:start="17:13" pos:end="17:52"><name pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">avctx</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:29">pix_fmt</name></name> <operator pos:start="17:31" pos:end="17:31">=</operator> <name pos:start="17:33" pos:end="17:52">AV_PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        </block_content>}</block></if></if_stmt>

    <case pos:start="23:5" pos:end="23:12">case <expr pos:start="23:10" pos:end="23:11"><literal type="number" pos:start="23:10" pos:end="23:11">21</literal></expr>:</case>

    <case pos:start="25:5" pos:end="25:12">case <expr pos:start="25:10" pos:end="25:11"><literal type="number" pos:start="25:10" pos:end="25:11">41</literal></expr>:</case>

    <case pos:start="27:5" pos:end="27:12">case <expr pos:start="27:10" pos:end="27:11"><literal type="number" pos:start="27:10" pos:end="27:11">81</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">avctx</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:25">pix_fmt</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:43">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:13">case <expr pos:start="33:10" pos:end="33:12"><literal type="number" pos:start="33:10" pos:end="33:12">243</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">avctx</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:25">pix_fmt</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:44">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:13">case <expr pos:start="39:10" pos:end="39:12"><literal type="number" pos:start="39:10" pos:end="39:12">161</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:78"><expr pos:start="41:9" pos:end="41:77"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">avctx</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:25">pix_fmt</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <ternary pos:start="41:29" pos:end="41:77"><condition pos:start="41:29" pos:end="41:35"><expr pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:33">le</name></name></expr> ?</condition><then pos:start="41:37" pos:end="41:55"> <expr pos:start="41:37" pos:end="41:55"><name pos:start="41:37" pos:end="41:55">AV_PIX_FMT_GRAY16LE</name></expr> </then><else pos:start="41:57" pos:end="41:77">: <expr pos:start="41:59" pos:end="41:77"><name pos:start="41:59" pos:end="41:77">AV_PIX_FMT_GRAY16BE</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:13">case <expr pos:start="45:10" pos:end="45:12"><literal type="number" pos:start="45:10" pos:end="45:12">162</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:25">pix_fmt</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:45">AV_PIX_FMT_GRAY8A</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:13">case <expr pos:start="51:10" pos:end="51:12"><literal type="number" pos:start="51:10" pos:end="51:12">324</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">avctx</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:25">pix_fmt</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:43">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:13">case <expr pos:start="57:10" pos:end="57:12"><literal type="number" pos:start="57:10" pos:end="57:12">483</literal></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:76"><expr pos:start="59:9" pos:end="59:75"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">avctx</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:25">pix_fmt</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <ternary pos:start="59:29" pos:end="59:75"><condition pos:start="59:29" pos:end="59:35"><expr pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:33">le</name></name></expr> ?</condition><then pos:start="59:37" pos:end="59:54"> <expr pos:start="59:37" pos:end="59:54"><name pos:start="59:37" pos:end="59:54">AV_PIX_FMT_RGB48LE</name></expr> </then><else pos:start="59:56" pos:end="59:75">: <expr pos:start="59:58" pos:end="59:75"><name pos:start="59:58" pos:end="59:75">AV_PIX_FMT_RGB48BE</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:13">case <expr pos:start="63:10" pos:end="63:12"><literal type="number" pos:start="63:10" pos:end="63:12">644</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:78"><expr pos:start="65:9" pos:end="65:77"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:16">avctx</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:25">pix_fmt</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <ternary pos:start="65:29" pos:end="65:77"><condition pos:start="65:29" pos:end="65:35"><expr pos:start="65:29" pos:end="65:33"><name pos:start="65:29" pos:end="65:33"><name pos:start="65:29" pos:end="65:29">s</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:33">le</name></name></expr> ?</condition><then pos:start="65:37" pos:end="65:55"> <expr pos:start="65:37" pos:end="65:55"><name pos:start="65:37" pos:end="65:55">AV_PIX_FMT_RGBA64LE</name></expr> </then><else pos:start="65:57" pos:end="65:77">: <expr pos:start="65:59" pos:end="65:77"><name pos:start="65:59" pos:end="65:77">AV_PIX_FMT_RGBA64BE</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="75:36"><expr pos:start="71:9" pos:end="75:35"><call pos:start="71:9" pos:end="75:35"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="75:35">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="73:16" pos:end="73:69"><expr pos:start="73:16" pos:end="73:69"><literal type="string" pos:start="73:16" pos:end="73:69">"This format is not supported (bpp=%d, bppcount=%d)\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:21"><expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:21">bpp</name></name></expr></argument>, <argument pos:start="75:24" pos:end="75:34"><expr pos:start="75:24" pos:end="75:34"><name pos:start="75:24" pos:end="75:34"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:34">bppcount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:35">return <expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:69">(<expr pos:start="81:9" pos:end="81:68"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:16">width</name></name> <operator pos:start="81:18" pos:end="81:19">!=</operator> <name pos:start="81:21" pos:end="81:35"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:28">avctx</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:35">width</name></name> <operator pos:start="81:37" pos:end="81:38">||</operator> <name pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:40">s</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:48">height</name></name> <operator pos:start="81:50" pos:end="81:51">!=</operator> <name pos:start="81:53" pos:end="81:68"><name pos:start="81:53" pos:end="81:53">s</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:60">avctx</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:68">height</name></name></expr>)</condition> <block pos:start="81:71" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:62">

        <if_stmt pos:start="83:9" pos:end="85:23"><if pos:start="83:9" pos:end="85:23">if <condition pos:start="83:12" pos:end="83:78">(<expr pos:start="83:13" pos:end="83:77"><operator pos:start="83:13" pos:end="83:13">(</operator><name pos:start="83:14" pos:end="83:16">ret</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:72"><name pos:start="83:20" pos:end="83:38">av_image_check_size</name><argument_list pos:start="83:39" pos:end="83:72">(<argument pos:start="83:40" pos:end="83:47"><expr pos:start="83:40" pos:end="83:47"><name pos:start="83:40" pos:end="83:47"><name pos:start="83:40" pos:end="83:40">s</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:47">width</name></name></expr></argument>, <argument pos:start="83:50" pos:end="83:58"><expr pos:start="83:50" pos:end="83:58"><name pos:start="83:50" pos:end="83:58"><name pos:start="83:50" pos:end="83:50">s</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:58">height</name></name></expr></argument>, <argument pos:start="83:61" pos:end="83:61"><expr pos:start="83:61" pos:end="83:61"><literal type="number" pos:start="83:61" pos:end="83:61">0</literal></expr></argument>, <argument pos:start="83:64" pos:end="83:71"><expr pos:start="83:64" pos:end="83:71"><name pos:start="83:64" pos:end="83:71"><name pos:start="83:64" pos:end="83:64">s</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:71">avctx</name></name></expr></argument>)</argument_list></call><operator pos:start="83:73" pos:end="83:73">)</operator> <operator pos:start="83:75" pos:end="83:75">&lt;</operator> <literal type="number" pos:start="83:77" pos:end="83:77">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:23"><block_content pos:start="85:13" pos:end="85:23">

            <return pos:start="85:13" pos:end="85:23">return <expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:62"><expr pos:start="87:9" pos:end="87:61"><call pos:start="87:9" pos:end="87:61"><name pos:start="87:9" pos:end="87:30">avcodec_set_dimensions</name><argument_list pos:start="87:31" pos:end="87:61">(<argument pos:start="87:32" pos:end="87:39"><expr pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:32">s</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:39">avctx</name></name></expr></argument>, <argument pos:start="87:42" pos:end="87:49"><expr pos:start="87:42" pos:end="87:49"><name pos:start="87:42" pos:end="87:49"><name pos:start="87:42" pos:end="87:42">s</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:49">width</name></name></expr></argument>, <argument pos:start="87:52" pos:end="87:60"><expr pos:start="87:52" pos:end="87:60"><name pos:start="87:52" pos:end="87:60"><name pos:start="87:52" pos:end="87:52">s</name><operator pos:start="87:53" pos:end="87:54">-&gt;</operator><name pos:start="87:55" pos:end="87:60">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:56"><if pos:start="91:5" pos:end="93:56">if <condition pos:start="91:8" pos:end="91:27">(<expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:18">picture</name><operator pos:start="91:19" pos:end="91:19">.</operator><name pos:start="91:20" pos:end="91:23">data</name><index pos:start="91:24" pos:end="91:26">[<expr pos:start="91:25" pos:end="91:25"><literal type="number" pos:start="91:25" pos:end="91:25">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:56"><block_content pos:start="93:9" pos:end="93:56">

        <expr_stmt pos:start="93:9" pos:end="93:56"><expr pos:start="93:9" pos:end="93:55"><call pos:start="93:9" pos:end="93:55"><name pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">avctx</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:32">release_buffer</name></name><argument_list pos:start="93:33" pos:end="93:55">(<argument pos:start="93:34" pos:end="93:41"><expr pos:start="93:34" pos:end="93:41"><name pos:start="93:34" pos:end="93:41"><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:41">avctx</name></name></expr></argument>, <argument pos:start="93:44" pos:end="93:54"><expr pos:start="93:44" pos:end="93:54"><operator pos:start="93:44" pos:end="93:44">&amp;</operator><name pos:start="93:45" pos:end="93:54"><name pos:start="93:45" pos:end="93:45">s</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:54">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:64">(<expr pos:start="95:9" pos:end="95:63"><operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:12">ret</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <call pos:start="95:16" pos:end="95:58"><name pos:start="95:16" pos:end="95:35"><name pos:start="95:16" pos:end="95:16">s</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:23">avctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:35">get_buffer</name></name><argument_list pos:start="95:36" pos:end="95:58">(<argument pos:start="95:37" pos:end="95:44"><expr pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:37">s</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:44">avctx</name></name></expr></argument>, <argument pos:start="95:47" pos:end="95:57"><expr pos:start="95:47" pos:end="95:57"><operator pos:start="95:47" pos:end="95:47">&amp;</operator><name pos:start="95:48" pos:end="95:57"><name pos:start="95:48" pos:end="95:48">s</name><operator pos:start="95:49" pos:end="95:50">-&gt;</operator><name pos:start="95:51" pos:end="95:57">picture</name></name></expr></argument>)</argument_list></call><operator pos:start="95:59" pos:end="95:59">)</operator> <operator pos:start="95:61" pos:end="95:61">&lt;</operator> <literal type="number" pos:start="95:63" pos:end="95:63">0</literal></expr>)</condition> <block pos:start="95:66" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:19">

        <expr_stmt pos:start="97:9" pos:end="97:64"><expr pos:start="97:9" pos:end="97:63"><call pos:start="97:9" pos:end="97:63"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:63">(<argument pos:start="97:16" pos:end="97:23"><expr pos:start="97:16" pos:end="97:23"><name pos:start="97:16" pos:end="97:23"><name pos:start="97:16" pos:end="97:16">s</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:23">avctx</name></name></expr></argument>, <argument pos:start="97:26" pos:end="97:37"><expr pos:start="97:26" pos:end="97:37"><name pos:start="97:26" pos:end="97:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:40" pos:end="97:62"><expr pos:start="97:40" pos:end="97:62"><literal type="string" pos:start="97:40" pos:end="97:62">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="121:5"><if pos:start="103:5" pos:end="121:5">if <condition pos:start="103:8" pos:end="103:45">(<expr pos:start="103:9" pos:end="103:44"><name pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:16">avctx</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:25">pix_fmt</name></name> <operator pos:start="103:27" pos:end="103:28">==</operator> <name pos:start="103:30" pos:end="103:44">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="103:47" pos:end="121:5">{<block_content pos:start="105:9" pos:end="119:9">

        <if_stmt pos:start="105:9" pos:end="119:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:30">(<expr pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:29">palette_is_set</name></name></expr>)</condition> <block pos:start="105:32" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:71">

            <expr_stmt pos:start="107:13" pos:end="107:71"><expr pos:start="107:13" pos:end="107:70"><call pos:start="107:13" pos:end="107:70"><name pos:start="107:13" pos:end="107:18">memcpy</name><argument_list pos:start="107:19" pos:end="107:70">(<argument pos:start="107:20" pos:end="107:37"><expr pos:start="107:20" pos:end="107:37"><name pos:start="107:20" pos:end="107:37"><name pos:start="107:20" pos:end="107:20">s</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:29">picture</name><operator pos:start="107:30" pos:end="107:30">.</operator><name pos:start="107:31" pos:end="107:34">data</name><index pos:start="107:35" pos:end="107:37">[<expr pos:start="107:36" pos:end="107:36"><literal type="number" pos:start="107:36" pos:end="107:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:40" pos:end="107:49"><expr pos:start="107:40" pos:end="107:49"><name pos:start="107:40" pos:end="107:49"><name pos:start="107:40" pos:end="107:40">s</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:49">palette</name></name></expr></argument>, <argument pos:start="107:52" pos:end="107:69"><expr pos:start="107:52" pos:end="107:69"><sizeof pos:start="107:52" pos:end="107:69">sizeof<argument_list pos:start="107:58" pos:end="107:69">(<argument pos:start="107:59" pos:end="107:68"><expr pos:start="107:59" pos:end="107:68"><name pos:start="107:59" pos:end="107:68"><name pos:start="107:59" pos:end="107:59">s</name><operator pos:start="107:60" pos:end="107:61">-&gt;</operator><name pos:start="107:62" pos:end="107:68">palette</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="119:9">else <block pos:start="109:16" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:77">

            <comment type="block" pos:start="111:13" pos:end="111:44">/* make default grayscale pal */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:50"><expr pos:start="113:13" pos:end="113:49"><name pos:start="113:13" pos:end="113:15">pal</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <operator pos:start="113:19" pos:end="113:19">(</operator><name pos:start="113:20" pos:end="113:27">uint32_t</name> <operator pos:start="113:29" pos:end="113:29">*</operator><operator pos:start="113:30" pos:end="113:30">)</operator> <name pos:start="113:32" pos:end="113:49"><name pos:start="113:32" pos:end="113:32">s</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:41">picture</name><operator pos:start="113:42" pos:end="113:42">.</operator><name pos:start="113:43" pos:end="113:46">data</name><index pos:start="113:47" pos:end="113:49">[<expr pos:start="113:48" pos:end="113:48"><literal type="number" pos:start="113:48" pos:end="113:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="115:13" pos:end="117:77">for <control pos:start="115:17" pos:end="115:43">(<init pos:start="115:18" pos:end="115:23"><expr pos:start="115:18" pos:end="115:22"><name pos:start="115:18" pos:end="115:18">i</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr>;</init> <condition pos:start="115:25" pos:end="115:38"><expr pos:start="115:25" pos:end="115:37"><name pos:start="115:25" pos:end="115:25">i</name> <operator pos:start="115:27" pos:end="115:27">&lt;</operator> <literal type="number" pos:start="115:29" pos:end="115:29">1</literal><operator pos:start="115:30" pos:end="115:31">&lt;&lt;</operator><name pos:start="115:32" pos:end="115:37"><name pos:start="115:32" pos:end="115:32">s</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:37">bpp</name></name></expr>;</condition> <incr pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:40">i</name><operator pos:start="115:41" pos:end="115:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:17" pos:end="117:77"><block_content pos:start="117:17" pos:end="117:77">

                <expr_stmt pos:start="117:17" pos:end="117:77"><expr pos:start="117:17" pos:end="117:76"><name pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:19">pal</name><index pos:start="117:20" pos:end="117:22">[<expr pos:start="117:21" pos:end="117:21"><name pos:start="117:21" pos:end="117:21">i</name></expr>]</index></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:29">0xFF</literal> <operator pos:start="117:31" pos:end="117:32">&lt;&lt;</operator> <literal type="number" pos:start="117:34" pos:end="117:35">24</literal> <operator pos:start="117:37" pos:end="117:37">|</operator> <name pos:start="117:39" pos:end="117:39">i</name> <operator pos:start="117:41" pos:end="117:41">*</operator> <literal type="number" pos:start="117:43" pos:end="117:45">255</literal> <operator pos:start="117:47" pos:end="117:47">/</operator> <operator pos:start="117:49" pos:end="117:49">(</operator><operator pos:start="117:50" pos:end="117:50">(</operator><literal type="number" pos:start="117:51" pos:end="117:51">1</literal><operator pos:start="117:52" pos:end="117:53">&lt;&lt;</operator><name pos:start="117:54" pos:end="117:59"><name pos:start="117:54" pos:end="117:54">s</name><operator pos:start="117:55" pos:end="117:56">-&gt;</operator><name pos:start="117:57" pos:end="117:59">bpp</name></name><operator pos:start="117:60" pos:end="117:60">)</operator> <operator pos:start="117:62" pos:end="117:62">-</operator> <literal type="number" pos:start="117:64" pos:end="117:64">1</literal><operator pos:start="117:65" pos:end="117:65">)</operator> <operator pos:start="117:67" pos:end="117:67">*</operator> <literal type="number" pos:start="117:69" pos:end="117:76">0x010101</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
