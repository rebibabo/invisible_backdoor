<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18407.c" pos:tabs="8"><function pos:start="1:1" pos:end="437:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qpel_motion_search</name><parameter_list pos:start="1:30" pos:end="7:50">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

				  <parameter pos:start="3:35" pos:end="3:45"><decl pos:start="3:35" pos:end="3:45"><type pos:start="3:35" pos:end="3:45"><name pos:start="3:35" pos:end="3:37">int</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:45">mx_ptr</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><name pos:start="3:48" pos:end="3:50">int</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:58">my_ptr</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:68"><decl pos:start="3:61" pos:end="3:68"><type pos:start="3:61" pos:end="3:68"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:68">dmin</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:47"><decl pos:start="5:35" pos:end="5:47"><type pos:start="5:35" pos:end="5:47"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:47">src_index</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:62"><decl pos:start="5:50" pos:end="5:62"><type pos:start="5:50" pos:end="5:62"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:62">ref_index</name></decl></parameter>,                                  

                                  <parameter pos:start="7:35" pos:end="7:42"><decl pos:start="7:35" pos:end="7:42"><type pos:start="7:35" pos:end="7:42"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:42">size</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:49"><decl pos:start="7:45" pos:end="7:49"><type pos:start="7:45" pos:end="7:49"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:49">h</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="437:1">{<block_content pos:start="11:5" pos:end="435:16">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:20">MotionEstContext</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier> <specifier pos:start="11:24" pos:end="11:28">const</specifier></type> <name pos:start="11:30" pos:end="11:30">c</name><init pos:start="11:31" pos:end="11:38">= <expr pos:start="11:33" pos:end="11:38"><operator pos:start="11:33" pos:end="11:33">&amp;</operator><name pos:start="11:34" pos:end="11:38"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:38">me</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:16">mx</name> <init pos:start="13:18" pos:end="13:26">= <expr pos:start="13:20" pos:end="13:26"><operator pos:start="13:20" pos:end="13:20">*</operator><name pos:start="13:21" pos:end="13:26">mx_ptr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:16">my</name> <init pos:start="15:18" pos:end="15:26">= <expr pos:start="15:20" pos:end="15:26"><operator pos:start="15:20" pos:end="15:20">*</operator><name pos:start="15:21" pos:end="15:26">my_ptr</name></expr></init></decl>;</decl_stmt>   

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:28">penalty_factor</name><init pos:start="17:29" pos:end="17:51">= <expr pos:start="17:31" pos:end="17:51"><name pos:start="17:31" pos:end="17:51"><name pos:start="17:31" pos:end="17:31">c</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:51">sub_penalty_factor</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:48"><decl pos:start="19:5" pos:end="19:47"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:28">map_generation</name><init pos:start="19:29" pos:end="19:47">= <expr pos:start="19:31" pos:end="19:47"><name pos:start="19:31" pos:end="19:47"><name pos:start="19:31" pos:end="19:31">c</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:47">map_generation</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:58"><decl pos:start="21:5" pos:end="21:57"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:28">subpel_quality</name><init pos:start="21:29" pos:end="21:57">= <expr pos:start="21:31" pos:end="21:57"><name pos:start="21:31" pos:end="21:57"><name pos:start="21:31" pos:end="21:31">c</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:38">avctx</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:57">me_subpel_quality</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">uint32_t</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:17">map</name><init pos:start="23:18" pos:end="23:25">= <expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:20">c</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:25">map</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:15">me_cmp_func</name></type> <name pos:start="25:17" pos:end="25:20">cmpf</name></decl>, <decl pos:start="25:23" pos:end="25:33"><type ref="prev" pos:start="25:5" pos:end="25:15"/><name pos:start="25:23" pos:end="25:33">chroma_cmpf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:40"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:15">me_cmp_func</name></type> <name pos:start="27:17" pos:end="27:23">cmp_sub</name></decl>, <decl pos:start="27:26" pos:end="27:39"><type ref="prev" pos:start="27:5" pos:end="27:15"/><name pos:start="27:26" pos:end="27:39">chroma_cmp_sub</name></decl>;</decl_stmt>



    <decl_stmt pos:start="31:5" pos:end="33:28"><decl pos:start="31:5" pos:end="33:27"><type pos:start="31:5" pos:end="33:7"><name pos:start="31:5" pos:end="31:15">LOAD_COMMON</name>

    <name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:13">flags</name><init pos:start="33:14" pos:end="33:27">= <expr pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:16">c</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:27">sub_flags</name></name></expr></init></decl>;</decl_stmt>

    

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:8">cmpf</name><operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:29"><name pos:start="37:11" pos:end="37:11">s</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">dsp</name><operator pos:start="37:17" pos:end="37:17">.</operator><name pos:start="37:18" pos:end="37:23">me_cmp</name><index pos:start="37:24" pos:end="37:29">[<expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">size</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:15">chroma_cmpf</name><operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:38"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:23">dsp</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:30">me_cmp</name><index pos:start="39:31" pos:end="39:38">[<expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:35">size</name><operator pos:start="39:36" pos:end="39:36">+</operator><literal type="number" pos:start="39:37" pos:end="39:37">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="39:41" pos:end="39:57">//factorize FIXME</comment>

 <comment type="line" pos:start="41:2" pos:end="41:18">//FIXME factorize</comment>



    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:11">cmp_sub</name><operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:36"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:19">dsp</name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:30">me_sub_cmp</name><index pos:start="45:31" pos:end="45:36">[<expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">size</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:18">chroma_cmp_sub</name><operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:45"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:26">dsp</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:37">me_sub_cmp</name><index pos:start="47:38" pos:end="47:45">[<expr pos:start="47:39" pos:end="47:44"><name pos:start="47:39" pos:end="47:42">size</name><operator pos:start="47:43" pos:end="47:43">+</operator><literal type="number" pos:start="47:44" pos:end="47:44">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if<condition pos:start="51:7" pos:end="51:15">(<expr pos:start="51:8" pos:end="51:14"><name pos:start="51:8" pos:end="51:14"><name pos:start="51:8" pos:end="51:8">c</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:14">skip</name></name></expr>)</condition><block pos:start="51:16" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:20"> <comment type="line" pos:start="51:18" pos:end="51:52">//FIXME somehow move up (benchmark)</comment>

        <expr_stmt pos:start="53:9" pos:end="53:20"><expr pos:start="53:9" pos:end="53:19"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:15">mx_ptr</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:15">my_ptr</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">dmin</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

        

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if<condition pos:start="63:7" pos:end="63:48">(<expr pos:start="63:8" pos:end="63:47"><name pos:start="63:8" pos:end="63:23"><name pos:start="63:8" pos:end="63:8">c</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:15">avctx</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:23">me_cmp</name></name> <operator pos:start="63:25" pos:end="63:26">!=</operator> <name pos:start="63:28" pos:end="63:47"><name pos:start="63:28" pos:end="63:28">c</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:35">avctx</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:47">me_sub_cmp</name></name></expr>)</condition><block pos:start="63:49" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:91">

        <expr_stmt pos:start="65:9" pos:end="65:98"><expr pos:start="65:9" pos:end="65:97"><name pos:start="65:9" pos:end="65:12">dmin</name><operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:97"><name pos:start="65:15" pos:end="65:17">cmp</name><argument_list pos:start="65:18" pos:end="65:97">(<argument pos:start="65:19" pos:end="65:19"><expr pos:start="65:19" pos:end="65:19"><name pos:start="65:19" pos:end="65:19">s</name></expr></argument>, <argument pos:start="65:22" pos:end="65:23"><expr pos:start="65:22" pos:end="65:23"><name pos:start="65:22" pos:end="65:23">mx</name></expr></argument>, <argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><name pos:start="65:26" pos:end="65:27">my</name></expr></argument>, <argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><literal type="number" pos:start="65:30" pos:end="65:30">0</literal></expr></argument>, <argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">0</literal></expr></argument>, <argument pos:start="65:36" pos:end="65:39"><expr pos:start="65:36" pos:end="65:39"><name pos:start="65:36" pos:end="65:39">size</name></expr></argument>, <argument pos:start="65:42" pos:end="65:42"><expr pos:start="65:42" pos:end="65:42"><name pos:start="65:42" pos:end="65:42">h</name></expr></argument>, <argument pos:start="65:45" pos:end="65:53"><expr pos:start="65:45" pos:end="65:53"><name pos:start="65:45" pos:end="65:53">ref_index</name></expr></argument>, <argument pos:start="65:56" pos:end="65:64"><expr pos:start="65:56" pos:end="65:64"><name pos:start="65:56" pos:end="65:64">src_index</name></expr></argument>, <argument pos:start="65:67" pos:end="65:73"><expr pos:start="65:67" pos:end="65:73"><name pos:start="65:67" pos:end="65:73">cmp_sub</name></expr></argument>, <argument pos:start="65:76" pos:end="65:89"><expr pos:start="65:76" pos:end="65:89"><name pos:start="65:76" pos:end="65:89">chroma_cmp_sub</name></expr></argument>, <argument pos:start="65:92" pos:end="65:96"><expr pos:start="65:92" pos:end="65:96"><name pos:start="65:92" pos:end="65:96">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:91"><if pos:start="67:9" pos:end="69:91">if<condition pos:start="67:11" pos:end="67:30">(<expr pos:start="67:12" pos:end="67:29"><name pos:start="67:12" pos:end="67:13">mx</name> <operator pos:start="67:15" pos:end="67:16">||</operator> <name pos:start="67:18" pos:end="67:19">my</name> <operator pos:start="67:21" pos:end="67:22">||</operator> <name pos:start="67:24" pos:end="67:27">size</name><operator pos:start="67:28" pos:end="67:28">&gt;</operator><literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:91"><block_content pos:start="69:13" pos:end="69:91">

            <expr_stmt pos:start="69:13" pos:end="69:91"><expr pos:start="69:13" pos:end="69:90"><name pos:start="69:13" pos:end="69:16">dmin</name> <operator pos:start="69:18" pos:end="69:19">+=</operator> <operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:46"><name pos:start="69:22" pos:end="69:31">mv_penalty</name><index pos:start="69:32" pos:end="69:46">[<expr pos:start="69:33" pos:end="69:45"><literal type="number" pos:start="69:33" pos:end="69:33">4</literal><operator pos:start="69:34" pos:end="69:34">*</operator><name pos:start="69:35" pos:end="69:36">mx</name> <operator pos:start="69:38" pos:end="69:38">-</operator> <name pos:start="69:40" pos:end="69:45">pred_x</name></expr>]</index></name> <operator pos:start="69:48" pos:end="69:48">+</operator> <name pos:start="69:50" pos:end="69:74"><name pos:start="69:50" pos:end="69:59">mv_penalty</name><index pos:start="69:60" pos:end="69:74">[<expr pos:start="69:61" pos:end="69:73"><literal type="number" pos:start="69:61" pos:end="69:61">4</literal><operator pos:start="69:62" pos:end="69:62">*</operator><name pos:start="69:63" pos:end="69:64">my</name> <operator pos:start="69:66" pos:end="69:66">-</operator> <name pos:start="69:68" pos:end="69:73">pred_y</name></expr>]</index></name><operator pos:start="69:75" pos:end="69:75">)</operator><operator pos:start="69:76" pos:end="69:76">*</operator><name pos:start="69:77" pos:end="69:90">penalty_factor</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

        

    <if_stmt pos:start="75:5" pos:end="431:5"><if pos:start="75:5" pos:end="425:5">if <condition pos:start="75:8" pos:end="77:31">(<expr pos:start="75:9" pos:end="77:30"><name pos:start="75:9" pos:end="75:10">mx</name> <operator pos:start="75:12" pos:end="75:12">&gt;</operator> <name pos:start="75:14" pos:end="75:17">xmin</name> <operator pos:start="75:19" pos:end="75:20">&amp;&amp;</operator> <name pos:start="75:22" pos:end="77:12"><name pos:start="75:22" pos:end="75:23">mx</name> <argument_list type="generic" pos:start="75:25" pos:end="77:12">&lt; <argument pos:start="75:27" pos:end="77:10"><expr pos:start="75:27" pos:end="77:10"><name pos:start="75:27" pos:end="75:30">xmax</name> <operator pos:start="75:32" pos:end="75:33">&amp;&amp;</operator> 

        <name pos:start="77:9" pos:end="77:10">my</name></expr></argument> &gt;</argument_list></name> <name pos:start="77:14" pos:end="77:17">ymin</name> <operator pos:start="77:19" pos:end="77:20">&amp;&amp;</operator> <name pos:start="77:22" pos:end="77:23">my</name> <operator pos:start="77:25" pos:end="77:25">&lt;</operator> <name pos:start="77:27" pos:end="77:30">ymax</name></expr>)</condition> <block pos:start="77:33" pos:end="425:5">{<block_content pos:start="79:9" pos:end="423:21">

        <decl_stmt pos:start="79:9" pos:end="79:29"><decl pos:start="79:9" pos:end="79:19"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:14">bx</name><init pos:start="79:15" pos:end="79:19">=<expr pos:start="79:16" pos:end="79:19"><literal type="number" pos:start="79:16" pos:end="79:16">4</literal><operator pos:start="79:17" pos:end="79:17">*</operator><name pos:start="79:18" pos:end="79:19">mx</name></expr></init></decl>, <decl pos:start="79:22" pos:end="79:28"><type ref="prev" pos:start="79:9" pos:end="79:11"/><name pos:start="79:22" pos:end="79:23">by</name><init pos:start="79:24" pos:end="79:28">=<expr pos:start="79:25" pos:end="79:28"><literal type="number" pos:start="79:25" pos:end="79:25">4</literal><operator pos:start="79:26" pos:end="79:26">*</operator><name pos:start="79:27" pos:end="79:28">my</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:20"><decl pos:start="81:9" pos:end="81:19"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:13">d</name><init pos:start="81:14" pos:end="81:19">= <expr pos:start="81:16" pos:end="81:19"><name pos:start="81:16" pos:end="81:19">dmin</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:22"><decl pos:start="83:9" pos:end="83:13"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:13">i</name></decl>, <decl pos:start="83:16" pos:end="83:17"><type ref="prev" pos:start="83:9" pos:end="83:11"/><name pos:start="83:16" pos:end="83:17">nx</name></decl>, <decl pos:start="83:20" pos:end="83:21"><type ref="prev" pos:start="83:9" pos:end="83:11"/><name pos:start="83:20" pos:end="83:21">ny</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:49"><decl pos:start="85:9" pos:end="85:48"><type pos:start="85:9" pos:end="85:17"><specifier pos:start="85:9" pos:end="85:13">const</specifier> <name pos:start="85:15" pos:end="85:17">int</name></type> <name pos:start="85:19" pos:end="85:23">index</name><init pos:start="85:24" pos:end="85:48">= <expr pos:start="85:26" pos:end="85:48"><operator pos:start="85:26" pos:end="85:26">(</operator><name pos:start="85:27" pos:end="85:28">my</name><operator pos:start="85:29" pos:end="85:30">&lt;&lt;</operator><name pos:start="85:31" pos:end="85:42">ME_MAP_SHIFT</name><operator pos:start="85:43" pos:end="85:43">)</operator> <operator pos:start="85:45" pos:end="85:45">+</operator> <name pos:start="85:47" pos:end="85:48">mx</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:76"><decl pos:start="87:9" pos:end="87:75"><type pos:start="87:9" pos:end="87:17"><specifier pos:start="87:9" pos:end="87:13">const</specifier> <name pos:start="87:15" pos:end="87:17">int</name></type> <name pos:start="87:19" pos:end="87:19">t</name><init pos:start="87:20" pos:end="87:75">= <expr pos:start="87:22" pos:end="87:75"><name pos:start="87:22" pos:end="87:75"><name pos:start="87:22" pos:end="87:30">score_map</name><index pos:start="87:31" pos:end="87:75">[<expr pos:start="87:32" pos:end="87:74"><operator pos:start="87:32" pos:end="87:32">(</operator><name pos:start="87:33" pos:end="87:37">index</name><operator pos:start="87:38" pos:end="87:38">-</operator><operator pos:start="87:39" pos:end="87:39">(</operator><literal type="number" pos:start="87:40" pos:end="87:40">1</literal><operator pos:start="87:41" pos:end="87:42">&lt;&lt;</operator><name pos:start="87:43" pos:end="87:54">ME_MAP_SHIFT</name><operator pos:start="87:55" pos:end="87:55">)</operator>  <operator pos:start="87:58" pos:end="87:58">)</operator><operator pos:start="87:59" pos:end="87:59">&amp;</operator><operator pos:start="87:60" pos:end="87:60">(</operator><name pos:start="87:61" pos:end="87:71">ME_MAP_SIZE</name><operator pos:start="87:72" pos:end="87:72">-</operator><literal type="number" pos:start="87:73" pos:end="87:73">1</literal><operator pos:start="87:74" pos:end="87:74">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:76"><decl pos:start="89:9" pos:end="89:75"><type pos:start="89:9" pos:end="89:17"><specifier pos:start="89:9" pos:end="89:13">const</specifier> <name pos:start="89:15" pos:end="89:17">int</name></type> <name pos:start="89:19" pos:end="89:19">l</name><init pos:start="89:20" pos:end="89:75">= <expr pos:start="89:22" pos:end="89:75"><name pos:start="89:22" pos:end="89:75"><name pos:start="89:22" pos:end="89:30">score_map</name><index pos:start="89:31" pos:end="89:75">[<expr pos:start="89:32" pos:end="89:74"><operator pos:start="89:32" pos:end="89:32">(</operator><name pos:start="89:33" pos:end="89:37">index</name><operator pos:start="89:38" pos:end="89:38">-</operator> <literal type="number" pos:start="89:40" pos:end="89:40">1</literal>                 <operator pos:start="89:58" pos:end="89:58">)</operator><operator pos:start="89:59" pos:end="89:59">&amp;</operator><operator pos:start="89:60" pos:end="89:60">(</operator><name pos:start="89:61" pos:end="89:71">ME_MAP_SIZE</name><operator pos:start="89:72" pos:end="89:72">-</operator><literal type="number" pos:start="89:73" pos:end="89:73">1</literal><operator pos:start="89:74" pos:end="89:74">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:76"><decl pos:start="91:9" pos:end="91:75"><type pos:start="91:9" pos:end="91:17"><specifier pos:start="91:9" pos:end="91:13">const</specifier> <name pos:start="91:15" pos:end="91:17">int</name></type> <name pos:start="91:19" pos:end="91:19">r</name><init pos:start="91:20" pos:end="91:75">= <expr pos:start="91:22" pos:end="91:75"><name pos:start="91:22" pos:end="91:75"><name pos:start="91:22" pos:end="91:30">score_map</name><index pos:start="91:31" pos:end="91:75">[<expr pos:start="91:32" pos:end="91:74"><operator pos:start="91:32" pos:end="91:32">(</operator><name pos:start="91:33" pos:end="91:37">index</name><operator pos:start="91:38" pos:end="91:38">+</operator> <literal type="number" pos:start="91:40" pos:end="91:40">1</literal>                 <operator pos:start="91:58" pos:end="91:58">)</operator><operator pos:start="91:59" pos:end="91:59">&amp;</operator><operator pos:start="91:60" pos:end="91:60">(</operator><name pos:start="91:61" pos:end="91:71">ME_MAP_SIZE</name><operator pos:start="91:72" pos:end="91:72">-</operator><literal type="number" pos:start="91:73" pos:end="91:73">1</literal><operator pos:start="91:74" pos:end="91:74">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:76"><decl pos:start="93:9" pos:end="93:75"><type pos:start="93:9" pos:end="93:17"><specifier pos:start="93:9" pos:end="93:13">const</specifier> <name pos:start="93:15" pos:end="93:17">int</name></type> <name pos:start="93:19" pos:end="93:19">b</name><init pos:start="93:20" pos:end="93:75">= <expr pos:start="93:22" pos:end="93:75"><name pos:start="93:22" pos:end="93:75"><name pos:start="93:22" pos:end="93:30">score_map</name><index pos:start="93:31" pos:end="93:75">[<expr pos:start="93:32" pos:end="93:74"><operator pos:start="93:32" pos:end="93:32">(</operator><name pos:start="93:33" pos:end="93:37">index</name><operator pos:start="93:38" pos:end="93:38">+</operator><operator pos:start="93:39" pos:end="93:39">(</operator><literal type="number" pos:start="93:40" pos:end="93:40">1</literal><operator pos:start="93:41" pos:end="93:42">&lt;&lt;</operator><name pos:start="93:43" pos:end="93:54">ME_MAP_SHIFT</name><operator pos:start="93:55" pos:end="93:55">)</operator>  <operator pos:start="93:58" pos:end="93:58">)</operator><operator pos:start="93:59" pos:end="93:59">&amp;</operator><operator pos:start="93:60" pos:end="93:60">(</operator><name pos:start="93:61" pos:end="93:71">ME_MAP_SIZE</name><operator pos:start="93:72" pos:end="93:72">-</operator><literal type="number" pos:start="93:73" pos:end="93:73">1</literal><operator pos:start="93:74" pos:end="93:74">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:76"><decl pos:start="95:9" pos:end="95:75"><type pos:start="95:9" pos:end="95:17"><specifier pos:start="95:9" pos:end="95:13">const</specifier> <name pos:start="95:15" pos:end="95:17">int</name></type> <name pos:start="95:19" pos:end="95:19">c</name><init pos:start="95:20" pos:end="95:75">= <expr pos:start="95:22" pos:end="95:75"><name pos:start="95:22" pos:end="95:75"><name pos:start="95:22" pos:end="95:30">score_map</name><index pos:start="95:31" pos:end="95:75">[<expr pos:start="95:32" pos:end="95:74"><operator pos:start="95:32" pos:end="95:32">(</operator><name pos:start="95:33" pos:end="95:37">index</name>                    <operator pos:start="95:58" pos:end="95:58">)</operator><operator pos:start="95:59" pos:end="95:59">&amp;</operator><operator pos:start="95:60" pos:end="95:60">(</operator><name pos:start="95:61" pos:end="95:71">ME_MAP_SIZE</name><operator pos:start="95:72" pos:end="95:72">-</operator><literal type="number" pos:start="95:73" pos:end="95:73">1</literal><operator pos:start="95:74" pos:end="95:74">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:20"><decl pos:start="97:9" pos:end="97:19"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:16">best</name><index pos:start="97:17" pos:end="97:19">[<expr pos:start="97:18" pos:end="97:18"><literal type="number" pos:start="97:18" pos:end="97:18">8</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:27"><decl pos:start="99:9" pos:end="99:26"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:20">best_pos</name><index pos:start="99:21" pos:end="99:23">[<expr pos:start="99:22" pos:end="99:22"><literal type="number" pos:start="99:22" pos:end="99:22">8</literal></expr>]</index><index pos:start="99:24" pos:end="99:26">[<expr pos:start="99:25" pos:end="99:25"><literal type="number" pos:start="99:25" pos:end="99:25">2</literal></expr>]</index></name></decl>;</decl_stmt>

        

        <expr_stmt pos:start="103:9" pos:end="106:0"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:14">memset</name><argument_list pos:start="103:15" pos:end="103:39">(<argument pos:start="103:16" pos:end="103:19"><expr pos:start="103:16" pos:end="103:19"><name pos:start="103:16" pos:end="103:19">best</name></expr></argument>, <argument pos:start="103:22" pos:end="103:23"><expr pos:start="103:22" pos:end="103:23"><literal type="number" pos:start="103:22" pos:end="103:23">64</literal></expr></argument>, <argument pos:start="103:26" pos:end="103:38"><expr pos:start="103:26" pos:end="103:38"><sizeof pos:start="103:26" pos:end="103:36">sizeof<argument_list pos:start="103:32" pos:end="103:36">(<argument pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="103:37" pos:end="103:37">*</operator><literal type="number" pos:start="103:38" pos:end="103:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="105:1" pos:end="105:5">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:5"><literal type="number" pos:start="105:5" pos:end="105:5">1</literal></expr></cpp:if>

        <if_stmt pos:start="107:9" pos:end="263:9"><if pos:start="107:9" pos:end="173:9">if<condition pos:start="107:11" pos:end="107:29">(<expr pos:start="107:12" pos:end="107:28"><name pos:start="107:12" pos:end="107:25"><name pos:start="107:12" pos:end="107:12">s</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:16">me</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:25">dia_size</name></name><operator pos:start="107:26" pos:end="107:27">&gt;=</operator><literal type="number" pos:start="107:28" pos:end="107:28">2</literal></expr>)</condition><block pos:start="107:30" pos:end="173:9">{<block_content pos:start="109:13" pos:end="171:13">        

            <decl_stmt pos:start="109:13" pos:end="109:81"><decl pos:start="109:13" pos:end="109:80"><type pos:start="109:13" pos:end="109:21"><specifier pos:start="109:13" pos:end="109:17">const</specifier> <name pos:start="109:19" pos:end="109:21">int</name></type> <name pos:start="109:23" pos:end="109:24">tl</name><init pos:start="109:25" pos:end="109:80">= <expr pos:start="109:27" pos:end="109:80"><name pos:start="109:27" pos:end="109:80"><name pos:start="109:27" pos:end="109:35">score_map</name><index pos:start="109:36" pos:end="109:80">[<expr pos:start="109:37" pos:end="109:79"><operator pos:start="109:37" pos:end="109:37">(</operator><name pos:start="109:38" pos:end="109:42">index</name><operator pos:start="109:43" pos:end="109:43">-</operator><operator pos:start="109:44" pos:end="109:44">(</operator><literal type="number" pos:start="109:45" pos:end="109:45">1</literal><operator pos:start="109:46" pos:end="109:47">&lt;&lt;</operator><name pos:start="109:48" pos:end="109:59">ME_MAP_SHIFT</name><operator pos:start="109:60" pos:end="109:60">)</operator><operator pos:start="109:61" pos:end="109:61">-</operator><literal type="number" pos:start="109:62" pos:end="109:62">1</literal><operator pos:start="109:63" pos:end="109:63">)</operator><operator pos:start="109:64" pos:end="109:64">&amp;</operator><operator pos:start="109:65" pos:end="109:65">(</operator><name pos:start="109:66" pos:end="109:76">ME_MAP_SIZE</name><operator pos:start="109:77" pos:end="109:77">-</operator><literal type="number" pos:start="109:78" pos:end="109:78">1</literal><operator pos:start="109:79" pos:end="109:79">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="111:13" pos:end="111:81"><decl pos:start="111:13" pos:end="111:80"><type pos:start="111:13" pos:end="111:21"><specifier pos:start="111:13" pos:end="111:17">const</specifier> <name pos:start="111:19" pos:end="111:21">int</name></type> <name pos:start="111:23" pos:end="111:24">bl</name><init pos:start="111:25" pos:end="111:80">= <expr pos:start="111:27" pos:end="111:80"><name pos:start="111:27" pos:end="111:80"><name pos:start="111:27" pos:end="111:35">score_map</name><index pos:start="111:36" pos:end="111:80">[<expr pos:start="111:37" pos:end="111:79"><operator pos:start="111:37" pos:end="111:37">(</operator><name pos:start="111:38" pos:end="111:42">index</name><operator pos:start="111:43" pos:end="111:43">+</operator><operator pos:start="111:44" pos:end="111:44">(</operator><literal type="number" pos:start="111:45" pos:end="111:45">1</literal><operator pos:start="111:46" pos:end="111:47">&lt;&lt;</operator><name pos:start="111:48" pos:end="111:59">ME_MAP_SHIFT</name><operator pos:start="111:60" pos:end="111:60">)</operator><operator pos:start="111:61" pos:end="111:61">-</operator><literal type="number" pos:start="111:62" pos:end="111:62">1</literal><operator pos:start="111:63" pos:end="111:63">)</operator><operator pos:start="111:64" pos:end="111:64">&amp;</operator><operator pos:start="111:65" pos:end="111:65">(</operator><name pos:start="111:66" pos:end="111:76">ME_MAP_SIZE</name><operator pos:start="111:77" pos:end="111:77">-</operator><literal type="number" pos:start="111:78" pos:end="111:78">1</literal><operator pos:start="111:79" pos:end="111:79">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="113:13" pos:end="113:81"><decl pos:start="113:13" pos:end="113:80"><type pos:start="113:13" pos:end="113:21"><specifier pos:start="113:13" pos:end="113:17">const</specifier> <name pos:start="113:19" pos:end="113:21">int</name></type> <name pos:start="113:23" pos:end="113:24">tr</name><init pos:start="113:25" pos:end="113:80">= <expr pos:start="113:27" pos:end="113:80"><name pos:start="113:27" pos:end="113:80"><name pos:start="113:27" pos:end="113:35">score_map</name><index pos:start="113:36" pos:end="113:80">[<expr pos:start="113:37" pos:end="113:79"><operator pos:start="113:37" pos:end="113:37">(</operator><name pos:start="113:38" pos:end="113:42">index</name><operator pos:start="113:43" pos:end="113:43">-</operator><operator pos:start="113:44" pos:end="113:44">(</operator><literal type="number" pos:start="113:45" pos:end="113:45">1</literal><operator pos:start="113:46" pos:end="113:47">&lt;&lt;</operator><name pos:start="113:48" pos:end="113:59">ME_MAP_SHIFT</name><operator pos:start="113:60" pos:end="113:60">)</operator><operator pos:start="113:61" pos:end="113:61">+</operator><literal type="number" pos:start="113:62" pos:end="113:62">1</literal><operator pos:start="113:63" pos:end="113:63">)</operator><operator pos:start="113:64" pos:end="113:64">&amp;</operator><operator pos:start="113:65" pos:end="113:65">(</operator><name pos:start="113:66" pos:end="113:76">ME_MAP_SIZE</name><operator pos:start="113:77" pos:end="113:77">-</operator><literal type="number" pos:start="113:78" pos:end="113:78">1</literal><operator pos:start="113:79" pos:end="113:79">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="115:13" pos:end="115:81"><decl pos:start="115:13" pos:end="115:80"><type pos:start="115:13" pos:end="115:21"><specifier pos:start="115:13" pos:end="115:17">const</specifier> <name pos:start="115:19" pos:end="115:21">int</name></type> <name pos:start="115:23" pos:end="115:24">br</name><init pos:start="115:25" pos:end="115:80">= <expr pos:start="115:27" pos:end="115:80"><name pos:start="115:27" pos:end="115:80"><name pos:start="115:27" pos:end="115:35">score_map</name><index pos:start="115:36" pos:end="115:80">[<expr pos:start="115:37" pos:end="115:79"><operator pos:start="115:37" pos:end="115:37">(</operator><name pos:start="115:38" pos:end="115:42">index</name><operator pos:start="115:43" pos:end="115:43">+</operator><operator pos:start="115:44" pos:end="115:44">(</operator><literal type="number" pos:start="115:45" pos:end="115:45">1</literal><operator pos:start="115:46" pos:end="115:47">&lt;&lt;</operator><name pos:start="115:48" pos:end="115:59">ME_MAP_SHIFT</name><operator pos:start="115:60" pos:end="115:60">)</operator><operator pos:start="115:61" pos:end="115:61">+</operator><literal type="number" pos:start="115:62" pos:end="115:62">1</literal><operator pos:start="115:63" pos:end="115:63">)</operator><operator pos:start="115:64" pos:end="115:64">&amp;</operator><operator pos:start="115:65" pos:end="115:65">(</operator><name pos:start="115:66" pos:end="115:76">ME_MAP_SIZE</name><operator pos:start="115:77" pos:end="115:77">-</operator><literal type="number" pos:start="115:78" pos:end="115:78">1</literal><operator pos:start="115:79" pos:end="115:79">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="119:13" pos:end="171:13">for<control pos:start="119:16" pos:end="119:38">(<init pos:start="119:17" pos:end="119:23"><expr pos:start="119:17" pos:end="119:22"><name pos:start="119:17" pos:end="119:18">ny</name><operator pos:start="119:19" pos:end="119:19">=</operator> <operator pos:start="119:21" pos:end="119:21">-</operator><literal type="number" pos:start="119:22" pos:end="119:22">3</literal></expr>;</init> <condition pos:start="119:25" pos:end="119:32"><expr pos:start="119:25" pos:end="119:31"><name pos:start="119:25" pos:end="119:26">ny</name> <operator pos:start="119:28" pos:end="119:29">&lt;=</operator> <literal type="number" pos:start="119:31" pos:end="119:31">3</literal></expr>;</condition> <incr pos:start="119:34" pos:end="119:37"><expr pos:start="119:34" pos:end="119:37"><name pos:start="119:34" pos:end="119:35">ny</name><operator pos:start="119:36" pos:end="119:37">++</operator></expr></incr>)</control><block pos:start="119:39" pos:end="171:13">{<block_content pos:start="121:17" pos:end="169:17">

                <for pos:start="121:17" pos:end="169:17">for<control pos:start="121:20" pos:end="121:42">(<init pos:start="121:21" pos:end="121:27"><expr pos:start="121:21" pos:end="121:26"><name pos:start="121:21" pos:end="121:22">nx</name><operator pos:start="121:23" pos:end="121:23">=</operator> <operator pos:start="121:25" pos:end="121:25">-</operator><literal type="number" pos:start="121:26" pos:end="121:26">3</literal></expr>;</init> <condition pos:start="121:29" pos:end="121:36"><expr pos:start="121:29" pos:end="121:35"><name pos:start="121:29" pos:end="121:30">nx</name> <operator pos:start="121:32" pos:end="121:33">&lt;=</operator> <literal type="number" pos:start="121:35" pos:end="121:35">3</literal></expr>;</condition> <incr pos:start="121:38" pos:end="121:41"><expr pos:start="121:38" pos:end="121:41"><name pos:start="121:38" pos:end="121:39">nx</name><operator pos:start="121:40" pos:end="121:41">++</operator></expr></incr>)</control><block pos:start="121:43" pos:end="169:17">{<block_content pos:start="123:21" pos:end="167:21">

                    <decl_stmt pos:start="123:21" pos:end="123:78"><decl pos:start="123:21" pos:end="123:77"><type pos:start="123:21" pos:end="123:29"><specifier pos:start="123:21" pos:end="123:25">const</specifier> <name pos:start="123:27" pos:end="123:29">int</name></type> <name pos:start="123:31" pos:end="123:32">t2</name><init pos:start="123:33" pos:end="123:77">= <expr pos:start="123:35" pos:end="123:77"><name pos:start="123:35" pos:end="123:36">nx</name><operator pos:start="123:37" pos:end="123:37">*</operator><name pos:start="123:38" pos:end="123:39">nx</name><operator pos:start="123:40" pos:end="123:40">*</operator><operator pos:start="123:41" pos:end="123:41">(</operator><name pos:start="123:42" pos:end="123:43">tr</name> <operator pos:start="123:45" pos:end="123:45">+</operator> <name pos:start="123:47" pos:end="123:48">tl</name> <operator pos:start="123:50" pos:end="123:50">-</operator> <literal type="number" pos:start="123:52" pos:end="123:52">2</literal><operator pos:start="123:53" pos:end="123:53">*</operator><name pos:start="123:54" pos:end="123:54">t</name><operator pos:start="123:55" pos:end="123:55">)</operator> <operator pos:start="123:57" pos:end="123:57">+</operator> <literal type="number" pos:start="123:59" pos:end="123:59">4</literal><operator pos:start="123:60" pos:end="123:60">*</operator><name pos:start="123:61" pos:end="123:62">nx</name><operator pos:start="123:63" pos:end="123:63">*</operator><operator pos:start="123:64" pos:end="123:64">(</operator><name pos:start="123:65" pos:end="123:66">tr</name><operator pos:start="123:67" pos:end="123:67">-</operator><name pos:start="123:68" pos:end="123:69">tl</name><operator pos:start="123:70" pos:end="123:70">)</operator> <operator pos:start="123:72" pos:end="123:72">+</operator> <literal type="number" pos:start="123:74" pos:end="123:75">32</literal><operator pos:start="123:76" pos:end="123:76">*</operator><name pos:start="123:77" pos:end="123:77">t</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="125:21" pos:end="125:78"><decl pos:start="125:21" pos:end="125:77"><type pos:start="125:21" pos:end="125:29"><specifier pos:start="125:21" pos:end="125:25">const</specifier> <name pos:start="125:27" pos:end="125:29">int</name></type> <name pos:start="125:31" pos:end="125:32">c2</name><init pos:start="125:33" pos:end="125:77">= <expr pos:start="125:35" pos:end="125:77"><name pos:start="125:35" pos:end="125:36">nx</name><operator pos:start="125:37" pos:end="125:37">*</operator><name pos:start="125:38" pos:end="125:39">nx</name><operator pos:start="125:40" pos:end="125:40">*</operator><operator pos:start="125:41" pos:end="125:41">(</operator> <name pos:start="125:43" pos:end="125:43">r</name> <operator pos:start="125:45" pos:end="125:45">+</operator>  <name pos:start="125:48" pos:end="125:48">l</name> <operator pos:start="125:50" pos:end="125:50">-</operator> <literal type="number" pos:start="125:52" pos:end="125:52">2</literal><operator pos:start="125:53" pos:end="125:53">*</operator><name pos:start="125:54" pos:end="125:54">c</name><operator pos:start="125:55" pos:end="125:55">)</operator> <operator pos:start="125:57" pos:end="125:57">+</operator> <literal type="number" pos:start="125:59" pos:end="125:59">4</literal><operator pos:start="125:60" pos:end="125:60">*</operator><name pos:start="125:61" pos:end="125:62">nx</name><operator pos:start="125:63" pos:end="125:63">*</operator><operator pos:start="125:64" pos:end="125:64">(</operator> <name pos:start="125:66" pos:end="125:66">r</name><operator pos:start="125:67" pos:end="125:67">-</operator> <name pos:start="125:69" pos:end="125:69">l</name><operator pos:start="125:70" pos:end="125:70">)</operator> <operator pos:start="125:72" pos:end="125:72">+</operator> <literal type="number" pos:start="125:74" pos:end="125:75">32</literal><operator pos:start="125:76" pos:end="125:76">*</operator><name pos:start="125:77" pos:end="125:77">c</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="127:21" pos:end="127:78"><decl pos:start="127:21" pos:end="127:77"><type pos:start="127:21" pos:end="127:29"><specifier pos:start="127:21" pos:end="127:25">const</specifier> <name pos:start="127:27" pos:end="127:29">int</name></type> <name pos:start="127:31" pos:end="127:32">b2</name><init pos:start="127:33" pos:end="127:77">= <expr pos:start="127:35" pos:end="127:77"><name pos:start="127:35" pos:end="127:36">nx</name><operator pos:start="127:37" pos:end="127:37">*</operator><name pos:start="127:38" pos:end="127:39">nx</name><operator pos:start="127:40" pos:end="127:40">*</operator><operator pos:start="127:41" pos:end="127:41">(</operator><name pos:start="127:42" pos:end="127:43">br</name> <operator pos:start="127:45" pos:end="127:45">+</operator> <name pos:start="127:47" pos:end="127:48">bl</name> <operator pos:start="127:50" pos:end="127:50">-</operator> <literal type="number" pos:start="127:52" pos:end="127:52">2</literal><operator pos:start="127:53" pos:end="127:53">*</operator><name pos:start="127:54" pos:end="127:54">b</name><operator pos:start="127:55" pos:end="127:55">)</operator> <operator pos:start="127:57" pos:end="127:57">+</operator> <literal type="number" pos:start="127:59" pos:end="127:59">4</literal><operator pos:start="127:60" pos:end="127:60">*</operator><name pos:start="127:61" pos:end="127:62">nx</name><operator pos:start="127:63" pos:end="127:63">*</operator><operator pos:start="127:64" pos:end="127:64">(</operator><name pos:start="127:65" pos:end="127:66">br</name><operator pos:start="127:67" pos:end="127:67">-</operator><name pos:start="127:68" pos:end="127:69">bl</name><operator pos:start="127:70" pos:end="127:70">)</operator> <operator pos:start="127:72" pos:end="127:72">+</operator> <literal type="number" pos:start="127:74" pos:end="127:75">32</literal><operator pos:start="127:76" pos:end="127:76">*</operator><name pos:start="127:77" pos:end="127:77">b</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="129:21" pos:end="129:79"><decl pos:start="129:21" pos:end="129:78"><type pos:start="129:21" pos:end="129:23"><name pos:start="129:21" pos:end="129:23">int</name></type> <name pos:start="129:25" pos:end="129:29">score</name><init pos:start="129:30" pos:end="129:78">= <expr pos:start="129:32" pos:end="129:78"><name pos:start="129:32" pos:end="129:33">ny</name><operator pos:start="129:34" pos:end="129:34">*</operator><name pos:start="129:35" pos:end="129:36">ny</name><operator pos:start="129:37" pos:end="129:37">*</operator><operator pos:start="129:38" pos:end="129:38">(</operator><name pos:start="129:39" pos:end="129:40">b2</name> <operator pos:start="129:42" pos:end="129:42">+</operator> <name pos:start="129:44" pos:end="129:45">t2</name> <operator pos:start="129:47" pos:end="129:47">-</operator> <literal type="number" pos:start="129:49" pos:end="129:49">2</literal><operator pos:start="129:50" pos:end="129:50">*</operator><name pos:start="129:51" pos:end="129:52">c2</name><operator pos:start="129:53" pos:end="129:53">)</operator> <operator pos:start="129:55" pos:end="129:55">+</operator> <literal type="number" pos:start="129:57" pos:end="129:57">4</literal><operator pos:start="129:58" pos:end="129:58">*</operator><name pos:start="129:59" pos:end="129:60">ny</name><operator pos:start="129:61" pos:end="129:61">*</operator><operator pos:start="129:62" pos:end="129:62">(</operator><name pos:start="129:63" pos:end="129:64">b2</name> <operator pos:start="129:66" pos:end="129:66">-</operator> <name pos:start="129:68" pos:end="129:69">t2</name><operator pos:start="129:70" pos:end="129:70">)</operator> <operator pos:start="129:72" pos:end="129:72">+</operator> <literal type="number" pos:start="129:74" pos:end="129:75">32</literal><operator pos:start="129:76" pos:end="129:76">*</operator><name pos:start="129:77" pos:end="129:78">c2</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="131:21" pos:end="131:26"><decl pos:start="131:21" pos:end="131:25"><type pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">int</name></type> <name pos:start="131:25" pos:end="131:25">i</name></decl>;</decl_stmt>

                    

                    <if_stmt pos:start="135:21" pos:end="135:56"><if pos:start="135:21" pos:end="135:56">if<condition pos:start="135:23" pos:end="135:46">(<expr pos:start="135:24" pos:end="135:45"><operator pos:start="135:24" pos:end="135:24">(</operator><name pos:start="135:25" pos:end="135:26">nx</name><operator pos:start="135:27" pos:end="135:27">&amp;</operator><literal type="number" pos:start="135:28" pos:end="135:28">3</literal><operator pos:start="135:29" pos:end="135:29">)</operator><operator pos:start="135:30" pos:end="135:31">==</operator><literal type="number" pos:start="135:32" pos:end="135:32">0</literal> <operator pos:start="135:34" pos:end="135:35">&amp;&amp;</operator> <operator pos:start="135:37" pos:end="135:37">(</operator><name pos:start="135:38" pos:end="135:39">ny</name><operator pos:start="135:40" pos:end="135:40">&amp;</operator><literal type="number" pos:start="135:41" pos:end="135:41">3</literal><operator pos:start="135:42" pos:end="135:42">)</operator><operator pos:start="135:43" pos:end="135:44">==</operator><literal type="number" pos:start="135:45" pos:end="135:45">0</literal></expr>)</condition><block type="pseudo" pos:start="135:48" pos:end="135:56"><block_content pos:start="135:48" pos:end="135:56"> <continue pos:start="135:48" pos:end="135:56">continue;</continue></block_content></block></if></if_stmt>

                    

                    <expr_stmt pos:start="139:21" pos:end="139:115"><expr pos:start="139:21" pos:end="139:114"><name pos:start="139:21" pos:end="139:25">score</name> <operator pos:start="139:27" pos:end="139:28">+=</operator> <literal type="number" pos:start="139:30" pos:end="139:33">1024</literal><operator pos:start="139:34" pos:end="139:34">*</operator><operator pos:start="139:35" pos:end="139:35">(</operator><name pos:start="139:36" pos:end="139:65"><name pos:start="139:36" pos:end="139:45">mv_penalty</name><index pos:start="139:46" pos:end="139:65">[<expr pos:start="139:47" pos:end="139:64"><literal type="number" pos:start="139:47" pos:end="139:47">4</literal><operator pos:start="139:48" pos:end="139:48">*</operator><name pos:start="139:49" pos:end="139:50">mx</name> <operator pos:start="139:52" pos:end="139:52">+</operator> <name pos:start="139:54" pos:end="139:55">nx</name> <operator pos:start="139:57" pos:end="139:57">-</operator> <name pos:start="139:59" pos:end="139:64">pred_x</name></expr>]</index></name> <operator pos:start="139:67" pos:end="139:67">+</operator> <name pos:start="139:69" pos:end="139:98"><name pos:start="139:69" pos:end="139:78">mv_penalty</name><index pos:start="139:79" pos:end="139:98">[<expr pos:start="139:80" pos:end="139:97"><literal type="number" pos:start="139:80" pos:end="139:80">4</literal><operator pos:start="139:81" pos:end="139:81">*</operator><name pos:start="139:82" pos:end="139:83">my</name> <operator pos:start="139:85" pos:end="139:85">+</operator> <name pos:start="139:87" pos:end="139:88">ny</name> <operator pos:start="139:90" pos:end="139:90">-</operator> <name pos:start="139:92" pos:end="139:97">pred_y</name></expr>]</index></name><operator pos:start="139:99" pos:end="139:99">)</operator><operator pos:start="139:100" pos:end="139:100">*</operator><name pos:start="139:101" pos:end="139:114">penalty_factor</name></expr>;</expr_stmt>

                    

<comment type="line" pos:start="143:1" pos:end="143:61">//                    if(nx&amp;1) score-=1024*c-&gt;penalty_factor;</comment>

<comment type="line" pos:start="145:1" pos:end="145:61">//                    if(ny&amp;1) score-=1024*c-&gt;penalty_factor;</comment>

                    

                    <for pos:start="149:21" pos:end="167:21">for<control pos:start="149:24" pos:end="149:38">(<init pos:start="149:25" pos:end="149:28"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:25">i</name><operator pos:start="149:26" pos:end="149:26">=</operator><literal type="number" pos:start="149:27" pos:end="149:27">0</literal></expr>;</init> <condition pos:start="149:30" pos:end="149:33"><expr pos:start="149:30" pos:end="149:32"><name pos:start="149:30" pos:end="149:30">i</name><operator pos:start="149:31" pos:end="149:31">&lt;</operator><literal type="number" pos:start="149:32" pos:end="149:32">8</literal></expr>;</condition> <incr pos:start="149:35" pos:end="149:37"><expr pos:start="149:35" pos:end="149:37"><name pos:start="149:35" pos:end="149:35">i</name><operator pos:start="149:36" pos:end="149:37">++</operator></expr></incr>)</control><block pos:start="149:39" pos:end="167:21">{<block_content pos:start="151:25" pos:end="165:25">

                        <if_stmt pos:start="151:25" pos:end="165:25"><if pos:start="151:25" pos:end="165:25">if<condition pos:start="151:27" pos:end="151:43">(<expr pos:start="151:28" pos:end="151:42"><name pos:start="151:28" pos:end="151:32">score</name> <operator pos:start="151:34" pos:end="151:34">&lt;</operator> <name pos:start="151:36" pos:end="151:42"><name pos:start="151:36" pos:end="151:39">best</name><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><name pos:start="151:41" pos:end="151:41">i</name></expr>]</index></name></expr>)</condition><block pos:start="151:44" pos:end="165:25">{<block_content pos:start="153:29" pos:end="163:34">

                            <expr_stmt pos:start="153:29" pos:end="153:77"><expr pos:start="153:29" pos:end="153:76"><call pos:start="153:29" pos:end="153:76"><name pos:start="153:29" pos:end="153:35">memmove</name><argument_list pos:start="153:36" pos:end="153:76">(<argument pos:start="153:37" pos:end="153:46"><expr pos:start="153:37" pos:end="153:46"><operator pos:start="153:37" pos:end="153:37">&amp;</operator><name pos:start="153:38" pos:end="153:46"><name pos:start="153:38" pos:end="153:41">best</name><index pos:start="153:42" pos:end="153:46">[<expr pos:start="153:43" pos:end="153:45"><name pos:start="153:43" pos:end="153:43">i</name><operator pos:start="153:44" pos:end="153:44">+</operator><literal type="number" pos:start="153:45" pos:end="153:45">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:49" pos:end="153:56"><expr pos:start="153:49" pos:end="153:56"><operator pos:start="153:49" pos:end="153:49">&amp;</operator><name pos:start="153:50" pos:end="153:56"><name pos:start="153:50" pos:end="153:53">best</name><index pos:start="153:54" pos:end="153:56">[<expr pos:start="153:55" pos:end="153:55"><name pos:start="153:55" pos:end="153:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="153:59" pos:end="153:75"><expr pos:start="153:59" pos:end="153:75"><sizeof pos:start="153:59" pos:end="153:69">sizeof<argument_list pos:start="153:65" pos:end="153:69">(<argument pos:start="153:66" pos:end="153:68"><expr pos:start="153:66" pos:end="153:68"><name pos:start="153:66" pos:end="153:68">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="153:70" pos:end="153:70">*</operator><operator pos:start="153:71" pos:end="153:71">(</operator><literal type="number" pos:start="153:72" pos:end="153:73">7</literal><operator pos:start="153:73" pos:end="153:73">-</operator><name pos:start="153:74" pos:end="153:74">i</name><operator pos:start="153:75" pos:end="153:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="155:29" pos:end="155:93"><expr pos:start="155:29" pos:end="155:92"><call pos:start="155:29" pos:end="155:92"><name pos:start="155:29" pos:end="155:35">memmove</name><argument_list pos:start="155:36" pos:end="155:92">(<argument pos:start="155:37" pos:end="155:53"><expr pos:start="155:37" pos:end="155:53"><operator pos:start="155:37" pos:end="155:37">&amp;</operator><name pos:start="155:38" pos:end="155:53"><name pos:start="155:38" pos:end="155:45">best_pos</name><index pos:start="155:46" pos:end="155:50">[<expr pos:start="155:47" pos:end="155:49"><name pos:start="155:47" pos:end="155:47">i</name><operator pos:start="155:48" pos:end="155:48">+</operator><literal type="number" pos:start="155:49" pos:end="155:49">1</literal></expr>]</index><index pos:start="155:51" pos:end="155:53">[<expr pos:start="155:52" pos:end="155:52"><literal type="number" pos:start="155:52" pos:end="155:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:56" pos:end="155:70"><expr pos:start="155:56" pos:end="155:70"><operator pos:start="155:56" pos:end="155:56">&amp;</operator><name pos:start="155:57" pos:end="155:70"><name pos:start="155:57" pos:end="155:64">best_pos</name><index pos:start="155:65" pos:end="155:67">[<expr pos:start="155:66" pos:end="155:66"><name pos:start="155:66" pos:end="155:66">i</name></expr>]</index><index pos:start="155:68" pos:end="155:70">[<expr pos:start="155:69" pos:end="155:69"><literal type="number" pos:start="155:69" pos:end="155:69">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:73" pos:end="155:91"><expr pos:start="155:73" pos:end="155:91"><sizeof pos:start="155:73" pos:end="155:83">sizeof<argument_list pos:start="155:79" pos:end="155:83">(<argument pos:start="155:80" pos:end="155:82"><expr pos:start="155:80" pos:end="155:82"><name pos:start="155:80" pos:end="155:82">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="155:84" pos:end="155:84">*</operator><literal type="number" pos:start="155:85" pos:end="155:85">2</literal><operator pos:start="155:86" pos:end="155:86">*</operator><operator pos:start="155:87" pos:end="155:87">(</operator><literal type="number" pos:start="155:88" pos:end="155:89">7</literal><operator pos:start="155:89" pos:end="155:89">-</operator><name pos:start="155:90" pos:end="155:90">i</name><operator pos:start="155:91" pos:end="155:91">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="157:29" pos:end="157:43"><expr pos:start="157:29" pos:end="157:42"><name pos:start="157:29" pos:end="157:35"><name pos:start="157:29" pos:end="157:32">best</name><index pos:start="157:33" pos:end="157:35">[<expr pos:start="157:34" pos:end="157:34"><name pos:start="157:34" pos:end="157:34">i</name></expr>]</index></name><operator pos:start="157:36" pos:end="157:36">=</operator> <name pos:start="157:38" pos:end="157:42">score</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="159:29" pos:end="159:54"><expr pos:start="159:29" pos:end="159:53"><name pos:start="159:29" pos:end="159:42"><name pos:start="159:29" pos:end="159:36">best_pos</name><index pos:start="159:37" pos:end="159:39">[<expr pos:start="159:38" pos:end="159:38"><name pos:start="159:38" pos:end="159:38">i</name></expr>]</index><index pos:start="159:40" pos:end="159:42">[<expr pos:start="159:41" pos:end="159:41"><literal type="number" pos:start="159:41" pos:end="159:41">0</literal></expr>]</index></name><operator pos:start="159:43" pos:end="159:43">=</operator> <name pos:start="159:45" pos:end="159:46">nx</name> <operator pos:start="159:48" pos:end="159:48">+</operator> <literal type="number" pos:start="159:50" pos:end="159:50">4</literal><operator pos:start="159:51" pos:end="159:51">*</operator><name pos:start="159:52" pos:end="159:53">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="161:29" pos:end="161:54"><expr pos:start="161:29" pos:end="161:53"><name pos:start="161:29" pos:end="161:42"><name pos:start="161:29" pos:end="161:36">best_pos</name><index pos:start="161:37" pos:end="161:39">[<expr pos:start="161:38" pos:end="161:38"><name pos:start="161:38" pos:end="161:38">i</name></expr>]</index><index pos:start="161:40" pos:end="161:42">[<expr pos:start="161:41" pos:end="161:41"><literal type="number" pos:start="161:41" pos:end="161:41">1</literal></expr>]</index></name><operator pos:start="161:43" pos:end="161:43">=</operator> <name pos:start="161:45" pos:end="161:46">ny</name> <operator pos:start="161:48" pos:end="161:48">+</operator> <literal type="number" pos:start="161:50" pos:end="161:50">4</literal><operator pos:start="161:51" pos:end="161:51">*</operator><name pos:start="161:52" pos:end="161:53">my</name></expr>;</expr_stmt>

                            <break pos:start="163:29" pos:end="163:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="173:10" pos:end="263:9">else<block pos:start="173:14" pos:end="263:9">{<block_content pos:start="175:13" pos:end="261:13">

            <decl_stmt pos:start="175:13" pos:end="175:19"><decl pos:start="175:13" pos:end="175:18"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:18">tl</name></decl>;</decl_stmt>

            <decl_stmt pos:start="177:13" pos:end="177:37"><decl pos:start="177:13" pos:end="177:36"><type pos:start="177:13" pos:end="177:21"><specifier pos:start="177:13" pos:end="177:17">const</specifier> <name pos:start="177:19" pos:end="177:21">int</name></type> <name pos:start="177:23" pos:end="177:24">cx</name> <init pos:start="177:26" pos:end="177:36">= <expr pos:start="177:28" pos:end="177:36"><literal type="number" pos:start="177:28" pos:end="177:28">4</literal><operator pos:start="177:29" pos:end="177:29">*</operator><operator pos:start="177:30" pos:end="177:30">(</operator><name pos:start="177:31" pos:end="177:31">r</name> <operator pos:start="177:33" pos:end="177:33">-</operator> <name pos:start="177:35" pos:end="177:35">l</name><operator pos:start="177:36" pos:end="177:36">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="179:13" pos:end="179:39"><decl pos:start="179:13" pos:end="179:38"><type pos:start="179:13" pos:end="179:21"><specifier pos:start="179:13" pos:end="179:17">const</specifier> <name pos:start="179:19" pos:end="179:21">int</name></type> <name pos:start="179:23" pos:end="179:25">cx2</name><init pos:start="179:26" pos:end="179:38">= <expr pos:start="179:28" pos:end="179:38"><name pos:start="179:28" pos:end="179:28">r</name> <operator pos:start="179:30" pos:end="179:30">+</operator> <name pos:start="179:32" pos:end="179:32">l</name> <operator pos:start="179:34" pos:end="179:34">-</operator> <literal type="number" pos:start="179:36" pos:end="179:36">2</literal><operator pos:start="179:37" pos:end="179:37">*</operator><name pos:start="179:38" pos:end="179:38">c</name></expr></init></decl>;</decl_stmt> 

            <decl_stmt pos:start="181:13" pos:end="181:37"><decl pos:start="181:13" pos:end="181:36"><type pos:start="181:13" pos:end="181:21"><specifier pos:start="181:13" pos:end="181:17">const</specifier> <name pos:start="181:19" pos:end="181:21">int</name></type> <name pos:start="181:23" pos:end="181:24">cy</name> <init pos:start="181:26" pos:end="181:36">= <expr pos:start="181:28" pos:end="181:36"><literal type="number" pos:start="181:28" pos:end="181:28">4</literal><operator pos:start="181:29" pos:end="181:29">*</operator><operator pos:start="181:30" pos:end="181:30">(</operator><name pos:start="181:31" pos:end="181:31">b</name> <operator pos:start="181:33" pos:end="181:33">-</operator> <name pos:start="181:35" pos:end="181:35">t</name><operator pos:start="181:36" pos:end="181:36">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="183:13" pos:end="183:39"><decl pos:start="183:13" pos:end="183:38"><type pos:start="183:13" pos:end="183:21"><specifier pos:start="183:13" pos:end="183:17">const</specifier> <name pos:start="183:19" pos:end="183:21">int</name></type> <name pos:start="183:23" pos:end="183:25">cy2</name><init pos:start="183:26" pos:end="183:38">= <expr pos:start="183:28" pos:end="183:38"><name pos:start="183:28" pos:end="183:28">b</name> <operator pos:start="183:30" pos:end="183:30">+</operator> <name pos:start="183:32" pos:end="183:32">t</name> <operator pos:start="183:34" pos:end="183:34">-</operator> <literal type="number" pos:start="183:36" pos:end="183:36">2</literal><operator pos:start="183:37" pos:end="183:37">*</operator><name pos:start="183:38" pos:end="183:38">c</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="185:13" pos:end="185:20"><decl pos:start="185:13" pos:end="185:19"><type pos:start="185:13" pos:end="185:15"><name pos:start="185:13" pos:end="185:15">int</name></type> <name pos:start="185:17" pos:end="185:19">cxy</name></decl>;</decl_stmt>

              

            <if_stmt pos:start="189:13" pos:end="197:13"><if pos:start="189:13" pos:end="193:13">if<condition pos:start="189:15" pos:end="189:115">(<expr pos:start="189:16" pos:end="189:114"><name pos:start="189:16" pos:end="189:63"><name pos:start="189:16" pos:end="189:18">map</name><index pos:start="189:19" pos:end="189:63">[<expr pos:start="189:20" pos:end="189:62"><operator pos:start="189:20" pos:end="189:20">(</operator><name pos:start="189:21" pos:end="189:25">index</name><operator pos:start="189:26" pos:end="189:26">-</operator><operator pos:start="189:27" pos:end="189:27">(</operator><literal type="number" pos:start="189:28" pos:end="189:28">1</literal><operator pos:start="189:29" pos:end="189:30">&lt;&lt;</operator><name pos:start="189:31" pos:end="189:42">ME_MAP_SHIFT</name><operator pos:start="189:43" pos:end="189:43">)</operator><operator pos:start="189:44" pos:end="189:44">-</operator><literal type="number" pos:start="189:45" pos:end="189:45">1</literal><operator pos:start="189:46" pos:end="189:46">)</operator><operator pos:start="189:47" pos:end="189:47">&amp;</operator><operator pos:start="189:48" pos:end="189:48">(</operator><name pos:start="189:49" pos:end="189:59">ME_MAP_SIZE</name><operator pos:start="189:60" pos:end="189:60">-</operator><literal type="number" pos:start="189:61" pos:end="189:61">1</literal><operator pos:start="189:62" pos:end="189:62">)</operator></expr>]</index></name> <operator pos:start="189:65" pos:end="189:66">==</operator> <operator pos:start="189:68" pos:end="189:68">(</operator><name pos:start="189:69" pos:end="189:70">my</name><operator pos:start="189:71" pos:end="189:72">&lt;&lt;</operator><name pos:start="189:73" pos:end="189:86">ME_MAP_MV_BITS</name><operator pos:start="189:87" pos:end="189:87">)</operator> <operator pos:start="189:89" pos:end="189:89">+</operator> <name pos:start="189:91" pos:end="189:92">mx</name> <operator pos:start="189:94" pos:end="189:94">+</operator> <name pos:start="189:96" pos:end="189:109">map_generation</name> <operator pos:start="189:111" pos:end="189:112">&amp;&amp;</operator> <literal type="number" pos:start="189:114" pos:end="189:114">0</literal></expr>)</condition><block pos:start="189:116" pos:end="193:13">{<block_content pos:start="191:17" pos:end="191:75"> <comment type="line" pos:start="189:118" pos:end="189:124">//FIXME</comment>

                <expr_stmt pos:start="191:17" pos:end="191:75"><expr pos:start="191:17" pos:end="191:74"><name pos:start="191:17" pos:end="191:18">tl</name><operator pos:start="191:19" pos:end="191:19">=</operator> <name pos:start="191:21" pos:end="191:74"><name pos:start="191:21" pos:end="191:29">score_map</name><index pos:start="191:30" pos:end="191:74">[<expr pos:start="191:31" pos:end="191:73"><operator pos:start="191:31" pos:end="191:31">(</operator><name pos:start="191:32" pos:end="191:36">index</name><operator pos:start="191:37" pos:end="191:37">-</operator><operator pos:start="191:38" pos:end="191:38">(</operator><literal type="number" pos:start="191:39" pos:end="191:39">1</literal><operator pos:start="191:40" pos:end="191:41">&lt;&lt;</operator><name pos:start="191:42" pos:end="191:53">ME_MAP_SHIFT</name><operator pos:start="191:54" pos:end="191:54">)</operator><operator pos:start="191:55" pos:end="191:55">-</operator><literal type="number" pos:start="191:56" pos:end="191:56">1</literal><operator pos:start="191:57" pos:end="191:57">)</operator><operator pos:start="191:58" pos:end="191:58">&amp;</operator><operator pos:start="191:59" pos:end="191:59">(</operator><name pos:start="191:60" pos:end="191:70">ME_MAP_SIZE</name><operator pos:start="191:71" pos:end="191:71">-</operator><literal type="number" pos:start="191:72" pos:end="191:72">1</literal><operator pos:start="191:73" pos:end="191:73">)</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="193:14" pos:end="197:13">else<block pos:start="193:18" pos:end="197:13">{<block_content pos:start="195:17" pos:end="195:102">

                <expr_stmt pos:start="195:17" pos:end="195:102"><expr pos:start="195:17" pos:end="195:101"><name pos:start="195:17" pos:end="195:18">tl</name><operator pos:start="195:19" pos:end="195:19">=</operator> <call pos:start="195:21" pos:end="195:101"><name pos:start="195:21" pos:end="195:23">cmp</name><argument_list pos:start="195:24" pos:end="195:101">(<argument pos:start="195:25" pos:end="195:25"><expr pos:start="195:25" pos:end="195:25"><name pos:start="195:25" pos:end="195:25">s</name></expr></argument>, <argument pos:start="195:28" pos:end="195:31"><expr pos:start="195:28" pos:end="195:31"><name pos:start="195:28" pos:end="195:29">mx</name><operator pos:start="195:30" pos:end="195:30">-</operator><literal type="number" pos:start="195:31" pos:end="195:31">1</literal></expr></argument>, <argument pos:start="195:34" pos:end="195:37"><expr pos:start="195:34" pos:end="195:37"><name pos:start="195:34" pos:end="195:35">my</name><operator pos:start="195:36" pos:end="195:36">-</operator><literal type="number" pos:start="195:37" pos:end="195:37">1</literal></expr></argument>, <argument pos:start="195:40" pos:end="195:40"><expr pos:start="195:40" pos:end="195:40"><literal type="number" pos:start="195:40" pos:end="195:40">0</literal></expr></argument>, <argument pos:start="195:43" pos:end="195:43"><expr pos:start="195:43" pos:end="195:43"><literal type="number" pos:start="195:43" pos:end="195:43">0</literal></expr></argument>, <argument pos:start="195:46" pos:end="195:49"><expr pos:start="195:46" pos:end="195:49"><name pos:start="195:46" pos:end="195:49">size</name></expr></argument>, <argument pos:start="195:52" pos:end="195:52"><expr pos:start="195:52" pos:end="195:52"><name pos:start="195:52" pos:end="195:52">h</name></expr></argument>, <argument pos:start="195:55" pos:end="195:63"><expr pos:start="195:55" pos:end="195:63"><name pos:start="195:55" pos:end="195:63">ref_index</name></expr></argument>, <argument pos:start="195:66" pos:end="195:74"><expr pos:start="195:66" pos:end="195:74"><name pos:start="195:66" pos:end="195:74">src_index</name></expr></argument>, <argument pos:start="195:77" pos:end="195:80"><expr pos:start="195:77" pos:end="195:80"><name pos:start="195:77" pos:end="195:80">cmpf</name></expr></argument>, <argument pos:start="195:83" pos:end="195:93"><expr pos:start="195:83" pos:end="195:93"><name pos:start="195:83" pos:end="195:93">chroma_cmpf</name></expr></argument>, <argument pos:start="195:96" pos:end="195:100"><expr pos:start="195:96" pos:end="195:100"><name pos:start="195:96" pos:end="195:100">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="195:103" pos:end="195:141">//FIXME wrong if chroma me is different</comment>

            </block_content>}</block></else></if_stmt>

            

            <expr_stmt pos:start="201:13" pos:end="201:56"><expr pos:start="201:13" pos:end="201:55"><name pos:start="201:13" pos:end="201:15">cxy</name><operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">2</literal><operator pos:start="201:19" pos:end="201:19">*</operator><name pos:start="201:20" pos:end="201:21">tl</name> <operator pos:start="201:23" pos:end="201:23">+</operator> <operator pos:start="201:25" pos:end="201:25">(</operator><name pos:start="201:26" pos:end="201:27">cx</name> <operator pos:start="201:29" pos:end="201:29">+</operator> <name pos:start="201:31" pos:end="201:32">cy</name><operator pos:start="201:33" pos:end="201:33">)</operator><operator pos:start="201:34" pos:end="201:34">/</operator><literal type="number" pos:start="201:35" pos:end="201:37">4</literal> <operator pos:start="201:37" pos:end="201:37">-</operator> <operator pos:start="201:39" pos:end="201:39">(</operator><name pos:start="201:40" pos:end="201:42">cx2</name> <operator pos:start="201:44" pos:end="201:44">+</operator> <name pos:start="201:46" pos:end="201:48">cy2</name><operator pos:start="201:49" pos:end="201:49">)</operator> <operator pos:start="201:51" pos:end="201:51">-</operator> <literal type="number" pos:start="201:53" pos:end="201:53">2</literal><operator pos:start="201:54" pos:end="201:54">*</operator><name pos:start="201:55" pos:end="201:55">c</name></expr>;</expr_stmt> 

           

            <expr_stmt pos:start="205:13" pos:end="205:49"><expr pos:start="205:13" pos:end="205:48"><call pos:start="205:13" pos:end="205:48"><name pos:start="205:13" pos:end="205:18">assert</name><argument_list pos:start="205:19" pos:end="205:48">(<argument pos:start="205:20" pos:end="205:47"><expr pos:start="205:20" pos:end="205:47"><literal type="number" pos:start="205:20" pos:end="205:21">16</literal><operator pos:start="205:22" pos:end="205:22">*</operator><name pos:start="205:23" pos:end="205:25">cx2</name> <operator pos:start="205:27" pos:end="205:27">+</operator> <literal type="number" pos:start="205:29" pos:end="205:29">4</literal><operator pos:start="205:30" pos:end="205:30">*</operator><name pos:start="205:31" pos:end="205:32">cx</name> <operator pos:start="205:34" pos:end="205:34">+</operator> <literal type="number" pos:start="205:36" pos:end="205:37">32</literal><operator pos:start="205:38" pos:end="205:38">*</operator><name pos:start="205:39" pos:end="205:39">c</name> <operator pos:start="205:41" pos:end="205:42">==</operator> <literal type="number" pos:start="205:44" pos:end="205:45">32</literal><operator pos:start="205:46" pos:end="205:46">*</operator><name pos:start="205:47" pos:end="205:47">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:49"><expr pos:start="207:13" pos:end="207:48"><call pos:start="207:13" pos:end="207:48"><name pos:start="207:13" pos:end="207:18">assert</name><argument_list pos:start="207:19" pos:end="207:48">(<argument pos:start="207:20" pos:end="207:47"><expr pos:start="207:20" pos:end="207:47"><literal type="number" pos:start="207:20" pos:end="207:21">16</literal><operator pos:start="207:22" pos:end="207:22">*</operator><name pos:start="207:23" pos:end="207:25">cx2</name> <operator pos:start="207:27" pos:end="207:27">-</operator> <literal type="number" pos:start="207:29" pos:end="207:29">4</literal><operator pos:start="207:30" pos:end="207:30">*</operator><name pos:start="207:31" pos:end="207:32">cx</name> <operator pos:start="207:34" pos:end="207:34">+</operator> <literal type="number" pos:start="207:36" pos:end="207:37">32</literal><operator pos:start="207:38" pos:end="207:38">*</operator><name pos:start="207:39" pos:end="207:39">c</name> <operator pos:start="207:41" pos:end="207:42">==</operator> <literal type="number" pos:start="207:44" pos:end="207:45">32</literal><operator pos:start="207:46" pos:end="207:46">*</operator><name pos:start="207:47" pos:end="207:47">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:49"><expr pos:start="209:13" pos:end="209:48"><call pos:start="209:13" pos:end="209:48"><name pos:start="209:13" pos:end="209:18">assert</name><argument_list pos:start="209:19" pos:end="209:48">(<argument pos:start="209:20" pos:end="209:47"><expr pos:start="209:20" pos:end="209:47"><literal type="number" pos:start="209:20" pos:end="209:21">16</literal><operator pos:start="209:22" pos:end="209:22">*</operator><name pos:start="209:23" pos:end="209:25">cy2</name> <operator pos:start="209:27" pos:end="209:27">+</operator> <literal type="number" pos:start="209:29" pos:end="209:29">4</literal><operator pos:start="209:30" pos:end="209:30">*</operator><name pos:start="209:31" pos:end="209:32">cy</name> <operator pos:start="209:34" pos:end="209:34">+</operator> <literal type="number" pos:start="209:36" pos:end="209:37">32</literal><operator pos:start="209:38" pos:end="209:38">*</operator><name pos:start="209:39" pos:end="209:39">c</name> <operator pos:start="209:41" pos:end="209:42">==</operator> <literal type="number" pos:start="209:44" pos:end="209:45">32</literal><operator pos:start="209:46" pos:end="209:46">*</operator><name pos:start="209:47" pos:end="209:47">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:49"><expr pos:start="211:13" pos:end="211:48"><call pos:start="211:13" pos:end="211:48"><name pos:start="211:13" pos:end="211:18">assert</name><argument_list pos:start="211:19" pos:end="211:48">(<argument pos:start="211:20" pos:end="211:47"><expr pos:start="211:20" pos:end="211:47"><literal type="number" pos:start="211:20" pos:end="211:21">16</literal><operator pos:start="211:22" pos:end="211:22">*</operator><name pos:start="211:23" pos:end="211:25">cy2</name> <operator pos:start="211:27" pos:end="211:27">-</operator> <literal type="number" pos:start="211:29" pos:end="211:29">4</literal><operator pos:start="211:30" pos:end="211:30">*</operator><name pos:start="211:31" pos:end="211:32">cy</name> <operator pos:start="211:34" pos:end="211:34">+</operator> <literal type="number" pos:start="211:36" pos:end="211:37">32</literal><operator pos:start="211:38" pos:end="211:38">*</operator><name pos:start="211:39" pos:end="211:39">c</name> <operator pos:start="211:41" pos:end="211:42">==</operator> <literal type="number" pos:start="211:44" pos:end="211:45">32</literal><operator pos:start="211:46" pos:end="211:46">*</operator><name pos:start="211:47" pos:end="211:47">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:75"><expr pos:start="213:13" pos:end="213:74"><call pos:start="213:13" pos:end="213:74"><name pos:start="213:13" pos:end="213:18">assert</name><argument_list pos:start="213:19" pos:end="213:74">(<argument pos:start="213:20" pos:end="213:73"><expr pos:start="213:20" pos:end="213:73"><literal type="number" pos:start="213:20" pos:end="213:21">16</literal><operator pos:start="213:22" pos:end="213:22">*</operator><name pos:start="213:23" pos:end="213:25">cxy</name> <operator pos:start="213:27" pos:end="213:27">+</operator> <literal type="number" pos:start="213:29" pos:end="213:30">16</literal><operator pos:start="213:31" pos:end="213:31">*</operator><name pos:start="213:32" pos:end="213:34">cy2</name> <operator pos:start="213:36" pos:end="213:36">+</operator> <literal type="number" pos:start="213:38" pos:end="213:39">16</literal><operator pos:start="213:40" pos:end="213:40">*</operator><name pos:start="213:41" pos:end="213:43">cx2</name> <operator pos:start="213:45" pos:end="213:45">-</operator> <literal type="number" pos:start="213:47" pos:end="213:47">4</literal><operator pos:start="213:48" pos:end="213:48">*</operator><name pos:start="213:49" pos:end="213:50">cy</name> <operator pos:start="213:52" pos:end="213:52">-</operator> <literal type="number" pos:start="213:54" pos:end="213:54">4</literal><operator pos:start="213:55" pos:end="213:55">*</operator><name pos:start="213:56" pos:end="213:57">cx</name> <operator pos:start="213:59" pos:end="213:59">+</operator> <literal type="number" pos:start="213:61" pos:end="213:62">32</literal><operator pos:start="213:63" pos:end="213:63">*</operator><name pos:start="213:64" pos:end="213:64">c</name> <operator pos:start="213:66" pos:end="213:67">==</operator> <literal type="number" pos:start="213:69" pos:end="213:70">32</literal><operator pos:start="213:71" pos:end="213:71">*</operator><name pos:start="213:72" pos:end="213:73">tl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <for pos:start="217:13" pos:end="261:13">for<control pos:start="217:16" pos:end="217:38">(<init pos:start="217:17" pos:end="217:23"><expr pos:start="217:17" pos:end="217:22"><name pos:start="217:17" pos:end="217:18">ny</name><operator pos:start="217:19" pos:end="217:19">=</operator> <operator pos:start="217:21" pos:end="217:21">-</operator><literal type="number" pos:start="217:22" pos:end="217:22">3</literal></expr>;</init> <condition pos:start="217:25" pos:end="217:32"><expr pos:start="217:25" pos:end="217:31"><name pos:start="217:25" pos:end="217:26">ny</name> <operator pos:start="217:28" pos:end="217:29">&lt;=</operator> <literal type="number" pos:start="217:31" pos:end="217:31">3</literal></expr>;</condition> <incr pos:start="217:34" pos:end="217:37"><expr pos:start="217:34" pos:end="217:37"><name pos:start="217:34" pos:end="217:35">ny</name><operator pos:start="217:36" pos:end="217:37">++</operator></expr></incr>)</control><block pos:start="217:39" pos:end="261:13">{<block_content pos:start="219:17" pos:end="259:17">

                <for pos:start="219:17" pos:end="259:17">for<control pos:start="219:20" pos:end="219:42">(<init pos:start="219:21" pos:end="219:27"><expr pos:start="219:21" pos:end="219:26"><name pos:start="219:21" pos:end="219:22">nx</name><operator pos:start="219:23" pos:end="219:23">=</operator> <operator pos:start="219:25" pos:end="219:25">-</operator><literal type="number" pos:start="219:26" pos:end="219:26">3</literal></expr>;</init> <condition pos:start="219:29" pos:end="219:36"><expr pos:start="219:29" pos:end="219:35"><name pos:start="219:29" pos:end="219:30">nx</name> <operator pos:start="219:32" pos:end="219:33">&lt;=</operator> <literal type="number" pos:start="219:35" pos:end="219:35">3</literal></expr>;</condition> <incr pos:start="219:38" pos:end="219:41"><expr pos:start="219:38" pos:end="219:41"><name pos:start="219:38" pos:end="219:39">nx</name><operator pos:start="219:40" pos:end="219:41">++</operator></expr></incr>)</control><block pos:start="219:43" pos:end="259:17">{<block_content pos:start="221:21" pos:end="257:21">

                    <decl_stmt pos:start="221:21" pos:end="221:88"><decl pos:start="221:21" pos:end="221:87"><type pos:start="221:21" pos:end="221:23"><name pos:start="221:21" pos:end="221:23">int</name></type> <name pos:start="221:25" pos:end="221:29">score</name><init pos:start="221:30" pos:end="221:87">= <expr pos:start="221:32" pos:end="221:87"><name pos:start="221:32" pos:end="221:33">ny</name><operator pos:start="221:34" pos:end="221:34">*</operator><name pos:start="221:35" pos:end="221:36">nx</name><operator pos:start="221:37" pos:end="221:37">*</operator><name pos:start="221:38" pos:end="221:40">cxy</name> <operator pos:start="221:42" pos:end="221:42">+</operator> <name pos:start="221:44" pos:end="221:45">nx</name><operator pos:start="221:46" pos:end="221:46">*</operator><name pos:start="221:47" pos:end="221:48">nx</name><operator pos:start="221:49" pos:end="221:49">*</operator><name pos:start="221:50" pos:end="221:52">cx2</name> <operator pos:start="221:54" pos:end="221:54">+</operator> <name pos:start="221:56" pos:end="221:57">ny</name><operator pos:start="221:58" pos:end="221:58">*</operator><name pos:start="221:59" pos:end="221:60">ny</name><operator pos:start="221:61" pos:end="221:61">*</operator><name pos:start="221:62" pos:end="221:64">cy2</name> <operator pos:start="221:66" pos:end="221:66">+</operator> <name pos:start="221:68" pos:end="221:69">nx</name><operator pos:start="221:70" pos:end="221:70">*</operator><name pos:start="221:71" pos:end="221:72">cx</name> <operator pos:start="221:74" pos:end="221:74">+</operator> <name pos:start="221:76" pos:end="221:77">ny</name><operator pos:start="221:78" pos:end="221:78">*</operator><name pos:start="221:79" pos:end="221:80">cy</name> <operator pos:start="221:82" pos:end="221:82">+</operator> <literal type="number" pos:start="221:84" pos:end="221:85">32</literal><operator pos:start="221:86" pos:end="221:86">*</operator><name pos:start="221:87" pos:end="221:87">c</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="221:90" pos:end="221:103">//FIXME factor</comment>

                    <decl_stmt pos:start="223:21" pos:end="223:26"><decl pos:start="223:21" pos:end="223:25"><type pos:start="223:21" pos:end="223:23"><name pos:start="223:21" pos:end="223:23">int</name></type> <name pos:start="223:25" pos:end="223:25">i</name></decl>;</decl_stmt>

                    

                    <if_stmt pos:start="227:21" pos:end="227:56"><if pos:start="227:21" pos:end="227:56">if<condition pos:start="227:23" pos:end="227:46">(<expr pos:start="227:24" pos:end="227:45"><operator pos:start="227:24" pos:end="227:24">(</operator><name pos:start="227:25" pos:end="227:26">nx</name><operator pos:start="227:27" pos:end="227:27">&amp;</operator><literal type="number" pos:start="227:28" pos:end="227:28">3</literal><operator pos:start="227:29" pos:end="227:29">)</operator><operator pos:start="227:30" pos:end="227:31">==</operator><literal type="number" pos:start="227:32" pos:end="227:32">0</literal> <operator pos:start="227:34" pos:end="227:35">&amp;&amp;</operator> <operator pos:start="227:37" pos:end="227:37">(</operator><name pos:start="227:38" pos:end="227:39">ny</name><operator pos:start="227:40" pos:end="227:40">&amp;</operator><literal type="number" pos:start="227:41" pos:end="227:41">3</literal><operator pos:start="227:42" pos:end="227:42">)</operator><operator pos:start="227:43" pos:end="227:44">==</operator><literal type="number" pos:start="227:45" pos:end="227:45">0</literal></expr>)</condition><block type="pseudo" pos:start="227:48" pos:end="227:56"><block_content pos:start="227:48" pos:end="227:56"> <continue pos:start="227:48" pos:end="227:56">continue;</continue></block_content></block></if></if_stmt>

                

                    <expr_stmt pos:start="231:21" pos:end="231:113"><expr pos:start="231:21" pos:end="231:112"><name pos:start="231:21" pos:end="231:25">score</name> <operator pos:start="231:27" pos:end="231:28">+=</operator> <literal type="number" pos:start="231:30" pos:end="231:31">32</literal><operator pos:start="231:32" pos:end="231:32">*</operator><operator pos:start="231:33" pos:end="231:33">(</operator><name pos:start="231:34" pos:end="231:63"><name pos:start="231:34" pos:end="231:43">mv_penalty</name><index pos:start="231:44" pos:end="231:63">[<expr pos:start="231:45" pos:end="231:62"><literal type="number" pos:start="231:45" pos:end="231:45">4</literal><operator pos:start="231:46" pos:end="231:46">*</operator><name pos:start="231:47" pos:end="231:48">mx</name> <operator pos:start="231:50" pos:end="231:50">+</operator> <name pos:start="231:52" pos:end="231:53">nx</name> <operator pos:start="231:55" pos:end="231:55">-</operator> <name pos:start="231:57" pos:end="231:62">pred_x</name></expr>]</index></name> <operator pos:start="231:65" pos:end="231:65">+</operator> <name pos:start="231:67" pos:end="231:96"><name pos:start="231:67" pos:end="231:76">mv_penalty</name><index pos:start="231:77" pos:end="231:96">[<expr pos:start="231:78" pos:end="231:95"><literal type="number" pos:start="231:78" pos:end="231:78">4</literal><operator pos:start="231:79" pos:end="231:79">*</operator><name pos:start="231:80" pos:end="231:81">my</name> <operator pos:start="231:83" pos:end="231:83">+</operator> <name pos:start="231:85" pos:end="231:86">ny</name> <operator pos:start="231:88" pos:end="231:88">-</operator> <name pos:start="231:90" pos:end="231:95">pred_y</name></expr>]</index></name><operator pos:start="231:97" pos:end="231:97">)</operator><operator pos:start="231:98" pos:end="231:98">*</operator><name pos:start="231:99" pos:end="231:112">penalty_factor</name></expr>;</expr_stmt>

<comment type="line" pos:start="233:1" pos:end="233:59">//                    if(nx&amp;1) score-=32*c-&gt;penalty_factor;</comment>

  <comment type="line" pos:start="235:3" pos:end="235:59">//                  if(ny&amp;1) score-=32*c-&gt;penalty_factor;</comment>

                    

                    <for pos:start="239:21" pos:end="257:21">for<control pos:start="239:24" pos:end="239:38">(<init pos:start="239:25" pos:end="239:28"><expr pos:start="239:25" pos:end="239:27"><name pos:start="239:25" pos:end="239:25">i</name><operator pos:start="239:26" pos:end="239:26">=</operator><literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>;</init> <condition pos:start="239:30" pos:end="239:33"><expr pos:start="239:30" pos:end="239:32"><name pos:start="239:30" pos:end="239:30">i</name><operator pos:start="239:31" pos:end="239:31">&lt;</operator><literal type="number" pos:start="239:32" pos:end="239:32">8</literal></expr>;</condition> <incr pos:start="239:35" pos:end="239:37"><expr pos:start="239:35" pos:end="239:37"><name pos:start="239:35" pos:end="239:35">i</name><operator pos:start="239:36" pos:end="239:37">++</operator></expr></incr>)</control><block pos:start="239:39" pos:end="257:21">{<block_content pos:start="241:25" pos:end="255:25">

                        <if_stmt pos:start="241:25" pos:end="255:25"><if pos:start="241:25" pos:end="255:25">if<condition pos:start="241:27" pos:end="241:43">(<expr pos:start="241:28" pos:end="241:42"><name pos:start="241:28" pos:end="241:32">score</name> <operator pos:start="241:34" pos:end="241:34">&lt;</operator> <name pos:start="241:36" pos:end="241:42"><name pos:start="241:36" pos:end="241:39">best</name><index pos:start="241:40" pos:end="241:42">[<expr pos:start="241:41" pos:end="241:41"><name pos:start="241:41" pos:end="241:41">i</name></expr>]</index></name></expr>)</condition><block pos:start="241:44" pos:end="255:25">{<block_content pos:start="243:29" pos:end="253:34">

                            <expr_stmt pos:start="243:29" pos:end="243:77"><expr pos:start="243:29" pos:end="243:76"><call pos:start="243:29" pos:end="243:76"><name pos:start="243:29" pos:end="243:35">memmove</name><argument_list pos:start="243:36" pos:end="243:76">(<argument pos:start="243:37" pos:end="243:46"><expr pos:start="243:37" pos:end="243:46"><operator pos:start="243:37" pos:end="243:37">&amp;</operator><name pos:start="243:38" pos:end="243:46"><name pos:start="243:38" pos:end="243:41">best</name><index pos:start="243:42" pos:end="243:46">[<expr pos:start="243:43" pos:end="243:45"><name pos:start="243:43" pos:end="243:43">i</name><operator pos:start="243:44" pos:end="243:44">+</operator><literal type="number" pos:start="243:45" pos:end="243:45">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:49" pos:end="243:56"><expr pos:start="243:49" pos:end="243:56"><operator pos:start="243:49" pos:end="243:49">&amp;</operator><name pos:start="243:50" pos:end="243:56"><name pos:start="243:50" pos:end="243:53">best</name><index pos:start="243:54" pos:end="243:56">[<expr pos:start="243:55" pos:end="243:55"><name pos:start="243:55" pos:end="243:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="243:59" pos:end="243:75"><expr pos:start="243:59" pos:end="243:75"><sizeof pos:start="243:59" pos:end="243:69">sizeof<argument_list pos:start="243:65" pos:end="243:69">(<argument pos:start="243:66" pos:end="243:68"><expr pos:start="243:66" pos:end="243:68"><name pos:start="243:66" pos:end="243:68">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="243:70" pos:end="243:70">*</operator><operator pos:start="243:71" pos:end="243:71">(</operator><literal type="number" pos:start="243:72" pos:end="243:73">7</literal><operator pos:start="243:73" pos:end="243:73">-</operator><name pos:start="243:74" pos:end="243:74">i</name><operator pos:start="243:75" pos:end="243:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="245:29" pos:end="245:93"><expr pos:start="245:29" pos:end="245:92"><call pos:start="245:29" pos:end="245:92"><name pos:start="245:29" pos:end="245:35">memmove</name><argument_list pos:start="245:36" pos:end="245:92">(<argument pos:start="245:37" pos:end="245:53"><expr pos:start="245:37" pos:end="245:53"><operator pos:start="245:37" pos:end="245:37">&amp;</operator><name pos:start="245:38" pos:end="245:53"><name pos:start="245:38" pos:end="245:45">best_pos</name><index pos:start="245:46" pos:end="245:50">[<expr pos:start="245:47" pos:end="245:49"><name pos:start="245:47" pos:end="245:47">i</name><operator pos:start="245:48" pos:end="245:48">+</operator><literal type="number" pos:start="245:49" pos:end="245:49">1</literal></expr>]</index><index pos:start="245:51" pos:end="245:53">[<expr pos:start="245:52" pos:end="245:52"><literal type="number" pos:start="245:52" pos:end="245:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="245:56" pos:end="245:70"><expr pos:start="245:56" pos:end="245:70"><operator pos:start="245:56" pos:end="245:56">&amp;</operator><name pos:start="245:57" pos:end="245:70"><name pos:start="245:57" pos:end="245:64">best_pos</name><index pos:start="245:65" pos:end="245:67">[<expr pos:start="245:66" pos:end="245:66"><name pos:start="245:66" pos:end="245:66">i</name></expr>]</index><index pos:start="245:68" pos:end="245:70">[<expr pos:start="245:69" pos:end="245:69"><literal type="number" pos:start="245:69" pos:end="245:69">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="245:73" pos:end="245:91"><expr pos:start="245:73" pos:end="245:91"><sizeof pos:start="245:73" pos:end="245:83">sizeof<argument_list pos:start="245:79" pos:end="245:83">(<argument pos:start="245:80" pos:end="245:82"><expr pos:start="245:80" pos:end="245:82"><name pos:start="245:80" pos:end="245:82">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="245:84" pos:end="245:84">*</operator><literal type="number" pos:start="245:85" pos:end="245:85">2</literal><operator pos:start="245:86" pos:end="245:86">*</operator><operator pos:start="245:87" pos:end="245:87">(</operator><literal type="number" pos:start="245:88" pos:end="245:89">7</literal><operator pos:start="245:89" pos:end="245:89">-</operator><name pos:start="245:90" pos:end="245:90">i</name><operator pos:start="245:91" pos:end="245:91">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="247:29" pos:end="247:43"><expr pos:start="247:29" pos:end="247:42"><name pos:start="247:29" pos:end="247:35"><name pos:start="247:29" pos:end="247:32">best</name><index pos:start="247:33" pos:end="247:35">[<expr pos:start="247:34" pos:end="247:34"><name pos:start="247:34" pos:end="247:34">i</name></expr>]</index></name><operator pos:start="247:36" pos:end="247:36">=</operator> <name pos:start="247:38" pos:end="247:42">score</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="249:29" pos:end="249:54"><expr pos:start="249:29" pos:end="249:53"><name pos:start="249:29" pos:end="249:42"><name pos:start="249:29" pos:end="249:36">best_pos</name><index pos:start="249:37" pos:end="249:39">[<expr pos:start="249:38" pos:end="249:38"><name pos:start="249:38" pos:end="249:38">i</name></expr>]</index><index pos:start="249:40" pos:end="249:42">[<expr pos:start="249:41" pos:end="249:41"><literal type="number" pos:start="249:41" pos:end="249:41">0</literal></expr>]</index></name><operator pos:start="249:43" pos:end="249:43">=</operator> <name pos:start="249:45" pos:end="249:46">nx</name> <operator pos:start="249:48" pos:end="249:48">+</operator> <literal type="number" pos:start="249:50" pos:end="249:50">4</literal><operator pos:start="249:51" pos:end="249:51">*</operator><name pos:start="249:52" pos:end="249:53">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="251:29" pos:end="251:54"><expr pos:start="251:29" pos:end="251:53"><name pos:start="251:29" pos:end="251:42"><name pos:start="251:29" pos:end="251:36">best_pos</name><index pos:start="251:37" pos:end="251:39">[<expr pos:start="251:38" pos:end="251:38"><name pos:start="251:38" pos:end="251:38">i</name></expr>]</index><index pos:start="251:40" pos:end="251:42">[<expr pos:start="251:41" pos:end="251:41"><literal type="number" pos:start="251:41" pos:end="251:41">1</literal></expr>]</index></name><operator pos:start="251:43" pos:end="251:43">=</operator> <name pos:start="251:45" pos:end="251:46">ny</name> <operator pos:start="251:48" pos:end="251:48">+</operator> <literal type="number" pos:start="251:50" pos:end="251:50">4</literal><operator pos:start="251:51" pos:end="251:51">*</operator><name pos:start="251:52" pos:end="251:53">my</name></expr>;</expr_stmt>

                            <break pos:start="253:29" pos:end="253:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>            

        </block_content>}</block></else></if_stmt>

        <for pos:start="265:9" pos:end="324:0">for<control pos:start="265:12" pos:end="265:39">(<init pos:start="265:13" pos:end="265:16"><expr pos:start="265:13" pos:end="265:15"><name pos:start="265:13" pos:end="265:13">i</name><operator pos:start="265:14" pos:end="265:14">=</operator><literal type="number" pos:start="265:15" pos:end="265:15">0</literal></expr>;</init> <condition pos:start="265:18" pos:end="265:34"><expr pos:start="265:18" pos:end="265:33"><name pos:start="265:18" pos:end="265:18">i</name><operator pos:start="265:19" pos:end="265:19">&lt;</operator><name pos:start="265:20" pos:end="265:33">subpel_quality</name></expr>;</condition> <incr pos:start="265:36" pos:end="265:38"><expr pos:start="265:36" pos:end="265:38"><name pos:start="265:36" pos:end="265:36">i</name><operator pos:start="265:37" pos:end="265:38">++</operator></expr></incr>)</control><block pos:start="265:40" pos:end="324:0">{<block_content pos:start="267:13" pos:end="271:54">

            <expr_stmt pos:start="267:13" pos:end="267:31"><expr pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:14">nx</name><operator pos:start="267:15" pos:end="267:15">=</operator> <name pos:start="267:17" pos:end="267:30"><name pos:start="267:17" pos:end="267:24">best_pos</name><index pos:start="267:25" pos:end="267:27">[<expr pos:start="267:26" pos:end="267:26"><name pos:start="267:26" pos:end="267:26">i</name></expr>]</index><index pos:start="267:28" pos:end="267:30">[<expr pos:start="267:29" pos:end="267:29"><literal type="number" pos:start="267:29" pos:end="267:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:31"><expr pos:start="269:13" pos:end="269:30"><name pos:start="269:13" pos:end="269:14">ny</name><operator pos:start="269:15" pos:end="269:15">=</operator> <name pos:start="269:17" pos:end="269:30"><name pos:start="269:17" pos:end="269:24">best_pos</name><index pos:start="269:25" pos:end="269:27">[<expr pos:start="269:26" pos:end="269:26"><name pos:start="269:26" pos:end="269:26">i</name></expr>]</index><index pos:start="269:28" pos:end="269:30">[<expr pos:start="269:29" pos:end="269:29"><literal type="number" pos:start="269:29" pos:end="269:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <macro pos:start="271:13" pos:end="271:54"><name pos:start="271:13" pos:end="271:28">CHECK_QUARTER_MV</name><argument_list pos:start="271:29" pos:end="271:54">(<argument pos:start="271:30" pos:end="271:33">nx&amp;<literal type="number" pos:start="271:33" pos:end="271:33">3</literal></argument>, <argument pos:start="271:36" pos:end="271:39">ny&amp;<literal type="number" pos:start="271:39" pos:end="271:39">3</literal></argument>, <argument pos:start="271:42" pos:end="271:46">nx&gt;&gt;<literal type="number" pos:start="271:46" pos:end="271:46">2</literal></argument>, <argument pos:start="271:49" pos:end="271:53">ny&gt;&gt;<literal type="number" pos:start="271:53" pos:end="271:53">2</literal></argument>)</argument_list></macro>

        </block_content>}</block></for>



<cpp:if pos:start="277:1" pos:end="277:5">#<cpp:directive pos:start="277:2" pos:end="277:3">if</cpp:directive> <expr pos:start="277:5" pos:end="277:5"><literal type="number" pos:start="277:5" pos:end="277:5">0</literal></expr></cpp:if>

            const int tl= score_map[(index-(1&lt;&lt;ME_MAP_SHIFT)-1)&amp;(ME_MAP_SIZE-1)];

            const int bl= score_map[(index+(1&lt;&lt;ME_MAP_SHIFT)-1)&amp;(ME_MAP_SIZE-1)];

            const int tr= score_map[(index-(1&lt;&lt;ME_MAP_SHIFT)+1)&amp;(ME_MAP_SIZE-1)];

            const int br= score_map[(index+(1&lt;&lt;ME_MAP_SHIFT)+1)&amp;(ME_MAP_SIZE-1)];

<comment type="line" pos:start="287:1" pos:end="287:93">//            if(l &lt; r &amp;&amp; l &lt; t &amp;&amp; l &lt; b &amp;&amp; l &lt; tl &amp;&amp; l &lt; bl &amp;&amp; l &lt; tr &amp;&amp; l &lt; br &amp;&amp; bl &lt; tl){</comment>

            if(tl&lt;br){



<comment type="line" pos:start="293:1" pos:end="293:46">//            nx= FFMAX(4*mx - bx, bx - 4*mx);</comment>

<comment type="line" pos:start="295:1" pos:end="295:46">//            ny= FFMAX(4*my - by, by - 4*my);</comment>

            

            static int stats[7][7], count;

            count++;

            stats[4*mx - bx + 3][4*my - by + 3]++;

            if(256*256*256*64 % count ==0){

                for(i=0; i&lt;49; i++){

                    if((i%7)==0) printf("\n");

                    printf("%6d ", stats[0][i]);

                }

                printf("\n");

            }

            }

<cpp:endif pos:start="321:1" pos:end="321:6">#<cpp:directive pos:start="321:2" pos:end="321:6">endif</cpp:directive></cpp:endif>

<cpp:else pos:start="323:1" pos:end="323:5">#<cpp:directive pos:start="323:2" pos:end="323:5">else</cpp:directive></cpp:else>



        <macro pos:start="327:9" pos:end="327:42"><name pos:start="327:9" pos:end="327:24">CHECK_QUARTER_MV</name><argument_list pos:start="327:25" pos:end="327:42">(<argument pos:start="327:26" pos:end="327:26"><literal type="number" pos:start="327:26" pos:end="327:26">2</literal></argument>, <argument pos:start="327:29" pos:end="327:29"><literal type="number" pos:start="327:29" pos:end="327:29">2</literal></argument>, <argument pos:start="327:32" pos:end="327:35">mx-<literal type="number" pos:start="327:35" pos:end="327:35">1</literal></argument>, <argument pos:start="327:38" pos:end="327:41">my-<literal type="number" pos:start="327:41" pos:end="327:41">1</literal></argument>)</argument_list></macro>

        <macro pos:start="329:9" pos:end="329:42"><name pos:start="329:9" pos:end="329:24">CHECK_QUARTER_MV</name><argument_list pos:start="329:25" pos:end="329:42">(<argument pos:start="329:26" pos:end="329:26"><literal type="number" pos:start="329:26" pos:end="329:26">0</literal></argument>, <argument pos:start="329:29" pos:end="329:29"><literal type="number" pos:start="329:29" pos:end="329:29">2</literal></argument>, <argument pos:start="329:32" pos:end="329:33">mx</argument>  , <argument pos:start="329:38" pos:end="329:41">my-<literal type="number" pos:start="329:41" pos:end="329:41">1</literal></argument>)</argument_list></macro>        

        <macro pos:start="331:9" pos:end="331:42"><name pos:start="331:9" pos:end="331:24">CHECK_QUARTER_MV</name><argument_list pos:start="331:25" pos:end="331:42">(<argument pos:start="331:26" pos:end="331:26"><literal type="number" pos:start="331:26" pos:end="331:26">2</literal></argument>, <argument pos:start="331:29" pos:end="331:29"><literal type="number" pos:start="331:29" pos:end="331:29">2</literal></argument>, <argument pos:start="331:32" pos:end="331:33">mx</argument>  , <argument pos:start="331:38" pos:end="331:41">my-<literal type="number" pos:start="331:41" pos:end="331:41">1</literal></argument>)</argument_list></macro>

        <macro pos:start="333:9" pos:end="333:42"><name pos:start="333:9" pos:end="333:24">CHECK_QUARTER_MV</name><argument_list pos:start="333:25" pos:end="333:42">(<argument pos:start="333:26" pos:end="333:26"><literal type="number" pos:start="333:26" pos:end="333:26">2</literal></argument>, <argument pos:start="333:29" pos:end="333:29"><literal type="number" pos:start="333:29" pos:end="333:29">0</literal></argument>, <argument pos:start="333:32" pos:end="333:33">mx</argument>  , <argument pos:start="333:38" pos:end="333:39">my</argument>  )</argument_list></macro>

        <macro pos:start="335:9" pos:end="335:42"><name pos:start="335:9" pos:end="335:24">CHECK_QUARTER_MV</name><argument_list pos:start="335:25" pos:end="335:42">(<argument pos:start="335:26" pos:end="335:26"><literal type="number" pos:start="335:26" pos:end="335:26">2</literal></argument>, <argument pos:start="335:29" pos:end="335:29"><literal type="number" pos:start="335:29" pos:end="335:29">2</literal></argument>, <argument pos:start="335:32" pos:end="335:33">mx</argument>  , <argument pos:start="335:38" pos:end="335:39">my</argument>  )</argument_list></macro>

        <macro pos:start="337:9" pos:end="337:42"><name pos:start="337:9" pos:end="337:24">CHECK_QUARTER_MV</name><argument_list pos:start="337:25" pos:end="337:42">(<argument pos:start="337:26" pos:end="337:26"><literal type="number" pos:start="337:26" pos:end="337:26">0</literal></argument>, <argument pos:start="337:29" pos:end="337:29"><literal type="number" pos:start="337:29" pos:end="337:29">2</literal></argument>, <argument pos:start="337:32" pos:end="337:33">mx</argument>  , <argument pos:start="337:38" pos:end="337:39">my</argument>  )</argument_list></macro>

        <macro pos:start="339:9" pos:end="339:42"><name pos:start="339:9" pos:end="339:24">CHECK_QUARTER_MV</name><argument_list pos:start="339:25" pos:end="339:42">(<argument pos:start="339:26" pos:end="339:26"><literal type="number" pos:start="339:26" pos:end="339:26">2</literal></argument>, <argument pos:start="339:29" pos:end="339:29"><literal type="number" pos:start="339:29" pos:end="339:29">2</literal></argument>, <argument pos:start="339:32" pos:end="339:35">mx-<literal type="number" pos:start="339:35" pos:end="339:35">1</literal></argument>, <argument pos:start="339:38" pos:end="339:39">my</argument>  )</argument_list></macro>

        <macro pos:start="341:9" pos:end="341:42"><name pos:start="341:9" pos:end="341:24">CHECK_QUARTER_MV</name><argument_list pos:start="341:25" pos:end="341:42">(<argument pos:start="341:26" pos:end="341:26"><literal type="number" pos:start="341:26" pos:end="341:26">2</literal></argument>, <argument pos:start="341:29" pos:end="341:29"><literal type="number" pos:start="341:29" pos:end="341:29">0</literal></argument>, <argument pos:start="341:32" pos:end="341:35">mx-<literal type="number" pos:start="341:35" pos:end="341:35">1</literal></argument>, <argument pos:start="341:38" pos:end="341:39">my</argument>  )</argument_list></macro>

        

        <expr_stmt pos:start="345:9" pos:end="345:15"><expr pos:start="345:9" pos:end="345:14"><name pos:start="345:9" pos:end="345:10">nx</name><operator pos:start="345:11" pos:end="345:11">=</operator> <name pos:start="345:13" pos:end="345:14">bx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:15"><expr pos:start="347:9" pos:end="347:14"><name pos:start="347:9" pos:end="347:10">ny</name><operator pos:start="347:11" pos:end="347:11">=</operator> <name pos:start="347:13" pos:end="347:14">by</name></expr>;</expr_stmt>

        

        <for pos:start="351:9" pos:end="416:0">for<control pos:start="351:12" pos:end="351:26">(<init pos:start="351:13" pos:end="351:16"><expr pos:start="351:13" pos:end="351:15"><name pos:start="351:13" pos:end="351:13">i</name><operator pos:start="351:14" pos:end="351:14">=</operator><literal type="number" pos:start="351:15" pos:end="351:15">0</literal></expr>;</init> <condition pos:start="351:18" pos:end="351:21"><expr pos:start="351:18" pos:end="351:20"><name pos:start="351:18" pos:end="351:18">i</name><operator pos:start="351:19" pos:end="351:19">&lt;</operator><literal type="number" pos:start="351:20" pos:end="351:20">8</literal></expr>;</condition> <incr pos:start="351:23" pos:end="351:25"><expr pos:start="351:23" pos:end="351:25"><name pos:start="351:23" pos:end="351:23">i</name><operator pos:start="351:24" pos:end="351:25">++</operator></expr></incr>)</control><block pos:start="351:27" pos:end="416:0">{<block_content pos:start="353:13" pos:end="357:94">

            <decl_stmt pos:start="353:13" pos:end="353:48"><decl pos:start="353:13" pos:end="353:47"><type pos:start="353:13" pos:end="353:15"><name pos:start="353:13" pos:end="353:15">int</name></type> <name pos:start="353:17" pos:end="353:21"><name pos:start="353:17" pos:end="353:18">ox</name><index pos:start="353:19" pos:end="353:21">[<expr pos:start="353:20" pos:end="353:20"><literal type="number" pos:start="353:20" pos:end="353:20">8</literal></expr>]</index></name><init pos:start="353:22" pos:end="353:47">= <expr pos:start="353:24" pos:end="353:47"><block pos:start="353:24" pos:end="353:47">{<expr pos:start="353:25" pos:end="353:25"><literal type="number" pos:start="353:25" pos:end="353:25">0</literal></expr>, <expr pos:start="353:28" pos:end="353:28"><literal type="number" pos:start="353:28" pos:end="353:28">1</literal></expr>, <expr pos:start="353:31" pos:end="353:31"><literal type="number" pos:start="353:31" pos:end="353:31">1</literal></expr>, <expr pos:start="353:34" pos:end="353:34"><literal type="number" pos:start="353:34" pos:end="353:34">1</literal></expr>, <expr pos:start="353:37" pos:end="353:37"><literal type="number" pos:start="353:37" pos:end="353:37">0</literal></expr>,<expr pos:start="353:39" pos:end="353:40"><operator pos:start="353:39" pos:end="353:39">-</operator><literal type="number" pos:start="353:40" pos:end="353:40">1</literal></expr>,<expr pos:start="353:42" pos:end="353:43"><operator pos:start="353:42" pos:end="353:42">-</operator><literal type="number" pos:start="353:43" pos:end="353:43">1</literal></expr>,<expr pos:start="353:45" pos:end="353:46"><operator pos:start="353:45" pos:end="353:45">-</operator><literal type="number" pos:start="353:46" pos:end="353:46">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="355:13" pos:end="355:48"><decl pos:start="355:13" pos:end="355:47"><type pos:start="355:13" pos:end="355:15"><name pos:start="355:13" pos:end="355:15">int</name></type> <name pos:start="355:17" pos:end="355:21"><name pos:start="355:17" pos:end="355:18">oy</name><index pos:start="355:19" pos:end="355:21">[<expr pos:start="355:20" pos:end="355:20"><literal type="number" pos:start="355:20" pos:end="355:20">8</literal></expr>]</index></name><init pos:start="355:22" pos:end="355:47">= <expr pos:start="355:24" pos:end="355:47"><block pos:start="355:24" pos:end="355:47">{<expr pos:start="355:25" pos:end="355:25"><literal type="number" pos:start="355:25" pos:end="355:25">1</literal></expr>, <expr pos:start="355:28" pos:end="355:28"><literal type="number" pos:start="355:28" pos:end="355:28">1</literal></expr>, <expr pos:start="355:31" pos:end="355:31"><literal type="number" pos:start="355:31" pos:end="355:31">0</literal></expr>,<expr pos:start="355:33" pos:end="355:34"><operator pos:start="355:33" pos:end="355:33">-</operator><literal type="number" pos:start="355:34" pos:end="355:34">1</literal></expr>,<expr pos:start="355:36" pos:end="355:37"><operator pos:start="355:36" pos:end="355:36">-</operator><literal type="number" pos:start="355:37" pos:end="355:37">1</literal></expr>,<expr pos:start="355:39" pos:end="355:40"><operator pos:start="355:39" pos:end="355:39">-</operator><literal type="number" pos:start="355:40" pos:end="355:40">1</literal></expr>, <expr pos:start="355:43" pos:end="355:43"><literal type="number" pos:start="355:43" pos:end="355:43">0</literal></expr>, <expr pos:start="355:46" pos:end="355:46"><literal type="number" pos:start="355:46" pos:end="355:46">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <macro pos:start="357:13" pos:end="357:94"><name pos:start="357:13" pos:end="357:28">CHECK_QUARTER_MV</name><argument_list pos:start="357:29" pos:end="357:94">(<argument pos:start="357:30" pos:end="357:43">(nx + ox[i])&amp;<literal type="number" pos:start="357:43" pos:end="357:43">3</literal></argument>, <argument pos:start="357:46" pos:end="357:59">(ny + oy[i])&amp;<literal type="number" pos:start="357:59" pos:end="357:59">3</literal></argument>, <argument pos:start="357:62" pos:end="357:76">(nx + ox[i])&gt;&gt;<literal type="number" pos:start="357:76" pos:end="357:76">2</literal></argument>, <argument pos:start="357:79" pos:end="357:93">(ny + oy[i])&gt;&gt;<literal type="number" pos:start="357:93" pos:end="357:93">2</literal></argument>)</argument_list></macro>

        </block_content>}</block></for>

<cpp:endif pos:start="361:1" pos:end="361:6">#<cpp:directive pos:start="361:2" pos:end="361:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="363:1" pos:end="363:5">#<cpp:directive pos:start="363:2" pos:end="363:3">if</cpp:directive> <expr pos:start="363:5" pos:end="363:5"><literal type="number" pos:start="363:5" pos:end="363:5">0</literal></expr></cpp:if>

        <comment type="line" pos:start="365:9" pos:end="365:20">//outer ring</comment>

        CHECK_QUARTER_MV(1, 3, mx-1, my-1)

        CHECK_QUARTER_MV(1, 2, mx-1, my-1)

        CHECK_QUARTER_MV(1, 1, mx-1, my-1)

        CHECK_QUARTER_MV(2, 1, mx-1, my-1)

        CHECK_QUARTER_MV(3, 1, mx-1, my-1)

        CHECK_QUARTER_MV(0, 1, mx  , my-1)

        CHECK_QUARTER_MV(1, 1, mx  , my-1)

        CHECK_QUARTER_MV(2, 1, mx  , my-1)

        CHECK_QUARTER_MV(3, 1, mx  , my-1)

        CHECK_QUARTER_MV(3, 2, mx  , my-1)

        CHECK_QUARTER_MV(3, 3, mx  , my-1)

        CHECK_QUARTER_MV(3, 0, mx  , my  )

        CHECK_QUARTER_MV(3, 1, mx  , my  )

        CHECK_QUARTER_MV(3, 2, mx  , my  )

        CHECK_QUARTER_MV(3, 3, mx  , my  )

        CHECK_QUARTER_MV(2, 3, mx  , my  )

        CHECK_QUARTER_MV(1, 3, mx  , my  )

        CHECK_QUARTER_MV(0, 3, mx  , my  )

        CHECK_QUARTER_MV(3, 3, mx-1, my  )

        CHECK_QUARTER_MV(2, 3, mx-1, my  )

        CHECK_QUARTER_MV(1, 3, mx-1, my  )

        CHECK_QUARTER_MV(1, 2, mx-1, my  )

        CHECK_QUARTER_MV(1, 1, mx-1, my  )

        CHECK_QUARTER_MV(1, 0, mx-1, my  )

<cpp:endif pos:start="415:1" pos:end="415:6">#<cpp:directive pos:start="415:2" pos:end="415:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="417:9" pos:end="417:77"><expr pos:start="417:9" pos:end="417:76"><call pos:start="417:9" pos:end="417:76"><name pos:start="417:9" pos:end="417:14">assert</name><argument_list pos:start="417:15" pos:end="417:76">(<argument pos:start="417:16" pos:end="417:75"><expr pos:start="417:16" pos:end="417:75"><name pos:start="417:16" pos:end="417:17">bx</name> <operator pos:start="417:19" pos:end="417:20">&gt;=</operator> <name pos:start="417:22" pos:end="417:25">xmin</name><operator pos:start="417:26" pos:end="417:26">*</operator><literal type="number" pos:start="417:27" pos:end="417:27">4</literal> <operator pos:start="417:29" pos:end="417:30">&amp;&amp;</operator> <name pos:start="417:32" pos:end="417:33">bx</name> <operator pos:start="417:35" pos:end="417:36">&lt;=</operator> <name pos:start="417:38" pos:end="417:41">xmax</name><operator pos:start="417:42" pos:end="417:42">*</operator><literal type="number" pos:start="417:43" pos:end="417:43">4</literal> <operator pos:start="417:45" pos:end="417:46">&amp;&amp;</operator> <name pos:start="417:48" pos:end="417:49">by</name> <operator pos:start="417:51" pos:end="417:52">&gt;=</operator> <name pos:start="417:54" pos:end="417:57">ymin</name><operator pos:start="417:58" pos:end="417:58">*</operator><literal type="number" pos:start="417:59" pos:end="417:59">4</literal> <operator pos:start="417:61" pos:end="417:62">&amp;&amp;</operator> <name pos:start="417:64" pos:end="417:65">by</name> <operator pos:start="417:67" pos:end="417:68">&lt;=</operator> <name pos:start="417:70" pos:end="417:73">ymax</name><operator pos:start="417:74" pos:end="417:74">*</operator><literal type="number" pos:start="417:75" pos:end="417:75">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="421:9" pos:end="421:21"><expr pos:start="421:9" pos:end="421:20"><operator pos:start="421:9" pos:end="421:9">*</operator><name pos:start="421:10" pos:end="421:15">mx_ptr</name> <operator pos:start="421:17" pos:end="421:17">=</operator> <name pos:start="421:19" pos:end="421:20">bx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:21"><expr pos:start="423:9" pos:end="423:20"><operator pos:start="423:9" pos:end="423:9">*</operator><name pos:start="423:10" pos:end="423:15">my_ptr</name> <operator pos:start="423:17" pos:end="423:17">=</operator> <name pos:start="423:19" pos:end="423:20">by</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="425:6" pos:end="431:5">else<block pos:start="425:10" pos:end="431:5">{<block_content pos:start="427:9" pos:end="429:22">

        <expr_stmt pos:start="427:9" pos:end="427:22"><expr pos:start="427:9" pos:end="427:21"><operator pos:start="427:9" pos:end="427:9">*</operator><name pos:start="427:10" pos:end="427:15">mx_ptr</name> <operator pos:start="427:17" pos:end="427:17">=</operator><literal type="number" pos:start="427:18" pos:end="427:18">4</literal><operator pos:start="427:19" pos:end="427:19">*</operator><name pos:start="427:20" pos:end="427:21">mx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="429:22"><expr pos:start="429:9" pos:end="429:21"><operator pos:start="429:9" pos:end="429:9">*</operator><name pos:start="429:10" pos:end="429:15">my_ptr</name> <operator pos:start="429:17" pos:end="429:17">=</operator><literal type="number" pos:start="429:18" pos:end="429:18">4</literal><operator pos:start="429:19" pos:end="429:19">*</operator><name pos:start="429:20" pos:end="429:21">my</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="435:5" pos:end="435:16">return <expr pos:start="435:12" pos:end="435:15"><name pos:start="435:12" pos:end="435:15">dmin</name></expr>;</return>

</block_content>}</block></function>
</unit>
