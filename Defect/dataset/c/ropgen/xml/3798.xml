<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3798.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">video_get_buffer</name><parameter_list pos:start="1:28" pos:end="1:60">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">AVFrame</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:27">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">FramePool</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pool</name> <init pos:start="5:21" pos:end="5:39">= <expr pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:33">internal</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:39">pool</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name> <init pos:start="7:36" pos:end="7:69">= <expr pos:start="7:38" pos:end="7:69"><call pos:start="7:38" pos:end="7:69"><name pos:start="7:38" pos:end="7:56">av_pix_fmt_desc_get</name><argument_list pos:start="7:57" pos:end="7:69">(<argument pos:start="7:58" pos:end="7:68"><expr pos:start="7:58" pos:end="7:68"><name pos:start="7:58" pos:end="7:68"><name pos:start="7:58" pos:end="7:60">pic</name><operator pos:start="7:61" pos:end="7:62">-&gt;</operator><name pos:start="7:63" pos:end="7:68">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:11">pic</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">data</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="13:23" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:86"><expr pos:start="15:9" pos:end="15:85"><call pos:start="15:9" pos:end="15:85"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:85">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">s</name></expr></argument>, <argument pos:start="15:19" pos:end="15:30"><expr pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:33" pos:end="15:84"><expr pos:start="15:33" pos:end="15:84"><literal type="string" pos:start="15:33" pos:end="15:84">"pic-&gt;data[0]!=NULL in avcodec_default_get_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">desc</name></expr>)</condition> <block pos:start="23:16" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:31">

        <expr_stmt pos:start="25:9" pos:end="29:46"><expr pos:start="25:9" pos:end="29:45"><call pos:start="25:9" pos:end="29:45"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="29:45">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_ERROR</name></expr></argument>,

            <argument pos:start="27:13" pos:end="27:67"><expr pos:start="27:13" pos:end="27:67"><literal type="string" pos:start="27:13" pos:end="27:67">"Unable to get pixel format descriptor for format %s\n"</literal></expr></argument>,

            <argument pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:44"><call pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:31">av_get_pix_fmt_name</name><argument_list pos:start="29:32" pos:end="29:44">(<argument pos:start="29:33" pos:end="29:43"><expr pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:35">pic</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:43">format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><call pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:43">(<argument pos:start="37:12" pos:end="37:20"><expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:14">pic</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:20">data</name></name></expr></argument>, <argument pos:start="37:23" pos:end="37:23"><expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr></argument>, <argument pos:start="37:26" pos:end="37:42"><expr pos:start="37:26" pos:end="37:42"><sizeof pos:start="37:26" pos:end="37:42">sizeof<argument_list pos:start="37:32" pos:end="37:42">(<argument pos:start="37:33" pos:end="37:41"><expr pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:35">pic</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:7">pic</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:22">extended_data</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:34"><name pos:start="39:26" pos:end="39:28">pic</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">data</name></name></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="59:5">for <control pos:start="43:9" pos:end="43:45">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:40"><expr pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <literal type="number" pos:start="43:21" pos:end="43:21">4</literal> <operator pos:start="43:23" pos:end="43:24">&amp;&amp;</operator> <name pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:29">pool</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:36">pools</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:42">i</name><operator pos:start="43:43" pos:end="43:44">++</operator></expr></incr>)</control> <block pos:start="43:47" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:41">

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:11">pic</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:21">linesize</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">i</name></expr>]</index></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:44"><name pos:start="45:28" pos:end="45:31">pool</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:41">linesize</name><index pos:start="45:42" pos:end="45:44">[<expr pos:start="45:43" pos:end="45:43"><name pos:start="45:43" pos:end="45:43">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:57"><expr pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:11">pic</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">buf</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><name pos:start="49:18" pos:end="49:18">i</name></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:56"><name pos:start="49:23" pos:end="49:40">av_buffer_pool_get</name><argument_list pos:start="49:41" pos:end="49:56">(<argument pos:start="49:42" pos:end="49:55"><expr pos:start="49:42" pos:end="49:55"><name pos:start="49:42" pos:end="49:55"><name pos:start="49:42" pos:end="49:45">pool</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:52">pools</name><index pos:start="49:53" pos:end="49:55">[<expr pos:start="49:54" pos:end="49:54"><name pos:start="49:54" pos:end="49:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:22"><if pos:start="51:9" pos:end="53:22">if <condition pos:start="51:12" pos:end="51:25">(<expr pos:start="51:13" pos:end="51:24"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:24"><name pos:start="51:14" pos:end="51:16">pic</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:21">buf</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:22"><block_content pos:start="53:13" pos:end="53:22">

            <goto pos:start="53:13" pos:end="53:22">goto <name pos:start="53:18" pos:end="53:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">pic</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">data</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><name pos:start="57:19" pos:end="57:19">i</name></expr>]</index></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:26">pic</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:31">buf</name><index pos:start="57:32" pos:end="57:34">[<expr pos:start="57:33" pos:end="57:33"><name pos:start="57:33" pos:end="57:33">i</name></expr>]</index></name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:40">data</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="61:5" pos:end="67:5">for <control pos:start="61:9" pos:end="61:41">(<init pos:start="61:10" pos:end="61:10">;</init> <condition pos:start="61:12" pos:end="61:36"><expr pos:start="61:12" pos:end="61:35"><name pos:start="61:12" pos:end="61:12">i</name> <operator pos:start="61:14" pos:end="61:14">&lt;</operator> <name pos:start="61:16" pos:end="61:35">AV_NUM_DATA_POINTERS</name></expr>;</condition> <incr pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:38">i</name><operator pos:start="61:39" pos:end="61:40">++</operator></expr></incr>)</control> <block pos:start="61:43" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:29">

        <expr_stmt pos:start="63:9" pos:end="63:28"><expr pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">pic</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">data</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">i</name></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:11">pic</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:21">linesize</name><index pos:start="65:22" pos:end="65:24">[<expr pos:start="65:23" pos:end="65:23"><name pos:start="65:23" pos:end="65:23">i</name></expr>]</index></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="69:5" pos:end="73:74"><if pos:start="69:5" pos:end="73:74">if <condition pos:start="69:8" pos:end="71:48">(<expr pos:start="69:9" pos:end="71:47"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:12">desc</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:19">flags</name></name> <operator pos:start="69:21" pos:end="69:21">&amp;</operator> <name pos:start="69:23" pos:end="69:41">AV_PIX_FMT_FLAG_PAL</name> <operator pos:start="69:43" pos:end="69:44">||</operator>

        <name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:12">desc</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:19">flags</name></name> <operator pos:start="71:21" pos:end="71:21">&amp;</operator> <name pos:start="71:23" pos:end="71:47">AV_PIX_FMT_FLAG_PSEUDOPAL</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:74"><block_content pos:start="73:9" pos:end="73:74">

        <expr_stmt pos:start="73:9" pos:end="73:74"><expr pos:start="73:9" pos:end="73:73"><call pos:start="73:9" pos:end="73:73"><name pos:start="73:9" pos:end="73:34">avpriv_set_systematic_pal2</name><argument_list pos:start="73:35" pos:end="73:73">(<argument pos:start="73:36" pos:end="73:59"><expr pos:start="73:36" pos:end="73:59"><operator pos:start="73:36" pos:end="73:36">(</operator><name pos:start="73:37" pos:end="73:44">uint32_t</name> <operator pos:start="73:46" pos:end="73:46">*</operator><operator pos:start="73:47" pos:end="73:47">)</operator><name pos:start="73:48" pos:end="73:59"><name pos:start="73:48" pos:end="73:50">pic</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:56">data</name><index pos:start="73:57" pos:end="73:59">[<expr pos:start="73:58" pos:end="73:58"><literal type="number" pos:start="73:58" pos:end="73:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:62" pos:end="73:72"><expr pos:start="73:62" pos:end="73:72"><name pos:start="73:62" pos:end="73:72"><name pos:start="73:62" pos:end="73:64">pic</name><operator pos:start="73:65" pos:end="73:66">-&gt;</operator><name pos:start="73:67" pos:end="73:72">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:78"><if pos:start="77:5" pos:end="79:78">if <condition pos:start="77:8" pos:end="77:36">(<expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:16">debug</name></name> <operator pos:start="77:18" pos:end="77:18">&amp;</operator> <name pos:start="77:20" pos:end="77:35">FF_DEBUG_BUFFERS</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:78"><block_content pos:start="79:9" pos:end="79:78">

        <expr_stmt pos:start="79:9" pos:end="79:78"><expr pos:start="79:9" pos:end="79:77"><call pos:start="79:9" pos:end="79:77"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:77">(<argument pos:start="79:16" pos:end="79:16"><expr pos:start="79:16" pos:end="79:16"><name pos:start="79:16" pos:end="79:16">s</name></expr></argument>, <argument pos:start="79:19" pos:end="79:30"><expr pos:start="79:19" pos:end="79:30"><name pos:start="79:19" pos:end="79:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:33" pos:end="79:71"><expr pos:start="79:33" pos:end="79:71"><literal type="string" pos:start="79:33" pos:end="79:71">"default_get_buffer called on pic %p\n"</literal></expr></argument>, <argument pos:start="79:74" pos:end="79:76"><expr pos:start="79:74" pos:end="79:76"><name pos:start="79:74" pos:end="79:76">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

<label pos:start="85:1" pos:end="85:5"><name pos:start="85:1" pos:end="85:4">fail</name>:</label>

    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><call pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:18">av_frame_unref</name><argument_list pos:start="87:19" pos:end="87:23">(<argument pos:start="87:20" pos:end="87:22"><expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:27">return <expr pos:start="89:12" pos:end="89:26"><call pos:start="89:12" pos:end="89:26"><name pos:start="89:12" pos:end="89:18">AVERROR</name><argument_list pos:start="89:19" pos:end="89:26">(<argument pos:start="89:20" pos:end="89:25"><expr pos:start="89:20" pos:end="89:25"><name pos:start="89:20" pos:end="89:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
