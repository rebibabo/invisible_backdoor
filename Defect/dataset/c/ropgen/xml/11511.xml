<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11511.c" pos:tabs="8"><function pos:start="1:1" pos:end="114:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">rtp_mpegts_write_header</name><parameter_list pos:start="1:35" pos:end="1:54">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="114:15">{<block_content pos:start="5:5" pos:end="114:15">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">MuxChain</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:26">chain</name> <init pos:start="5:28" pos:end="5:41">= <expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:31">mpegts_ctx</name> <init pos:start="7:33" pos:end="7:38">= <expr pos:start="7:35" pos:end="7:38"><name pos:start="7:35" pos:end="7:38">NULL</name></expr></init></decl>, <decl pos:start="7:41" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:48">rtp_ctx</name> <init pos:start="7:50" pos:end="7:55">= <expr pos:start="7:52" pos:end="7:55"><name pos:start="7:52" pos:end="7:55">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:73"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVOutputFormat</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:33">mpegts_format</name> <init pos:start="9:35" pos:end="9:73">= <expr pos:start="9:37" pos:end="9:73"><call pos:start="9:37" pos:end="9:73"><name pos:start="9:37" pos:end="9:51">av_guess_format</name><argument_list pos:start="9:52" pos:end="9:73">(<argument pos:start="9:53" pos:end="9:60"><expr pos:start="9:53" pos:end="9:60"><literal type="string" pos:start="9:53" pos:end="9:60">"mpegts"</literal></expr></argument>, <argument pos:start="9:63" pos:end="9:66"><expr pos:start="9:63" pos:end="9:66"><name pos:start="9:63" pos:end="9:66">NULL</name></expr></argument>, <argument pos:start="9:69" pos:end="9:72"><expr pos:start="9:69" pos:end="9:72"><name pos:start="9:69" pos:end="9:72">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:71"><decl pos:start="11:5" pos:end="11:70"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVOutputFormat</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:30">rtp_format</name>    <init pos:start="11:35" pos:end="11:70">= <expr pos:start="11:37" pos:end="11:70"><call pos:start="11:37" pos:end="11:70"><name pos:start="11:37" pos:end="11:51">av_guess_format</name><argument_list pos:start="11:52" pos:end="11:70">(<argument pos:start="11:53" pos:end="11:57"><expr pos:start="11:53" pos:end="11:57"><literal type="string" pos:start="11:53" pos:end="11:57">"rtp"</literal></expr></argument>, <argument pos:start="11:60" pos:end="11:63"><expr pos:start="11:60" pos:end="11:63"><name pos:start="11:60" pos:end="11:63">NULL</name></expr></argument>, <argument pos:start="11:66" pos:end="11:69"><expr pos:start="11:66" pos:end="11:69"><name pos:start="11:66" pos:end="11:69">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name> <init pos:start="13:16" pos:end="13:32">= <expr pos:start="13:18" pos:end="13:32"><call pos:start="13:18" pos:end="13:32"><name pos:start="13:18" pos:end="13:24">AVERROR</name><argument_list pos:start="13:25" pos:end="13:32">(<argument pos:start="13:26" pos:end="13:31"><expr pos:start="13:26" pos:end="13:31"><name pos:start="13:26" pos:end="13:31">ENOMEM</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:22">mpegts_format</name> <operator pos:start="19:24" pos:end="19:25">||</operator> <operator pos:start="19:27" pos:end="19:27">!</operator><name pos:start="19:28" pos:end="19:37">rtp_format</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:14">mpegts_ctx</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:41"><name pos:start="23:18" pos:end="23:39">avformat_alloc_context</name><argument_list pos:start="23:40" pos:end="23:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:19">mpegts_ctx</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:14">mpegts_ctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:23">oformat</name></name>   <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:41">mpegts_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:14">mpegts_ctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:25">max_delay</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">max_delay</name></name></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="114:15">for <control pos:start="33:9" pos:end="33:39">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:33">nb_streams</name></name></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">i</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control> <block pos:start="33:41" pos:end="114:15">{<block_content pos:start="35:9" pos:end="114:15">

        <decl_stmt pos:start="35:9" pos:end="35:61"><decl pos:start="35:9" pos:end="35:60"><type pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:16">AVStream</name><modifier pos:start="35:17" pos:end="35:17">*</modifier></type> <name pos:start="35:19" pos:end="35:20">st</name> <init pos:start="35:22" pos:end="35:60">= <expr pos:start="35:24" pos:end="35:60"><call pos:start="35:24" pos:end="35:60"><name pos:start="35:24" pos:end="35:42">avformat_new_stream</name><argument_list pos:start="35:43" pos:end="35:60">(<argument pos:start="35:44" pos:end="35:53"><expr pos:start="35:44" pos:end="35:53"><name pos:start="35:44" pos:end="35:53">mpegts_ctx</name></expr></argument>, <argument pos:start="35:56" pos:end="35:59"><expr pos:start="35:56" pos:end="35:59"><name pos:start="35:56" pos:end="35:59">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="40:59"><if pos:start="37:9" pos:end="40:59">if <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:15">st</name></expr>)</condition><block type="pseudo" pos:start="40:9" pos:end="40:59"><block_content pos:start="40:9" pos:end="40:59">


        <expr_stmt pos:start="40:9" pos:end="40:59"><expr pos:start="40:9" pos:end="40:58"><name pos:start="40:9" pos:end="40:21"><name pos:start="40:9" pos:end="40:10">st</name><operator pos:start="40:11" pos:end="40:12">-&gt;</operator><name pos:start="40:13" pos:end="40:21">time_base</name></name>           <operator pos:start="40:33" pos:end="40:33">=</operator> <name pos:start="40:35" pos:end="40:47"><name pos:start="40:35" pos:end="40:35">s</name><operator pos:start="40:36" pos:end="40:37">-&gt;</operator><name pos:start="40:38" pos:end="40:44">streams</name><index pos:start="40:45" pos:end="40:47">[<expr pos:start="40:46" pos:end="40:46"><name pos:start="40:46" pos:end="40:46">i</name></expr>]</index></name><operator pos:start="40:48" pos:end="40:49">-&gt;</operator><name pos:start="40:50" pos:end="40:58">time_base</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="42:9" pos:end="42:69"><expr pos:start="42:9" pos:end="42:68"><name pos:start="42:9" pos:end="42:31"><name pos:start="42:9" pos:end="42:10">st</name><operator pos:start="42:11" pos:end="42:12">-&gt;</operator><name pos:start="42:13" pos:end="42:31">sample_aspect_ratio</name></name> <operator pos:start="42:33" pos:end="42:33">=</operator> <name pos:start="42:35" pos:end="42:47"><name pos:start="42:35" pos:end="42:35">s</name><operator pos:start="42:36" pos:end="42:37">-&gt;</operator><name pos:start="42:38" pos:end="42:44">streams</name><index pos:start="42:45" pos:end="42:47">[<expr pos:start="42:46" pos:end="42:46"><name pos:start="42:46" pos:end="42:46">i</name></expr>]</index></name><operator pos:start="42:48" pos:end="42:49">-&gt;</operator><name pos:start="42:50" pos:end="42:68">sample_aspect_ratio</name></expr>;</expr_stmt>

        <expr_stmt pos:start="44:9" pos:end="44:71"><expr pos:start="44:9" pos:end="44:70"><call pos:start="44:9" pos:end="44:70"><name pos:start="44:9" pos:end="44:31">avcodec_parameters_copy</name><argument_list pos:start="44:32" pos:end="44:70">(<argument pos:start="44:33" pos:end="44:44"><expr pos:start="44:33" pos:end="44:44"><name pos:start="44:33" pos:end="44:44"><name pos:start="44:33" pos:end="44:34">st</name><operator pos:start="44:35" pos:end="44:36">-&gt;</operator><name pos:start="44:37" pos:end="44:44">codecpar</name></name></expr></argument>, <argument pos:start="44:47" pos:end="44:69"><expr pos:start="44:47" pos:end="44:69"><name pos:start="44:47" pos:end="44:59"><name pos:start="44:47" pos:end="44:47">s</name><operator pos:start="44:48" pos:end="44:49">-&gt;</operator><name pos:start="44:50" pos:end="44:56">streams</name><index pos:start="44:57" pos:end="44:59">[<expr pos:start="44:58" pos:end="44:58"><name pos:start="44:58" pos:end="44:58">i</name></expr>]</index></name><operator pos:start="44:60" pos:end="44:61">-&gt;</operator><name pos:start="44:62" pos:end="44:69">codecpar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="47:5" pos:end="55:69"><if pos:start="47:5" pos:end="55:69">if <condition pos:start="47:8" pos:end="47:55">(<expr pos:start="47:9" pos:end="47:54"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:12">ret</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:49"><name pos:start="47:16" pos:end="47:32">avio_open_dyn_buf</name><argument_list pos:start="47:33" pos:end="47:49">(<argument pos:start="47:34" pos:end="47:48"><expr pos:start="47:34" pos:end="47:48"><operator pos:start="47:34" pos:end="47:34">&amp;</operator><name pos:start="47:35" pos:end="47:48"><name pos:start="47:35" pos:end="47:44">mpegts_ctx</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:48">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="47:50" pos:end="47:50">)</operator> <operator pos:start="47:52" pos:end="47:52">&lt;</operator> <literal type="number" pos:start="47:54" pos:end="47:54">0</literal></expr>)</condition><block type="pseudo" pos:start="50:5" pos:end="55:69"><block_content pos:start="50:5" pos:end="55:69">


    <if_stmt pos:start="50:5" pos:end="55:69"><if pos:start="50:5" pos:end="55:69">if <condition pos:start="50:8" pos:end="50:60">(<expr pos:start="50:9" pos:end="50:59"><operator pos:start="50:9" pos:end="50:9">(</operator><name pos:start="50:10" pos:end="50:12">ret</name> <operator pos:start="50:14" pos:end="50:14">=</operator> <call pos:start="50:16" pos:end="50:54"><name pos:start="50:16" pos:end="50:36">avformat_write_header</name><argument_list pos:start="50:37" pos:end="50:54">(<argument pos:start="50:38" pos:end="50:47"><expr pos:start="50:38" pos:end="50:47"><name pos:start="50:38" pos:end="50:47">mpegts_ctx</name></expr></argument>, <argument pos:start="50:50" pos:end="50:53"><expr pos:start="50:50" pos:end="50:53"><name pos:start="50:50" pos:end="50:53">NULL</name></expr></argument>)</argument_list></call><operator pos:start="50:55" pos:end="50:55">)</operator> <operator pos:start="50:57" pos:end="50:57">&lt;</operator> <literal type="number" pos:start="50:59" pos:end="50:59">0</literal></expr>)</condition><block type="pseudo" pos:start="53:5" pos:end="55:69"><block_content pos:start="53:5" pos:end="55:69">


    <for pos:start="53:5" pos:end="55:69">for <control pos:start="53:9" pos:end="53:39">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:34"><expr pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:33"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:33">nb_streams</name></name></expr>;</condition> <incr pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:36">i</name><operator pos:start="53:37" pos:end="53:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:9" pos:end="55:69"><block_content pos:start="55:9" pos:end="55:69">

        <expr_stmt pos:start="55:9" pos:end="55:69"><expr pos:start="55:9" pos:end="55:68"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">streams</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index></name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:32">time_base</name> <operator pos:start="55:34" pos:end="55:34">=</operator> <name pos:start="55:36" pos:end="55:57"><name pos:start="55:36" pos:end="55:45">mpegts_ctx</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:54">streams</name><index pos:start="55:55" pos:end="55:57">[<expr pos:start="55:56" pos:end="55:56"><name pos:start="55:56" pos:end="55:56">i</name></expr>]</index></name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:68">time_base</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:9">chain</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">mpegts_ctx</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:34">mpegts_ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:14">mpegts_ctx</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:21">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:39"><expr pos:start="65:5" pos:end="65:38"><name pos:start="65:5" pos:end="65:11">rtp_ctx</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:38"><name pos:start="65:15" pos:end="65:36">avformat_alloc_context</name><argument_list pos:start="65:37" pos:end="65:38">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="114:15"><if pos:start="67:5" pos:end="114:15">if <condition pos:start="67:8" pos:end="67:17">(<expr pos:start="67:9" pos:end="67:16"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:16">rtp_ctx</name></expr>)</condition> <block pos:start="67:19" pos:end="114:15">{<block_content pos:start="72:5" pos:end="114:15">




    <expr_stmt pos:start="72:5" pos:end="72:34"><expr pos:start="72:5" pos:end="72:33"><name pos:start="72:5" pos:end="72:20"><name pos:start="72:5" pos:end="72:11">rtp_ctx</name><operator pos:start="72:12" pos:end="72:13">-&gt;</operator><name pos:start="72:14" pos:end="72:20">oformat</name></name> <operator pos:start="72:22" pos:end="72:22">=</operator> <name pos:start="72:24" pos:end="72:33">rtp_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:44"><expr pos:start="74:5" pos:end="74:43"><name pos:start="74:5" pos:end="74:6">st</name> <operator pos:start="74:8" pos:end="74:8">=</operator> <call pos:start="74:10" pos:end="74:43"><name pos:start="74:10" pos:end="74:28">avformat_new_stream</name><argument_list pos:start="74:29" pos:end="74:43">(<argument pos:start="74:30" pos:end="74:36"><expr pos:start="74:30" pos:end="74:36"><name pos:start="74:30" pos:end="74:36">rtp_ctx</name></expr></argument>, <argument pos:start="74:39" pos:end="74:42"><expr pos:start="74:39" pos:end="74:42"><name pos:start="74:39" pos:end="74:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="80:5" pos:end="80:28"><expr pos:start="80:5" pos:end="80:27"><name pos:start="80:5" pos:end="80:21"><name pos:start="80:5" pos:end="80:6">st</name><operator pos:start="80:7" pos:end="80:8">-&gt;</operator><name pos:start="80:9" pos:end="80:17">time_base</name><operator pos:start="80:18" pos:end="80:18">.</operator><name pos:start="80:19" pos:end="80:21">num</name></name>   <operator pos:start="80:25" pos:end="80:25">=</operator> <literal type="number" pos:start="80:27" pos:end="80:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="82:5" pos:end="82:32"><expr pos:start="82:5" pos:end="82:31"><name pos:start="82:5" pos:end="82:21"><name pos:start="82:5" pos:end="82:6">st</name><operator pos:start="82:7" pos:end="82:8">-&gt;</operator><name pos:start="82:9" pos:end="82:17">time_base</name><operator pos:start="82:18" pos:end="82:18">.</operator><name pos:start="82:19" pos:end="82:21">den</name></name>   <operator pos:start="82:25" pos:end="82:25">=</operator> <literal type="number" pos:start="82:27" pos:end="82:31">90000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="84:5" pos:end="84:49"><expr pos:start="84:5" pos:end="84:48"><name pos:start="84:5" pos:end="84:26"><name pos:start="84:5" pos:end="84:6">st</name><operator pos:start="84:7" pos:end="84:8">-&gt;</operator><name pos:start="84:9" pos:end="84:16">codecpar</name><operator pos:start="84:17" pos:end="84:18">-&gt;</operator><name pos:start="84:19" pos:end="84:26">codec_id</name></name> <operator pos:start="84:28" pos:end="84:28">=</operator> <name pos:start="84:30" pos:end="84:48">AV_CODEC_ID_MPEG2TS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="86:5" pos:end="86:24"><expr pos:start="86:5" pos:end="86:23"><name pos:start="86:5" pos:end="86:15"><name pos:start="86:5" pos:end="86:11">rtp_ctx</name><operator pos:start="86:12" pos:end="86:13">-&gt;</operator><name pos:start="86:14" pos:end="86:15">pb</name></name> <operator pos:start="86:17" pos:end="86:17">=</operator> <name pos:start="86:19" pos:end="86:23"><name pos:start="86:19" pos:end="86:19">s</name><operator pos:start="86:20" pos:end="86:21">-&gt;</operator><name pos:start="86:22" pos:end="86:23">pb</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="88:5" pos:end="91:29"><if pos:start="88:5" pos:end="91:29">if <condition pos:start="88:8" pos:end="88:57">(<expr pos:start="88:9" pos:end="88:56"><operator pos:start="88:9" pos:end="88:9">(</operator><name pos:start="88:10" pos:end="88:12">ret</name> <operator pos:start="88:14" pos:end="88:14">=</operator> <call pos:start="88:16" pos:end="88:51"><name pos:start="88:16" pos:end="88:36">avformat_write_header</name><argument_list pos:start="88:37" pos:end="88:51">(<argument pos:start="88:38" pos:end="88:44"><expr pos:start="88:38" pos:end="88:44"><name pos:start="88:38" pos:end="88:44">rtp_ctx</name></expr></argument>, <argument pos:start="88:47" pos:end="88:50"><expr pos:start="88:47" pos:end="88:50"><name pos:start="88:47" pos:end="88:50">NULL</name></expr></argument>)</argument_list></call><operator pos:start="88:52" pos:end="88:52">)</operator> <operator pos:start="88:54" pos:end="88:54">&lt;</operator> <literal type="number" pos:start="88:56" pos:end="88:56">0</literal></expr>)</condition><block type="pseudo" pos:start="91:5" pos:end="91:29"><block_content pos:start="91:5" pos:end="91:29">


    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:9">chain</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:18">rtp_ctx</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:28">rtp_ctx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>



<label pos:start="99:1" pos:end="99:5"><name pos:start="99:1" pos:end="99:4">fail</name>:</label>

    <if_stmt pos:start="101:5" pos:end="114:15"><if pos:start="101:5" pos:end="114:15">if <condition pos:start="101:8" pos:end="101:19">(<expr pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:18">mpegts_ctx</name></expr>)</condition> <block pos:start="101:21" pos:end="114:15">{<block_content pos:start="103:9" pos:end="114:15">

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><call pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:25">ffio_free_dyn_buf</name><argument_list pos:start="103:26" pos:end="103:42">(<argument pos:start="103:27" pos:end="103:41"><expr pos:start="103:27" pos:end="103:41"><operator pos:start="103:27" pos:end="103:27">&amp;</operator><name pos:start="103:28" pos:end="103:41"><name pos:start="103:28" pos:end="103:37">mpegts_ctx</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:41">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:42"><expr pos:start="105:9" pos:end="105:41"><call pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:29">avformat_free_context</name><argument_list pos:start="105:30" pos:end="105:41">(<argument pos:start="105:31" pos:end="105:40"><expr pos:start="105:31" pos:end="105:40"><name pos:start="105:31" pos:end="105:40">mpegts_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="108:5" pos:end="110:39"><if pos:start="108:5" pos:end="110:39">if <condition pos:start="108:8" pos:end="108:16">(<expr pos:start="108:9" pos:end="108:15"><name pos:start="108:9" pos:end="108:15">rtp_ctx</name></expr>)</condition><block type="pseudo" pos:start="110:9" pos:end="110:39"><block_content pos:start="110:9" pos:end="110:39">

        <expr_stmt pos:start="110:9" pos:end="110:39"><expr pos:start="110:9" pos:end="110:38"><call pos:start="110:9" pos:end="110:38"><name pos:start="110:9" pos:end="110:29">avformat_free_context</name><argument_list pos:start="110:30" pos:end="110:38">(<argument pos:start="110:31" pos:end="110:37"><expr pos:start="110:31" pos:end="110:37"><name pos:start="110:31" pos:end="110:37">rtp_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="112:5" pos:end="112:30"><expr pos:start="112:5" pos:end="112:29"><call pos:start="112:5" pos:end="112:29"><name pos:start="112:5" pos:end="112:26">rtp_mpegts_write_close</name><argument_list pos:start="112:27" pos:end="112:29">(<argument pos:start="112:28" pos:end="112:28"><expr pos:start="112:28" pos:end="112:28"><name pos:start="112:28" pos:end="112:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="114:5" pos:end="114:15">return <expr pos:start="114:12" pos:end="114:14"><name pos:start="114:12" pos:end="114:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function>
</unit>
