<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17253.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">gic_complete_irq</name><parameter_list pos:start="1:29" pos:end="1:61">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:38">gic_state</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">cpu</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:60">irq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">update</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">cm</name> <init pos:start="7:12" pos:end="7:21">= <expr pos:start="7:14" pos:end="7:21"><literal type="number" pos:start="7:14" pos:end="7:14">1</literal> <operator pos:start="7:16" pos:end="7:17">&lt;&lt;</operator> <name pos:start="7:19" pos:end="7:21">cpu</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:29"><expr pos:start="9:5" pos:end="9:28"><call pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="9:28">(<argument pos:start="9:13" pos:end="9:22"><expr pos:start="9:13" pos:end="9:22"><literal type="string" pos:start="9:13" pos:end="9:22">"EOI %d\n"</literal></expr></argument>, <argument pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:27">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:22">running_irq</name><index pos:start="11:23" pos:end="11:27">[<expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">cpu</name></expr>]</index></name> <operator pos:start="11:29" pos:end="11:30">==</operator> <literal type="number" pos:start="11:32" pos:end="11:35">1023</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="13:17" pos:end="13:37">/* No active IRQ.  */</comment>

    <if_stmt pos:start="15:5" pos:end="33:5"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">irq</name> <operator pos:start="15:13" pos:end="15:14">!=</operator> <literal type="number" pos:start="15:16" pos:end="15:19">1023</literal></expr>)</condition> <block pos:start="15:22" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:9">

        <comment type="block" pos:start="17:9" pos:end="19:22">/* Mark level triggered interrupts as pending if they are still

           raised.  */</comment>

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="23:74">(<expr pos:start="21:13" pos:end="23:73"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:34"><name pos:start="21:14" pos:end="21:29">GIC_TEST_TRIGGER</name><argument_list pos:start="21:30" pos:end="21:34">(<argument pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:33">irq</name></expr></argument>)</argument_list></call> <operator pos:start="21:36" pos:end="21:37">&amp;&amp;</operator> <call pos:start="21:39" pos:end="21:59"><name pos:start="21:39" pos:end="21:54">GIC_TEST_ENABLED</name><argument_list pos:start="21:55" pos:end="21:59">(<argument pos:start="21:56" pos:end="21:58"><expr pos:start="21:56" pos:end="21:58"><name pos:start="21:56" pos:end="21:58">irq</name></expr></argument>)</argument_list></call>

                <operator pos:start="23:17" pos:end="23:18">&amp;&amp;</operator> <call pos:start="23:20" pos:end="23:42"><name pos:start="23:20" pos:end="23:33">GIC_TEST_LEVEL</name><argument_list pos:start="23:34" pos:end="23:42">(<argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><name pos:start="23:35" pos:end="23:37">irq</name></expr></argument>, <argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><name pos:start="23:40" pos:end="23:41">cm</name></expr></argument>)</argument_list></call> <operator pos:start="23:44" pos:end="23:45">&amp;&amp;</operator> <operator pos:start="23:47" pos:end="23:47">(</operator><call pos:start="23:48" pos:end="23:62"><name pos:start="23:48" pos:end="23:57">GIC_TARGET</name><argument_list pos:start="23:58" pos:end="23:62">(<argument pos:start="23:59" pos:end="23:61"><expr pos:start="23:59" pos:end="23:61"><name pos:start="23:59" pos:end="23:61">irq</name></expr></argument>)</argument_list></call> <operator pos:start="23:64" pos:end="23:64">&amp;</operator> <name pos:start="23:66" pos:end="23:67">cm</name><operator pos:start="23:68" pos:end="23:68">)</operator> <operator pos:start="23:70" pos:end="23:71">!=</operator> <literal type="number" pos:start="23:73" pos:end="23:73">0</literal></expr>)</condition> <block pos:start="23:76" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:23">

            <expr_stmt pos:start="25:13" pos:end="25:57"><expr pos:start="25:13" pos:end="25:56"><call pos:start="25:13" pos:end="25:56"><name pos:start="25:13" pos:end="25:19">DPRINTF</name><argument_list pos:start="25:20" pos:end="25:56">(<argument pos:start="25:21" pos:end="25:46"><expr pos:start="25:21" pos:end="25:46"><literal type="string" pos:start="25:21" pos:end="25:46">"Set %d pending mask %x\n"</literal></expr></argument>, <argument pos:start="25:49" pos:end="25:51"><expr pos:start="25:49" pos:end="25:51"><name pos:start="25:49" pos:end="25:51">irq</name></expr></argument>, <argument pos:start="25:54" pos:end="25:55"><expr pos:start="25:54" pos:end="25:55"><name pos:start="25:54" pos:end="25:55">cm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:37"><expr pos:start="27:13" pos:end="27:36"><call pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:27">GIC_SET_PENDING</name><argument_list pos:start="27:28" pos:end="27:36">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">irq</name></expr></argument>, <argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">cm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:18">update</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="67:5"><if pos:start="35:5" pos:end="61:5">if <condition pos:start="35:8" pos:end="35:35">(<expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:11">irq</name> <operator pos:start="35:13" pos:end="35:14">!=</operator> <name pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:29">running_irq</name><index pos:start="35:30" pos:end="35:34">[<expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">cpu</name></expr>]</index></name></expr>)</condition> <block pos:start="35:37" pos:end="61:5">{<block_content pos:start="39:9" pos:end="59:9">

        <comment type="block" pos:start="37:9" pos:end="37:61">/* Complete an IRQ that is not currently running.  */</comment>

        <decl_stmt pos:start="39:9" pos:end="39:38"><decl pos:start="39:9" pos:end="39:37"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:15">tmp</name> <init pos:start="39:17" pos:end="39:37">= <expr pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:32">running_irq</name><index pos:start="39:33" pos:end="39:37">[<expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:36">cpu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <while pos:start="41:9" pos:end="53:9">while <condition pos:start="41:15" pos:end="41:48">(<expr pos:start="41:16" pos:end="41:47"><name pos:start="41:16" pos:end="41:39"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:29">last_active</name><index pos:start="41:30" pos:end="41:34">[<expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">tmp</name></expr>]</index><index pos:start="41:35" pos:end="41:39">[<expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">cpu</name></expr>]</index></name> <operator pos:start="41:41" pos:end="41:42">!=</operator> <literal type="number" pos:start="41:44" pos:end="41:47">1023</literal></expr>)</condition> <block pos:start="41:50" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:43">

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:48">(<expr pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:40"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:30">last_active</name><index pos:start="43:31" pos:end="43:35">[<expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">tmp</name></expr>]</index><index pos:start="43:36" pos:end="43:40">[<expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">cpu</name></expr>]</index></name> <operator pos:start="43:42" pos:end="43:43">==</operator> <name pos:start="43:45" pos:end="43:47">irq</name></expr>)</condition> <block pos:start="43:50" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:22">

                <expr_stmt pos:start="45:17" pos:end="45:68"><expr pos:start="45:17" pos:end="45:67"><name pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:30">last_active</name><index pos:start="45:31" pos:end="45:35">[<expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:34">tmp</name></expr>]</index><index pos:start="45:36" pos:end="45:40">[<expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">cpu</name></expr>]</index></name> <operator pos:start="45:42" pos:end="45:42">=</operator> <name pos:start="45:44" pos:end="45:67"><name pos:start="45:44" pos:end="45:44">s</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:57">last_active</name><index pos:start="45:58" pos:end="45:62">[<expr pos:start="45:59" pos:end="45:61"><name pos:start="45:59" pos:end="45:61">irq</name></expr>]</index><index pos:start="45:63" pos:end="45:67">[<expr pos:start="45:64" pos:end="45:66"><name pos:start="45:64" pos:end="45:66">cpu</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="47:17" pos:end="47:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:15">tmp</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:42"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:32">last_active</name><index pos:start="51:33" pos:end="51:37">[<expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">tmp</name></expr>]</index><index pos:start="51:38" pos:end="51:42">[<expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">cpu</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:19">(<expr pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">update</name></expr>)</condition> <block pos:start="55:21" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:26">

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><call pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:22">gic_update</name><argument_list pos:start="57:23" pos:end="57:25">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="67:5">else <block pos:start="61:12" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:78">

        <comment type="block" pos:start="63:9" pos:end="63:48">/* Complete the current running IRQ.  */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:78"><expr pos:start="65:9" pos:end="65:77"><call pos:start="65:9" pos:end="65:77"><name pos:start="65:9" pos:end="65:27">gic_set_running_irq</name><argument_list pos:start="65:28" pos:end="65:77">(<argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">s</name></expr></argument>, <argument pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:34">cpu</name></expr></argument>, <argument pos:start="65:37" pos:end="65:76"><expr pos:start="65:37" pos:end="65:76"><name pos:start="65:37" pos:end="65:76"><name pos:start="65:37" pos:end="65:37">s</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:50">last_active</name><index pos:start="65:51" pos:end="65:71">[<expr pos:start="65:52" pos:end="65:70"><name pos:start="65:52" pos:end="65:70"><name pos:start="65:52" pos:end="65:52">s</name><operator pos:start="65:53" pos:end="65:54">-&gt;</operator><name pos:start="65:55" pos:end="65:65">running_irq</name><index pos:start="65:66" pos:end="65:70">[<expr pos:start="65:67" pos:end="65:69"><name pos:start="65:67" pos:end="65:69">cpu</name></expr>]</index></name></expr>]</index><index pos:start="65:72" pos:end="65:76">[<expr pos:start="65:73" pos:end="65:75"><name pos:start="65:73" pos:end="65:75">cpu</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
