<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15284.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:49">gen_intermediate_code_internal</name><parameter_list pos:start="1:50" pos:end="5:64">(<parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:61">OpenRISCCPU</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">cpu</name></decl></parameter>,

                                                  <parameter pos:start="3:51" pos:end="3:70"><decl pos:start="3:51" pos:end="3:70"><type pos:start="3:51" pos:end="3:70"><name pos:start="3:51" pos:end="3:66">TranslationBlock</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:70">tb</name></decl></parameter>,

                                                  <parameter pos:start="5:51" pos:end="5:63"><decl pos:start="5:51" pos:end="5:63"><type pos:start="5:51" pos:end="5:63"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:63">search_pc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="291:1">{<block_content pos:start="9:5" pos:end="290:0">

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">DisasContext</name></name></type> <name pos:start="9:25" pos:end="9:27">ctx</name></decl>, <decl pos:start="9:30" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:23"><modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:32">dc</name> <init pos:start="9:34" pos:end="9:39">= <expr pos:start="9:36" pos:end="9:39"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:39">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">j</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:28">next_page_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><call pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:25">qemu_log_try_set_file</name><argument_list pos:start="25:26" pos:end="25:33">(<argument pos:start="25:27" pos:end="25:32"><expr pos:start="25:27" pos:end="25:32"><name pos:start="25:27" pos:end="25:32">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:12">pc_start</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:17">tb</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:6">dc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:10">tb</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:15">tb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:15">gen_opc_end</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:25">tcg_ctx</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:37">gen_opc_buf</name></name> <operator pos:start="35:39" pos:end="35:39">+</operator> <name pos:start="35:41" pos:end="35:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:6">dc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:14">is_jmp</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:6">dc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:11">ppc</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:22">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:6">dc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:10">pc</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">flags</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:19">cpu</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:24">env</name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:32">cpucfgr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">mem_idx</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:42"><name pos:start="45:19" pos:end="45:31">cpu_mmu_index</name><argument_list pos:start="45:32" pos:end="45:42">(<argument pos:start="45:33" pos:end="45:41"><expr pos:start="45:33" pos:end="45:41"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:41"><name pos:start="45:34" pos:end="45:36">cpu</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:41">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:48"><expr pos:start="47:5" pos:end="47:47"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:20">synced_flags</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:25">dc</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:35">tb_flags</name></name> <operator pos:start="47:37" pos:end="47:37">=</operator> <name pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:40">tb</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:47">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:22">delayed_branch</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <operator pos:start="49:26" pos:end="49:26">!</operator><operator pos:start="49:27" pos:end="49:27">!</operator><operator pos:start="49:28" pos:end="49:28">(</operator><name pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:30">dc</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:40">tb_flags</name></name> <operator pos:start="49:42" pos:end="49:42">&amp;</operator> <name pos:start="49:44" pos:end="49:49">D_FLAG</name><operator pos:start="49:50" pos:end="49:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:6">dc</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:26">singlestep_enabled</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:56"><name pos:start="51:30" pos:end="51:32">cpu</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:37">env</name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:56">singlestep_enabled</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:46">(<expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:26">qemu_loglevel_mask</name><argument_list pos:start="53:27" pos:end="53:45">(<argument pos:start="53:28" pos:end="53:44"><expr pos:start="53:28" pos:end="53:44"><name pos:start="53:28" pos:end="53:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:48" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:36">

        <expr_stmt pos:start="55:9" pos:end="55:64"><expr pos:start="55:9" pos:end="55:63"><call pos:start="55:9" pos:end="55:63"><name pos:start="55:9" pos:end="55:16">qemu_log</name><argument_list pos:start="55:17" pos:end="55:63">(<argument pos:start="55:18" pos:end="55:62"><expr pos:start="55:18" pos:end="55:62"><literal type="string" pos:start="55:18" pos:end="55:62">"-----------------------------------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><call pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:21">log_cpu_state</name><argument_list pos:start="57:22" pos:end="57:35">(<argument pos:start="57:23" pos:end="57:31"><expr pos:start="57:23" pos:end="57:31"><operator pos:start="57:23" pos:end="57:23">&amp;</operator><name pos:start="57:24" pos:end="57:31"><name pos:start="57:24" pos:end="57:26">cpu</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:31">env</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:34"><expr pos:start="57:34" pos:end="57:34"><literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:71"><expr pos:start="63:5" pos:end="63:70"><name pos:start="63:5" pos:end="63:19">next_page_start</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:31">pc_start</name> <operator pos:start="63:33" pos:end="63:33">&amp;</operator> <name pos:start="63:35" pos:end="63:50">TARGET_PAGE_MASK</name><operator pos:start="63:51" pos:end="63:51">)</operator> <operator pos:start="63:53" pos:end="63:53">+</operator> <name pos:start="63:55" pos:end="63:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:11"><expr pos:start="65:5" pos:end="65:10"><name pos:start="65:5" pos:end="65:5">k</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <operator pos:start="65:9" pos:end="65:9">-</operator><literal type="number" pos:start="65:10" pos:end="65:10">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:13">num_insns</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:13">max_insns</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:18">tb</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:26">cflags</name></name> <operator pos:start="69:28" pos:end="69:28">&amp;</operator> <name pos:start="69:30" pos:end="69:42">CF_COUNT_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:23">(<expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:17">max_insns</name> <operator pos:start="73:19" pos:end="73:20">==</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>)</condition> <block pos:start="73:25" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:34">

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:17">max_insns</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:33">CF_COUNT_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><call pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:20">gen_icount_start</name><argument_list pos:start="81:21" pos:end="81:22">()</argument_list></call></expr>;</expr_stmt>



    <do pos:start="85:5" pos:end="181:39">do <block pos:start="85:8" pos:end="171:5">{<block_content pos:start="87:9" pos:end="169:9">

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><call pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:24">check_breakpoint</name><argument_list pos:start="87:25" pos:end="87:33">(<argument pos:start="87:26" pos:end="87:28"><expr pos:start="87:26" pos:end="87:28"><name pos:start="87:26" pos:end="87:28">cpu</name></expr></argument>, <argument pos:start="87:31" pos:end="87:32"><expr pos:start="87:31" pos:end="87:32"><name pos:start="87:31" pos:end="87:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="111:9"><if pos:start="89:9" pos:end="111:9">if <condition pos:start="89:12" pos:end="89:22">(<expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:21">search_pc</name></expr>)</condition> <block pos:start="89:24" pos:end="111:9">{<block_content pos:start="91:13" pos:end="109:50">

            <expr_stmt pos:start="91:13" pos:end="91:58"><expr pos:start="91:13" pos:end="91:57"><name pos:start="91:13" pos:end="91:13">j</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:23">tcg_ctx</name><operator pos:start="91:24" pos:end="91:24">.</operator><name pos:start="91:25" pos:end="91:35">gen_opc_ptr</name></name> <operator pos:start="91:37" pos:end="91:37">-</operator> <name pos:start="91:39" pos:end="91:57"><name pos:start="91:39" pos:end="91:45">tcg_ctx</name><operator pos:start="91:46" pos:end="91:46">.</operator><name pos:start="91:47" pos:end="91:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="103:13"><if pos:start="93:13" pos:end="103:13">if <condition pos:start="93:16" pos:end="93:22">(<expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">k</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:21">j</name></expr>)</condition> <block pos:start="93:24" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:17">

                <expr_stmt pos:start="95:17" pos:end="95:20"><expr pos:start="95:17" pos:end="95:19"><name pos:start="95:17" pos:end="95:17">k</name><operator pos:start="95:18" pos:end="95:19">++</operator></expr>;</expr_stmt>

                <while pos:start="97:17" pos:end="101:17">while <condition pos:start="97:23" pos:end="97:29">(<expr pos:start="97:24" pos:end="97:28"><name pos:start="97:24" pos:end="97:24">k</name> <operator pos:start="97:26" pos:end="97:26">&lt;</operator> <name pos:start="97:28" pos:end="97:28">j</name></expr>)</condition> <block pos:start="97:31" pos:end="101:17">{<block_content pos:start="99:21" pos:end="99:57">

                    <expr_stmt pos:start="99:21" pos:end="99:57"><expr pos:start="99:21" pos:end="99:56"><name pos:start="99:21" pos:end="99:52"><name pos:start="99:21" pos:end="99:27">tcg_ctx</name><operator pos:start="99:28" pos:end="99:28">.</operator><name pos:start="99:29" pos:end="99:47">gen_opc_instr_start</name><index pos:start="99:48" pos:end="99:52">[<expr pos:start="99:49" pos:end="99:51"><name pos:start="99:49" pos:end="99:49">k</name><operator pos:start="99:50" pos:end="99:51">++</operator></expr>]</index></name> <operator pos:start="99:54" pos:end="99:54">=</operator> <literal type="number" pos:start="99:56" pos:end="99:56">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:43"><expr pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:19">tcg_ctx</name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:30">gen_opc_pc</name><index pos:start="105:31" pos:end="105:33">[<expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">k</name></expr>]</index></name> <operator pos:start="105:35" pos:end="105:35">=</operator> <name pos:start="105:37" pos:end="105:42"><name pos:start="105:37" pos:end="105:38">dc</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:42">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:47"><expr pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:19">tcg_ctx</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:39">gen_opc_instr_start</name><index pos:start="107:40" pos:end="107:42">[<expr pos:start="107:41" pos:end="107:41"><name pos:start="107:41" pos:end="107:41">k</name></expr>]</index></name> <operator pos:start="107:44" pos:end="107:44">=</operator> <literal type="number" pos:start="107:46" pos:end="107:46">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:50"><expr pos:start="109:13" pos:end="109:49"><name pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:19">tcg_ctx</name><operator pos:start="109:20" pos:end="109:20">.</operator><name pos:start="109:21" pos:end="109:34">gen_opc_icount</name><index pos:start="109:35" pos:end="109:37">[<expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">k</name></expr>]</index></name> <operator pos:start="109:39" pos:end="109:39">=</operator> <name pos:start="109:41" pos:end="109:49">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:76">(<expr pos:start="115:13" pos:end="115:75"><call pos:start="115:13" pos:end="115:75"><name pos:start="115:13" pos:end="115:20">unlikely</name><argument_list pos:start="115:21" pos:end="115:75">(<argument pos:start="115:22" pos:end="115:74"><expr pos:start="115:22" pos:end="115:74"><call pos:start="115:22" pos:end="115:74"><name pos:start="115:22" pos:end="115:39">qemu_loglevel_mask</name><argument_list pos:start="115:40" pos:end="115:74">(<argument pos:start="115:41" pos:end="115:73"><expr pos:start="115:41" pos:end="115:73"><name pos:start="115:41" pos:end="115:53">CPU_LOG_TB_OP</name> <operator pos:start="115:55" pos:end="115:55">|</operator> <name pos:start="115:57" pos:end="115:73">CPU_LOG_TB_OP_OPT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:78" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:45">

            <expr_stmt pos:start="117:13" pos:end="117:45"><expr pos:start="117:13" pos:end="117:44"><call pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:36">tcg_gen_debug_insn_start</name><argument_list pos:start="117:37" pos:end="117:44">(<argument pos:start="117:38" pos:end="117:43"><expr pos:start="117:38" pos:end="117:43"><name pos:start="117:38" pos:end="117:43"><name pos:start="117:38" pos:end="117:39">dc</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:43">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:68">(<expr pos:start="123:13" pos:end="123:67"><name pos:start="123:13" pos:end="123:21">num_insns</name> <operator pos:start="123:23" pos:end="123:23">+</operator> <literal type="number" pos:start="123:25" pos:end="123:25">1</literal> <operator pos:start="123:27" pos:end="123:28">==</operator> <name pos:start="123:30" pos:end="123:38">max_insns</name> <operator pos:start="123:40" pos:end="123:41">&amp;&amp;</operator> <operator pos:start="123:43" pos:end="123:43">(</operator><name pos:start="123:44" pos:end="123:53"><name pos:start="123:44" pos:end="123:45">tb</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:53">cflags</name></name> <operator pos:start="123:55" pos:end="123:55">&amp;</operator> <name pos:start="123:57" pos:end="123:66">CF_LAST_IO</name><operator pos:start="123:67" pos:end="123:67">)</operator></expr>)</condition> <block pos:start="123:70" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:27">

            <expr_stmt pos:start="125:13" pos:end="125:27"><expr pos:start="125:13" pos:end="125:26"><call pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:24">gen_io_start</name><argument_list pos:start="125:25" pos:end="125:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:10">dc</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:15">ppc</name></name> <operator pos:start="129:17" pos:end="129:17">=</operator> <name pos:start="129:19" pos:end="129:24"><name pos:start="129:19" pos:end="129:20">dc</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:24">pc</name></name> <operator pos:start="129:26" pos:end="129:26">-</operator> <literal type="number" pos:start="129:28" pos:end="129:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:29"><expr pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:10">dc</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:15">npc</name></name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:24"><name pos:start="131:19" pos:end="131:20">dc</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:24">pc</name></name> <operator pos:start="131:26" pos:end="131:26">+</operator> <literal type="number" pos:start="131:28" pos:end="131:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:42"><expr pos:start="133:9" pos:end="133:41"><call pos:start="133:9" pos:end="133:41"><name pos:start="133:9" pos:end="133:23">tcg_gen_movi_tl</name><argument_list pos:start="133:24" pos:end="133:41">(<argument pos:start="133:25" pos:end="133:31"><expr pos:start="133:25" pos:end="133:31"><name pos:start="133:25" pos:end="133:31">cpu_ppc</name></expr></argument>, <argument pos:start="133:34" pos:end="133:40"><expr pos:start="133:34" pos:end="133:40"><name pos:start="133:34" pos:end="133:40"><name pos:start="133:34" pos:end="133:35">dc</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:40">ppc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:42"><expr pos:start="135:9" pos:end="135:41"><call pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:23">tcg_gen_movi_tl</name><argument_list pos:start="135:24" pos:end="135:41">(<argument pos:start="135:25" pos:end="135:31"><expr pos:start="135:25" pos:end="135:31"><name pos:start="135:25" pos:end="135:31">cpu_npc</name></expr></argument>, <argument pos:start="135:34" pos:end="135:40"><expr pos:start="135:34" pos:end="135:40"><name pos:start="135:34" pos:end="135:40"><name pos:start="135:34" pos:end="135:35">dc</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:40">npc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:37"><expr pos:start="137:9" pos:end="137:36"><call pos:start="137:9" pos:end="137:36"><name pos:start="137:9" pos:end="137:27">disas_openrisc_insn</name><argument_list pos:start="137:28" pos:end="137:36">(<argument pos:start="137:29" pos:end="137:30"><expr pos:start="137:29" pos:end="137:30"><name pos:start="137:29" pos:end="137:30">dc</name></expr></argument>, <argument pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:35">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:14"><name pos:start="139:9" pos:end="139:10">dc</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:14">pc</name></name> <operator pos:start="139:16" pos:end="139:16">=</operator> <name pos:start="139:18" pos:end="139:24"><name pos:start="139:18" pos:end="139:19">dc</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:24">npc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:20"><expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:17">num_insns</name><operator pos:start="141:18" pos:end="141:19">++</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="143:9" pos:end="143:24">/* delay slot */</comment>

        <if_stmt pos:start="145:9" pos:end="169:9"><if pos:start="145:9" pos:end="169:9">if <condition pos:start="145:12" pos:end="145:31">(<expr pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:14">dc</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:30">delayed_branch</name></name></expr>)</condition> <block pos:start="145:33" pos:end="169:9">{<block_content pos:start="147:13" pos:end="167:13">

            <expr_stmt pos:start="147:13" pos:end="147:33"><expr pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:14">dc</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:30">delayed_branch</name></name><operator pos:start="147:31" pos:end="147:32">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="167:13"><if pos:start="149:13" pos:end="167:13">if <condition pos:start="149:16" pos:end="149:36">(<expr pos:start="149:17" pos:end="149:35"><operator pos:start="149:17" pos:end="149:17">!</operator><name pos:start="149:18" pos:end="149:35"><name pos:start="149:18" pos:end="149:19">dc</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:35">delayed_branch</name></name></expr>)</condition> <block pos:start="149:38" pos:end="167:13">{<block_content pos:start="151:17" pos:end="165:22">

                <expr_stmt pos:start="151:17" pos:end="151:40"><expr pos:start="151:17" pos:end="151:39"><name pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:18">dc</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:28">tb_flags</name></name> <operator pos:start="151:30" pos:end="151:31">&amp;=</operator> <operator pos:start="151:33" pos:end="151:33">~</operator><name pos:start="151:34" pos:end="151:39">D_FLAG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:35"><expr pos:start="153:17" pos:end="153:34"><call pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:30">gen_sync_flags</name><argument_list pos:start="153:31" pos:end="153:34">(<argument pos:start="153:32" pos:end="153:33"><expr pos:start="153:32" pos:end="153:33"><name pos:start="153:32" pos:end="153:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:47"><expr pos:start="155:17" pos:end="155:46"><call pos:start="155:17" pos:end="155:46"><name pos:start="155:17" pos:end="155:30">tcg_gen_mov_tl</name><argument_list pos:start="155:31" pos:end="155:46">(<argument pos:start="155:32" pos:end="155:37"><expr pos:start="155:32" pos:end="155:37"><name pos:start="155:32" pos:end="155:37">cpu_pc</name></expr></argument>, <argument pos:start="155:40" pos:end="155:45"><expr pos:start="155:40" pos:end="155:45"><name pos:start="155:40" pos:end="155:45">jmp_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:48"><expr pos:start="157:17" pos:end="157:47"><call pos:start="157:17" pos:end="157:47"><name pos:start="157:17" pos:end="157:30">tcg_gen_mov_tl</name><argument_list pos:start="157:31" pos:end="157:47">(<argument pos:start="157:32" pos:end="157:38"><expr pos:start="157:32" pos:end="157:38"><name pos:start="157:32" pos:end="157:38">cpu_npc</name></expr></argument>, <argument pos:start="157:41" pos:end="157:46"><expr pos:start="157:41" pos:end="157:46"><name pos:start="157:41" pos:end="157:46">jmp_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:43"><expr pos:start="159:17" pos:end="159:42"><call pos:start="159:17" pos:end="159:42"><name pos:start="159:17" pos:end="159:31">tcg_gen_movi_tl</name><argument_list pos:start="159:32" pos:end="159:42">(<argument pos:start="159:33" pos:end="159:38"><expr pos:start="159:33" pos:end="159:38"><name pos:start="159:33" pos:end="159:38">jmp_pc</name></expr></argument>, <argument pos:start="159:41" pos:end="159:41"><expr pos:start="159:41" pos:end="159:41"><literal type="number" pos:start="159:41" pos:end="159:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:35"><expr pos:start="161:17" pos:end="161:34"><call pos:start="161:17" pos:end="161:34"><name pos:start="161:17" pos:end="161:31">tcg_gen_exit_tb</name><argument_list pos:start="161:32" pos:end="161:34">(<argument pos:start="161:33" pos:end="161:33"><expr pos:start="161:33" pos:end="161:33"><literal type="number" pos:start="161:33" pos:end="161:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:40"><expr pos:start="163:17" pos:end="163:39"><name pos:start="163:17" pos:end="163:26"><name pos:start="163:17" pos:end="163:18">dc</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:26">is_jmp</name></name> <operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:39">DISAS_JUMP</name></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="171:13" pos:end="181:38">(<expr pos:start="171:14" pos:end="181:37"><operator pos:start="171:14" pos:end="171:14">!</operator><name pos:start="171:15" pos:end="171:24"><name pos:start="171:15" pos:end="171:16">dc</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:24">is_jmp</name></name>

             <operator pos:start="173:14" pos:end="173:15">&amp;&amp;</operator> <name pos:start="173:17" pos:end="173:35"><name pos:start="173:17" pos:end="173:23">tcg_ctx</name><operator pos:start="173:24" pos:end="173:24">.</operator><name pos:start="173:25" pos:end="173:35">gen_opc_ptr</name></name> <operator pos:start="173:37" pos:end="173:37">&lt;</operator> <name pos:start="173:39" pos:end="173:49">gen_opc_end</name>

             <operator pos:start="175:14" pos:end="175:15">&amp;&amp;</operator> <operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:44"><name pos:start="175:18" pos:end="175:20">cpu</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:25">env</name><operator pos:start="175:26" pos:end="175:26">.</operator><name pos:start="175:27" pos:end="175:44">singlestep_enabled</name></name>

             <operator pos:start="177:14" pos:end="177:15">&amp;&amp;</operator> <operator pos:start="177:17" pos:end="177:17">!</operator><name pos:start="177:18" pos:end="177:27">singlestep</name>

             <operator pos:start="179:14" pos:end="179:15">&amp;&amp;</operator> <operator pos:start="179:17" pos:end="179:17">(</operator><name pos:start="179:18" pos:end="179:23"><name pos:start="179:18" pos:end="179:19">dc</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:23">pc</name></name> <operator pos:start="179:25" pos:end="179:25">&lt;</operator> <name pos:start="179:27" pos:end="179:41">next_page_start</name><operator pos:start="179:42" pos:end="179:42">)</operator>

             <operator pos:start="181:14" pos:end="181:15">&amp;&amp;</operator> <name pos:start="181:17" pos:end="181:25">num_insns</name> <operator pos:start="181:27" pos:end="181:27">&lt;</operator> <name pos:start="181:29" pos:end="181:37">max_insns</name></expr>)</condition>;</do>



    <if_stmt pos:start="185:5" pos:end="189:5"><if pos:start="185:5" pos:end="189:5">if <condition pos:start="185:8" pos:end="185:32">(<expr pos:start="185:9" pos:end="185:31"><name pos:start="185:9" pos:end="185:18"><name pos:start="185:9" pos:end="185:10">tb</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:18">cflags</name></name> <operator pos:start="185:20" pos:end="185:20">&amp;</operator> <name pos:start="185:22" pos:end="185:31">CF_LAST_IO</name></expr>)</condition> <block pos:start="185:34" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:21">

        <expr_stmt pos:start="187:9" pos:end="187:21"><expr pos:start="187:9" pos:end="187:20"><call pos:start="187:9" pos:end="187:20"><name pos:start="187:9" pos:end="187:18">gen_io_end</name><argument_list pos:start="187:19" pos:end="187:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="191:5" pos:end="197:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:33">(<expr pos:start="191:9" pos:end="191:32"><name pos:start="191:9" pos:end="191:18"><name pos:start="191:9" pos:end="191:10">dc</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:18">is_jmp</name></name> <operator pos:start="191:20" pos:end="191:21">==</operator> <name pos:start="191:23" pos:end="191:32">DISAS_NEXT</name></expr>)</condition> <block pos:start="191:35" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:40">

        <expr_stmt pos:start="193:9" pos:end="193:34"><expr pos:start="193:9" pos:end="193:33"><name pos:start="193:9" pos:end="193:18"><name pos:start="193:9" pos:end="193:10">dc</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:18">is_jmp</name></name> <operator pos:start="193:20" pos:end="193:20">=</operator> <name pos:start="193:22" pos:end="193:33">DISAS_UPDATE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:40"><expr pos:start="195:9" pos:end="195:39"><call pos:start="195:9" pos:end="195:39"><name pos:start="195:9" pos:end="195:23">tcg_gen_movi_tl</name><argument_list pos:start="195:24" pos:end="195:39">(<argument pos:start="195:25" pos:end="195:30"><expr pos:start="195:25" pos:end="195:30"><name pos:start="195:25" pos:end="195:30">cpu_pc</name></expr></argument>, <argument pos:start="195:33" pos:end="195:38"><expr pos:start="195:33" pos:end="195:38"><name pos:start="195:33" pos:end="195:38"><name pos:start="195:33" pos:end="195:34">dc</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="199:5" pos:end="243:5"><if pos:start="199:5" pos:end="209:5">if <condition pos:start="199:8" pos:end="199:46">(<expr pos:start="199:9" pos:end="199:45"><call pos:start="199:9" pos:end="199:45"><name pos:start="199:9" pos:end="199:16">unlikely</name><argument_list pos:start="199:17" pos:end="199:45">(<argument pos:start="199:18" pos:end="199:44"><expr pos:start="199:18" pos:end="199:44"><name pos:start="199:18" pos:end="199:44"><name pos:start="199:18" pos:end="199:20">cpu</name><operator pos:start="199:21" pos:end="199:22">-&gt;</operator><name pos:start="199:23" pos:end="199:25">env</name><operator pos:start="199:26" pos:end="199:26">.</operator><name pos:start="199:27" pos:end="199:44">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:48" pos:end="209:5">{<block_content pos:start="201:9" pos:end="207:38">

        <if_stmt pos:start="201:9" pos:end="205:9"><if pos:start="201:9" pos:end="205:9">if <condition pos:start="201:12" pos:end="201:37">(<expr pos:start="201:13" pos:end="201:36"><name pos:start="201:13" pos:end="201:22"><name pos:start="201:13" pos:end="201:14">dc</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:22">is_jmp</name></name> <operator pos:start="201:24" pos:end="201:25">==</operator> <name pos:start="201:27" pos:end="201:36">DISAS_NEXT</name></expr>)</condition> <block pos:start="201:39" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:44">

            <expr_stmt pos:start="203:13" pos:end="203:44"><expr pos:start="203:13" pos:end="203:43"><call pos:start="203:13" pos:end="203:43"><name pos:start="203:13" pos:end="203:27">tcg_gen_movi_tl</name><argument_list pos:start="203:28" pos:end="203:43">(<argument pos:start="203:29" pos:end="203:34"><expr pos:start="203:29" pos:end="203:34"><name pos:start="203:29" pos:end="203:34">cpu_pc</name></expr></argument>, <argument pos:start="203:37" pos:end="203:42"><expr pos:start="203:37" pos:end="203:42"><name pos:start="203:37" pos:end="203:42"><name pos:start="203:37" pos:end="203:38">dc</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:38"><expr pos:start="207:9" pos:end="207:37"><call pos:start="207:9" pos:end="207:37"><name pos:start="207:9" pos:end="207:21">gen_exception</name><argument_list pos:start="207:22" pos:end="207:37">(<argument pos:start="207:23" pos:end="207:24"><expr pos:start="207:23" pos:end="207:24"><name pos:start="207:23" pos:end="207:24">dc</name></expr></argument>, <argument pos:start="207:27" pos:end="207:36"><expr pos:start="207:27" pos:end="207:36"><name pos:start="207:27" pos:end="207:36">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="243:5">else <block pos:start="209:12" pos:end="243:5">{<block_content pos:start="211:9" pos:end="241:9">

        <switch pos:start="211:9" pos:end="241:9">switch <condition pos:start="211:16" pos:end="211:27">(<expr pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:18">dc</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:26">is_jmp</name></name></expr>)</condition> <block pos:start="211:29" pos:end="241:9">{<block_content pos:start="213:9" pos:end="239:18">

        <case pos:start="213:9" pos:end="213:24">case <expr pos:start="213:14" pos:end="213:23"><name pos:start="213:14" pos:end="213:23">DISAS_NEXT</name></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:39"><expr pos:start="215:13" pos:end="215:38"><call pos:start="215:13" pos:end="215:38"><name pos:start="215:13" pos:end="215:23">gen_goto_tb</name><argument_list pos:start="215:24" pos:end="215:38">(<argument pos:start="215:25" pos:end="215:26"><expr pos:start="215:25" pos:end="215:26"><name pos:start="215:25" pos:end="215:26">dc</name></expr></argument>, <argument pos:start="215:29" pos:end="215:29"><expr pos:start="215:29" pos:end="215:29"><literal type="number" pos:start="215:29" pos:end="215:29">0</literal></expr></argument>, <argument pos:start="215:32" pos:end="215:37"><expr pos:start="215:32" pos:end="215:37"><name pos:start="215:32" pos:end="215:37"><name pos:start="215:32" pos:end="215:33">dc</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:37">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <default pos:start="219:9" pos:end="219:16">default:</default>

        <case pos:start="221:9" pos:end="221:24">case <expr pos:start="221:14" pos:end="221:23"><name pos:start="221:14" pos:end="221:23">DISAS_JUMP</name></expr>:</case>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:26">case <expr pos:start="225:14" pos:end="225:25"><name pos:start="225:14" pos:end="225:25">DISAS_UPDATE</name></expr>:</case>

            <comment type="block" pos:start="227:13" pos:end="229:37">/* indicate that the hash table must be used

               to find the next TB */</comment>

            <expr_stmt pos:start="231:13" pos:end="231:31"><expr pos:start="231:13" pos:end="231:30"><call pos:start="231:13" pos:end="231:30"><name pos:start="231:13" pos:end="231:27">tcg_gen_exit_tb</name><argument_list pos:start="231:28" pos:end="231:30">(<argument pos:start="231:29" pos:end="231:29"><expr pos:start="231:29" pos:end="231:29"><literal type="number" pos:start="231:29" pos:end="231:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="233:13" pos:end="233:18">break;</break>

        <case pos:start="235:9" pos:end="235:27">case <expr pos:start="235:14" pos:end="235:26"><name pos:start="235:14" pos:end="235:26">DISAS_TB_JUMP</name></expr>:</case>

            <comment type="block" pos:start="237:13" pos:end="237:42">/* nothing more to generate */</comment>

            <break pos:start="239:13" pos:end="239:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:34"><expr pos:start="247:5" pos:end="247:33"><call pos:start="247:5" pos:end="247:33"><name pos:start="247:5" pos:end="247:18">gen_icount_end</name><argument_list pos:start="247:19" pos:end="247:33">(<argument pos:start="247:20" pos:end="247:21"><expr pos:start="247:20" pos:end="247:21"><name pos:start="247:20" pos:end="247:21">tb</name></expr></argument>, <argument pos:start="247:24" pos:end="247:32"><expr pos:start="247:24" pos:end="247:32"><name pos:start="247:24" pos:end="247:32">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:40"><expr pos:start="249:5" pos:end="249:39"><operator pos:start="249:5" pos:end="249:5">*</operator><name pos:start="249:6" pos:end="249:24"><name pos:start="249:6" pos:end="249:12">tcg_ctx</name><operator pos:start="249:13" pos:end="249:13">.</operator><name pos:start="249:14" pos:end="249:24">gen_opc_ptr</name></name> <operator pos:start="249:26" pos:end="249:26">=</operator> <name pos:start="249:28" pos:end="249:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="274:0"><if pos:start="251:5" pos:end="263:5">if <condition pos:start="251:8" pos:end="251:18">(<expr pos:start="251:9" pos:end="251:17"><name pos:start="251:9" pos:end="251:17">search_pc</name></expr>)</condition> <block pos:start="251:20" pos:end="263:5">{<block_content pos:start="253:9" pos:end="261:9">

        <expr_stmt pos:start="253:9" pos:end="253:54"><expr pos:start="253:9" pos:end="253:53"><name pos:start="253:9" pos:end="253:9">j</name> <operator pos:start="253:11" pos:end="253:11">=</operator> <name pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:19">tcg_ctx</name><operator pos:start="253:20" pos:end="253:20">.</operator><name pos:start="253:21" pos:end="253:31">gen_opc_ptr</name></name> <operator pos:start="253:33" pos:end="253:33">-</operator> <name pos:start="253:35" pos:end="253:53"><name pos:start="253:35" pos:end="253:41">tcg_ctx</name><operator pos:start="253:42" pos:end="253:42">.</operator><name pos:start="253:43" pos:end="253:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:12"><expr pos:start="255:9" pos:end="255:11"><name pos:start="255:9" pos:end="255:9">k</name><operator pos:start="255:10" pos:end="255:11">++</operator></expr>;</expr_stmt>

        <while pos:start="257:9" pos:end="261:9">while <condition pos:start="257:15" pos:end="257:22">(<expr pos:start="257:16" pos:end="257:21"><name pos:start="257:16" pos:end="257:16">k</name> <operator pos:start="257:18" pos:end="257:19">&lt;=</operator> <name pos:start="257:21" pos:end="257:21">j</name></expr>)</condition> <block pos:start="257:24" pos:end="261:9">{<block_content pos:start="259:13" pos:end="259:49">

            <expr_stmt pos:start="259:13" pos:end="259:49"><expr pos:start="259:13" pos:end="259:48"><name pos:start="259:13" pos:end="259:44"><name pos:start="259:13" pos:end="259:19">tcg_ctx</name><operator pos:start="259:20" pos:end="259:20">.</operator><name pos:start="259:21" pos:end="259:39">gen_opc_instr_start</name><index pos:start="259:40" pos:end="259:44">[<expr pos:start="259:41" pos:end="259:43"><name pos:start="259:41" pos:end="259:41">k</name><operator pos:start="259:42" pos:end="259:43">++</operator></expr>]</index></name> <operator pos:start="259:46" pos:end="259:46">=</operator> <literal type="number" pos:start="259:48" pos:end="259:48">0</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="263:7" pos:end="274:0">else <block pos:start="263:12" pos:end="274:0">{<block_content pos:start="265:9" pos:end="267:31">

        <expr_stmt pos:start="265:9" pos:end="265:37"><expr pos:start="265:9" pos:end="265:36"><name pos:start="265:9" pos:end="265:16"><name pos:start="265:9" pos:end="265:10">tb</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:16">size</name></name> <operator pos:start="265:18" pos:end="265:18">=</operator> <name pos:start="265:20" pos:end="265:25"><name pos:start="265:20" pos:end="265:21">dc</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:25">pc</name></name> <operator pos:start="265:27" pos:end="265:27">-</operator> <name pos:start="265:29" pos:end="265:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:31"><expr pos:start="267:9" pos:end="267:30"><name pos:start="267:9" pos:end="267:18"><name pos:start="267:9" pos:end="267:10">tb</name><operator pos:start="267:11" pos:end="267:12">-&gt;</operator><name pos:start="267:13" pos:end="267:18">icount</name></name> <operator pos:start="267:20" pos:end="267:20">=</operator> <name pos:start="267:22" pos:end="267:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="273:1" pos:end="273:18">#<cpp:directive pos:start="273:2" pos:end="273:6">ifdef</cpp:directive> <name pos:start="273:8" pos:end="273:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="275:5" pos:end="290:0"><if pos:start="275:5" pos:end="290:0">if <condition pos:start="275:8" pos:end="275:46">(<expr pos:start="275:9" pos:end="275:45"><call pos:start="275:9" pos:end="275:45"><name pos:start="275:9" pos:end="275:26">qemu_loglevel_mask</name><argument_list pos:start="275:27" pos:end="275:45">(<argument pos:start="275:28" pos:end="275:44"><expr pos:start="275:28" pos:end="275:44"><name pos:start="275:28" pos:end="275:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="275:48" pos:end="290:0">{<block_content pos:start="277:9" pos:end="285:33">

        <expr_stmt pos:start="277:9" pos:end="277:23"><expr pos:start="277:9" pos:end="277:22"><call pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:16">qemu_log</name><argument_list pos:start="277:17" pos:end="277:22">(<argument pos:start="277:18" pos:end="277:21"><expr pos:start="277:18" pos:end="277:21"><literal type="string" pos:start="277:18" pos:end="277:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:68"><expr pos:start="279:9" pos:end="279:67"><call pos:start="279:9" pos:end="279:67"><name pos:start="279:9" pos:end="279:24">log_target_disas</name><argument_list pos:start="279:25" pos:end="279:67">(<argument pos:start="279:26" pos:end="279:34"><expr pos:start="279:26" pos:end="279:34"><operator pos:start="279:26" pos:end="279:26">&amp;</operator><name pos:start="279:27" pos:end="279:34"><name pos:start="279:27" pos:end="279:29">cpu</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:34">env</name></name></expr></argument>, <argument pos:start="279:37" pos:end="279:44"><expr pos:start="279:37" pos:end="279:44"><name pos:start="279:37" pos:end="279:44">pc_start</name></expr></argument>, <argument pos:start="279:47" pos:end="279:63"><expr pos:start="279:47" pos:end="279:63"><name pos:start="279:47" pos:end="279:52"><name pos:start="279:47" pos:end="279:48">dc</name><operator pos:start="279:49" pos:end="279:50">-&gt;</operator><name pos:start="279:51" pos:end="279:52">pc</name></name> <operator pos:start="279:54" pos:end="279:54">-</operator> <name pos:start="279:56" pos:end="279:63">pc_start</name></expr></argument>, <argument pos:start="279:66" pos:end="279:66"><expr pos:start="279:66" pos:end="279:66"><literal type="number" pos:start="279:66" pos:end="279:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="285:33"><expr pos:start="281:9" pos:end="285:32"><call pos:start="281:9" pos:end="285:32"><name pos:start="281:9" pos:end="281:16">qemu_log</name><argument_list pos:start="281:17" pos:end="285:32">(<argument pos:start="281:18" pos:end="281:41"><expr pos:start="281:18" pos:end="281:41"><literal type="string" pos:start="281:18" pos:end="281:41">"\nisize=%d osize=%td\n"</literal></expr></argument>,

            <argument pos:start="283:13" pos:end="283:29"><expr pos:start="283:13" pos:end="283:29"><name pos:start="283:13" pos:end="283:18"><name pos:start="283:13" pos:end="283:14">dc</name><operator pos:start="283:15" pos:end="283:16">-&gt;</operator><name pos:start="283:17" pos:end="283:18">pc</name></name> <operator pos:start="283:20" pos:end="283:20">-</operator> <name pos:start="283:22" pos:end="283:29">pc_start</name></expr></argument>, <argument pos:start="283:32" pos:end="285:31"><expr pos:start="283:32" pos:end="285:31"><name pos:start="283:32" pos:end="283:50"><name pos:start="283:32" pos:end="283:38">tcg_ctx</name><operator pos:start="283:39" pos:end="283:39">.</operator><name pos:start="283:40" pos:end="283:50">gen_opc_ptr</name></name> <operator pos:start="283:52" pos:end="283:52">-</operator>

            <name pos:start="285:13" pos:end="285:31"><name pos:start="285:13" pos:end="285:19">tcg_ctx</name><operator pos:start="285:20" pos:end="285:20">.</operator><name pos:start="285:21" pos:end="285:31">gen_opc_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="289:1" pos:end="289:6">#<cpp:directive pos:start="289:2" pos:end="289:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
