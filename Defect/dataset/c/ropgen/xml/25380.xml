<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25380.c" pos:tabs="8"><function pos:start="1:1" pos:end="859:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">vc1_parse_frame_header_adv</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">VC1Context</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">v</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:59">GetBitContext</name><modifier pos:start="1:60" pos:end="1:60">*</modifier></type> <name pos:start="1:62" pos:end="1:63">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="859:1">{<block_content pos:start="5:5" pos:end="857:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pqindex</name></decl>, <decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:25">lowquant</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">mbmodetab</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">imvtab</name></decl>, <decl pos:start="9:28" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:34">icbptab</name></decl>, <decl pos:start="9:37" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:46">twomvbptab</name></decl>, <decl pos:start="9:49" pos:end="9:59"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:49" pos:end="9:59">fourmvbptab</name></decl>;</decl_stmt> <comment type="block" pos:start="9:62" pos:end="9:92">/* useful only for debugging */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">scale</name></decl>, <decl pos:start="11:16" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:20">shift</name></decl>, <decl pos:start="11:23" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:23">i</name></decl>;</decl_stmt> <comment type="block" pos:start="11:26" pos:end="11:78">/* for initializing LUT for intensity compensation */</comment>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:13">numref</name></name><operator pos:start="15:14" pos:end="15:14">=</operator><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">fcm</name></name><operator pos:start="17:11" pos:end="17:11">=</operator><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">v</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">field_mode</name></name><operator pos:start="19:18" pos:end="19:18">=</operator><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:5">v</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:22">p_frame_skipped</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">v</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:23">second_field</name></name></expr>)</condition> <block pos:start="23:26" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:35">

        <expr_stmt pos:start="25:9" pos:end="25:81"><expr pos:start="25:9" pos:end="25:80"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">v</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:22">pict_type</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <ternary pos:start="25:26" pos:end="25:80"><condition pos:start="25:26" pos:end="25:42"><expr pos:start="25:26" pos:end="25:40"><operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:27">v</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">fptype</name></name> <operator pos:start="25:37" pos:end="25:37">&amp;</operator> <literal type="number" pos:start="25:39" pos:end="25:39">1</literal><operator pos:start="25:40" pos:end="25:40">)</operator></expr> ?</condition><then pos:start="25:44" pos:end="25:60"> <expr pos:start="25:44" pos:end="25:60"><name pos:start="25:44" pos:end="25:60">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="25:62" pos:end="25:80">: <expr pos:start="25:64" pos:end="25:80"><name pos:start="25:64" pos:end="25:80">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:86"><if pos:start="27:9" pos:end="29:86">if <condition pos:start="27:12" pos:end="27:26">(<expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:13">v</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">fptype</name></name> <operator pos:start="27:23" pos:end="27:23">&amp;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">4</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:86"><block_content pos:start="29:13" pos:end="29:86">

            <expr_stmt pos:start="29:13" pos:end="29:86"><expr pos:start="29:13" pos:end="29:85"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">v</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:26">pict_type</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <ternary pos:start="29:30" pos:end="29:85"><condition pos:start="29:30" pos:end="29:46"><expr pos:start="29:30" pos:end="29:44"><operator pos:start="29:30" pos:end="29:30">(</operator><name pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:31">v</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:39">fptype</name></name> <operator pos:start="29:41" pos:end="29:41">&amp;</operator> <literal type="number" pos:start="29:43" pos:end="29:43">1</literal><operator pos:start="29:44" pos:end="29:44">)</operator></expr> ?</condition><then pos:start="29:48" pos:end="29:65"> <expr pos:start="29:48" pos:end="29:65"><name pos:start="29:48" pos:end="29:65">AV_PICTURE_TYPE_BI</name></expr> </then><else pos:start="29:67" pos:end="29:85">: <expr pos:start="29:69" pos:end="29:85"><name pos:start="29:69" pos:end="29:85">AV_PICTURE_TYPE_B</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:63"><expr pos:start="31:9" pos:end="31:62"><name pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:9">v</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:32">current_picture_ptr</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:35">f</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:45">pict_type</name></name> <operator pos:start="31:47" pos:end="31:47">=</operator> <name pos:start="31:49" pos:end="31:62"><name pos:start="31:49" pos:end="31:49">v</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:53">.</operator><name pos:start="31:54" pos:end="31:62">pict_type</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:35"><if pos:start="33:9" pos:end="35:35">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:14">v</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:31">pic_header_flag</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">

            <goto pos:start="35:13" pos:end="35:35">goto <name pos:start="35:18" pos:end="35:34">parse_common_info</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="63:5"><if pos:start="41:5" pos:end="63:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">v</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">interlace</name></name></expr>)</condition> <block pos:start="41:23" pos:end="63:5">{<block_content pos:start="43:9" pos:end="61:9">

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">v</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">fcm</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:26">decode012</name><argument_list pos:start="43:27" pos:end="43:30">(<argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><name pos:start="43:28" pos:end="43:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="61:9"><if pos:start="45:9" pos:end="61:9">if <condition pos:start="45:12" pos:end="45:19">(<expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">v</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">fcm</name></name></expr>)</condition> <block pos:start="45:21" pos:end="61:9">{<block_content pos:start="47:13" pos:end="59:75">

            <if_stmt pos:start="47:13" pos:end="53:34"><if pos:start="47:13" pos:end="49:34">if <condition pos:start="47:16" pos:end="47:28">(<expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">v</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">fcm</name></name> <operator pos:start="47:24" pos:end="47:25">==</operator> <literal type="number" pos:start="47:27" pos:end="47:27">2</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:34"><block_content pos:start="49:17" pos:end="49:34">

                <expr_stmt pos:start="49:17" pos:end="49:34"><expr pos:start="49:17" pos:end="49:33"><name pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:17">v</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:29">field_mode</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <literal type="number" pos:start="49:33" pos:end="49:33">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="51:13" pos:end="53:34">else<block type="pseudo" pos:start="53:17" pos:end="53:34"><block_content pos:start="53:17" pos:end="53:34">

                <expr_stmt pos:start="53:17" pos:end="53:34"><expr pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:17">v</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:29">field_mode</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="55:13" pos:end="59:75"><if pos:start="55:13" pos:end="59:75">if <condition pos:start="55:16" pos:end="55:38">(<expr pos:start="55:17" pos:end="55:37"><operator pos:start="55:17" pos:end="55:17">!</operator><name pos:start="55:18" pos:end="55:35"><name pos:start="55:18" pos:end="55:18">v</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:35">warn_interlaced</name></name><operator pos:start="55:36" pos:end="55:37">++</operator></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="59:75"><block_content pos:start="57:17" pos:end="59:75">

                <expr_stmt pos:start="57:17" pos:end="59:75"><expr pos:start="57:17" pos:end="59:74"><call pos:start="57:17" pos:end="59:74"><name pos:start="57:17" pos:end="57:22">av_log</name><argument_list pos:start="57:23" pos:end="59:74">(<argument pos:start="57:24" pos:end="57:33"><expr pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:24">v</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:28">.</operator><name pos:start="57:29" pos:end="57:33">avctx</name></name></expr></argument>, <argument pos:start="57:36" pos:end="57:47"><expr pos:start="57:36" pos:end="57:47"><name pos:start="57:36" pos:end="57:47">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="59:24" pos:end="59:73"><expr pos:start="59:24" pos:end="59:73"><literal type="string" pos:start="59:24" pos:end="59:73">"Interlaced frames/fields support is incomplete\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="115:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:22">(<expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:9">v</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">field_mode</name></name></expr>)</condition> <block pos:start="67:24" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:86">

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:9">v</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">fptype</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:28">get_bits</name><argument_list pos:start="69:29" pos:end="69:35">(<argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">gb</name></expr></argument>, <argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:81"><expr pos:start="71:9" pos:end="71:80"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">v</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:13">.</operator><name pos:start="71:14" pos:end="71:22">pict_type</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <ternary pos:start="71:26" pos:end="71:80"><condition pos:start="71:26" pos:end="71:42"><expr pos:start="71:26" pos:end="71:40"><operator pos:start="71:26" pos:end="71:26">(</operator><name pos:start="71:27" pos:end="71:35"><name pos:start="71:27" pos:end="71:27">v</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:35">fptype</name></name> <operator pos:start="71:37" pos:end="71:37">&amp;</operator> <literal type="number" pos:start="71:39" pos:end="71:39">2</literal><operator pos:start="71:40" pos:end="71:40">)</operator></expr> ?</condition><then pos:start="71:44" pos:end="71:60"> <expr pos:start="71:44" pos:end="71:60"><name pos:start="71:44" pos:end="71:60">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="71:62" pos:end="71:80">: <expr pos:start="71:64" pos:end="71:80"><name pos:start="71:64" pos:end="71:80">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:86"><if pos:start="73:9" pos:end="75:86">if <condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:13">v</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:21">fptype</name></name> <operator pos:start="73:23" pos:end="73:23">&amp;</operator> <literal type="number" pos:start="73:25" pos:end="73:25">4</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:86"><block_content pos:start="75:13" pos:end="75:86"> <comment type="line" pos:start="73:28" pos:end="73:39">// B-picture</comment>

            <expr_stmt pos:start="75:13" pos:end="75:86"><expr pos:start="75:13" pos:end="75:85"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:13">v</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:26">pict_type</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <ternary pos:start="75:30" pos:end="75:85"><condition pos:start="75:30" pos:end="75:46"><expr pos:start="75:30" pos:end="75:44"><operator pos:start="75:30" pos:end="75:30">(</operator><name pos:start="75:31" pos:end="75:39"><name pos:start="75:31" pos:end="75:31">v</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:39">fptype</name></name> <operator pos:start="75:41" pos:end="75:41">&amp;</operator> <literal type="number" pos:start="75:43" pos:end="75:43">2</literal><operator pos:start="75:44" pos:end="75:44">)</operator></expr> ?</condition><then pos:start="75:48" pos:end="75:65"> <expr pos:start="75:48" pos:end="75:65"><name pos:start="75:48" pos:end="75:65">AV_PICTURE_TYPE_BI</name></expr> </then><else pos:start="75:67" pos:end="75:85">: <expr pos:start="75:69" pos:end="75:85"><name pos:start="75:69" pos:end="75:85">AV_PICTURE_TYPE_B</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="115:5">else <block pos:start="77:12" pos:end="115:5">{<block_content pos:start="79:9" pos:end="113:9">

        <switch pos:start="79:9" pos:end="113:9">switch <condition pos:start="79:16" pos:end="79:36">(<expr pos:start="79:17" pos:end="79:35"><call pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:25">get_unary</name><argument_list pos:start="79:26" pos:end="79:35">(<argument pos:start="79:27" pos:end="79:28"><expr pos:start="79:27" pos:end="79:28"><name pos:start="79:27" pos:end="79:28">gb</name></expr></argument>, <argument pos:start="79:31" pos:end="79:31"><expr pos:start="79:31" pos:end="79:31"><literal type="number" pos:start="79:31" pos:end="79:31">0</literal></expr></argument>, <argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:38" pos:end="113:9">{<block_content pos:start="81:9" pos:end="111:18">

        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:47"><expr pos:start="83:13" pos:end="83:46"><name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:13">v</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:17">.</operator><name pos:start="83:18" pos:end="83:26">pict_type</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:15">case <expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">1</literal></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:47"><expr pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:13">v</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:17">.</operator><name pos:start="89:18" pos:end="89:26">pict_type</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:46">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:15">case <expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">2</literal></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:47"><expr pos:start="95:13" pos:end="95:46"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:13">v</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:16">s</name><operator pos:start="95:17" pos:end="95:17">.</operator><name pos:start="95:18" pos:end="95:26">pict_type</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:15">case <expr pos:start="99:14" pos:end="99:14"><literal type="number" pos:start="99:14" pos:end="99:14">3</literal></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:48"><expr pos:start="101:13" pos:end="101:47"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:13">v</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:26">pict_type</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:47">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:15">case <expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">4</literal></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:47"><expr pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:13">v</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:16">s</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:26">pict_type</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt> <comment type="line" pos:start="107:49" pos:end="107:62">// skipped pic</comment>

            <expr_stmt pos:start="109:13" pos:end="109:35"><expr pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:13">v</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:30">p_frame_skipped</name></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <literal type="number" pos:start="109:34" pos:end="109:34">1</literal></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="117:5" pos:end="119:25"><if pos:start="117:5" pos:end="119:25">if <condition pos:start="117:8" pos:end="117:22">(<expr pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:9">v</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:21">tfcntrflag</name></name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:25"><block_content pos:start="119:9" pos:end="119:25">

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><call pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:17">skip_bits</name><argument_list pos:start="119:18" pos:end="119:24">(<argument pos:start="119:19" pos:end="119:20"><expr pos:start="119:19" pos:end="119:20"><name pos:start="119:19" pos:end="119:20">gb</name></expr></argument>, <argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><literal type="number" pos:start="119:23" pos:end="119:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="121:5" pos:end="135:5"><if pos:start="121:5" pos:end="135:5">if <condition pos:start="121:8" pos:end="121:21">(<expr pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:9">v</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:20">broadcast</name></name></expr>)</condition> <block pos:start="121:23" pos:end="135:5">{<block_content pos:start="123:9" pos:end="133:9">

        <if_stmt pos:start="123:9" pos:end="133:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:36">(<expr pos:start="123:13" pos:end="123:35"><operator pos:start="123:13" pos:end="123:13">!</operator><name pos:start="123:14" pos:end="123:25"><name pos:start="123:14" pos:end="123:14">v</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:25">interlace</name></name> <operator pos:start="123:27" pos:end="123:28">||</operator> <name pos:start="123:30" pos:end="123:35"><name pos:start="123:30" pos:end="123:30">v</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:35">psf</name></name></expr>)</condition> <block pos:start="123:38" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:40">

            <expr_stmt pos:start="125:13" pos:end="125:40"><expr pos:start="125:13" pos:end="125:39"><name pos:start="125:13" pos:end="125:21"><name pos:start="125:13" pos:end="125:13">v</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:21">rptfrm</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <call pos:start="125:25" pos:end="125:39"><name pos:start="125:25" pos:end="125:32">get_bits</name><argument_list pos:start="125:33" pos:end="125:39">(<argument pos:start="125:34" pos:end="125:35"><expr pos:start="125:34" pos:end="125:35"><name pos:start="125:34" pos:end="125:35">gb</name></expr></argument>, <argument pos:start="125:38" pos:end="125:38"><expr pos:start="125:38" pos:end="125:38"><literal type="number" pos:start="125:38" pos:end="125:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="133:9">else <block pos:start="127:16" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:35">

            <expr_stmt pos:start="129:13" pos:end="129:35"><expr pos:start="129:13" pos:end="129:34"><name pos:start="129:13" pos:end="129:18"><name pos:start="129:13" pos:end="129:13">v</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:18">tff</name></name> <operator pos:start="129:20" pos:end="129:20">=</operator> <call pos:start="129:22" pos:end="129:34"><name pos:start="129:22" pos:end="129:30">get_bits1</name><argument_list pos:start="129:31" pos:end="129:34">(<argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><name pos:start="129:32" pos:end="129:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:13">v</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:18">rff</name></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <call pos:start="131:22" pos:end="131:34"><name pos:start="131:22" pos:end="131:30">get_bits1</name><argument_list pos:start="131:31" pos:end="131:34">(<argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><name pos:start="131:32" pos:end="131:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:23">(<expr pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:9">v</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:22">panscanflag</name></name></expr>)</condition> <block pos:start="137:25" pos:end="143:5">{<block_content pos:start="139:9" pos:end="139:58">

        <expr_stmt pos:start="139:9" pos:end="139:58"><expr pos:start="139:9" pos:end="139:57"><call pos:start="139:9" pos:end="139:57"><name pos:start="139:9" pos:end="139:30">av_log_missing_feature</name><argument_list pos:start="139:31" pos:end="139:57">(<argument pos:start="139:32" pos:end="139:41"><expr pos:start="139:32" pos:end="139:41"><name pos:start="139:32" pos:end="139:41"><name pos:start="139:32" pos:end="139:32">v</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:35">s</name><operator pos:start="139:36" pos:end="139:36">.</operator><name pos:start="139:37" pos:end="139:41">avctx</name></name></expr></argument>, <argument pos:start="139:44" pos:end="139:53"><expr pos:start="139:44" pos:end="139:53"><literal type="string" pos:start="139:44" pos:end="139:53">"Pan-scan"</literal></expr></argument>, <argument pos:start="139:56" pos:end="139:56"><expr pos:start="139:56" pos:end="139:56"><literal type="number" pos:start="139:56" pos:end="139:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="141:9" pos:end="141:13">//...</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:27">(<expr pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:9">v</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:26">p_frame_skipped</name></name></expr>)</condition> <block pos:start="145:29" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:17">

        <return pos:start="147:9" pos:end="147:17">return <expr pos:start="147:16" pos:end="147:16"><literal type="number" pos:start="147:16" pos:end="147:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:27"><expr pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:10"><name pos:start="151:5" pos:end="151:5">v</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:10">rnd</name></name> <operator pos:start="151:12" pos:end="151:12">=</operator> <call pos:start="151:14" pos:end="151:26"><name pos:start="151:14" pos:end="151:22">get_bits1</name><argument_list pos:start="151:23" pos:end="151:26">(<argument pos:start="151:24" pos:end="151:25"><expr pos:start="151:24" pos:end="151:25"><name pos:start="151:24" pos:end="151:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="155:34"><if pos:start="153:5" pos:end="155:34">if <condition pos:start="153:8" pos:end="153:21">(<expr pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:9">v</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:20">interlace</name></name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:34"><block_content pos:start="155:9" pos:end="155:34">

        <expr_stmt pos:start="155:9" pos:end="155:34"><expr pos:start="155:9" pos:end="155:33"><name pos:start="155:9" pos:end="155:17"><name pos:start="155:9" pos:end="155:9">v</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:17">uvsamp</name></name> <operator pos:start="155:19" pos:end="155:19">=</operator> <call pos:start="155:21" pos:end="155:33"><name pos:start="155:21" pos:end="155:29">get_bits1</name><argument_list pos:start="155:30" pos:end="155:33">(<argument pos:start="155:31" pos:end="155:32"><expr pos:start="155:31" pos:end="155:32"><name pos:start="155:31" pos:end="155:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="195:5"><if pos:start="157:5" pos:end="195:5">if <condition pos:start="157:8" pos:end="157:22">(<expr pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:9">v</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:21">field_mode</name></name></expr>)</condition> <block pos:start="157:24" pos:end="195:5">{<block_content pos:start="159:9" pos:end="193:31">

        <if_stmt pos:start="159:9" pos:end="191:9"><if pos:start="159:9" pos:end="161:27">if <condition pos:start="159:12" pos:end="159:29">(<expr pos:start="159:13" pos:end="159:28"><operator pos:start="159:13" pos:end="159:13">!</operator><name pos:start="159:14" pos:end="159:28"><name pos:start="159:14" pos:end="159:14">v</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:28">refdist_flag</name></name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:27"><block_content pos:start="161:13" pos:end="161:27">

            <expr_stmt pos:start="161:13" pos:end="161:27"><expr pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:22"><name pos:start="161:13" pos:end="161:13">v</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:22">refdist</name></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="163:9" pos:end="191:9">else <block pos:start="163:14" pos:end="191:9">{<block_content pos:start="165:13" pos:end="189:13">

            <if_stmt pos:start="165:13" pos:end="189:13"><if pos:start="165:13" pos:end="175:13">if <condition pos:start="165:16" pos:end="167:58">(<expr pos:start="165:17" pos:end="167:57"><operator pos:start="165:17" pos:end="165:17">(</operator><name pos:start="165:18" pos:end="165:31"><name pos:start="165:18" pos:end="165:18">v</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:21">s</name><operator pos:start="165:22" pos:end="165:22">.</operator><name pos:start="165:23" pos:end="165:31">pict_type</name></name> <operator pos:start="165:33" pos:end="165:34">!=</operator> <name pos:start="165:36" pos:end="165:52">AV_PICTURE_TYPE_B</name><operator pos:start="165:53" pos:end="165:53">)</operator>

                <operator pos:start="167:17" pos:end="167:18">&amp;&amp;</operator> <operator pos:start="167:20" pos:end="167:20">(</operator><name pos:start="167:21" pos:end="167:34"><name pos:start="167:21" pos:end="167:21">v</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:25">.</operator><name pos:start="167:26" pos:end="167:34">pict_type</name></name> <operator pos:start="167:36" pos:end="167:37">!=</operator> <name pos:start="167:39" pos:end="167:56">AV_PICTURE_TYPE_BI</name><operator pos:start="167:57" pos:end="167:57">)</operator></expr>)</condition> <block pos:start="167:60" pos:end="175:13">{<block_content pos:start="169:17" pos:end="173:55">

                <expr_stmt pos:start="169:17" pos:end="169:45"><expr pos:start="169:17" pos:end="169:44"><name pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:17">v</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:26">refdist</name></name> <operator pos:start="169:28" pos:end="169:28">=</operator> <call pos:start="169:30" pos:end="169:44"><name pos:start="169:30" pos:end="169:37">get_bits</name><argument_list pos:start="169:38" pos:end="169:44">(<argument pos:start="169:39" pos:end="169:40"><expr pos:start="169:39" pos:end="169:40"><name pos:start="169:39" pos:end="169:40">gb</name></expr></argument>, <argument pos:start="169:43" pos:end="169:43"><expr pos:start="169:43" pos:end="169:43"><literal type="number" pos:start="169:43" pos:end="169:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="171:17" pos:end="173:55"><if pos:start="171:17" pos:end="173:55">if <condition pos:start="171:20" pos:end="171:36">(<expr pos:start="171:21" pos:end="171:35"><name pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:21">v</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:30">refdist</name></name> <operator pos:start="171:32" pos:end="171:33">==</operator> <literal type="number" pos:start="171:35" pos:end="171:35">3</literal></expr>)</condition><block type="pseudo" pos:start="173:21" pos:end="173:55"><block_content pos:start="173:21" pos:end="173:55">

                    <expr_stmt pos:start="173:21" pos:end="173:55"><expr pos:start="173:21" pos:end="173:54"><name pos:start="173:21" pos:end="173:30"><name pos:start="173:21" pos:end="173:21">v</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:30">refdist</name></name> <operator pos:start="173:32" pos:end="173:33">+=</operator> <call pos:start="173:35" pos:end="173:54"><name pos:start="173:35" pos:end="173:43">get_unary</name><argument_list pos:start="173:44" pos:end="173:54">(<argument pos:start="173:45" pos:end="173:46"><expr pos:start="173:45" pos:end="173:46"><name pos:start="173:45" pos:end="173:46">gb</name></expr></argument>, <argument pos:start="173:49" pos:end="173:49"><expr pos:start="173:49" pos:end="173:49"><literal type="number" pos:start="173:49" pos:end="173:49">0</literal></expr></argument>, <argument pos:start="173:52" pos:end="173:53"><expr pos:start="173:52" pos:end="173:53"><literal type="number" pos:start="173:52" pos:end="173:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="175:15" pos:end="189:13">else <block pos:start="175:20" pos:end="189:13">{<block_content pos:start="177:17" pos:end="187:32">

                <expr_stmt pos:start="177:17" pos:end="177:109"><expr pos:start="177:17" pos:end="177:108"><name pos:start="177:17" pos:end="177:38"><name pos:start="177:17" pos:end="177:17">v</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:38">bfraction_lut_index</name></name> <operator pos:start="177:40" pos:end="177:40">=</operator> <call pos:start="177:42" pos:end="177:108"><name pos:start="177:42" pos:end="177:49">get_vlc2</name><argument_list pos:start="177:50" pos:end="177:108">(<argument pos:start="177:51" pos:end="177:52"><expr pos:start="177:51" pos:end="177:52"><name pos:start="177:51" pos:end="177:52">gb</name></expr></argument>, <argument pos:start="177:55" pos:end="177:80"><expr pos:start="177:55" pos:end="177:80"><name pos:start="177:55" pos:end="177:80"><name pos:start="177:55" pos:end="177:74">ff_vc1_bfraction_vlc</name><operator pos:start="177:75" pos:end="177:75">.</operator><name pos:start="177:76" pos:end="177:80">table</name></name></expr></argument>, <argument pos:start="177:83" pos:end="177:104"><expr pos:start="177:83" pos:end="177:104"><name pos:start="177:83" pos:end="177:104">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="177:107" pos:end="177:107"><expr pos:start="177:107" pos:end="177:107"><literal type="number" pos:start="177:107" pos:end="177:107">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:86"><expr pos:start="179:17" pos:end="179:85"><name pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:17">v</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:28">bfraction</name></name>           <operator pos:start="179:40" pos:end="179:40">=</operator> <name pos:start="179:42" pos:end="179:85"><name pos:start="179:42" pos:end="179:61">ff_vc1_bfraction_lut</name><index pos:start="179:62" pos:end="179:85">[<expr pos:start="179:63" pos:end="179:84"><name pos:start="179:63" pos:end="179:84"><name pos:start="179:63" pos:end="179:63">v</name><operator pos:start="179:64" pos:end="179:65">-&gt;</operator><name pos:start="179:66" pos:end="179:84">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:59"><expr pos:start="181:17" pos:end="181:58"><name pos:start="181:17" pos:end="181:23"><name pos:start="181:17" pos:end="181:17">v</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:23">frfd</name></name> <operator pos:start="181:25" pos:end="181:25">=</operator> <operator pos:start="181:27" pos:end="181:27">(</operator><name pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:28">v</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:39">bfraction</name></name> <operator pos:start="181:41" pos:end="181:41">*</operator> <name pos:start="181:43" pos:end="181:52"><name pos:start="181:43" pos:end="181:43">v</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:52">refdist</name></name><operator pos:start="181:53" pos:end="181:53">)</operator> <operator pos:start="181:55" pos:end="181:56">&gt;&gt;</operator> <literal type="number" pos:start="181:58" pos:end="181:58">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:51"><expr pos:start="183:17" pos:end="183:50"><name pos:start="183:17" pos:end="183:23"><name pos:start="183:17" pos:end="183:17">v</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:23">brfd</name></name> <operator pos:start="183:25" pos:end="183:25">=</operator> <name pos:start="183:27" pos:end="183:36"><name pos:start="183:27" pos:end="183:27">v</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:36">refdist</name></name> <operator pos:start="183:38" pos:end="183:38">-</operator> <name pos:start="183:40" pos:end="183:46"><name pos:start="183:40" pos:end="183:40">v</name><operator pos:start="183:41" pos:end="183:42">-&gt;</operator><name pos:start="183:43" pos:end="183:46">frfd</name></name> <operator pos:start="183:48" pos:end="183:48">-</operator> <literal type="number" pos:start="183:50" pos:end="183:50">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="185:17" pos:end="187:32"><if pos:start="185:17" pos:end="187:32">if <condition pos:start="185:20" pos:end="185:32">(<expr pos:start="185:21" pos:end="185:31"><name pos:start="185:21" pos:end="185:27"><name pos:start="185:21" pos:end="185:21">v</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:27">brfd</name></name> <operator pos:start="185:29" pos:end="185:29">&lt;</operator> <literal type="number" pos:start="185:31" pos:end="185:31">0</literal></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:32"><block_content pos:start="187:21" pos:end="187:32">

                    <expr_stmt pos:start="187:21" pos:end="187:32"><expr pos:start="187:21" pos:end="187:31"><name pos:start="187:21" pos:end="187:27"><name pos:start="187:21" pos:end="187:21">v</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:27">brfd</name></name> <operator pos:start="187:29" pos:end="187:29">=</operator> <literal type="number" pos:start="187:31" pos:end="187:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="193:9" pos:end="193:31">goto <name pos:start="193:14" pos:end="193:30">parse_common_info</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="197:5" pos:end="199:37"><if pos:start="197:5" pos:end="199:37">if <condition pos:start="197:8" pos:end="197:23">(<expr pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:9">v</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:22">finterpflag</name></name></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:37"><block_content pos:start="199:9" pos:end="199:37">

        <expr_stmt pos:start="199:9" pos:end="199:37"><expr pos:start="199:9" pos:end="199:36"><name pos:start="199:9" pos:end="199:20"><name pos:start="199:9" pos:end="199:9">v</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:20">interpfrm</name></name> <operator pos:start="199:22" pos:end="199:22">=</operator> <call pos:start="199:24" pos:end="199:36"><name pos:start="199:24" pos:end="199:32">get_bits1</name><argument_list pos:start="199:33" pos:end="199:36">(<argument pos:start="199:34" pos:end="199:35"><expr pos:start="199:34" pos:end="199:35"><name pos:start="199:34" pos:end="199:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="201:5" pos:end="213:5"><if pos:start="201:5" pos:end="213:5">if <condition pos:start="201:8" pos:end="201:44">(<expr pos:start="201:9" pos:end="201:43"><name pos:start="201:9" pos:end="201:22"><name pos:start="201:9" pos:end="201:9">v</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:12">s</name><operator pos:start="201:13" pos:end="201:13">.</operator><name pos:start="201:14" pos:end="201:22">pict_type</name></name> <operator pos:start="201:24" pos:end="201:25">==</operator> <name pos:start="201:27" pos:end="201:43">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="201:46" pos:end="213:5">{<block_content pos:start="203:9" pos:end="211:9">

        <expr_stmt pos:start="203:9" pos:end="203:101"><expr pos:start="203:9" pos:end="203:100"><name pos:start="203:9" pos:end="203:30"><name pos:start="203:9" pos:end="203:9">v</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:30">bfraction_lut_index</name></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <call pos:start="203:34" pos:end="203:100"><name pos:start="203:34" pos:end="203:41">get_vlc2</name><argument_list pos:start="203:42" pos:end="203:100">(<argument pos:start="203:43" pos:end="203:44"><expr pos:start="203:43" pos:end="203:44"><name pos:start="203:43" pos:end="203:44">gb</name></expr></argument>, <argument pos:start="203:47" pos:end="203:72"><expr pos:start="203:47" pos:end="203:72"><name pos:start="203:47" pos:end="203:72"><name pos:start="203:47" pos:end="203:66">ff_vc1_bfraction_vlc</name><operator pos:start="203:67" pos:end="203:67">.</operator><name pos:start="203:68" pos:end="203:72">table</name></name></expr></argument>, <argument pos:start="203:75" pos:end="203:96"><expr pos:start="203:75" pos:end="203:96"><name pos:start="203:75" pos:end="203:96">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="203:99" pos:end="203:99"><expr pos:start="203:99" pos:end="203:99"><literal type="number" pos:start="203:99" pos:end="203:99">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:78"><expr pos:start="205:9" pos:end="205:77"><name pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:9">v</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:20">bfraction</name></name>           <operator pos:start="205:32" pos:end="205:32">=</operator> <name pos:start="205:34" pos:end="205:77"><name pos:start="205:34" pos:end="205:53">ff_vc1_bfraction_lut</name><index pos:start="205:54" pos:end="205:77">[<expr pos:start="205:55" pos:end="205:76"><name pos:start="205:55" pos:end="205:76"><name pos:start="205:55" pos:end="205:55">v</name><operator pos:start="205:56" pos:end="205:57">-&gt;</operator><name pos:start="205:58" pos:end="205:76">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if <condition pos:start="207:12" pos:end="207:30">(<expr pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:13">v</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:24">bfraction</name></name> <operator pos:start="207:26" pos:end="207:27">==</operator> <literal type="number" pos:start="207:29" pos:end="207:29">0</literal></expr>)</condition> <block pos:start="207:32" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:48">

            <expr_stmt pos:start="209:13" pos:end="209:48"><expr pos:start="209:13" pos:end="209:47"><name pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:13">v</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:16">s</name><operator pos:start="209:17" pos:end="209:17">.</operator><name pos:start="209:18" pos:end="209:26">pict_type</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <name pos:start="209:30" pos:end="209:47">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt> <comment type="block" pos:start="209:50" pos:end="209:82">/* XXX: should not happen here */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <label pos:start="217:5" pos:end="217:22"><name pos:start="217:5" pos:end="217:21">parse_common_info</name>:</label>

    <if_stmt pos:start="219:5" pos:end="221:56"><if pos:start="219:5" pos:end="221:56">if <condition pos:start="219:8" pos:end="219:22">(<expr pos:start="219:9" pos:end="219:21"><name pos:start="219:9" pos:end="219:21"><name pos:start="219:9" pos:end="219:9">v</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:21">field_mode</name></name></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:56"><block_content pos:start="221:9" pos:end="221:56">

        <expr_stmt pos:start="221:9" pos:end="221:56"><expr pos:start="221:9" pos:end="221:55"><name pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:9">v</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:25">cur_field_type</name></name> <operator pos:start="221:27" pos:end="221:27">=</operator> <operator pos:start="221:29" pos:end="221:29">!</operator><operator pos:start="221:30" pos:end="221:30">(</operator><name pos:start="221:31" pos:end="221:36"><name pos:start="221:31" pos:end="221:31">v</name><operator pos:start="221:32" pos:end="221:33">-&gt;</operator><name pos:start="221:34" pos:end="221:36">tff</name></name> <operator pos:start="221:38" pos:end="221:38">^</operator> <name pos:start="221:40" pos:end="221:54"><name pos:start="221:40" pos:end="221:40">v</name><operator pos:start="221:41" pos:end="221:42">-&gt;</operator><name pos:start="221:43" pos:end="221:54">second_field</name></name><operator pos:start="221:55" pos:end="221:55">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:30"><expr pos:start="223:5" pos:end="223:29"><name pos:start="223:5" pos:end="223:11">pqindex</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:29"><name pos:start="223:15" pos:end="223:22">get_bits</name><argument_list pos:start="223:23" pos:end="223:29">(<argument pos:start="223:24" pos:end="223:25"><expr pos:start="223:24" pos:end="223:25"><name pos:start="223:24" pos:end="223:25">gb</name></expr></argument>, <argument pos:start="223:28" pos:end="223:28"><expr pos:start="223:28" pos:end="223:28"><literal type="number" pos:start="223:28" pos:end="223:28">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="227:18"><if pos:start="225:5" pos:end="227:18">if <condition pos:start="225:8" pos:end="225:17">(<expr pos:start="225:9" pos:end="225:16"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:16">pqindex</name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:18"><block_content pos:start="227:9" pos:end="227:18">

        <return pos:start="227:9" pos:end="227:18">return <expr pos:start="227:16" pos:end="227:17"><operator pos:start="227:16" pos:end="227:16">-</operator><literal type="number" pos:start="227:17" pos:end="227:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:25"><expr pos:start="229:5" pos:end="229:24"><name pos:start="229:5" pos:end="229:14"><name pos:start="229:5" pos:end="229:5">v</name><operator pos:start="229:6" pos:end="229:7">-&gt;</operator><name pos:start="229:8" pos:end="229:14">pqindex</name></name> <operator pos:start="229:16" pos:end="229:16">=</operator> <name pos:start="229:18" pos:end="229:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="237:48"><if pos:start="231:5" pos:end="233:48">if <condition pos:start="231:8" pos:end="231:50">(<expr pos:start="231:9" pos:end="231:49"><name pos:start="231:9" pos:end="231:25"><name pos:start="231:9" pos:end="231:9">v</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:25">quantizer_mode</name></name> <operator pos:start="231:27" pos:end="231:28">==</operator> <name pos:start="231:30" pos:end="231:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:48"><block_content pos:start="233:9" pos:end="233:48">

        <expr_stmt pos:start="233:9" pos:end="233:48"><expr pos:start="233:9" pos:end="233:47"><name pos:start="233:9" pos:end="233:13"><name pos:start="233:9" pos:end="233:9">v</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:13">pq</name></name> <operator pos:start="233:15" pos:end="233:15">=</operator> <name pos:start="233:17" pos:end="233:47"><name pos:start="233:17" pos:end="233:35">ff_vc1_pquant_table</name><index pos:start="233:36" pos:end="233:38">[<expr pos:start="233:37" pos:end="233:37"><literal type="number" pos:start="233:37" pos:end="233:37">0</literal></expr>]</index><index pos:start="233:39" pos:end="233:47">[<expr pos:start="233:40" pos:end="233:46"><name pos:start="233:40" pos:end="233:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="235:5" pos:end="237:48">else<block type="pseudo" pos:start="237:9" pos:end="237:48"><block_content pos:start="237:9" pos:end="237:48">

        <expr_stmt pos:start="237:9" pos:end="237:48"><expr pos:start="237:9" pos:end="237:47"><name pos:start="237:9" pos:end="237:13"><name pos:start="237:9" pos:end="237:9">v</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:13">pq</name></name> <operator pos:start="237:15" pos:end="237:15">=</operator> <name pos:start="237:17" pos:end="237:47"><name pos:start="237:17" pos:end="237:35">ff_vc1_pquant_table</name><index pos:start="237:36" pos:end="237:38">[<expr pos:start="237:37" pos:end="237:37"><literal type="number" pos:start="237:37" pos:end="237:37">1</literal></expr>]</index><index pos:start="237:39" pos:end="237:47">[<expr pos:start="237:40" pos:end="237:46"><name pos:start="237:40" pos:end="237:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:22"><expr pos:start="241:5" pos:end="241:21"><name pos:start="241:5" pos:end="241:17"><name pos:start="241:5" pos:end="241:5">v</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:17">pquantizer</name></name> <operator pos:start="241:19" pos:end="241:19">=</operator> <literal type="number" pos:start="241:21" pos:end="241:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="245:36"><if pos:start="243:5" pos:end="245:36">if <condition pos:start="243:8" pos:end="243:50">(<expr pos:start="243:9" pos:end="243:49"><name pos:start="243:9" pos:end="243:25"><name pos:start="243:9" pos:end="243:9">v</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:25">quantizer_mode</name></name> <operator pos:start="243:27" pos:end="243:28">==</operator> <name pos:start="243:30" pos:end="243:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:36"><block_content pos:start="245:9" pos:end="245:36">

        <expr_stmt pos:start="245:9" pos:end="245:36"><expr pos:start="245:9" pos:end="245:35"><name pos:start="245:9" pos:end="245:21"><name pos:start="245:9" pos:end="245:9">v</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:21">pquantizer</name></name> <operator pos:start="245:23" pos:end="245:23">=</operator> <name pos:start="245:25" pos:end="245:31">pqindex</name> <operator pos:start="245:33" pos:end="245:33">&lt;</operator> <literal type="number" pos:start="245:35" pos:end="245:35">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="247:5" pos:end="249:26"><if pos:start="247:5" pos:end="249:26">if <condition pos:start="247:8" pos:end="247:47">(<expr pos:start="247:9" pos:end="247:46"><name pos:start="247:9" pos:end="247:25"><name pos:start="247:9" pos:end="247:9">v</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:25">quantizer_mode</name></name> <operator pos:start="247:27" pos:end="247:28">==</operator> <name pos:start="247:30" pos:end="247:46">QUANT_NON_UNIFORM</name></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:26"><block_content pos:start="249:9" pos:end="249:26">

        <expr_stmt pos:start="249:9" pos:end="249:26"><expr pos:start="249:9" pos:end="249:25"><name pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:9">v</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:21">pquantizer</name></name> <operator pos:start="249:23" pos:end="249:23">=</operator> <literal type="number" pos:start="249:25" pos:end="249:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:25"><expr pos:start="251:5" pos:end="251:24"><name pos:start="251:5" pos:end="251:14"><name pos:start="251:5" pos:end="251:5">v</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:14">pqindex</name></name> <operator pos:start="251:16" pos:end="251:16">=</operator> <name pos:start="251:18" pos:end="251:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="259:22"><if pos:start="253:5" pos:end="255:34">if <condition pos:start="253:8" pos:end="253:20">(<expr pos:start="253:9" pos:end="253:19"><name pos:start="253:9" pos:end="253:15">pqindex</name> <operator pos:start="253:17" pos:end="253:17">&lt;</operator> <literal type="number" pos:start="253:19" pos:end="253:19">9</literal></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:34"><block_content pos:start="255:9" pos:end="255:34">

        <expr_stmt pos:start="255:9" pos:end="255:34"><expr pos:start="255:9" pos:end="255:33"><name pos:start="255:9" pos:end="255:17"><name pos:start="255:9" pos:end="255:9">v</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:17">halfpq</name></name> <operator pos:start="255:19" pos:end="255:19">=</operator> <call pos:start="255:21" pos:end="255:33"><name pos:start="255:21" pos:end="255:29">get_bits1</name><argument_list pos:start="255:30" pos:end="255:33">(<argument pos:start="255:31" pos:end="255:32"><expr pos:start="255:31" pos:end="255:32"><name pos:start="255:31" pos:end="255:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="257:5" pos:end="259:22">else<block type="pseudo" pos:start="259:9" pos:end="259:22"><block_content pos:start="259:9" pos:end="259:22">

        <expr_stmt pos:start="259:9" pos:end="259:22"><expr pos:start="259:9" pos:end="259:21"><name pos:start="259:9" pos:end="259:17"><name pos:start="259:9" pos:end="259:9">v</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:17">halfpq</name></name> <operator pos:start="259:19" pos:end="259:19">=</operator> <literal type="number" pos:start="259:21" pos:end="259:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="261:5" pos:end="263:38"><if pos:start="261:5" pos:end="263:38">if <condition pos:start="261:8" pos:end="261:50">(<expr pos:start="261:9" pos:end="261:49"><name pos:start="261:9" pos:end="261:25"><name pos:start="261:9" pos:end="261:9">v</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:25">quantizer_mode</name></name> <operator pos:start="261:27" pos:end="261:28">==</operator> <name pos:start="261:30" pos:end="261:49">QUANT_FRAME_EXPLICIT</name></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="263:38"><block_content pos:start="263:9" pos:end="263:38">

        <expr_stmt pos:start="263:9" pos:end="263:38"><expr pos:start="263:9" pos:end="263:37"><name pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:9">v</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:21">pquantizer</name></name> <operator pos:start="263:23" pos:end="263:23">=</operator> <call pos:start="263:25" pos:end="263:37"><name pos:start="263:25" pos:end="263:33">get_bits1</name><argument_list pos:start="263:34" pos:end="263:37">(<argument pos:start="263:35" pos:end="263:36"><expr pos:start="263:35" pos:end="263:36"><name pos:start="263:35" pos:end="263:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="265:5" pos:end="267:38"><if pos:start="265:5" pos:end="267:38">if <condition pos:start="265:8" pos:end="265:24">(<expr pos:start="265:9" pos:end="265:23"><name pos:start="265:9" pos:end="265:23"><name pos:start="265:9" pos:end="265:9">v</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:23">postprocflag</name></name></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:38"><block_content pos:start="267:9" pos:end="267:38">

        <expr_stmt pos:start="267:9" pos:end="267:38"><expr pos:start="267:9" pos:end="267:37"><name pos:start="267:9" pos:end="267:19"><name pos:start="267:9" pos:end="267:9">v</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:19">postproc</name></name> <operator pos:start="267:21" pos:end="267:21">=</operator> <call pos:start="267:23" pos:end="267:37"><name pos:start="267:23" pos:end="267:30">get_bits</name><argument_list pos:start="267:31" pos:end="267:37">(<argument pos:start="267:32" pos:end="267:33"><expr pos:start="267:32" pos:end="267:33"><name pos:start="267:32" pos:end="267:33">gb</name></expr></argument>, <argument pos:start="267:36" pos:end="267:36"><expr pos:start="267:36" pos:end="267:36"><literal type="number" pos:start="267:36" pos:end="267:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="271:5" pos:end="273:22"><if pos:start="271:5" pos:end="273:22">if <condition pos:start="271:8" pos:end="271:83">(<expr pos:start="271:9" pos:end="271:82"><name pos:start="271:9" pos:end="271:22"><name pos:start="271:9" pos:end="271:9">v</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:12">s</name><operator pos:start="271:13" pos:end="271:13">.</operator><name pos:start="271:14" pos:end="271:22">pict_type</name></name> <operator pos:start="271:24" pos:end="271:25">==</operator> <name pos:start="271:27" pos:end="271:43">AV_PICTURE_TYPE_I</name> <operator pos:start="271:45" pos:end="271:46">||</operator> <name pos:start="271:48" pos:end="271:61"><name pos:start="271:48" pos:end="271:48">v</name><operator pos:start="271:49" pos:end="271:50">-&gt;</operator><name pos:start="271:51" pos:end="271:51">s</name><operator pos:start="271:52" pos:end="271:52">.</operator><name pos:start="271:53" pos:end="271:61">pict_type</name></name> <operator pos:start="271:63" pos:end="271:64">==</operator> <name pos:start="271:66" pos:end="271:82">AV_PICTURE_TYPE_P</name></expr>)</condition><block type="pseudo" pos:start="273:9" pos:end="273:22"><block_content pos:start="273:9" pos:end="273:22">

        <expr_stmt pos:start="273:9" pos:end="273:22"><expr pos:start="273:9" pos:end="273:21"><name pos:start="273:9" pos:end="273:17"><name pos:start="273:9" pos:end="273:9">v</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:17">use_ic</name></name> <operator pos:start="273:19" pos:end="273:19">=</operator> <literal type="number" pos:start="273:21" pos:end="273:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="279:17"><if pos:start="277:5" pos:end="279:17">if <condition pos:start="277:8" pos:end="277:22">(<expr pos:start="277:9" pos:end="277:21"><name pos:start="277:9" pos:end="277:21"><name pos:start="277:9" pos:end="277:9">v</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:21">parse_only</name></name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:17"><block_content pos:start="279:9" pos:end="279:17">

        <return pos:start="279:9" pos:end="279:17">return <expr pos:start="279:16" pos:end="279:16"><literal type="number" pos:start="279:16" pos:end="279:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="283:5" pos:end="817:5">switch <condition pos:start="283:12" pos:end="283:27">(<expr pos:start="283:13" pos:end="283:26"><name pos:start="283:13" pos:end="283:26"><name pos:start="283:13" pos:end="283:13">v</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:16">s</name><operator pos:start="283:17" pos:end="283:17">.</operator><name pos:start="283:18" pos:end="283:26">pict_type</name></name></expr>)</condition> <block pos:start="283:29" pos:end="817:5">{<block_content pos:start="285:5" pos:end="815:14">

    <case pos:start="285:5" pos:end="285:27">case <expr pos:start="285:10" pos:end="285:26"><name pos:start="285:10" pos:end="285:26">AV_PICTURE_TYPE_I</name></expr>:</case>

    <case pos:start="287:5" pos:end="287:28">case <expr pos:start="287:10" pos:end="287:27"><name pos:start="287:10" pos:end="287:27">AV_PICTURE_TYPE_BI</name></expr>:</case>

        <if_stmt pos:start="289:9" pos:end="301:9"><if pos:start="289:9" pos:end="301:9">if <condition pos:start="289:12" pos:end="289:24">(<expr pos:start="289:13" pos:end="289:23"><name pos:start="289:13" pos:end="289:18"><name pos:start="289:13" pos:end="289:13">v</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:18">fcm</name></name> <operator pos:start="289:20" pos:end="289:21">==</operator> <literal type="number" pos:start="289:23" pos:end="289:23">1</literal></expr>)</condition> <block pos:start="289:26" pos:end="301:9">{<block_content pos:start="291:13" pos:end="299:67"> <comment type="line" pos:start="289:28" pos:end="289:52">//interlace frame picture</comment>

            <expr_stmt pos:start="291:13" pos:end="291:80"><expr pos:start="291:13" pos:end="291:79"><name pos:start="291:13" pos:end="291:18">status</name> <operator pos:start="291:20" pos:end="291:20">=</operator> <call pos:start="291:22" pos:end="291:79"><name pos:start="291:22" pos:end="291:38">bitplane_decoding</name><argument_list pos:start="291:39" pos:end="291:79">(<argument pos:start="291:40" pos:end="291:55"><expr pos:start="291:40" pos:end="291:55"><name pos:start="291:40" pos:end="291:55"><name pos:start="291:40" pos:end="291:40">v</name><operator pos:start="291:41" pos:end="291:42">-&gt;</operator><name pos:start="291:43" pos:end="291:55">fieldtx_plane</name></name></expr></argument>, <argument pos:start="291:58" pos:end="291:75"><expr pos:start="291:58" pos:end="291:75"><operator pos:start="291:58" pos:end="291:58">&amp;</operator><name pos:start="291:59" pos:end="291:75"><name pos:start="291:59" pos:end="291:59">v</name><operator pos:start="291:60" pos:end="291:61">-&gt;</operator><name pos:start="291:62" pos:end="291:75">fieldtx_is_raw</name></name></expr></argument>, <argument pos:start="291:78" pos:end="291:78"><expr pos:start="291:78" pos:end="291:78"><name pos:start="291:78" pos:end="291:78">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="295:26"><if pos:start="293:13" pos:end="295:26">if <condition pos:start="293:16" pos:end="293:27">(<expr pos:start="293:17" pos:end="293:26"><name pos:start="293:17" pos:end="293:22">status</name> <operator pos:start="293:24" pos:end="293:24">&lt;</operator> <literal type="number" pos:start="293:26" pos:end="293:26">0</literal></expr>)</condition><block type="pseudo" pos:start="295:17" pos:end="295:26"><block_content pos:start="295:17" pos:end="295:26">

                <return pos:start="295:17" pos:end="295:26">return <expr pos:start="295:24" pos:end="295:25"><operator pos:start="295:24" pos:end="295:24">-</operator><literal type="number" pos:start="295:25" pos:end="295:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="297:13" pos:end="299:67"><expr pos:start="297:13" pos:end="299:66"><call pos:start="297:13" pos:end="299:66"><name pos:start="297:13" pos:end="297:18">av_log</name><argument_list pos:start="297:19" pos:end="299:66">(<argument pos:start="297:20" pos:end="297:29"><expr pos:start="297:20" pos:end="297:29"><name pos:start="297:20" pos:end="297:29"><name pos:start="297:20" pos:end="297:20">v</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:23">s</name><operator pos:start="297:24" pos:end="297:24">.</operator><name pos:start="297:25" pos:end="297:29">avctx</name></name></expr></argument>, <argument pos:start="297:32" pos:end="297:43"><expr pos:start="297:32" pos:end="297:43"><name pos:start="297:32" pos:end="297:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="297:46" pos:end="299:44"><expr pos:start="297:46" pos:end="299:44"><literal type="string" pos:start="297:46" pos:end="297:71">"FIELDTX plane encoding: "</literal>

                   <literal type="string" pos:start="299:20" pos:end="299:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="299:47" pos:end="299:55"><expr pos:start="299:47" pos:end="299:55"><name pos:start="299:47" pos:end="299:52">status</name><operator pos:start="299:53" pos:end="299:54">&gt;&gt;</operator><literal type="number" pos:start="299:55" pos:end="299:55">1</literal></expr></argument>, <argument pos:start="299:58" pos:end="299:65"><expr pos:start="299:58" pos:end="299:65"><name pos:start="299:58" pos:end="299:63">status</name><operator pos:start="299:64" pos:end="299:64">&amp;</operator><literal type="number" pos:start="299:65" pos:end="299:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:74"><expr pos:start="303:9" pos:end="303:73"><name pos:start="303:9" pos:end="303:14">status</name> <operator pos:start="303:16" pos:end="303:16">=</operator> <call pos:start="303:18" pos:end="303:73"><name pos:start="303:18" pos:end="303:34">bitplane_decoding</name><argument_list pos:start="303:35" pos:end="303:73">(<argument pos:start="303:36" pos:end="303:50"><expr pos:start="303:36" pos:end="303:50"><name pos:start="303:36" pos:end="303:50"><name pos:start="303:36" pos:end="303:36">v</name><operator pos:start="303:37" pos:end="303:38">-&gt;</operator><name pos:start="303:39" pos:end="303:50">acpred_plane</name></name></expr></argument>, <argument pos:start="303:53" pos:end="303:69"><expr pos:start="303:53" pos:end="303:69"><operator pos:start="303:53" pos:end="303:53">&amp;</operator><name pos:start="303:54" pos:end="303:69"><name pos:start="303:54" pos:end="303:54">v</name><operator pos:start="303:55" pos:end="303:56">-&gt;</operator><name pos:start="303:57" pos:end="303:69">acpred_is_raw</name></name></expr></argument>, <argument pos:start="303:72" pos:end="303:72"><expr pos:start="303:72" pos:end="303:72"><name pos:start="303:72" pos:end="303:72">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="307:22"><if pos:start="305:9" pos:end="307:22">if <condition pos:start="305:12" pos:end="305:23">(<expr pos:start="305:13" pos:end="305:22"><name pos:start="305:13" pos:end="305:18">status</name> <operator pos:start="305:20" pos:end="305:20">&lt;</operator> <literal type="number" pos:start="305:22" pos:end="305:22">0</literal></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:22"><block_content pos:start="307:13" pos:end="307:22">

            <return pos:start="307:13" pos:end="307:22">return <expr pos:start="307:20" pos:end="307:21"><operator pos:start="307:20" pos:end="307:20">-</operator><literal type="number" pos:start="307:21" pos:end="307:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="309:9" pos:end="311:63"><expr pos:start="309:9" pos:end="311:62"><call pos:start="309:9" pos:end="311:62"><name pos:start="309:9" pos:end="309:14">av_log</name><argument_list pos:start="309:15" pos:end="311:62">(<argument pos:start="309:16" pos:end="309:25"><expr pos:start="309:16" pos:end="309:25"><name pos:start="309:16" pos:end="309:25"><name pos:start="309:16" pos:end="309:16">v</name><operator pos:start="309:17" pos:end="309:18">-&gt;</operator><name pos:start="309:19" pos:end="309:19">s</name><operator pos:start="309:20" pos:end="309:20">.</operator><name pos:start="309:21" pos:end="309:25">avctx</name></name></expr></argument>, <argument pos:start="309:28" pos:end="309:39"><expr pos:start="309:28" pos:end="309:39"><name pos:start="309:28" pos:end="309:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="309:42" pos:end="311:40"><expr pos:start="309:42" pos:end="311:40"><literal type="string" pos:start="309:42" pos:end="309:66">"ACPRED plane encoding: "</literal>

               <literal type="string" pos:start="311:16" pos:end="311:40">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="311:43" pos:end="311:51"><expr pos:start="311:43" pos:end="311:51"><name pos:start="311:43" pos:end="311:48">status</name><operator pos:start="311:49" pos:end="311:50">&gt;&gt;</operator><literal type="number" pos:start="311:51" pos:end="311:51">1</literal></expr></argument>, <argument pos:start="311:54" pos:end="311:61"><expr pos:start="311:54" pos:end="311:61"><name pos:start="311:54" pos:end="311:59">status</name><operator pos:start="311:60" pos:end="311:60">&amp;</operator><literal type="number" pos:start="311:61" pos:end="311:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:36"><expr pos:start="313:9" pos:end="313:35"><name pos:start="313:9" pos:end="313:19"><name pos:start="313:9" pos:end="313:9">v</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:19">condover</name></name> <operator pos:start="313:21" pos:end="313:21">=</operator> <name pos:start="313:23" pos:end="313:35">CONDOVER_NONE</name></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="333:9"><if pos:start="315:9" pos:end="333:9">if <condition pos:start="315:12" pos:end="315:37">(<expr pos:start="315:13" pos:end="315:36"><name pos:start="315:13" pos:end="315:22"><name pos:start="315:13" pos:end="315:13">v</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:22">overlap</name></name> <operator pos:start="315:24" pos:end="315:25">&amp;&amp;</operator> <name pos:start="315:27" pos:end="315:31"><name pos:start="315:27" pos:end="315:27">v</name><operator pos:start="315:28" pos:end="315:29">-&gt;</operator><name pos:start="315:30" pos:end="315:31">pq</name></name> <operator pos:start="315:33" pos:end="315:34">&lt;=</operator> <literal type="number" pos:start="315:36" pos:end="315:36">8</literal></expr>)</condition> <block pos:start="315:39" pos:end="333:9">{<block_content pos:start="317:13" pos:end="331:13">

            <expr_stmt pos:start="317:13" pos:end="317:40"><expr pos:start="317:13" pos:end="317:39"><name pos:start="317:13" pos:end="317:23"><name pos:start="317:13" pos:end="317:13">v</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:23">condover</name></name> <operator pos:start="317:25" pos:end="317:25">=</operator> <call pos:start="317:27" pos:end="317:39"><name pos:start="317:27" pos:end="317:35">decode012</name><argument_list pos:start="317:36" pos:end="317:39">(<argument pos:start="317:37" pos:end="317:38"><expr pos:start="317:37" pos:end="317:38"><name pos:start="317:37" pos:end="317:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="319:13" pos:end="331:13"><if pos:start="319:13" pos:end="331:13">if <condition pos:start="319:16" pos:end="319:47">(<expr pos:start="319:17" pos:end="319:46"><name pos:start="319:17" pos:end="319:27"><name pos:start="319:17" pos:end="319:17">v</name><operator pos:start="319:18" pos:end="319:19">-&gt;</operator><name pos:start="319:20" pos:end="319:27">condover</name></name> <operator pos:start="319:29" pos:end="319:30">==</operator> <name pos:start="319:32" pos:end="319:46">CONDOVER_SELECT</name></expr>)</condition> <block pos:start="319:49" pos:end="331:13">{<block_content pos:start="321:17" pos:end="329:71">

                <expr_stmt pos:start="321:17" pos:end="321:87"><expr pos:start="321:17" pos:end="321:86"><name pos:start="321:17" pos:end="321:22">status</name> <operator pos:start="321:24" pos:end="321:24">=</operator> <call pos:start="321:26" pos:end="321:86"><name pos:start="321:26" pos:end="321:42">bitplane_decoding</name><argument_list pos:start="321:43" pos:end="321:86">(<argument pos:start="321:44" pos:end="321:62"><expr pos:start="321:44" pos:end="321:62"><name pos:start="321:44" pos:end="321:62"><name pos:start="321:44" pos:end="321:44">v</name><operator pos:start="321:45" pos:end="321:46">-&gt;</operator><name pos:start="321:47" pos:end="321:62">over_flags_plane</name></name></expr></argument>, <argument pos:start="321:65" pos:end="321:82"><expr pos:start="321:65" pos:end="321:82"><operator pos:start="321:65" pos:end="321:65">&amp;</operator><name pos:start="321:66" pos:end="321:82"><name pos:start="321:66" pos:end="321:66">v</name><operator pos:start="321:67" pos:end="321:68">-&gt;</operator><name pos:start="321:69" pos:end="321:82">overflg_is_raw</name></name></expr></argument>, <argument pos:start="321:85" pos:end="321:85"><expr pos:start="321:85" pos:end="321:85"><name pos:start="321:85" pos:end="321:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="323:17" pos:end="325:30"><if pos:start="323:17" pos:end="325:30">if <condition pos:start="323:20" pos:end="323:31">(<expr pos:start="323:21" pos:end="323:30"><name pos:start="323:21" pos:end="323:26">status</name> <operator pos:start="323:28" pos:end="323:28">&lt;</operator> <literal type="number" pos:start="323:30" pos:end="323:30">0</literal></expr>)</condition><block type="pseudo" pos:start="325:21" pos:end="325:30"><block_content pos:start="325:21" pos:end="325:30">

                    <return pos:start="325:21" pos:end="325:30">return <expr pos:start="325:28" pos:end="325:29"><operator pos:start="325:28" pos:end="325:28">-</operator><literal type="number" pos:start="325:29" pos:end="325:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="327:17" pos:end="329:71"><expr pos:start="327:17" pos:end="329:70"><call pos:start="327:17" pos:end="329:70"><name pos:start="327:17" pos:end="327:22">av_log</name><argument_list pos:start="327:23" pos:end="329:70">(<argument pos:start="327:24" pos:end="327:33"><expr pos:start="327:24" pos:end="327:33"><name pos:start="327:24" pos:end="327:33"><name pos:start="327:24" pos:end="327:24">v</name><operator pos:start="327:25" pos:end="327:26">-&gt;</operator><name pos:start="327:27" pos:end="327:27">s</name><operator pos:start="327:28" pos:end="327:28">.</operator><name pos:start="327:29" pos:end="327:33">avctx</name></name></expr></argument>, <argument pos:start="327:36" pos:end="327:47"><expr pos:start="327:36" pos:end="327:47"><name pos:start="327:36" pos:end="327:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="327:50" pos:end="329:48"><expr pos:start="327:50" pos:end="329:48"><literal type="string" pos:start="327:50" pos:end="327:76">"CONDOVER plane encoding: "</literal>

                       <literal type="string" pos:start="329:24" pos:end="329:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="329:51" pos:end="329:59"><expr pos:start="329:51" pos:end="329:59"><name pos:start="329:51" pos:end="329:56">status</name><operator pos:start="329:57" pos:end="329:58">&gt;&gt;</operator><literal type="number" pos:start="329:59" pos:end="329:59">1</literal></expr></argument>, <argument pos:start="329:62" pos:end="329:69"><expr pos:start="329:62" pos:end="329:69"><name pos:start="329:62" pos:end="329:67">status</name><operator pos:start="329:68" pos:end="329:68">&amp;</operator><literal type="number" pos:start="329:69" pos:end="329:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="335:9" pos:end="335:14">break;</break>

    <case pos:start="337:5" pos:end="337:27">case <expr pos:start="337:10" pos:end="337:26"><name pos:start="337:10" pos:end="337:26">AV_PICTURE_TYPE_P</name></expr>:</case>

        <if_stmt pos:start="339:9" pos:end="355:9"><if pos:start="339:9" pos:end="355:9">if <condition pos:start="339:12" pos:end="339:26">(<expr pos:start="339:13" pos:end="339:25"><name pos:start="339:13" pos:end="339:25"><name pos:start="339:13" pos:end="339:13">v</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:25">field_mode</name></name></expr>)</condition> <block pos:start="339:28" pos:end="355:9">{<block_content pos:start="341:13" pos:end="353:13">

            <expr_stmt pos:start="341:13" pos:end="341:81"><expr pos:start="341:13" pos:end="341:80"><call pos:start="341:13" pos:end="341:80"><name pos:start="341:13" pos:end="341:18">av_log</name><argument_list pos:start="341:19" pos:end="341:80">(<argument pos:start="341:20" pos:end="341:29"><expr pos:start="341:20" pos:end="341:29"><name pos:start="341:20" pos:end="341:29"><name pos:start="341:20" pos:end="341:20">v</name><operator pos:start="341:21" pos:end="341:22">-&gt;</operator><name pos:start="341:23" pos:end="341:23">s</name><operator pos:start="341:24" pos:end="341:24">.</operator><name pos:start="341:25" pos:end="341:29">avctx</name></name></expr></argument>, <argument pos:start="341:32" pos:end="341:43"><expr pos:start="341:32" pos:end="341:43"><name pos:start="341:32" pos:end="341:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="341:46" pos:end="341:79"><expr pos:start="341:46" pos:end="341:79"><literal type="string" pos:start="341:46" pos:end="341:79">"P Fields do not work currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="343:13" pos:end="343:22">return <expr pos:start="343:20" pos:end="343:21"><operator pos:start="343:20" pos:end="343:20">-</operator><literal type="number" pos:start="343:21" pos:end="343:21">1</literal></expr>;</return>

            <expr_stmt pos:start="345:13" pos:end="345:38"><expr pos:start="345:13" pos:end="345:37"><name pos:start="345:13" pos:end="345:21"><name pos:start="345:13" pos:end="345:13">v</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:21">numref</name></name> <operator pos:start="345:23" pos:end="345:23">=</operator> <call pos:start="345:25" pos:end="345:37"><name pos:start="345:25" pos:end="345:33">get_bits1</name><argument_list pos:start="345:34" pos:end="345:37">(<argument pos:start="345:35" pos:end="345:36"><expr pos:start="345:35" pos:end="345:36"><name pos:start="345:35" pos:end="345:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="347:13" pos:end="353:13"><if pos:start="347:13" pos:end="353:13">if <condition pos:start="347:16" pos:end="347:27">(<expr pos:start="347:17" pos:end="347:26"><operator pos:start="347:17" pos:end="347:17">!</operator><name pos:start="347:18" pos:end="347:26"><name pos:start="347:18" pos:end="347:18">v</name><operator pos:start="347:19" pos:end="347:20">-&gt;</operator><name pos:start="347:21" pos:end="347:26">numref</name></name></expr>)</condition> <block pos:start="347:29" pos:end="353:13">{<block_content pos:start="349:17" pos:end="351:72">

                <expr_stmt pos:start="349:17" pos:end="349:53"><expr pos:start="349:17" pos:end="349:52"><name pos:start="349:17" pos:end="349:27"><name pos:start="349:17" pos:end="349:17">v</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:27">reffield</name></name>          <operator pos:start="349:38" pos:end="349:38">=</operator> <call pos:start="349:40" pos:end="349:52"><name pos:start="349:40" pos:end="349:48">get_bits1</name><argument_list pos:start="349:49" pos:end="349:52">(<argument pos:start="349:50" pos:end="349:51"><expr pos:start="349:50" pos:end="349:51"><name pos:start="349:50" pos:end="349:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:72"><expr pos:start="351:17" pos:end="351:71"><name pos:start="351:17" pos:end="351:36"><name pos:start="351:17" pos:end="351:17">v</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:33">ref_field_type</name><index pos:start="351:34" pos:end="351:36">[<expr pos:start="351:35" pos:end="351:35"><literal type="number" pos:start="351:35" pos:end="351:35">0</literal></expr>]</index></name> <operator pos:start="351:38" pos:end="351:38">=</operator> <name pos:start="351:40" pos:end="351:50"><name pos:start="351:40" pos:end="351:40">v</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:50">reffield</name></name> <operator pos:start="351:52" pos:end="351:52">^</operator> <operator pos:start="351:54" pos:end="351:54">!</operator><name pos:start="351:55" pos:end="351:71"><name pos:start="351:55" pos:end="351:55">v</name><operator pos:start="351:56" pos:end="351:57">-&gt;</operator><name pos:start="351:58" pos:end="351:71">cur_field_type</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="357:9" pos:end="363:27"><if pos:start="357:9" pos:end="359:45">if <condition pos:start="357:12" pos:end="357:27">(<expr pos:start="357:13" pos:end="357:26"><name pos:start="357:13" pos:end="357:26"><name pos:start="357:13" pos:end="357:13">v</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:26">extended_mv</name></name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:45"><block_content pos:start="359:13" pos:end="359:45">

            <expr_stmt pos:start="359:13" pos:end="359:45"><expr pos:start="359:13" pos:end="359:44"><name pos:start="359:13" pos:end="359:22"><name pos:start="359:13" pos:end="359:13">v</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:22">mvrange</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <call pos:start="359:26" pos:end="359:44"><name pos:start="359:26" pos:end="359:34">get_unary</name><argument_list pos:start="359:35" pos:end="359:44">(<argument pos:start="359:36" pos:end="359:37"><expr pos:start="359:36" pos:end="359:37"><name pos:start="359:36" pos:end="359:37">gb</name></expr></argument>, <argument pos:start="359:40" pos:end="359:40"><expr pos:start="359:40" pos:end="359:40"><literal type="number" pos:start="359:40" pos:end="359:40">0</literal></expr></argument>, <argument pos:start="359:43" pos:end="359:43"><expr pos:start="359:43" pos:end="359:43"><literal type="number" pos:start="359:43" pos:end="359:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="361:9" pos:end="363:27">else<block type="pseudo" pos:start="363:13" pos:end="363:27"><block_content pos:start="363:13" pos:end="363:27">

            <expr_stmt pos:start="363:13" pos:end="363:27"><expr pos:start="363:13" pos:end="363:26"><name pos:start="363:13" pos:end="363:22"><name pos:start="363:13" pos:end="363:13">v</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:22">mvrange</name></name> <operator pos:start="363:24" pos:end="363:24">=</operator> <literal type="number" pos:start="363:26" pos:end="363:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="365:9" pos:end="431:9"><if pos:start="365:9" pos:end="431:9">if <condition pos:start="365:12" pos:end="365:25">(<expr pos:start="365:13" pos:end="365:24"><name pos:start="365:13" pos:end="365:24"><name pos:start="365:13" pos:end="365:13">v</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:24">interlace</name></name></expr>)</condition> <block pos:start="365:27" pos:end="431:9">{<block_content pos:start="367:13" pos:end="429:13">

            <if_stmt pos:start="367:13" pos:end="373:32"><if pos:start="367:13" pos:end="369:50">if <condition pos:start="367:16" pos:end="367:32">(<expr pos:start="367:17" pos:end="367:31"><name pos:start="367:17" pos:end="367:31"><name pos:start="367:17" pos:end="367:17">v</name><operator pos:start="367:18" pos:end="367:19">-&gt;</operator><name pos:start="367:20" pos:end="367:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="369:17" pos:end="369:50"><block_content pos:start="369:17" pos:end="369:50">

                <expr_stmt pos:start="369:17" pos:end="369:50"><expr pos:start="369:17" pos:end="369:49"><name pos:start="369:17" pos:end="369:27"><name pos:start="369:17" pos:end="369:17">v</name><operator pos:start="369:18" pos:end="369:19">-&gt;</operator><name pos:start="369:20" pos:end="369:27">dmvrange</name></name> <operator pos:start="369:29" pos:end="369:29">=</operator> <call pos:start="369:31" pos:end="369:49"><name pos:start="369:31" pos:end="369:39">get_unary</name><argument_list pos:start="369:40" pos:end="369:49">(<argument pos:start="369:41" pos:end="369:42"><expr pos:start="369:41" pos:end="369:42"><name pos:start="369:41" pos:end="369:42">gb</name></expr></argument>, <argument pos:start="369:45" pos:end="369:45"><expr pos:start="369:45" pos:end="369:45"><literal type="number" pos:start="369:45" pos:end="369:45">0</literal></expr></argument>, <argument pos:start="369:48" pos:end="369:48"><expr pos:start="369:48" pos:end="369:48"><literal type="number" pos:start="369:48" pos:end="369:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="371:13" pos:end="373:32">else<block type="pseudo" pos:start="373:17" pos:end="373:32"><block_content pos:start="373:17" pos:end="373:32">

                <expr_stmt pos:start="373:17" pos:end="373:32"><expr pos:start="373:17" pos:end="373:31"><name pos:start="373:17" pos:end="373:27"><name pos:start="373:17" pos:end="373:17">v</name><operator pos:start="373:18" pos:end="373:19">-&gt;</operator><name pos:start="373:20" pos:end="373:27">dmvrange</name></name> <operator pos:start="373:29" pos:end="373:29">=</operator> <literal type="number" pos:start="373:31" pos:end="373:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="375:13" pos:end="429:13"><if pos:start="375:13" pos:end="429:13">if <condition pos:start="375:16" pos:end="375:28">(<expr pos:start="375:17" pos:end="375:27"><name pos:start="375:17" pos:end="375:22"><name pos:start="375:17" pos:end="375:17">v</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:22">fcm</name></name> <operator pos:start="375:24" pos:end="375:25">==</operator> <literal type="number" pos:start="375:27" pos:end="375:27">1</literal></expr>)</condition> <block pos:start="375:30" pos:end="429:13">{<block_content pos:start="377:17" pos:end="427:17"> <comment type="line" pos:start="375:32" pos:end="375:58">// interlaced frame picture</comment>

                <expr_stmt pos:start="377:17" pos:end="377:48"><expr pos:start="377:17" pos:end="377:47"><name pos:start="377:17" pos:end="377:31"><name pos:start="377:17" pos:end="377:17">v</name><operator pos:start="377:18" pos:end="377:19">-&gt;</operator><name pos:start="377:20" pos:end="377:31">fourmvswitch</name></name> <operator pos:start="377:33" pos:end="377:33">=</operator> <call pos:start="377:35" pos:end="377:47"><name pos:start="377:35" pos:end="377:43">get_bits1</name><argument_list pos:start="377:44" pos:end="377:47">(<argument pos:start="377:45" pos:end="377:46"><expr pos:start="377:45" pos:end="377:46"><name pos:start="377:45" pos:end="377:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:48"><expr pos:start="379:17" pos:end="379:47"><name pos:start="379:17" pos:end="379:26"><name pos:start="379:17" pos:end="379:17">v</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:26">intcomp</name></name>      <operator pos:start="379:33" pos:end="379:33">=</operator> <call pos:start="379:35" pos:end="379:47"><name pos:start="379:35" pos:end="379:43">get_bits1</name><argument_list pos:start="379:44" pos:end="379:47">(<argument pos:start="379:45" pos:end="379:46"><expr pos:start="379:45" pos:end="379:46"><name pos:start="379:45" pos:end="379:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="381:17" pos:end="389:17"><if pos:start="381:17" pos:end="389:17">if <condition pos:start="381:20" pos:end="381:31">(<expr pos:start="381:21" pos:end="381:30"><name pos:start="381:21" pos:end="381:30"><name pos:start="381:21" pos:end="381:21">v</name><operator pos:start="381:22" pos:end="381:23">-&gt;</operator><name pos:start="381:24" pos:end="381:30">intcomp</name></name></expr>)</condition> <block pos:start="381:33" pos:end="389:17">{<block_content pos:start="383:21" pos:end="387:74">

                    <expr_stmt pos:start="383:21" pos:end="383:50"><expr pos:start="383:21" pos:end="383:49"><name pos:start="383:21" pos:end="383:31"><name pos:start="383:21" pos:end="383:21">v</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:31">lumscale</name></name> <operator pos:start="383:33" pos:end="383:33">=</operator> <call pos:start="383:35" pos:end="383:49"><name pos:start="383:35" pos:end="383:42">get_bits</name><argument_list pos:start="383:43" pos:end="383:49">(<argument pos:start="383:44" pos:end="383:45"><expr pos:start="383:44" pos:end="383:45"><name pos:start="383:44" pos:end="383:45">gb</name></expr></argument>, <argument pos:start="383:48" pos:end="383:48"><expr pos:start="383:48" pos:end="383:48"><literal type="number" pos:start="383:48" pos:end="383:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:50"><expr pos:start="385:21" pos:end="385:49"><name pos:start="385:21" pos:end="385:31"><name pos:start="385:21" pos:end="385:21">v</name><operator pos:start="385:22" pos:end="385:23">-&gt;</operator><name pos:start="385:24" pos:end="385:31">lumshift</name></name> <operator pos:start="385:33" pos:end="385:33">=</operator> <call pos:start="385:35" pos:end="385:49"><name pos:start="385:35" pos:end="385:42">get_bits</name><argument_list pos:start="385:43" pos:end="385:49">(<argument pos:start="385:44" pos:end="385:45"><expr pos:start="385:44" pos:end="385:45"><name pos:start="385:44" pos:end="385:45">gb</name></expr></argument>, <argument pos:start="385:48" pos:end="385:48"><expr pos:start="385:48" pos:end="385:48"><literal type="number" pos:start="385:48" pos:end="385:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:74"><expr pos:start="387:21" pos:end="387:73"><call pos:start="387:21" pos:end="387:73"><name pos:start="387:21" pos:end="387:28">INIT_LUT</name><argument_list pos:start="387:29" pos:end="387:73">(<argument pos:start="387:30" pos:end="387:40"><expr pos:start="387:30" pos:end="387:40"><name pos:start="387:30" pos:end="387:40"><name pos:start="387:30" pos:end="387:30">v</name><operator pos:start="387:31" pos:end="387:32">-&gt;</operator><name pos:start="387:33" pos:end="387:40">lumscale</name></name></expr></argument>, <argument pos:start="387:43" pos:end="387:53"><expr pos:start="387:43" pos:end="387:53"><name pos:start="387:43" pos:end="387:53"><name pos:start="387:43" pos:end="387:43">v</name><operator pos:start="387:44" pos:end="387:45">-&gt;</operator><name pos:start="387:46" pos:end="387:53">lumshift</name></name></expr></argument>, <argument pos:start="387:56" pos:end="387:62"><expr pos:start="387:56" pos:end="387:62"><name pos:start="387:56" pos:end="387:62"><name pos:start="387:56" pos:end="387:56">v</name><operator pos:start="387:57" pos:end="387:58">-&gt;</operator><name pos:start="387:59" pos:end="387:62">luty</name></name></expr></argument>, <argument pos:start="387:65" pos:end="387:72"><expr pos:start="387:65" pos:end="387:72"><name pos:start="387:65" pos:end="387:72"><name pos:start="387:65" pos:end="387:65">v</name><operator pos:start="387:66" pos:end="387:67">-&gt;</operator><name pos:start="387:68" pos:end="387:72">lutuv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:82"><expr pos:start="391:17" pos:end="391:81"><name pos:start="391:17" pos:end="391:22">status</name> <operator pos:start="391:24" pos:end="391:24">=</operator> <call pos:start="391:26" pos:end="391:81"><name pos:start="391:26" pos:end="391:42">bitplane_decoding</name><argument_list pos:start="391:43" pos:end="391:81">(<argument pos:start="391:44" pos:end="391:60"><expr pos:start="391:44" pos:end="391:60"><name pos:start="391:44" pos:end="391:60"><name pos:start="391:44" pos:end="391:44">v</name><operator pos:start="391:45" pos:end="391:46">-&gt;</operator><name pos:start="391:47" pos:end="391:47">s</name><operator pos:start="391:48" pos:end="391:48">.</operator><name pos:start="391:49" pos:end="391:60">mbskip_table</name></name></expr></argument>, <argument pos:start="391:63" pos:end="391:77"><expr pos:start="391:63" pos:end="391:77"><operator pos:start="391:63" pos:end="391:63">&amp;</operator><name pos:start="391:64" pos:end="391:77"><name pos:start="391:64" pos:end="391:64">v</name><operator pos:start="391:65" pos:end="391:66">-&gt;</operator><name pos:start="391:67" pos:end="391:77">skip_is_raw</name></name></expr></argument>, <argument pos:start="391:80" pos:end="391:80"><expr pos:start="391:80" pos:end="391:80"><name pos:start="391:80" pos:end="391:80">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="393:17" pos:end="395:71"><expr pos:start="393:17" pos:end="395:70"><call pos:start="393:17" pos:end="395:70"><name pos:start="393:17" pos:end="393:22">av_log</name><argument_list pos:start="393:23" pos:end="395:70">(<argument pos:start="393:24" pos:end="393:33"><expr pos:start="393:24" pos:end="393:33"><name pos:start="393:24" pos:end="393:33"><name pos:start="393:24" pos:end="393:24">v</name><operator pos:start="393:25" pos:end="393:26">-&gt;</operator><name pos:start="393:27" pos:end="393:27">s</name><operator pos:start="393:28" pos:end="393:28">.</operator><name pos:start="393:29" pos:end="393:33">avctx</name></name></expr></argument>, <argument pos:start="393:36" pos:end="393:47"><expr pos:start="393:36" pos:end="393:47"><name pos:start="393:36" pos:end="393:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="393:50" pos:end="395:48"><expr pos:start="393:50" pos:end="395:48"><literal type="string" pos:start="393:50" pos:end="393:74">"SKIPMB plane encoding: "</literal>

                       <literal type="string" pos:start="395:24" pos:end="395:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="395:51" pos:end="395:59"><expr pos:start="395:51" pos:end="395:59"><name pos:start="395:51" pos:end="395:56">status</name><operator pos:start="395:57" pos:end="395:58">&gt;&gt;</operator><literal type="number" pos:start="395:59" pos:end="395:59">1</literal></expr></argument>, <argument pos:start="395:62" pos:end="395:69"><expr pos:start="395:62" pos:end="395:69"><name pos:start="395:62" pos:end="395:67">status</name><operator pos:start="395:68" pos:end="395:68">&amp;</operator><literal type="number" pos:start="395:69" pos:end="395:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:44"><expr pos:start="397:17" pos:end="397:43"><name pos:start="397:17" pos:end="397:25">mbmodetab</name> <operator pos:start="397:27" pos:end="397:27">=</operator> <call pos:start="397:29" pos:end="397:43"><name pos:start="397:29" pos:end="397:36">get_bits</name><argument_list pos:start="397:37" pos:end="397:43">(<argument pos:start="397:38" pos:end="397:39"><expr pos:start="397:38" pos:end="397:39"><name pos:start="397:38" pos:end="397:39">gb</name></expr></argument>, <argument pos:start="397:42" pos:end="397:42"><expr pos:start="397:42" pos:end="397:42"><literal type="number" pos:start="397:42" pos:end="397:42">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="399:17" pos:end="405:79"><if pos:start="399:17" pos:end="401:76">if <condition pos:start="399:20" pos:end="399:36">(<expr pos:start="399:21" pos:end="399:35"><name pos:start="399:21" pos:end="399:35"><name pos:start="399:21" pos:end="399:21">v</name><operator pos:start="399:22" pos:end="399:23">-&gt;</operator><name pos:start="399:24" pos:end="399:35">fourmvswitch</name></name></expr>)</condition><block type="pseudo" pos:start="401:21" pos:end="401:76"><block_content pos:start="401:21" pos:end="401:76">

                    <expr_stmt pos:start="401:21" pos:end="401:76"><expr pos:start="401:21" pos:end="401:75"><name pos:start="401:21" pos:end="401:33"><name pos:start="401:21" pos:end="401:21">v</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:33">mbmode_vlc</name></name> <operator pos:start="401:35" pos:end="401:35">=</operator> <operator pos:start="401:37" pos:end="401:37">&amp;</operator><name pos:start="401:38" pos:end="401:75"><name pos:start="401:38" pos:end="401:64">ff_vc1_intfr_4mv_mbmode_vlc</name><index pos:start="401:65" pos:end="401:75">[<expr pos:start="401:66" pos:end="401:74"><name pos:start="401:66" pos:end="401:74">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="403:17" pos:end="405:79">else<block type="pseudo" pos:start="405:21" pos:end="405:79"><block_content pos:start="405:21" pos:end="405:79">

                    <expr_stmt pos:start="405:21" pos:end="405:79"><expr pos:start="405:21" pos:end="405:78"><name pos:start="405:21" pos:end="405:33"><name pos:start="405:21" pos:end="405:21">v</name><operator pos:start="405:22" pos:end="405:23">-&gt;</operator><name pos:start="405:24" pos:end="405:33">mbmode_vlc</name></name> <operator pos:start="405:35" pos:end="405:35">=</operator> <operator pos:start="405:37" pos:end="405:37">&amp;</operator><name pos:start="405:38" pos:end="405:78"><name pos:start="405:38" pos:end="405:67">ff_vc1_intfr_non4mv_mbmode_vlc</name><index pos:start="405:68" pos:end="405:78">[<expr pos:start="405:69" pos:end="405:77"><name pos:start="405:69" pos:end="405:77">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:49"><expr pos:start="407:17" pos:end="407:48"><name pos:start="407:17" pos:end="407:22">imvtab</name>         <operator pos:start="407:32" pos:end="407:32">=</operator> <call pos:start="407:34" pos:end="407:48"><name pos:start="407:34" pos:end="407:41">get_bits</name><argument_list pos:start="407:42" pos:end="407:48">(<argument pos:start="407:43" pos:end="407:44"><expr pos:start="407:43" pos:end="407:44"><name pos:start="407:43" pos:end="407:44">gb</name></expr></argument>, <argument pos:start="407:47" pos:end="407:47"><expr pos:start="407:47" pos:end="407:47"><literal type="number" pos:start="407:47" pos:end="407:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="409:65"><expr pos:start="409:17" pos:end="409:64"><name pos:start="409:17" pos:end="409:26"><name pos:start="409:17" pos:end="409:17">v</name><operator pos:start="409:18" pos:end="409:19">-&gt;</operator><name pos:start="409:20" pos:end="409:26">imv_vlc</name></name>     <operator pos:start="409:32" pos:end="409:32">=</operator> <operator pos:start="409:34" pos:end="409:34">&amp;</operator><name pos:start="409:35" pos:end="409:64"><name pos:start="409:35" pos:end="409:56">ff_vc1_1ref_mvdata_vlc</name><index pos:start="409:57" pos:end="409:64">[<expr pos:start="409:58" pos:end="409:63"><name pos:start="409:58" pos:end="409:63">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

                <comment type="line" pos:start="411:17" pos:end="411:62">// interlaced p-picture cbpcy range is [1, 63]</comment>

                <expr_stmt pos:start="413:17" pos:end="413:49"><expr pos:start="413:17" pos:end="413:48"><name pos:start="413:17" pos:end="413:23">icbptab</name>        <operator pos:start="413:32" pos:end="413:32">=</operator> <call pos:start="413:34" pos:end="413:48"><name pos:start="413:34" pos:end="413:41">get_bits</name><argument_list pos:start="413:42" pos:end="413:48">(<argument pos:start="413:43" pos:end="413:44"><expr pos:start="413:43" pos:end="413:44"><name pos:start="413:43" pos:end="413:44">gb</name></expr></argument>, <argument pos:start="413:47" pos:end="413:47"><expr pos:start="413:47" pos:end="413:47"><literal type="number" pos:start="413:47" pos:end="413:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:61"><expr pos:start="415:17" pos:end="415:60"><name pos:start="415:17" pos:end="415:28"><name pos:start="415:17" pos:end="415:17">v</name><operator pos:start="415:18" pos:end="415:19">-&gt;</operator><name pos:start="415:20" pos:end="415:28">cbpcy_vlc</name></name>   <operator pos:start="415:32" pos:end="415:32">=</operator> <operator pos:start="415:34" pos:end="415:34">&amp;</operator><name pos:start="415:35" pos:end="415:60"><name pos:start="415:35" pos:end="415:51">ff_vc1_icbpcy_vlc</name><index pos:start="415:52" pos:end="415:60">[<expr pos:start="415:53" pos:end="415:59"><name pos:start="415:53" pos:end="415:59">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:49"><expr pos:start="417:17" pos:end="417:48"><name pos:start="417:17" pos:end="417:26">twomvbptab</name>     <operator pos:start="417:32" pos:end="417:32">=</operator> <call pos:start="417:34" pos:end="417:48"><name pos:start="417:34" pos:end="417:41">get_bits</name><argument_list pos:start="417:42" pos:end="417:48">(<argument pos:start="417:43" pos:end="417:44"><expr pos:start="417:43" pos:end="417:44"><name pos:start="417:43" pos:end="417:44">gb</name></expr></argument>, <argument pos:start="417:47" pos:end="417:47"><expr pos:start="417:47" pos:end="417:47"><literal type="number" pos:start="417:47" pos:end="417:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:75"><expr pos:start="419:17" pos:end="419:74"><name pos:start="419:17" pos:end="419:30"><name pos:start="419:17" pos:end="419:17">v</name><operator pos:start="419:18" pos:end="419:19">-&gt;</operator><name pos:start="419:20" pos:end="419:30">twomvbp_vlc</name></name> <operator pos:start="419:32" pos:end="419:32">=</operator> <operator pos:start="419:34" pos:end="419:34">&amp;</operator><name pos:start="419:35" pos:end="419:74"><name pos:start="419:35" pos:end="419:62">ff_vc1_2mv_block_pattern_vlc</name><index pos:start="419:63" pos:end="419:74">[<expr pos:start="419:64" pos:end="419:73"><name pos:start="419:64" pos:end="419:73">twomvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="421:17" pos:end="427:17"><if pos:start="421:17" pos:end="427:17">if <condition pos:start="421:20" pos:end="421:36">(<expr pos:start="421:21" pos:end="421:35"><name pos:start="421:21" pos:end="421:35"><name pos:start="421:21" pos:end="421:21">v</name><operator pos:start="421:22" pos:end="421:23">-&gt;</operator><name pos:start="421:24" pos:end="421:35">fourmvswitch</name></name></expr>)</condition> <block pos:start="421:38" pos:end="427:17">{<block_content pos:start="423:21" pos:end="425:81">

                    <expr_stmt pos:start="423:21" pos:end="423:54"><expr pos:start="423:21" pos:end="423:53"><name pos:start="423:21" pos:end="423:31">fourmvbptab</name>     <operator pos:start="423:37" pos:end="423:37">=</operator> <call pos:start="423:39" pos:end="423:53"><name pos:start="423:39" pos:end="423:46">get_bits</name><argument_list pos:start="423:47" pos:end="423:53">(<argument pos:start="423:48" pos:end="423:49"><expr pos:start="423:48" pos:end="423:49"><name pos:start="423:48" pos:end="423:49">gb</name></expr></argument>, <argument pos:start="423:52" pos:end="423:52"><expr pos:start="423:52" pos:end="423:52"><literal type="number" pos:start="423:52" pos:end="423:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="425:21" pos:end="425:81"><expr pos:start="425:21" pos:end="425:80"><name pos:start="425:21" pos:end="425:35"><name pos:start="425:21" pos:end="425:21">v</name><operator pos:start="425:22" pos:end="425:23">-&gt;</operator><name pos:start="425:24" pos:end="425:35">fourmvbp_vlc</name></name> <operator pos:start="425:37" pos:end="425:37">=</operator> <operator pos:start="425:39" pos:end="425:39">&amp;</operator><name pos:start="425:40" pos:end="425:80"><name pos:start="425:40" pos:end="425:67">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="425:68" pos:end="425:80">[<expr pos:start="425:69" pos:end="425:79"><name pos:start="425:69" pos:end="425:79">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:52"><expr pos:start="433:9" pos:end="433:51"><name pos:start="433:9" pos:end="433:14"><name pos:start="433:9" pos:end="433:9">v</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:14">k_x</name></name> <operator pos:start="433:16" pos:end="433:16">=</operator> <name pos:start="433:18" pos:end="433:27"><name pos:start="433:18" pos:end="433:18">v</name><operator pos:start="433:19" pos:end="433:20">-&gt;</operator><name pos:start="433:21" pos:end="433:27">mvrange</name></name> <operator pos:start="433:29" pos:end="433:29">+</operator> <literal type="number" pos:start="433:31" pos:end="433:33">9</literal> <operator pos:start="433:33" pos:end="433:33">+</operator> <operator pos:start="433:35" pos:end="433:35">(</operator><name pos:start="433:36" pos:end="433:45"><name pos:start="433:36" pos:end="433:36">v</name><operator pos:start="433:37" pos:end="433:38">-&gt;</operator><name pos:start="433:39" pos:end="433:45">mvrange</name></name> <operator pos:start="433:47" pos:end="433:48">&gt;&gt;</operator> <literal type="number" pos:start="433:50" pos:end="433:50">1</literal><operator pos:start="433:51" pos:end="433:51">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="433:54" pos:end="433:76">//k_x can be 9 10 12 13</comment>

        <expr_stmt pos:start="435:9" pos:end="435:32"><expr pos:start="435:9" pos:end="435:31"><name pos:start="435:9" pos:end="435:14"><name pos:start="435:9" pos:end="435:9">v</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:14">k_y</name></name> <operator pos:start="435:16" pos:end="435:16">=</operator> <name pos:start="435:18" pos:end="435:27"><name pos:start="435:18" pos:end="435:18">v</name><operator pos:start="435:19" pos:end="435:20">-&gt;</operator><name pos:start="435:21" pos:end="435:27">mvrange</name></name> <operator pos:start="435:29" pos:end="435:29">+</operator> <literal type="number" pos:start="435:31" pos:end="435:31">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="435:34" pos:end="435:55">//k_y can be 8 9 10 11</comment>

        <expr_stmt pos:start="437:9" pos:end="437:39"><expr pos:start="437:9" pos:end="437:38"><name pos:start="437:9" pos:end="437:18"><name pos:start="437:9" pos:end="437:9">v</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:18">range_x</name></name> <operator pos:start="437:20" pos:end="437:20">=</operator> <literal type="number" pos:start="437:22" pos:end="437:22">1</literal> <operator pos:start="437:24" pos:end="437:25">&lt;&lt;</operator> <operator pos:start="437:27" pos:end="437:27">(</operator><name pos:start="437:28" pos:end="437:33"><name pos:start="437:28" pos:end="437:28">v</name><operator pos:start="437:29" pos:end="437:30">-&gt;</operator><name pos:start="437:31" pos:end="437:33">k_x</name></name> <operator pos:start="437:35" pos:end="437:35">-</operator> <literal type="number" pos:start="437:37" pos:end="437:37">1</literal><operator pos:start="437:38" pos:end="437:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:39"><expr pos:start="439:9" pos:end="439:38"><name pos:start="439:9" pos:end="439:18"><name pos:start="439:9" pos:end="439:9">v</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:18">range_y</name></name> <operator pos:start="439:20" pos:end="439:20">=</operator> <literal type="number" pos:start="439:22" pos:end="439:22">1</literal> <operator pos:start="439:24" pos:end="439:25">&lt;&lt;</operator> <operator pos:start="439:27" pos:end="439:27">(</operator><name pos:start="439:28" pos:end="439:33"><name pos:start="439:28" pos:end="439:28">v</name><operator pos:start="439:29" pos:end="439:30">-&gt;</operator><name pos:start="439:31" pos:end="439:33">k_y</name></name> <operator pos:start="439:35" pos:end="439:35">-</operator> <literal type="number" pos:start="439:37" pos:end="439:37">1</literal><operator pos:start="439:38" pos:end="439:38">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="443:9" pos:end="453:28"><if pos:start="443:9" pos:end="445:28">if <condition pos:start="443:12" pos:end="443:22">(<expr pos:start="443:13" pos:end="443:21"><name pos:start="443:13" pos:end="443:17"><name pos:start="443:13" pos:end="443:13">v</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:17">pq</name></name> <operator pos:start="443:19" pos:end="443:19">&lt;</operator> <literal type="number" pos:start="443:21" pos:end="443:21">5</literal></expr>)</condition><block type="pseudo" pos:start="445:13" pos:end="445:28"><block_content pos:start="445:13" pos:end="445:28">

            <expr_stmt pos:start="445:13" pos:end="445:28"><expr pos:start="445:13" pos:end="445:27"><name pos:start="445:13" pos:end="445:23"><name pos:start="445:13" pos:end="445:13">v</name><operator pos:start="445:14" pos:end="445:15">-&gt;</operator><name pos:start="445:16" pos:end="445:23">tt_index</name></name> <operator pos:start="445:25" pos:end="445:25">=</operator> <literal type="number" pos:start="445:27" pos:end="445:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="447:9" pos:end="449:28">else if <condition pos:start="447:17" pos:end="447:28">(<expr pos:start="447:18" pos:end="447:27"><name pos:start="447:18" pos:end="447:22"><name pos:start="447:18" pos:end="447:18">v</name><operator pos:start="447:19" pos:end="447:20">-&gt;</operator><name pos:start="447:21" pos:end="447:22">pq</name></name> <operator pos:start="447:24" pos:end="447:24">&lt;</operator> <literal type="number" pos:start="447:26" pos:end="447:27">13</literal></expr>)</condition><block type="pseudo" pos:start="449:13" pos:end="449:28"><block_content pos:start="449:13" pos:end="449:28">

            <expr_stmt pos:start="449:13" pos:end="449:28"><expr pos:start="449:13" pos:end="449:27"><name pos:start="449:13" pos:end="449:23"><name pos:start="449:13" pos:end="449:13">v</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:23">tt_index</name></name> <operator pos:start="449:25" pos:end="449:25">=</operator> <literal type="number" pos:start="449:27" pos:end="449:27">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="451:9" pos:end="453:28">else<block type="pseudo" pos:start="453:13" pos:end="453:28"><block_content pos:start="453:13" pos:end="453:28">

            <expr_stmt pos:start="453:13" pos:end="453:28"><expr pos:start="453:13" pos:end="453:27"><name pos:start="453:13" pos:end="453:23"><name pos:start="453:13" pos:end="453:13">v</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:23">tt_index</name></name> <operator pos:start="453:25" pos:end="453:25">=</operator> <literal type="number" pos:start="453:27" pos:end="453:27">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="455:9" pos:end="523:9"><if pos:start="455:9" pos:end="523:9">if <condition pos:start="455:12" pos:end="455:24">(<expr pos:start="455:13" pos:end="455:23"><name pos:start="455:13" pos:end="455:18"><name pos:start="455:13" pos:end="455:13">v</name><operator pos:start="455:14" pos:end="455:15">-&gt;</operator><name pos:start="455:16" pos:end="455:18">fcm</name></name> <operator pos:start="455:20" pos:end="455:21">!=</operator> <literal type="number" pos:start="455:23" pos:end="455:23">1</literal></expr>)</condition> <block pos:start="455:26" pos:end="523:9">{<block_content pos:start="457:13" pos:end="521:75">

            <decl_stmt pos:start="457:13" pos:end="457:23"><decl pos:start="457:13" pos:end="457:22"><type pos:start="457:13" pos:end="457:15"><name pos:start="457:13" pos:end="457:15">int</name></type> <name pos:start="457:17" pos:end="457:22">mvmode</name></decl>;</decl_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:45"><expr pos:start="459:13" pos:end="459:44"><name pos:start="459:13" pos:end="459:18">mvmode</name>     <operator pos:start="459:24" pos:end="459:24">=</operator> <call pos:start="459:26" pos:end="459:44"><name pos:start="459:26" pos:end="459:34">get_unary</name><argument_list pos:start="459:35" pos:end="459:44">(<argument pos:start="459:36" pos:end="459:37"><expr pos:start="459:36" pos:end="459:37"><name pos:start="459:36" pos:end="459:37">gb</name></expr></argument>, <argument pos:start="459:40" pos:end="459:40"><expr pos:start="459:40" pos:end="459:40"><literal type="number" pos:start="459:40" pos:end="459:40">1</literal></expr></argument>, <argument pos:start="459:43" pos:end="459:43"><expr pos:start="459:43" pos:end="459:43"><literal type="number" pos:start="459:43" pos:end="459:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:46"><expr pos:start="461:13" pos:end="461:45"><name pos:start="461:13" pos:end="461:20">lowquant</name>   <operator pos:start="461:24" pos:end="461:24">=</operator> <ternary pos:start="461:26" pos:end="461:45"><condition pos:start="461:26" pos:end="461:39"><expr pos:start="461:26" pos:end="461:37"><operator pos:start="461:26" pos:end="461:26">(</operator><name pos:start="461:27" pos:end="461:31"><name pos:start="461:27" pos:end="461:27">v</name><operator pos:start="461:28" pos:end="461:29">-&gt;</operator><name pos:start="461:30" pos:end="461:31">pq</name></name> <operator pos:start="461:33" pos:end="461:33">&gt;</operator> <literal type="number" pos:start="461:35" pos:end="461:36">12</literal><operator pos:start="461:37" pos:end="461:37">)</operator></expr> ?</condition><then pos:start="461:41" pos:end="461:41"> <expr pos:start="461:41" pos:end="461:41"><literal type="number" pos:start="461:41" pos:end="461:41">0</literal></expr> </then><else pos:start="461:43" pos:end="461:45">: <expr pos:start="461:45" pos:end="461:45"><literal type="number" pos:start="461:45" pos:end="461:45">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:65"><expr pos:start="463:13" pos:end="463:64"><name pos:start="463:13" pos:end="463:22"><name pos:start="463:13" pos:end="463:13">v</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:22">mv_mode</name></name> <operator pos:start="463:24" pos:end="463:24">=</operator> <name pos:start="463:26" pos:end="463:64"><name pos:start="463:26" pos:end="463:46">ff_vc1_mv_pmode_table</name><index pos:start="463:47" pos:end="463:56">[<expr pos:start="463:48" pos:end="463:55"><name pos:start="463:48" pos:end="463:55">lowquant</name></expr>]</index><index pos:start="463:57" pos:end="463:64">[<expr pos:start="463:58" pos:end="463:63"><name pos:start="463:58" pos:end="463:63">mvmode</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="465:13" pos:end="495:13"><if pos:start="465:13" pos:end="495:13">if <condition pos:start="465:16" pos:end="465:54">(<expr pos:start="465:17" pos:end="465:53"><name pos:start="465:17" pos:end="465:26"><name pos:start="465:17" pos:end="465:17">v</name><operator pos:start="465:18" pos:end="465:19">-&gt;</operator><name pos:start="465:20" pos:end="465:26">mv_mode</name></name> <operator pos:start="465:28" pos:end="465:29">==</operator> <name pos:start="465:31" pos:end="465:53">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="465:56" pos:end="495:13">{<block_content pos:start="467:17" pos:end="493:30">

                <decl_stmt pos:start="467:17" pos:end="467:28"><decl pos:start="467:17" pos:end="467:27"><type pos:start="467:17" pos:end="467:19"><name pos:start="467:17" pos:end="467:19">int</name></type> <name pos:start="467:21" pos:end="467:27">mvmode2</name></decl>;</decl_stmt>

                <expr_stmt pos:start="469:17" pos:end="469:46"><expr pos:start="469:17" pos:end="469:45"><name pos:start="469:17" pos:end="469:23">mvmode2</name> <operator pos:start="469:25" pos:end="469:25">=</operator> <call pos:start="469:27" pos:end="469:45"><name pos:start="469:27" pos:end="469:35">get_unary</name><argument_list pos:start="469:36" pos:end="469:45">(<argument pos:start="469:37" pos:end="469:38"><expr pos:start="469:37" pos:end="469:38"><name pos:start="469:37" pos:end="469:38">gb</name></expr></argument>, <argument pos:start="469:41" pos:end="469:41"><expr pos:start="469:41" pos:end="469:41"><literal type="number" pos:start="469:41" pos:end="469:41">1</literal></expr></argument>, <argument pos:start="469:44" pos:end="469:44"><expr pos:start="469:44" pos:end="469:44"><literal type="number" pos:start="469:44" pos:end="469:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:72"><expr pos:start="471:17" pos:end="471:71"><name pos:start="471:17" pos:end="471:27"><name pos:start="471:17" pos:end="471:17">v</name><operator pos:start="471:18" pos:end="471:19">-&gt;</operator><name pos:start="471:20" pos:end="471:27">mv_mode2</name></name> <operator pos:start="471:29" pos:end="471:29">=</operator> <name pos:start="471:31" pos:end="471:71"><name pos:start="471:31" pos:end="471:52">ff_vc1_mv_pmode_table2</name><index pos:start="471:53" pos:end="471:62">[<expr pos:start="471:54" pos:end="471:61"><name pos:start="471:54" pos:end="471:61">lowquant</name></expr>]</index><index pos:start="471:63" pos:end="471:71">[<expr pos:start="471:64" pos:end="471:70"><name pos:start="471:64" pos:end="471:70">mvmode2</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="473:17" pos:end="475:52"><if pos:start="473:17" pos:end="475:52">if <condition pos:start="473:20" pos:end="473:34">(<expr pos:start="473:21" pos:end="473:33"><name pos:start="473:21" pos:end="473:33"><name pos:start="473:21" pos:end="473:21">v</name><operator pos:start="473:22" pos:end="473:23">-&gt;</operator><name pos:start="473:24" pos:end="473:33">field_mode</name></name></expr>)</condition><block type="pseudo" pos:start="475:21" pos:end="475:52"><block_content pos:start="475:21" pos:end="475:52">

                    <expr_stmt pos:start="475:21" pos:end="475:52"><expr pos:start="475:21" pos:end="475:51"><name pos:start="475:21" pos:end="475:35"><name pos:start="475:21" pos:end="475:21">v</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:35">intcompfield</name></name> <operator pos:start="475:37" pos:end="475:37">=</operator> <call pos:start="475:39" pos:end="475:51"><name pos:start="475:39" pos:end="475:47">decode210</name><argument_list pos:start="475:48" pos:end="475:51">(<argument pos:start="475:49" pos:end="475:50"><expr pos:start="475:49" pos:end="475:50"><name pos:start="475:49" pos:end="475:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="477:17" pos:end="477:46"><expr pos:start="477:17" pos:end="477:45"><name pos:start="477:17" pos:end="477:27"><name pos:start="477:17" pos:end="477:17">v</name><operator pos:start="477:18" pos:end="477:19">-&gt;</operator><name pos:start="477:20" pos:end="477:27">lumscale</name></name> <operator pos:start="477:29" pos:end="477:29">=</operator> <call pos:start="477:31" pos:end="477:45"><name pos:start="477:31" pos:end="477:38">get_bits</name><argument_list pos:start="477:39" pos:end="477:45">(<argument pos:start="477:40" pos:end="477:41"><expr pos:start="477:40" pos:end="477:41"><name pos:start="477:40" pos:end="477:41">gb</name></expr></argument>, <argument pos:start="477:44" pos:end="477:44"><expr pos:start="477:44" pos:end="477:44"><literal type="number" pos:start="477:44" pos:end="477:44">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="479:17" pos:end="479:46"><expr pos:start="479:17" pos:end="479:45"><name pos:start="479:17" pos:end="479:27"><name pos:start="479:17" pos:end="479:17">v</name><operator pos:start="479:18" pos:end="479:19">-&gt;</operator><name pos:start="479:20" pos:end="479:27">lumshift</name></name> <operator pos:start="479:29" pos:end="479:29">=</operator> <call pos:start="479:31" pos:end="479:45"><name pos:start="479:31" pos:end="479:38">get_bits</name><argument_list pos:start="479:39" pos:end="479:45">(<argument pos:start="479:40" pos:end="479:41"><expr pos:start="479:40" pos:end="479:41"><name pos:start="479:40" pos:end="479:41">gb</name></expr></argument>, <argument pos:start="479:44" pos:end="479:44"><expr pos:start="479:44" pos:end="479:44"><literal type="number" pos:start="479:44" pos:end="479:44">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="481:17" pos:end="481:70"><expr pos:start="481:17" pos:end="481:69"><call pos:start="481:17" pos:end="481:69"><name pos:start="481:17" pos:end="481:24">INIT_LUT</name><argument_list pos:start="481:25" pos:end="481:69">(<argument pos:start="481:26" pos:end="481:36"><expr pos:start="481:26" pos:end="481:36"><name pos:start="481:26" pos:end="481:36"><name pos:start="481:26" pos:end="481:26">v</name><operator pos:start="481:27" pos:end="481:28">-&gt;</operator><name pos:start="481:29" pos:end="481:36">lumscale</name></name></expr></argument>, <argument pos:start="481:39" pos:end="481:49"><expr pos:start="481:39" pos:end="481:49"><name pos:start="481:39" pos:end="481:49"><name pos:start="481:39" pos:end="481:39">v</name><operator pos:start="481:40" pos:end="481:41">-&gt;</operator><name pos:start="481:42" pos:end="481:49">lumshift</name></name></expr></argument>, <argument pos:start="481:52" pos:end="481:58"><expr pos:start="481:52" pos:end="481:58"><name pos:start="481:52" pos:end="481:58"><name pos:start="481:52" pos:end="481:52">v</name><operator pos:start="481:53" pos:end="481:54">-&gt;</operator><name pos:start="481:55" pos:end="481:58">luty</name></name></expr></argument>, <argument pos:start="481:61" pos:end="481:68"><expr pos:start="481:61" pos:end="481:68"><name pos:start="481:61" pos:end="481:68"><name pos:start="481:61" pos:end="481:61">v</name><operator pos:start="481:62" pos:end="481:63">-&gt;</operator><name pos:start="481:64" pos:end="481:68">lutuv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="483:17" pos:end="491:17"><if pos:start="483:17" pos:end="491:17">if <condition pos:start="483:20" pos:end="483:56">(<expr pos:start="483:21" pos:end="483:55"><operator pos:start="483:21" pos:end="483:21">(</operator><name pos:start="483:22" pos:end="483:34"><name pos:start="483:22" pos:end="483:22">v</name><operator pos:start="483:23" pos:end="483:24">-&gt;</operator><name pos:start="483:25" pos:end="483:34">field_mode</name></name><operator pos:start="483:35" pos:end="483:35">)</operator> <operator pos:start="483:37" pos:end="483:38">&amp;&amp;</operator> <operator pos:start="483:40" pos:end="483:40">!</operator><name pos:start="483:41" pos:end="483:55"><name pos:start="483:41" pos:end="483:41">v</name><operator pos:start="483:42" pos:end="483:43">-&gt;</operator><name pos:start="483:44" pos:end="483:55">intcompfield</name></name></expr>)</condition> <block pos:start="483:58" pos:end="491:17">{<block_content pos:start="485:21" pos:end="489:78">

                    <expr_stmt pos:start="485:21" pos:end="485:51"><expr pos:start="485:21" pos:end="485:50"><name pos:start="485:21" pos:end="485:32"><name pos:start="485:21" pos:end="485:21">v</name><operator pos:start="485:22" pos:end="485:23">-&gt;</operator><name pos:start="485:24" pos:end="485:32">lumscale2</name></name> <operator pos:start="485:34" pos:end="485:34">=</operator> <call pos:start="485:36" pos:end="485:50"><name pos:start="485:36" pos:end="485:43">get_bits</name><argument_list pos:start="485:44" pos:end="485:50">(<argument pos:start="485:45" pos:end="485:46"><expr pos:start="485:45" pos:end="485:46"><name pos:start="485:45" pos:end="485:46">gb</name></expr></argument>, <argument pos:start="485:49" pos:end="485:49"><expr pos:start="485:49" pos:end="485:49"><literal type="number" pos:start="485:49" pos:end="485:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="487:21" pos:end="487:51"><expr pos:start="487:21" pos:end="487:50"><name pos:start="487:21" pos:end="487:32"><name pos:start="487:21" pos:end="487:21">v</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:32">lumshift2</name></name> <operator pos:start="487:34" pos:end="487:34">=</operator> <call pos:start="487:36" pos:end="487:50"><name pos:start="487:36" pos:end="487:43">get_bits</name><argument_list pos:start="487:44" pos:end="487:50">(<argument pos:start="487:45" pos:end="487:46"><expr pos:start="487:45" pos:end="487:46"><name pos:start="487:45" pos:end="487:46">gb</name></expr></argument>, <argument pos:start="487:49" pos:end="487:49"><expr pos:start="487:49" pos:end="487:49"><literal type="number" pos:start="487:49" pos:end="487:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="489:21" pos:end="489:78"><expr pos:start="489:21" pos:end="489:77"><call pos:start="489:21" pos:end="489:77"><name pos:start="489:21" pos:end="489:28">INIT_LUT</name><argument_list pos:start="489:29" pos:end="489:77">(<argument pos:start="489:30" pos:end="489:41"><expr pos:start="489:30" pos:end="489:41"><name pos:start="489:30" pos:end="489:41"><name pos:start="489:30" pos:end="489:30">v</name><operator pos:start="489:31" pos:end="489:32">-&gt;</operator><name pos:start="489:33" pos:end="489:41">lumscale2</name></name></expr></argument>, <argument pos:start="489:44" pos:end="489:55"><expr pos:start="489:44" pos:end="489:55"><name pos:start="489:44" pos:end="489:55"><name pos:start="489:44" pos:end="489:44">v</name><operator pos:start="489:45" pos:end="489:46">-&gt;</operator><name pos:start="489:47" pos:end="489:55">lumshift2</name></name></expr></argument>, <argument pos:start="489:58" pos:end="489:65"><expr pos:start="489:58" pos:end="489:65"><name pos:start="489:58" pos:end="489:65"><name pos:start="489:58" pos:end="489:58">v</name><operator pos:start="489:59" pos:end="489:60">-&gt;</operator><name pos:start="489:61" pos:end="489:65">luty2</name></name></expr></argument>, <argument pos:start="489:68" pos:end="489:76"><expr pos:start="489:68" pos:end="489:76"><name pos:start="489:68" pos:end="489:76"><name pos:start="489:68" pos:end="489:68">v</name><operator pos:start="489:69" pos:end="489:70">-&gt;</operator><name pos:start="489:71" pos:end="489:76">lutuv2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="493:17" pos:end="493:30"><expr pos:start="493:17" pos:end="493:29"><name pos:start="493:17" pos:end="493:25"><name pos:start="493:17" pos:end="493:17">v</name><operator pos:start="493:18" pos:end="493:19">-&gt;</operator><name pos:start="493:20" pos:end="493:25">use_ic</name></name> <operator pos:start="493:27" pos:end="493:27">=</operator> <literal type="number" pos:start="493:29" pos:end="493:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:45"><expr pos:start="497:13" pos:end="497:44"><name pos:start="497:13" pos:end="497:22"><name pos:start="497:13" pos:end="497:13">v</name><operator pos:start="497:14" pos:end="497:15">-&gt;</operator><name pos:start="497:16" pos:end="497:22">qs_last</name></name> <operator pos:start="497:24" pos:end="497:24">=</operator> <name pos:start="497:26" pos:end="497:44"><name pos:start="497:26" pos:end="497:26">v</name><operator pos:start="497:27" pos:end="497:28">-&gt;</operator><name pos:start="497:29" pos:end="497:29">s</name><operator pos:start="497:30" pos:end="497:30">.</operator><name pos:start="497:31" pos:end="497:44">quarter_sample</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="499:13" pos:end="515:40"><if pos:start="499:13" pos:end="501:40">if <condition pos:start="499:16" pos:end="499:89">(<expr pos:start="499:17" pos:end="499:88"><name pos:start="499:17" pos:end="499:26"><name pos:start="499:17" pos:end="499:17">v</name><operator pos:start="499:18" pos:end="499:19">-&gt;</operator><name pos:start="499:20" pos:end="499:26">mv_mode</name></name> <operator pos:start="499:28" pos:end="499:29">==</operator> <name pos:start="499:31" pos:end="499:47">MV_PMODE_1MV_HPEL</name> <operator pos:start="499:49" pos:end="499:50">||</operator> <name pos:start="499:52" pos:end="499:61"><name pos:start="499:52" pos:end="499:52">v</name><operator pos:start="499:53" pos:end="499:54">-&gt;</operator><name pos:start="499:55" pos:end="499:61">mv_mode</name></name> <operator pos:start="499:63" pos:end="499:64">==</operator> <name pos:start="499:66" pos:end="499:88">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="501:17" pos:end="501:40"><block_content pos:start="501:17" pos:end="501:40">

                <expr_stmt pos:start="501:17" pos:end="501:40"><expr pos:start="501:17" pos:end="501:39"><name pos:start="501:17" pos:end="501:35"><name pos:start="501:17" pos:end="501:17">v</name><operator pos:start="501:18" pos:end="501:19">-&gt;</operator><name pos:start="501:20" pos:end="501:20">s</name><operator pos:start="501:21" pos:end="501:21">.</operator><name pos:start="501:22" pos:end="501:35">quarter_sample</name></name> <operator pos:start="501:37" pos:end="501:37">=</operator> <literal type="number" pos:start="501:39" pos:end="501:39">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="503:13" pos:end="513:13">else if <condition pos:start="503:21" pos:end="503:59">(<expr pos:start="503:22" pos:end="503:58"><name pos:start="503:22" pos:end="503:31"><name pos:start="503:22" pos:end="503:22">v</name><operator pos:start="503:23" pos:end="503:24">-&gt;</operator><name pos:start="503:25" pos:end="503:31">mv_mode</name></name> <operator pos:start="503:33" pos:end="503:34">==</operator> <name pos:start="503:36" pos:end="503:58">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="503:61" pos:end="513:13">{<block_content pos:start="505:17" pos:end="511:44">

                <if_stmt pos:start="505:17" pos:end="511:44"><if pos:start="505:17" pos:end="507:44">if <condition pos:start="505:20" pos:end="505:95">(<expr pos:start="505:21" pos:end="505:94"><name pos:start="505:21" pos:end="505:31"><name pos:start="505:21" pos:end="505:21">v</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:31">mv_mode2</name></name> <operator pos:start="505:33" pos:end="505:34">==</operator> <name pos:start="505:36" pos:end="505:52">MV_PMODE_1MV_HPEL</name> <operator pos:start="505:54" pos:end="505:55">||</operator> <name pos:start="505:57" pos:end="505:67"><name pos:start="505:57" pos:end="505:57">v</name><operator pos:start="505:58" pos:end="505:59">-&gt;</operator><name pos:start="505:60" pos:end="505:67">mv_mode2</name></name> <operator pos:start="505:69" pos:end="505:70">==</operator> <name pos:start="505:72" pos:end="505:94">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="507:21" pos:end="507:44"><block_content pos:start="507:21" pos:end="507:44">

                    <expr_stmt pos:start="507:21" pos:end="507:44"><expr pos:start="507:21" pos:end="507:43"><name pos:start="507:21" pos:end="507:39"><name pos:start="507:21" pos:end="507:21">v</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:24">s</name><operator pos:start="507:25" pos:end="507:25">.</operator><name pos:start="507:26" pos:end="507:39">quarter_sample</name></name> <operator pos:start="507:41" pos:end="507:41">=</operator> <literal type="number" pos:start="507:43" pos:end="507:43">0</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="509:17" pos:end="511:44">else<block type="pseudo" pos:start="511:21" pos:end="511:44"><block_content pos:start="511:21" pos:end="511:44">

                    <expr_stmt pos:start="511:21" pos:end="511:44"><expr pos:start="511:21" pos:end="511:43"><name pos:start="511:21" pos:end="511:39"><name pos:start="511:21" pos:end="511:21">v</name><operator pos:start="511:22" pos:end="511:23">-&gt;</operator><name pos:start="511:24" pos:end="511:24">s</name><operator pos:start="511:25" pos:end="511:25">.</operator><name pos:start="511:26" pos:end="511:39">quarter_sample</name></name> <operator pos:start="511:41" pos:end="511:41">=</operator> <literal type="number" pos:start="511:43" pos:end="511:43">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="513:15" pos:end="515:40">else<block type="pseudo" pos:start="515:17" pos:end="515:40"><block_content pos:start="515:17" pos:end="515:40">

                <expr_stmt pos:start="515:17" pos:end="515:40"><expr pos:start="515:17" pos:end="515:39"><name pos:start="515:17" pos:end="515:35"><name pos:start="515:17" pos:end="515:17">v</name><operator pos:start="515:18" pos:end="515:19">-&gt;</operator><name pos:start="515:20" pos:end="515:20">s</name><operator pos:start="515:21" pos:end="515:21">.</operator><name pos:start="515:22" pos:end="515:35">quarter_sample</name></name> <operator pos:start="515:37" pos:end="515:37">=</operator> <literal type="number" pos:start="515:39" pos:end="515:39">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="517:13" pos:end="521:75"><expr pos:start="517:13" pos:end="521:74"><name pos:start="517:13" pos:end="517:22"><name pos:start="517:13" pos:end="517:13">v</name><operator pos:start="517:14" pos:end="517:15">-&gt;</operator><name pos:start="517:16" pos:end="517:16">s</name><operator pos:start="517:17" pos:end="517:17">.</operator><name pos:start="517:18" pos:end="517:22">mspel</name></name> <operator pos:start="517:24" pos:end="517:24">=</operator> <operator pos:start="517:26" pos:end="517:26">!</operator><operator pos:start="517:27" pos:end="517:27">(</operator><name pos:start="517:28" pos:end="517:37"><name pos:start="517:28" pos:end="517:28">v</name><operator pos:start="517:29" pos:end="517:30">-&gt;</operator><name pos:start="517:31" pos:end="517:37">mv_mode</name></name> <operator pos:start="517:39" pos:end="517:40">==</operator> <name pos:start="517:42" pos:end="517:64">MV_PMODE_1MV_HPEL_BILIN</name>

                           <operator pos:start="519:28" pos:end="519:29">||</operator> <operator pos:start="519:31" pos:end="519:31">(</operator><name pos:start="519:32" pos:end="519:41"><name pos:start="519:32" pos:end="519:32">v</name><operator pos:start="519:33" pos:end="519:34">-&gt;</operator><name pos:start="519:35" pos:end="519:41">mv_mode</name></name> <operator pos:start="519:43" pos:end="519:44">==</operator> <name pos:start="519:46" pos:end="519:68">MV_PMODE_INTENSITY_COMP</name>

                               <operator pos:start="521:32" pos:end="521:33">&amp;&amp;</operator> <name pos:start="521:35" pos:end="521:45"><name pos:start="521:35" pos:end="521:35">v</name><operator pos:start="521:36" pos:end="521:37">-&gt;</operator><name pos:start="521:38" pos:end="521:45">mv_mode2</name></name> <operator pos:start="521:47" pos:end="521:48">==</operator> <name pos:start="521:50" pos:end="521:72">MV_PMODE_1MV_HPEL_BILIN</name><operator pos:start="521:73" pos:end="521:73">)</operator><operator pos:start="521:74" pos:end="521:74">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="525:9" pos:end="611:9"><if pos:start="525:9" pos:end="569:9">if <condition pos:start="525:12" pos:end="525:24">(<expr pos:start="525:13" pos:end="525:23"><name pos:start="525:13" pos:end="525:18"><name pos:start="525:13" pos:end="525:13">v</name><operator pos:start="525:14" pos:end="525:15">-&gt;</operator><name pos:start="525:16" pos:end="525:18">fcm</name></name> <operator pos:start="525:20" pos:end="525:21">==</operator> <literal type="number" pos:start="525:23" pos:end="525:23">0</literal></expr>)</condition> <block pos:start="525:26" pos:end="569:9">{<block_content pos:start="527:13" pos:end="567:71"> <comment type="line" pos:start="525:28" pos:end="525:41">// progressive</comment>

            <if_stmt pos:start="527:13" pos:end="549:13"><if pos:start="527:13" pos:end="543:13">if <condition pos:start="527:16" pos:end="531:51">(<expr pos:start="527:17" pos:end="531:50"><operator pos:start="527:17" pos:end="527:17">(</operator><name pos:start="527:18" pos:end="527:27"><name pos:start="527:18" pos:end="527:18">v</name><operator pos:start="527:19" pos:end="527:20">-&gt;</operator><name pos:start="527:21" pos:end="527:27">mv_mode</name></name> <operator pos:start="527:29" pos:end="527:30">==</operator> <name pos:start="527:32" pos:end="527:54">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="527:56" pos:end="527:57">&amp;&amp;</operator>

                 <name pos:start="529:18" pos:end="529:28"><name pos:start="529:18" pos:end="529:18">v</name><operator pos:start="529:19" pos:end="529:20">-&gt;</operator><name pos:start="529:21" pos:end="529:28">mv_mode2</name></name> <operator pos:start="529:30" pos:end="529:31">==</operator> <name pos:start="529:33" pos:end="529:49">MV_PMODE_MIXED_MV</name><operator pos:start="529:50" pos:end="529:50">)</operator>

                <operator pos:start="531:17" pos:end="531:18">||</operator> <name pos:start="531:20" pos:end="531:29"><name pos:start="531:20" pos:end="531:20">v</name><operator pos:start="531:21" pos:end="531:22">-&gt;</operator><name pos:start="531:23" pos:end="531:29">mv_mode</name></name> <operator pos:start="531:31" pos:end="531:32">==</operator> <name pos:start="531:34" pos:end="531:50">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="531:53" pos:end="543:13">{<block_content pos:start="533:17" pos:end="541:71">

                <expr_stmt pos:start="533:17" pos:end="533:87"><expr pos:start="533:17" pos:end="533:86"><name pos:start="533:17" pos:end="533:22">status</name> <operator pos:start="533:24" pos:end="533:24">=</operator> <call pos:start="533:26" pos:end="533:86"><name pos:start="533:26" pos:end="533:42">bitplane_decoding</name><argument_list pos:start="533:43" pos:end="533:86">(<argument pos:start="533:44" pos:end="533:62"><expr pos:start="533:44" pos:end="533:62"><name pos:start="533:44" pos:end="533:62"><name pos:start="533:44" pos:end="533:44">v</name><operator pos:start="533:45" pos:end="533:46">-&gt;</operator><name pos:start="533:47" pos:end="533:62">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="533:65" pos:end="533:82"><expr pos:start="533:65" pos:end="533:82"><operator pos:start="533:65" pos:end="533:65">&amp;</operator><name pos:start="533:66" pos:end="533:82"><name pos:start="533:66" pos:end="533:66">v</name><operator pos:start="533:67" pos:end="533:68">-&gt;</operator><name pos:start="533:69" pos:end="533:82">mv_type_is_raw</name></name></expr></argument>, <argument pos:start="533:85" pos:end="533:85"><expr pos:start="533:85" pos:end="533:85"><name pos:start="533:85" pos:end="533:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="535:17" pos:end="537:30"><if pos:start="535:17" pos:end="537:30">if <condition pos:start="535:20" pos:end="535:31">(<expr pos:start="535:21" pos:end="535:30"><name pos:start="535:21" pos:end="535:26">status</name> <operator pos:start="535:28" pos:end="535:28">&lt;</operator> <literal type="number" pos:start="535:30" pos:end="535:30">0</literal></expr>)</condition><block type="pseudo" pos:start="537:21" pos:end="537:30"><block_content pos:start="537:21" pos:end="537:30">

                    <return pos:start="537:21" pos:end="537:30">return <expr pos:start="537:28" pos:end="537:29"><operator pos:start="537:28" pos:end="537:28">-</operator><literal type="number" pos:start="537:29" pos:end="537:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="539:17" pos:end="541:71"><expr pos:start="539:17" pos:end="541:70"><call pos:start="539:17" pos:end="541:70"><name pos:start="539:17" pos:end="539:22">av_log</name><argument_list pos:start="539:23" pos:end="541:70">(<argument pos:start="539:24" pos:end="539:33"><expr pos:start="539:24" pos:end="539:33"><name pos:start="539:24" pos:end="539:33"><name pos:start="539:24" pos:end="539:24">v</name><operator pos:start="539:25" pos:end="539:26">-&gt;</operator><name pos:start="539:27" pos:end="539:27">s</name><operator pos:start="539:28" pos:end="539:28">.</operator><name pos:start="539:29" pos:end="539:33">avctx</name></name></expr></argument>, <argument pos:start="539:36" pos:end="539:47"><expr pos:start="539:36" pos:end="539:47"><name pos:start="539:36" pos:end="539:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="539:50" pos:end="541:48"><expr pos:start="539:50" pos:end="541:48"><literal type="string" pos:start="539:50" pos:end="539:78">"MB MV Type plane encoding: "</literal>

                       <literal type="string" pos:start="541:24" pos:end="541:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="541:51" pos:end="541:59"><expr pos:start="541:51" pos:end="541:59"><name pos:start="541:51" pos:end="541:56">status</name><operator pos:start="541:57" pos:end="541:58">&gt;&gt;</operator><literal type="number" pos:start="541:59" pos:end="541:59">1</literal></expr></argument>, <argument pos:start="541:62" pos:end="541:69"><expr pos:start="541:62" pos:end="541:69"><name pos:start="541:62" pos:end="541:67">status</name><operator pos:start="541:68" pos:end="541:68">&amp;</operator><literal type="number" pos:start="541:69" pos:end="541:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="543:15" pos:end="549:13">else <block pos:start="543:20" pos:end="549:13">{<block_content pos:start="545:17" pos:end="547:80">

                <expr_stmt pos:start="545:17" pos:end="545:38"><expr pos:start="545:17" pos:end="545:37"><name pos:start="545:17" pos:end="545:33"><name pos:start="545:17" pos:end="545:17">v</name><operator pos:start="545:18" pos:end="545:19">-&gt;</operator><name pos:start="545:20" pos:end="545:33">mv_type_is_raw</name></name> <operator pos:start="545:35" pos:end="545:35">=</operator> <literal type="number" pos:start="545:37" pos:end="545:37">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="547:17" pos:end="547:80"><expr pos:start="547:17" pos:end="547:79"><call pos:start="547:17" pos:end="547:79"><name pos:start="547:17" pos:end="547:22">memset</name><argument_list pos:start="547:23" pos:end="547:79">(<argument pos:start="547:24" pos:end="547:42"><expr pos:start="547:24" pos:end="547:42"><name pos:start="547:24" pos:end="547:42"><name pos:start="547:24" pos:end="547:24">v</name><operator pos:start="547:25" pos:end="547:26">-&gt;</operator><name pos:start="547:27" pos:end="547:42">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="547:45" pos:end="547:45"><expr pos:start="547:45" pos:end="547:45"><literal type="number" pos:start="547:45" pos:end="547:45">0</literal></expr></argument>, <argument pos:start="547:48" pos:end="547:78"><expr pos:start="547:48" pos:end="547:78"><name pos:start="547:48" pos:end="547:61"><name pos:start="547:48" pos:end="547:48">v</name><operator pos:start="547:49" pos:end="547:50">-&gt;</operator><name pos:start="547:51" pos:end="547:51">s</name><operator pos:start="547:52" pos:end="547:52">.</operator><name pos:start="547:53" pos:end="547:61">mb_stride</name></name> <operator pos:start="547:63" pos:end="547:63">*</operator> <name pos:start="547:65" pos:end="547:78"><name pos:start="547:65" pos:end="547:65">v</name><operator pos:start="547:66" pos:end="547:67">-&gt;</operator><name pos:start="547:68" pos:end="547:68">s</name><operator pos:start="547:69" pos:end="547:69">.</operator><name pos:start="547:70" pos:end="547:78">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:78"><expr pos:start="551:13" pos:end="551:77"><name pos:start="551:13" pos:end="551:18">status</name> <operator pos:start="551:20" pos:end="551:20">=</operator> <call pos:start="551:22" pos:end="551:77"><name pos:start="551:22" pos:end="551:38">bitplane_decoding</name><argument_list pos:start="551:39" pos:end="551:77">(<argument pos:start="551:40" pos:end="551:56"><expr pos:start="551:40" pos:end="551:56"><name pos:start="551:40" pos:end="551:56"><name pos:start="551:40" pos:end="551:40">v</name><operator pos:start="551:41" pos:end="551:42">-&gt;</operator><name pos:start="551:43" pos:end="551:43">s</name><operator pos:start="551:44" pos:end="551:44">.</operator><name pos:start="551:45" pos:end="551:56">mbskip_table</name></name></expr></argument>, <argument pos:start="551:59" pos:end="551:73"><expr pos:start="551:59" pos:end="551:73"><operator pos:start="551:59" pos:end="551:59">&amp;</operator><name pos:start="551:60" pos:end="551:73"><name pos:start="551:60" pos:end="551:60">v</name><operator pos:start="551:61" pos:end="551:62">-&gt;</operator><name pos:start="551:63" pos:end="551:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="551:76" pos:end="551:76"><expr pos:start="551:76" pos:end="551:76"><name pos:start="551:76" pos:end="551:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="553:13" pos:end="555:26"><if pos:start="553:13" pos:end="555:26">if <condition pos:start="553:16" pos:end="553:27">(<expr pos:start="553:17" pos:end="553:26"><name pos:start="553:17" pos:end="553:22">status</name> <operator pos:start="553:24" pos:end="553:24">&lt;</operator> <literal type="number" pos:start="553:26" pos:end="553:26">0</literal></expr>)</condition><block type="pseudo" pos:start="555:17" pos:end="555:26"><block_content pos:start="555:17" pos:end="555:26">

                <return pos:start="555:17" pos:end="555:26">return <expr pos:start="555:24" pos:end="555:25"><operator pos:start="555:24" pos:end="555:24">-</operator><literal type="number" pos:start="555:25" pos:end="555:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="557:13" pos:end="559:67"><expr pos:start="557:13" pos:end="559:66"><call pos:start="557:13" pos:end="559:66"><name pos:start="557:13" pos:end="557:18">av_log</name><argument_list pos:start="557:19" pos:end="559:66">(<argument pos:start="557:20" pos:end="557:29"><expr pos:start="557:20" pos:end="557:29"><name pos:start="557:20" pos:end="557:29"><name pos:start="557:20" pos:end="557:20">v</name><operator pos:start="557:21" pos:end="557:22">-&gt;</operator><name pos:start="557:23" pos:end="557:23">s</name><operator pos:start="557:24" pos:end="557:24">.</operator><name pos:start="557:25" pos:end="557:29">avctx</name></name></expr></argument>, <argument pos:start="557:32" pos:end="557:43"><expr pos:start="557:32" pos:end="557:43"><name pos:start="557:32" pos:end="557:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="557:46" pos:end="559:44"><expr pos:start="557:46" pos:end="559:44"><literal type="string" pos:start="557:46" pos:end="557:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="559:20" pos:end="559:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="559:47" pos:end="559:55"><expr pos:start="559:47" pos:end="559:55"><name pos:start="559:47" pos:end="559:52">status</name><operator pos:start="559:53" pos:end="559:54">&gt;&gt;</operator><literal type="number" pos:start="559:55" pos:end="559:55">1</literal></expr></argument>, <argument pos:start="559:58" pos:end="559:65"><expr pos:start="559:58" pos:end="559:65"><name pos:start="559:58" pos:end="559:63">status</name><operator pos:start="559:64" pos:end="559:64">&amp;</operator><literal type="number" pos:start="559:65" pos:end="559:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="563:13" pos:end="563:56">/* Hopefully this is correct for P frames */</comment>

            <expr_stmt pos:start="565:13" pos:end="565:50"><expr pos:start="565:13" pos:end="565:49"><name pos:start="565:13" pos:end="565:31"><name pos:start="565:13" pos:end="565:13">v</name><operator pos:start="565:14" pos:end="565:15">-&gt;</operator><name pos:start="565:16" pos:end="565:16">s</name><operator pos:start="565:17" pos:end="565:17">.</operator><name pos:start="565:18" pos:end="565:31">mv_table_index</name></name> <operator pos:start="565:33" pos:end="565:33">=</operator> <call pos:start="565:35" pos:end="565:49"><name pos:start="565:35" pos:end="565:42">get_bits</name><argument_list pos:start="565:43" pos:end="565:49">(<argument pos:start="565:44" pos:end="565:45"><expr pos:start="565:44" pos:end="565:45"><name pos:start="565:44" pos:end="565:45">gb</name></expr></argument>, <argument pos:start="565:48" pos:end="565:48"><expr pos:start="565:48" pos:end="565:48"><literal type="number" pos:start="565:48" pos:end="565:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="565:52" pos:end="565:77">//but using ff_vc1_ tables</comment>

            <expr_stmt pos:start="567:13" pos:end="567:71"><expr pos:start="567:13" pos:end="567:70"><name pos:start="567:13" pos:end="567:24"><name pos:start="567:13" pos:end="567:13">v</name><operator pos:start="567:14" pos:end="567:15">-&gt;</operator><name pos:start="567:16" pos:end="567:24">cbpcy_vlc</name></name>        <operator pos:start="567:33" pos:end="567:33">=</operator> <operator pos:start="567:35" pos:end="567:35">&amp;</operator><name pos:start="567:36" pos:end="567:70"><name pos:start="567:36" pos:end="567:53">ff_vc1_cbpcy_p_vlc</name><index pos:start="567:54" pos:end="567:70">[<expr pos:start="567:55" pos:end="567:69"><call pos:start="567:55" pos:end="567:69"><name pos:start="567:55" pos:end="567:62">get_bits</name><argument_list pos:start="567:63" pos:end="567:69">(<argument pos:start="567:64" pos:end="567:65"><expr pos:start="567:64" pos:end="567:65"><name pos:start="567:64" pos:end="567:65">gb</name></expr></argument>, <argument pos:start="567:68" pos:end="567:68"><expr pos:start="567:68" pos:end="567:68"><literal type="number" pos:start="567:68" pos:end="567:68">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="569:11" pos:end="577:9">else if <condition pos:start="569:19" pos:end="569:31">(<expr pos:start="569:20" pos:end="569:30"><name pos:start="569:20" pos:end="569:25"><name pos:start="569:20" pos:end="569:20">v</name><operator pos:start="569:21" pos:end="569:22">-&gt;</operator><name pos:start="569:23" pos:end="569:25">fcm</name></name> <operator pos:start="569:27" pos:end="569:28">==</operator> <literal type="number" pos:start="569:30" pos:end="569:30">1</literal></expr>)</condition> <block pos:start="569:33" pos:end="577:9">{<block_content pos:start="571:13" pos:end="575:36"> <comment type="line" pos:start="569:35" pos:end="569:53">// frame interlaced</comment>

            <expr_stmt pos:start="571:13" pos:end="571:54"><expr pos:start="571:13" pos:end="571:53"><name pos:start="571:13" pos:end="571:22"><name pos:start="571:13" pos:end="571:13">v</name><operator pos:start="571:14" pos:end="571:15">-&gt;</operator><name pos:start="571:16" pos:end="571:22">qs_last</name></name>          <operator pos:start="571:33" pos:end="571:33">=</operator> <name pos:start="571:35" pos:end="571:53"><name pos:start="571:35" pos:end="571:35">v</name><operator pos:start="571:36" pos:end="571:37">-&gt;</operator><name pos:start="571:38" pos:end="571:38">s</name><operator pos:start="571:39" pos:end="571:39">.</operator><name pos:start="571:40" pos:end="571:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="573:13" pos:end="573:36"><expr pos:start="573:13" pos:end="573:35"><name pos:start="573:13" pos:end="573:31"><name pos:start="573:13" pos:end="573:13">v</name><operator pos:start="573:14" pos:end="573:15">-&gt;</operator><name pos:start="573:16" pos:end="573:16">s</name><operator pos:start="573:17" pos:end="573:17">.</operator><name pos:start="573:18" pos:end="573:31">quarter_sample</name></name> <operator pos:start="573:33" pos:end="573:33">=</operator> <literal type="number" pos:start="573:35" pos:end="573:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="575:13" pos:end="575:36"><expr pos:start="575:13" pos:end="575:35"><name pos:start="575:13" pos:end="575:22"><name pos:start="575:13" pos:end="575:13">v</name><operator pos:start="575:14" pos:end="575:15">-&gt;</operator><name pos:start="575:16" pos:end="575:16">s</name><operator pos:start="575:17" pos:end="575:17">.</operator><name pos:start="575:18" pos:end="575:22">mspel</name></name>          <operator pos:start="575:33" pos:end="575:33">=</operator> <literal type="number" pos:start="575:35" pos:end="575:35">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="577:11" pos:end="611:9">else <block pos:start="577:16" pos:end="611:9">{<block_content pos:start="579:13" pos:end="609:13">    <comment type="line" pos:start="577:21" pos:end="577:39">// field interlaced</comment>

            <expr_stmt pos:start="579:13" pos:end="579:40"><expr pos:start="579:13" pos:end="579:39"><name pos:start="579:13" pos:end="579:21">mbmodetab</name> <operator pos:start="579:23" pos:end="579:23">=</operator> <call pos:start="579:25" pos:end="579:39"><name pos:start="579:25" pos:end="579:32">get_bits</name><argument_list pos:start="579:33" pos:end="579:39">(<argument pos:start="579:34" pos:end="579:35"><expr pos:start="579:34" pos:end="579:35"><name pos:start="579:34" pos:end="579:35">gb</name></expr></argument>, <argument pos:start="579:38" pos:end="579:38"><expr pos:start="579:38" pos:end="579:38"><literal type="number" pos:start="579:38" pos:end="579:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:49"><expr pos:start="581:13" pos:end="581:48"><name pos:start="581:13" pos:end="581:18">imvtab</name> <operator pos:start="581:20" pos:end="581:20">=</operator> <call pos:start="581:22" pos:end="581:48"><name pos:start="581:22" pos:end="581:29">get_bits</name><argument_list pos:start="581:30" pos:end="581:48">(<argument pos:start="581:31" pos:end="581:32"><expr pos:start="581:31" pos:end="581:32"><name pos:start="581:31" pos:end="581:32">gb</name></expr></argument>, <argument pos:start="581:35" pos:end="581:47"><expr pos:start="581:35" pos:end="581:47"><literal type="number" pos:start="581:35" pos:end="581:37">2</literal> <operator pos:start="581:37" pos:end="581:37">+</operator> <name pos:start="581:39" pos:end="581:47"><name pos:start="581:39" pos:end="581:39">v</name><operator pos:start="581:40" pos:end="581:41">-&gt;</operator><name pos:start="581:42" pos:end="581:47">numref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="583:13" pos:end="589:61"><if pos:start="583:13" pos:end="585:61">if <condition pos:start="583:16" pos:end="583:27">(<expr pos:start="583:17" pos:end="583:26"><operator pos:start="583:17" pos:end="583:17">!</operator><name pos:start="583:18" pos:end="583:26"><name pos:start="583:18" pos:end="583:18">v</name><operator pos:start="583:19" pos:end="583:20">-&gt;</operator><name pos:start="583:21" pos:end="583:26">numref</name></name></expr>)</condition><block type="pseudo" pos:start="585:17" pos:end="585:61"><block_content pos:start="585:17" pos:end="585:61">

                <expr_stmt pos:start="585:17" pos:end="585:61"><expr pos:start="585:17" pos:end="585:60"><name pos:start="585:17" pos:end="585:26"><name pos:start="585:17" pos:end="585:17">v</name><operator pos:start="585:18" pos:end="585:19">-&gt;</operator><name pos:start="585:20" pos:end="585:26">imv_vlc</name></name> <operator pos:start="585:28" pos:end="585:28">=</operator> <operator pos:start="585:30" pos:end="585:30">&amp;</operator><name pos:start="585:31" pos:end="585:60"><name pos:start="585:31" pos:end="585:52">ff_vc1_1ref_mvdata_vlc</name><index pos:start="585:53" pos:end="585:60">[<expr pos:start="585:54" pos:end="585:59"><name pos:start="585:54" pos:end="585:59">imvtab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="587:13" pos:end="589:61">else<block type="pseudo" pos:start="589:17" pos:end="589:61"><block_content pos:start="589:17" pos:end="589:61">

                <expr_stmt pos:start="589:17" pos:end="589:61"><expr pos:start="589:17" pos:end="589:60"><name pos:start="589:17" pos:end="589:26"><name pos:start="589:17" pos:end="589:17">v</name><operator pos:start="589:18" pos:end="589:19">-&gt;</operator><name pos:start="589:20" pos:end="589:26">imv_vlc</name></name> <operator pos:start="589:28" pos:end="589:28">=</operator> <operator pos:start="589:30" pos:end="589:30">&amp;</operator><name pos:start="589:31" pos:end="589:60"><name pos:start="589:31" pos:end="589:52">ff_vc1_2ref_mvdata_vlc</name><index pos:start="589:53" pos:end="589:60">[<expr pos:start="589:54" pos:end="589:59"><name pos:start="589:54" pos:end="589:59">imvtab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:38"><expr pos:start="591:13" pos:end="591:37"><name pos:start="591:13" pos:end="591:19">icbptab</name> <operator pos:start="591:21" pos:end="591:21">=</operator> <call pos:start="591:23" pos:end="591:37"><name pos:start="591:23" pos:end="591:30">get_bits</name><argument_list pos:start="591:31" pos:end="591:37">(<argument pos:start="591:32" pos:end="591:33"><expr pos:start="591:32" pos:end="591:33"><name pos:start="591:32" pos:end="591:33">gb</name></expr></argument>, <argument pos:start="591:36" pos:end="591:36"><expr pos:start="591:36" pos:end="591:36"><literal type="number" pos:start="591:36" pos:end="591:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:55"><expr pos:start="593:13" pos:end="593:54"><name pos:start="593:13" pos:end="593:24"><name pos:start="593:13" pos:end="593:13">v</name><operator pos:start="593:14" pos:end="593:15">-&gt;</operator><name pos:start="593:16" pos:end="593:24">cbpcy_vlc</name></name> <operator pos:start="593:26" pos:end="593:26">=</operator> <operator pos:start="593:28" pos:end="593:28">&amp;</operator><name pos:start="593:29" pos:end="593:54"><name pos:start="593:29" pos:end="593:45">ff_vc1_icbpcy_vlc</name><index pos:start="593:46" pos:end="593:54">[<expr pos:start="593:47" pos:end="593:53"><name pos:start="593:47" pos:end="593:53">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="595:13" pos:end="609:13"><if pos:start="595:13" pos:end="605:13">if <condition pos:start="595:16" pos:end="597:85">(<expr pos:start="595:17" pos:end="597:84"><operator pos:start="595:17" pos:end="595:17">(</operator><name pos:start="595:18" pos:end="595:27"><name pos:start="595:18" pos:end="595:18">v</name><operator pos:start="595:19" pos:end="595:20">-&gt;</operator><name pos:start="595:21" pos:end="595:27">mv_mode</name></name> <operator pos:start="595:29" pos:end="595:30">==</operator> <name pos:start="595:32" pos:end="595:54">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="595:56" pos:end="595:57">&amp;&amp;</operator>

                <name pos:start="597:17" pos:end="597:27"><name pos:start="597:17" pos:end="597:17">v</name><operator pos:start="597:18" pos:end="597:19">-&gt;</operator><name pos:start="597:20" pos:end="597:27">mv_mode2</name></name> <operator pos:start="597:29" pos:end="597:30">==</operator> <name pos:start="597:32" pos:end="597:48">MV_PMODE_MIXED_MV</name><operator pos:start="597:49" pos:end="597:49">)</operator> <operator pos:start="597:51" pos:end="597:52">||</operator> <name pos:start="597:54" pos:end="597:63"><name pos:start="597:54" pos:end="597:54">v</name><operator pos:start="597:55" pos:end="597:56">-&gt;</operator><name pos:start="597:57" pos:end="597:63">mv_mode</name></name> <operator pos:start="597:65" pos:end="597:66">==</operator> <name pos:start="597:68" pos:end="597:84">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="597:87" pos:end="605:13">{<block_content pos:start="599:17" pos:end="603:69">

                <expr_stmt pos:start="599:17" pos:end="599:50"><expr pos:start="599:17" pos:end="599:49"><name pos:start="599:17" pos:end="599:27">fourmvbptab</name>     <operator pos:start="599:33" pos:end="599:33">=</operator> <call pos:start="599:35" pos:end="599:49"><name pos:start="599:35" pos:end="599:42">get_bits</name><argument_list pos:start="599:43" pos:end="599:49">(<argument pos:start="599:44" pos:end="599:45"><expr pos:start="599:44" pos:end="599:45"><name pos:start="599:44" pos:end="599:45">gb</name></expr></argument>, <argument pos:start="599:48" pos:end="599:48"><expr pos:start="599:48" pos:end="599:48"><literal type="number" pos:start="599:48" pos:end="599:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:77"><expr pos:start="601:17" pos:end="601:76"><name pos:start="601:17" pos:end="601:31"><name pos:start="601:17" pos:end="601:17">v</name><operator pos:start="601:18" pos:end="601:19">-&gt;</operator><name pos:start="601:20" pos:end="601:31">fourmvbp_vlc</name></name> <operator pos:start="601:33" pos:end="601:33">=</operator> <operator pos:start="601:35" pos:end="601:35">&amp;</operator><name pos:start="601:36" pos:end="601:76"><name pos:start="601:36" pos:end="601:63">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="601:64" pos:end="601:76">[<expr pos:start="601:65" pos:end="601:75"><name pos:start="601:65" pos:end="601:75">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:69"><expr pos:start="603:17" pos:end="603:68"><name pos:start="603:17" pos:end="603:29"><name pos:start="603:17" pos:end="603:17">v</name><operator pos:start="603:18" pos:end="603:19">-&gt;</operator><name pos:start="603:20" pos:end="603:29">mbmode_vlc</name></name> <operator pos:start="603:31" pos:end="603:31">=</operator> <operator pos:start="603:33" pos:end="603:33">&amp;</operator><name pos:start="603:34" pos:end="603:68"><name pos:start="603:34" pos:end="603:57">ff_vc1_if_mmv_mbmode_vlc</name><index pos:start="603:58" pos:end="603:68">[<expr pos:start="603:59" pos:end="603:67"><name pos:start="603:59" pos:end="603:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="605:15" pos:end="609:13">else <block pos:start="605:20" pos:end="609:13">{<block_content pos:start="607:17" pos:end="607:69">

                <expr_stmt pos:start="607:17" pos:end="607:69"><expr pos:start="607:17" pos:end="607:68"><name pos:start="607:17" pos:end="607:29"><name pos:start="607:17" pos:end="607:17">v</name><operator pos:start="607:18" pos:end="607:19">-&gt;</operator><name pos:start="607:20" pos:end="607:29">mbmode_vlc</name></name> <operator pos:start="607:31" pos:end="607:31">=</operator> <operator pos:start="607:33" pos:end="607:33">&amp;</operator><name pos:start="607:34" pos:end="607:68"><name pos:start="607:34" pos:end="607:57">ff_vc1_if_1mv_mbmode_vlc</name><index pos:start="607:58" pos:end="607:68">[<expr pos:start="607:59" pos:end="607:67"><name pos:start="607:59" pos:end="607:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="613:9" pos:end="619:9"><if pos:start="613:9" pos:end="619:9">if <condition pos:start="613:12" pos:end="613:22">(<expr pos:start="613:13" pos:end="613:21"><name pos:start="613:13" pos:end="613:21"><name pos:start="613:13" pos:end="613:13">v</name><operator pos:start="613:14" pos:end="613:15">-&gt;</operator><name pos:start="613:16" pos:end="613:21">dquant</name></name></expr>)</condition> <block pos:start="613:24" pos:end="619:9">{<block_content pos:start="615:13" pos:end="617:35">

            <expr_stmt pos:start="615:13" pos:end="615:66"><expr pos:start="615:13" pos:end="615:65"><call pos:start="615:13" pos:end="615:65"><name pos:start="615:13" pos:end="615:18">av_log</name><argument_list pos:start="615:19" pos:end="615:65">(<argument pos:start="615:20" pos:end="615:29"><expr pos:start="615:20" pos:end="615:29"><name pos:start="615:20" pos:end="615:29"><name pos:start="615:20" pos:end="615:20">v</name><operator pos:start="615:21" pos:end="615:22">-&gt;</operator><name pos:start="615:23" pos:end="615:23">s</name><operator pos:start="615:24" pos:end="615:24">.</operator><name pos:start="615:25" pos:end="615:29">avctx</name></name></expr></argument>, <argument pos:start="615:32" pos:end="615:43"><expr pos:start="615:32" pos:end="615:43"><name pos:start="615:32" pos:end="615:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="615:46" pos:end="615:64"><expr pos:start="615:46" pos:end="615:64"><literal type="string" pos:start="615:46" pos:end="615:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:35"><expr pos:start="617:13" pos:end="617:34"><call pos:start="617:13" pos:end="617:34"><name pos:start="617:13" pos:end="617:31">vop_dquant_decoding</name><argument_list pos:start="617:32" pos:end="617:34">(<argument pos:start="617:33" pos:end="617:33"><expr pos:start="617:33" pos:end="617:33"><name pos:start="617:33" pos:end="617:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="623:9" pos:end="623:21"><expr pos:start="623:9" pos:end="623:20"><name pos:start="623:9" pos:end="623:16"><name pos:start="623:9" pos:end="623:9">v</name><operator pos:start="623:10" pos:end="623:11">-&gt;</operator><name pos:start="623:12" pos:end="623:16">ttfrm</name></name> <operator pos:start="623:18" pos:end="623:18">=</operator> <literal type="number" pos:start="623:20" pos:end="623:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="623:23" pos:end="623:42">//FIXME Is that so ?</comment>

        <if_stmt pos:start="625:9" pos:end="641:9"><if pos:start="625:9" pos:end="635:9">if <condition pos:start="625:12" pos:end="625:27">(<expr pos:start="625:13" pos:end="625:26"><name pos:start="625:13" pos:end="625:26"><name pos:start="625:13" pos:end="625:13">v</name><operator pos:start="625:14" pos:end="625:15">-&gt;</operator><name pos:start="625:16" pos:end="625:26">vstransform</name></name></expr>)</condition> <block pos:start="625:29" pos:end="635:9">{<block_content pos:start="627:13" pos:end="633:13">

            <expr_stmt pos:start="627:13" pos:end="627:37"><expr pos:start="627:13" pos:end="627:36"><name pos:start="627:13" pos:end="627:20"><name pos:start="627:13" pos:end="627:13">v</name><operator pos:start="627:14" pos:end="627:15">-&gt;</operator><name pos:start="627:16" pos:end="627:20">ttmbf</name></name> <operator pos:start="627:22" pos:end="627:22">=</operator> <call pos:start="627:24" pos:end="627:36"><name pos:start="627:24" pos:end="627:32">get_bits1</name><argument_list pos:start="627:33" pos:end="627:36">(<argument pos:start="627:34" pos:end="627:35"><expr pos:start="627:34" pos:end="627:35"><name pos:start="627:34" pos:end="627:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="629:13" pos:end="633:13"><if pos:start="629:13" pos:end="633:13">if <condition pos:start="629:16" pos:end="629:25">(<expr pos:start="629:17" pos:end="629:24"><name pos:start="629:17" pos:end="629:24"><name pos:start="629:17" pos:end="629:17">v</name><operator pos:start="629:18" pos:end="629:19">-&gt;</operator><name pos:start="629:20" pos:end="629:24">ttmbf</name></name></expr>)</condition> <block pos:start="629:27" pos:end="633:13">{<block_content pos:start="631:17" pos:end="631:63">

                <expr_stmt pos:start="631:17" pos:end="631:63"><expr pos:start="631:17" pos:end="631:62"><name pos:start="631:17" pos:end="631:24"><name pos:start="631:17" pos:end="631:17">v</name><operator pos:start="631:18" pos:end="631:19">-&gt;</operator><name pos:start="631:20" pos:end="631:24">ttfrm</name></name> <operator pos:start="631:26" pos:end="631:26">=</operator> <name pos:start="631:28" pos:end="631:62"><name pos:start="631:28" pos:end="631:45">ff_vc1_ttfrm_to_tt</name><index pos:start="631:46" pos:end="631:62">[<expr pos:start="631:47" pos:end="631:61"><call pos:start="631:47" pos:end="631:61"><name pos:start="631:47" pos:end="631:54">get_bits</name><argument_list pos:start="631:55" pos:end="631:61">(<argument pos:start="631:56" pos:end="631:57"><expr pos:start="631:56" pos:end="631:57"><name pos:start="631:56" pos:end="631:57">gb</name></expr></argument>, <argument pos:start="631:60" pos:end="631:60"><expr pos:start="631:60" pos:end="631:60"><literal type="number" pos:start="631:60" pos:end="631:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="635:11" pos:end="641:9">else <block pos:start="635:16" pos:end="641:9">{<block_content pos:start="637:13" pos:end="639:30">

            <expr_stmt pos:start="637:13" pos:end="637:25"><expr pos:start="637:13" pos:end="637:24"><name pos:start="637:13" pos:end="637:20"><name pos:start="637:13" pos:end="637:13">v</name><operator pos:start="637:14" pos:end="637:15">-&gt;</operator><name pos:start="637:16" pos:end="637:20">ttmbf</name></name> <operator pos:start="637:22" pos:end="637:22">=</operator> <literal type="number" pos:start="637:24" pos:end="637:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:30"><expr pos:start="639:13" pos:end="639:29"><name pos:start="639:13" pos:end="639:20"><name pos:start="639:13" pos:end="639:13">v</name><operator pos:start="639:14" pos:end="639:15">-&gt;</operator><name pos:start="639:16" pos:end="639:20">ttfrm</name></name> <operator pos:start="639:22" pos:end="639:22">=</operator> <name pos:start="639:24" pos:end="639:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:27">case <expr pos:start="645:10" pos:end="645:26"><name pos:start="645:10" pos:end="645:26">AV_PICTURE_TYPE_B</name></expr>:</case>

        <comment type="line" pos:start="647:9" pos:end="647:62">// TODO: implement interlaced frame B picture decoding</comment>

        <if_stmt pos:start="649:9" pos:end="651:22"><if pos:start="649:9" pos:end="651:22">if <condition pos:start="649:12" pos:end="649:24">(<expr pos:start="649:13" pos:end="649:23"><name pos:start="649:13" pos:end="649:18"><name pos:start="649:13" pos:end="649:13">v</name><operator pos:start="649:14" pos:end="649:15">-&gt;</operator><name pos:start="649:16" pos:end="649:18">fcm</name></name> <operator pos:start="649:20" pos:end="649:21">==</operator> <literal type="number" pos:start="649:23" pos:end="649:23">1</literal></expr>)</condition><block type="pseudo" pos:start="651:13" pos:end="651:22"><block_content pos:start="651:13" pos:end="651:22">

            <return pos:start="651:13" pos:end="651:22">return <expr pos:start="651:20" pos:end="651:21"><operator pos:start="651:20" pos:end="651:20">-</operator><literal type="number" pos:start="651:21" pos:end="651:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="653:9" pos:end="659:27"><if pos:start="653:9" pos:end="655:45">if <condition pos:start="653:12" pos:end="653:27">(<expr pos:start="653:13" pos:end="653:26"><name pos:start="653:13" pos:end="653:26"><name pos:start="653:13" pos:end="653:13">v</name><operator pos:start="653:14" pos:end="653:15">-&gt;</operator><name pos:start="653:16" pos:end="653:26">extended_mv</name></name></expr>)</condition><block type="pseudo" pos:start="655:13" pos:end="655:45"><block_content pos:start="655:13" pos:end="655:45">

            <expr_stmt pos:start="655:13" pos:end="655:45"><expr pos:start="655:13" pos:end="655:44"><name pos:start="655:13" pos:end="655:22"><name pos:start="655:13" pos:end="655:13">v</name><operator pos:start="655:14" pos:end="655:15">-&gt;</operator><name pos:start="655:16" pos:end="655:22">mvrange</name></name> <operator pos:start="655:24" pos:end="655:24">=</operator> <call pos:start="655:26" pos:end="655:44"><name pos:start="655:26" pos:end="655:34">get_unary</name><argument_list pos:start="655:35" pos:end="655:44">(<argument pos:start="655:36" pos:end="655:37"><expr pos:start="655:36" pos:end="655:37"><name pos:start="655:36" pos:end="655:37">gb</name></expr></argument>, <argument pos:start="655:40" pos:end="655:40"><expr pos:start="655:40" pos:end="655:40"><literal type="number" pos:start="655:40" pos:end="655:40">0</literal></expr></argument>, <argument pos:start="655:43" pos:end="655:43"><expr pos:start="655:43" pos:end="655:43"><literal type="number" pos:start="655:43" pos:end="655:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="657:9" pos:end="659:27">else<block type="pseudo" pos:start="659:13" pos:end="659:27"><block_content pos:start="659:13" pos:end="659:27">

            <expr_stmt pos:start="659:13" pos:end="659:27"><expr pos:start="659:13" pos:end="659:26"><name pos:start="659:13" pos:end="659:22"><name pos:start="659:13" pos:end="659:13">v</name><operator pos:start="659:14" pos:end="659:15">-&gt;</operator><name pos:start="659:16" pos:end="659:22">mvrange</name></name> <operator pos:start="659:24" pos:end="659:24">=</operator> <literal type="number" pos:start="659:26" pos:end="659:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:56"><expr pos:start="661:9" pos:end="661:55"><name pos:start="661:9" pos:end="661:14"><name pos:start="661:9" pos:end="661:9">v</name><operator pos:start="661:10" pos:end="661:11">-&gt;</operator><name pos:start="661:12" pos:end="661:14">k_x</name></name>     <operator pos:start="661:20" pos:end="661:20">=</operator> <name pos:start="661:22" pos:end="661:31"><name pos:start="661:22" pos:end="661:22">v</name><operator pos:start="661:23" pos:end="661:24">-&gt;</operator><name pos:start="661:25" pos:end="661:31">mvrange</name></name> <operator pos:start="661:33" pos:end="661:33">+</operator> <literal type="number" pos:start="661:35" pos:end="661:37">9</literal> <operator pos:start="661:37" pos:end="661:37">+</operator> <operator pos:start="661:39" pos:end="661:39">(</operator><name pos:start="661:40" pos:end="661:49"><name pos:start="661:40" pos:end="661:40">v</name><operator pos:start="661:41" pos:end="661:42">-&gt;</operator><name pos:start="661:43" pos:end="661:49">mvrange</name></name> <operator pos:start="661:51" pos:end="661:52">&gt;&gt;</operator> <literal type="number" pos:start="661:54" pos:end="661:54">1</literal><operator pos:start="661:55" pos:end="661:55">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="661:58" pos:end="661:80">//k_x can be 9 10 12 13</comment>

        <expr_stmt pos:start="663:9" pos:end="663:36"><expr pos:start="663:9" pos:end="663:35"><name pos:start="663:9" pos:end="663:14"><name pos:start="663:9" pos:end="663:9">v</name><operator pos:start="663:10" pos:end="663:11">-&gt;</operator><name pos:start="663:12" pos:end="663:14">k_y</name></name>     <operator pos:start="663:20" pos:end="663:20">=</operator> <name pos:start="663:22" pos:end="663:31"><name pos:start="663:22" pos:end="663:22">v</name><operator pos:start="663:23" pos:end="663:24">-&gt;</operator><name pos:start="663:25" pos:end="663:31">mvrange</name></name> <operator pos:start="663:33" pos:end="663:33">+</operator> <literal type="number" pos:start="663:35" pos:end="663:35">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="663:38" pos:end="663:59">//k_y can be 8 9 10 11</comment>

        <expr_stmt pos:start="665:9" pos:end="665:39"><expr pos:start="665:9" pos:end="665:38"><name pos:start="665:9" pos:end="665:18"><name pos:start="665:9" pos:end="665:9">v</name><operator pos:start="665:10" pos:end="665:11">-&gt;</operator><name pos:start="665:12" pos:end="665:18">range_x</name></name> <operator pos:start="665:20" pos:end="665:20">=</operator> <literal type="number" pos:start="665:22" pos:end="665:22">1</literal> <operator pos:start="665:24" pos:end="665:25">&lt;&lt;</operator> <operator pos:start="665:27" pos:end="665:27">(</operator><name pos:start="665:28" pos:end="665:33"><name pos:start="665:28" pos:end="665:28">v</name><operator pos:start="665:29" pos:end="665:30">-&gt;</operator><name pos:start="665:31" pos:end="665:33">k_x</name></name> <operator pos:start="665:35" pos:end="665:35">-</operator> <literal type="number" pos:start="665:37" pos:end="665:37">1</literal><operator pos:start="665:38" pos:end="665:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="667:9" pos:end="667:39"><expr pos:start="667:9" pos:end="667:38"><name pos:start="667:9" pos:end="667:18"><name pos:start="667:9" pos:end="667:9">v</name><operator pos:start="667:10" pos:end="667:11">-&gt;</operator><name pos:start="667:12" pos:end="667:18">range_y</name></name> <operator pos:start="667:20" pos:end="667:20">=</operator> <literal type="number" pos:start="667:22" pos:end="667:22">1</literal> <operator pos:start="667:24" pos:end="667:25">&lt;&lt;</operator> <operator pos:start="667:27" pos:end="667:27">(</operator><name pos:start="667:28" pos:end="667:33"><name pos:start="667:28" pos:end="667:28">v</name><operator pos:start="667:29" pos:end="667:30">-&gt;</operator><name pos:start="667:31" pos:end="667:33">k_y</name></name> <operator pos:start="667:35" pos:end="667:35">-</operator> <literal type="number" pos:start="667:37" pos:end="667:37">1</literal><operator pos:start="667:38" pos:end="667:38">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="671:9" pos:end="681:28"><if pos:start="671:9" pos:end="673:28">if <condition pos:start="671:12" pos:end="671:22">(<expr pos:start="671:13" pos:end="671:21"><name pos:start="671:13" pos:end="671:17"><name pos:start="671:13" pos:end="671:13">v</name><operator pos:start="671:14" pos:end="671:15">-&gt;</operator><name pos:start="671:16" pos:end="671:17">pq</name></name> <operator pos:start="671:19" pos:end="671:19">&lt;</operator> <literal type="number" pos:start="671:21" pos:end="671:21">5</literal></expr>)</condition><block type="pseudo" pos:start="673:13" pos:end="673:28"><block_content pos:start="673:13" pos:end="673:28">

            <expr_stmt pos:start="673:13" pos:end="673:28"><expr pos:start="673:13" pos:end="673:27"><name pos:start="673:13" pos:end="673:23"><name pos:start="673:13" pos:end="673:13">v</name><operator pos:start="673:14" pos:end="673:15">-&gt;</operator><name pos:start="673:16" pos:end="673:23">tt_index</name></name> <operator pos:start="673:25" pos:end="673:25">=</operator> <literal type="number" pos:start="673:27" pos:end="673:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="675:9" pos:end="677:28">else if <condition pos:start="675:17" pos:end="675:28">(<expr pos:start="675:18" pos:end="675:27"><name pos:start="675:18" pos:end="675:22"><name pos:start="675:18" pos:end="675:18">v</name><operator pos:start="675:19" pos:end="675:20">-&gt;</operator><name pos:start="675:21" pos:end="675:22">pq</name></name> <operator pos:start="675:24" pos:end="675:24">&lt;</operator> <literal type="number" pos:start="675:26" pos:end="675:27">13</literal></expr>)</condition><block type="pseudo" pos:start="677:13" pos:end="677:28"><block_content pos:start="677:13" pos:end="677:28">

            <expr_stmt pos:start="677:13" pos:end="677:28"><expr pos:start="677:13" pos:end="677:27"><name pos:start="677:13" pos:end="677:23"><name pos:start="677:13" pos:end="677:13">v</name><operator pos:start="677:14" pos:end="677:15">-&gt;</operator><name pos:start="677:16" pos:end="677:23">tt_index</name></name> <operator pos:start="677:25" pos:end="677:25">=</operator> <literal type="number" pos:start="677:27" pos:end="677:27">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="679:9" pos:end="681:28">else<block type="pseudo" pos:start="681:13" pos:end="681:28"><block_content pos:start="681:13" pos:end="681:28">

            <expr_stmt pos:start="681:13" pos:end="681:28"><expr pos:start="681:13" pos:end="681:27"><name pos:start="681:13" pos:end="681:23"><name pos:start="681:13" pos:end="681:13">v</name><operator pos:start="681:14" pos:end="681:15">-&gt;</operator><name pos:start="681:16" pos:end="681:23">tt_index</name></name> <operator pos:start="681:25" pos:end="681:25">=</operator> <literal type="number" pos:start="681:27" pos:end="681:27">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="685:9" pos:end="781:9"><if pos:start="685:9" pos:end="747:9">if <condition pos:start="685:12" pos:end="685:26">(<expr pos:start="685:13" pos:end="685:25"><name pos:start="685:13" pos:end="685:25"><name pos:start="685:13" pos:end="685:13">v</name><operator pos:start="685:14" pos:end="685:15">-&gt;</operator><name pos:start="685:16" pos:end="685:25">field_mode</name></name></expr>)</condition> <block pos:start="685:28" pos:end="747:9">{<block_content pos:start="687:13" pos:end="745:26">

            <decl_stmt pos:start="687:13" pos:end="687:23"><decl pos:start="687:13" pos:end="687:22"><type pos:start="687:13" pos:end="687:15"><name pos:start="687:13" pos:end="687:15">int</name></type> <name pos:start="687:17" pos:end="687:22">mvmode</name></decl>;</decl_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:81"><expr pos:start="689:13" pos:end="689:80"><call pos:start="689:13" pos:end="689:80"><name pos:start="689:13" pos:end="689:18">av_log</name><argument_list pos:start="689:19" pos:end="689:80">(<argument pos:start="689:20" pos:end="689:29"><expr pos:start="689:20" pos:end="689:29"><name pos:start="689:20" pos:end="689:29"><name pos:start="689:20" pos:end="689:20">v</name><operator pos:start="689:21" pos:end="689:22">-&gt;</operator><name pos:start="689:23" pos:end="689:23">s</name><operator pos:start="689:24" pos:end="689:24">.</operator><name pos:start="689:25" pos:end="689:29">avctx</name></name></expr></argument>, <argument pos:start="689:32" pos:end="689:43"><expr pos:start="689:32" pos:end="689:43"><name pos:start="689:32" pos:end="689:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="689:46" pos:end="689:79"><expr pos:start="689:46" pos:end="689:79"><literal type="string" pos:start="689:46" pos:end="689:79">"B Fields do not work currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="691:13" pos:end="691:22">return <expr pos:start="691:20" pos:end="691:21"><operator pos:start="691:20" pos:end="691:20">-</operator><literal type="number" pos:start="691:21" pos:end="691:21">1</literal></expr>;</return>

            <if_stmt pos:start="693:13" pos:end="695:50"><if pos:start="693:13" pos:end="695:50">if <condition pos:start="693:16" pos:end="693:32">(<expr pos:start="693:17" pos:end="693:31"><name pos:start="693:17" pos:end="693:31"><name pos:start="693:17" pos:end="693:17">v</name><operator pos:start="693:18" pos:end="693:19">-&gt;</operator><name pos:start="693:20" pos:end="693:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="695:17" pos:end="695:50"><block_content pos:start="695:17" pos:end="695:50">

                <expr_stmt pos:start="695:17" pos:end="695:50"><expr pos:start="695:17" pos:end="695:49"><name pos:start="695:17" pos:end="695:27"><name pos:start="695:17" pos:end="695:17">v</name><operator pos:start="695:18" pos:end="695:19">-&gt;</operator><name pos:start="695:20" pos:end="695:27">dmvrange</name></name> <operator pos:start="695:29" pos:end="695:29">=</operator> <call pos:start="695:31" pos:end="695:49"><name pos:start="695:31" pos:end="695:39">get_unary</name><argument_list pos:start="695:40" pos:end="695:49">(<argument pos:start="695:41" pos:end="695:42"><expr pos:start="695:41" pos:end="695:42"><name pos:start="695:41" pos:end="695:42">gb</name></expr></argument>, <argument pos:start="695:45" pos:end="695:45"><expr pos:start="695:45" pos:end="695:45"><literal type="number" pos:start="695:45" pos:end="695:45">0</literal></expr></argument>, <argument pos:start="695:48" pos:end="695:48"><expr pos:start="695:48" pos:end="695:48"><literal type="number" pos:start="695:48" pos:end="695:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:41"><expr pos:start="697:13" pos:end="697:40"><name pos:start="697:13" pos:end="697:18">mvmode</name> <operator pos:start="697:20" pos:end="697:20">=</operator> <call pos:start="697:22" pos:end="697:40"><name pos:start="697:22" pos:end="697:30">get_unary</name><argument_list pos:start="697:31" pos:end="697:40">(<argument pos:start="697:32" pos:end="697:33"><expr pos:start="697:32" pos:end="697:33"><name pos:start="697:32" pos:end="697:33">gb</name></expr></argument>, <argument pos:start="697:36" pos:end="697:36"><expr pos:start="697:36" pos:end="697:36"><literal type="number" pos:start="697:36" pos:end="697:36">1</literal></expr></argument>, <argument pos:start="697:39" pos:end="697:39"><expr pos:start="697:39" pos:end="697:39"><literal type="number" pos:start="697:39" pos:end="697:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:44"><expr pos:start="699:13" pos:end="699:43"><name pos:start="699:13" pos:end="699:20">lowquant</name> <operator pos:start="699:22" pos:end="699:22">=</operator> <ternary pos:start="699:24" pos:end="699:43"><condition pos:start="699:24" pos:end="699:37"><expr pos:start="699:24" pos:end="699:35"><operator pos:start="699:24" pos:end="699:24">(</operator><name pos:start="699:25" pos:end="699:29"><name pos:start="699:25" pos:end="699:25">v</name><operator pos:start="699:26" pos:end="699:27">-&gt;</operator><name pos:start="699:28" pos:end="699:29">pq</name></name> <operator pos:start="699:31" pos:end="699:31">&gt;</operator> <literal type="number" pos:start="699:33" pos:end="699:34">12</literal><operator pos:start="699:35" pos:end="699:35">)</operator></expr> ?</condition><then pos:start="699:39" pos:end="699:39"> <expr pos:start="699:39" pos:end="699:39"><literal type="number" pos:start="699:39" pos:end="699:39">0</literal></expr> </then><else pos:start="699:41" pos:end="699:43">: <expr pos:start="699:43" pos:end="699:43"><literal type="number" pos:start="699:43" pos:end="699:43">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="701:13" pos:end="701:75"><expr pos:start="701:13" pos:end="701:74"><name pos:start="701:13" pos:end="701:22"><name pos:start="701:13" pos:end="701:13">v</name><operator pos:start="701:14" pos:end="701:15">-&gt;</operator><name pos:start="701:16" pos:end="701:22">mv_mode</name></name>          <operator pos:start="701:33" pos:end="701:33">=</operator> <name pos:start="701:35" pos:end="701:74"><name pos:start="701:35" pos:end="701:56">ff_vc1_mv_pmode_table2</name><index pos:start="701:57" pos:end="701:66">[<expr pos:start="701:58" pos:end="701:65"><name pos:start="701:58" pos:end="701:65">lowquant</name></expr>]</index><index pos:start="701:67" pos:end="701:74">[<expr pos:start="701:68" pos:end="701:73"><name pos:start="701:68" pos:end="701:73">mvmode</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="703:13" pos:end="703:54"><expr pos:start="703:13" pos:end="703:53"><name pos:start="703:13" pos:end="703:22"><name pos:start="703:13" pos:end="703:13">v</name><operator pos:start="703:14" pos:end="703:15">-&gt;</operator><name pos:start="703:16" pos:end="703:22">qs_last</name></name>          <operator pos:start="703:33" pos:end="703:33">=</operator> <name pos:start="703:35" pos:end="703:53"><name pos:start="703:35" pos:end="703:35">v</name><operator pos:start="703:36" pos:end="703:37">-&gt;</operator><name pos:start="703:38" pos:end="703:38">s</name><operator pos:start="703:39" pos:end="703:39">.</operator><name pos:start="703:40" pos:end="703:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="705:13" pos:end="705:98"><expr pos:start="705:13" pos:end="705:97"><name pos:start="705:13" pos:end="705:31"><name pos:start="705:13" pos:end="705:13">v</name><operator pos:start="705:14" pos:end="705:15">-&gt;</operator><name pos:start="705:16" pos:end="705:16">s</name><operator pos:start="705:17" pos:end="705:17">.</operator><name pos:start="705:18" pos:end="705:31">quarter_sample</name></name> <operator pos:start="705:33" pos:end="705:33">=</operator> <operator pos:start="705:35" pos:end="705:35">(</operator><name pos:start="705:36" pos:end="705:45"><name pos:start="705:36" pos:end="705:36">v</name><operator pos:start="705:37" pos:end="705:38">-&gt;</operator><name pos:start="705:39" pos:end="705:45">mv_mode</name></name> <operator pos:start="705:47" pos:end="705:48">==</operator> <name pos:start="705:50" pos:end="705:61">MV_PMODE_1MV</name> <operator pos:start="705:63" pos:end="705:64">||</operator> <name pos:start="705:66" pos:end="705:75"><name pos:start="705:66" pos:end="705:66">v</name><operator pos:start="705:67" pos:end="705:68">-&gt;</operator><name pos:start="705:69" pos:end="705:75">mv_mode</name></name> <operator pos:start="705:77" pos:end="705:78">==</operator> <name pos:start="705:80" pos:end="705:96">MV_PMODE_MIXED_MV</name><operator pos:start="705:97" pos:end="705:97">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:110"><expr pos:start="707:13" pos:end="707:109"><name pos:start="707:13" pos:end="707:22"><name pos:start="707:13" pos:end="707:13">v</name><operator pos:start="707:14" pos:end="707:15">-&gt;</operator><name pos:start="707:16" pos:end="707:16">s</name><operator pos:start="707:17" pos:end="707:17">.</operator><name pos:start="707:18" pos:end="707:22">mspel</name></name>          <operator pos:start="707:33" pos:end="707:33">=</operator> <operator pos:start="707:35" pos:end="707:35">!</operator><operator pos:start="707:36" pos:end="707:36">(</operator><name pos:start="707:37" pos:end="707:46"><name pos:start="707:37" pos:end="707:37">v</name><operator pos:start="707:38" pos:end="707:39">-&gt;</operator><name pos:start="707:40" pos:end="707:46">mv_mode</name></name> <operator pos:start="707:48" pos:end="707:49">==</operator> <name pos:start="707:51" pos:end="707:73">MV_PMODE_1MV_HPEL_BILIN</name> <operator pos:start="707:75" pos:end="707:76">||</operator> <name pos:start="707:78" pos:end="707:87"><name pos:start="707:78" pos:end="707:78">v</name><operator pos:start="707:79" pos:end="707:80">-&gt;</operator><name pos:start="707:81" pos:end="707:87">mv_mode</name></name> <operator pos:start="707:89" pos:end="707:90">==</operator> <name pos:start="707:92" pos:end="707:108">MV_PMODE_1MV_HPEL</name><operator pos:start="707:109" pos:end="707:109">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:79"><expr pos:start="709:13" pos:end="709:78"><name pos:start="709:13" pos:end="709:18">status</name> <operator pos:start="709:20" pos:end="709:20">=</operator> <call pos:start="709:22" pos:end="709:78"><name pos:start="709:22" pos:end="709:38">bitplane_decoding</name><argument_list pos:start="709:39" pos:end="709:78">(<argument pos:start="709:40" pos:end="709:58"><expr pos:start="709:40" pos:end="709:58"><name pos:start="709:40" pos:end="709:58"><name pos:start="709:40" pos:end="709:40">v</name><operator pos:start="709:41" pos:end="709:42">-&gt;</operator><name pos:start="709:43" pos:end="709:58">forward_mb_plane</name></name></expr></argument>, <argument pos:start="709:61" pos:end="709:74"><expr pos:start="709:61" pos:end="709:74"><operator pos:start="709:61" pos:end="709:61">&amp;</operator><name pos:start="709:62" pos:end="709:74"><name pos:start="709:62" pos:end="709:62">v</name><operator pos:start="709:63" pos:end="709:64">-&gt;</operator><name pos:start="709:65" pos:end="709:74">fmb_is_raw</name></name></expr></argument>, <argument pos:start="709:77" pos:end="709:77"><expr pos:start="709:77" pos:end="709:77"><name pos:start="709:77" pos:end="709:77">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="711:13" pos:end="713:26"><if pos:start="711:13" pos:end="713:26">if <condition pos:start="711:16" pos:end="711:27">(<expr pos:start="711:17" pos:end="711:26"><name pos:start="711:17" pos:end="711:22">status</name> <operator pos:start="711:24" pos:end="711:24">&lt;</operator> <literal type="number" pos:start="711:26" pos:end="711:26">0</literal></expr>)</condition><block type="pseudo" pos:start="713:17" pos:end="713:26"><block_content pos:start="713:17" pos:end="713:26">

                <return pos:start="713:17" pos:end="713:26">return <expr pos:start="713:24" pos:end="713:25"><operator pos:start="713:24" pos:end="713:24">-</operator><literal type="number" pos:start="713:25" pos:end="713:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="715:13" pos:end="717:67"><expr pos:start="715:13" pos:end="717:66"><call pos:start="715:13" pos:end="717:66"><name pos:start="715:13" pos:end="715:18">av_log</name><argument_list pos:start="715:19" pos:end="717:66">(<argument pos:start="715:20" pos:end="715:29"><expr pos:start="715:20" pos:end="715:29"><name pos:start="715:20" pos:end="715:29"><name pos:start="715:20" pos:end="715:20">v</name><operator pos:start="715:21" pos:end="715:22">-&gt;</operator><name pos:start="715:23" pos:end="715:23">s</name><operator pos:start="715:24" pos:end="715:24">.</operator><name pos:start="715:25" pos:end="715:29">avctx</name></name></expr></argument>, <argument pos:start="715:32" pos:end="715:43"><expr pos:start="715:32" pos:end="715:43"><name pos:start="715:32" pos:end="715:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="715:46" pos:end="717:44"><expr pos:start="715:46" pos:end="717:44"><literal type="string" pos:start="715:46" pos:end="715:79">"MB Forward Type plane encoding: "</literal>

                   <literal type="string" pos:start="717:20" pos:end="717:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="717:47" pos:end="717:55"><expr pos:start="717:47" pos:end="717:55"><name pos:start="717:47" pos:end="717:52">status</name><operator pos:start="717:53" pos:end="717:54">&gt;&gt;</operator><literal type="number" pos:start="717:55" pos:end="717:55">1</literal></expr></argument>, <argument pos:start="717:58" pos:end="717:65"><expr pos:start="717:58" pos:end="717:65"><name pos:start="717:58" pos:end="717:63">status</name><operator pos:start="717:64" pos:end="717:64">&amp;</operator><literal type="number" pos:start="717:65" pos:end="717:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="719:13" pos:end="719:40"><expr pos:start="719:13" pos:end="719:39"><name pos:start="719:13" pos:end="719:21">mbmodetab</name> <operator pos:start="719:23" pos:end="719:23">=</operator> <call pos:start="719:25" pos:end="719:39"><name pos:start="719:25" pos:end="719:32">get_bits</name><argument_list pos:start="719:33" pos:end="719:39">(<argument pos:start="719:34" pos:end="719:35"><expr pos:start="719:34" pos:end="719:35"><name pos:start="719:34" pos:end="719:35">gb</name></expr></argument>, <argument pos:start="719:38" pos:end="719:38"><expr pos:start="719:38" pos:end="719:38"><literal type="number" pos:start="719:38" pos:end="719:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="721:13" pos:end="727:69"><if pos:start="721:13" pos:end="723:69">if <condition pos:start="721:16" pos:end="721:48">(<expr pos:start="721:17" pos:end="721:47"><name pos:start="721:17" pos:end="721:26"><name pos:start="721:17" pos:end="721:17">v</name><operator pos:start="721:18" pos:end="721:19">-&gt;</operator><name pos:start="721:20" pos:end="721:26">mv_mode</name></name> <operator pos:start="721:28" pos:end="721:29">==</operator> <name pos:start="721:31" pos:end="721:47">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="723:17" pos:end="723:69"><block_content pos:start="723:17" pos:end="723:69">

                <expr_stmt pos:start="723:17" pos:end="723:69"><expr pos:start="723:17" pos:end="723:68"><name pos:start="723:17" pos:end="723:29"><name pos:start="723:17" pos:end="723:17">v</name><operator pos:start="723:18" pos:end="723:19">-&gt;</operator><name pos:start="723:20" pos:end="723:29">mbmode_vlc</name></name> <operator pos:start="723:31" pos:end="723:31">=</operator> <operator pos:start="723:33" pos:end="723:33">&amp;</operator><name pos:start="723:34" pos:end="723:68"><name pos:start="723:34" pos:end="723:57">ff_vc1_if_mmv_mbmode_vlc</name><index pos:start="723:58" pos:end="723:68">[<expr pos:start="723:59" pos:end="723:67"><name pos:start="723:59" pos:end="723:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="725:13" pos:end="727:69">else<block type="pseudo" pos:start="727:17" pos:end="727:69"><block_content pos:start="727:17" pos:end="727:69">

                <expr_stmt pos:start="727:17" pos:end="727:69"><expr pos:start="727:17" pos:end="727:68"><name pos:start="727:17" pos:end="727:29"><name pos:start="727:17" pos:end="727:17">v</name><operator pos:start="727:18" pos:end="727:19">-&gt;</operator><name pos:start="727:20" pos:end="727:29">mbmode_vlc</name></name> <operator pos:start="727:31" pos:end="727:31">=</operator> <operator pos:start="727:33" pos:end="727:33">&amp;</operator><name pos:start="727:34" pos:end="727:68"><name pos:start="727:34" pos:end="727:57">ff_vc1_if_1mv_mbmode_vlc</name><index pos:start="727:58" pos:end="727:68">[<expr pos:start="727:59" pos:end="727:67"><name pos:start="727:59" pos:end="727:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="729:13" pos:end="729:43"><expr pos:start="729:13" pos:end="729:42"><name pos:start="729:13" pos:end="729:18">imvtab</name>       <operator pos:start="729:26" pos:end="729:26">=</operator> <call pos:start="729:28" pos:end="729:42"><name pos:start="729:28" pos:end="729:35">get_bits</name><argument_list pos:start="729:36" pos:end="729:42">(<argument pos:start="729:37" pos:end="729:38"><expr pos:start="729:37" pos:end="729:38"><name pos:start="729:37" pos:end="729:38">gb</name></expr></argument>, <argument pos:start="729:41" pos:end="729:41"><expr pos:start="729:41" pos:end="729:41"><literal type="number" pos:start="729:41" pos:end="729:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="731:13" pos:end="731:59"><expr pos:start="731:13" pos:end="731:58"><name pos:start="731:13" pos:end="731:22"><name pos:start="731:13" pos:end="731:13">v</name><operator pos:start="731:14" pos:end="731:15">-&gt;</operator><name pos:start="731:16" pos:end="731:22">imv_vlc</name></name>   <operator pos:start="731:26" pos:end="731:26">=</operator> <operator pos:start="731:28" pos:end="731:28">&amp;</operator><name pos:start="731:29" pos:end="731:58"><name pos:start="731:29" pos:end="731:50">ff_vc1_2ref_mvdata_vlc</name><index pos:start="731:51" pos:end="731:58">[<expr pos:start="731:52" pos:end="731:57"><name pos:start="731:52" pos:end="731:57">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:43"><expr pos:start="733:13" pos:end="733:42"><name pos:start="733:13" pos:end="733:19">icbptab</name>      <operator pos:start="733:26" pos:end="733:26">=</operator> <call pos:start="733:28" pos:end="733:42"><name pos:start="733:28" pos:end="733:35">get_bits</name><argument_list pos:start="733:36" pos:end="733:42">(<argument pos:start="733:37" pos:end="733:38"><expr pos:start="733:37" pos:end="733:38"><name pos:start="733:37" pos:end="733:38">gb</name></expr></argument>, <argument pos:start="733:41" pos:end="733:41"><expr pos:start="733:41" pos:end="733:41"><literal type="number" pos:start="733:41" pos:end="733:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="735:13" pos:end="735:55"><expr pos:start="735:13" pos:end="735:54"><name pos:start="735:13" pos:end="735:24"><name pos:start="735:13" pos:end="735:13">v</name><operator pos:start="735:14" pos:end="735:15">-&gt;</operator><name pos:start="735:16" pos:end="735:24">cbpcy_vlc</name></name> <operator pos:start="735:26" pos:end="735:26">=</operator> <operator pos:start="735:28" pos:end="735:28">&amp;</operator><name pos:start="735:29" pos:end="735:54"><name pos:start="735:29" pos:end="735:45">ff_vc1_icbpcy_vlc</name><index pos:start="735:46" pos:end="735:54">[<expr pos:start="735:47" pos:end="735:53"><name pos:start="735:47" pos:end="735:53">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="737:13" pos:end="743:13"><if pos:start="737:13" pos:end="743:13">if <condition pos:start="737:16" pos:end="737:48">(<expr pos:start="737:17" pos:end="737:47"><name pos:start="737:17" pos:end="737:26"><name pos:start="737:17" pos:end="737:17">v</name><operator pos:start="737:18" pos:end="737:19">-&gt;</operator><name pos:start="737:20" pos:end="737:26">mv_mode</name></name> <operator pos:start="737:28" pos:end="737:29">==</operator> <name pos:start="737:31" pos:end="737:47">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="737:50" pos:end="743:13">{<block_content pos:start="739:17" pos:end="741:77">

                <expr_stmt pos:start="739:17" pos:end="739:50"><expr pos:start="739:17" pos:end="739:49"><name pos:start="739:17" pos:end="739:27">fourmvbptab</name>     <operator pos:start="739:33" pos:end="739:33">=</operator> <call pos:start="739:35" pos:end="739:49"><name pos:start="739:35" pos:end="739:42">get_bits</name><argument_list pos:start="739:43" pos:end="739:49">(<argument pos:start="739:44" pos:end="739:45"><expr pos:start="739:44" pos:end="739:45"><name pos:start="739:44" pos:end="739:45">gb</name></expr></argument>, <argument pos:start="739:48" pos:end="739:48"><expr pos:start="739:48" pos:end="739:48"><literal type="number" pos:start="739:48" pos:end="739:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="741:17" pos:end="741:77"><expr pos:start="741:17" pos:end="741:76"><name pos:start="741:17" pos:end="741:31"><name pos:start="741:17" pos:end="741:17">v</name><operator pos:start="741:18" pos:end="741:19">-&gt;</operator><name pos:start="741:20" pos:end="741:31">fourmvbp_vlc</name></name> <operator pos:start="741:33" pos:end="741:33">=</operator> <operator pos:start="741:35" pos:end="741:35">&amp;</operator><name pos:start="741:36" pos:end="741:76"><name pos:start="741:36" pos:end="741:63">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="741:64" pos:end="741:76">[<expr pos:start="741:65" pos:end="741:75"><name pos:start="741:65" pos:end="741:75">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="745:13" pos:end="745:26"><expr pos:start="745:13" pos:end="745:25"><name pos:start="745:13" pos:end="745:21"><name pos:start="745:13" pos:end="745:13">v</name><operator pos:start="745:14" pos:end="745:15">-&gt;</operator><name pos:start="745:16" pos:end="745:21">numref</name></name> <operator pos:start="745:23" pos:end="745:23">=</operator> <literal type="number" pos:start="745:25" pos:end="745:25">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="745:28" pos:end="745:74">// interlaced field B pictures are always 2-ref</comment>

        </block_content>}</block></if> <else pos:start="747:11" pos:end="781:9">else <block pos:start="747:16" pos:end="781:9">{<block_content pos:start="749:13" pos:end="779:64">

            <expr_stmt pos:start="749:13" pos:end="749:89"><expr pos:start="749:13" pos:end="749:88"><name pos:start="749:13" pos:end="749:22"><name pos:start="749:13" pos:end="749:13">v</name><operator pos:start="749:14" pos:end="749:15">-&gt;</operator><name pos:start="749:16" pos:end="749:22">mv_mode</name></name>          <operator pos:start="749:33" pos:end="749:33">=</operator> <ternary pos:start="749:35" pos:end="749:88"><condition pos:start="749:35" pos:end="749:49"><expr pos:start="749:35" pos:end="749:47"><call pos:start="749:35" pos:end="749:47"><name pos:start="749:35" pos:end="749:43">get_bits1</name><argument_list pos:start="749:44" pos:end="749:47">(<argument pos:start="749:45" pos:end="749:46"><expr pos:start="749:45" pos:end="749:46"><name pos:start="749:45" pos:end="749:46">gb</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="749:51" pos:end="749:62"> <expr pos:start="749:51" pos:end="749:62"><name pos:start="749:51" pos:end="749:62">MV_PMODE_1MV</name></expr> </then><else pos:start="749:64" pos:end="749:88">: <expr pos:start="749:66" pos:end="749:88"><name pos:start="749:66" pos:end="749:88">MV_PMODE_1MV_HPEL_BILIN</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="751:13" pos:end="751:54"><expr pos:start="751:13" pos:end="751:53"><name pos:start="751:13" pos:end="751:22"><name pos:start="751:13" pos:end="751:13">v</name><operator pos:start="751:14" pos:end="751:15">-&gt;</operator><name pos:start="751:16" pos:end="751:22">qs_last</name></name>          <operator pos:start="751:33" pos:end="751:33">=</operator> <name pos:start="751:35" pos:end="751:53"><name pos:start="751:35" pos:end="751:35">v</name><operator pos:start="751:36" pos:end="751:37">-&gt;</operator><name pos:start="751:38" pos:end="751:38">s</name><operator pos:start="751:39" pos:end="751:39">.</operator><name pos:start="751:40" pos:end="751:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:63"><expr pos:start="753:13" pos:end="753:62"><name pos:start="753:13" pos:end="753:31"><name pos:start="753:13" pos:end="753:13">v</name><operator pos:start="753:14" pos:end="753:15">-&gt;</operator><name pos:start="753:16" pos:end="753:16">s</name><operator pos:start="753:17" pos:end="753:17">.</operator><name pos:start="753:18" pos:end="753:31">quarter_sample</name></name> <operator pos:start="753:33" pos:end="753:33">=</operator> <operator pos:start="753:35" pos:end="753:35">(</operator><name pos:start="753:36" pos:end="753:45"><name pos:start="753:36" pos:end="753:36">v</name><operator pos:start="753:37" pos:end="753:38">-&gt;</operator><name pos:start="753:39" pos:end="753:45">mv_mode</name></name> <operator pos:start="753:47" pos:end="753:48">==</operator> <name pos:start="753:50" pos:end="753:61">MV_PMODE_1MV</name><operator pos:start="753:62" pos:end="753:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:54"><expr pos:start="755:13" pos:end="755:53"><name pos:start="755:13" pos:end="755:22"><name pos:start="755:13" pos:end="755:13">v</name><operator pos:start="755:14" pos:end="755:15">-&gt;</operator><name pos:start="755:16" pos:end="755:16">s</name><operator pos:start="755:17" pos:end="755:17">.</operator><name pos:start="755:18" pos:end="755:22">mspel</name></name>          <operator pos:start="755:33" pos:end="755:33">=</operator> <name pos:start="755:35" pos:end="755:53"><name pos:start="755:35" pos:end="755:35">v</name><operator pos:start="755:36" pos:end="755:37">-&gt;</operator><name pos:start="755:38" pos:end="755:38">s</name><operator pos:start="755:39" pos:end="755:39">.</operator><name pos:start="755:40" pos:end="755:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="757:13" pos:end="757:91"><expr pos:start="757:13" pos:end="757:90"><name pos:start="757:13" pos:end="757:18">status</name>              <operator pos:start="757:33" pos:end="757:33">=</operator> <call pos:start="757:35" pos:end="757:90"><name pos:start="757:35" pos:end="757:51">bitplane_decoding</name><argument_list pos:start="757:52" pos:end="757:90">(<argument pos:start="757:53" pos:end="757:70"><expr pos:start="757:53" pos:end="757:70"><name pos:start="757:53" pos:end="757:70"><name pos:start="757:53" pos:end="757:53">v</name><operator pos:start="757:54" pos:end="757:55">-&gt;</operator><name pos:start="757:56" pos:end="757:70">direct_mb_plane</name></name></expr></argument>, <argument pos:start="757:73" pos:end="757:86"><expr pos:start="757:73" pos:end="757:86"><operator pos:start="757:73" pos:end="757:73">&amp;</operator><name pos:start="757:74" pos:end="757:86"><name pos:start="757:74" pos:end="757:74">v</name><operator pos:start="757:75" pos:end="757:76">-&gt;</operator><name pos:start="757:77" pos:end="757:86">dmb_is_raw</name></name></expr></argument>, <argument pos:start="757:89" pos:end="757:89"><expr pos:start="757:89" pos:end="757:89"><name pos:start="757:89" pos:end="757:89">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="759:13" pos:end="761:26"><if pos:start="759:13" pos:end="761:26">if <condition pos:start="759:16" pos:end="759:27">(<expr pos:start="759:17" pos:end="759:26"><name pos:start="759:17" pos:end="759:22">status</name> <operator pos:start="759:24" pos:end="759:24">&lt;</operator> <literal type="number" pos:start="759:26" pos:end="759:26">0</literal></expr>)</condition><block type="pseudo" pos:start="761:17" pos:end="761:26"><block_content pos:start="761:17" pos:end="761:26">

                <return pos:start="761:17" pos:end="761:26">return <expr pos:start="761:24" pos:end="761:25"><operator pos:start="761:24" pos:end="761:24">-</operator><literal type="number" pos:start="761:25" pos:end="761:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="763:13" pos:end="765:67"><expr pos:start="763:13" pos:end="765:66"><call pos:start="763:13" pos:end="765:66"><name pos:start="763:13" pos:end="763:18">av_log</name><argument_list pos:start="763:19" pos:end="765:66">(<argument pos:start="763:20" pos:end="763:29"><expr pos:start="763:20" pos:end="763:29"><name pos:start="763:20" pos:end="763:29"><name pos:start="763:20" pos:end="763:20">v</name><operator pos:start="763:21" pos:end="763:22">-&gt;</operator><name pos:start="763:23" pos:end="763:23">s</name><operator pos:start="763:24" pos:end="763:24">.</operator><name pos:start="763:25" pos:end="763:29">avctx</name></name></expr></argument>, <argument pos:start="763:32" pos:end="763:43"><expr pos:start="763:32" pos:end="763:43"><name pos:start="763:32" pos:end="763:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="763:46" pos:end="765:44"><expr pos:start="763:46" pos:end="765:44"><literal type="string" pos:start="763:46" pos:end="763:78">"MB Direct Type plane encoding: "</literal>

                   <literal type="string" pos:start="765:20" pos:end="765:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="765:47" pos:end="765:55"><expr pos:start="765:47" pos:end="765:55"><name pos:start="765:47" pos:end="765:52">status</name><operator pos:start="765:53" pos:end="765:54">&gt;&gt;</operator><literal type="number" pos:start="765:55" pos:end="765:55">1</literal></expr></argument>, <argument pos:start="765:58" pos:end="765:65"><expr pos:start="765:58" pos:end="765:65"><name pos:start="765:58" pos:end="765:63">status</name><operator pos:start="765:64" pos:end="765:64">&amp;</operator><literal type="number" pos:start="765:65" pos:end="765:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="767:13" pos:end="767:78"><expr pos:start="767:13" pos:end="767:77"><name pos:start="767:13" pos:end="767:18">status</name> <operator pos:start="767:20" pos:end="767:20">=</operator> <call pos:start="767:22" pos:end="767:77"><name pos:start="767:22" pos:end="767:38">bitplane_decoding</name><argument_list pos:start="767:39" pos:end="767:77">(<argument pos:start="767:40" pos:end="767:56"><expr pos:start="767:40" pos:end="767:56"><name pos:start="767:40" pos:end="767:56"><name pos:start="767:40" pos:end="767:40">v</name><operator pos:start="767:41" pos:end="767:42">-&gt;</operator><name pos:start="767:43" pos:end="767:43">s</name><operator pos:start="767:44" pos:end="767:44">.</operator><name pos:start="767:45" pos:end="767:56">mbskip_table</name></name></expr></argument>, <argument pos:start="767:59" pos:end="767:73"><expr pos:start="767:59" pos:end="767:73"><operator pos:start="767:59" pos:end="767:59">&amp;</operator><name pos:start="767:60" pos:end="767:73"><name pos:start="767:60" pos:end="767:60">v</name><operator pos:start="767:61" pos:end="767:62">-&gt;</operator><name pos:start="767:63" pos:end="767:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="767:76" pos:end="767:76"><expr pos:start="767:76" pos:end="767:76"><name pos:start="767:76" pos:end="767:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="769:13" pos:end="771:26"><if pos:start="769:13" pos:end="771:26">if <condition pos:start="769:16" pos:end="769:27">(<expr pos:start="769:17" pos:end="769:26"><name pos:start="769:17" pos:end="769:22">status</name> <operator pos:start="769:24" pos:end="769:24">&lt;</operator> <literal type="number" pos:start="769:26" pos:end="769:26">0</literal></expr>)</condition><block type="pseudo" pos:start="771:17" pos:end="771:26"><block_content pos:start="771:17" pos:end="771:26">

                <return pos:start="771:17" pos:end="771:26">return <expr pos:start="771:24" pos:end="771:25"><operator pos:start="771:24" pos:end="771:24">-</operator><literal type="number" pos:start="771:25" pos:end="771:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="773:13" pos:end="775:67"><expr pos:start="773:13" pos:end="775:66"><call pos:start="773:13" pos:end="775:66"><name pos:start="773:13" pos:end="773:18">av_log</name><argument_list pos:start="773:19" pos:end="775:66">(<argument pos:start="773:20" pos:end="773:29"><expr pos:start="773:20" pos:end="773:29"><name pos:start="773:20" pos:end="773:29"><name pos:start="773:20" pos:end="773:20">v</name><operator pos:start="773:21" pos:end="773:22">-&gt;</operator><name pos:start="773:23" pos:end="773:23">s</name><operator pos:start="773:24" pos:end="773:24">.</operator><name pos:start="773:25" pos:end="773:29">avctx</name></name></expr></argument>, <argument pos:start="773:32" pos:end="773:43"><expr pos:start="773:32" pos:end="773:43"><name pos:start="773:32" pos:end="773:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="773:46" pos:end="775:44"><expr pos:start="773:46" pos:end="775:44"><literal type="string" pos:start="773:46" pos:end="773:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="775:20" pos:end="775:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="775:47" pos:end="775:55"><expr pos:start="775:47" pos:end="775:55"><name pos:start="775:47" pos:end="775:52">status</name><operator pos:start="775:53" pos:end="775:54">&gt;&gt;</operator><literal type="number" pos:start="775:55" pos:end="775:55">1</literal></expr></argument>, <argument pos:start="775:58" pos:end="775:65"><expr pos:start="775:58" pos:end="775:65"><name pos:start="775:58" pos:end="775:63">status</name><operator pos:start="775:64" pos:end="775:64">&amp;</operator><literal type="number" pos:start="775:65" pos:end="775:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="777:13" pos:end="777:50"><expr pos:start="777:13" pos:end="777:49"><name pos:start="777:13" pos:end="777:31"><name pos:start="777:13" pos:end="777:13">v</name><operator pos:start="777:14" pos:end="777:15">-&gt;</operator><name pos:start="777:16" pos:end="777:16">s</name><operator pos:start="777:17" pos:end="777:17">.</operator><name pos:start="777:18" pos:end="777:31">mv_table_index</name></name> <operator pos:start="777:33" pos:end="777:33">=</operator> <call pos:start="777:35" pos:end="777:49"><name pos:start="777:35" pos:end="777:42">get_bits</name><argument_list pos:start="777:43" pos:end="777:49">(<argument pos:start="777:44" pos:end="777:45"><expr pos:start="777:44" pos:end="777:45"><name pos:start="777:44" pos:end="777:45">gb</name></expr></argument>, <argument pos:start="777:48" pos:end="777:48"><expr pos:start="777:48" pos:end="777:48"><literal type="number" pos:start="777:48" pos:end="777:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="779:13" pos:end="779:64"><expr pos:start="779:13" pos:end="779:63"><name pos:start="779:13" pos:end="779:24"><name pos:start="779:13" pos:end="779:13">v</name><operator pos:start="779:14" pos:end="779:15">-&gt;</operator><name pos:start="779:16" pos:end="779:24">cbpcy_vlc</name></name> <operator pos:start="779:26" pos:end="779:26">=</operator> <operator pos:start="779:28" pos:end="779:28">&amp;</operator><name pos:start="779:29" pos:end="779:63"><name pos:start="779:29" pos:end="779:46">ff_vc1_cbpcy_p_vlc</name><index pos:start="779:47" pos:end="779:63">[<expr pos:start="779:48" pos:end="779:62"><call pos:start="779:48" pos:end="779:62"><name pos:start="779:48" pos:end="779:55">get_bits</name><argument_list pos:start="779:56" pos:end="779:62">(<argument pos:start="779:57" pos:end="779:58"><expr pos:start="779:57" pos:end="779:58"><name pos:start="779:57" pos:end="779:58">gb</name></expr></argument>, <argument pos:start="779:61" pos:end="779:61"><expr pos:start="779:61" pos:end="779:61"><literal type="number" pos:start="779:61" pos:end="779:61">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="785:9" pos:end="791:9"><if pos:start="785:9" pos:end="791:9">if <condition pos:start="785:12" pos:end="785:22">(<expr pos:start="785:13" pos:end="785:21"><name pos:start="785:13" pos:end="785:21"><name pos:start="785:13" pos:end="785:13">v</name><operator pos:start="785:14" pos:end="785:15">-&gt;</operator><name pos:start="785:16" pos:end="785:21">dquant</name></name></expr>)</condition> <block pos:start="785:24" pos:end="791:9">{<block_content pos:start="787:13" pos:end="789:35">

            <expr_stmt pos:start="787:13" pos:end="787:66"><expr pos:start="787:13" pos:end="787:65"><call pos:start="787:13" pos:end="787:65"><name pos:start="787:13" pos:end="787:18">av_log</name><argument_list pos:start="787:19" pos:end="787:65">(<argument pos:start="787:20" pos:end="787:29"><expr pos:start="787:20" pos:end="787:29"><name pos:start="787:20" pos:end="787:29"><name pos:start="787:20" pos:end="787:20">v</name><operator pos:start="787:21" pos:end="787:22">-&gt;</operator><name pos:start="787:23" pos:end="787:23">s</name><operator pos:start="787:24" pos:end="787:24">.</operator><name pos:start="787:25" pos:end="787:29">avctx</name></name></expr></argument>, <argument pos:start="787:32" pos:end="787:43"><expr pos:start="787:32" pos:end="787:43"><name pos:start="787:32" pos:end="787:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="787:46" pos:end="787:64"><expr pos:start="787:46" pos:end="787:64"><literal type="string" pos:start="787:46" pos:end="787:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="789:13" pos:end="789:35"><expr pos:start="789:13" pos:end="789:34"><call pos:start="789:13" pos:end="789:34"><name pos:start="789:13" pos:end="789:31">vop_dquant_decoding</name><argument_list pos:start="789:32" pos:end="789:34">(<argument pos:start="789:33" pos:end="789:33"><expr pos:start="789:33" pos:end="789:33"><name pos:start="789:33" pos:end="789:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="795:9" pos:end="795:21"><expr pos:start="795:9" pos:end="795:20"><name pos:start="795:9" pos:end="795:16"><name pos:start="795:9" pos:end="795:9">v</name><operator pos:start="795:10" pos:end="795:11">-&gt;</operator><name pos:start="795:12" pos:end="795:16">ttfrm</name></name> <operator pos:start="795:18" pos:end="795:18">=</operator> <literal type="number" pos:start="795:20" pos:end="795:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="797:9" pos:end="813:9"><if pos:start="797:9" pos:end="807:9">if <condition pos:start="797:12" pos:end="797:27">(<expr pos:start="797:13" pos:end="797:26"><name pos:start="797:13" pos:end="797:26"><name pos:start="797:13" pos:end="797:13">v</name><operator pos:start="797:14" pos:end="797:15">-&gt;</operator><name pos:start="797:16" pos:end="797:26">vstransform</name></name></expr>)</condition> <block pos:start="797:29" pos:end="807:9">{<block_content pos:start="799:13" pos:end="805:13">

            <expr_stmt pos:start="799:13" pos:end="799:37"><expr pos:start="799:13" pos:end="799:36"><name pos:start="799:13" pos:end="799:20"><name pos:start="799:13" pos:end="799:13">v</name><operator pos:start="799:14" pos:end="799:15">-&gt;</operator><name pos:start="799:16" pos:end="799:20">ttmbf</name></name> <operator pos:start="799:22" pos:end="799:22">=</operator> <call pos:start="799:24" pos:end="799:36"><name pos:start="799:24" pos:end="799:32">get_bits1</name><argument_list pos:start="799:33" pos:end="799:36">(<argument pos:start="799:34" pos:end="799:35"><expr pos:start="799:34" pos:end="799:35"><name pos:start="799:34" pos:end="799:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="801:13" pos:end="805:13"><if pos:start="801:13" pos:end="805:13">if <condition pos:start="801:16" pos:end="801:25">(<expr pos:start="801:17" pos:end="801:24"><name pos:start="801:17" pos:end="801:24"><name pos:start="801:17" pos:end="801:17">v</name><operator pos:start="801:18" pos:end="801:19">-&gt;</operator><name pos:start="801:20" pos:end="801:24">ttmbf</name></name></expr>)</condition> <block pos:start="801:27" pos:end="805:13">{<block_content pos:start="803:17" pos:end="803:63">

                <expr_stmt pos:start="803:17" pos:end="803:63"><expr pos:start="803:17" pos:end="803:62"><name pos:start="803:17" pos:end="803:24"><name pos:start="803:17" pos:end="803:17">v</name><operator pos:start="803:18" pos:end="803:19">-&gt;</operator><name pos:start="803:20" pos:end="803:24">ttfrm</name></name> <operator pos:start="803:26" pos:end="803:26">=</operator> <name pos:start="803:28" pos:end="803:62"><name pos:start="803:28" pos:end="803:45">ff_vc1_ttfrm_to_tt</name><index pos:start="803:46" pos:end="803:62">[<expr pos:start="803:47" pos:end="803:61"><call pos:start="803:47" pos:end="803:61"><name pos:start="803:47" pos:end="803:54">get_bits</name><argument_list pos:start="803:55" pos:end="803:61">(<argument pos:start="803:56" pos:end="803:57"><expr pos:start="803:56" pos:end="803:57"><name pos:start="803:56" pos:end="803:57">gb</name></expr></argument>, <argument pos:start="803:60" pos:end="803:60"><expr pos:start="803:60" pos:end="803:60"><literal type="number" pos:start="803:60" pos:end="803:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="807:11" pos:end="813:9">else <block pos:start="807:16" pos:end="813:9">{<block_content pos:start="809:13" pos:end="811:30">

            <expr_stmt pos:start="809:13" pos:end="809:25"><expr pos:start="809:13" pos:end="809:24"><name pos:start="809:13" pos:end="809:20"><name pos:start="809:13" pos:end="809:13">v</name><operator pos:start="809:14" pos:end="809:15">-&gt;</operator><name pos:start="809:16" pos:end="809:20">ttmbf</name></name> <operator pos:start="809:22" pos:end="809:22">=</operator> <literal type="number" pos:start="809:24" pos:end="809:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:30"><expr pos:start="811:13" pos:end="811:29"><name pos:start="811:13" pos:end="811:20"><name pos:start="811:13" pos:end="811:13">v</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:20">ttfrm</name></name> <operator pos:start="811:22" pos:end="811:22">=</operator> <name pos:start="811:24" pos:end="811:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="815:9" pos:end="815:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="821:5" pos:end="821:19">/* AC Syntax */</comment>

    <expr_stmt pos:start="823:5" pos:end="823:40"><expr pos:start="823:5" pos:end="823:39"><name pos:start="823:5" pos:end="823:23"><name pos:start="823:5" pos:end="823:5">v</name><operator pos:start="823:6" pos:end="823:7">-&gt;</operator><name pos:start="823:8" pos:end="823:23">c_ac_table_index</name></name> <operator pos:start="823:25" pos:end="823:25">=</operator> <call pos:start="823:27" pos:end="823:39"><name pos:start="823:27" pos:end="823:35">decode012</name><argument_list pos:start="823:36" pos:end="823:39">(<argument pos:start="823:37" pos:end="823:38"><expr pos:start="823:37" pos:end="823:38"><name pos:start="823:37" pos:end="823:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="825:5" pos:end="829:5"><if pos:start="825:5" pos:end="829:5">if <condition pos:start="825:8" pos:end="825:84">(<expr pos:start="825:9" pos:end="825:83"><name pos:start="825:9" pos:end="825:22"><name pos:start="825:9" pos:end="825:9">v</name><operator pos:start="825:10" pos:end="825:11">-&gt;</operator><name pos:start="825:12" pos:end="825:12">s</name><operator pos:start="825:13" pos:end="825:13">.</operator><name pos:start="825:14" pos:end="825:22">pict_type</name></name> <operator pos:start="825:24" pos:end="825:25">==</operator> <name pos:start="825:27" pos:end="825:43">AV_PICTURE_TYPE_I</name> <operator pos:start="825:45" pos:end="825:46">||</operator> <name pos:start="825:48" pos:end="825:61"><name pos:start="825:48" pos:end="825:48">v</name><operator pos:start="825:49" pos:end="825:50">-&gt;</operator><name pos:start="825:51" pos:end="825:51">s</name><operator pos:start="825:52" pos:end="825:52">.</operator><name pos:start="825:53" pos:end="825:61">pict_type</name></name> <operator pos:start="825:63" pos:end="825:64">==</operator> <name pos:start="825:66" pos:end="825:83">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="825:86" pos:end="829:5">{<block_content pos:start="827:9" pos:end="827:44">

        <expr_stmt pos:start="827:9" pos:end="827:44"><expr pos:start="827:9" pos:end="827:43"><name pos:start="827:9" pos:end="827:27"><name pos:start="827:9" pos:end="827:9">v</name><operator pos:start="827:10" pos:end="827:11">-&gt;</operator><name pos:start="827:12" pos:end="827:27">y_ac_table_index</name></name> <operator pos:start="827:29" pos:end="827:29">=</operator> <call pos:start="827:31" pos:end="827:43"><name pos:start="827:31" pos:end="827:39">decode012</name><argument_list pos:start="827:40" pos:end="827:43">(<argument pos:start="827:41" pos:end="827:42"><expr pos:start="827:41" pos:end="827:42"><name pos:start="827:41" pos:end="827:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="831:5" pos:end="831:19">/* DC Syntax */</comment>

    <expr_stmt pos:start="833:5" pos:end="833:40"><expr pos:start="833:5" pos:end="833:39"><name pos:start="833:5" pos:end="833:23"><name pos:start="833:5" pos:end="833:5">v</name><operator pos:start="833:6" pos:end="833:7">-&gt;</operator><name pos:start="833:8" pos:end="833:8">s</name><operator pos:start="833:9" pos:end="833:9">.</operator><name pos:start="833:10" pos:end="833:23">dc_table_index</name></name> <operator pos:start="833:25" pos:end="833:25">=</operator> <call pos:start="833:27" pos:end="833:39"><name pos:start="833:27" pos:end="833:35">get_bits1</name><argument_list pos:start="833:36" pos:end="833:39">(<argument pos:start="833:37" pos:end="833:38"><expr pos:start="833:37" pos:end="833:38"><name pos:start="833:37" pos:end="833:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="835:5" pos:end="843:5"><if pos:start="835:5" pos:end="843:5">if <condition pos:start="835:8" pos:end="837:21">(<expr pos:start="835:9" pos:end="837:20"><operator pos:start="835:9" pos:end="835:9">(</operator><name pos:start="835:10" pos:end="835:23"><name pos:start="835:10" pos:end="835:10">v</name><operator pos:start="835:11" pos:end="835:12">-&gt;</operator><name pos:start="835:13" pos:end="835:13">s</name><operator pos:start="835:14" pos:end="835:14">.</operator><name pos:start="835:15" pos:end="835:23">pict_type</name></name> <operator pos:start="835:25" pos:end="835:26">==</operator> <name pos:start="835:28" pos:end="835:44">AV_PICTURE_TYPE_I</name> <operator pos:start="835:46" pos:end="835:47">||</operator> <name pos:start="835:49" pos:end="835:62"><name pos:start="835:49" pos:end="835:49">v</name><operator pos:start="835:50" pos:end="835:51">-&gt;</operator><name pos:start="835:52" pos:end="835:52">s</name><operator pos:start="835:53" pos:end="835:53">.</operator><name pos:start="835:54" pos:end="835:62">pict_type</name></name> <operator pos:start="835:64" pos:end="835:65">==</operator> <name pos:start="835:67" pos:end="835:84">AV_PICTURE_TYPE_BI</name><operator pos:start="835:85" pos:end="835:85">)</operator>

        <operator pos:start="837:9" pos:end="837:10">&amp;&amp;</operator> <name pos:start="837:12" pos:end="837:20"><name pos:start="837:12" pos:end="837:12">v</name><operator pos:start="837:13" pos:end="837:14">-&gt;</operator><name pos:start="837:15" pos:end="837:20">dquant</name></name></expr>)</condition> <block pos:start="837:23" pos:end="843:5">{<block_content pos:start="839:9" pos:end="841:31">

        <expr_stmt pos:start="839:9" pos:end="839:62"><expr pos:start="839:9" pos:end="839:61"><call pos:start="839:9" pos:end="839:61"><name pos:start="839:9" pos:end="839:14">av_log</name><argument_list pos:start="839:15" pos:end="839:61">(<argument pos:start="839:16" pos:end="839:25"><expr pos:start="839:16" pos:end="839:25"><name pos:start="839:16" pos:end="839:25"><name pos:start="839:16" pos:end="839:16">v</name><operator pos:start="839:17" pos:end="839:18">-&gt;</operator><name pos:start="839:19" pos:end="839:19">s</name><operator pos:start="839:20" pos:end="839:20">.</operator><name pos:start="839:21" pos:end="839:25">avctx</name></name></expr></argument>, <argument pos:start="839:28" pos:end="839:39"><expr pos:start="839:28" pos:end="839:39"><name pos:start="839:28" pos:end="839:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="839:42" pos:end="839:60"><expr pos:start="839:42" pos:end="839:60"><literal type="string" pos:start="839:42" pos:end="839:60">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:31"><expr pos:start="841:9" pos:end="841:30"><call pos:start="841:9" pos:end="841:30"><name pos:start="841:9" pos:end="841:27">vop_dquant_decoding</name><argument_list pos:start="841:28" pos:end="841:30">(<argument pos:start="841:29" pos:end="841:29"><expr pos:start="841:29" pos:end="841:29"><name pos:start="841:29" pos:end="841:29">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="847:5" pos:end="847:19"><expr pos:start="847:5" pos:end="847:18"><name pos:start="847:5" pos:end="847:14"><name pos:start="847:5" pos:end="847:5">v</name><operator pos:start="847:6" pos:end="847:7">-&gt;</operator><name pos:start="847:8" pos:end="847:14">bi_type</name></name> <operator pos:start="847:16" pos:end="847:16">=</operator> <literal type="number" pos:start="847:18" pos:end="847:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="849:5" pos:end="855:5"><if pos:start="849:5" pos:end="855:5">if <condition pos:start="849:8" pos:end="849:45">(<expr pos:start="849:9" pos:end="849:44"><name pos:start="849:9" pos:end="849:22"><name pos:start="849:9" pos:end="849:9">v</name><operator pos:start="849:10" pos:end="849:11">-&gt;</operator><name pos:start="849:12" pos:end="849:12">s</name><operator pos:start="849:13" pos:end="849:13">.</operator><name pos:start="849:14" pos:end="849:22">pict_type</name></name> <operator pos:start="849:24" pos:end="849:25">==</operator> <name pos:start="849:27" pos:end="849:44">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="849:47" pos:end="855:5">{<block_content pos:start="851:9" pos:end="853:23">

        <expr_stmt pos:start="851:9" pos:end="851:43"><expr pos:start="851:9" pos:end="851:42"><name pos:start="851:9" pos:end="851:22"><name pos:start="851:9" pos:end="851:9">v</name><operator pos:start="851:10" pos:end="851:11">-&gt;</operator><name pos:start="851:12" pos:end="851:12">s</name><operator pos:start="851:13" pos:end="851:13">.</operator><name pos:start="851:14" pos:end="851:22">pict_type</name></name> <operator pos:start="851:24" pos:end="851:24">=</operator> <name pos:start="851:26" pos:end="851:42">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <expr_stmt pos:start="853:9" pos:end="853:23"><expr pos:start="853:9" pos:end="853:22"><name pos:start="853:9" pos:end="853:18"><name pos:start="853:9" pos:end="853:9">v</name><operator pos:start="853:10" pos:end="853:11">-&gt;</operator><name pos:start="853:12" pos:end="853:18">bi_type</name></name> <operator pos:start="853:20" pos:end="853:20">=</operator> <literal type="number" pos:start="853:22" pos:end="853:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="857:5" pos:end="857:13">return <expr pos:start="857:12" pos:end="857:12"><literal type="number" pos:start="857:12" pos:end="857:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
