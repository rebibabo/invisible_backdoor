<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2029.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">do_drive_del</name><parameter_list pos:start="1:17" pos:end="1:70">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:29"><name pos:start="1:18" pos:end="1:24">Monitor</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">mon</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:42">QDict</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">qdict</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:58">QObject</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:69">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">id</name> <init pos:start="5:20" pos:end="5:47">= <expr pos:start="5:22" pos:end="5:47"><call pos:start="5:22" pos:end="5:47"><name pos:start="5:22" pos:end="5:34">qdict_get_str</name><argument_list pos:start="5:35" pos:end="5:47">(<argument pos:start="5:36" pos:end="5:40"><expr pos:start="5:36" pos:end="5:40"><name pos:start="5:36" pos:end="5:40">qdict</name></expr></argument>, <argument pos:start="5:43" pos:end="5:46"><expr pos:start="5:43" pos:end="5:46"><literal type="string" pos:start="5:43" pos:end="5:46">"id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">Property</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">prop</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:6">bs</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:18">bdrv_find</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:11">bs</name></expr>)</condition> <block pos:start="17:14" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><call pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:21">qerror_report</name><argument_list pos:start="19:22" pos:end="19:48">(<argument pos:start="19:23" pos:end="19:43"><expr pos:start="19:23" pos:end="19:43"><name pos:start="19:23" pos:end="19:43">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="19:46" pos:end="19:47"><expr pos:start="19:46" pos:end="19:47"><name pos:start="19:46" pos:end="19:47">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:19">bdrv_in_use</name><argument_list pos:start="25:20" pos:end="25:23">(<argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:26" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:21">qerror_report</name><argument_list pos:start="27:22" pos:end="27:45">(<argument pos:start="27:23" pos:end="27:40"><expr pos:start="27:23" pos:end="27:40"><name pos:start="27:23" pos:end="27:40">QERR_DEVICE_IN_USE</name></expr></argument>, <argument pos:start="27:43" pos:end="27:44"><expr pos:start="27:43" pos:end="27:44"><name pos:start="27:43" pos:end="27:44">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:50">/* quiesce block driver; prevent further io */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><call pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:18">qemu_aio_flush</name><argument_list pos:start="37:19" pos:end="37:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><call pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14">bdrv_flush</name><argument_list pos:start="39:15" pos:end="39:18">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:14">bdrv_close</name><argument_list pos:start="41:15" pos:end="41:18">(<argument pos:start="41:16" pos:end="41:17"><expr pos:start="41:16" pos:end="41:17"><name pos:start="41:16" pos:end="41:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="47:59">/* clean up guest state from pointing to host resource by

     * finding and removing DeviceState "drive" property */</comment>

    <if_stmt pos:start="49:5" pos:end="71:5"><if pos:start="49:5" pos:end="71:5">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:10">bs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:16">peer</name></name></expr>)</condition> <block pos:start="49:19" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:9">

        <for pos:start="51:9" pos:end="69:9">for <control pos:start="51:13" pos:end="51:70">(<init pos:start="51:14" pos:end="51:42"><expr pos:start="51:14" pos:end="51:41"><name pos:start="51:14" pos:end="51:17">prop</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:41"><name pos:start="51:21" pos:end="51:22">bs</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:28">peer</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:34">info</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:41">props</name></name></expr>;</init> <condition pos:start="51:44" pos:end="51:62"><expr pos:start="51:44" pos:end="51:61"><name pos:start="51:44" pos:end="51:47">prop</name> <operator pos:start="51:49" pos:end="51:50">&amp;&amp;</operator> <name pos:start="51:52" pos:end="51:61"><name pos:start="51:52" pos:end="51:55">prop</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:61">name</name></name></expr>;</condition> <incr pos:start="51:64" pos:end="51:69"><expr pos:start="51:64" pos:end="51:69"><name pos:start="51:64" pos:end="51:67">prop</name><operator pos:start="51:68" pos:end="51:69">++</operator></expr></incr>)</control> <block pos:start="51:72" pos:end="69:9">{<block_content pos:start="53:13" pos:end="67:13">

            <if_stmt pos:start="53:13" pos:end="67:13"><if pos:start="53:13" pos:end="67:13">if <condition pos:start="53:16" pos:end="53:52">(<expr pos:start="53:17" pos:end="53:51"><name pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:20">prop</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:26">info</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:32">type</name></name> <operator pos:start="53:34" pos:end="53:35">==</operator> <name pos:start="53:37" pos:end="53:51">PROP_TYPE_DRIVE</name></expr>)</condition> <block pos:start="53:54" pos:end="67:13">{<block_content pos:start="55:17" pos:end="65:17">

                <expr_stmt pos:start="55:17" pos:end="55:56"><expr pos:start="55:17" pos:end="55:55"><name pos:start="55:17" pos:end="55:19">ptr</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:55"><name pos:start="55:23" pos:end="55:39">qdev_get_prop_ptr</name><argument_list pos:start="55:40" pos:end="55:55">(<argument pos:start="55:41" pos:end="55:48"><expr pos:start="55:41" pos:end="55:48"><name pos:start="55:41" pos:end="55:48"><name pos:start="55:41" pos:end="55:42">bs</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:48">peer</name></name></expr></argument>, <argument pos:start="55:51" pos:end="55:54"><expr pos:start="55:51" pos:end="55:54"><name pos:start="55:51" pos:end="55:54">prop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="57:17" pos:end="65:17"><if pos:start="57:17" pos:end="65:17">if <condition pos:start="57:20" pos:end="57:31">(<expr pos:start="57:21" pos:end="57:30"><operator pos:start="57:21" pos:end="57:21">*</operator><name pos:start="57:22" pos:end="57:24">ptr</name> <operator pos:start="57:26" pos:end="57:27">==</operator> <name pos:start="57:29" pos:end="57:30">bs</name></expr>)</condition> <block pos:start="57:33" pos:end="65:17">{<block_content pos:start="59:21" pos:end="63:26">

                    <expr_stmt pos:start="59:21" pos:end="59:46"><expr pos:start="59:21" pos:end="59:45"><call pos:start="59:21" pos:end="59:45"><name pos:start="59:21" pos:end="59:31">bdrv_detach</name><argument_list pos:start="59:32" pos:end="59:45">(<argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">bs</name></expr></argument>, <argument pos:start="59:37" pos:end="59:44"><expr pos:start="59:37" pos:end="59:44"><name pos:start="59:37" pos:end="59:44"><name pos:start="59:37" pos:end="59:38">bs</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:44">peer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:32"><expr pos:start="61:21" pos:end="61:31"><operator pos:start="61:21" pos:end="61:21">*</operator><name pos:start="61:22" pos:end="61:24">ptr</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:31">NULL</name></expr>;</expr_stmt>

                    <break pos:start="63:21" pos:end="63:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:28">/* clean up host side */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:44"><expr pos:start="77:5" pos:end="77:43"><call pos:start="77:5" pos:end="77:43"><name pos:start="77:5" pos:end="77:16">drive_uninit</name><argument_list pos:start="77:17" pos:end="77:43">(<argument pos:start="77:18" pos:end="77:42"><expr pos:start="77:18" pos:end="77:42"><call pos:start="77:18" pos:end="77:42"><name pos:start="77:18" pos:end="77:38">drive_get_by_blockdev</name><argument_list pos:start="77:39" pos:end="77:42">(<argument pos:start="77:40" pos:end="77:41"><expr pos:start="77:40" pos:end="77:41"><name pos:start="77:40" pos:end="77:41">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
