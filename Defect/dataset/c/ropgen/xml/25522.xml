<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25522.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">handle_9p_output</name><parameter_list pos:start="1:29" pos:end="1:63">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:41">VirtIODevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">vdev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:58">VirtQueue</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">V9fsVirtioState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">v</name> <init pos:start="5:24" pos:end="5:48">= <expr pos:start="5:26" pos:end="5:48"><operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:41">V9fsVirtioState</name> <operator pos:start="5:43" pos:end="5:43">*</operator><operator pos:start="5:44" pos:end="5:44">)</operator><name pos:start="5:45" pos:end="5:48">vdev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">V9fsState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:28">= <expr pos:start="7:20" pos:end="7:28"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:28"><name pos:start="7:21" pos:end="7:21">v</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:28">state</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">V9fsPDU</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">pdu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:15">len</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="71:5">while <condition pos:start="15:11" pos:end="15:32">(<expr pos:start="15:12" pos:end="15:31"><operator pos:start="15:12" pos:end="15:12">(</operator><name pos:start="15:13" pos:end="15:15">pdu</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:27">pdu_alloc</name><argument_list pos:start="15:28" pos:end="15:30">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">s</name></expr></argument>)</argument_list></call><operator pos:start="15:31" pos:end="15:31">)</operator></expr>)</condition> <block pos:start="15:34" pos:end="71:5">{<block_content pos:start="17:9" pos:end="69:24">

        <struct pos:start="17:9" pos:end="25:26">struct <block pos:start="17:16" pos:end="25:9">{

            <decl_stmt pos:start="19:13" pos:end="19:29"><decl pos:start="19:13" pos:end="19:28"><type pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:20">uint32_t</name></type> <name pos:start="19:22" pos:end="19:28">size_le</name></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:23"><decl pos:start="21:13" pos:end="21:22"><type pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:19">uint8_t</name></type> <name pos:start="21:21" pos:end="21:22">id</name></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:28"><decl pos:start="23:13" pos:end="23:27"><type pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:20">uint16_t</name></type> <name pos:start="23:22" pos:end="23:27">tag_le</name></decl>;</decl_stmt>

        }</block> <decl pos:start="25:11" pos:end="25:25"><name pos:start="25:11" pos:end="25:21">QEMU_PACKED</name> <name pos:start="25:23" pos:end="25:25">out</name></decl>;</struct>

        <decl_stmt pos:start="27:9" pos:end="27:53"><decl pos:start="27:9" pos:end="27:52"><type pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:24">VirtQueueElement</name> <modifier pos:start="27:26" pos:end="27:26">*</modifier></type><name pos:start="27:27" pos:end="27:30">elem</name> <init pos:start="27:32" pos:end="27:52">= <expr pos:start="27:34" pos:end="27:52"><operator pos:start="27:34" pos:end="27:34">&amp;</operator><name pos:start="27:35" pos:end="27:52"><name pos:start="27:35" pos:end="27:35">v</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:42">elems</name><index pos:start="27:43" pos:end="27:52">[<expr pos:start="27:44" pos:end="27:51"><name pos:start="27:44" pos:end="27:51"><name pos:start="27:44" pos:end="27:46">pdu</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:51">idx</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:37"><name pos:start="31:15" pos:end="31:27">virtqueue_pop</name><argument_list pos:start="31:28" pos:end="31:37">(<argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><name pos:start="31:29" pos:end="31:30">vq</name></expr></argument>, <argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:17">(<expr pos:start="33:13" pos:end="33:16"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:16">len</name></expr>)</condition> <block pos:start="33:19" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:18">

            <expr_stmt pos:start="35:13" pos:end="35:26"><expr pos:start="35:13" pos:end="35:25"><call pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:20">pdu_free</name><argument_list pos:start="35:21" pos:end="35:25">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">pdu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><call pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:14">BUG_ON</name><argument_list pos:start="43:15" pos:end="43:55">(<argument pos:start="43:16" pos:end="43:54"><expr pos:start="43:16" pos:end="43:54"><name pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:19">elem</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:28">out_num</name></name> <operator pos:start="43:30" pos:end="43:31">==</operator> <literal type="number" pos:start="43:33" pos:end="43:33">0</literal> <operator pos:start="43:35" pos:end="43:36">||</operator> <name pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:41">elem</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:49">in_num</name></name> <operator pos:start="43:51" pos:end="43:52">==</operator> <literal type="number" pos:start="43:54" pos:end="43:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><call pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:25">QEMU_BUILD_BUG_ON</name><argument_list pos:start="45:26" pos:end="45:42">(<argument pos:start="45:27" pos:end="45:41"><expr pos:start="45:27" pos:end="45:41"><sizeof pos:start="45:27" pos:end="45:36">sizeof <name pos:start="45:34" pos:end="45:36">out</name></sizeof> <operator pos:start="45:38" pos:end="45:39">!=</operator> <literal type="number" pos:start="45:41" pos:end="45:41">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="51:43"><expr pos:start="49:9" pos:end="51:42"><name pos:start="49:9" pos:end="49:11">len</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="51:42"><name pos:start="49:15" pos:end="49:24">iov_to_buf</name><argument_list pos:start="49:25" pos:end="51:42">(<argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:29">elem</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:37">out_sg</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:52"><expr pos:start="49:40" pos:end="49:52"><name pos:start="49:40" pos:end="49:52"><name pos:start="49:40" pos:end="49:43">elem</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:52">out_num</name></name></expr></argument>, <argument pos:start="49:55" pos:end="49:55"><expr pos:start="49:55" pos:end="49:55"><literal type="number" pos:start="49:55" pos:end="49:55">0</literal></expr></argument>,

                         <argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:29">out</name></expr></argument>, <argument pos:start="51:32" pos:end="51:41"><expr pos:start="51:32" pos:end="51:41"><sizeof pos:start="51:32" pos:end="51:41">sizeof <name pos:start="51:39" pos:end="51:41">out</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><call pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:14">BUG_ON</name><argument_list pos:start="53:15" pos:end="53:33">(<argument pos:start="53:16" pos:end="53:32"><expr pos:start="53:16" pos:end="53:32"><name pos:start="53:16" pos:end="53:18">len</name> <operator pos:start="53:20" pos:end="53:21">!=</operator> <sizeof pos:start="53:23" pos:end="53:32">sizeof <name pos:start="53:30" pos:end="53:32">out</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">pdu</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">size</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:44"><name pos:start="57:21" pos:end="57:31">le32_to_cpu</name><argument_list pos:start="57:32" pos:end="57:44">(<argument pos:start="57:33" pos:end="57:43"><expr pos:start="57:33" pos:end="57:43"><name pos:start="57:33" pos:end="57:43"><name pos:start="57:33" pos:end="57:35">out</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:43">size_le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">pdu</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:15">id</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:24"><name pos:start="61:19" pos:end="61:21">out</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:24">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:11">pdu</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">tag</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:42"><name pos:start="63:20" pos:end="63:30">le16_to_cpu</name><argument_list pos:start="63:31" pos:end="63:42">(<argument pos:start="63:32" pos:end="63:41"><expr pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:34">out</name><operator pos:start="63:35" pos:end="63:35">.</operator><name pos:start="63:36" pos:end="63:41">tag_le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><call pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:26">qemu_co_queue_init</name><argument_list pos:start="67:27" pos:end="67:42">(<argument pos:start="67:28" pos:end="67:41"><expr pos:start="67:28" pos:end="67:41"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:41"><name pos:start="67:29" pos:end="67:31">pdu</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:41">complete</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><call pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:18">pdu_submit</name><argument_list pos:start="69:19" pos:end="69:23">(<argument pos:start="69:20" pos:end="69:22"><expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">pdu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
