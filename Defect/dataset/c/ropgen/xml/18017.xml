<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18017.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">MachineClass</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:34">machine_parse</name><parameter_list pos:start="1:35" pos:end="1:52">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:47"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:41">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">GSList</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:14">el</name></decl>, <decl pos:start="7:17" pos:end="7:70"><type ref="prev" pos:start="7:5" pos:end="7:12"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">machines</name> <init pos:start="7:27" pos:end="7:70">= <expr pos:start="7:29" pos:end="7:70"><call pos:start="7:29" pos:end="7:70"><name pos:start="7:29" pos:end="7:49">object_class_get_list</name><argument_list pos:start="7:50" pos:end="7:70">(<argument pos:start="7:51" pos:end="7:62"><expr pos:start="7:51" pos:end="7:62"><name pos:start="7:51" pos:end="7:62">TYPE_MACHINE</name></expr></argument>, <argument pos:start="7:65" pos:end="7:69"><expr pos:start="7:65" pos:end="7:69"><name pos:start="7:65" pos:end="7:69">false</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">name</name></expr>)</condition> <block pos:start="11:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:32">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:10">mc</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:31"><name pos:start="13:14" pos:end="13:25">find_machine</name><argument_list pos:start="13:26" pos:end="13:31">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:11">(<expr pos:start="17:9" pos:end="17:10"><name pos:start="17:9" pos:end="17:10">mc</name></expr>)</condition> <block pos:start="17:13" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><name pos:start="19:16" pos:end="19:17">mc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="49:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:12">name</name> <operator pos:start="23:14" pos:end="23:15">&amp;&amp;</operator> <operator pos:start="23:17" pos:end="23:17">!</operator><call pos:start="23:18" pos:end="23:37"><name pos:start="23:18" pos:end="23:31">is_help_option</name><argument_list pos:start="23:32" pos:end="23:37">(<argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:40" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:72">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:48">(<argument pos:start="25:22" pos:end="25:47"><expr pos:start="25:22" pos:end="25:47"><literal type="string" pos:start="25:22" pos:end="25:47">"Unsupported machine type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><call pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:20">error_printf</name><argument_list pos:start="27:21" pos:end="27:71">(<argument pos:start="27:22" pos:end="27:70"><expr pos:start="27:22" pos:end="27:70"><literal type="string" pos:start="27:22" pos:end="27:70">"Use -machine help to list supported machines!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="49:5">else <block pos:start="29:12" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:9">

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:14">printf</name><argument_list pos:start="31:15" pos:end="31:43">(<argument pos:start="31:16" pos:end="31:42"><expr pos:start="31:16" pos:end="31:42"><literal type="string" pos:start="31:16" pos:end="31:42">"Supported machines are:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="47:9">for <control pos:start="33:13" pos:end="33:46">(<init pos:start="33:14" pos:end="33:27"><expr pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:15">el</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:26">machines</name></expr>;</init> <condition pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">el</name></expr>;</condition> <incr pos:start="33:33" pos:end="33:45"><expr pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:34">el</name> <operator pos:start="33:36" pos:end="33:36">=</operator> <name pos:start="33:38" pos:end="33:45"><name pos:start="33:38" pos:end="33:39">el</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:45">next</name></name></expr></incr>)</control> <block pos:start="33:48" pos:end="47:9">{<block_content pos:start="35:13" pos:end="45:55">

            <decl_stmt pos:start="35:13" pos:end="35:40"><decl pos:start="35:13" pos:end="35:39"><type pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:24">MachineClass</name> <modifier pos:start="35:26" pos:end="35:26">*</modifier></type><name pos:start="35:27" pos:end="35:28">mc</name> <init pos:start="35:30" pos:end="35:39">= <expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:33">el</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:39">data</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:26">(<expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:18">mc</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:25">alias</name></name></expr>)</condition> <block pos:start="37:28" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:82">

                <expr_stmt pos:start="39:17" pos:end="39:82"><expr pos:start="39:17" pos:end="39:81"><call pos:start="39:17" pos:end="39:81"><name pos:start="39:17" pos:end="39:22">printf</name><argument_list pos:start="39:23" pos:end="39:81">(<argument pos:start="39:24" pos:end="39:49"><expr pos:start="39:24" pos:end="39:49"><literal type="string" pos:start="39:24" pos:end="39:49">"%-20s %s (alias of %s)\n"</literal></expr></argument>, <argument pos:start="39:52" pos:end="39:60"><expr pos:start="39:52" pos:end="39:60"><name pos:start="39:52" pos:end="39:60"><name pos:start="39:52" pos:end="39:53">mc</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:60">alias</name></name></expr></argument>, <argument pos:start="39:63" pos:end="39:70"><expr pos:start="39:63" pos:end="39:70"><name pos:start="39:63" pos:end="39:70"><name pos:start="39:63" pos:end="39:64">mc</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:70">desc</name></name></expr></argument>, <argument pos:start="39:73" pos:end="39:80"><expr pos:start="39:73" pos:end="39:80"><name pos:start="39:73" pos:end="39:80"><name pos:start="39:73" pos:end="39:74">mc</name><operator pos:start="39:75" pos:end="39:76">-&gt;</operator><name pos:start="39:77" pos:end="39:80">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="45:55"><expr pos:start="43:13" pos:end="45:54"><call pos:start="43:13" pos:end="45:54"><name pos:start="43:13" pos:end="43:18">printf</name><argument_list pos:start="43:19" pos:end="45:54">(<argument pos:start="43:20" pos:end="43:33"><expr pos:start="43:20" pos:end="43:33"><literal type="string" pos:start="43:20" pos:end="43:33">"%-20s %s%s\n"</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:43"><expr pos:start="43:36" pos:end="43:43"><name pos:start="43:36" pos:end="43:43"><name pos:start="43:36" pos:end="43:37">mc</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:43">name</name></name></expr></argument>, <argument pos:start="43:46" pos:end="43:53"><expr pos:start="43:46" pos:end="43:53"><name pos:start="43:46" pos:end="43:53"><name pos:start="43:46" pos:end="43:47">mc</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:53">desc</name></name></expr></argument>,

                   <argument pos:start="45:20" pos:end="45:53"><expr pos:start="45:20" pos:end="45:53"><ternary pos:start="45:20" pos:end="45:53"><condition pos:start="45:20" pos:end="45:35"><expr pos:start="45:20" pos:end="45:33"><name pos:start="45:20" pos:end="45:33"><name pos:start="45:20" pos:end="45:21">mc</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:33">is_default</name></name></expr> ?</condition><then pos:start="45:37" pos:end="45:48"> <expr pos:start="45:37" pos:end="45:48"><literal type="string" pos:start="45:37" pos:end="45:48">" (default)"</literal></expr> </then><else pos:start="45:50" pos:end="45:53">: <expr pos:start="45:52" pos:end="45:53"><literal type="string" pos:start="45:52" pos:end="45:53">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:16">g_slist_free</name><argument_list pos:start="53:17" pos:end="53:26">(<argument pos:start="53:18" pos:end="53:25"><expr pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:25">machines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:41"><expr pos:start="55:5" pos:end="55:40"><call pos:start="55:5" pos:end="55:40"><name pos:start="55:5" pos:end="55:8">exit</name><argument_list pos:start="55:9" pos:end="55:40">(<argument pos:start="55:10" pos:end="55:39"><expr pos:start="55:10" pos:end="55:39"><operator pos:start="55:10" pos:end="55:10">!</operator><name pos:start="55:11" pos:end="55:14">name</name> <operator pos:start="55:16" pos:end="55:17">||</operator> <operator pos:start="55:19" pos:end="55:19">!</operator><call pos:start="55:20" pos:end="55:39"><name pos:start="55:20" pos:end="55:33">is_help_option</name><argument_list pos:start="55:34" pos:end="55:39">(<argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:38">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
