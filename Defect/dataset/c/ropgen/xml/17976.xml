<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17976.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:58">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:42"><decl pos:start="3:25" pos:end="3:42"><type pos:start="3:25" pos:end="3:42"><name pos:start="3:25" pos:end="3:27">int</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:42">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">AVPacket</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:57">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="183:1">{<block_content pos:start="7:5" pos:end="181:21">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type>  <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:15">VimaContext</name>    <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">vima</name> <init pos:start="9:26" pos:end="9:43">= <expr pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:32">avctx</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type>        <name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:27">pcm_data</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type>       <name pos:start="13:20" pos:end="13:26">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">int8_t</name></type>         <name pos:start="15:20" pos:end="15:34"><name pos:start="15:20" pos:end="15:31">channel_hint</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type>            <name pos:start="17:20" pos:end="17:22">ret</name></decl>, <decl pos:start="17:25" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:28">chan</name></decl>, <decl pos:start="17:31" pos:end="17:42"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:31" pos:end="17:38">channels</name> <init pos:start="17:40" pos:end="17:42">= <expr pos:start="17:42" pos:end="17:42"><literal type="number" pos:start="17:42" pos:end="17:42">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><call pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="21:48">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">gb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:32"><expr pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:26">pkt</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">data</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:47"><expr pos:start="21:35" pos:end="21:47"><name pos:start="21:35" pos:end="21:43"><name pos:start="21:35" pos:end="21:37">pkt</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:43">size</name></name> <operator pos:start="21:45" pos:end="21:45">*</operator> <literal type="number" pos:start="21:47" pos:end="21:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">pkt</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">size</name></name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">13</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:11">samples</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:36"><name pos:start="31:15" pos:end="31:27">get_bits_long</name><argument_list pos:start="31:28" pos:end="31:36">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:31">gb</name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><literal type="number" pos:start="31:34" pos:end="31:35">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:30">(<expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:15">samples</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <literal type="number" pos:start="33:20" pos:end="33:29">0xffffffff</literal></expr>)</condition> <block pos:start="33:32" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:41">

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><call pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:22">skip_bits_long</name><argument_list pos:start="35:23" pos:end="35:31">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:26">gb</name></expr></argument>, <argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><literal type="number" pos:start="35:29" pos:end="35:30">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:15">samples</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:40"><name pos:start="37:19" pos:end="37:31">get_bits_long</name><argument_list pos:start="37:32" pos:end="37:40">(<argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:35">gb</name></expr></argument>, <argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><literal type="number" pos:start="37:38" pos:end="37:39">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:35"><if pos:start="43:5" pos:end="45:35">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:15">samples</name> <operator pos:start="43:17" pos:end="43:17">&gt;</operator> <name pos:start="43:19" pos:end="43:27"><name pos:start="43:19" pos:end="43:21">pkt</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:27">size</name></name> <operator pos:start="43:29" pos:end="43:29">*</operator> <literal type="number" pos:start="43:31" pos:end="43:31">2</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:35"><block_content pos:start="45:9" pos:end="45:35">

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:16">channel_hint</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:39"><name pos:start="49:23" pos:end="49:31">get_sbits</name><argument_list pos:start="49:32" pos:end="49:39">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><operator pos:start="49:33" pos:end="49:33">&amp;</operator><name pos:start="49:34" pos:end="49:35">gb</name></expr></argument>, <argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:31">(<expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:20">channel_hint</name><index pos:start="51:21" pos:end="51:23">[<expr pos:start="51:22" pos:end="51:22"><literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>]</index></name> <operator pos:start="51:25" pos:end="51:25">&amp;</operator> <literal type="number" pos:start="51:27" pos:end="51:30">0x80</literal></expr>)</condition> <block pos:start="51:33" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:21">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:20">channel_hint</name><index pos:start="53:21" pos:end="53:23">[<expr pos:start="53:22" pos:end="53:22"><literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>]</index></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <operator pos:start="53:27" pos:end="53:27">~</operator><name pos:start="53:28" pos:end="53:42"><name pos:start="53:28" pos:end="53:39">channel_hint</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:16">channels</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:20">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:9">avctx</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:19">channels</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:30">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:64"><expr pos:start="61:5" pos:end="63:63"><name pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:9">avctx</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:25">channel_layout</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <ternary pos:start="61:29" pos:end="63:63"><condition pos:start="61:29" pos:end="61:45"><expr pos:start="61:29" pos:end="61:43"><operator pos:start="61:29" pos:end="61:29">(</operator><name pos:start="61:30" pos:end="61:37">channels</name> <operator pos:start="61:39" pos:end="61:40">==</operator> <literal type="number" pos:start="61:42" pos:end="61:42">2</literal><operator pos:start="61:43" pos:end="61:43">)</operator></expr> ?</condition><then pos:start="61:47" pos:end="61:65"> <expr pos:start="61:47" pos:end="61:65"><name pos:start="61:47" pos:end="61:65">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="61:67" pos:end="63:63">:

                                              <expr pos:start="63:47" pos:end="63:63"><name pos:start="63:47" pos:end="63:63">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:12">pcm_data</name><index pos:start="65:13" pos:end="65:15">[<expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>]</index></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:36"><name pos:start="65:19" pos:end="65:27">get_sbits</name><argument_list pos:start="65:28" pos:end="65:36">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><operator pos:start="65:29" pos:end="65:29">&amp;</operator><name pos:start="65:30" pos:end="65:31">gb</name></expr></argument>, <argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><literal type="number" pos:start="65:34" pos:end="65:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:21">(<expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:16">channels</name> <operator pos:start="67:18" pos:end="67:18">&gt;</operator> <literal type="number" pos:start="67:20" pos:end="67:20">1</literal></expr>)</condition> <block pos:start="67:23" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:41">

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:20">channel_hint</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr>]</index></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:43"><name pos:start="69:27" pos:end="69:35">get_sbits</name><argument_list pos:start="69:36" pos:end="69:43">(<argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><operator pos:start="69:37" pos:end="69:37">&amp;</operator><name pos:start="69:38" pos:end="69:39">gb</name></expr></argument>, <argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:16">pcm_data</name><index pos:start="71:17" pos:end="71:19">[<expr pos:start="71:18" pos:end="71:18"><literal type="number" pos:start="71:18" pos:end="71:18">1</literal></expr>]</index></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:40"><name pos:start="71:23" pos:end="71:31">get_sbits</name><argument_list pos:start="71:32" pos:end="71:40">(<argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:35">gb</name></expr></argument>, <argument pos:start="71:38" pos:end="71:39"><expr pos:start="71:38" pos:end="71:39"><literal type="number" pos:start="71:38" pos:end="71:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:37"><expr pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:8">vima</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:15">frame</name><operator pos:start="77:16" pos:end="77:16">.</operator><name pos:start="77:17" pos:end="77:26">nb_samples</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:36">samples</name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:59">(<expr pos:start="79:9" pos:end="79:58"><operator pos:start="79:9" pos:end="79:9">(</operator><name pos:start="79:10" pos:end="79:12">ret</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="79:53"><name pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:20">avctx</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:32">get_buffer</name></name><argument_list pos:start="79:33" pos:end="79:53">(<argument pos:start="79:34" pos:end="79:38"><expr pos:start="79:34" pos:end="79:38"><name pos:start="79:34" pos:end="79:38">avctx</name></expr></argument>, <argument pos:start="79:41" pos:end="79:52"><expr pos:start="79:41" pos:end="79:52"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:52"><name pos:start="79:42" pos:end="79:45">vima</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:52">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="79:54" pos:end="79:54">)</operator> <operator pos:start="79:56" pos:end="79:56">&lt;</operator> <literal type="number" pos:start="79:58" pos:end="79:58">0</literal></expr>)</condition> <block pos:start="79:61" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:19">

        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><call pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:60">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:59"><expr pos:start="81:37" pos:end="81:59"><literal type="string" pos:start="81:37" pos:end="81:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="89:5" pos:end="171:5">for <control pos:start="89:9" pos:end="89:43">(<init pos:start="89:10" pos:end="89:18"><expr pos:start="89:10" pos:end="89:17"><name pos:start="89:10" pos:end="89:13">chan</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <literal type="number" pos:start="89:17" pos:end="89:17">0</literal></expr>;</init> <condition pos:start="89:20" pos:end="89:35"><expr pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:23">chan</name> <operator pos:start="89:25" pos:end="89:25">&lt;</operator> <name pos:start="89:27" pos:end="89:34">channels</name></expr>;</condition> <incr pos:start="89:37" pos:end="89:42"><expr pos:start="89:37" pos:end="89:42"><name pos:start="89:37" pos:end="89:40">chan</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr>)</control> <block pos:start="89:45" pos:end="171:5">{<block_content pos:start="91:9" pos:end="169:9">

        <decl_stmt pos:start="91:9" pos:end="91:63"><decl pos:start="91:9" pos:end="91:62"><type pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:16">uint16_t</name> <modifier pos:start="91:18" pos:end="91:18">*</modifier></type><name pos:start="91:19" pos:end="91:22">dest</name> <init pos:start="91:24" pos:end="91:62">= <expr pos:start="91:26" pos:end="91:62"><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:34">uint16_t</name><operator pos:start="91:35" pos:end="91:35">*</operator><operator pos:start="91:36" pos:end="91:36">)</operator><name pos:start="91:37" pos:end="91:55"><name pos:start="91:37" pos:end="91:40">vima</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:47">frame</name><operator pos:start="91:48" pos:end="91:48">.</operator><name pos:start="91:49" pos:end="91:52">data</name><index pos:start="91:53" pos:end="91:55">[<expr pos:start="91:54" pos:end="91:54"><literal type="number" pos:start="91:54" pos:end="91:54">0</literal></expr>]</index></name> <operator pos:start="91:57" pos:end="91:57">+</operator> <name pos:start="91:59" pos:end="91:62">chan</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:44"><decl pos:start="93:9" pos:end="93:43"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:22">step_index</name> <init pos:start="93:24" pos:end="93:43">= <expr pos:start="93:26" pos:end="93:43"><name pos:start="93:26" pos:end="93:43"><name pos:start="93:26" pos:end="93:37">channel_hint</name><index pos:start="93:38" pos:end="93:43">[<expr pos:start="93:39" pos:end="93:42"><name pos:start="93:39" pos:end="93:42">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:36"><decl pos:start="95:9" pos:end="95:35"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:18">output</name> <init pos:start="95:20" pos:end="95:35">= <expr pos:start="95:22" pos:end="95:35"><name pos:start="95:22" pos:end="95:35"><name pos:start="95:22" pos:end="95:29">pcm_data</name><index pos:start="95:30" pos:end="95:35">[<expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:19"><decl pos:start="97:9" pos:end="97:18"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:18">sample</name></decl>;</decl_stmt>



        <for pos:start="101:9" pos:end="169:9">for <control pos:start="101:13" pos:end="101:52">(<init pos:start="101:14" pos:end="101:24"><expr pos:start="101:14" pos:end="101:23"><name pos:start="101:14" pos:end="101:19">sample</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</init> <condition pos:start="101:26" pos:end="101:42"><expr pos:start="101:26" pos:end="101:41"><name pos:start="101:26" pos:end="101:31">sample</name> <operator pos:start="101:33" pos:end="101:33">&lt;</operator> <name pos:start="101:35" pos:end="101:41">samples</name></expr>;</condition> <incr pos:start="101:44" pos:end="101:51"><expr pos:start="101:44" pos:end="101:51"><name pos:start="101:44" pos:end="101:49">sample</name><operator pos:start="101:50" pos:end="101:51">++</operator></expr></incr>)</control> <block pos:start="101:54" pos:end="169:9">{<block_content pos:start="103:13" pos:end="167:69">

            <decl_stmt pos:start="103:13" pos:end="103:54"><decl pos:start="103:13" pos:end="103:27"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:27">lookup_size</name></decl>, <decl pos:start="103:30" pos:end="103:35"><type ref="prev" pos:start="103:13" pos:end="103:15"/><name pos:start="103:30" pos:end="103:35">lookup</name></decl>, <decl pos:start="103:38" pos:end="103:44"><type ref="prev" pos:start="103:13" pos:end="103:15"/><name pos:start="103:38" pos:end="103:44">highbit</name></decl>, <decl pos:start="103:47" pos:end="103:53"><type ref="prev" pos:start="103:13" pos:end="103:15"/><name pos:start="103:47" pos:end="103:53">lowbits</name></decl>;</decl_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:53"><expr pos:start="107:13" pos:end="107:52"><name pos:start="107:13" pos:end="107:22">step_index</name>  <operator pos:start="107:25" pos:end="107:25">=</operator> <call pos:start="107:27" pos:end="107:52"><name pos:start="107:27" pos:end="107:33">av_clip</name><argument_list pos:start="107:34" pos:end="107:52">(<argument pos:start="107:35" pos:end="107:44"><expr pos:start="107:35" pos:end="107:44"><name pos:start="107:35" pos:end="107:44">step_index</name></expr></argument>, <argument pos:start="107:47" pos:end="107:47"><expr pos:start="107:47" pos:end="107:47"><literal type="number" pos:start="107:47" pos:end="107:47">0</literal></expr></argument>, <argument pos:start="107:50" pos:end="107:51"><expr pos:start="107:50" pos:end="107:51"><literal type="number" pos:start="107:50" pos:end="107:51">88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:49"><expr pos:start="109:13" pos:end="109:48"><name pos:start="109:13" pos:end="109:23">lookup_size</name> <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:48"><name pos:start="109:27" pos:end="109:36">size_table</name><index pos:start="109:37" pos:end="109:48">[<expr pos:start="109:38" pos:end="109:47"><name pos:start="109:38" pos:end="109:47">step_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:53"><expr pos:start="111:13" pos:end="111:52"><name pos:start="111:13" pos:end="111:18">lookup</name>      <operator pos:start="111:25" pos:end="111:25">=</operator> <call pos:start="111:27" pos:end="111:52"><name pos:start="111:27" pos:end="111:34">get_bits</name><argument_list pos:start="111:35" pos:end="111:52">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:38">gb</name></expr></argument>, <argument pos:start="111:41" pos:end="111:51"><expr pos:start="111:41" pos:end="111:51"><name pos:start="111:41" pos:end="111:51">lookup_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:49"><expr pos:start="113:13" pos:end="113:48"><name pos:start="113:13" pos:end="113:19">highbit</name>     <operator pos:start="113:25" pos:end="113:25">=</operator> <literal type="number" pos:start="113:27" pos:end="113:27">1</literal> <operator pos:start="113:29" pos:end="113:30">&lt;&lt;</operator> <operator pos:start="113:32" pos:end="113:32">(</operator><name pos:start="113:33" pos:end="113:43">lookup_size</name> <operator pos:start="113:45" pos:end="113:45">-</operator> <literal type="number" pos:start="113:47" pos:end="113:47">1</literal><operator pos:start="113:48" pos:end="113:48">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:38"><expr pos:start="115:13" pos:end="115:37"><name pos:start="115:13" pos:end="115:19">lowbits</name>     <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:33">highbit</name> <operator pos:start="115:35" pos:end="115:35">-</operator> <literal type="number" pos:start="115:37" pos:end="115:37">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="119:13" pos:end="125:28"><if pos:start="119:13" pos:end="121:34">if <condition pos:start="119:16" pos:end="119:33">(<expr pos:start="119:17" pos:end="119:32"><name pos:start="119:17" pos:end="119:22">lookup</name> <operator pos:start="119:24" pos:end="119:24">&amp;</operator> <name pos:start="119:26" pos:end="119:32">highbit</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:34"><block_content pos:start="121:17" pos:end="121:34">

                <expr_stmt pos:start="121:17" pos:end="121:34"><expr pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:22">lookup</name> <operator pos:start="121:24" pos:end="121:25">^=</operator> <name pos:start="121:27" pos:end="121:33">highbit</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="123:13" pos:end="125:28">else<block type="pseudo" pos:start="125:17" pos:end="125:28"><block_content pos:start="125:17" pos:end="125:28">

                <expr_stmt pos:start="125:17" pos:end="125:28"><expr pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:23">highbit</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <literal type="number" pos:start="125:27" pos:end="125:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="129:13" pos:end="157:13"><if pos:start="129:13" pos:end="133:13">if <condition pos:start="129:16" pos:end="129:34">(<expr pos:start="129:17" pos:end="129:33"><name pos:start="129:17" pos:end="129:22">lookup</name> <operator pos:start="129:24" pos:end="129:25">==</operator> <name pos:start="129:27" pos:end="129:33">lowbits</name></expr>)</condition> <block pos:start="129:36" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:44">

                <expr_stmt pos:start="131:17" pos:end="131:44"><expr pos:start="131:17" pos:end="131:43"><name pos:start="131:17" pos:end="131:22">output</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <call pos:start="131:26" pos:end="131:43"><name pos:start="131:26" pos:end="131:34">get_sbits</name><argument_list pos:start="131:35" pos:end="131:43">(<argument pos:start="131:36" pos:end="131:38"><expr pos:start="131:36" pos:end="131:38"><operator pos:start="131:36" pos:end="131:36">&amp;</operator><name pos:start="131:37" pos:end="131:38">gb</name></expr></argument>, <argument pos:start="131:41" pos:end="131:42"><expr pos:start="131:41" pos:end="131:42"><literal type="number" pos:start="131:41" pos:end="131:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="133:15" pos:end="157:13">else <block pos:start="133:20" pos:end="157:13">{<block_content pos:start="135:17" pos:end="155:55">

                <decl_stmt pos:start="135:17" pos:end="135:40"><decl pos:start="135:17" pos:end="135:33"><type pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">int</name></type> <name pos:start="135:21" pos:end="135:33">predict_index</name></decl>, <decl pos:start="135:36" pos:end="135:39"><type ref="prev" pos:start="135:17" pos:end="135:19"/><name pos:start="135:36" pos:end="135:39">diff</name></decl>;</decl_stmt>



                <expr_stmt pos:start="139:17" pos:end="139:82"><expr pos:start="139:17" pos:end="139:81"><name pos:start="139:17" pos:end="139:29">predict_index</name> <operator pos:start="139:31" pos:end="139:31">=</operator> <operator pos:start="139:33" pos:end="139:33">(</operator><name pos:start="139:34" pos:end="139:39">lookup</name> <operator pos:start="139:41" pos:end="139:42">&lt;&lt;</operator> <operator pos:start="139:44" pos:end="139:44">(</operator><literal type="number" pos:start="139:45" pos:end="139:47">7</literal> <operator pos:start="139:47" pos:end="139:47">-</operator> <name pos:start="139:49" pos:end="139:59">lookup_size</name><operator pos:start="139:60" pos:end="139:60">)</operator><operator pos:start="139:61" pos:end="139:61">)</operator> <operator pos:start="139:63" pos:end="139:63">|</operator> <operator pos:start="139:65" pos:end="139:65">(</operator><name pos:start="139:66" pos:end="139:75">step_index</name> <operator pos:start="139:77" pos:end="139:78">&lt;&lt;</operator> <literal type="number" pos:start="139:80" pos:end="139:80">6</literal><operator pos:start="139:81" pos:end="139:81">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:64"><expr pos:start="141:17" pos:end="141:63"><name pos:start="141:17" pos:end="141:29">predict_index</name> <operator pos:start="141:31" pos:end="141:31">=</operator> <call pos:start="141:33" pos:end="141:63"><name pos:start="141:33" pos:end="141:39">av_clip</name><argument_list pos:start="141:40" pos:end="141:63">(<argument pos:start="141:41" pos:end="141:53"><expr pos:start="141:41" pos:end="141:53"><name pos:start="141:41" pos:end="141:53">predict_index</name></expr></argument>, <argument pos:start="141:56" pos:end="141:56"><expr pos:start="141:56" pos:end="141:56"><literal type="number" pos:start="141:56" pos:end="141:56">0</literal></expr></argument>, <argument pos:start="141:59" pos:end="141:62"><expr pos:start="141:59" pos:end="141:62"><literal type="number" pos:start="141:59" pos:end="141:62">5785</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:67"><expr pos:start="143:17" pos:end="143:66"><name pos:start="143:17" pos:end="143:20">diff</name>          <operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:66"><name pos:start="143:33" pos:end="143:36">vima</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:51">predict_table</name><index pos:start="143:52" pos:end="143:66">[<expr pos:start="143:53" pos:end="143:65"><name pos:start="143:53" pos:end="143:65">predict_index</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="145:17" pos:end="147:81"><if pos:start="145:17" pos:end="147:81">if <condition pos:start="145:20" pos:end="145:27">(<expr pos:start="145:21" pos:end="145:26"><name pos:start="145:21" pos:end="145:26">lookup</name></expr>)</condition><block type="pseudo" pos:start="147:21" pos:end="147:81"><block_content pos:start="147:21" pos:end="147:81">

                    <expr_stmt pos:start="147:21" pos:end="147:81"><expr pos:start="147:21" pos:end="147:80"><name pos:start="147:21" pos:end="147:24">diff</name> <operator pos:start="147:26" pos:end="147:27">+=</operator> <name pos:start="147:29" pos:end="147:59"><name pos:start="147:29" pos:end="147:47">ff_adpcm_step_table</name><index pos:start="147:48" pos:end="147:59">[<expr pos:start="147:49" pos:end="147:58"><name pos:start="147:49" pos:end="147:58">step_index</name></expr>]</index></name> <operator pos:start="147:61" pos:end="147:62">&gt;&gt;</operator> <operator pos:start="147:64" pos:end="147:64">(</operator><name pos:start="147:65" pos:end="147:75">lookup_size</name> <operator pos:start="147:77" pos:end="147:77">-</operator> <literal type="number" pos:start="147:79" pos:end="147:79">1</literal><operator pos:start="147:80" pos:end="147:80">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="149:17" pos:end="151:34"><if pos:start="149:17" pos:end="151:34">if <condition pos:start="149:20" pos:end="149:28">(<expr pos:start="149:21" pos:end="149:27"><name pos:start="149:21" pos:end="149:27">highbit</name></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:34"><block_content pos:start="151:21" pos:end="151:34">

                    <expr_stmt pos:start="151:21" pos:end="151:34"><expr pos:start="151:21" pos:end="151:33"><name pos:start="151:21" pos:end="151:24">diff</name>  <operator pos:start="151:27" pos:end="151:27">=</operator> <operator pos:start="151:29" pos:end="151:29">-</operator><name pos:start="151:30" pos:end="151:33">diff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="155:17" pos:end="155:55"><expr pos:start="155:17" pos:end="155:54"><name pos:start="155:17" pos:end="155:22">output</name>  <operator pos:start="155:25" pos:end="155:25">=</operator> <call pos:start="155:27" pos:end="155:54"><name pos:start="155:27" pos:end="155:39">av_clip_int16</name><argument_list pos:start="155:40" pos:end="155:54">(<argument pos:start="155:41" pos:end="155:53"><expr pos:start="155:41" pos:end="155:53"><name pos:start="155:41" pos:end="155:46">output</name> <operator pos:start="155:48" pos:end="155:48">+</operator> <name pos:start="155:50" pos:end="155:53">diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="161:13" pos:end="161:27"><expr pos:start="161:13" pos:end="161:26"><operator pos:start="161:13" pos:end="161:13">*</operator><name pos:start="161:14" pos:end="161:17">dest</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:26">output</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:29"><expr pos:start="163:13" pos:end="163:28"><name pos:start="163:13" pos:end="163:16">dest</name> <operator pos:start="163:18" pos:end="163:19">+=</operator> <name pos:start="163:21" pos:end="163:28">channels</name></expr>;</expr_stmt>



            <expr_stmt pos:start="167:13" pos:end="167:69"><expr pos:start="167:13" pos:end="167:68"><name pos:start="167:13" pos:end="167:22">step_index</name> <operator pos:start="167:24" pos:end="167:25">+=</operator> <name pos:start="167:27" pos:end="167:68"><name pos:start="167:27" pos:end="167:43">step_index_tables</name><index pos:start="167:44" pos:end="167:60">[<expr pos:start="167:45" pos:end="167:59"><name pos:start="167:45" pos:end="167:55">lookup_size</name> <operator pos:start="167:57" pos:end="167:57">-</operator> <literal type="number" pos:start="167:59" pos:end="167:59">2</literal></expr>]</index><index pos:start="167:61" pos:end="167:68">[<expr pos:start="167:62" pos:end="167:67"><name pos:start="167:62" pos:end="167:67">lookup</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="175:5" pos:end="175:25"><expr pos:start="175:5" pos:end="175:24"><operator pos:start="175:5" pos:end="175:5">*</operator><name pos:start="175:6" pos:end="175:18">got_frame_ptr</name>   <operator pos:start="175:22" pos:end="175:22">=</operator> <literal type="number" pos:start="175:24" pos:end="175:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:35"><expr pos:start="177:5" pos:end="177:34"><operator pos:start="177:5" pos:end="177:5">*</operator><operator pos:start="177:6" pos:end="177:6">(</operator><name pos:start="177:7" pos:end="177:13">AVFrame</name> <operator pos:start="177:15" pos:end="177:15">*</operator><operator pos:start="177:16" pos:end="177:16">)</operator><name pos:start="177:17" pos:end="177:20">data</name> <operator pos:start="177:22" pos:end="177:22">=</operator> <name pos:start="177:24" pos:end="177:34"><name pos:start="177:24" pos:end="177:27">vima</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:34">frame</name></name></expr>;</expr_stmt>



    <return pos:start="181:5" pos:end="181:21">return <expr pos:start="181:12" pos:end="181:20"><name pos:start="181:12" pos:end="181:20"><name pos:start="181:12" pos:end="181:14">pkt</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:20">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
