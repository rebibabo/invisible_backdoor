<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2321.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">exynos4210_gic_init</name><parameter_list pos:start="1:32" pos:end="1:44">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:40"><name pos:start="1:33" pos:end="1:38">Object</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:46">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">Exynos4210GicState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:47">= <expr pos:start="7:29" pos:end="7:47"><call pos:start="7:29" pos:end="7:47"><name pos:start="7:29" pos:end="7:42">EXYNOS4210_GIC</name><argument_list pos:start="7:43" pos:end="7:47">(<argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:46">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">sbd</name> <init pos:start="9:23" pos:end="9:43">= <expr pos:start="9:25" pos:end="9:43"><call pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:38">SYS_BUS_DEVICE</name><argument_list pos:start="9:39" pos:end="9:43">(<argument pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:42">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name></type> <name pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:25">cpu_prefix</name><index pos:start="13:26" pos:end="13:27">[]</index></name> <init pos:start="13:29" pos:end="13:56">= <expr pos:start="13:31" pos:end="13:56"><literal type="string" pos:start="13:31" pos:end="13:56">"exynos4210-gic-alias_cpu"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:59"><decl pos:start="15:5" pos:end="15:58"><type pos:start="15:5" pos:end="15:14"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name></type> <name pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:26">dist_prefix</name><index pos:start="15:27" pos:end="15:28">[]</index></name> <init pos:start="15:30" pos:end="15:58">= <expr pos:start="15:32" pos:end="15:58"><literal type="string" pos:start="15:32" pos:end="15:58">"exynos4210-gic-alias_dist"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:47"><name pos:start="17:10" pos:end="17:23">cpu_alias_name</name><index pos:start="17:24" pos:end="17:47">[<expr pos:start="17:25" pos:end="17:46"><sizeof pos:start="17:25" pos:end="17:42">sizeof<argument_list pos:start="17:31" pos:end="17:42">(<argument pos:start="17:32" pos:end="17:41"><expr pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:41">cpu_prefix</name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:44" pos:end="17:44">+</operator> <literal type="number" pos:start="17:46" pos:end="17:46">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:49"><decl pos:start="19:5" pos:end="19:48"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:48"><name pos:start="19:10" pos:end="19:24">dist_alias_name</name><index pos:start="19:25" pos:end="19:48">[<expr pos:start="19:26" pos:end="19:47"><sizeof pos:start="19:26" pos:end="19:43">sizeof<argument_list pos:start="19:32" pos:end="19:43">(<argument pos:start="19:33" pos:end="19:42"><expr pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:42">cpu_prefix</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:45" pos:end="19:45">+</operator> <literal type="number" pos:start="19:47" pos:end="19:47">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">SysBusDevice</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:24">busdev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">gic</name></name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:41"><name pos:start="25:14" pos:end="25:24">qdev_create</name><argument_list pos:start="25:25" pos:end="25:41">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">NULL</name></expr></argument>, <argument pos:start="25:32" pos:end="25:40"><expr pos:start="25:32" pos:end="25:40"><literal type="string" pos:start="25:32" pos:end="25:40">"arm_gic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><call pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:24">qdev_prop_set_uint32</name><argument_list pos:start="27:25" pos:end="27:55">(<argument pos:start="27:26" pos:end="27:31"><expr pos:start="27:26" pos:end="27:31"><name pos:start="27:26" pos:end="27:31"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:31">gic</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:42"><expr pos:start="27:34" pos:end="27:42"><literal type="string" pos:start="27:34" pos:end="27:42">"num-cpu"</literal></expr></argument>, <argument pos:start="27:45" pos:end="27:54"><expr pos:start="27:45" pos:end="27:54"><name pos:start="27:45" pos:end="27:54"><name pos:start="27:45" pos:end="27:45">s</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:54">num_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><call pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:24">qdev_prop_set_uint32</name><argument_list pos:start="29:25" pos:end="29:64">(<argument pos:start="29:26" pos:end="29:31"><expr pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">gic</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:42"><expr pos:start="29:34" pos:end="29:42"><literal type="string" pos:start="29:34" pos:end="29:42">"num-irq"</literal></expr></argument>, <argument pos:start="29:45" pos:end="29:63"><expr pos:start="29:45" pos:end="29:63"><name pos:start="29:45" pos:end="29:63">EXYNOS4210_GIC_NIRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><call pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:20">qdev_init_nofail</name><argument_list pos:start="31:21" pos:end="31:28">(<argument pos:start="31:22" pos:end="31:27"><expr pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">gic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:10">busdev</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:35"><name pos:start="33:14" pos:end="33:27">SYS_BUS_DEVICE</name><argument_list pos:start="33:28" pos:end="33:35">(<argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:34">gic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:54">/* Pass through outbound IRQ lines from the GIC */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><call pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:19">sysbus_pass_irq</name><argument_list pos:start="39:20" pos:end="39:32">(<argument pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">sbd</name></expr></argument>, <argument pos:start="39:26" pos:end="39:31"><expr pos:start="39:26" pos:end="39:31"><name pos:start="39:26" pos:end="39:31">busdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:52">/* Pass through inbound GPIO lines to the GIC */</comment>

    <expr_stmt pos:start="45:5" pos:end="47:48"><expr pos:start="45:5" pos:end="47:47"><call pos:start="45:5" pos:end="47:47"><name pos:start="45:5" pos:end="45:21">qdev_init_gpio_in</name><argument_list pos:start="45:22" pos:end="47:47">(<argument pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">dev</name></expr></argument>, <argument pos:start="45:28" pos:end="45:49"><expr pos:start="45:28" pos:end="45:49"><name pos:start="45:28" pos:end="45:49">exynos4210_gic_set_irq</name></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:46"><expr pos:start="47:23" pos:end="47:46"><name pos:start="47:23" pos:end="47:41">EXYNOS4210_GIC_NIRQ</name> <operator pos:start="47:43" pos:end="47:43">-</operator> <literal type="number" pos:start="47:45" pos:end="47:46">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:48"><expr pos:start="51:5" pos:end="53:47"><call pos:start="51:5" pos:end="53:47"><name pos:start="51:5" pos:end="51:22">memory_region_init</name><argument_list pos:start="51:23" pos:end="53:47">(<argument pos:start="51:24" pos:end="51:40"><expr pos:start="51:24" pos:end="51:40"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:40"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:40">cpu_container</name></name></expr></argument>, <argument pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><name pos:start="51:43" pos:end="51:45">obj</name></expr></argument>, <argument pos:start="51:48" pos:end="51:73"><expr pos:start="51:48" pos:end="51:73"><literal type="string" pos:start="51:48" pos:end="51:73">"exynos4210-cpu-container"</literal></expr></argument>,

            <argument pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:46">EXYNOS4210_EXT_GIC_CPU_REGION_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:49"><expr pos:start="55:5" pos:end="57:48"><call pos:start="55:5" pos:end="57:48"><name pos:start="55:5" pos:end="55:22">memory_region_init</name><argument_list pos:start="55:23" pos:end="57:48">(<argument pos:start="55:24" pos:end="55:41"><expr pos:start="55:24" pos:end="55:41"><operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:41"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:41">dist_container</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:46"><expr pos:start="55:44" pos:end="55:46"><name pos:start="55:44" pos:end="55:46">obj</name></expr></argument>, <argument pos:start="55:49" pos:end="55:75"><expr pos:start="55:49" pos:end="55:75"><literal type="string" pos:start="55:49" pos:end="55:75">"exynos4210-dist-container"</literal></expr></argument>,

            <argument pos:start="57:13" pos:end="57:47"><expr pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:47">EXYNOS4210_EXT_GIC_DIST_REGION_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="61:5" pos:end="101:5">for <control pos:start="61:9" pos:end="61:36">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:30">num_cpu</name></name></expr>;</condition> <incr pos:start="61:33" pos:end="61:35"><expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:33">i</name><operator pos:start="61:34" pos:end="61:35">++</operator></expr></incr>)</control> <block pos:start="61:38" pos:end="101:5">{<block_content pos:start="65:9" pos:end="99:74">

        <comment type="block" pos:start="63:9" pos:end="63:44">/* Map CPU interface per SMP Core */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:55"><expr pos:start="65:9" pos:end="65:54"><call pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:15">sprintf</name><argument_list pos:start="65:16" pos:end="65:54">(<argument pos:start="65:17" pos:end="65:30"><expr pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:30">cpu_alias_name</name></expr></argument>, <argument pos:start="65:33" pos:end="65:38"><expr pos:start="65:33" pos:end="65:38"><literal type="string" pos:start="65:33" pos:end="65:38">"%s%x"</literal></expr></argument>, <argument pos:start="65:41" pos:end="65:50"><expr pos:start="65:41" pos:end="65:50"><name pos:start="65:41" pos:end="65:50">cpu_prefix</name></expr></argument>, <argument pos:start="65:53" pos:end="65:53"><expr pos:start="65:53" pos:end="65:53"><name pos:start="65:53" pos:end="65:53">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="75:65"><expr pos:start="67:9" pos:end="75:64"><call pos:start="67:9" pos:end="75:64"><name pos:start="67:9" pos:end="67:32">memory_region_init_alias</name><argument_list pos:start="67:33" pos:end="75:64">(<argument pos:start="67:34" pos:end="67:49"><expr pos:start="67:34" pos:end="67:49"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:49"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:46">cpu_alias</name><index pos:start="67:47" pos:end="67:49">[<expr pos:start="67:48" pos:end="67:48"><name pos:start="67:48" pos:end="67:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:52" pos:end="67:54"><expr pos:start="67:52" pos:end="67:54"><name pos:start="67:52" pos:end="67:54">obj</name></expr></argument>,

                                 <argument pos:start="69:34" pos:end="69:47"><expr pos:start="69:34" pos:end="69:47"><name pos:start="69:34" pos:end="69:47">cpu_alias_name</name></expr></argument>,

                                 <argument pos:start="71:34" pos:end="71:66"><expr pos:start="71:34" pos:end="71:66"><call pos:start="71:34" pos:end="71:66"><name pos:start="71:34" pos:end="71:55">sysbus_mmio_get_region</name><argument_list pos:start="71:56" pos:end="71:66">(<argument pos:start="71:57" pos:end="71:62"><expr pos:start="71:57" pos:end="71:62"><name pos:start="71:57" pos:end="71:62">busdev</name></expr></argument>, <argument pos:start="71:65" pos:end="71:65"><expr pos:start="71:65" pos:end="71:65"><literal type="number" pos:start="71:65" pos:end="71:65">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><literal type="number" pos:start="73:34" pos:end="73:34">0</literal></expr></argument>,

                                 <argument pos:start="75:34" pos:end="75:63"><expr pos:start="75:34" pos:end="75:63"><name pos:start="75:34" pos:end="75:63">EXYNOS4210_GIC_CPU_REGION_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:72"><expr pos:start="77:9" pos:end="79:71"><call pos:start="77:9" pos:end="79:71"><name pos:start="77:9" pos:end="77:35">memory_region_add_subregion</name><argument_list pos:start="77:36" pos:end="79:71">(<argument pos:start="77:37" pos:end="77:53"><expr pos:start="77:37" pos:end="77:53"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:53"><name pos:start="77:38" pos:end="77:38">s</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:53">cpu_container</name></name></expr></argument>,

                <argument pos:start="79:17" pos:end="79:52"><expr pos:start="79:17" pos:end="79:52"><call pos:start="79:17" pos:end="79:52"><name pos:start="79:17" pos:end="79:49">EXYNOS4210_EXT_GIC_CPU_GET_OFFSET</name><argument_list pos:start="79:50" pos:end="79:52">(<argument pos:start="79:51" pos:end="79:51"><expr pos:start="79:51" pos:end="79:51"><name pos:start="79:51" pos:end="79:51">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:55" pos:end="79:70"><expr pos:start="79:55" pos:end="79:70"><operator pos:start="79:55" pos:end="79:55">&amp;</operator><name pos:start="79:56" pos:end="79:70"><name pos:start="79:56" pos:end="79:56">s</name><operator pos:start="79:57" pos:end="79:58">-&gt;</operator><name pos:start="79:59" pos:end="79:67">cpu_alias</name><index pos:start="79:68" pos:end="79:70">[<expr pos:start="79:69" pos:end="79:69"><name pos:start="79:69" pos:end="79:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="83:9" pos:end="83:42">/* Map Distributor per SMP Core */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:57"><expr pos:start="85:9" pos:end="85:56"><call pos:start="85:9" pos:end="85:56"><name pos:start="85:9" pos:end="85:15">sprintf</name><argument_list pos:start="85:16" pos:end="85:56">(<argument pos:start="85:17" pos:end="85:31"><expr pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:31">dist_alias_name</name></expr></argument>, <argument pos:start="85:34" pos:end="85:39"><expr pos:start="85:34" pos:end="85:39"><literal type="string" pos:start="85:34" pos:end="85:39">"%s%x"</literal></expr></argument>, <argument pos:start="85:42" pos:end="85:52"><expr pos:start="85:42" pos:end="85:52"><name pos:start="85:42" pos:end="85:52">dist_prefix</name></expr></argument>, <argument pos:start="85:55" pos:end="85:55"><expr pos:start="85:55" pos:end="85:55"><name pos:start="85:55" pos:end="85:55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="95:66"><expr pos:start="87:9" pos:end="95:65"><call pos:start="87:9" pos:end="95:65"><name pos:start="87:9" pos:end="87:32">memory_region_init_alias</name><argument_list pos:start="87:33" pos:end="95:65">(<argument pos:start="87:34" pos:end="87:50"><expr pos:start="87:34" pos:end="87:50"><operator pos:start="87:34" pos:end="87:34">&amp;</operator><name pos:start="87:35" pos:end="87:50"><name pos:start="87:35" pos:end="87:35">s</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:47">dist_alias</name><index pos:start="87:48" pos:end="87:50">[<expr pos:start="87:49" pos:end="87:49"><name pos:start="87:49" pos:end="87:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="87:53" pos:end="87:55"><expr pos:start="87:53" pos:end="87:55"><name pos:start="87:53" pos:end="87:55">obj</name></expr></argument>,

                                 <argument pos:start="89:34" pos:end="89:48"><expr pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:48">dist_alias_name</name></expr></argument>,

                                 <argument pos:start="91:34" pos:end="91:66"><expr pos:start="91:34" pos:end="91:66"><call pos:start="91:34" pos:end="91:66"><name pos:start="91:34" pos:end="91:55">sysbus_mmio_get_region</name><argument_list pos:start="91:56" pos:end="91:66">(<argument pos:start="91:57" pos:end="91:62"><expr pos:start="91:57" pos:end="91:62"><name pos:start="91:57" pos:end="91:62">busdev</name></expr></argument>, <argument pos:start="91:65" pos:end="91:65"><expr pos:start="91:65" pos:end="91:65"><literal type="number" pos:start="91:65" pos:end="91:65">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="93:34" pos:end="93:34"><expr pos:start="93:34" pos:end="93:34"><literal type="number" pos:start="93:34" pos:end="93:34">0</literal></expr></argument>,

                                 <argument pos:start="95:34" pos:end="95:64"><expr pos:start="95:34" pos:end="95:64"><name pos:start="95:34" pos:end="95:64">EXYNOS4210_GIC_DIST_REGION_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="99:74"><expr pos:start="97:9" pos:end="99:73"><call pos:start="97:9" pos:end="99:73"><name pos:start="97:9" pos:end="97:35">memory_region_add_subregion</name><argument_list pos:start="97:36" pos:end="99:73">(<argument pos:start="97:37" pos:end="97:54"><expr pos:start="97:37" pos:end="97:54"><operator pos:start="97:37" pos:end="97:37">&amp;</operator><name pos:start="97:38" pos:end="97:54"><name pos:start="97:38" pos:end="97:38">s</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:54">dist_container</name></name></expr></argument>,

                <argument pos:start="99:17" pos:end="99:53"><expr pos:start="99:17" pos:end="99:53"><call pos:start="99:17" pos:end="99:53"><name pos:start="99:17" pos:end="99:50">EXYNOS4210_EXT_GIC_DIST_GET_OFFSET</name><argument_list pos:start="99:51" pos:end="99:53">(<argument pos:start="99:52" pos:end="99:52"><expr pos:start="99:52" pos:end="99:52"><name pos:start="99:52" pos:end="99:52">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:56" pos:end="99:72"><expr pos:start="99:56" pos:end="99:72"><operator pos:start="99:56" pos:end="99:56">&amp;</operator><name pos:start="99:57" pos:end="99:72"><name pos:start="99:57" pos:end="99:57">s</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:69">dist_alias</name><index pos:start="99:70" pos:end="99:72">[<expr pos:start="99:71" pos:end="99:71"><name pos:start="99:71" pos:end="99:71">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="105:5" pos:end="105:45"><expr pos:start="105:5" pos:end="105:44"><call pos:start="105:5" pos:end="105:44"><name pos:start="105:5" pos:end="105:20">sysbus_init_mmio</name><argument_list pos:start="105:21" pos:end="105:44">(<argument pos:start="105:22" pos:end="105:24"><expr pos:start="105:22" pos:end="105:24"><name pos:start="105:22" pos:end="105:24">sbd</name></expr></argument>, <argument pos:start="105:27" pos:end="105:43"><expr pos:start="105:27" pos:end="105:43"><operator pos:start="105:27" pos:end="105:27">&amp;</operator><name pos:start="105:28" pos:end="105:43"><name pos:start="105:28" pos:end="105:28">s</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:43">cpu_container</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:46"><expr pos:start="107:5" pos:end="107:45"><call pos:start="107:5" pos:end="107:45"><name pos:start="107:5" pos:end="107:20">sysbus_init_mmio</name><argument_list pos:start="107:21" pos:end="107:45">(<argument pos:start="107:22" pos:end="107:24"><expr pos:start="107:22" pos:end="107:24"><name pos:start="107:22" pos:end="107:24">sbd</name></expr></argument>, <argument pos:start="107:27" pos:end="107:44"><expr pos:start="107:27" pos:end="107:44"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:44"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:44">dist_container</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
