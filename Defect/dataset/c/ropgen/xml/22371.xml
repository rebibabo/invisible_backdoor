<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22371.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vmdaudio_loadsound</name><parameter_list pos:start="1:31" pos:end="3:30">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">VmdAudioContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:59">unsigned</name> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">data</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:11">uint8_t</name> <modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:16">buf</name></decl></parameter>, <parameter pos:start="3:19" pos:end="3:29"><decl pos:start="3:19" pos:end="3:29"><type pos:start="3:19" pos:end="3:29"><name pos:start="3:19" pos:end="3:21">int</name></type> <name pos:start="3:23" pos:end="3:29">silence</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <if_stmt pos:start="7:5" pos:end="33:5"><if pos:start="7:5" pos:end="31:5">if <condition pos:start="7:8" pos:end="7:25">(<expr pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:9">s</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:19">channels</name></name> <operator pos:start="7:21" pos:end="7:22">==</operator> <literal type="number" pos:start="7:24" pos:end="7:24">2</literal></expr>)</condition> <block pos:start="7:27" pos:end="31:5">{<block_content pos:start="9:9" pos:end="29:9">

        <if_stmt pos:start="9:9" pos:end="29:9"><if pos:start="9:9" pos:end="19:9">if <condition pos:start="9:12" pos:end="9:41">(<expr pos:start="9:13" pos:end="9:40"><operator pos:start="9:13" pos:end="9:13">(</operator><name pos:start="9:14" pos:end="9:27"><name pos:start="9:14" pos:end="9:14">s</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:27">block_align</name></name> <operator pos:start="9:29" pos:end="9:29">&amp;</operator> <literal type="number" pos:start="9:31" pos:end="9:34">0x01</literal><operator pos:start="9:35" pos:end="9:35">)</operator> <operator pos:start="9:37" pos:end="9:38">==</operator> <literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr>)</condition> <block pos:start="9:43" pos:end="19:9">{<block_content pos:start="11:13" pos:end="17:55">

            <if_stmt pos:start="11:13" pos:end="17:55"><if pos:start="11:13" pos:end="13:52">if <condition pos:start="11:16" pos:end="11:24">(<expr pos:start="11:17" pos:end="11:23"><name pos:start="11:17" pos:end="11:23">silence</name></expr>)</condition><block type="pseudo" pos:start="13:17" pos:end="13:52"><block_content pos:start="13:17" pos:end="13:52">

                <expr_stmt pos:start="13:17" pos:end="13:52"><expr pos:start="13:17" pos:end="13:51"><call pos:start="13:17" pos:end="13:51"><name pos:start="13:17" pos:end="13:22">memset</name><argument_list pos:start="13:23" pos:end="13:51">(<argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">data</name></expr></argument>, <argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr></argument>, <argument pos:start="13:33" pos:end="13:50"><expr pos:start="13:33" pos:end="13:50"><name pos:start="13:33" pos:end="13:46"><name pos:start="13:33" pos:end="13:33">s</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:46">block_align</name></name> <operator pos:start="13:48" pos:end="13:48">*</operator> <literal type="number" pos:start="13:50" pos:end="13:50">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="15:13" pos:end="17:55">else<block type="pseudo" pos:start="17:17" pos:end="17:55"><block_content pos:start="17:17" pos:end="17:55">

                <expr_stmt pos:start="17:17" pos:end="17:55"><expr pos:start="17:17" pos:end="17:54"><call pos:start="17:17" pos:end="17:54"><name pos:start="17:17" pos:end="17:37">vmdaudio_decode_audio</name><argument_list pos:start="17:38" pos:end="17:54">(<argument pos:start="17:39" pos:end="17:39"><expr pos:start="17:39" pos:end="17:39"><name pos:start="17:39" pos:end="17:39">s</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">data</name></expr></argument>, <argument pos:start="17:48" pos:end="17:50"><expr pos:start="17:48" pos:end="17:50"><name pos:start="17:48" pos:end="17:50">buf</name></expr></argument>, <argument pos:start="17:53" pos:end="17:53"><expr pos:start="17:53" pos:end="17:53"><literal type="number" pos:start="17:53" pos:end="17:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="29:9">else <block pos:start="19:16" pos:end="29:9">{<block_content pos:start="21:13" pos:end="23:52">

            <if_stmt pos:start="21:13" pos:end="23:52"><if pos:start="21:13" pos:end="23:52">if <condition pos:start="21:16" pos:end="21:24">(<expr pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:23">silence</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:52"><block_content pos:start="23:17" pos:end="23:52">

                <expr_stmt pos:start="23:17" pos:end="23:52"><expr pos:start="23:17" pos:end="23:51"><call pos:start="23:17" pos:end="23:51"><name pos:start="23:17" pos:end="23:22">memset</name><argument_list pos:start="23:23" pos:end="23:51">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">data</name></expr></argument>, <argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:50"><expr pos:start="23:33" pos:end="23:50"><name pos:start="23:33" pos:end="23:46"><name pos:start="23:33" pos:end="23:33">s</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:46">block_align</name></name> <operator pos:start="23:48" pos:end="23:48">*</operator> <literal type="number" pos:start="23:50" pos:end="23:50">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="25:1" pos:end="25:18">//            else</comment>

<comment type="line" pos:start="27:1" pos:end="27:57">//                vmdaudio_decode_audio(s, data, buf, 1);</comment>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="33:5">else <block pos:start="31:12" pos:end="33:5">{<block_content>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
