<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26301.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">bdrv_pwrite_sync</name><parameter_list pos:start="1:21" pos:end="3:31">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">int64_t</name></type> <name pos:start="1:52" pos:end="1:57">offset</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:19"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:14">void</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">buf</name></decl></parameter>, <parameter pos:start="3:22" pos:end="3:30"><decl pos:start="3:22" pos:end="3:30"><type pos:start="3:22" pos:end="3:30"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:30">count</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:45"><name pos:start="11:11" pos:end="11:21">bdrv_pwrite</name><argument_list pos:start="11:22" pos:end="11:45">(<argument pos:start="11:23" pos:end="11:24"><expr pos:start="11:23" pos:end="11:24"><name pos:start="11:23" pos:end="11:24">bs</name></expr></argument>, <argument pos:start="11:27" pos:end="11:32"><expr pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:32">offset</name></expr></argument>, <argument pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:37">buf</name></expr></argument>, <argument pos:start="11:40" pos:end="11:44"><expr pos:start="11:40" pos:end="11:44"><name pos:start="11:40" pos:end="11:44">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition> <block pos:start="13:18" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:65">/* No flush needed for cache=writethrough, it uses O_DSYNC */</comment>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:50">(<expr pos:start="23:9" pos:end="23:49"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:23"><name pos:start="23:10" pos:end="23:11">bs</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">open_flags</name></name> <operator pos:start="23:25" pos:end="23:25">&amp;</operator> <name pos:start="23:27" pos:end="23:43">BDRV_O_CACHE_MASK</name><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:47">!=</operator> <literal type="number" pos:start="23:49" pos:end="23:49">0</literal></expr>)</condition> <block pos:start="23:52" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:23">

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:18">bdrv_flush</name><argument_list pos:start="25:19" pos:end="25:22">(<argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><name pos:start="25:20" pos:end="25:21">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
