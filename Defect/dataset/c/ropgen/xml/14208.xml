<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14208.c" pos:tabs="8"><function pos:start="1:1" pos:end="345:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:29">get_segment</name><parameter_list pos:start="1:30" pos:end="3:67">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:54">mmu_ctx_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">ctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:42">target_ulong</name></type> <name pos:start="3:44" pos:end="3:48">eaddr</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:56"><decl pos:start="3:51" pos:end="3:56"><type pos:start="3:51" pos:end="3:56"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:56">rw</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:66"><decl pos:start="3:59" pos:end="3:66"><type pos:start="3:59" pos:end="3:66"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:66">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="345:1">{<block_content pos:start="7:5" pos:end="343:15">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:27">hash</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">vsid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ds</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">pr</name></decl>, <decl pos:start="11:17" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:32">target_page_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">ret2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">pr</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:15">msr_pr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:14">eaddr</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:22">eaddr</name></expr>;</expr_stmt>

<cpp:if pos:start="21:1" pos:end="21:25">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:11">defined</name><argument_list pos:start="21:12" pos:end="21:25">(<argument pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="23:5" pos:end="135:5"><if pos:start="23:5" pos:end="95:5">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">mmu_model</name></name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:39">POWERPC_MMU_64</name></expr>)</condition> <block pos:start="23:42" pos:end="95:5">{<block_content pos:start="25:9" pos:end="93:65">

        <decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:22"><type pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:17">ppc_slb_t</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:22">slb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:30"><decl pos:start="27:9" pos:end="27:29"><type pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20">target_ulong</name></type> <name pos:start="27:22" pos:end="27:29">pageaddr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:25"><decl pos:start="29:9" pos:end="29:24"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:24">segment_bits</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:15">LOG_MMU</name><argument_list pos:start="33:16" pos:end="33:31">(<argument pos:start="33:17" pos:end="33:30"><expr pos:start="33:17" pos:end="33:30"><literal type="string" pos:start="33:17" pos:end="33:30">"Check SLBs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:11">slb</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:36"><name pos:start="35:15" pos:end="35:24">slb_lookup</name><argument_list pos:start="35:25" pos:end="35:36">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">env</name></expr></argument>, <argument pos:start="35:31" pos:end="35:35"><expr pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:35">eaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:17">(<expr pos:start="37:13" pos:end="37:16"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:16">slb</name></expr>)</condition> <block pos:start="37:19" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">5</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:35">(<expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:15">slb</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">vsid</name></name> <operator pos:start="45:23" pos:end="45:23">&amp;</operator> <name pos:start="45:25" pos:end="45:34">SLB_VSID_B</name></expr>)</condition> <block pos:start="45:37" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:30">

            <expr_stmt pos:start="47:13" pos:end="47:68"><expr pos:start="47:13" pos:end="47:67"><name pos:start="47:13" pos:end="47:16">vsid</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:29"><name pos:start="47:21" pos:end="47:23">slb</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:29">vsid</name></name> <operator pos:start="47:31" pos:end="47:31">&amp;</operator> <name pos:start="47:33" pos:end="47:45">SLB_VSID_VSID</name><operator pos:start="47:46" pos:end="47:46">)</operator> <operator pos:start="47:48" pos:end="47:49">&gt;&gt;</operator> <name pos:start="47:51" pos:end="47:67">SLB_VSID_SHIFT_1T</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:24">segment_bits</name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:29">40</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="57:9">else <block pos:start="51:16" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:30">

            <expr_stmt pos:start="53:13" pos:end="53:65"><expr pos:start="53:13" pos:end="53:64"><name pos:start="53:13" pos:end="53:16">vsid</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:23">slb</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:29">vsid</name></name> <operator pos:start="53:31" pos:end="53:31">&amp;</operator> <name pos:start="53:33" pos:end="53:45">SLB_VSID_VSID</name><operator pos:start="53:46" pos:end="53:46">)</operator> <operator pos:start="53:48" pos:end="53:49">&gt;&gt;</operator> <name pos:start="53:51" pos:end="53:64">SLB_VSID_SHIFT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:30"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:24">segment_bits</name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:29">28</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="63:54"><expr pos:start="61:9" pos:end="63:53"><name pos:start="61:9" pos:end="61:24">target_page_bits</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <ternary pos:start="61:28" pos:end="63:53"><condition pos:start="61:28" pos:end="63:13"><expr pos:start="61:28" pos:end="61:51"><operator pos:start="61:28" pos:end="61:28">(</operator><name pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:31">slb</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:37">vsid</name></name> <operator pos:start="61:39" pos:end="61:39">&amp;</operator> <name pos:start="61:41" pos:end="61:50">SLB_VSID_L</name><operator pos:start="61:51" pos:end="61:51">)</operator></expr>

            ?</condition><then pos:start="63:15" pos:end="63:34"> <expr pos:start="63:15" pos:end="63:34"><name pos:start="63:15" pos:end="63:34">TARGET_PAGE_BITS_16M</name></expr> </then><else pos:start="63:36" pos:end="63:53">: <expr pos:start="63:38" pos:end="63:53"><name pos:start="63:38" pos:end="63:53">TARGET_PAGE_BITS</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:51"><expr pos:start="65:9" pos:end="67:50"><name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">ctx</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">key</name></name> <operator pos:start="65:18" pos:end="65:18">=</operator> <operator pos:start="65:20" pos:end="65:20">!</operator><operator pos:start="65:21" pos:end="65:21">!</operator><operator pos:start="65:22" pos:end="65:22">(</operator><ternary pos:start="65:23" pos:end="67:49"><condition pos:start="65:23" pos:end="65:26"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pr</name></expr> ?</condition><then pos:start="65:28" pos:end="65:52"> <expr pos:start="65:28" pos:end="65:52"><operator pos:start="65:28" pos:end="65:28">(</operator><name pos:start="65:29" pos:end="65:37"><name pos:start="65:29" pos:end="65:31">slb</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:37">vsid</name></name> <operator pos:start="65:39" pos:end="65:39">&amp;</operator> <name pos:start="65:41" pos:end="65:51">SLB_VSID_KP</name><operator pos:start="65:52" pos:end="65:52">)</operator></expr>

                      </then><else pos:start="67:23" pos:end="67:49">: <expr pos:start="67:25" pos:end="67:49"><operator pos:start="67:25" pos:end="67:25">(</operator><name pos:start="67:26" pos:end="67:34"><name pos:start="67:26" pos:end="67:28">slb</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:34">vsid</name></name> <operator pos:start="67:36" pos:end="67:36">&amp;</operator> <name pos:start="67:38" pos:end="67:48">SLB_VSID_KS</name><operator pos:start="67:49" pos:end="67:49">)</operator></expr></else></ternary><operator pos:start="67:50" pos:end="67:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:15"><expr pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:10">ds</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:11">ctx</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:15">nx</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <operator pos:start="71:19" pos:end="71:19">!</operator><operator pos:start="71:20" pos:end="71:20">!</operator><operator pos:start="71:21" pos:end="71:21">(</operator><name pos:start="71:22" pos:end="71:30"><name pos:start="71:22" pos:end="71:24">slb</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:30">vsid</name></name> <operator pos:start="71:32" pos:end="71:32">&amp;</operator> <name pos:start="71:34" pos:end="71:43">SLB_VSID_N</name><operator pos:start="71:44" pos:end="71:44">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="77:58"><expr pos:start="75:9" pos:end="77:57"><name pos:start="75:9" pos:end="75:16">pageaddr</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:24">eaddr</name> <operator pos:start="75:26" pos:end="75:26">&amp;</operator> <operator pos:start="75:28" pos:end="75:28">(</operator><operator pos:start="75:29" pos:end="75:29">(</operator><literal type="number" pos:start="75:30" pos:end="75:33">1ULL</literal> <operator pos:start="75:35" pos:end="75:36">&lt;&lt;</operator> <name pos:start="75:38" pos:end="75:49">segment_bits</name><operator pos:start="75:50" pos:end="75:50">)</operator>

                            <operator pos:start="77:29" pos:end="77:29">-</operator> <operator pos:start="77:31" pos:end="77:31">(</operator><literal type="number" pos:start="77:32" pos:end="77:35">1ULL</literal> <operator pos:start="77:37" pos:end="77:38">&lt;&lt;</operator> <name pos:start="77:40" pos:end="77:55">target_page_bits</name><operator pos:start="77:56" pos:end="77:56">)</operator><operator pos:start="77:57" pos:end="77:57">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="87:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:35">(<expr pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:15">slb</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:21">vsid</name></name> <operator pos:start="79:23" pos:end="79:23">&amp;</operator> <name pos:start="79:25" pos:end="79:34">SLB_VSID_B</name></expr>)</condition> <block pos:start="79:37" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:72">

            <expr_stmt pos:start="81:13" pos:end="81:72"><expr pos:start="81:13" pos:end="81:71"><name pos:start="81:13" pos:end="81:16">hash</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:23">vsid</name> <operator pos:start="81:25" pos:end="81:25">^</operator> <operator pos:start="81:27" pos:end="81:27">(</operator><name pos:start="81:28" pos:end="81:31">vsid</name> <operator pos:start="81:33" pos:end="81:34">&lt;&lt;</operator> <literal type="number" pos:start="81:36" pos:end="81:37">25</literal><operator pos:start="81:38" pos:end="81:38">)</operator> <operator pos:start="81:40" pos:end="81:40">^</operator> <operator pos:start="81:42" pos:end="81:42">(</operator><name pos:start="81:43" pos:end="81:50">pageaddr</name> <operator pos:start="81:52" pos:end="81:53">&gt;&gt;</operator> <name pos:start="81:55" pos:end="81:70">target_page_bits</name><operator pos:start="81:71" pos:end="81:71">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="87:9">else <block pos:start="83:16" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:57">

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:16">hash</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:23">vsid</name> <operator pos:start="85:25" pos:end="85:25">^</operator> <operator pos:start="85:27" pos:end="85:27">(</operator><name pos:start="85:28" pos:end="85:35">pageaddr</name> <operator pos:start="85:37" pos:end="85:38">&gt;&gt;</operator> <name pos:start="85:40" pos:end="85:55">target_page_bits</name><operator pos:start="85:56" pos:end="85:56">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="89:9" pos:end="89:64">/* Only 5 bits of the page index are used in the AVPN */</comment>

        <expr_stmt pos:start="91:9" pos:end="93:65"><expr pos:start="91:9" pos:end="93:64"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:11">ctx</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">ptem</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <operator pos:start="91:21" pos:end="91:21">(</operator><name pos:start="91:22" pos:end="91:30"><name pos:start="91:22" pos:end="91:24">slb</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">vsid</name></name> <operator pos:start="91:32" pos:end="91:32">&amp;</operator> <name pos:start="91:34" pos:end="91:46">SLB_VSID_PTEM</name><operator pos:start="91:47" pos:end="91:47">)</operator> <operator pos:start="91:49" pos:end="91:49">|</operator>

            <operator pos:start="93:13" pos:end="93:13">(</operator><operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:22">pageaddr</name> <operator pos:start="93:24" pos:end="93:25">&gt;&gt;</operator> <literal type="number" pos:start="93:27" pos:end="93:28">16</literal><operator pos:start="93:29" pos:end="93:29">)</operator> <operator pos:start="93:31" pos:end="93:31">&amp;</operator> <operator pos:start="93:33" pos:end="93:33">(</operator><operator pos:start="93:34" pos:end="93:34">(</operator><literal type="number" pos:start="93:35" pos:end="93:38">1ULL</literal> <operator pos:start="93:40" pos:end="93:41">&lt;&lt;</operator> <name pos:start="93:43" pos:end="93:54">segment_bits</name><operator pos:start="93:55" pos:end="93:55">)</operator> <operator pos:start="93:57" pos:end="93:57">-</operator> <literal type="number" pos:start="93:59" pos:end="93:62">0x80</literal><operator pos:start="93:63" pos:end="93:63">)</operator><operator pos:start="93:64" pos:end="93:64">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="135:5">else

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="97:8" pos:end="97:34">/* defined(TARGET_PPC64) */</comment>

    <block pos:start="99:5" pos:end="135:5">{<block_content pos:start="101:9" pos:end="133:48">

        <decl_stmt pos:start="101:9" pos:end="101:31"><decl pos:start="101:9" pos:end="101:23"><type pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:20">target_ulong</name></type> <name pos:start="101:22" pos:end="101:23">sr</name></decl>, <decl pos:start="101:26" pos:end="101:30"><type ref="prev" pos:start="101:9" pos:end="101:20"/><name pos:start="101:26" pos:end="101:30">pgidx</name></decl>;</decl_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:34"><expr pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:10">sr</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <name pos:start="105:14" pos:end="105:33"><name pos:start="105:14" pos:end="105:16">env</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:20">sr</name><index pos:start="105:21" pos:end="105:33">[<expr pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:26">eaddr</name> <operator pos:start="105:28" pos:end="105:29">&gt;&gt;</operator> <literal type="number" pos:start="105:31" pos:end="105:32">28</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="109:62"><expr pos:start="107:9" pos:end="109:61"><name pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:11">ctx</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:16">key</name></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <ternary pos:start="107:20" pos:end="109:61"><condition pos:start="107:20" pos:end="109:55"><expr pos:start="107:20" pos:end="109:53"><operator pos:start="107:20" pos:end="107:20">(</operator><operator pos:start="107:21" pos:end="107:21">(</operator><operator pos:start="107:22" pos:end="107:22">(</operator><name pos:start="107:23" pos:end="107:24">sr</name> <operator pos:start="107:26" pos:end="107:26">&amp;</operator> <literal type="number" pos:start="107:28" pos:end="107:37">0x20000000</literal><operator pos:start="107:38" pos:end="107:38">)</operator> <operator pos:start="107:40" pos:end="107:41">&amp;&amp;</operator> <operator pos:start="107:43" pos:end="107:43">(</operator><name pos:start="107:44" pos:end="107:45">pr</name> <operator pos:start="107:47" pos:end="107:48">!=</operator> <literal type="number" pos:start="107:50" pos:end="107:50">0</literal><operator pos:start="107:51" pos:end="107:51">)</operator><operator pos:start="107:52" pos:end="107:52">)</operator> <operator pos:start="107:54" pos:end="107:55">||</operator>

                    <operator pos:start="109:21" pos:end="109:21">(</operator><operator pos:start="109:22" pos:end="109:22">(</operator><name pos:start="109:23" pos:end="109:24">sr</name> <operator pos:start="109:26" pos:end="109:26">&amp;</operator> <literal type="number" pos:start="109:28" pos:end="109:37">0x40000000</literal><operator pos:start="109:38" pos:end="109:38">)</operator> <operator pos:start="109:40" pos:end="109:41">&amp;&amp;</operator> <operator pos:start="109:43" pos:end="109:43">(</operator><name pos:start="109:44" pos:end="109:45">pr</name> <operator pos:start="109:47" pos:end="109:48">==</operator> <literal type="number" pos:start="109:50" pos:end="109:50">0</literal><operator pos:start="109:51" pos:end="109:51">)</operator><operator pos:start="109:52" pos:end="109:52">)</operator><operator pos:start="109:53" pos:end="109:53">)</operator></expr> ?</condition><then pos:start="109:57" pos:end="109:57"> <expr pos:start="109:57" pos:end="109:57"><literal type="number" pos:start="109:57" pos:end="109:57">1</literal></expr> </then><else pos:start="109:59" pos:end="109:61">: <expr pos:start="109:61" pos:end="109:61"><literal type="number" pos:start="109:61" pos:end="109:61">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:10">ds</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <ternary pos:start="111:14" pos:end="111:36"><condition pos:start="111:14" pos:end="111:30"><expr pos:start="111:14" pos:end="111:28"><name pos:start="111:14" pos:end="111:15">sr</name> <operator pos:start="111:17" pos:end="111:17">&amp;</operator> <literal type="number" pos:start="111:19" pos:end="111:28">0x80000000</literal></expr> ?</condition><then pos:start="111:32" pos:end="111:32"> <expr pos:start="111:32" pos:end="111:32"><literal type="number" pos:start="111:32" pos:end="111:32">1</literal></expr> </then><else pos:start="111:34" pos:end="111:36">: <expr pos:start="111:36" pos:end="111:36"><literal type="number" pos:start="111:36" pos:end="111:36">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:42"><expr pos:start="113:9" pos:end="113:41"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">ctx</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:15">nx</name></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <ternary pos:start="113:19" pos:end="113:41"><condition pos:start="113:19" pos:end="113:35"><expr pos:start="113:19" pos:end="113:33"><name pos:start="113:19" pos:end="113:20">sr</name> <operator pos:start="113:22" pos:end="113:22">&amp;</operator> <literal type="number" pos:start="113:24" pos:end="113:33">0x10000000</literal></expr> ?</condition><then pos:start="113:37" pos:end="113:37"> <expr pos:start="113:37" pos:end="113:37"><literal type="number" pos:start="113:37" pos:end="113:37">1</literal></expr> </then><else pos:start="113:39" pos:end="113:41">: <expr pos:start="113:41" pos:end="113:41"><literal type="number" pos:start="113:41" pos:end="113:41">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:31"><expr pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:12">vsid</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:17">sr</name> <operator pos:start="115:19" pos:end="115:19">&amp;</operator> <literal type="number" pos:start="115:21" pos:end="115:30">0x00FFFFFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:44"><expr pos:start="117:9" pos:end="117:43"><name pos:start="117:9" pos:end="117:24">target_page_bits</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:43">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="127:56"><expr pos:start="119:9" pos:end="127:55"><call pos:start="119:9" pos:end="127:55"><name pos:start="119:9" pos:end="119:15">LOG_MMU</name><argument_list pos:start="119:16" pos:end="127:55">(<argument pos:start="119:17" pos:end="123:46"><expr pos:start="119:17" pos:end="123:46"><literal type="string" pos:start="119:17" pos:end="119:34">"Check segment v="</literal> <name pos:start="119:36" pos:end="119:48">TARGET_FMT_lx</name> <literal type="string" pos:start="119:50" pos:end="119:55">" %d "</literal> <name pos:start="119:57" pos:end="119:69">TARGET_FMT_lx</name> <literal type="string" pos:start="119:71" pos:end="119:77">" nip="</literal>

                <name pos:start="121:17" pos:end="121:29">TARGET_FMT_lx</name> <literal type="string" pos:start="121:31" pos:end="121:36">" lr="</literal> <name pos:start="121:38" pos:end="121:50">TARGET_FMT_lx</name>

                <literal type="string" pos:start="123:17" pos:end="123:46">" ir=%d dr=%d pr=%d %d t=%d\n"</literal></expr></argument>,

                <argument pos:start="125:17" pos:end="125:21"><expr pos:start="125:17" pos:end="125:21"><name pos:start="125:17" pos:end="125:21">eaddr</name></expr></argument>, <argument pos:start="125:24" pos:end="125:41"><expr pos:start="125:24" pos:end="125:41"><operator pos:start="125:24" pos:end="125:24">(</operator><name pos:start="125:25" pos:end="125:27">int</name><operator pos:start="125:28" pos:end="125:28">)</operator><operator pos:start="125:29" pos:end="125:29">(</operator><name pos:start="125:30" pos:end="125:34">eaddr</name> <operator pos:start="125:36" pos:end="125:37">&gt;&gt;</operator> <literal type="number" pos:start="125:39" pos:end="125:40">28</literal><operator pos:start="125:41" pos:end="125:41">)</operator></expr></argument>, <argument pos:start="125:44" pos:end="125:45"><expr pos:start="125:44" pos:end="125:45"><name pos:start="125:44" pos:end="125:45">sr</name></expr></argument>, <argument pos:start="125:48" pos:end="125:55"><expr pos:start="125:48" pos:end="125:55"><name pos:start="125:48" pos:end="125:55"><name pos:start="125:48" pos:end="125:50">env</name><operator pos:start="125:51" pos:end="125:52">-&gt;</operator><name pos:start="125:53" pos:end="125:55">nip</name></name></expr></argument>, <argument pos:start="125:58" pos:end="125:64"><expr pos:start="125:58" pos:end="125:64"><name pos:start="125:58" pos:end="125:64"><name pos:start="125:58" pos:end="125:60">env</name><operator pos:start="125:61" pos:end="125:62">-&gt;</operator><name pos:start="125:63" pos:end="125:64">lr</name></name></expr></argument>, <argument pos:start="125:67" pos:end="125:77"><expr pos:start="125:67" pos:end="125:77"><operator pos:start="125:67" pos:end="125:67">(</operator><name pos:start="125:68" pos:end="125:70">int</name><operator pos:start="125:71" pos:end="125:71">)</operator><name pos:start="125:72" pos:end="125:77">msr_ir</name></expr></argument>,

                <argument pos:start="127:17" pos:end="127:27"><expr pos:start="127:17" pos:end="127:27"><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:20">int</name><operator pos:start="127:21" pos:end="127:21">)</operator><name pos:start="127:22" pos:end="127:27">msr_dr</name></expr></argument>, <argument pos:start="127:30" pos:end="127:44"><expr pos:start="127:30" pos:end="127:44"><ternary pos:start="127:30" pos:end="127:44"><condition pos:start="127:30" pos:end="127:38"><expr pos:start="127:30" pos:end="127:36"><name pos:start="127:30" pos:end="127:31">pr</name> <operator pos:start="127:33" pos:end="127:34">!=</operator> <literal type="number" pos:start="127:36" pos:end="127:36">0</literal></expr> ?</condition><then pos:start="127:40" pos:end="127:40"> <expr pos:start="127:40" pos:end="127:40"><literal type="number" pos:start="127:40" pos:end="127:40">1</literal></expr> </then><else pos:start="127:42" pos:end="127:44">: <expr pos:start="127:44" pos:end="127:44"><literal type="number" pos:start="127:44" pos:end="127:44">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="127:47" pos:end="127:48"><expr pos:start="127:47" pos:end="127:48"><name pos:start="127:47" pos:end="127:48">rw</name></expr></argument>, <argument pos:start="127:51" pos:end="127:54"><expr pos:start="127:51" pos:end="127:54"><name pos:start="127:51" pos:end="127:54">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:65"><expr pos:start="129:9" pos:end="129:64"><name pos:start="129:9" pos:end="129:13">pgidx</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <operator pos:start="129:17" pos:end="129:17">(</operator><name pos:start="129:18" pos:end="129:22">eaddr</name> <operator pos:start="129:24" pos:end="129:24">&amp;</operator> <operator pos:start="129:26" pos:end="129:26">~</operator><name pos:start="129:27" pos:end="129:43">SEGMENT_MASK_256M</name><operator pos:start="129:44" pos:end="129:44">)</operator> <operator pos:start="129:46" pos:end="129:47">&gt;&gt;</operator> <name pos:start="129:49" pos:end="129:64">target_page_bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:28"><expr pos:start="131:9" pos:end="131:27"><name pos:start="131:9" pos:end="131:12">hash</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:19">vsid</name> <operator pos:start="131:21" pos:end="131:21">^</operator> <name pos:start="131:23" pos:end="131:27">pgidx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:48"><expr pos:start="133:9" pos:end="133:47"><name pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:11">ctx</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:17">ptem</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <operator pos:start="133:21" pos:end="133:21">(</operator><name pos:start="133:22" pos:end="133:25">vsid</name> <operator pos:start="133:27" pos:end="133:28">&lt;&lt;</operator> <literal type="number" pos:start="133:30" pos:end="133:30">7</literal><operator pos:start="133:31" pos:end="133:31">)</operator> <operator pos:start="133:33" pos:end="133:33">|</operator> <operator pos:start="133:35" pos:end="133:35">(</operator><name pos:start="133:36" pos:end="133:40">pgidx</name> <operator pos:start="133:42" pos:end="133:43">&gt;&gt;</operator> <literal type="number" pos:start="133:45" pos:end="133:46">10</literal><operator pos:start="133:47" pos:end="133:47">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="139:41"><expr pos:start="137:5" pos:end="139:40"><call pos:start="137:5" pos:end="139:40"><name pos:start="137:5" pos:end="137:11">LOG_MMU</name><argument_list pos:start="137:12" pos:end="139:40">(<argument pos:start="137:13" pos:end="137:70"><expr pos:start="137:13" pos:end="137:70"><literal type="string" pos:start="137:13" pos:end="137:51">"pte segment: key=%d ds %d nx %d vsid "</literal> <name pos:start="137:53" pos:end="137:65">TARGET_FMT_lx</name> <literal type="string" pos:start="137:67" pos:end="137:70">"\n"</literal></expr></argument>,

            <argument pos:start="139:13" pos:end="139:20"><expr pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:15">ctx</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:20">key</name></name></expr></argument>, <argument pos:start="139:23" pos:end="139:24"><expr pos:start="139:23" pos:end="139:24"><name pos:start="139:23" pos:end="139:24">ds</name></expr></argument>, <argument pos:start="139:27" pos:end="139:33"><expr pos:start="139:27" pos:end="139:33"><name pos:start="139:27" pos:end="139:33"><name pos:start="139:27" pos:end="139:29">ctx</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:33">nx</name></name></expr></argument>, <argument pos:start="139:36" pos:end="139:39"><expr pos:start="139:36" pos:end="139:39"><name pos:start="139:36" pos:end="139:39">vsid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:13"><expr pos:start="141:5" pos:end="141:12"><name pos:start="141:5" pos:end="141:7">ret</name> <operator pos:start="141:9" pos:end="141:9">=</operator> <operator pos:start="141:11" pos:end="141:11">-</operator><literal type="number" pos:start="141:12" pos:end="141:12">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="339:5"><if pos:start="143:5" pos:end="265:5">if <condition pos:start="143:8" pos:end="143:12">(<expr pos:start="143:9" pos:end="143:11"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:11">ds</name></expr>)</condition> <block pos:start="143:14" pos:end="265:5">{<block_content pos:start="147:9" pos:end="263:9">

        <comment type="block" pos:start="145:9" pos:end="145:62">/* Check if instruction fetch is allowed, if needed */</comment>

        <if_stmt pos:start="147:9" pos:end="263:9"><if pos:start="147:9" pos:end="257:9">if <condition pos:start="147:12" pos:end="147:48">(<expr pos:start="147:13" pos:end="147:47"><name pos:start="147:13" pos:end="147:16">type</name> <operator pos:start="147:18" pos:end="147:19">!=</operator> <name pos:start="147:21" pos:end="147:31">ACCESS_CODE</name> <operator pos:start="147:33" pos:end="147:34">||</operator> <name pos:start="147:36" pos:end="147:42"><name pos:start="147:36" pos:end="147:38">ctx</name><operator pos:start="147:39" pos:end="147:40">-&gt;</operator><name pos:start="147:41" pos:end="147:42">nx</name></name> <operator pos:start="147:44" pos:end="147:45">==</operator> <literal type="number" pos:start="147:47" pos:end="147:47">0</literal></expr>)</condition> <block pos:start="147:50" pos:end="257:9">{<block_content pos:start="151:13" pos:end="256:0">

            <comment type="block" pos:start="149:13" pos:end="149:42">/* Page address translation */</comment>

            <expr_stmt pos:start="151:13" pos:end="155:58"><expr pos:start="151:13" pos:end="155:57"><call pos:start="151:13" pos:end="155:57"><name pos:start="151:13" pos:end="151:19">LOG_MMU</name><argument_list pos:start="151:20" pos:end="155:57">(<argument pos:start="151:21" pos:end="153:48"><expr pos:start="151:21" pos:end="153:48"><literal type="string" pos:start="151:21" pos:end="151:32">"htab_base "</literal> <name pos:start="151:34" pos:end="151:47">TARGET_FMT_plx</name> <literal type="string" pos:start="151:49" pos:end="151:61">" htab_mask "</literal> <name pos:start="151:63" pos:end="151:76">TARGET_FMT_plx</name>

                    <literal type="string" pos:start="153:21" pos:end="153:28">" hash "</literal> <name pos:start="153:30" pos:end="153:43">TARGET_FMT_plx</name> <literal type="string" pos:start="153:45" pos:end="153:48">"\n"</literal></expr></argument>,

                    <argument pos:start="155:21" pos:end="155:34"><expr pos:start="155:21" pos:end="155:34"><name pos:start="155:21" pos:end="155:34"><name pos:start="155:21" pos:end="155:23">env</name><operator pos:start="155:24" pos:end="155:25">-&gt;</operator><name pos:start="155:26" pos:end="155:34">htab_base</name></name></expr></argument>, <argument pos:start="155:37" pos:end="155:50"><expr pos:start="155:37" pos:end="155:50"><name pos:start="155:37" pos:end="155:50"><name pos:start="155:37" pos:end="155:39">env</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:50">htab_mask</name></name></expr></argument>, <argument pos:start="155:53" pos:end="155:56"><expr pos:start="155:53" pos:end="155:56"><name pos:start="155:53" pos:end="155:56">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:32"><expr pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:15">ctx</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:21">hash</name><index pos:start="157:22" pos:end="157:24">[<expr pos:start="157:23" pos:end="157:23"><literal type="number" pos:start="157:23" pos:end="157:23">0</literal></expr>]</index></name> <operator pos:start="157:26" pos:end="157:26">=</operator> <name pos:start="157:28" pos:end="157:31">hash</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:15">ctx</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:21">hash</name><index pos:start="159:22" pos:end="159:24">[<expr pos:start="159:23" pos:end="159:23"><literal type="number" pos:start="159:23" pos:end="159:23">1</literal></expr>]</index></name> <operator pos:start="159:26" pos:end="159:26">=</operator> <operator pos:start="159:28" pos:end="159:28">~</operator><name pos:start="159:29" pos:end="159:32">hash</name></expr>;</expr_stmt>



            <comment type="block" pos:start="163:13" pos:end="163:63">/* Initialize real address with an invalid value */</comment>

            <expr_stmt pos:start="165:13" pos:end="165:51"><expr pos:start="165:13" pos:end="165:50"><name pos:start="165:13" pos:end="165:22"><name pos:start="165:13" pos:end="165:15">ctx</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:22">raddr</name></name> <operator pos:start="165:24" pos:end="165:24">=</operator> <operator pos:start="165:26" pos:end="165:26">(</operator><name pos:start="165:27" pos:end="165:44">target_phys_addr_t</name><operator pos:start="165:45" pos:end="165:45">)</operator><operator pos:start="165:46" pos:end="165:46">-</operator><literal type="number" pos:start="165:47" pos:end="165:50">1ULL</literal></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="220:0"><if pos:start="167:13" pos:end="175:13">if <condition pos:start="167:16" pos:end="169:66">(<expr pos:start="167:17" pos:end="169:65"><call pos:start="167:17" pos:end="169:65"><name pos:start="167:17" pos:end="167:24">unlikely</name><argument_list pos:start="167:25" pos:end="169:65">(<argument pos:start="167:26" pos:end="169:64"><expr pos:start="167:26" pos:end="169:64"><name pos:start="167:26" pos:end="167:39"><name pos:start="167:26" pos:end="167:28">env</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:39">mmu_model</name></name> <operator pos:start="167:41" pos:end="167:42">==</operator> <name pos:start="167:44" pos:end="167:63">POWERPC_MMU_SOFT_6xx</name> <operator pos:start="167:65" pos:end="167:66">||</operator>

                         <name pos:start="169:26" pos:end="169:39"><name pos:start="169:26" pos:end="169:28">env</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:39">mmu_model</name></name> <operator pos:start="169:41" pos:end="169:42">==</operator> <name pos:start="169:44" pos:end="169:64">POWERPC_MMU_SOFT_74xx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:68" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:66">

                <comment type="block" pos:start="171:17" pos:end="171:41">/* Software TLB search */</comment>

                <expr_stmt pos:start="173:17" pos:end="173:66"><expr pos:start="173:17" pos:end="173:65"><name pos:start="173:17" pos:end="173:19">ret</name> <operator pos:start="173:21" pos:end="173:21">=</operator> <call pos:start="173:23" pos:end="173:65"><name pos:start="173:23" pos:end="173:38">ppc6xx_tlb_check</name><argument_list pos:start="173:39" pos:end="173:65">(<argument pos:start="173:40" pos:end="173:42"><expr pos:start="173:40" pos:end="173:42"><name pos:start="173:40" pos:end="173:42">env</name></expr></argument>, <argument pos:start="173:45" pos:end="173:47"><expr pos:start="173:45" pos:end="173:47"><name pos:start="173:45" pos:end="173:47">ctx</name></expr></argument>, <argument pos:start="173:50" pos:end="173:54"><expr pos:start="173:50" pos:end="173:54"><name pos:start="173:50" pos:end="173:54">eaddr</name></expr></argument>, <argument pos:start="173:57" pos:end="173:58"><expr pos:start="173:57" pos:end="173:58"><name pos:start="173:57" pos:end="173:58">rw</name></expr></argument>, <argument pos:start="173:61" pos:end="173:64"><expr pos:start="173:61" pos:end="173:64"><name pos:start="173:61" pos:end="173:64">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="175:15" pos:end="220:0">else <block pos:start="175:20" pos:end="220:0">{<block_content pos:start="177:17" pos:end="215:17">

                <expr_stmt pos:start="177:17" pos:end="185:38"><expr pos:start="177:17" pos:end="185:37"><call pos:start="177:17" pos:end="185:37"><name pos:start="177:17" pos:end="177:23">LOG_MMU</name><argument_list pos:start="177:24" pos:end="185:37">(<argument pos:start="177:25" pos:end="181:52"><expr pos:start="177:25" pos:end="181:52"><literal type="string" pos:start="177:25" pos:end="177:33">"0 htab="</literal> <name pos:start="177:35" pos:end="177:48">TARGET_FMT_plx</name> <literal type="string" pos:start="177:50" pos:end="177:52">"/"</literal> <name pos:start="177:54" pos:end="177:67">TARGET_FMT_plx</name>

                        <literal type="string" pos:start="179:25" pos:end="179:32">" vsid="</literal> <name pos:start="179:34" pos:end="179:46">TARGET_FMT_lx</name> <literal type="string" pos:start="179:48" pos:end="179:55">" ptem="</literal> <name pos:start="179:57" pos:end="179:69">TARGET_FMT_lx</name>

                        <literal type="string" pos:start="181:25" pos:end="181:32">" hash="</literal> <name pos:start="181:34" pos:end="181:47">TARGET_FMT_plx</name> <literal type="string" pos:start="181:49" pos:end="181:52">"\n"</literal></expr></argument>,

                        <argument pos:start="183:25" pos:end="183:38"><expr pos:start="183:25" pos:end="183:38"><name pos:start="183:25" pos:end="183:38"><name pos:start="183:25" pos:end="183:27">env</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:38">htab_base</name></name></expr></argument>, <argument pos:start="183:41" pos:end="183:54"><expr pos:start="183:41" pos:end="183:54"><name pos:start="183:41" pos:end="183:54"><name pos:start="183:41" pos:end="183:43">env</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:54">htab_mask</name></name></expr></argument>, <argument pos:start="183:57" pos:end="183:60"><expr pos:start="183:57" pos:end="183:60"><name pos:start="183:57" pos:end="183:60">vsid</name></expr></argument>, <argument pos:start="183:63" pos:end="183:71"><expr pos:start="183:63" pos:end="183:71"><name pos:start="183:63" pos:end="183:71"><name pos:start="183:63" pos:end="183:65">ctx</name><operator pos:start="183:66" pos:end="183:67">-&gt;</operator><name pos:start="183:68" pos:end="183:71">ptem</name></name></expr></argument>,

                        <argument pos:start="185:25" pos:end="185:36"><expr pos:start="185:25" pos:end="185:36"><name pos:start="185:25" pos:end="185:36"><name pos:start="185:25" pos:end="185:27">ctx</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:33">hash</name><index pos:start="185:34" pos:end="185:36">[<expr pos:start="185:35" pos:end="185:35"><literal type="number" pos:start="185:35" pos:end="185:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="187:17" pos:end="187:42">/* Primary table lookup */</comment>

                <expr_stmt pos:start="189:17" pos:end="189:72"><expr pos:start="189:17" pos:end="189:71"><name pos:start="189:17" pos:end="189:19">ret</name> <operator pos:start="189:21" pos:end="189:21">=</operator> <call pos:start="189:23" pos:end="189:71"><name pos:start="189:23" pos:end="189:30">find_pte</name><argument_list pos:start="189:31" pos:end="189:71">(<argument pos:start="189:32" pos:end="189:34"><expr pos:start="189:32" pos:end="189:34"><name pos:start="189:32" pos:end="189:34">env</name></expr></argument>, <argument pos:start="189:37" pos:end="189:39"><expr pos:start="189:37" pos:end="189:39"><name pos:start="189:37" pos:end="189:39">ctx</name></expr></argument>, <argument pos:start="189:42" pos:end="189:42"><expr pos:start="189:42" pos:end="189:42"><literal type="number" pos:start="189:42" pos:end="189:42">0</literal></expr></argument>, <argument pos:start="189:45" pos:end="189:46"><expr pos:start="189:45" pos:end="189:46"><name pos:start="189:45" pos:end="189:46">rw</name></expr></argument>, <argument pos:start="189:49" pos:end="189:52"><expr pos:start="189:49" pos:end="189:52"><name pos:start="189:49" pos:end="189:52">type</name></expr></argument>, <argument pos:start="189:55" pos:end="189:70"><expr pos:start="189:55" pos:end="189:70"><name pos:start="189:55" pos:end="189:70">target_page_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="191:17" pos:end="215:17"><if pos:start="191:17" pos:end="215:17">if <condition pos:start="191:20" pos:end="191:28">(<expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:23">ret</name> <operator pos:start="191:25" pos:end="191:25">&lt;</operator> <literal type="number" pos:start="191:27" pos:end="191:27">0</literal></expr>)</condition> <block pos:start="191:30" pos:end="215:17">{<block_content pos:start="195:21" pos:end="213:35">

                    <comment type="block" pos:start="193:21" pos:end="193:48">/* Secondary table lookup */</comment>

                    <if_stmt pos:start="195:21" pos:end="205:79"><if pos:start="195:21" pos:end="205:79">if <condition pos:start="195:24" pos:end="195:44">(<expr pos:start="195:25" pos:end="195:43"><name pos:start="195:25" pos:end="195:29">eaddr</name> <operator pos:start="195:31" pos:end="195:32">!=</operator> <literal type="number" pos:start="195:34" pos:end="195:43">0xEFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="197:25" pos:end="205:79"><block_content pos:start="197:25" pos:end="205:79">

                        <expr_stmt pos:start="197:25" pos:end="205:79"><expr pos:start="197:25" pos:end="205:78"><call pos:start="197:25" pos:end="205:78"><name pos:start="197:25" pos:end="197:31">LOG_MMU</name><argument_list pos:start="197:32" pos:end="205:78">(<argument pos:start="197:33" pos:end="203:51"><expr pos:start="197:33" pos:end="203:51"><literal type="string" pos:start="197:33" pos:end="197:41">"1 htab="</literal> <name pos:start="197:43" pos:end="197:56">TARGET_FMT_plx</name> <literal type="string" pos:start="197:58" pos:end="197:60">"/"</literal> <name pos:start="197:62" pos:end="197:75">TARGET_FMT_plx</name>

                                <literal type="string" pos:start="199:33" pos:end="199:40">" vsid="</literal> <name pos:start="199:42" pos:end="199:54">TARGET_FMT_lx</name> <literal type="string" pos:start="199:56" pos:end="199:62">" api="</literal> <name pos:start="199:64" pos:end="199:76">TARGET_FMT_lx</name>

                                <literal type="string" pos:start="201:33" pos:end="201:40">" hash="</literal> <name pos:start="201:42" pos:end="201:55">TARGET_FMT_plx</name> <literal type="string" pos:start="201:57" pos:end="201:67">" pg_addr="</literal>

                                <name pos:start="203:33" pos:end="203:46">TARGET_FMT_plx</name> <literal type="string" pos:start="203:48" pos:end="203:51">"\n"</literal></expr></argument>, <argument pos:start="203:54" pos:end="203:67"><expr pos:start="203:54" pos:end="203:67"><name pos:start="203:54" pos:end="203:67"><name pos:start="203:54" pos:end="203:56">env</name><operator pos:start="203:57" pos:end="203:58">-&gt;</operator><name pos:start="203:59" pos:end="203:67">htab_base</name></name></expr></argument>,

                                <argument pos:start="205:33" pos:end="205:46"><expr pos:start="205:33" pos:end="205:46"><name pos:start="205:33" pos:end="205:46"><name pos:start="205:33" pos:end="205:35">env</name><operator pos:start="205:36" pos:end="205:37">-&gt;</operator><name pos:start="205:38" pos:end="205:46">htab_mask</name></name></expr></argument>, <argument pos:start="205:49" pos:end="205:52"><expr pos:start="205:49" pos:end="205:52"><name pos:start="205:49" pos:end="205:52">vsid</name></expr></argument>, <argument pos:start="205:55" pos:end="205:63"><expr pos:start="205:55" pos:end="205:63"><name pos:start="205:55" pos:end="205:63"><name pos:start="205:55" pos:end="205:57">ctx</name><operator pos:start="205:58" pos:end="205:59">-&gt;</operator><name pos:start="205:60" pos:end="205:63">ptem</name></name></expr></argument>, <argument pos:start="205:66" pos:end="205:77"><expr pos:start="205:66" pos:end="205:77"><name pos:start="205:66" pos:end="205:77"><name pos:start="205:66" pos:end="205:68">ctx</name><operator pos:start="205:69" pos:end="205:70">-&gt;</operator><name pos:start="205:71" pos:end="205:74">hash</name><index pos:start="205:75" pos:end="205:77">[<expr pos:start="205:76" pos:end="205:76"><literal type="number" pos:start="205:76" pos:end="205:76">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="207:21" pos:end="209:54"><expr pos:start="207:21" pos:end="209:53"><name pos:start="207:21" pos:end="207:24">ret2</name> <operator pos:start="207:26" pos:end="207:26">=</operator> <call pos:start="207:28" pos:end="209:53"><name pos:start="207:28" pos:end="207:35">find_pte</name><argument_list pos:start="207:36" pos:end="209:53">(<argument pos:start="207:37" pos:end="207:39"><expr pos:start="207:37" pos:end="207:39"><name pos:start="207:37" pos:end="207:39">env</name></expr></argument>, <argument pos:start="207:42" pos:end="207:44"><expr pos:start="207:42" pos:end="207:44"><name pos:start="207:42" pos:end="207:44">ctx</name></expr></argument>, <argument pos:start="207:47" pos:end="207:47"><expr pos:start="207:47" pos:end="207:47"><literal type="number" pos:start="207:47" pos:end="207:47">1</literal></expr></argument>, <argument pos:start="207:50" pos:end="207:51"><expr pos:start="207:50" pos:end="207:51"><name pos:start="207:50" pos:end="207:51">rw</name></expr></argument>, <argument pos:start="207:54" pos:end="207:57"><expr pos:start="207:54" pos:end="207:57"><name pos:start="207:54" pos:end="207:57">type</name></expr></argument>,

                                    <argument pos:start="209:37" pos:end="209:52"><expr pos:start="209:37" pos:end="209:52"><name pos:start="209:37" pos:end="209:52">target_page_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="211:21" pos:end="213:35"><if pos:start="211:21" pos:end="213:35">if <condition pos:start="211:24" pos:end="211:35">(<expr pos:start="211:25" pos:end="211:34"><name pos:start="211:25" pos:end="211:28">ret2</name> <operator pos:start="211:30" pos:end="211:31">!=</operator> <operator pos:start="211:33" pos:end="211:33">-</operator><literal type="number" pos:start="211:34" pos:end="211:34">1</literal></expr>)</condition><block type="pseudo" pos:start="213:25" pos:end="213:35"><block_content pos:start="213:25" pos:end="213:35">

                        <expr_stmt pos:start="213:25" pos:end="213:35"><expr pos:start="213:25" pos:end="213:34"><name pos:start="213:25" pos:end="213:27">ret</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <name pos:start="213:31" pos:end="213:34">ret2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:if pos:start="219:1" pos:end="219:30">#<cpp:directive pos:start="219:2" pos:end="219:3">if</cpp:directive> <expr pos:start="219:5" pos:end="219:30"><call pos:start="219:5" pos:end="219:30"><name pos:start="219:5" pos:end="219:11">defined</name> <argument_list pos:start="219:13" pos:end="219:30">(<argument pos:start="219:14" pos:end="219:29"><expr pos:start="219:14" pos:end="219:29"><name pos:start="219:14" pos:end="219:29">DUMP_PAGE_TABLES</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="221:13" pos:end="256:0"><if pos:start="221:13" pos:end="256:0">if <condition pos:start="221:16" pos:end="221:35">(<expr pos:start="221:17" pos:end="221:34"><call pos:start="221:17" pos:end="221:34"><name pos:start="221:17" pos:end="221:32">qemu_log_enabled</name><argument_list pos:start="221:33" pos:end="221:34">()</argument_list></call></expr>)</condition> <block pos:start="221:37" pos:end="256:0">{<block_content pos:start="223:17" pos:end="251:17">

                <decl_stmt pos:start="223:17" pos:end="223:43"><decl pos:start="223:17" pos:end="223:42"><type pos:start="223:17" pos:end="223:34"><name pos:start="223:17" pos:end="223:34">target_phys_addr_t</name></type> <name pos:start="223:36" pos:end="223:42">curaddr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="225:17" pos:end="225:40"><decl pos:start="225:17" pos:end="225:27"><type pos:start="225:17" pos:end="225:24"><name pos:start="225:17" pos:end="225:24">uint32_t</name></type> <name pos:start="225:26" pos:end="225:27">a0</name></decl>, <decl pos:start="225:30" pos:end="225:31"><type ref="prev" pos:start="225:17" pos:end="225:24"/><name pos:start="225:30" pos:end="225:31">a1</name></decl>, <decl pos:start="225:34" pos:end="225:35"><type ref="prev" pos:start="225:17" pos:end="225:24"/><name pos:start="225:34" pos:end="225:35">a2</name></decl>, <decl pos:start="225:38" pos:end="225:39"><type ref="prev" pos:start="225:17" pos:end="225:24"/><name pos:start="225:38" pos:end="225:39">a3</name></decl>;</decl_stmt>

                <expr_stmt pos:start="227:17" pos:end="229:49"><expr pos:start="227:17" pos:end="229:48"><call pos:start="227:17" pos:end="229:48"><name pos:start="227:17" pos:end="227:24">qemu_log</name><argument_list pos:start="227:25" pos:end="229:48">(<argument pos:start="227:26" pos:end="229:29"><expr pos:start="227:26" pos:end="229:29"><literal type="string" pos:start="227:26" pos:end="227:39">"Page table: "</literal> <name pos:start="227:41" pos:end="227:54">TARGET_FMT_plx</name> <literal type="string" pos:start="227:56" pos:end="227:62">" len "</literal> <name pos:start="227:64" pos:end="227:77">TARGET_FMT_plx</name>

                         <literal type="string" pos:start="229:26" pos:end="229:29">"\n"</literal></expr></argument>, <argument pos:start="229:32" pos:end="229:34"><expr pos:start="229:32" pos:end="229:34"><name pos:start="229:32" pos:end="229:34">sdr</name></expr></argument>, <argument pos:start="229:37" pos:end="229:47"><expr pos:start="229:37" pos:end="229:47"><name pos:start="229:37" pos:end="229:40">mask</name> <operator pos:start="229:42" pos:end="229:42">+</operator> <literal type="number" pos:start="229:44" pos:end="229:47">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="231:17" pos:end="251:17">for <control pos:start="231:21" pos:end="233:35">(<init pos:start="231:22" pos:end="231:35"><expr pos:start="231:22" pos:end="231:34"><name pos:start="231:22" pos:end="231:28">curaddr</name> <operator pos:start="231:30" pos:end="231:30">=</operator> <name pos:start="231:32" pos:end="231:34">sdr</name></expr>;</init> <condition pos:start="231:37" pos:end="231:66"><expr pos:start="231:37" pos:end="231:65"><name pos:start="231:37" pos:end="231:43">curaddr</name> <operator pos:start="231:45" pos:end="231:45">&lt;</operator> <operator pos:start="231:47" pos:end="231:47">(</operator><name pos:start="231:48" pos:end="231:50">sdr</name> <operator pos:start="231:52" pos:end="231:52">+</operator> <name pos:start="231:54" pos:end="231:57">mask</name> <operator pos:start="231:59" pos:end="231:59">+</operator> <literal type="number" pos:start="231:61" pos:end="231:64">0x80</literal><operator pos:start="231:65" pos:end="231:65">)</operator></expr>;</condition>

                     <incr pos:start="233:22" pos:end="233:34"><expr pos:start="233:22" pos:end="233:34"><name pos:start="233:22" pos:end="233:28">curaddr</name> <operator pos:start="233:30" pos:end="233:31">+=</operator> <literal type="number" pos:start="233:33" pos:end="233:34">16</literal></expr></incr>)</control> <block pos:start="233:37" pos:end="251:17">{<block_content pos:start="235:21" pos:end="249:21">

                    <expr_stmt pos:start="235:21" pos:end="235:43"><expr pos:start="235:21" pos:end="235:42"><name pos:start="235:21" pos:end="235:22">a0</name> <operator pos:start="235:24" pos:end="235:24">=</operator> <call pos:start="235:26" pos:end="235:42"><name pos:start="235:26" pos:end="235:33">ldl_phys</name><argument_list pos:start="235:34" pos:end="235:42">(<argument pos:start="235:35" pos:end="235:41"><expr pos:start="235:35" pos:end="235:41"><name pos:start="235:35" pos:end="235:41">curaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="237:21" pos:end="237:47"><expr pos:start="237:21" pos:end="237:46"><name pos:start="237:21" pos:end="237:22">a1</name> <operator pos:start="237:24" pos:end="237:24">=</operator> <call pos:start="237:26" pos:end="237:46"><name pos:start="237:26" pos:end="237:33">ldl_phys</name><argument_list pos:start="237:34" pos:end="237:46">(<argument pos:start="237:35" pos:end="237:45"><expr pos:start="237:35" pos:end="237:45"><name pos:start="237:35" pos:end="237:41">curaddr</name> <operator pos:start="237:43" pos:end="237:43">+</operator> <literal type="number" pos:start="237:45" pos:end="237:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="239:47"><expr pos:start="239:21" pos:end="239:46"><name pos:start="239:21" pos:end="239:22">a2</name> <operator pos:start="239:24" pos:end="239:24">=</operator> <call pos:start="239:26" pos:end="239:46"><name pos:start="239:26" pos:end="239:33">ldl_phys</name><argument_list pos:start="239:34" pos:end="239:46">(<argument pos:start="239:35" pos:end="239:45"><expr pos:start="239:35" pos:end="239:45"><name pos:start="239:35" pos:end="239:41">curaddr</name> <operator pos:start="239:43" pos:end="239:43">+</operator> <literal type="number" pos:start="239:45" pos:end="239:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:48"><expr pos:start="241:21" pos:end="241:47"><name pos:start="241:21" pos:end="241:22">a3</name> <operator pos:start="241:24" pos:end="241:24">=</operator> <call pos:start="241:26" pos:end="241:47"><name pos:start="241:26" pos:end="241:33">ldl_phys</name><argument_list pos:start="241:34" pos:end="241:47">(<argument pos:start="241:35" pos:end="241:46"><expr pos:start="241:35" pos:end="241:46"><name pos:start="241:35" pos:end="241:41">curaddr</name> <operator pos:start="241:43" pos:end="241:43">+</operator> <literal type="number" pos:start="241:45" pos:end="241:46">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="243:21" pos:end="249:21"><if pos:start="243:21" pos:end="249:21">if <condition pos:start="243:24" pos:end="243:65">(<expr pos:start="243:25" pos:end="243:64"><name pos:start="243:25" pos:end="243:26">a0</name> <operator pos:start="243:28" pos:end="243:29">!=</operator> <literal type="number" pos:start="243:31" pos:end="243:31">0</literal> <operator pos:start="243:33" pos:end="243:34">||</operator> <name pos:start="243:36" pos:end="243:37">a1</name> <operator pos:start="243:39" pos:end="243:40">!=</operator> <literal type="number" pos:start="243:42" pos:end="243:42">0</literal> <operator pos:start="243:44" pos:end="243:45">||</operator> <name pos:start="243:47" pos:end="243:48">a2</name> <operator pos:start="243:50" pos:end="243:51">!=</operator> <literal type="number" pos:start="243:53" pos:end="243:53">0</literal> <operator pos:start="243:55" pos:end="243:56">||</operator> <name pos:start="243:58" pos:end="243:59">a3</name> <operator pos:start="243:61" pos:end="243:62">!=</operator> <literal type="number" pos:start="243:64" pos:end="243:64">0</literal></expr>)</condition> <block pos:start="243:67" pos:end="249:21">{<block_content pos:start="245:25" pos:end="247:58">

                        <expr_stmt pos:start="245:25" pos:end="247:58"><expr pos:start="245:25" pos:end="247:57"><call pos:start="245:25" pos:end="247:57"><name pos:start="245:25" pos:end="245:32">qemu_log</name><argument_list pos:start="245:33" pos:end="247:57">(<argument pos:start="245:34" pos:end="245:73"><expr pos:start="245:34" pos:end="245:73"><name pos:start="245:34" pos:end="245:47">TARGET_FMT_plx</name> <literal type="string" pos:start="245:49" pos:end="245:73">": %08x %08x %08x %08x\n"</literal></expr></argument>,

                                 <argument pos:start="247:34" pos:end="247:40"><expr pos:start="247:34" pos:end="247:40"><name pos:start="247:34" pos:end="247:40">curaddr</name></expr></argument>, <argument pos:start="247:43" pos:end="247:44"><expr pos:start="247:43" pos:end="247:44"><name pos:start="247:43" pos:end="247:44">a0</name></expr></argument>, <argument pos:start="247:47" pos:end="247:48"><expr pos:start="247:47" pos:end="247:48"><name pos:start="247:47" pos:end="247:48">a1</name></expr></argument>, <argument pos:start="247:51" pos:end="247:52"><expr pos:start="247:51" pos:end="247:52"><name pos:start="247:51" pos:end="247:52">a2</name></expr></argument>, <argument pos:start="247:55" pos:end="247:56"><expr pos:start="247:55" pos:end="247:56"><name pos:start="247:55" pos:end="247:56">a3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="255:1" pos:end="255:6">#<cpp:directive pos:start="255:2" pos:end="255:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="263:9">else <block pos:start="257:16" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:21">

            <expr_stmt pos:start="259:13" pos:end="259:43"><expr pos:start="259:13" pos:end="259:42"><call pos:start="259:13" pos:end="259:42"><name pos:start="259:13" pos:end="259:19">LOG_MMU</name><argument_list pos:start="259:20" pos:end="259:42">(<argument pos:start="259:21" pos:end="259:41"><expr pos:start="259:21" pos:end="259:41"><literal type="string" pos:start="259:21" pos:end="259:41">"No access allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:21"><expr pos:start="261:13" pos:end="261:20"><name pos:start="261:13" pos:end="261:15">ret</name> <operator pos:start="261:17" pos:end="261:17">=</operator> <operator pos:start="261:19" pos:end="261:19">-</operator><literal type="number" pos:start="261:20" pos:end="261:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="339:5">else <block pos:start="265:12" pos:end="339:5">{<block_content pos:start="267:9" pos:end="337:9">

        <expr_stmt pos:start="267:9" pos:end="267:37"><expr pos:start="267:9" pos:end="267:36"><call pos:start="267:9" pos:end="267:36"><name pos:start="267:9" pos:end="267:15">LOG_MMU</name><argument_list pos:start="267:16" pos:end="267:36">(<argument pos:start="267:17" pos:end="267:35"><expr pos:start="267:17" pos:end="267:35"><literal type="string" pos:start="267:17" pos:end="267:35">"direct store...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="269:9" pos:end="269:63">/* Direct-store segment : absolutely *BUGGY* for now */</comment>

        <switch pos:start="271:9" pos:end="325:9">switch <condition pos:start="271:16" pos:end="271:21">(<expr pos:start="271:17" pos:end="271:20"><name pos:start="271:17" pos:end="271:20">type</name></expr>)</condition> <block pos:start="271:23" pos:end="325:9">{<block_content pos:start="273:9" pos:end="323:22">

        <case pos:start="273:9" pos:end="273:24">case <expr pos:start="273:14" pos:end="273:23"><name pos:start="273:14" pos:end="273:23">ACCESS_INT</name></expr>:</case>

            <comment type="block" pos:start="275:13" pos:end="275:58">/* Integer load/store : only access allowed */</comment>

            <break pos:start="277:13" pos:end="277:18">break;</break>

        <case pos:start="279:9" pos:end="279:25">case <expr pos:start="279:14" pos:end="279:24"><name pos:start="279:14" pos:end="279:24">ACCESS_CODE</name></expr>:</case>

            <comment type="block" pos:start="281:13" pos:end="281:64">/* No code fetch is allowed in direct-store areas */</comment>

            <return pos:start="283:13" pos:end="283:22">return <expr pos:start="283:20" pos:end="283:21"><operator pos:start="283:20" pos:end="283:20">-</operator><literal type="number" pos:start="283:21" pos:end="283:21">4</literal></expr>;</return>

        <case pos:start="285:9" pos:end="285:26">case <expr pos:start="285:14" pos:end="285:25"><name pos:start="285:14" pos:end="285:25">ACCESS_FLOAT</name></expr>:</case>

            <comment type="block" pos:start="287:13" pos:end="287:43">/* Floating point load/store */</comment>

            <return pos:start="289:13" pos:end="289:22">return <expr pos:start="289:20" pos:end="289:21"><operator pos:start="289:20" pos:end="289:20">-</operator><literal type="number" pos:start="289:21" pos:end="289:21">4</literal></expr>;</return>

        <case pos:start="291:9" pos:end="291:24">case <expr pos:start="291:14" pos:end="291:23"><name pos:start="291:14" pos:end="291:23">ACCESS_RES</name></expr>:</case>

            <comment type="block" pos:start="293:13" pos:end="293:40">/* lwarx, ldarx or srwcx. */</comment>

            <return pos:start="295:13" pos:end="295:22">return <expr pos:start="295:20" pos:end="295:21"><operator pos:start="295:20" pos:end="295:20">-</operator><literal type="number" pos:start="295:21" pos:end="295:21">4</literal></expr>;</return>

        <case pos:start="297:9" pos:end="297:26">case <expr pos:start="297:14" pos:end="297:25"><name pos:start="297:14" pos:end="297:25">ACCESS_CACHE</name></expr>:</case>

            <comment type="block" pos:start="299:13" pos:end="299:70">/* dcba, dcbt, dcbtst, dcbf, dcbi, dcbst, dcbz, or icbi */</comment>

            <comment type="block" pos:start="301:13" pos:end="305:15">/* Should make the instruction do no-op.

             * As it already do no-op, it's quite easy :-)

             */</comment>

            <expr_stmt pos:start="307:13" pos:end="307:31"><expr pos:start="307:13" pos:end="307:30"><name pos:start="307:13" pos:end="307:22"><name pos:start="307:13" pos:end="307:15">ctx</name><operator pos:start="307:16" pos:end="307:17">-&gt;</operator><name pos:start="307:18" pos:end="307:22">raddr</name></name> <operator pos:start="307:24" pos:end="307:24">=</operator> <name pos:start="307:26" pos:end="307:30">eaddr</name></expr>;</expr_stmt>

            <return pos:start="309:13" pos:end="309:21">return <expr pos:start="309:20" pos:end="309:20"><literal type="number" pos:start="309:20" pos:end="309:20">0</literal></expr>;</return>

        <case pos:start="311:9" pos:end="311:24">case <expr pos:start="311:14" pos:end="311:23"><name pos:start="311:14" pos:end="311:23">ACCESS_EXT</name></expr>:</case>

            <comment type="block" pos:start="313:13" pos:end="313:32">/* eciwx or ecowx */</comment>

            <return pos:start="315:13" pos:end="315:22">return <expr pos:start="315:20" pos:end="315:21"><operator pos:start="315:20" pos:end="315:20">-</operator><literal type="number" pos:start="315:21" pos:end="315:21">4</literal></expr>;</return>

        <default pos:start="317:9" pos:end="317:16">default:</default>

            <expr_stmt pos:start="319:13" pos:end="321:49"><expr pos:start="319:13" pos:end="321:48"><call pos:start="319:13" pos:end="321:48"><name pos:start="319:13" pos:end="319:20">qemu_log</name><argument_list pos:start="319:21" pos:end="321:48">(<argument pos:start="319:22" pos:end="321:47"><expr pos:start="319:22" pos:end="321:47"><literal type="string" pos:start="319:22" pos:end="319:58">"ERROR: instruction should not need "</literal>

                        <literal type="string" pos:start="321:25" pos:end="321:47">"address translation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="323:13" pos:end="323:22">return <expr pos:start="323:20" pos:end="323:21"><operator pos:start="323:20" pos:end="323:20">-</operator><literal type="number" pos:start="323:21" pos:end="323:21">4</literal></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="327:9" pos:end="337:9"><if pos:start="327:9" pos:end="333:9">if <condition pos:start="327:12" pos:end="327:69">(<expr pos:start="327:13" pos:end="327:68"><operator pos:start="327:13" pos:end="327:13">(</operator><name pos:start="327:14" pos:end="327:15">rw</name> <operator pos:start="327:17" pos:end="327:18">==</operator> <literal type="number" pos:start="327:20" pos:end="327:20">1</literal> <operator pos:start="327:22" pos:end="327:23">||</operator> <name pos:start="327:25" pos:end="327:32"><name pos:start="327:25" pos:end="327:27">ctx</name><operator pos:start="327:28" pos:end="327:29">-&gt;</operator><name pos:start="327:30" pos:end="327:32">key</name></name> <operator pos:start="327:34" pos:end="327:35">!=</operator> <literal type="number" pos:start="327:37" pos:end="327:37">1</literal><operator pos:start="327:38" pos:end="327:38">)</operator> <operator pos:start="327:40" pos:end="327:41">&amp;&amp;</operator> <operator pos:start="327:43" pos:end="327:43">(</operator><name pos:start="327:44" pos:end="327:45">rw</name> <operator pos:start="327:47" pos:end="327:48">==</operator> <literal type="number" pos:start="327:50" pos:end="327:50">0</literal> <operator pos:start="327:52" pos:end="327:53">||</operator> <name pos:start="327:55" pos:end="327:62"><name pos:start="327:55" pos:end="327:57">ctx</name><operator pos:start="327:58" pos:end="327:59">-&gt;</operator><name pos:start="327:60" pos:end="327:62">key</name></name> <operator pos:start="327:64" pos:end="327:65">!=</operator> <literal type="number" pos:start="327:67" pos:end="327:67">0</literal><operator pos:start="327:68" pos:end="327:68">)</operator></expr>)</condition> <block pos:start="327:71" pos:end="333:9">{<block_content pos:start="329:13" pos:end="331:20">

            <expr_stmt pos:start="329:13" pos:end="329:31"><expr pos:start="329:13" pos:end="329:30"><name pos:start="329:13" pos:end="329:22"><name pos:start="329:13" pos:end="329:15">ctx</name><operator pos:start="329:16" pos:end="329:17">-&gt;</operator><name pos:start="329:18" pos:end="329:22">raddr</name></name> <operator pos:start="329:24" pos:end="329:24">=</operator> <name pos:start="329:26" pos:end="329:30">eaddr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:20"><expr pos:start="331:13" pos:end="331:19"><name pos:start="331:13" pos:end="331:15">ret</name> <operator pos:start="331:17" pos:end="331:17">=</operator> <literal type="number" pos:start="331:19" pos:end="331:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="333:11" pos:end="337:9">else <block pos:start="333:16" pos:end="337:9">{<block_content pos:start="335:13" pos:end="335:21">

            <expr_stmt pos:start="335:13" pos:end="335:21"><expr pos:start="335:13" pos:end="335:20"><name pos:start="335:13" pos:end="335:15">ret</name> <operator pos:start="335:17" pos:end="335:17">=</operator> <operator pos:start="335:19" pos:end="335:19">-</operator><literal type="number" pos:start="335:20" pos:end="335:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="343:5" pos:end="343:15">return <expr pos:start="343:12" pos:end="343:14"><name pos:start="343:12" pos:end="343:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
