<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8152.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">read_uncompressed_sgi</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:55"><decl pos:start="1:34" pos:end="1:55"><type pos:start="1:34" pos:end="1:55"><name pos:start="1:34" pos:end="1:41">unsigned</name> <name pos:start="1:43" pos:end="1:46">char</name><modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:55">out_buf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:65">SgiState</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">z</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">offset</name> <init pos:start="7:25" pos:end="7:69">= <expr pos:start="7:27" pos:end="7:69"><name pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">height</name></name> <operator pos:start="7:37" pos:end="7:37">*</operator> <name pos:start="7:39" pos:end="7:46"><name pos:start="7:39" pos:end="7:39">s</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:46">width</name></name> <operator pos:start="7:48" pos:end="7:48">*</operator> <name pos:start="7:50" pos:end="7:69"><name pos:start="7:50" pos:end="7:50">s</name><operator pos:start="7:51" pos:end="7:52">-&gt;</operator><name pos:start="7:53" pos:end="7:69">bytes_per_channel</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">GetByteContext</name></type> <name pos:start="9:20" pos:end="9:24"><name pos:start="9:20" pos:end="9:21">gp</name><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">out_end</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:27">/* Test buffer size. */</comment>

    <if_stmt pos:start="17:5" pos:end="19:35"><if pos:start="17:5" pos:end="19:35">if <condition pos:start="17:8" pos:end="17:62">(<expr pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:14">offset</name> <operator pos:start="17:16" pos:end="17:16">*</operator> <name pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:25">depth</name></name> <operator pos:start="17:27" pos:end="17:27">&gt;</operator> <call pos:start="17:29" pos:end="17:61"><name pos:start="17:29" pos:end="17:54">bytestream2_get_bytes_left</name><argument_list pos:start="17:55" pos:end="17:61">(<argument pos:start="17:56" pos:end="17:60"><expr pos:start="17:56" pos:end="17:60"><operator pos:start="17:56" pos:end="17:56">&amp;</operator><name pos:start="17:57" pos:end="17:60"><name pos:start="17:57" pos:end="17:57">s</name><operator pos:start="17:58" pos:end="17:59">-&gt;</operator><name pos:start="17:60" pos:end="17:60">g</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:35"><block_content pos:start="19:9" pos:end="19:35">

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:40">/* Create a reader for each plane */</comment>

    <for pos:start="25:5" pos:end="31:5">for <control pos:start="25:9" pos:end="25:34">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">z</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:29"><expr pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:17">z</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">depth</name></name></expr>;</condition> <incr pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:31">z</name><operator pos:start="25:32" pos:end="25:33">++</operator></expr></incr>)</control> <block pos:start="25:36" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:45">

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:10">gp</name><index pos:start="27:11" pos:end="27:13">[<expr pos:start="27:12" pos:end="27:12"><name pos:start="27:12" pos:end="27:12">z</name></expr>]</index></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:20">g</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:24">bytestream2_skip</name><argument_list pos:start="29:25" pos:end="29:44">(<argument pos:start="29:26" pos:end="29:31"><expr pos:start="29:26" pos:end="29:31"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:28">gp</name><index pos:start="29:29" pos:end="29:31">[<expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">z</name></expr>]</index></name></expr></argument>, <argument pos:start="29:34" pos:end="29:43"><expr pos:start="29:34" pos:end="29:43"><name pos:start="29:34" pos:end="29:34">z</name> <operator pos:start="29:36" pos:end="29:36">*</operator> <name pos:start="29:38" pos:end="29:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="35:5" pos:end="61:5">for <control pos:start="35:9" pos:end="35:40">(<init pos:start="35:10" pos:end="35:27"><expr pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:10">y</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:22"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:22">height</name></name> <operator pos:start="35:24" pos:end="35:24">-</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</init> <condition pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:34"><name pos:start="35:29" pos:end="35:29">y</name> <operator pos:start="35:31" pos:end="35:32">&gt;=</operator> <literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr>;</condition> <incr pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:37">y</name><operator pos:start="35:38" pos:end="35:39">--</operator></expr></incr>)</control> <block pos:start="35:42" pos:end="61:5">{<block_content pos:start="37:9" pos:end="59:9">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:15">out_end</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:25">out_buf</name> <operator pos:start="37:27" pos:end="37:27">+</operator> <operator pos:start="37:29" pos:end="37:29">(</operator><name pos:start="37:30" pos:end="37:30">y</name> <operator pos:start="37:32" pos:end="37:32">*</operator> <name pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:44">linesize</name></name><operator pos:start="37:45" pos:end="37:45">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="59:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:38">(<expr pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:32">bytes_per_channel</name></name> <operator pos:start="39:34" pos:end="39:35">==</operator> <literal type="number" pos:start="39:37" pos:end="39:37">1</literal></expr>)</condition> <block pos:start="39:40" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:13">

            <for pos:start="41:13" pos:end="47:13">for <control pos:start="41:17" pos:end="41:42">(<init pos:start="41:18" pos:end="41:30"><expr pos:start="41:18" pos:end="41:29"><name pos:start="41:18" pos:end="41:18">x</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:29">width</name></name></expr>;</init> <condition pos:start="41:32" pos:end="41:37"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:32">x</name> <operator pos:start="41:34" pos:end="41:34">&gt;</operator> <literal type="number" pos:start="41:36" pos:end="41:36">0</literal></expr>;</condition> <incr pos:start="41:39" pos:end="41:41"><expr pos:start="41:39" pos:end="41:41"><name pos:start="41:39" pos:end="41:39">x</name><operator pos:start="41:40" pos:end="41:41">--</operator></expr></incr>)</control> <block pos:start="41:44" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:36">

                <expr_stmt pos:start="43:17" pos:end="43:67"><expr pos:start="43:17" pos:end="43:66"><call pos:start="43:17" pos:end="43:66"><name pos:start="43:17" pos:end="43:39">bytestream2_get_bufferu</name><argument_list pos:start="43:40" pos:end="43:66">(<argument pos:start="43:41" pos:end="43:46"><expr pos:start="43:41" pos:end="43:46"><operator pos:start="43:41" pos:end="43:41">&amp;</operator><name pos:start="43:42" pos:end="43:46"><name pos:start="43:42" pos:end="43:43">gp</name><index pos:start="43:44" pos:end="43:46">[<expr pos:start="43:45" pos:end="43:45"><name pos:start="43:45" pos:end="43:45">z</name></expr>]</index></name></expr></argument>, <argument pos:start="43:49" pos:end="43:55"><expr pos:start="43:49" pos:end="43:55"><name pos:start="43:49" pos:end="43:55">out_end</name></expr></argument>, <argument pos:start="43:58" pos:end="43:65"><expr pos:start="43:58" pos:end="43:65"><name pos:start="43:58" pos:end="43:65"><name pos:start="43:58" pos:end="43:58">s</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:65">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:23">out_end</name> <operator pos:start="45:25" pos:end="45:26">+=</operator> <name pos:start="45:28" pos:end="45:35"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:35">depth</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="59:9">else <block pos:start="49:16" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:61">

            <decl_stmt pos:start="51:13" pos:end="51:50"><decl pos:start="51:13" pos:end="51:49"><type pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:20">uint16_t</name> <modifier pos:start="51:22" pos:end="51:22">*</modifier></type><name pos:start="51:23" pos:end="51:27">out16</name> <init pos:start="51:29" pos:end="51:49">= <expr pos:start="51:31" pos:end="51:49"><operator pos:start="51:31" pos:end="51:31">(</operator><name pos:start="51:32" pos:end="51:39">uint16_t</name> <operator pos:start="51:41" pos:end="51:41">*</operator><operator pos:start="51:42" pos:end="51:42">)</operator><name pos:start="51:43" pos:end="51:49">out_end</name></expr></init></decl>;</decl_stmt>

            <for pos:start="53:13" pos:end="57:61">for <control pos:start="53:17" pos:end="53:42">(<init pos:start="53:18" pos:end="53:30"><expr pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:18">x</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:29"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:29">width</name></name></expr>;</init> <condition pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:36"><name pos:start="53:32" pos:end="53:32">x</name> <operator pos:start="53:34" pos:end="53:34">&gt;</operator> <literal type="number" pos:start="53:36" pos:end="53:36">0</literal></expr>;</condition> <incr pos:start="53:39" pos:end="53:41"><expr pos:start="53:39" pos:end="53:41"><name pos:start="53:39" pos:end="53:39">x</name><operator pos:start="53:40" pos:end="53:41">--</operator></expr></incr>)</control><block type="pseudo" pos:start="55:17" pos:end="57:61"><block_content pos:start="55:17" pos:end="57:61">

                <for pos:start="55:17" pos:end="57:61">for <control pos:start="55:21" pos:end="55:46">(<init pos:start="55:22" pos:end="55:27"><expr pos:start="55:22" pos:end="55:26"><name pos:start="55:22" pos:end="55:22">z</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>;</init> <condition pos:start="55:29" pos:end="55:41"><expr pos:start="55:29" pos:end="55:40"><name pos:start="55:29" pos:end="55:29">z</name> <operator pos:start="55:31" pos:end="55:31">&lt;</operator> <name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:33">s</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:40">depth</name></name></expr>;</condition> <incr pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:43">z</name><operator pos:start="55:44" pos:end="55:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:21" pos:end="57:61"><block_content pos:start="57:21" pos:end="57:61">

                    <expr_stmt pos:start="57:21" pos:end="57:61"><expr pos:start="57:21" pos:end="57:60"><operator pos:start="57:21" pos:end="57:21">*</operator><name pos:start="57:22" pos:end="57:26">out16</name><operator pos:start="57:27" pos:end="57:28">++</operator> <operator pos:start="57:30" pos:end="57:30">=</operator> <call pos:start="57:32" pos:end="57:60"><name pos:start="57:32" pos:end="57:52">bytestream2_get_ne16u</name><argument_list pos:start="57:53" pos:end="57:60">(<argument pos:start="57:54" pos:end="57:59"><expr pos:start="57:54" pos:end="57:59"><operator pos:start="57:54" pos:end="57:54">&amp;</operator><name pos:start="57:55" pos:end="57:59"><name pos:start="57:55" pos:end="57:56">gp</name><index pos:start="57:57" pos:end="57:59">[<expr pos:start="57:58" pos:end="57:58"><name pos:start="57:58" pos:end="57:58">z</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
