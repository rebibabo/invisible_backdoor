<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7172.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">av_crc_init</name><parameter_list pos:start="1:16" pos:end="1:74">(<parameter pos:start="1:17" pos:end="1:26"><decl pos:start="1:17" pos:end="1:26"><type pos:start="1:17" pos:end="1:26"><name pos:start="1:17" pos:end="1:21">AVCRC</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:26">ctx</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:34"><decl pos:start="1:29" pos:end="1:34"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:34">le</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:44"><decl pos:start="1:37" pos:end="1:44"><type pos:start="1:37" pos:end="1:44"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:44">bits</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:59">poly</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:73">ctx_size</name></decl></parameter>)</parameter_list><block pos:start="1:75" pos:end="59:1">{<block_content pos:start="3:5" pos:end="57:13">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:14">c</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:53">(<expr pos:start="9:9" pos:end="9:52"><name pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:12">bits</name> <argument_list type="generic" pos:start="9:14" pos:end="9:26">&lt; <argument pos:start="9:16" pos:end="9:24"><expr pos:start="9:16" pos:end="9:24"><literal type="number" pos:start="9:16" pos:end="9:16">8</literal> <operator pos:start="9:18" pos:end="9:19">||</operator> <name pos:start="9:21" pos:end="9:24">bits</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="9:28" pos:end="9:29">32</literal> <operator pos:start="9:31" pos:end="9:32">||</operator> <name pos:start="9:34" pos:end="9:37">poly</name> <operator pos:start="9:39" pos:end="9:40">&gt;=</operator> <operator pos:start="9:42" pos:end="9:42">(</operator><literal type="number" pos:start="9:43" pos:end="9:45">1LL</literal><operator pos:start="9:46" pos:end="9:47">&lt;&lt;</operator><name pos:start="9:48" pos:end="9:51">bits</name><operator pos:start="9:52" pos:end="9:52">)</operator></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:72">(<expr pos:start="13:9" pos:end="13:71"><name pos:start="13:9" pos:end="13:16">ctx_size</name> <operator pos:start="13:18" pos:end="13:19">!=</operator> <sizeof pos:start="13:21" pos:end="13:33">sizeof<argument_list pos:start="13:27" pos:end="13:33">(<argument pos:start="13:28" pos:end="13:32"><expr pos:start="13:28" pos:end="13:32"><name pos:start="13:28" pos:end="13:32">AVCRC</name></expr></argument>)</argument_list></sizeof><operator pos:start="13:34" pos:end="13:34">*</operator><literal type="number" pos:start="13:35" pos:end="13:37">257</literal> <operator pos:start="13:39" pos:end="13:40">&amp;&amp;</operator> <name pos:start="13:42" pos:end="13:49">ctx_size</name> <operator pos:start="13:51" pos:end="13:52">!=</operator> <sizeof pos:start="13:54" pos:end="13:66">sizeof<argument_list pos:start="13:60" pos:end="13:66">(<argument pos:start="13:61" pos:end="13:65"><expr pos:start="13:61" pos:end="13:65"><name pos:start="13:61" pos:end="13:65">AVCRC</name></expr></argument>)</argument_list></sizeof><operator pos:start="13:67" pos:end="13:67">*</operator><literal type="number" pos:start="13:68" pos:end="13:71">1024</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="19:5" pos:end="39:5">for <control pos:start="19:9" pos:end="19:29">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:23">256</literal></expr>;</condition> <incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control> <block pos:start="19:31" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:9">

        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:15">(<expr pos:start="21:13" pos:end="21:14"><name pos:start="21:13" pos:end="21:14">le</name></expr>)</condition> <block pos:start="21:17" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:23">

            <for pos:start="23:13" pos:end="25:45">for <control pos:start="23:17" pos:end="23:42">(<init pos:start="23:18" pos:end="23:30"><expr pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:18">c</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:22">i</name></expr><operator pos:start="23:23" pos:end="23:23">,</operator> <expr pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:25">j</name> <operator pos:start="23:27" pos:end="23:27">=</operator> <literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>;</init> <condition pos:start="23:32" pos:end="23:37"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:32">j</name> <operator pos:start="23:34" pos:end="23:34">&lt;</operator> <literal type="number" pos:start="23:36" pos:end="23:36">8</literal></expr>;</condition> <incr pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:39">j</name><operator pos:start="23:40" pos:end="23:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:17" pos:end="25:45"><block_content pos:start="25:17" pos:end="25:45">

                <expr_stmt pos:start="25:17" pos:end="25:45"><expr pos:start="25:17" pos:end="25:44"><name pos:start="25:17" pos:end="25:17">c</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:22">c</name><operator pos:start="25:23" pos:end="25:24">&gt;&gt;</operator><literal type="number" pos:start="25:25" pos:end="25:25">1</literal><operator pos:start="25:26" pos:end="25:26">)</operator><operator pos:start="25:27" pos:end="25:27">^</operator><operator pos:start="25:28" pos:end="25:28">(</operator><name pos:start="25:29" pos:end="25:32">poly</name> <operator pos:start="25:34" pos:end="25:34">&amp;</operator> <operator pos:start="25:36" pos:end="25:36">(</operator><operator pos:start="25:37" pos:end="25:37">-</operator><operator pos:start="25:38" pos:end="25:38">(</operator><name pos:start="25:39" pos:end="25:39">c</name><operator pos:start="25:40" pos:end="25:40">&amp;</operator><literal type="number" pos:start="25:41" pos:end="25:41">1</literal><operator pos:start="25:42" pos:end="25:42">)</operator><operator pos:start="25:43" pos:end="25:43">)</operator><operator pos:start="25:44" pos:end="25:44">)</operator></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="27:13" pos:end="27:23"><expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:15">ctx</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>]</index></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:22">c</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="37:9">else <block pos:start="29:16" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:35">

            <for pos:start="31:13" pos:end="33:71">for <control pos:start="31:17" pos:end="31:48">(<init pos:start="31:18" pos:end="31:36"><expr pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:18">c</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:22">i</name> <operator pos:start="31:24" pos:end="31:25">&lt;&lt;</operator> <literal type="number" pos:start="31:27" pos:end="31:28">24</literal></expr><operator pos:start="31:29" pos:end="31:29">,</operator> <expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:31">j</name> <operator pos:start="31:33" pos:end="31:33">=</operator> <literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>;</init> <condition pos:start="31:38" pos:end="31:43"><expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:38">j</name> <operator pos:start="31:40" pos:end="31:40">&lt;</operator> <literal type="number" pos:start="31:42" pos:end="31:42">8</literal></expr>;</condition> <incr pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:45">j</name><operator pos:start="31:46" pos:end="31:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:17" pos:end="33:71"><block_content pos:start="33:17" pos:end="33:71">

                <expr_stmt pos:start="33:17" pos:end="33:71"><expr pos:start="33:17" pos:end="33:70"><name pos:start="33:17" pos:end="33:17">c</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:22">c</name><operator pos:start="33:23" pos:end="33:24">&lt;&lt;</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal><operator pos:start="33:26" pos:end="33:26">)</operator> <operator pos:start="33:28" pos:end="33:28">^</operator> <operator pos:start="33:30" pos:end="33:30">(</operator><operator pos:start="33:31" pos:end="33:31">(</operator><name pos:start="33:32" pos:end="33:35">poly</name><operator pos:start="33:36" pos:end="33:37">&lt;&lt;</operator><operator pos:start="33:38" pos:end="33:38">(</operator><literal type="number" pos:start="33:39" pos:end="33:41">32</literal><operator pos:start="33:41" pos:end="33:41">-</operator><name pos:start="33:42" pos:end="33:45">bits</name><operator pos:start="33:46" pos:end="33:46">)</operator><operator pos:start="33:47" pos:end="33:47">)</operator> <operator pos:start="33:49" pos:end="33:49">&amp;</operator> <operator pos:start="33:51" pos:end="33:51">(</operator><operator pos:start="33:52" pos:end="33:52">(</operator><operator pos:start="33:53" pos:end="33:53">(</operator><name pos:start="33:54" pos:end="33:60">int32_t</name><operator pos:start="33:61" pos:end="33:61">)</operator><name pos:start="33:62" pos:end="33:62">c</name><operator pos:start="33:63" pos:end="33:63">)</operator><operator pos:start="33:64" pos:end="33:65">&gt;&gt;</operator><literal type="number" pos:start="33:66" pos:end="33:67">31</literal><operator pos:start="33:68" pos:end="33:68">)</operator> <operator pos:start="33:70" pos:end="33:70">)</operator></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="35:13" pos:end="35:35"><expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:15">ctx</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">i</name></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:34"><name pos:start="35:22" pos:end="35:31">av_bswap32</name><argument_list pos:start="35:32" pos:end="35:34">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="44:0"><expr pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:7">ctx</name><index pos:start="41:8" pos:end="41:12">[<expr pos:start="41:9" pos:end="41:11"><literal type="number" pos:start="41:9" pos:end="41:11">256</literal></expr>]</index></name><operator pos:start="41:13" pos:end="41:13">=</operator><literal type="number" pos:start="41:14" pos:end="41:14">1</literal></expr>;</expr_stmt>

<cpp:if pos:start="43:1" pos:end="43:17">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:17"><operator pos:start="43:5" pos:end="43:5">!</operator><name pos:start="43:6" pos:end="43:17">CONFIG_SMALL</name></expr></cpp:if>

    <if_stmt pos:start="45:5" pos:end="54:0"><if pos:start="45:5" pos:end="54:0">if<condition pos:start="45:7" pos:end="45:38">(<expr pos:start="45:8" pos:end="45:37"><name pos:start="45:8" pos:end="45:15">ctx_size</name> <operator pos:start="45:17" pos:end="45:18">&gt;=</operator> <sizeof pos:start="45:20" pos:end="45:32">sizeof<argument_list pos:start="45:26" pos:end="45:32">(<argument pos:start="45:27" pos:end="45:31"><expr pos:start="45:27" pos:end="45:31"><name pos:start="45:27" pos:end="45:31">AVCRC</name></expr></argument>)</argument_list></sizeof><operator pos:start="45:33" pos:end="45:33">*</operator><literal type="number" pos:start="45:34" pos:end="45:37">1024</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="54:0"><block_content pos:start="47:9" pos:end="54:0">

        <for pos:start="47:9" pos:end="54:0">for <control pos:start="47:13" pos:end="47:33">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">i</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:28"><expr pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <literal type="number" pos:start="47:25" pos:end="47:27">256</literal></expr>;</condition> <incr pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:30">i</name><operator pos:start="47:31" pos:end="47:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:13" pos:end="54:0"><block_content pos:start="49:13" pos:end="54:0">

            <for pos:start="49:13" pos:end="54:0">for<control pos:start="49:16" pos:end="49:30">(<init pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:17">j</name><operator pos:start="49:18" pos:end="49:18">=</operator><literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</init> <condition pos:start="49:22" pos:end="49:25"><expr pos:start="49:22" pos:end="49:24"><name pos:start="49:22" pos:end="49:22">j</name><operator pos:start="49:23" pos:end="49:23">&lt;</operator><literal type="number" pos:start="49:24" pos:end="49:24">3</literal></expr>;</condition> <incr pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">j</name><operator pos:start="49:28" pos:end="49:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:17" pos:end="54:0"><block_content pos:start="51:17" pos:end="54:0">

                <expr_stmt pos:start="51:17" pos:end="54:0"><expr pos:start="51:17" pos:end="51:84"><name pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:19">ctx</name><index pos:start="51:20" pos:end="51:34">[<expr pos:start="51:21" pos:end="51:33"><literal type="number" pos:start="51:21" pos:end="51:23">256</literal><operator pos:start="51:24" pos:end="51:24">*</operator><operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:26">j</name><operator pos:start="51:27" pos:end="51:27">+</operator><literal type="number" pos:start="51:28" pos:end="51:28">1</literal><operator pos:start="51:29" pos:end="51:29">)</operator> <operator pos:start="51:31" pos:end="51:31">+</operator> <name pos:start="51:33" pos:end="51:33">i</name></expr>]</index></name><operator pos:start="51:35" pos:end="51:35">=</operator> <operator pos:start="51:37" pos:end="51:37">(</operator><name pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:40">ctx</name><index pos:start="51:41" pos:end="51:51">[<expr pos:start="51:42" pos:end="51:50"><literal type="number" pos:start="51:42" pos:end="51:44">256</literal><operator pos:start="51:45" pos:end="51:45">*</operator><name pos:start="51:46" pos:end="51:46">j</name> <operator pos:start="51:48" pos:end="51:48">+</operator> <name pos:start="51:50" pos:end="51:50">i</name></expr>]</index></name><operator pos:start="51:52" pos:end="51:53">&gt;&gt;</operator><literal type="number" pos:start="51:54" pos:end="51:54">8</literal><operator pos:start="51:55" pos:end="51:55">)</operator> <operator pos:start="51:57" pos:end="51:57">^</operator> <name pos:start="51:59" pos:end="51:84"><name pos:start="51:59" pos:end="51:61">ctx</name><index pos:start="51:62" pos:end="51:84">[ <expr pos:start="51:64" pos:end="51:82"><name pos:start="51:64" pos:end="51:77"><name pos:start="51:64" pos:end="51:66">ctx</name><index pos:start="51:67" pos:end="51:77">[<expr pos:start="51:68" pos:end="51:76"><literal type="number" pos:start="51:68" pos:end="51:70">256</literal><operator pos:start="51:71" pos:end="51:71">*</operator><name pos:start="51:72" pos:end="51:72">j</name> <operator pos:start="51:74" pos:end="51:74">+</operator> <name pos:start="51:76" pos:end="51:76">i</name></expr>]</index></name><operator pos:start="51:78" pos:end="51:78">&amp;</operator><literal type="number" pos:start="51:79" pos:end="51:82">0xFF</literal></expr> ]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
