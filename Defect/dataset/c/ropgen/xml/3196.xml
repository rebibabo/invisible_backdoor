<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3196.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">handle_control_message</name><parameter_list pos:start="1:35" pos:end="1:77">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:47">VirtIOSerial</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">vser</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:72">size_t</name></type> <name pos:start="1:74" pos:end="1:76">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">VirtIOSerialPort</name></name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:33">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:33">virtio_console_control</name></name></type> <name pos:start="7:35" pos:end="7:38">cpkt</name></decl>, <decl pos:start="7:41" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:33"><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:46">gcpkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">buffer_len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:9">gcpkt</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:15">buf</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <sizeof pos:start="19:15" pos:end="19:26">sizeof<argument_list pos:start="19:21" pos:end="19:26">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">cpkt</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="19:29" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <comment type="block" pos:start="21:9" pos:end="21:54">/* The guest sent an invalid control packet */</comment>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:8">cpkt</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:14">event</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:38"><name pos:start="29:18" pos:end="29:23">lduw_p</name><argument_list pos:start="29:24" pos:end="29:38">(<argument pos:start="29:25" pos:end="29:37"><expr pos:start="29:25" pos:end="29:37"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:30">gcpkt</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:37">event</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:8">cpkt</name><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:14">value</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:38"><name pos:start="31:18" pos:end="31:23">lduw_p</name><argument_list pos:start="31:24" pos:end="31:38">(<argument pos:start="31:25" pos:end="31:37"><expr pos:start="31:25" pos:end="31:37"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:30">gcpkt</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:8">port</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:51"><name pos:start="35:12" pos:end="35:26">find_port_by_id</name><argument_list pos:start="35:27" pos:end="35:51">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">vser</name></expr></argument>, <argument pos:start="35:34" pos:end="35:50"><expr pos:start="35:34" pos:end="35:50"><call pos:start="35:34" pos:end="35:50"><name pos:start="35:34" pos:end="35:38">ldl_p</name><argument_list pos:start="35:39" pos:end="35:50">(<argument pos:start="35:40" pos:end="35:49"><expr pos:start="35:40" pos:end="35:49"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:49"><name pos:start="35:41" pos:end="35:45">gcpkt</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:49">id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:15"><if pos:start="37:5" pos:end="39:15">if <condition pos:start="37:8" pos:end="37:59">(<expr pos:start="37:9" pos:end="37:58"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:13">port</name> <operator pos:start="37:15" pos:end="37:16">&amp;&amp;</operator> <name pos:start="37:18" pos:end="37:27"><name pos:start="37:18" pos:end="37:21">cpkt</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:27">event</name></name> <operator pos:start="37:29" pos:end="37:30">!=</operator> <name pos:start="37:32" pos:end="37:58">VIRTIO_CONSOLE_DEVICE_READY</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:15"><block_content pos:start="39:9" pos:end="39:15">

        <return pos:start="39:9" pos:end="39:15">return;</return></block_content></block></if></if_stmt>



    <switch pos:start="43:5" pos:end="193:5">switch<condition pos:start="43:11" pos:end="43:22">(<expr pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:15">cpkt</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:21">event</name></name></expr>)</condition> <block pos:start="43:24" pos:end="193:5">{<block_content pos:start="45:5" pos:end="191:14">

    <case pos:start="45:5" pos:end="45:37">case <expr pos:start="45:10" pos:end="45:36"><name pos:start="45:10" pos:end="45:36">VIRTIO_CONSOLE_DEVICE_READY</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:24">(<expr pos:start="47:13" pos:end="47:23"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:23"><name pos:start="47:14" pos:end="47:17">cpkt</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:23">value</name></name></expr>)</condition> <block pos:start="47:26" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:18">

            <expr_stmt pos:start="49:13" pos:end="51:47"><expr pos:start="49:13" pos:end="51:46"><call pos:start="49:13" pos:end="51:46"><name pos:start="49:13" pos:end="49:24">error_report</name><argument_list pos:start="49:25" pos:end="51:46">(<argument pos:start="49:26" pos:end="49:81"><expr pos:start="49:26" pos:end="49:81"><literal type="string" pos:start="49:26" pos:end="49:81">"virtio-serial-bus: Guest failure in adding device %s\n"</literal></expr></argument>,

                         <argument pos:start="51:26" pos:end="51:45"><expr pos:start="51:26" pos:end="51:45"><name pos:start="51:26" pos:end="51:45"><name pos:start="51:26" pos:end="51:29">vser</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:34">bus</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:40">qbus</name><operator pos:start="51:41" pos:end="51:41">.</operator><name pos:start="51:42" pos:end="51:45">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="57:9" pos:end="63:11">/*

         * The device is up, we can now tell the device about all the

         * ports we have here.

         */</comment>

        <macro pos:start="65:9" pos:end="65:48"><name pos:start="65:9" pos:end="65:22">QTAILQ_FOREACH</name><argument_list pos:start="65:23" pos:end="65:48">(<argument pos:start="65:24" pos:end="65:27">port</argument>, <argument pos:start="65:30" pos:end="65:41">&amp;vser-&gt;ports</argument>, <argument pos:start="65:44" pos:end="65:47">next</argument>)</argument_list></macro> <block pos:start="65:50" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:65">

            <expr_stmt pos:start="67:13" pos:end="67:65"><expr pos:start="67:13" pos:end="67:64"><call pos:start="67:13" pos:end="67:64"><name pos:start="67:13" pos:end="67:30">send_control_event</name><argument_list pos:start="67:31" pos:end="67:64">(<argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">port</name></expr></argument>, <argument pos:start="67:38" pos:end="67:60"><expr pos:start="67:38" pos:end="67:60"><name pos:start="67:38" pos:end="67:60">VIRTIO_CONSOLE_PORT_ADD</name></expr></argument>, <argument pos:start="67:63" pos:end="67:63"><expr pos:start="67:63" pos:end="67:63"><literal type="number" pos:start="67:63" pos:end="67:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="71:9" pos:end="71:14">break;</break>



    <case pos:start="75:5" pos:end="75:35">case <expr pos:start="75:10" pos:end="75:34"><name pos:start="75:10" pos:end="75:34">VIRTIO_CONSOLE_PORT_READY</name></expr>:</case>

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="85:9">if <condition pos:start="77:12" pos:end="77:24">(<expr pos:start="77:13" pos:end="77:23"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:23"><name pos:start="77:14" pos:end="77:17">cpkt</name><operator pos:start="77:18" pos:end="77:18">.</operator><name pos:start="77:19" pos:end="77:23">value</name></name></expr>)</condition> <block pos:start="77:26" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:18">

            <expr_stmt pos:start="79:13" pos:end="81:57"><expr pos:start="79:13" pos:end="81:56"><call pos:start="79:13" pos:end="81:56"><name pos:start="79:13" pos:end="79:24">error_report</name><argument_list pos:start="79:25" pos:end="81:56">(<argument pos:start="79:26" pos:end="79:93"><expr pos:start="79:26" pos:end="79:93"><literal type="string" pos:start="79:26" pos:end="79:93">"virtio-serial-bus: Guest failure in adding port %u for device %s\n"</literal></expr></argument>,

                         <argument pos:start="81:26" pos:end="81:33"><expr pos:start="81:26" pos:end="81:33"><name pos:start="81:26" pos:end="81:33"><name pos:start="81:26" pos:end="81:29">port</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:33">id</name></name></expr></argument>, <argument pos:start="81:36" pos:end="81:55"><expr pos:start="81:36" pos:end="81:55"><name pos:start="81:36" pos:end="81:55"><name pos:start="81:36" pos:end="81:39">vser</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:44">bus</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:50">qbus</name><operator pos:start="81:51" pos:end="81:51">.</operator><name pos:start="81:52" pos:end="81:55">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="87:9" pos:end="99:11">/*

         * Now that we know the guest asked for the port name, we're

         * sure the guest has initialised whatever state is necessary

         * for this port. Now's a good time to let the guest know if

         * this port is a console port so that the guest can hook it

         * up to hvc.

         */</comment>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:29">(<expr pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:16">port</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:28">is_console</name></name></expr>)</condition> <block pos:start="101:31" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:69">

            <expr_stmt pos:start="103:13" pos:end="103:69"><expr pos:start="103:13" pos:end="103:68"><call pos:start="103:13" pos:end="103:68"><name pos:start="103:13" pos:end="103:30">send_control_event</name><argument_list pos:start="103:31" pos:end="103:68">(<argument pos:start="103:32" pos:end="103:35"><expr pos:start="103:32" pos:end="103:35"><name pos:start="103:32" pos:end="103:35">port</name></expr></argument>, <argument pos:start="103:38" pos:end="103:64"><expr pos:start="103:38" pos:end="103:64"><name pos:start="103:38" pos:end="103:64">VIRTIO_CONSOLE_CONSOLE_PORT</name></expr></argument>, <argument pos:start="103:67" pos:end="103:67"><expr pos:start="103:67" pos:end="103:67"><literal type="number" pos:start="103:67" pos:end="103:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="109:9" pos:end="135:9"><if pos:start="109:9" pos:end="135:9">if <condition pos:start="109:12" pos:end="109:23">(<expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:16">port</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:22">name</name></name></expr>)</condition> <block pos:start="109:25" pos:end="135:9">{<block_content pos:start="111:13" pos:end="133:30">

            <expr_stmt pos:start="111:13" pos:end="111:57"><expr pos:start="111:13" pos:end="111:56"><call pos:start="111:13" pos:end="111:56"><name pos:start="111:13" pos:end="111:17">stw_p</name><argument_list pos:start="111:18" pos:end="111:56">(<argument pos:start="111:19" pos:end="111:29"><expr pos:start="111:19" pos:end="111:29"><operator pos:start="111:19" pos:end="111:19">&amp;</operator><name pos:start="111:20" pos:end="111:29"><name pos:start="111:20" pos:end="111:23">cpkt</name><operator pos:start="111:24" pos:end="111:24">.</operator><name pos:start="111:25" pos:end="111:29">event</name></name></expr></argument>, <argument pos:start="111:32" pos:end="111:55"><expr pos:start="111:32" pos:end="111:55"><name pos:start="111:32" pos:end="111:55">VIRTIO_CONSOLE_PORT_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:34"><expr pos:start="113:13" pos:end="113:33"><call pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:17">stw_p</name><argument_list pos:start="113:18" pos:end="113:33">(<argument pos:start="113:19" pos:end="113:29"><expr pos:start="113:19" pos:end="113:29"><operator pos:start="113:19" pos:end="113:19">&amp;</operator><name pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:23">cpkt</name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:29">value</name></name></expr></argument>, <argument pos:start="113:32" pos:end="113:32"><expr pos:start="113:32" pos:end="113:32"><literal type="number" pos:start="113:32" pos:end="113:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:63"><expr pos:start="117:13" pos:end="117:62"><name pos:start="117:13" pos:end="117:22">buffer_len</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <sizeof pos:start="117:26" pos:end="117:37">sizeof<argument_list pos:start="117:32" pos:end="117:37">(<argument pos:start="117:33" pos:end="117:36"><expr pos:start="117:33" pos:end="117:36"><name pos:start="117:33" pos:end="117:36">cpkt</name></expr></argument>)</argument_list></sizeof> <operator pos:start="117:39" pos:end="117:39">+</operator> <call pos:start="117:41" pos:end="117:58"><name pos:start="117:41" pos:end="117:46">strlen</name><argument_list pos:start="117:47" pos:end="117:58">(<argument pos:start="117:48" pos:end="117:57"><expr pos:start="117:48" pos:end="117:57"><name pos:start="117:48" pos:end="117:57"><name pos:start="117:48" pos:end="117:51">port</name><operator pos:start="117:52" pos:end="117:53">-&gt;</operator><name pos:start="117:54" pos:end="117:57">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="117:60" pos:end="117:60">+</operator> <literal type="number" pos:start="117:62" pos:end="117:62">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:45"><expr pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:18">buffer</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <call pos:start="119:22" pos:end="119:44"><name pos:start="119:22" pos:end="119:32">qemu_malloc</name><argument_list pos:start="119:33" pos:end="119:44">(<argument pos:start="119:34" pos:end="119:43"><expr pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:43">buffer_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="123:13" pos:end="123:48"><expr pos:start="123:13" pos:end="123:47"><call pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:18">memcpy</name><argument_list pos:start="123:19" pos:end="123:47">(<argument pos:start="123:20" pos:end="123:25"><expr pos:start="123:20" pos:end="123:25"><name pos:start="123:20" pos:end="123:25">buffer</name></expr></argument>, <argument pos:start="123:28" pos:end="123:32"><expr pos:start="123:28" pos:end="123:32"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:32">cpkt</name></expr></argument>, <argument pos:start="123:35" pos:end="123:46"><expr pos:start="123:35" pos:end="123:46"><sizeof pos:start="123:35" pos:end="123:46">sizeof<argument_list pos:start="123:41" pos:end="123:46">(<argument pos:start="123:42" pos:end="123:45"><expr pos:start="123:42" pos:end="123:45"><name pos:start="123:42" pos:end="123:45">cpkt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:74"><expr pos:start="125:13" pos:end="125:73"><call pos:start="125:13" pos:end="125:73"><name pos:start="125:13" pos:end="125:18">memcpy</name><argument_list pos:start="125:19" pos:end="125:73">(<argument pos:start="125:20" pos:end="125:40"><expr pos:start="125:20" pos:end="125:40"><name pos:start="125:20" pos:end="125:25">buffer</name> <operator pos:start="125:27" pos:end="125:27">+</operator> <sizeof pos:start="125:29" pos:end="125:40">sizeof<argument_list pos:start="125:35" pos:end="125:40">(<argument pos:start="125:36" pos:end="125:39"><expr pos:start="125:36" pos:end="125:39"><name pos:start="125:36" pos:end="125:39">cpkt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="125:43" pos:end="125:52"><expr pos:start="125:43" pos:end="125:52"><name pos:start="125:43" pos:end="125:52"><name pos:start="125:43" pos:end="125:46">port</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:52">name</name></name></expr></argument>, <argument pos:start="125:55" pos:end="125:72"><expr pos:start="125:55" pos:end="125:72"><call pos:start="125:55" pos:end="125:72"><name pos:start="125:55" pos:end="125:60">strlen</name><argument_list pos:start="125:61" pos:end="125:72">(<argument pos:start="125:62" pos:end="125:71"><expr pos:start="125:62" pos:end="125:71"><name pos:start="125:62" pos:end="125:71"><name pos:start="125:62" pos:end="125:65">port</name><operator pos:start="125:66" pos:end="125:67">-&gt;</operator><name pos:start="125:68" pos:end="125:71">name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:39"><expr pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:18">buffer</name><index pos:start="127:19" pos:end="127:34">[<expr pos:start="127:20" pos:end="127:33"><name pos:start="127:20" pos:end="127:29">buffer_len</name> <operator pos:start="127:31" pos:end="127:31">-</operator> <literal type="number" pos:start="127:33" pos:end="127:33">1</literal></expr>]</index></name> <operator pos:start="127:36" pos:end="127:36">=</operator> <literal type="number" pos:start="127:38" pos:end="127:38">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="131:13" pos:end="131:55"><expr pos:start="131:13" pos:end="131:54"><call pos:start="131:13" pos:end="131:54"><name pos:start="131:13" pos:end="131:28">send_control_msg</name><argument_list pos:start="131:29" pos:end="131:54">(<argument pos:start="131:30" pos:end="131:33"><expr pos:start="131:30" pos:end="131:33"><name pos:start="131:30" pos:end="131:33">port</name></expr></argument>, <argument pos:start="131:36" pos:end="131:41"><expr pos:start="131:36" pos:end="131:41"><name pos:start="131:36" pos:end="131:41">buffer</name></expr></argument>, <argument pos:start="131:44" pos:end="131:53"><expr pos:start="131:44" pos:end="131:53"><name pos:start="131:44" pos:end="131:53">buffer_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:30"><expr pos:start="133:13" pos:end="133:29"><call pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:21">qemu_free</name><argument_list pos:start="133:22" pos:end="133:29">(<argument pos:start="133:23" pos:end="133:28"><expr pos:start="133:23" pos:end="133:28"><name pos:start="133:23" pos:end="133:28">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:33">(<expr pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:16">port</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:32">host_connected</name></name></expr>)</condition> <block pos:start="139:35" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:66">

            <expr_stmt pos:start="141:13" pos:end="141:66"><expr pos:start="141:13" pos:end="141:65"><call pos:start="141:13" pos:end="141:65"><name pos:start="141:13" pos:end="141:30">send_control_event</name><argument_list pos:start="141:31" pos:end="141:65">(<argument pos:start="141:32" pos:end="141:35"><expr pos:start="141:32" pos:end="141:35"><name pos:start="141:32" pos:end="141:35">port</name></expr></argument>, <argument pos:start="141:38" pos:end="141:61"><expr pos:start="141:38" pos:end="141:61"><name pos:start="141:38" pos:end="141:61">VIRTIO_CONSOLE_PORT_OPEN</name></expr></argument>, <argument pos:start="141:64" pos:end="141:64"><expr pos:start="141:64" pos:end="141:64"><literal type="number" pos:start="141:64" pos:end="141:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="147:9" pos:end="157:11">/*

         * When the guest has asked us for this information it means

         * the guest is all setup and has its virtqueues

         * initialised. If some app is interested in knowing about

         * this event, let it know.

         */</comment>

        <if_stmt pos:start="159:9" pos:end="163:9"><if pos:start="159:9" pos:end="163:9">if <condition pos:start="159:12" pos:end="159:36">(<expr pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:16">port</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:22">info</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:35">guest_ready</name></name></expr>)</condition> <block pos:start="159:38" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:42">

            <expr_stmt pos:start="161:13" pos:end="161:42"><expr pos:start="161:13" pos:end="161:41"><call pos:start="161:13" pos:end="161:41"><name pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:16">port</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:22">info</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:35">guest_ready</name></name><argument_list pos:start="161:36" pos:end="161:41">(<argument pos:start="161:37" pos:end="161:40"><expr pos:start="161:37" pos:end="161:40"><name pos:start="161:37" pos:end="161:40">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>



    <case pos:start="169:5" pos:end="169:34">case <expr pos:start="169:10" pos:end="169:33"><name pos:start="169:10" pos:end="169:33">VIRTIO_CONSOLE_PORT_OPEN</name></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="171:43"><expr pos:start="171:9" pos:end="171:42"><name pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:12">port</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:29">guest_connected</name></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <name pos:start="171:33" pos:end="171:42"><name pos:start="171:33" pos:end="171:36">cpkt</name><operator pos:start="171:37" pos:end="171:37">.</operator><name pos:start="171:38" pos:end="171:42">value</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="179:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:49">(<expr pos:start="173:13" pos:end="173:48"><name pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:16">cpkt</name><operator pos:start="173:17" pos:end="173:17">.</operator><name pos:start="173:18" pos:end="173:22">value</name></name> <operator pos:start="173:24" pos:end="173:25">&amp;&amp;</operator> <name pos:start="173:27" pos:end="173:48"><name pos:start="173:27" pos:end="173:30">port</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:36">info</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:48">guest_open</name></name></expr>)</condition> <block pos:start="173:51" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:41">

            <comment type="block" pos:start="175:13" pos:end="175:76">/* Send the guest opened notification if an app is interested */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:41"><expr pos:start="177:13" pos:end="177:40"><call pos:start="177:13" pos:end="177:40"><name pos:start="177:13" pos:end="177:34"><name pos:start="177:13" pos:end="177:16">port</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:22">info</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:34">guest_open</name></name><argument_list pos:start="177:35" pos:end="177:40">(<argument pos:start="177:36" pos:end="177:39"><expr pos:start="177:36" pos:end="177:39"><name pos:start="177:36" pos:end="177:39">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:51">(<expr pos:start="183:13" pos:end="183:50"><operator pos:start="183:13" pos:end="183:13">!</operator><name pos:start="183:14" pos:end="183:23"><name pos:start="183:14" pos:end="183:17">cpkt</name><operator pos:start="183:18" pos:end="183:18">.</operator><name pos:start="183:19" pos:end="183:23">value</name></name> <operator pos:start="183:25" pos:end="183:26">&amp;&amp;</operator> <name pos:start="183:28" pos:end="183:50"><name pos:start="183:28" pos:end="183:31">port</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:37">info</name><operator pos:start="183:38" pos:end="183:39">-&gt;</operator><name pos:start="183:40" pos:end="183:50">guest_close</name></name></expr>)</condition> <block pos:start="183:53" pos:end="189:9">{<block_content pos:start="187:13" pos:end="187:42">

            <comment type="block" pos:start="185:13" pos:end="185:76">/* Send the guest closed notification if an app is interested */</comment>

            <expr_stmt pos:start="187:13" pos:end="187:42"><expr pos:start="187:13" pos:end="187:41"><call pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:35"><name pos:start="187:13" pos:end="187:16">port</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:22">info</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:35">guest_close</name></name><argument_list pos:start="187:36" pos:end="187:41">(<argument pos:start="187:37" pos:end="187:40"><expr pos:start="187:37" pos:end="187:40"><name pos:start="187:37" pos:end="187:40">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
