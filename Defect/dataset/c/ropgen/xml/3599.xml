<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3599.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mxg_update_cache</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:71"><decl pos:start="1:49" pos:end="1:71"><type pos:start="1:49" pos:end="1:71"><name pos:start="1:49" pos:end="1:56">unsigned</name> <name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:71">cache_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXGContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxg</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:28">current_pos</name> <init pos:start="7:30" pos:end="7:60">= <expr pos:start="7:32" pos:end="7:60"><name pos:start="7:32" pos:end="7:46"><name pos:start="7:32" pos:end="7:34">mxg</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:46">buffer_ptr</name></name> <operator pos:start="7:48" pos:end="7:48">-</operator> <name pos:start="7:50" pos:end="7:60"><name pos:start="7:50" pos:end="7:52">mxg</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:60">buffer</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:24">soi_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:36">/* reallocate internal buffer */</comment>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:19">current_pos</name> <operator pos:start="17:21" pos:end="17:21">&gt;</operator> <name pos:start="17:23" pos:end="17:33">current_pos</name> <operator pos:start="17:35" pos:end="17:35">+</operator> <name pos:start="17:37" pos:end="17:46">cache_size</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:11">soi_pos</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:26"><name pos:start="21:15" pos:end="21:17">mxg</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">soi_ptr</name></name> <operator pos:start="21:28" pos:end="21:28">-</operator> <name pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:32">mxg</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="27:64"><expr pos:start="23:5" pos:end="27:63"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:7">mxg</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:15">buffer</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="27:63"><name pos:start="23:19" pos:end="23:33">av_fast_realloc</name><argument_list pos:start="23:34" pos:end="27:63">(<argument pos:start="23:35" pos:end="23:45"><expr pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:37">mxg</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:45">buffer</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:64"><expr pos:start="23:48" pos:end="23:64"><operator pos:start="23:48" pos:end="23:48">&amp;</operator><name pos:start="23:49" pos:end="23:64"><name pos:start="23:49" pos:end="23:51">mxg</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:64">buffer_size</name></name></expr></argument>,

                                  <argument pos:start="25:35" pos:end="27:62"><expr pos:start="25:35" pos:end="27:62"><name pos:start="25:35" pos:end="25:45">current_pos</name> <operator pos:start="25:47" pos:end="25:47">+</operator> <name pos:start="25:49" pos:end="25:58">cache_size</name> <operator pos:start="25:60" pos:end="25:60">+</operator>

                                  <name pos:start="27:35" pos:end="27:62">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:12">mxg</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:20">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:7">mxg</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:19">buffer_ptr</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:33"><name pos:start="33:23" pos:end="33:25">mxg</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:33">buffer</name></name> <operator pos:start="33:35" pos:end="33:35">+</operator> <name pos:start="33:37" pos:end="33:47">current_pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="35:59"><if pos:start="35:5" pos:end="35:59">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:11">mxg</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:20">soi_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="35:23" pos:end="35:59"><block_content pos:start="35:23" pos:end="35:59"> <expr_stmt pos:start="35:23" pos:end="35:59"><expr pos:start="35:23" pos:end="35:58"><name pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:25">mxg</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:34">soi_ptr</name></name> <operator pos:start="35:36" pos:end="35:36">=</operator> <name pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:40">mxg</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:48">buffer</name></name> <operator pos:start="35:50" pos:end="35:50">+</operator> <name pos:start="35:52" pos:end="35:58">soi_pos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:18">/* get data */</comment>

    <expr_stmt pos:start="41:5" pos:end="43:51"><expr pos:start="41:5" pos:end="43:50"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="43:50"><name pos:start="41:11" pos:end="41:19">avio_read</name><argument_list pos:start="41:20" pos:end="43:50">(<argument pos:start="41:21" pos:end="41:25"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:25">pb</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:60"><expr pos:start="41:28" pos:end="41:60"><name pos:start="41:28" pos:end="41:42"><name pos:start="41:28" pos:end="41:30">mxg</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:42">buffer_ptr</name></name> <operator pos:start="41:44" pos:end="41:44">+</operator> <name pos:start="41:46" pos:end="41:60"><name pos:start="41:46" pos:end="41:48">mxg</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:60">cache_size</name></name></expr></argument>,

                     <argument pos:start="43:22" pos:end="43:49"><expr pos:start="43:22" pos:end="43:49"><name pos:start="43:22" pos:end="43:31">cache_size</name> <operator pos:start="43:33" pos:end="43:33">-</operator> <name pos:start="43:35" pos:end="43:49"><name pos:start="43:35" pos:end="43:37">mxg</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:49">cache_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:19"><if pos:start="45:5" pos:end="47:19">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:19"><block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:7">mxg</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:19">cache_size</name></name> <operator pos:start="51:21" pos:end="51:22">+=</operator> <name pos:start="51:24" pos:end="51:26">ret</name></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
