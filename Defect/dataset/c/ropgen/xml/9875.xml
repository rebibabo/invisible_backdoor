<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9875.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">report_unavailable_features</name><parameter_list pos:start="1:40" pos:end="1:69">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:51">FeatureWord</name></type> <name pos:start="1:53" pos:end="1:53">w</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">uint32_t</name></type> <name pos:start="1:65" pos:end="1:68">mask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">FeatureWordInfo</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">f</name> <init pos:start="5:24" pos:end="5:46">= <expr pos:start="5:26" pos:end="5:46"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:46"><name pos:start="5:27" pos:end="5:43">feature_word_info</name><index pos:start="5:44" pos:end="5:46">[<expr pos:start="5:45" pos:end="5:45"><name pos:start="5:45" pos:end="5:45">w</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="33:5">for <control pos:start="11:9" pos:end="11:28">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:23"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <literal type="number" pos:start="11:21" pos:end="11:22">32</literal></expr>;</condition> <incr pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><operator pos:start="11:25" pos:end="11:26">++</operator><name pos:start="11:27" pos:end="11:27">i</name></expr></incr>)</control> <block pos:start="11:30" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="31:9">if <condition pos:start="13:12" pos:end="13:26">(<expr pos:start="13:13" pos:end="13:25"><literal type="number" pos:start="13:13" pos:end="13:13">1</literal> <operator pos:start="13:15" pos:end="13:16">&lt;&lt;</operator> <name pos:start="13:18" pos:end="13:18">i</name> <operator pos:start="13:20" pos:end="13:20">&amp;</operator> <name pos:start="13:22" pos:end="13:25">mask</name></expr>)</condition> <block pos:start="13:28" pos:end="31:9">{<block_content pos:start="15:13" pos:end="29:61">

            <decl_stmt pos:start="15:13" pos:end="15:65"><decl pos:start="15:13" pos:end="15:64"><type pos:start="15:13" pos:end="15:24"><specifier pos:start="15:13" pos:end="15:17">const</specifier> <name pos:start="15:19" pos:end="15:22">char</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:27">reg</name> <init pos:start="15:29" pos:end="15:64">= <expr pos:start="15:31" pos:end="15:64"><call pos:start="15:31" pos:end="15:64"><name pos:start="15:31" pos:end="15:50">get_register_name_32</name><argument_list pos:start="15:51" pos:end="15:64">(<argument pos:start="15:52" pos:end="15:63"><expr pos:start="15:52" pos:end="15:63"><name pos:start="15:52" pos:end="15:63"><name pos:start="15:52" pos:end="15:52">f</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:63">cpuid_reg</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:24"><expr pos:start="17:13" pos:end="17:23"><call pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:18">assert</name><argument_list pos:start="17:19" pos:end="17:23">(<argument pos:start="17:20" pos:end="17:22"><expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="29:61"><expr pos:start="19:13" pos:end="29:60"><call pos:start="19:13" pos:end="29:60"><name pos:start="19:13" pos:end="19:19">fprintf</name><argument_list pos:start="19:20" pos:end="29:60">(<argument pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:26">stderr</name></expr></argument>, <argument pos:start="19:29" pos:end="21:47"><expr pos:start="19:29" pos:end="21:47"><literal type="string" pos:start="19:29" pos:end="19:77">"warning: %s doesn't support requested feature: "</literal>

                <literal type="string" pos:start="21:17" pos:end="21:47">"CPUID.%02XH:%s%s%s [bit %d]\n"</literal></expr></argument>,

                <argument pos:start="23:17" pos:end="23:46"><expr pos:start="23:17" pos:end="23:46"><ternary pos:start="23:17" pos:end="23:46"><condition pos:start="23:17" pos:end="23:31"><expr pos:start="23:17" pos:end="23:29"><call pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:27">kvm_enabled</name><argument_list pos:start="23:28" pos:end="23:29">()</argument_list></call></expr> ?</condition><then pos:start="23:33" pos:end="23:38"> <expr pos:start="23:33" pos:end="23:38"><literal type="string" pos:start="23:33" pos:end="23:38">"host"</literal></expr> </then><else pos:start="23:40" pos:end="23:46">: <expr pos:start="23:42" pos:end="23:46"><literal type="string" pos:start="23:42" pos:end="23:46">"TCG"</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="25:17" pos:end="25:28"><expr pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:17">f</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:28">cpuid_eax</name></name></expr></argument>, <argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:33">reg</name></expr></argument>,

                <argument pos:start="27:17" pos:end="27:43"><expr pos:start="27:17" pos:end="27:43"><ternary pos:start="27:17" pos:end="27:43"><condition pos:start="27:17" pos:end="27:34"><expr pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:17">f</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:29">feat_names</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">i</name></expr>]</index></name></expr> ?</condition><then pos:start="27:36" pos:end="27:38"> <expr pos:start="27:36" pos:end="27:38"><literal type="string" pos:start="27:36" pos:end="27:38">"."</literal></expr> </then><else pos:start="27:40" pos:end="27:43">: <expr pos:start="27:42" pos:end="27:43"><literal type="string" pos:start="27:42" pos:end="27:43">""</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="29:17" pos:end="29:56"><expr pos:start="29:17" pos:end="29:56"><ternary pos:start="29:17" pos:end="29:56"><condition pos:start="29:17" pos:end="29:34"><expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:17">f</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:29">feat_names</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">i</name></expr>]</index></name></expr> ?</condition><then pos:start="29:36" pos:end="29:51"> <expr pos:start="29:36" pos:end="29:51"><name pos:start="29:36" pos:end="29:51"><name pos:start="29:36" pos:end="29:36">f</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:48">feat_names</name><index pos:start="29:49" pos:end="29:51">[<expr pos:start="29:50" pos:end="29:50"><name pos:start="29:50" pos:end="29:50">i</name></expr>]</index></name></expr> </then><else pos:start="29:53" pos:end="29:56">: <expr pos:start="29:55" pos:end="29:56"><literal type="string" pos:start="29:55" pos:end="29:56">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="29:59" pos:end="29:59"><expr pos:start="29:59" pos:end="29:59"><name pos:start="29:59" pos:end="29:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
