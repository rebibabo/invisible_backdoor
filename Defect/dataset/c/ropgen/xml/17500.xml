<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17500.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">PCIDevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:30">pci_nic_init_nofail</name><parameter_list pos:start="1:31" pos:end="5:59">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:38">NICInfo</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">nd</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:50">PCIBus</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">rootbus</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:56"><decl pos:start="3:32" pos:end="3:56"><type pos:start="3:32" pos:end="3:56"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:56">default_model</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:58"><decl pos:start="5:32" pos:end="5:58"><type pos:start="5:32" pos:end="5:58"><specifier pos:start="5:32" pos:end="5:36">const</specifier> <name pos:start="5:38" pos:end="5:41">char</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:58">default_devaddr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:15">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">PCIDevice</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:18">res</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:16"><if pos:start="15:5" pos:end="17:16">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:28">qemu_show_nic_models</name><argument_list pos:start="15:29" pos:end="15:55">(<argument pos:start="15:30" pos:end="15:38"><expr pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:31">nd</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:38">model</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:54"><expr pos:start="15:41" pos:end="15:54"><name pos:start="15:41" pos:end="15:54">pci_nic_models</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:16"><block_content pos:start="17:9" pos:end="17:16">

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><call pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">exit</name><argument_list pos:start="17:13" pos:end="17:15">(<argument pos:start="17:14" pos:end="17:14"><expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:74"><expr pos:start="21:5" pos:end="21:73"><name pos:start="21:5" pos:end="21:7">res</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:73"><name pos:start="21:11" pos:end="21:22">pci_nic_init</name><argument_list pos:start="21:23" pos:end="21:73">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">nd</name></expr></argument>, <argument pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:34">rootbus</name></expr></argument>, <argument pos:start="21:37" pos:end="21:49"><expr pos:start="21:37" pos:end="21:49"><name pos:start="21:37" pos:end="21:49">default_model</name></expr></argument>, <argument pos:start="21:52" pos:end="21:66"><expr pos:start="21:52" pos:end="21:66"><name pos:start="21:52" pos:end="21:66">default_devaddr</name></expr></argument>, <argument pos:start="21:69" pos:end="21:72"><expr pos:start="21:69" pos:end="21:72"><operator pos:start="21:69" pos:end="21:69">&amp;</operator><name pos:start="21:70" pos:end="21:72">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">res</name></expr>)</condition> <block pos:start="23:15" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:16">

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:24">error_report_err</name><argument_list pos:start="25:25" pos:end="25:29">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">exit</name><argument_list pos:start="27:13" pos:end="27:15">(<argument pos:start="27:14" pos:end="27:14"><expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
