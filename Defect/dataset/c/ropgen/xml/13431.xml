<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13431.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">vc2_encode_frame</name><parameter_list pos:start="1:36" pos:end="3:80">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:67">AVPacket</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:74">avpkt</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:51">AVFrame</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:58">frame</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:79"><decl pos:start="3:61" pos:end="3:79"><type pos:start="3:61" pos:end="3:79"><name pos:start="3:61" pos:end="3:63">int</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:79">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:23">max_frame_bytes</name></decl>, <decl pos:start="9:26" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:33">sig_size</name> <init pos:start="9:35" pos:end="9:39">= <expr pos:start="9:37" pos:end="9:39"><literal type="number" pos:start="9:37" pos:end="9:39">256</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">VC2EncContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:39">= <expr pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:28">avctx</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:44"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name></type> <name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:23">aux_data</name><index pos:start="13:24" pos:end="13:25">[]</index></name> <init pos:start="13:27" pos:end="13:44">= <expr pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:44">LIBAVCODEC_IDENT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:27">aux_data_size</name> <init pos:start="15:29" pos:end="15:46">= <expr pos:start="15:31" pos:end="15:46"><sizeof pos:start="15:31" pos:end="15:46">sizeof<argument_list pos:start="15:37" pos:end="15:46">(<argument pos:start="15:38" pos:end="15:45"><expr pos:start="15:38" pos:end="15:45"><name pos:start="15:38" pos:end="15:45">aux_data</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:25">header_size</name> <init pos:start="17:27" pos:end="17:47">= <expr pos:start="17:29" pos:end="17:47"><literal type="number" pos:start="17:29" pos:end="17:33">100</literal> <operator pos:start="17:33" pos:end="17:33">+</operator> <name pos:start="17:35" pos:end="17:47">aux_data_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:59"><decl pos:start="19:5" pos:end="19:58"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:21">r_bitrate</name> <init pos:start="19:23" pos:end="19:58">= <expr pos:start="19:25" pos:end="19:58"><name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:29">avctx</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:39">bit_rate</name></name> <operator pos:start="19:41" pos:end="19:42">&gt;&gt;</operator> <operator pos:start="19:44" pos:end="19:44">(</operator><name pos:start="19:45" pos:end="19:57"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:57">interlaced</name></name><operator pos:start="19:58" pos:end="19:58">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">avctx</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">size_scaler</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:19">prefix_bytes</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:22">last_parse_code</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:24">next_parse_offset</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:22">/* Rate control */</comment>

    <expr_stmt pos:start="37:5" pos:end="39:79"><expr pos:start="37:5" pos:end="39:78"><name pos:start="37:5" pos:end="37:19">max_frame_bytes</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><call pos:start="37:24" pos:end="39:58"><name pos:start="37:24" pos:end="37:33">av_rescale</name><argument_list pos:start="37:34" pos:end="39:58">(<argument pos:start="37:35" pos:end="37:43"><expr pos:start="37:35" pos:end="37:43"><name pos:start="37:35" pos:end="37:43">r_bitrate</name></expr></argument>, <argument pos:start="37:46" pos:end="37:68"><expr pos:start="37:46" pos:end="37:68"><name pos:start="37:46" pos:end="37:68"><name pos:start="37:46" pos:end="37:46">s</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:53">avctx</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:64">time_base</name><operator pos:start="37:65" pos:end="37:65">.</operator><name pos:start="37:66" pos:end="37:68">num</name></name></expr></argument>,

                                  <argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:42">avctx</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:53">time_base</name><operator pos:start="39:54" pos:end="39:54">.</operator><name pos:start="39:55" pos:end="39:57">den</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:60" pos:end="39:61">&gt;&gt;</operator> <literal type="number" pos:start="39:63" pos:end="39:63">3</literal><operator pos:start="39:64" pos:end="39:64">)</operator> <operator pos:start="39:66" pos:end="39:66">-</operator> <name pos:start="39:68" pos:end="39:78">header_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:41">/* Find an appropriate size scaler */</comment>

    <while pos:start="45:5" pos:end="57:5">while <condition pos:start="45:11" pos:end="45:26">(<expr pos:start="45:12" pos:end="45:25"><name pos:start="45:12" pos:end="45:19">sig_size</name> <operator pos:start="45:21" pos:end="45:21">&gt;</operator> <literal type="number" pos:start="45:23" pos:end="45:25">255</literal></expr>)</condition> <block pos:start="45:28" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:29">

        <expr_stmt pos:start="47:9" pos:end="49:73"><expr pos:start="47:9" pos:end="49:72"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:26">slice_max_bytes</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <call pos:start="47:30" pos:end="49:72"><name pos:start="47:30" pos:end="47:36">FFALIGN</name><argument_list pos:start="47:37" pos:end="49:72">(<argument pos:start="47:38" pos:end="49:55"><expr pos:start="47:38" pos:end="49:55"><call pos:start="47:38" pos:end="49:55"><name pos:start="47:38" pos:end="47:47">av_rescale</name><argument_list pos:start="47:48" pos:end="49:55">(<argument pos:start="47:49" pos:end="47:63"><expr pos:start="47:49" pos:end="47:63"><name pos:start="47:49" pos:end="47:63">max_frame_bytes</name></expr></argument>, <argument pos:start="47:66" pos:end="47:66"><expr pos:start="47:66" pos:end="47:66"><literal type="number" pos:start="47:66" pos:end="47:66">1</literal></expr></argument>,

                                     <argument pos:start="49:38" pos:end="49:54"><expr pos:start="49:38" pos:end="49:54"><name pos:start="49:38" pos:end="49:45"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:45">num_x</name></name><operator pos:start="49:46" pos:end="49:46">*</operator><name pos:start="49:47" pos:end="49:54"><name pos:start="49:47" pos:end="49:47">s</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:54">num_y</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:58" pos:end="49:71"><expr pos:start="49:58" pos:end="49:71"><name pos:start="49:58" pos:end="49:71"><name pos:start="49:58" pos:end="49:58">s</name><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:71">size_scaler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:26">slice_max_bytes</name></name> <operator pos:start="51:28" pos:end="51:29">+=</operator> <literal type="number" pos:start="51:31" pos:end="51:33">4</literal> <operator pos:start="51:33" pos:end="51:33">+</operator> <name pos:start="51:35" pos:end="51:49"><name pos:start="51:35" pos:end="51:35">s</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:49">prefix_bytes</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:16">sig_size</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:37">slice_max_bytes</name></name><operator pos:start="53:38" pos:end="53:38">/</operator><name pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:39">s</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:52">size_scaler</name></name></expr>;</expr_stmt> <comment type="block" pos:start="53:55" pos:end="53:80">/* Signalled slize size */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">size_scaler</name></name> <operator pos:start="55:24" pos:end="55:26">&lt;&lt;=</operator> <literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="61:5" pos:end="61:87"><expr pos:start="61:5" pos:end="61:86"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:22">slice_min_bytes</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:43"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:43">slice_max_bytes</name></name> <operator pos:start="61:45" pos:end="61:45">-</operator> <name pos:start="61:47" pos:end="61:64"><name pos:start="61:47" pos:end="61:47">s</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:64">slice_max_bytes</name></name><operator pos:start="61:65" pos:end="61:65">*</operator><operator pos:start="61:66" pos:end="61:66">(</operator><name pos:start="61:67" pos:end="61:78"><name pos:start="61:67" pos:end="61:67">s</name><operator pos:start="61:68" pos:end="61:69">-&gt;</operator><name pos:start="61:70" pos:end="61:78">tolerance</name></name><operator pos:start="61:79" pos:end="61:79">/</operator><literal type="number" pos:start="61:80" pos:end="61:85">100.0f</literal><operator pos:start="61:86" pos:end="61:86">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:63"><expr pos:start="65:5" pos:end="65:62"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:62"><name pos:start="65:11" pos:end="65:26">ff_alloc_packet2</name><argument_list pos:start="65:27" pos:end="65:62">(<argument pos:start="65:28" pos:end="65:32"><expr pos:start="65:28" pos:end="65:32"><name pos:start="65:28" pos:end="65:32">avctx</name></expr></argument>, <argument pos:start="65:35" pos:end="65:39"><expr pos:start="65:35" pos:end="65:39"><name pos:start="65:35" pos:end="65:39">avpkt</name></expr></argument>, <argument pos:start="65:42" pos:end="65:58"><expr pos:start="65:42" pos:end="65:58"><name pos:start="65:42" pos:end="65:56">max_frame_bytes</name><operator pos:start="65:57" pos:end="65:57">*</operator><literal type="number" pos:start="65:58" pos:end="65:58">3</literal></expr></argument>, <argument pos:start="65:61" pos:end="65:61"><expr pos:start="65:61" pos:end="65:61"><literal type="number" pos:start="65:61" pos:end="65:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition> <block pos:start="67:18" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:19">

        <expr_stmt pos:start="69:9" pos:end="69:70"><expr pos:start="69:9" pos:end="69:69"><call pos:start="69:9" pos:end="69:69"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:69">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:68"><expr pos:start="69:37" pos:end="69:68"><literal type="string" pos:start="69:37" pos:end="69:68">"Error getting output packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="77:5">else <block pos:start="73:12" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:56">

        <expr_stmt pos:start="75:9" pos:end="75:56"><expr pos:start="75:9" pos:end="75:55"><call pos:start="75:9" pos:end="75:55"><name pos:start="75:9" pos:end="75:21">init_put_bits</name><argument_list pos:start="75:22" pos:end="75:55">(<argument pos:start="75:23" pos:end="75:28"><expr pos:start="75:23" pos:end="75:28"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:28"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:28">pb</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:41"><expr pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:35">avpkt</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:41">data</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:54"><expr pos:start="75:44" pos:end="75:54"><name pos:start="75:44" pos:end="75:54"><name pos:start="75:44" pos:end="75:48">avpkt</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:52"><expr pos:start="81:5" pos:end="81:51"><call pos:start="81:5" pos:end="81:51"><name pos:start="81:5" pos:end="81:16">encode_frame</name><argument_list pos:start="81:17" pos:end="81:51">(<argument pos:start="81:18" pos:end="81:18"><expr pos:start="81:18" pos:end="81:18"><name pos:start="81:18" pos:end="81:18">s</name></expr></argument>, <argument pos:start="81:21" pos:end="81:25"><expr pos:start="81:21" pos:end="81:25"><name pos:start="81:21" pos:end="81:25">frame</name></expr></argument>, <argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:35">aux_data</name></expr></argument>, <argument pos:start="81:38" pos:end="81:50"><expr pos:start="81:38" pos:end="81:50"><name pos:start="81:38" pos:end="81:50"><name pos:start="81:38" pos:end="81:38">s</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:50">interlaced</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:40"><if pos:start="83:5" pos:end="85:40">if <condition pos:start="83:8" pos:end="83:22">(<expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">interlaced</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:40"><block_content pos:start="85:9" pos:end="85:40">

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><call pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:20">encode_frame</name><argument_list pos:start="85:21" pos:end="85:39">(<argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">s</name></expr></argument>, <argument pos:start="85:25" pos:end="85:29"><expr pos:start="85:25" pos:end="85:29"><name pos:start="85:25" pos:end="85:29">frame</name></expr></argument>, <argument pos:start="85:32" pos:end="85:35"><expr pos:start="85:32" pos:end="85:35"><name pos:start="85:32" pos:end="85:35">NULL</name></expr></argument>, <argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><literal type="number" pos:start="85:38" pos:end="85:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><call pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:18">flush_put_bits</name><argument_list pos:start="89:19" pos:end="89:26">(<argument pos:start="89:20" pos:end="89:25"><expr pos:start="89:20" pos:end="89:25"><operator pos:start="89:20" pos:end="89:20">&amp;</operator><name pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:46"><expr pos:start="91:5" pos:end="91:45"><name pos:start="91:5" pos:end="91:15"><name pos:start="91:5" pos:end="91:9">avpkt</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">size</name></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:40"><name pos:start="91:19" pos:end="91:32">put_bits_count</name><argument_list pos:start="91:33" pos:end="91:40">(<argument pos:start="91:34" pos:end="91:39"><expr pos:start="91:34" pos:end="91:39"><operator pos:start="91:34" pos:end="91:34">&amp;</operator><name pos:start="91:35" pos:end="91:39"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:42" pos:end="91:43">&gt;&gt;</operator> <literal type="number" pos:start="91:45" pos:end="91:45">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><operator pos:start="95:5" pos:end="95:5">*</operator><name pos:start="95:6" pos:end="95:19">got_packet_ptr</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <literal type="number" pos:start="95:23" pos:end="95:23">1</literal></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
