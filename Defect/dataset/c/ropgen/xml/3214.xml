<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3214.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">sdp_parse_line</name><parameter_list pos:start="1:27" pos:end="3:55">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:60">SDPParseState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">s1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:37"><decl pos:start="3:28" pos:end="3:37"><type pos:start="3:28" pos:end="3:37"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:37">letter</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">buf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="279:1">{<block_content pos:start="7:5" pos:end="277:5">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">buf1</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">64</literal></expr>]</index></name></decl>, <decl pos:start="9:20" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:26">st_type</name><index pos:start="9:27" pos:end="9:30">[<expr pos:start="9:28" pos:end="9:29"><literal type="number" pos:start="9:28" pos:end="9:29">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">codec_type</name></decl>, <decl pos:start="13:21" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:32">payload_type</name></decl>, <decl pos:start="13:35" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:35" pos:end="13:35">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">RTSPStream</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:18">in_addr</name></name></type> <name pos:start="19:20" pos:end="19:25">sdp_ip</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="26:0"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ttl</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="25:1" pos:end="25:12">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:41"><call pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:10">printf</name><argument_list pos:start="27:11" pos:end="27:41">(<argument pos:start="27:12" pos:end="27:27"><expr pos:start="27:12" pos:end="27:27"><literal type="string" pos:start="27:12" pos:end="27:27">"sdp: %c='%s'\n"</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:35"><expr pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:35">letter</name></expr></argument>, <argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="33:5" pos:end="33:12"><expr pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">p</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <name pos:start="33:9" pos:end="33:11">buf</name></expr>;</expr_stmt>

    <switch pos:start="35:5" pos:end="277:5">switch<condition pos:start="35:11" pos:end="35:18">(<expr pos:start="35:12" pos:end="35:17"><name pos:start="35:12" pos:end="35:17">letter</name></expr>)</condition> <block pos:start="35:20" pos:end="277:5">{<block_content pos:start="37:5" pos:end="275:14">

    <case pos:start="37:5" pos:end="37:13">case <expr pos:start="37:10" pos:end="37:12"><literal type="char" pos:start="37:10" pos:end="37:12">'c'</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><call pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:16">get_word</name><argument_list pos:start="39:17" pos:end="39:40">(<argument pos:start="39:18" pos:end="39:21"><expr pos:start="39:18" pos:end="39:21"><name pos:start="39:18" pos:end="39:21">buf1</name></expr></argument>, <argument pos:start="39:24" pos:end="39:35"><expr pos:start="39:24" pos:end="39:35"><sizeof pos:start="39:24" pos:end="39:35">sizeof<argument_list pos:start="39:30" pos:end="39:35">(<argument pos:start="39:31" pos:end="39:34"><expr pos:start="39:31" pos:end="39:34"><name pos:start="39:31" pos:end="39:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:38" pos:end="39:39"><expr pos:start="39:38" pos:end="39:39"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:19"><if pos:start="41:9" pos:end="43:19">if <condition pos:start="41:12" pos:end="41:36">(<expr pos:start="41:13" pos:end="41:35"><call pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:18">strcmp</name><argument_list pos:start="41:19" pos:end="41:30">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">buf1</name></expr></argument>, <argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><literal type="string" pos:start="41:26" pos:end="41:29">"IN"</literal></expr></argument>)</argument_list></call> <operator pos:start="41:32" pos:end="41:33">!=</operator> <literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:19"><block_content pos:start="43:13" pos:end="43:19">

            <return pos:start="43:13" pos:end="43:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:16">get_word</name><argument_list pos:start="45:17" pos:end="45:40">(<argument pos:start="45:18" pos:end="45:21"><expr pos:start="45:18" pos:end="45:21"><name pos:start="45:18" pos:end="45:21">buf1</name></expr></argument>, <argument pos:start="45:24" pos:end="45:35"><expr pos:start="45:24" pos:end="45:35"><sizeof pos:start="45:24" pos:end="45:35">sizeof<argument_list pos:start="45:30" pos:end="45:35">(<argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><operator pos:start="45:38" pos:end="45:38">&amp;</operator><name pos:start="45:39" pos:end="45:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:19"><if pos:start="47:9" pos:end="49:19">if <condition pos:start="47:12" pos:end="47:37">(<expr pos:start="47:13" pos:end="47:36"><call pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:18">strcmp</name><argument_list pos:start="47:19" pos:end="47:31">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">buf1</name></expr></argument>, <argument pos:start="47:26" pos:end="47:30"><expr pos:start="47:26" pos:end="47:30"><literal type="string" pos:start="47:26" pos:end="47:30">"IP4"</literal></expr></argument>)</argument_list></call> <operator pos:start="47:33" pos:end="47:34">!=</operator> <literal type="number" pos:start="47:36" pos:end="47:36">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:19"><block_content pos:start="49:13" pos:end="49:19">

            <return pos:start="49:13" pos:end="49:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><call pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:20">get_word_sep</name><argument_list pos:start="51:21" pos:end="51:49">(<argument pos:start="51:22" pos:end="51:25"><expr pos:start="51:22" pos:end="51:25"><name pos:start="51:22" pos:end="51:25">buf1</name></expr></argument>, <argument pos:start="51:28" pos:end="51:39"><expr pos:start="51:28" pos:end="51:39"><sizeof pos:start="51:28" pos:end="51:39">sizeof<argument_list pos:start="51:34" pos:end="51:39">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><literal type="string" pos:start="51:42" pos:end="51:44">"/"</literal></expr></argument>, <argument pos:start="51:47" pos:end="51:48"><expr pos:start="51:47" pos:end="51:48"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:48">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:19"><if pos:start="53:9" pos:end="55:19">if <condition pos:start="53:12" pos:end="53:42">(<expr pos:start="53:13" pos:end="53:41"><call pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:21">inet_aton</name><argument_list pos:start="53:22" pos:end="53:36">(<argument pos:start="53:23" pos:end="53:26"><expr pos:start="53:23" pos:end="53:26"><name pos:start="53:23" pos:end="53:26">buf1</name></expr></argument>, <argument pos:start="53:29" pos:end="53:35"><expr pos:start="53:29" pos:end="53:35"><operator pos:start="53:29" pos:end="53:29">&amp;</operator><name pos:start="53:30" pos:end="53:35">sdp_ip</name></expr></argument>)</argument_list></call> <operator pos:start="53:38" pos:end="53:39">==</operator> <literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:19"><block_content pos:start="55:13" pos:end="55:19">

            <return pos:start="55:13" pos:end="55:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:17"><expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:11">ttl</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:16">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:14">p</name> <operator pos:start="59:16" pos:end="59:17">==</operator> <literal type="char" pos:start="59:19" pos:end="59:21">'/'</literal></expr>)</condition> <block pos:start="59:24" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:29">

            <expr_stmt pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:13">p</name><operator pos:start="61:14" pos:end="61:15">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:54"><expr pos:start="63:13" pos:end="63:53"><call pos:start="63:13" pos:end="63:53"><name pos:start="63:13" pos:end="63:24">get_word_sep</name><argument_list pos:start="63:25" pos:end="63:53">(<argument pos:start="63:26" pos:end="63:29"><expr pos:start="63:26" pos:end="63:29"><name pos:start="63:26" pos:end="63:29">buf1</name></expr></argument>, <argument pos:start="63:32" pos:end="63:43"><expr pos:start="63:32" pos:end="63:43"><sizeof pos:start="63:32" pos:end="63:43">sizeof<argument_list pos:start="63:38" pos:end="63:43">(<argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><name pos:start="63:39" pos:end="63:42">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:46" pos:end="63:48"><expr pos:start="63:46" pos:end="63:48"><literal type="string" pos:start="63:46" pos:end="63:48">"/"</literal></expr></argument>, <argument pos:start="63:51" pos:end="63:52"><expr pos:start="63:51" pos:end="63:52"><operator pos:start="63:51" pos:end="63:51">&amp;</operator><name pos:start="63:52" pos:end="63:52">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:29"><expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:15">ttl</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:28"><name pos:start="65:19" pos:end="65:22">atoi</name><argument_list pos:start="65:23" pos:end="65:28">(<argument pos:start="65:24" pos:end="65:27"><expr pos:start="65:24" pos:end="65:27"><name pos:start="65:24" pos:end="65:27">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="85:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:31">(<expr pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:25">nb_streams</name></name> <operator pos:start="69:27" pos:end="69:28">==</operator> <literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>)</condition> <block pos:start="69:33" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:34">

            <expr_stmt pos:start="71:13" pos:end="71:36"><expr pos:start="71:13" pos:end="71:35"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:14">s1</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:26">default_ip</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:35">sdp_ip</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:14">s1</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:27">default_ttl</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:33">ttl</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="85:9">else <block pos:start="75:16" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:35">

            <expr_stmt pos:start="77:13" pos:end="77:47"><expr pos:start="77:13" pos:end="77:46"><name pos:start="77:13" pos:end="77:14">st</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:46"><name pos:start="77:18" pos:end="77:18">s</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:27">streams</name><index pos:start="77:28" pos:end="77:46">[<expr pos:start="77:29" pos:end="77:45"><name pos:start="77:29" pos:end="77:41"><name pos:start="77:29" pos:end="77:29">s</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:41">nb_streams</name></name> <operator pos:start="77:43" pos:end="77:43">-</operator> <literal type="number" pos:start="77:45" pos:end="77:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:36"><expr pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:19">rtsp_st</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:35"><name pos:start="79:23" pos:end="79:24">st</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:35">priv_data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:37"><expr pos:start="81:13" pos:end="81:36"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:19">rtsp_st</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:27">sdp_ip</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <name pos:start="81:31" pos:end="81:36">sdp_ip</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:35"><expr pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:19">rtsp_st</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">sdp_ttl</name></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:34">ttl</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:13">case <expr pos:start="89:10" pos:end="89:12"><literal type="char" pos:start="89:10" pos:end="89:12">'s'</literal></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><call pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:15">pstrcpy</name><argument_list pos:start="91:16" pos:end="91:46">(<argument pos:start="91:17" pos:end="91:24"><expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">title</name></name></expr></argument>, <argument pos:start="91:27" pos:end="91:42"><expr pos:start="91:27" pos:end="91:42"><sizeof pos:start="91:27" pos:end="91:42">sizeof<argument_list pos:start="91:33" pos:end="91:42">(<argument pos:start="91:34" pos:end="91:41"><expr pos:start="91:34" pos:end="91:41"><name pos:start="91:34" pos:end="91:41"><name pos:start="91:34" pos:end="91:34">s</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:41">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="91:45" pos:end="91:45"><expr pos:start="91:45" pos:end="91:45"><name pos:start="91:45" pos:end="91:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:13">case <expr pos:start="95:10" pos:end="95:12"><literal type="char" pos:start="95:10" pos:end="95:12">'i'</literal></expr>:</case>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:31">(<expr pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:25">nb_streams</name></name> <operator pos:start="97:27" pos:end="97:28">==</operator> <literal type="number" pos:start="97:30" pos:end="97:30">0</literal></expr>)</condition> <block pos:start="97:33" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:18">

            <expr_stmt pos:start="99:13" pos:end="99:55"><expr pos:start="99:13" pos:end="99:54"><call pos:start="99:13" pos:end="99:54"><name pos:start="99:13" pos:end="99:19">pstrcpy</name><argument_list pos:start="99:20" pos:end="99:54">(<argument pos:start="99:21" pos:end="99:30"><expr pos:start="99:21" pos:end="99:30"><name pos:start="99:21" pos:end="99:30"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:30">comment</name></name></expr></argument>, <argument pos:start="99:33" pos:end="99:50"><expr pos:start="99:33" pos:end="99:50"><sizeof pos:start="99:33" pos:end="99:50">sizeof<argument_list pos:start="99:39" pos:end="99:50">(<argument pos:start="99:40" pos:end="99:49"><expr pos:start="99:40" pos:end="99:49"><name pos:start="99:40" pos:end="99:49"><name pos:start="99:40" pos:end="99:40">s</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:49">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="99:53" pos:end="99:53"><expr pos:start="99:53" pos:end="99:53"><name pos:start="99:53" pos:end="99:53">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:13">case <expr pos:start="107:10" pos:end="107:12"><literal type="char" pos:start="107:10" pos:end="107:12">'m'</literal></expr>:</case>

        <comment type="block" pos:start="109:9" pos:end="109:24">/* new stream */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:47"><expr pos:start="111:9" pos:end="111:46"><call pos:start="111:9" pos:end="111:46"><name pos:start="111:9" pos:end="111:16">get_word</name><argument_list pos:start="111:17" pos:end="111:46">(<argument pos:start="111:18" pos:end="111:24"><expr pos:start="111:18" pos:end="111:24"><name pos:start="111:18" pos:end="111:24">st_type</name></expr></argument>, <argument pos:start="111:27" pos:end="111:41"><expr pos:start="111:27" pos:end="111:41"><sizeof pos:start="111:27" pos:end="111:41">sizeof<argument_list pos:start="111:33" pos:end="111:41">(<argument pos:start="111:34" pos:end="111:40"><expr pos:start="111:34" pos:end="111:40"><name pos:start="111:34" pos:end="111:40">st_type</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="111:44" pos:end="111:45"><expr pos:start="111:44" pos:end="111:45"><operator pos:start="111:44" pos:end="111:44">&amp;</operator><name pos:start="111:45" pos:end="111:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="125:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:38">(<expr pos:start="113:13" pos:end="113:37"><operator pos:start="113:13" pos:end="113:13">!</operator><call pos:start="113:14" pos:end="113:37"><name pos:start="113:14" pos:end="113:19">strcmp</name><argument_list pos:start="113:20" pos:end="113:37">(<argument pos:start="113:21" pos:end="113:27"><expr pos:start="113:21" pos:end="113:27"><name pos:start="113:21" pos:end="113:27">st_type</name></expr></argument>, <argument pos:start="113:30" pos:end="113:36"><expr pos:start="113:30" pos:end="113:36"><literal type="string" pos:start="113:30" pos:end="113:36">"audio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:40" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:42">

            <expr_stmt pos:start="115:13" pos:end="115:42"><expr pos:start="115:13" pos:end="115:41"><name pos:start="115:13" pos:end="115:22">codec_type</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:41">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="121:9">else if <condition pos:start="117:19" pos:end="117:45">(<expr pos:start="117:20" pos:end="117:44"><operator pos:start="117:20" pos:end="117:20">!</operator><call pos:start="117:21" pos:end="117:44"><name pos:start="117:21" pos:end="117:26">strcmp</name><argument_list pos:start="117:27" pos:end="117:44">(<argument pos:start="117:28" pos:end="117:34"><expr pos:start="117:28" pos:end="117:34"><name pos:start="117:28" pos:end="117:34">st_type</name></expr></argument>, <argument pos:start="117:37" pos:end="117:43"><expr pos:start="117:37" pos:end="117:43"><literal type="string" pos:start="117:37" pos:end="117:43">"video"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:47" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:42">

            <expr_stmt pos:start="119:13" pos:end="119:42"><expr pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:22">codec_type</name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:41">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:19">

            <return pos:start="123:13" pos:end="123:19">return;</return>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:49"><expr pos:start="127:9" pos:end="127:48"><name pos:start="127:9" pos:end="127:15">rtsp_st</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <call pos:start="127:19" pos:end="127:48"><name pos:start="127:19" pos:end="127:28">av_mallocz</name><argument_list pos:start="127:29" pos:end="127:48">(<argument pos:start="127:30" pos:end="127:47"><expr pos:start="127:30" pos:end="127:47"><sizeof pos:start="127:30" pos:end="127:47">sizeof<argument_list pos:start="127:36" pos:end="127:47">(<argument pos:start="127:37" pos:end="127:46"><expr pos:start="127:37" pos:end="127:46"><name pos:start="127:37" pos:end="127:46">RTSPStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:19"><if pos:start="129:9" pos:end="131:19">if <condition pos:start="129:12" pos:end="129:21">(<expr pos:start="129:13" pos:end="129:20"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:20">rtsp_st</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:19"><block_content pos:start="131:13" pos:end="131:19">

            <return pos:start="131:13" pos:end="131:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:35"><expr pos:start="133:9" pos:end="133:34"><name pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:15">rtsp_st</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:29">stream_index</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <operator pos:start="133:33" pos:end="133:33">-</operator><literal type="number" pos:start="133:34" pos:end="133:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:71"><expr pos:start="135:9" pos:end="135:70"><call pos:start="135:9" pos:end="135:70"><name pos:start="135:9" pos:end="135:20">dynarray_add</name><argument_list pos:start="135:21" pos:end="135:70">(<argument pos:start="135:22" pos:end="135:38"><expr pos:start="135:22" pos:end="135:38"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:38"><name pos:start="135:23" pos:end="135:24">rt</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:38">rtsp_streams</name></name></expr></argument>, <argument pos:start="135:41" pos:end="135:60"><expr pos:start="135:41" pos:end="135:60"><operator pos:start="135:41" pos:end="135:41">&amp;</operator><name pos:start="135:42" pos:end="135:60"><name pos:start="135:42" pos:end="135:43">rt</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:60">nb_rtsp_streams</name></name></expr></argument>, <argument pos:start="135:63" pos:end="135:69"><expr pos:start="135:63" pos:end="135:69"><name pos:start="135:63" pos:end="135:69">rtsp_st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:41"><expr pos:start="139:9" pos:end="139:40"><name pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:15">rtsp_st</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:23">sdp_ip</name></name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:40"><name pos:start="139:27" pos:end="139:28">s1</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:40">default_ip</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:15">rtsp_st</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:24">sdp_ttl</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:42"><name pos:start="141:28" pos:end="141:29">s1</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:42">default_ttl</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:41"><expr pos:start="145:9" pos:end="145:40"><call pos:start="145:9" pos:end="145:40"><name pos:start="145:9" pos:end="145:16">get_word</name><argument_list pos:start="145:17" pos:end="145:40">(<argument pos:start="145:18" pos:end="145:21"><expr pos:start="145:18" pos:end="145:21"><name pos:start="145:18" pos:end="145:21">buf1</name></expr></argument>, <argument pos:start="145:24" pos:end="145:35"><expr pos:start="145:24" pos:end="145:35"><sizeof pos:start="145:24" pos:end="145:35">sizeof<argument_list pos:start="145:30" pos:end="145:35">(<argument pos:start="145:31" pos:end="145:34"><expr pos:start="145:31" pos:end="145:34"><name pos:start="145:31" pos:end="145:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="145:38" pos:end="145:39"><expr pos:start="145:38" pos:end="145:39"><operator pos:start="145:38" pos:end="145:38">&amp;</operator><name pos:start="145:39" pos:end="145:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="145:43" pos:end="145:52">/* port */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:39"><expr pos:start="147:9" pos:end="147:38"><name pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:15">rtsp_st</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:25">sdp_port</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <call pos:start="147:29" pos:end="147:38"><name pos:start="147:29" pos:end="147:32">atoi</name><argument_list pos:start="147:33" pos:end="147:38">(<argument pos:start="147:34" pos:end="147:37"><expr pos:start="147:34" pos:end="147:37"><name pos:start="147:34" pos:end="147:37">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:41"><expr pos:start="151:9" pos:end="151:40"><call pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:16">get_word</name><argument_list pos:start="151:17" pos:end="151:40">(<argument pos:start="151:18" pos:end="151:21"><expr pos:start="151:18" pos:end="151:21"><name pos:start="151:18" pos:end="151:21">buf1</name></expr></argument>, <argument pos:start="151:24" pos:end="151:35"><expr pos:start="151:24" pos:end="151:35"><sizeof pos:start="151:24" pos:end="151:35">sizeof<argument_list pos:start="151:30" pos:end="151:35">(<argument pos:start="151:31" pos:end="151:34"><expr pos:start="151:31" pos:end="151:34"><name pos:start="151:31" pos:end="151:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="151:38" pos:end="151:39"><expr pos:start="151:38" pos:end="151:39"><operator pos:start="151:38" pos:end="151:38">&amp;</operator><name pos:start="151:39" pos:end="151:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="151:43" pos:end="151:66">/* protocol (ignored) */</comment>

        

        <comment type="block" pos:start="155:9" pos:end="155:41">/* XXX: handle list of formats */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:41"><expr pos:start="157:9" pos:end="157:40"><call pos:start="157:9" pos:end="157:40"><name pos:start="157:9" pos:end="157:16">get_word</name><argument_list pos:start="157:17" pos:end="157:40">(<argument pos:start="157:18" pos:end="157:21"><expr pos:start="157:18" pos:end="157:21"><name pos:start="157:18" pos:end="157:21">buf1</name></expr></argument>, <argument pos:start="157:24" pos:end="157:35"><expr pos:start="157:24" pos:end="157:35"><sizeof pos:start="157:24" pos:end="157:35">sizeof<argument_list pos:start="157:30" pos:end="157:35">(<argument pos:start="157:31" pos:end="157:34"><expr pos:start="157:31" pos:end="157:34"><name pos:start="157:31" pos:end="157:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="157:38" pos:end="157:39"><expr pos:start="157:38" pos:end="157:39"><operator pos:start="157:38" pos:end="157:38">&amp;</operator><name pos:start="157:39" pos:end="157:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="157:43" pos:end="157:59">/* format list */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:47"><expr pos:start="159:9" pos:end="159:46"><name pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:15">rtsp_st</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:33">sdp_payload_type</name></name> <operator pos:start="159:35" pos:end="159:35">=</operator> <call pos:start="159:37" pos:end="159:46"><name pos:start="159:37" pos:end="159:40">atoi</name><argument_list pos:start="159:41" pos:end="159:46">(<argument pos:start="159:42" pos:end="159:45"><expr pos:start="159:42" pos:end="159:45"><name pos:start="159:42" pos:end="159:45">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="163:9" pos:end="189:9"><if pos:start="163:9" pos:end="167:9">if <condition pos:start="163:12" pos:end="163:56">(<expr pos:start="163:13" pos:end="163:55"><name pos:start="163:13" pos:end="163:37"><name pos:start="163:13" pos:end="163:19">rtsp_st</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:37">sdp_payload_type</name></name> <operator pos:start="163:39" pos:end="163:40">==</operator> <name pos:start="163:42" pos:end="163:55">RTP_PT_MPEG2TS</name></expr>)</condition> <block pos:start="163:58" pos:end="167:9">{<block_content>

            <comment type="block" pos:start="165:13" pos:end="165:41">/* no corresponding stream */</comment>

        </block_content>}</block></if> <else pos:start="167:11" pos:end="189:9">else <block pos:start="167:16" pos:end="189:9">{<block_content pos:start="169:13" pos:end="187:13">

            <expr_stmt pos:start="169:13" pos:end="169:37"><expr pos:start="169:13" pos:end="169:36"><name pos:start="169:13" pos:end="169:14">st</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <call pos:start="169:18" pos:end="169:36"><name pos:start="169:18" pos:end="169:30">av_new_stream</name><argument_list pos:start="169:31" pos:end="169:36">(<argument pos:start="169:32" pos:end="169:32"><expr pos:start="169:32" pos:end="169:32"><name pos:start="169:32" pos:end="169:32">s</name></expr></argument>, <argument pos:start="169:35" pos:end="169:35"><expr pos:start="169:35" pos:end="169:35"><literal type="number" pos:start="169:35" pos:end="169:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:23"><if pos:start="171:13" pos:end="173:23">if <condition pos:start="171:16" pos:end="171:20">(<expr pos:start="171:17" pos:end="171:19"><operator pos:start="171:17" pos:end="171:17">!</operator><name pos:start="171:18" pos:end="171:19">st</name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:23"><block_content pos:start="173:17" pos:end="173:23">

                <return pos:start="173:17" pos:end="173:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:36"><expr pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:25"><name pos:start="175:13" pos:end="175:14">st</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:25">priv_data</name></name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:35">rtsp_st</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:46"><expr pos:start="177:13" pos:end="177:45"><name pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:19">rtsp_st</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:33">stream_index</name></name> <operator pos:start="177:35" pos:end="177:35">=</operator> <name pos:start="177:37" pos:end="177:45"><name pos:start="177:37" pos:end="177:38">st</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:45">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:46"><expr pos:start="179:13" pos:end="179:45"><name pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:14">st</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:21">codec</name><operator pos:start="179:22" pos:end="179:22">.</operator><name pos:start="179:23" pos:end="179:32">codec_type</name></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <name pos:start="179:36" pos:end="179:45">codec_type</name></expr>;</expr_stmt>

            <if_stmt pos:start="181:13" pos:end="187:13"><if pos:start="181:13" pos:end="187:13">if <condition pos:start="181:16" pos:end="181:47">(<expr pos:start="181:17" pos:end="181:46"><name pos:start="181:17" pos:end="181:41"><name pos:start="181:17" pos:end="181:23">rtsp_st</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:41">sdp_payload_type</name></name> <operator pos:start="181:43" pos:end="181:43">&lt;</operator> <literal type="number" pos:start="181:45" pos:end="181:46">96</literal></expr>)</condition> <block pos:start="181:49" pos:end="187:13">{<block_content pos:start="185:17" pos:end="185:74">

                <comment type="block" pos:start="183:17" pos:end="183:79">/* if standard payload type, we can find the codec right now */</comment>

                <expr_stmt pos:start="185:17" pos:end="185:74"><expr pos:start="185:17" pos:end="185:73"><call pos:start="185:17" pos:end="185:73"><name pos:start="185:17" pos:end="185:34">rtp_get_codec_info</name><argument_list pos:start="185:35" pos:end="185:73">(<argument pos:start="185:36" pos:end="185:45"><expr pos:start="185:36" pos:end="185:45"><operator pos:start="185:36" pos:end="185:36">&amp;</operator><name pos:start="185:37" pos:end="185:45"><name pos:start="185:37" pos:end="185:38">st</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:45">codec</name></name></expr></argument>, <argument pos:start="185:48" pos:end="185:72"><expr pos:start="185:48" pos:end="185:72"><name pos:start="185:48" pos:end="185:72"><name pos:start="185:48" pos:end="185:54">rtsp_st</name><operator pos:start="185:55" pos:end="185:56">-&gt;</operator><name pos:start="185:57" pos:end="185:72">sdp_payload_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="191:9" pos:end="191:39">/* put a default control url */</comment>

        <expr_stmt pos:start="193:9" pos:end="193:81"><expr pos:start="193:9" pos:end="193:80"><call pos:start="193:9" pos:end="193:80"><name pos:start="193:9" pos:end="193:15">pstrcpy</name><argument_list pos:start="193:16" pos:end="193:80">(<argument pos:start="193:17" pos:end="193:36"><expr pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:23">rtsp_st</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:36">control_url</name></name></expr></argument>, <argument pos:start="193:39" pos:end="193:66"><expr pos:start="193:39" pos:end="193:66"><sizeof pos:start="193:39" pos:end="193:66">sizeof<argument_list pos:start="193:45" pos:end="193:66">(<argument pos:start="193:46" pos:end="193:65"><expr pos:start="193:46" pos:end="193:65"><name pos:start="193:46" pos:end="193:65"><name pos:start="193:46" pos:end="193:52">rtsp_st</name><operator pos:start="193:53" pos:end="193:54">-&gt;</operator><name pos:start="193:55" pos:end="193:65">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="193:69" pos:end="193:79"><expr pos:start="193:69" pos:end="193:79"><name pos:start="193:69" pos:end="193:79"><name pos:start="193:69" pos:end="193:69">s</name><operator pos:start="193:70" pos:end="193:71">-&gt;</operator><name pos:start="193:72" pos:end="193:79">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:13">case <expr pos:start="197:10" pos:end="197:12"><literal type="char" pos:start="197:10" pos:end="197:12">'a'</literal></expr>:</case>

        <if_stmt pos:start="199:9" pos:end="273:9"><if pos:start="199:9" pos:end="229:9">if <condition pos:start="199:12" pos:end="199:61">(<expr pos:start="199:13" pos:end="199:60"><call pos:start="199:13" pos:end="199:39"><name pos:start="199:13" pos:end="199:20">strstart</name><argument_list pos:start="199:21" pos:end="199:39">(<argument pos:start="199:22" pos:end="199:22"><expr pos:start="199:22" pos:end="199:22"><name pos:start="199:22" pos:end="199:22">p</name></expr></argument>, <argument pos:start="199:25" pos:end="199:34"><expr pos:start="199:25" pos:end="199:34"><literal type="string" pos:start="199:25" pos:end="199:34">"control:"</literal></expr></argument>, <argument pos:start="199:37" pos:end="199:38"><expr pos:start="199:37" pos:end="199:38"><operator pos:start="199:37" pos:end="199:37">&amp;</operator><name pos:start="199:38" pos:end="199:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="199:41" pos:end="199:42">&amp;&amp;</operator> <name pos:start="199:44" pos:end="199:56"><name pos:start="199:44" pos:end="199:44">s</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:56">nb_streams</name></name> <operator pos:start="199:58" pos:end="199:58">&gt;</operator> <literal type="number" pos:start="199:60" pos:end="199:60">0</literal></expr>)</condition> <block pos:start="199:63" pos:end="229:9">{<block_content pos:start="201:13" pos:end="227:13">

            <decl_stmt pos:start="201:13" pos:end="201:27"><decl pos:start="201:13" pos:end="201:26"><type pos:start="201:13" pos:end="201:16"><name pos:start="201:13" pos:end="201:16">char</name></type> <name pos:start="201:18" pos:end="201:26"><name pos:start="201:18" pos:end="201:22">proto</name><index pos:start="201:23" pos:end="201:26">[<expr pos:start="201:24" pos:end="201:25"><literal type="number" pos:start="201:24" pos:end="201:25">32</literal></expr>]</index></name></decl>;</decl_stmt>

            <comment type="block" pos:start="203:13" pos:end="203:37">/* get the control url */</comment>

            <expr_stmt pos:start="205:13" pos:end="205:47"><expr pos:start="205:13" pos:end="205:46"><name pos:start="205:13" pos:end="205:14">st</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <name pos:start="205:18" pos:end="205:46"><name pos:start="205:18" pos:end="205:18">s</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:27">streams</name><index pos:start="205:28" pos:end="205:46">[<expr pos:start="205:29" pos:end="205:45"><name pos:start="205:29" pos:end="205:41"><name pos:start="205:29" pos:end="205:29">s</name><operator pos:start="205:30" pos:end="205:31">-&gt;</operator><name pos:start="205:32" pos:end="205:41">nb_streams</name></name> <operator pos:start="205:43" pos:end="205:43">-</operator> <literal type="number" pos:start="205:45" pos:end="205:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:36"><expr pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:19">rtsp_st</name> <operator pos:start="207:21" pos:end="207:21">=</operator> <name pos:start="207:23" pos:end="207:35"><name pos:start="207:23" pos:end="207:24">st</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:35">priv_data</name></name></expr>;</expr_stmt>

            

            <comment type="block" pos:start="211:13" pos:end="211:58">/* XXX: may need to add full url resolution */</comment>

            <expr_stmt pos:start="213:13" pos:end="213:71"><expr pos:start="213:13" pos:end="213:70"><call pos:start="213:13" pos:end="213:70"><name pos:start="213:13" pos:end="213:21">url_split</name><argument_list pos:start="213:22" pos:end="213:70">(<argument pos:start="213:23" pos:end="213:27"><expr pos:start="213:23" pos:end="213:27"><name pos:start="213:23" pos:end="213:27">proto</name></expr></argument>, <argument pos:start="213:30" pos:end="213:42"><expr pos:start="213:30" pos:end="213:42"><sizeof pos:start="213:30" pos:end="213:42">sizeof<argument_list pos:start="213:36" pos:end="213:42">(<argument pos:start="213:37" pos:end="213:41"><expr pos:start="213:37" pos:end="213:41"><name pos:start="213:37" pos:end="213:41">proto</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="213:45" pos:end="213:48"><expr pos:start="213:45" pos:end="213:48"><name pos:start="213:45" pos:end="213:48">NULL</name></expr></argument>, <argument pos:start="213:51" pos:end="213:51"><expr pos:start="213:51" pos:end="213:51"><literal type="number" pos:start="213:51" pos:end="213:51">0</literal></expr></argument>, <argument pos:start="213:54" pos:end="213:57"><expr pos:start="213:54" pos:end="213:57"><name pos:start="213:54" pos:end="213:57">NULL</name></expr></argument>, <argument pos:start="213:60" pos:end="213:63"><expr pos:start="213:60" pos:end="213:63"><name pos:start="213:60" pos:end="213:63">NULL</name></expr></argument>, <argument pos:start="213:66" pos:end="213:66"><expr pos:start="213:66" pos:end="213:66"><literal type="number" pos:start="213:66" pos:end="213:66">0</literal></expr></argument>, <argument pos:start="213:69" pos:end="213:69"><expr pos:start="213:69" pos:end="213:69"><name pos:start="213:69" pos:end="213:69">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="227:13"><if pos:start="215:13" pos:end="223:13">if <condition pos:start="215:16" pos:end="215:33">(<expr pos:start="215:17" pos:end="215:32"><name pos:start="215:17" pos:end="215:24"><name pos:start="215:17" pos:end="215:21">proto</name><index pos:start="215:22" pos:end="215:24">[<expr pos:start="215:23" pos:end="215:23"><literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr>]</index></name> <operator pos:start="215:26" pos:end="215:27">==</operator> <literal type="char" pos:start="215:29" pos:end="215:32">'\0'</literal></expr>)</condition> <block pos:start="215:35" pos:end="223:13">{<block_content pos:start="219:17" pos:end="221:79">

                <comment type="block" pos:start="217:17" pos:end="217:42">/* relative control URL */</comment>

                <expr_stmt pos:start="219:17" pos:end="219:81"><expr pos:start="219:17" pos:end="219:80"><call pos:start="219:17" pos:end="219:80"><name pos:start="219:17" pos:end="219:23">pstrcat</name><argument_list pos:start="219:24" pos:end="219:80">(<argument pos:start="219:25" pos:end="219:44"><expr pos:start="219:25" pos:end="219:44"><name pos:start="219:25" pos:end="219:44"><name pos:start="219:25" pos:end="219:31">rtsp_st</name><operator pos:start="219:32" pos:end="219:33">-&gt;</operator><name pos:start="219:34" pos:end="219:44">control_url</name></name></expr></argument>, <argument pos:start="219:47" pos:end="219:74"><expr pos:start="219:47" pos:end="219:74"><sizeof pos:start="219:47" pos:end="219:74">sizeof<argument_list pos:start="219:53" pos:end="219:74">(<argument pos:start="219:54" pos:end="219:73"><expr pos:start="219:54" pos:end="219:73"><name pos:start="219:54" pos:end="219:73"><name pos:start="219:54" pos:end="219:60">rtsp_st</name><operator pos:start="219:61" pos:end="219:62">-&gt;</operator><name pos:start="219:63" pos:end="219:73">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="219:77" pos:end="219:79"><expr pos:start="219:77" pos:end="219:79"><literal type="string" pos:start="219:77" pos:end="219:79">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:79"><expr pos:start="221:17" pos:end="221:78"><call pos:start="221:17" pos:end="221:78"><name pos:start="221:17" pos:end="221:23">pstrcat</name><argument_list pos:start="221:24" pos:end="221:78">(<argument pos:start="221:25" pos:end="221:44"><expr pos:start="221:25" pos:end="221:44"><name pos:start="221:25" pos:end="221:44"><name pos:start="221:25" pos:end="221:31">rtsp_st</name><operator pos:start="221:32" pos:end="221:33">-&gt;</operator><name pos:start="221:34" pos:end="221:44">control_url</name></name></expr></argument>, <argument pos:start="221:47" pos:end="221:74"><expr pos:start="221:47" pos:end="221:74"><sizeof pos:start="221:47" pos:end="221:74">sizeof<argument_list pos:start="221:53" pos:end="221:74">(<argument pos:start="221:54" pos:end="221:73"><expr pos:start="221:54" pos:end="221:73"><name pos:start="221:54" pos:end="221:73"><name pos:start="221:54" pos:end="221:60">rtsp_st</name><operator pos:start="221:61" pos:end="221:62">-&gt;</operator><name pos:start="221:63" pos:end="221:73">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="221:77" pos:end="221:77"><expr pos:start="221:77" pos:end="221:77"><name pos:start="221:77" pos:end="221:77">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="223:15" pos:end="227:13">else <block pos:start="223:20" pos:end="227:13">{<block_content pos:start="225:17" pos:end="225:79">

                <expr_stmt pos:start="225:17" pos:end="225:79"><expr pos:start="225:17" pos:end="225:78"><call pos:start="225:17" pos:end="225:78"><name pos:start="225:17" pos:end="225:23">pstrcpy</name><argument_list pos:start="225:24" pos:end="225:78">(<argument pos:start="225:25" pos:end="225:44"><expr pos:start="225:25" pos:end="225:44"><name pos:start="225:25" pos:end="225:44"><name pos:start="225:25" pos:end="225:31">rtsp_st</name><operator pos:start="225:32" pos:end="225:33">-&gt;</operator><name pos:start="225:34" pos:end="225:44">control_url</name></name></expr></argument>, <argument pos:start="225:47" pos:end="225:74"><expr pos:start="225:47" pos:end="225:74"><sizeof pos:start="225:47" pos:end="225:74">sizeof<argument_list pos:start="225:53" pos:end="225:74">(<argument pos:start="225:54" pos:end="225:73"><expr pos:start="225:54" pos:end="225:73"><name pos:start="225:54" pos:end="225:73"><name pos:start="225:54" pos:end="225:60">rtsp_st</name><operator pos:start="225:61" pos:end="225:62">-&gt;</operator><name pos:start="225:63" pos:end="225:73">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="225:77" pos:end="225:77"><expr pos:start="225:77" pos:end="225:77"><name pos:start="225:77" pos:end="225:77">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="251:9">else if <condition pos:start="229:19" pos:end="229:46">(<expr pos:start="229:20" pos:end="229:45"><call pos:start="229:20" pos:end="229:45"><name pos:start="229:20" pos:end="229:27">strstart</name><argument_list pos:start="229:28" pos:end="229:45">(<argument pos:start="229:29" pos:end="229:29"><expr pos:start="229:29" pos:end="229:29"><name pos:start="229:29" pos:end="229:29">p</name></expr></argument>, <argument pos:start="229:32" pos:end="229:40"><expr pos:start="229:32" pos:end="229:40"><literal type="string" pos:start="229:32" pos:end="229:40">"rtpmap:"</literal></expr></argument>, <argument pos:start="229:43" pos:end="229:44"><expr pos:start="229:43" pos:end="229:44"><operator pos:start="229:43" pos:end="229:43">&amp;</operator><name pos:start="229:44" pos:end="229:44">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="229:48" pos:end="251:9">{<block_content pos:start="233:13" pos:end="249:13">

            <comment type="block" pos:start="231:13" pos:end="231:67">/* NOTE: rtpmap is only supported AFTER the 'm=' tag */</comment>

            <expr_stmt pos:start="233:13" pos:end="233:45"><expr pos:start="233:13" pos:end="233:44"><call pos:start="233:13" pos:end="233:44"><name pos:start="233:13" pos:end="233:20">get_word</name><argument_list pos:start="233:21" pos:end="233:44">(<argument pos:start="233:22" pos:end="233:25"><expr pos:start="233:22" pos:end="233:25"><name pos:start="233:22" pos:end="233:25">buf1</name></expr></argument>, <argument pos:start="233:28" pos:end="233:39"><expr pos:start="233:28" pos:end="233:39"><sizeof pos:start="233:28" pos:end="233:39">sizeof<argument_list pos:start="233:34" pos:end="233:39">(<argument pos:start="233:35" pos:end="233:38"><expr pos:start="233:35" pos:end="233:38"><name pos:start="233:35" pos:end="233:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="233:42" pos:end="233:43"><expr pos:start="233:42" pos:end="233:43"><operator pos:start="233:42" pos:end="233:42">&amp;</operator><name pos:start="233:43" pos:end="233:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

            <expr_stmt pos:start="235:13" pos:end="235:38"><expr pos:start="235:13" pos:end="235:37"><name pos:start="235:13" pos:end="235:24">payload_type</name> <operator pos:start="235:26" pos:end="235:26">=</operator> <call pos:start="235:28" pos:end="235:37"><name pos:start="235:28" pos:end="235:31">atoi</name><argument_list pos:start="235:32" pos:end="235:37">(<argument pos:start="235:33" pos:end="235:36"><expr pos:start="235:33" pos:end="235:36"><name pos:start="235:33" pos:end="235:36">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="237:13" pos:end="249:13">for<control pos:start="237:16" pos:end="237:45">(<init pos:start="237:17" pos:end="237:22"><expr pos:start="237:17" pos:end="237:21"><name pos:start="237:17" pos:end="237:17">i</name> <operator pos:start="237:19" pos:end="237:19">=</operator> <literal type="number" pos:start="237:21" pos:end="237:21">0</literal></expr>;</init> <condition pos:start="237:24" pos:end="237:41"><expr pos:start="237:24" pos:end="237:40"><name pos:start="237:24" pos:end="237:24">i</name> <operator pos:start="237:26" pos:end="237:26">&lt;</operator> <name pos:start="237:28" pos:end="237:40"><name pos:start="237:28" pos:end="237:28">s</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:40">nb_streams</name></name></expr>;</condition><incr pos:start="237:42" pos:end="237:44"><expr pos:start="237:42" pos:end="237:44"><name pos:start="237:42" pos:end="237:42">i</name><operator pos:start="237:43" pos:end="237:44">++</operator></expr></incr>)</control> <block pos:start="237:47" pos:end="249:13">{<block_content pos:start="239:17" pos:end="247:17">

                <expr_stmt pos:start="239:17" pos:end="239:35"><expr pos:start="239:17" pos:end="239:34"><name pos:start="239:17" pos:end="239:18">st</name> <operator pos:start="239:20" pos:end="239:20">=</operator> <name pos:start="239:22" pos:end="239:34"><name pos:start="239:22" pos:end="239:22">s</name><operator pos:start="239:23" pos:end="239:24">-&gt;</operator><name pos:start="239:25" pos:end="239:31">streams</name><index pos:start="239:32" pos:end="239:34">[<expr pos:start="239:33" pos:end="239:33"><name pos:start="239:33" pos:end="239:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:40"><expr pos:start="241:17" pos:end="241:39"><name pos:start="241:17" pos:end="241:23">rtsp_st</name> <operator pos:start="241:25" pos:end="241:25">=</operator> <name pos:start="241:27" pos:end="241:39"><name pos:start="241:27" pos:end="241:28">st</name><operator pos:start="241:29" pos:end="241:30">-&gt;</operator><name pos:start="241:31" pos:end="241:39">priv_data</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="243:17" pos:end="247:17"><if pos:start="243:17" pos:end="247:17">if <condition pos:start="243:20" pos:end="243:62">(<expr pos:start="243:21" pos:end="243:61"><name pos:start="243:21" pos:end="243:45"><name pos:start="243:21" pos:end="243:27">rtsp_st</name><operator pos:start="243:28" pos:end="243:29">-&gt;</operator><name pos:start="243:30" pos:end="243:45">sdp_payload_type</name></name> <operator pos:start="243:47" pos:end="243:48">==</operator> <name pos:start="243:50" pos:end="243:61">payload_type</name></expr>)</condition> <block pos:start="243:64" pos:end="247:17">{<block_content pos:start="245:21" pos:end="245:52">

                    <expr_stmt pos:start="245:21" pos:end="245:52"><expr pos:start="245:21" pos:end="245:51"><call pos:start="245:21" pos:end="245:51"><name pos:start="245:21" pos:end="245:36">sdp_parse_rtpmap</name><argument_list pos:start="245:37" pos:end="245:51">(<argument pos:start="245:38" pos:end="245:47"><expr pos:start="245:38" pos:end="245:47"><operator pos:start="245:38" pos:end="245:38">&amp;</operator><name pos:start="245:39" pos:end="245:47"><name pos:start="245:39" pos:end="245:40">st</name><operator pos:start="245:41" pos:end="245:42">-&gt;</operator><name pos:start="245:43" pos:end="245:47">codec</name></name></expr></argument>, <argument pos:start="245:50" pos:end="245:50"><expr pos:start="245:50" pos:end="245:50"><name pos:start="245:50" pos:end="245:50">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="251:11" pos:end="273:9">else if <condition pos:start="251:19" pos:end="251:44">(<expr pos:start="251:20" pos:end="251:43"><call pos:start="251:20" pos:end="251:43"><name pos:start="251:20" pos:end="251:27">strstart</name><argument_list pos:start="251:28" pos:end="251:43">(<argument pos:start="251:29" pos:end="251:29"><expr pos:start="251:29" pos:end="251:29"><name pos:start="251:29" pos:end="251:29">p</name></expr></argument>, <argument pos:start="251:32" pos:end="251:38"><expr pos:start="251:32" pos:end="251:38"><literal type="string" pos:start="251:32" pos:end="251:38">"fmtp:"</literal></expr></argument>, <argument pos:start="251:41" pos:end="251:42"><expr pos:start="251:41" pos:end="251:42"><operator pos:start="251:41" pos:end="251:41">&amp;</operator><name pos:start="251:42" pos:end="251:42">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="251:46" pos:end="273:9">{<block_content pos:start="255:13" pos:end="271:13">

            <comment type="block" pos:start="253:13" pos:end="253:75">/* NOTE: fmtp is only supported AFTER the 'a=rtpmap:xxx' tag */</comment>

            <expr_stmt pos:start="255:13" pos:end="255:45"><expr pos:start="255:13" pos:end="255:44"><call pos:start="255:13" pos:end="255:44"><name pos:start="255:13" pos:end="255:20">get_word</name><argument_list pos:start="255:21" pos:end="255:44">(<argument pos:start="255:22" pos:end="255:25"><expr pos:start="255:22" pos:end="255:25"><name pos:start="255:22" pos:end="255:25">buf1</name></expr></argument>, <argument pos:start="255:28" pos:end="255:39"><expr pos:start="255:28" pos:end="255:39"><sizeof pos:start="255:28" pos:end="255:39">sizeof<argument_list pos:start="255:34" pos:end="255:39">(<argument pos:start="255:35" pos:end="255:38"><expr pos:start="255:35" pos:end="255:38"><name pos:start="255:35" pos:end="255:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="255:42" pos:end="255:43"><expr pos:start="255:42" pos:end="255:43"><operator pos:start="255:42" pos:end="255:42">&amp;</operator><name pos:start="255:43" pos:end="255:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

            <expr_stmt pos:start="257:13" pos:end="257:38"><expr pos:start="257:13" pos:end="257:37"><name pos:start="257:13" pos:end="257:24">payload_type</name> <operator pos:start="257:26" pos:end="257:26">=</operator> <call pos:start="257:28" pos:end="257:37"><name pos:start="257:28" pos:end="257:31">atoi</name><argument_list pos:start="257:32" pos:end="257:37">(<argument pos:start="257:33" pos:end="257:36"><expr pos:start="257:33" pos:end="257:36"><name pos:start="257:33" pos:end="257:36">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="259:13" pos:end="271:13">for<control pos:start="259:16" pos:end="259:45">(<init pos:start="259:17" pos:end="259:22"><expr pos:start="259:17" pos:end="259:21"><name pos:start="259:17" pos:end="259:17">i</name> <operator pos:start="259:19" pos:end="259:19">=</operator> <literal type="number" pos:start="259:21" pos:end="259:21">0</literal></expr>;</init> <condition pos:start="259:24" pos:end="259:41"><expr pos:start="259:24" pos:end="259:40"><name pos:start="259:24" pos:end="259:24">i</name> <operator pos:start="259:26" pos:end="259:26">&lt;</operator> <name pos:start="259:28" pos:end="259:40"><name pos:start="259:28" pos:end="259:28">s</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:40">nb_streams</name></name></expr>;</condition><incr pos:start="259:42" pos:end="259:44"><expr pos:start="259:42" pos:end="259:44"><name pos:start="259:42" pos:end="259:42">i</name><operator pos:start="259:43" pos:end="259:44">++</operator></expr></incr>)</control> <block pos:start="259:47" pos:end="271:13">{<block_content pos:start="261:17" pos:end="269:17">

                <expr_stmt pos:start="261:17" pos:end="261:35"><expr pos:start="261:17" pos:end="261:34"><name pos:start="261:17" pos:end="261:18">st</name> <operator pos:start="261:20" pos:end="261:20">=</operator> <name pos:start="261:22" pos:end="261:34"><name pos:start="261:22" pos:end="261:22">s</name><operator pos:start="261:23" pos:end="261:24">-&gt;</operator><name pos:start="261:25" pos:end="261:31">streams</name><index pos:start="261:32" pos:end="261:34">[<expr pos:start="261:33" pos:end="261:33"><name pos:start="261:33" pos:end="261:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="263:17" pos:end="263:40"><expr pos:start="263:17" pos:end="263:39"><name pos:start="263:17" pos:end="263:23">rtsp_st</name> <operator pos:start="263:25" pos:end="263:25">=</operator> <name pos:start="263:27" pos:end="263:39"><name pos:start="263:27" pos:end="263:28">st</name><operator pos:start="263:29" pos:end="263:30">-&gt;</operator><name pos:start="263:31" pos:end="263:39">priv_data</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="265:17" pos:end="269:17"><if pos:start="265:17" pos:end="269:17">if <condition pos:start="265:20" pos:end="265:62">(<expr pos:start="265:21" pos:end="265:61"><name pos:start="265:21" pos:end="265:45"><name pos:start="265:21" pos:end="265:27">rtsp_st</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:45">sdp_payload_type</name></name> <operator pos:start="265:47" pos:end="265:48">==</operator> <name pos:start="265:50" pos:end="265:61">payload_type</name></expr>)</condition> <block pos:start="265:64" pos:end="269:17">{<block_content pos:start="267:21" pos:end="267:50">

                    <expr_stmt pos:start="267:21" pos:end="267:50"><expr pos:start="267:21" pos:end="267:49"><call pos:start="267:21" pos:end="267:49"><name pos:start="267:21" pos:end="267:34">sdp_parse_fmtp</name><argument_list pos:start="267:35" pos:end="267:49">(<argument pos:start="267:36" pos:end="267:45"><expr pos:start="267:36" pos:end="267:45"><operator pos:start="267:36" pos:end="267:36">&amp;</operator><name pos:start="267:37" pos:end="267:45"><name pos:start="267:37" pos:end="267:38">st</name><operator pos:start="267:39" pos:end="267:40">-&gt;</operator><name pos:start="267:41" pos:end="267:45">codec</name></name></expr></argument>, <argument pos:start="267:48" pos:end="267:48"><expr pos:start="267:48" pos:end="267:48"><name pos:start="267:48" pos:end="267:48">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <break pos:start="275:9" pos:end="275:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
