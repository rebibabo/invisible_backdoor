<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11351.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">find_image_range</name><parameter_list pos:start="1:28" pos:end="3:62">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:31">int</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:45">pfirst_index</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:50">int</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:63">plast_index</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">path</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:61"><decl pos:start="3:47" pos:end="3:61"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:61">start_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:14">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:18">[<expr pos:start="7:14" pos:end="7:17"><literal type="number" pos:start="7:14" pos:end="7:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">range</name></decl>, <decl pos:start="9:16" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:25">last_index</name></decl>, <decl pos:start="9:28" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:33">range1</name></decl>, <decl pos:start="9:36" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:36" pos:end="9:46">first_index</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:30">/* find the first image */</comment>

    <for pos:start="15:5" pos:end="35:5">for <control pos:start="15:9" pos:end="15:81">(<init pos:start="15:10" pos:end="15:35"><expr pos:start="15:10" pos:end="15:34"><name pos:start="15:10" pos:end="15:20">first_index</name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:34">start_index</name></expr>;</init> <condition pos:start="15:37" pos:end="15:66"><expr pos:start="15:37" pos:end="15:65"><name pos:start="15:37" pos:end="15:47">first_index</name> <operator pos:start="15:49" pos:end="15:49">&lt;</operator> <name pos:start="15:51" pos:end="15:61">start_index</name> <operator pos:start="15:63" pos:end="15:63">+</operator> <literal type="number" pos:start="15:65" pos:end="15:65">5</literal></expr>;</condition> <incr pos:start="15:68" pos:end="15:80"><expr pos:start="15:68" pos:end="15:80"><name pos:start="15:68" pos:end="15:78">first_index</name><operator pos:start="15:79" pos:end="15:80">++</operator></expr></incr>)</control> <block pos:start="15:83" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:18">

        <if_stmt pos:start="17:9" pos:end="29:9"><if pos:start="17:9" pos:end="29:9">if <condition pos:start="17:12" pos:end="17:75">(<expr pos:start="17:13" pos:end="17:74"><call pos:start="17:13" pos:end="17:70"><name pos:start="17:13" pos:end="17:33">av_get_frame_filename</name><argument_list pos:start="17:34" pos:end="17:70">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">buf</name></expr></argument>, <argument pos:start="17:40" pos:end="17:50"><expr pos:start="17:40" pos:end="17:50"><sizeof pos:start="17:40" pos:end="17:50">sizeof<argument_list pos:start="17:46" pos:end="17:50">(<argument pos:start="17:47" pos:end="17:49"><expr pos:start="17:47" pos:end="17:49"><name pos:start="17:47" pos:end="17:49">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:53" pos:end="17:56"><expr pos:start="17:53" pos:end="17:56"><name pos:start="17:53" pos:end="17:56">path</name></expr></argument>, <argument pos:start="17:59" pos:end="17:69"><expr pos:start="17:59" pos:end="17:69"><name pos:start="17:59" pos:end="17:69">first_index</name></expr></argument>)</argument_list></call> <operator pos:start="17:72" pos:end="17:72">&lt;</operator> <literal type="number" pos:start="17:74" pos:end="17:74">0</literal></expr>)</condition><block pos:start="17:76" pos:end="29:9">{<block_content pos:start="19:13" pos:end="27:22">

            <expr_stmt pos:start="19:13" pos:end="21:29"><expr pos:start="19:13" pos:end="21:28"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:25">pfirst_index</name> <operator pos:start="19:27" pos:end="19:27">=</operator>

            <operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:24">plast_index</name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:25"><if pos:start="23:13" pos:end="25:25">if <condition pos:start="23:16" pos:end="23:52">(<expr pos:start="23:17" pos:end="23:51"><call pos:start="23:17" pos:end="23:47"><name pos:start="23:17" pos:end="23:26">avio_check</name><argument_list pos:start="23:27" pos:end="23:47">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">buf</name></expr></argument>, <argument pos:start="23:33" pos:end="23:46"><expr pos:start="23:33" pos:end="23:46"><name pos:start="23:33" pos:end="23:46">AVIO_FLAG_READ</name></expr></argument>)</argument_list></call> <operator pos:start="23:49" pos:end="23:49">&gt;</operator> <literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:25"><block_content pos:start="25:17" pos:end="25:25">

                <return pos:start="25:17" pos:end="25:25">return <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="27:13" pos:end="27:22">return <expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="33:18"><if pos:start="31:9" pos:end="33:18">if <condition pos:start="31:12" pos:end="31:48">(<expr pos:start="31:13" pos:end="31:47"><call pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:22">avio_check</name><argument_list pos:start="31:23" pos:end="31:43">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">buf</name></expr></argument>, <argument pos:start="31:29" pos:end="31:42"><expr pos:start="31:29" pos:end="31:42"><name pos:start="31:29" pos:end="31:42">AVIO_FLAG_READ</name></expr></argument>)</argument_list></call> <operator pos:start="31:45" pos:end="31:45">&gt;</operator> <literal type="number" pos:start="31:47" pos:end="31:47">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:18"><block_content pos:start="33:13" pos:end="33:18">

            <break pos:start="33:13" pos:end="33:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:25">(<expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:19">first_index</name> <operator pos:start="37:21" pos:end="37:22">==</operator> <literal type="number" pos:start="37:24" pos:end="37:24">5</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:29">/* find the last image */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:14">last_index</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:28">first_index</name></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="89:5">for<control pos:start="47:8" pos:end="47:11">(<init pos:start="47:9" pos:end="47:9">;</init><condition pos:start="47:10" pos:end="47:10">;</condition><incr/>)</control> <block pos:start="47:13" pos:end="89:5">{<block_content pos:start="49:9" pos:end="87:28">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:13">range</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>;</expr_stmt>

        <for pos:start="51:9" pos:end="79:9">for<control pos:start="51:12" pos:end="51:15">(<init pos:start="51:13" pos:end="51:13">;</init><condition pos:start="51:14" pos:end="51:14">;</condition><incr/>)</control> <block pos:start="51:17" pos:end="79:9">{<block_content pos:start="53:13" pos:end="77:26">

            <if_stmt pos:start="53:13" pos:end="59:35"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:23">(<expr pos:start="53:17" pos:end="53:22"><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:22">range</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <expr_stmt pos:start="55:17" pos:end="55:27"><expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:22">range1</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="57:13" pos:end="59:35">else<block type="pseudo" pos:start="59:17" pos:end="59:35"><block_content pos:start="59:17" pos:end="59:35">

                <expr_stmt pos:start="59:17" pos:end="59:35"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:22">range1</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">2</literal> <operator pos:start="59:28" pos:end="59:28">*</operator> <name pos:start="59:30" pos:end="59:34">range</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="61:13" pos:end="65:26"><if pos:start="61:13" pos:end="65:26">if <condition pos:start="61:16" pos:end="63:63">(<expr pos:start="61:17" pos:end="63:62"><call pos:start="61:17" pos:end="63:58"><name pos:start="61:17" pos:end="61:37">av_get_frame_filename</name><argument_list pos:start="61:38" pos:end="63:58">(<argument pos:start="61:39" pos:end="61:41"><expr pos:start="61:39" pos:end="61:41"><name pos:start="61:39" pos:end="61:41">buf</name></expr></argument>, <argument pos:start="61:44" pos:end="61:54"><expr pos:start="61:44" pos:end="61:54"><sizeof pos:start="61:44" pos:end="61:54">sizeof<argument_list pos:start="61:50" pos:end="61:54">(<argument pos:start="61:51" pos:end="61:53"><expr pos:start="61:51" pos:end="61:53"><name pos:start="61:51" pos:end="61:53">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:57" pos:end="61:60"><expr pos:start="61:57" pos:end="61:60"><name pos:start="61:57" pos:end="61:60">path</name></expr></argument>,

                                      <argument pos:start="63:39" pos:end="63:57"><expr pos:start="63:39" pos:end="63:57"><name pos:start="63:39" pos:end="63:48">last_index</name> <operator pos:start="63:50" pos:end="63:50">+</operator> <name pos:start="63:52" pos:end="63:57">range1</name></expr></argument>)</argument_list></call> <operator pos:start="63:60" pos:end="63:60">&lt;</operator> <literal type="number" pos:start="63:62" pos:end="63:62">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:26"><block_content pos:start="65:17" pos:end="65:26">

                <goto pos:start="65:17" pos:end="65:26">goto <name pos:start="65:22" pos:end="65:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="67:13" pos:end="69:22"><if pos:start="67:13" pos:end="69:22">if <condition pos:start="67:16" pos:end="67:53">(<expr pos:start="67:17" pos:end="67:52"><call pos:start="67:17" pos:end="67:47"><name pos:start="67:17" pos:end="67:26">avio_check</name><argument_list pos:start="67:27" pos:end="67:47">(<argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">buf</name></expr></argument>, <argument pos:start="67:33" pos:end="67:46"><expr pos:start="67:33" pos:end="67:46"><name pos:start="67:33" pos:end="67:46">AVIO_FLAG_READ</name></expr></argument>)</argument_list></call> <operator pos:start="67:49" pos:end="67:50">&lt;=</operator> <literal type="number" pos:start="67:52" pos:end="67:52">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:22"><block_content pos:start="69:17" pos:end="69:22">

                <break pos:start="69:17" pos:end="69:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:27"><expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:17">range</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:26">range1</name></expr>;</expr_stmt>

            <comment type="block" pos:start="73:13" pos:end="73:33">/* just in case... */</comment>

            <if_stmt pos:start="75:13" pos:end="77:26"><if pos:start="75:13" pos:end="77:26">if <condition pos:start="75:16" pos:end="75:35">(<expr pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:21">range</name> <operator pos:start="75:23" pos:end="75:24">&gt;=</operator> <operator pos:start="75:26" pos:end="75:26">(</operator><literal type="number" pos:start="75:27" pos:end="75:27">1</literal> <operator pos:start="75:29" pos:end="75:30">&lt;&lt;</operator> <literal type="number" pos:start="75:32" pos:end="75:33">30</literal><operator pos:start="75:34" pos:end="75:34">)</operator></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:26"><block_content pos:start="77:17" pos:end="77:26">

                <goto pos:start="77:17" pos:end="77:26">goto <name pos:start="77:22" pos:end="77:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="81:9" pos:end="81:62">/* we are sure than image last_index + range exists */</comment>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:19">(<expr pos:start="83:13" pos:end="83:18"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:18">range</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:28"><expr pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:18">last_index</name> <operator pos:start="87:20" pos:end="87:21">+=</operator> <name pos:start="87:23" pos:end="87:27">range</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><operator pos:start="91:5" pos:end="91:5">*</operator><name pos:start="91:6" pos:end="91:17">pfirst_index</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:31">first_index</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:30"><expr pos:start="93:5" pos:end="93:29"><operator pos:start="93:5" pos:end="93:5">*</operator><name pos:start="93:6" pos:end="93:16">plast_index</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:29">last_index</name></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

 <label pos:start="97:2" pos:end="97:6"><name pos:start="97:2" pos:end="97:5">fail</name>:</label>

    <return pos:start="99:5" pos:end="99:14">return <expr pos:start="99:12" pos:end="99:13"><operator pos:start="99:12" pos:end="99:12">-</operator><literal type="number" pos:start="99:13" pos:end="99:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
