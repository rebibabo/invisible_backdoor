<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14555.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">nbd_client_co_pwritev</name><parameter_list pos:start="1:26" pos:end="3:72">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">bytes</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><name pos:start="3:43" pos:end="3:54">QEMUIOVector</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:60">qiov</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:71"><decl pos:start="3:63" pos:end="3:71"><type pos:start="3:63" pos:end="3:71"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:71">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:24">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">NbdClientSession</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">client</name> <init pos:start="7:30" pos:end="7:57">= <expr pos:start="7:32" pos:end="7:57"><call pos:start="7:32" pos:end="7:57"><name pos:start="7:32" pos:end="7:53">nbd_get_client_session</name><argument_list pos:start="7:54" pos:end="7:57">(<argument pos:start="7:55" pos:end="7:56"><expr pos:start="7:55" pos:end="7:56"><name pos:start="7:55" pos:end="7:56">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="17:6"><decl pos:start="9:5" pos:end="17:5"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:22">nbd_request</name></name></type> <name pos:start="9:24" pos:end="9:30">request</name> <init pos:start="9:32" pos:end="17:5">= <expr pos:start="9:34" pos:end="17:5"><block pos:start="9:34" pos:end="17:5">{

        <expr pos:start="11:9" pos:end="11:29"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">type</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:29">NBD_CMD_WRITE</name></expr>,

        <expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:13">from</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:22">offset</name></expr>,

        <expr pos:start="15:9" pos:end="15:20"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">len</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:20">bytes</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:20">nbd_reply</name></name></type> <name pos:start="19:22" pos:end="19:26">reply</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">ssize_t</name></type> <name pos:start="21:13" pos:end="21:15">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:13">flags</name> <operator pos:start="25:15" pos:end="25:15">&amp;</operator> <name pos:start="25:17" pos:end="25:28">BDRV_REQ_FUA</name></expr>)</condition> <block pos:start="25:31" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:41">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><call pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:14">assert</name><argument_list pos:start="27:15" pos:end="27:52">(<argument pos:start="27:16" pos:end="27:51"><expr pos:start="27:16" pos:end="27:51"><name pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:21">client</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:31">nbdflags</name></name> <operator pos:start="27:33" pos:end="27:33">&amp;</operator> <name pos:start="27:35" pos:end="27:51">NBD_FLAG_SEND_FUA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:15">request</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:20">type</name></name> <operator pos:start="29:22" pos:end="29:23">|=</operator> <name pos:start="29:25" pos:end="29:40">NBD_CMD_FLAG_FUA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:10">assert</name><argument_list pos:start="35:11" pos:end="35:40">(<argument pos:start="35:12" pos:end="35:39"><expr pos:start="35:12" pos:end="35:39"><name pos:start="35:12" pos:end="35:16">bytes</name> <operator pos:start="35:18" pos:end="35:19">&lt;=</operator> <name pos:start="35:21" pos:end="35:39">NBD_MAX_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:23">nbd_coroutine_start</name><argument_list pos:start="39:24" pos:end="39:41">(<argument pos:start="39:25" pos:end="39:30"><expr pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:30">client</name></expr></argument>, <argument pos:start="39:33" pos:end="39:40"><expr pos:start="39:33" pos:end="39:40"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:40">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:50"><expr pos:start="41:5" pos:end="41:49"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:49"><name pos:start="41:11" pos:end="41:29">nbd_co_send_request</name><argument_list pos:start="41:30" pos:end="41:49">(<argument pos:start="41:31" pos:end="41:32"><expr pos:start="41:31" pos:end="41:32"><name pos:start="41:31" pos:end="41:32">bs</name></expr></argument>, <argument pos:start="41:35" pos:end="41:42"><expr pos:start="41:35" pos:end="41:42"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:42">request</name></expr></argument>, <argument pos:start="41:45" pos:end="41:48"><expr pos:start="41:45" pos:end="41:48"><name pos:start="41:45" pos:end="41:48">qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:27">

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:13">reply</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:19">error</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <operator pos:start="45:23" pos:end="45:23">-</operator><name pos:start="45:24" pos:end="45:26">ret</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:61">

        <expr_stmt pos:start="49:9" pos:end="49:61"><expr pos:start="49:9" pos:end="49:60"><call pos:start="49:9" pos:end="49:60"><name pos:start="49:9" pos:end="49:28">nbd_co_receive_reply</name><argument_list pos:start="49:29" pos:end="49:60">(<argument pos:start="49:30" pos:end="49:35"><expr pos:start="49:30" pos:end="49:35"><name pos:start="49:30" pos:end="49:35">client</name></expr></argument>, <argument pos:start="49:38" pos:end="49:45"><expr pos:start="49:38" pos:end="49:45"><operator pos:start="49:38" pos:end="49:38">&amp;</operator><name pos:start="49:39" pos:end="49:45">request</name></expr></argument>, <argument pos:start="49:48" pos:end="49:53"><expr pos:start="49:48" pos:end="49:53"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:53">reply</name></expr></argument>, <argument pos:start="49:56" pos:end="49:59"><expr pos:start="49:56" pos:end="49:59"><name pos:start="49:56" pos:end="49:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><call pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:21">nbd_coroutine_end</name><argument_list pos:start="53:22" pos:end="53:39">(<argument pos:start="53:23" pos:end="53:28"><expr pos:start="53:23" pos:end="53:28"><name pos:start="53:23" pos:end="53:28">client</name></expr></argument>, <argument pos:start="53:31" pos:end="53:38"><expr pos:start="53:31" pos:end="53:38"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:38">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:24">return <expr pos:start="55:12" pos:end="55:23"><operator pos:start="55:12" pos:end="55:12">-</operator><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:17">reply</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:23">error</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
