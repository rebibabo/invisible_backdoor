<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/809.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">tcg_out_brcond</name><parameter_list pos:start="1:27" pos:end="3:56">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">TCGContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:49">TCGCond</name></type> <name pos:start="1:51" pos:end="1:54">cond</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:67"><decl pos:start="1:57" pos:end="1:67"><type pos:start="1:57" pos:end="1:67"><name pos:start="1:57" pos:end="1:62">TCGReg</name></type> <name pos:start="1:64" pos:end="1:67">arg1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:38"><decl pos:start="3:28" pos:end="3:38"><type pos:start="3:28" pos:end="3:38"><name pos:start="3:28" pos:end="3:33">TCGReg</name></type> <name pos:start="3:35" pos:end="3:38">arg2</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:55">label_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:19">

    <decl_stmt pos:start="7:5" pos:end="17:6"><decl pos:start="7:5" pos:end="17:5"><type pos:start="7:5" pos:end="7:25"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:25">MIPSInsn</name></type> <name pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:32">b_zero</name><index pos:start="7:33" pos:end="7:36">[<expr pos:start="7:34" pos:end="7:35"><literal type="number" pos:start="7:34" pos:end="7:35">16</literal></expr>]</index></name> <init pos:start="7:38" pos:end="17:5">= <expr pos:start="7:40" pos:end="17:5"><block pos:start="7:40" pos:end="17:5">{

        <expr pos:start="9:9" pos:end="9:32"><index pos:start="9:9" pos:end="9:21">[<expr pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:20">TCG_COND_LT</name></expr>]</index> <operator pos:start="9:23" pos:end="9:23">=</operator> <name pos:start="9:25" pos:end="9:32">OPC_BLTZ</name></expr>,

        <expr pos:start="11:9" pos:end="11:32"><index pos:start="11:9" pos:end="11:21">[<expr pos:start="11:10" pos:end="11:20"><name pos:start="11:10" pos:end="11:20">TCG_COND_GT</name></expr>]</index> <operator pos:start="11:23" pos:end="11:23">=</operator> <name pos:start="11:25" pos:end="11:32">OPC_BGTZ</name></expr>,

        <expr pos:start="13:9" pos:end="13:32"><index pos:start="13:9" pos:end="13:21">[<expr pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:20">TCG_COND_LE</name></expr>]</index> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:32">OPC_BLEZ</name></expr>,

        <expr pos:start="15:9" pos:end="15:32"><index pos:start="15:9" pos:end="15:21">[<expr pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:20">TCG_COND_GE</name></expr>]</index> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:32">OPC_BGEZ</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">TCGLabel</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:15">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">MIPSInsn</name></type> <name pos:start="23:14" pos:end="23:18">s_opc</name> <init pos:start="23:20" pos:end="23:29">= <expr pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:29">OPC_SLTU</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:19"><decl pos:start="25:5" pos:end="25:18"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">MIPSInsn</name></type> <name pos:start="25:14" pos:end="25:18">b_opc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:16"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:15">cmp_map</name></decl>;</decl_stmt>



    <switch pos:start="31:5" pos:end="111:5">switch <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">cond</name></expr>)</condition> <block pos:start="31:19" pos:end="111:5">{<block_content pos:start="33:5" pos:end="109:14">

    <case pos:start="33:5" pos:end="33:21">case <expr pos:start="33:10" pos:end="33:20"><name pos:start="33:10" pos:end="33:20">TCG_COND_EQ</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">b_opc</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:23">OPC_BEQ</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:21">case <expr pos:start="39:10" pos:end="39:20"><name pos:start="39:10" pos:end="39:20">TCG_COND_NE</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:13">b_opc</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:23">OPC_BNE</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>



    <case pos:start="47:5" pos:end="47:21">case <expr pos:start="47:10" pos:end="47:20"><name pos:start="47:10" pos:end="47:20">TCG_COND_LT</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:21">case <expr pos:start="49:10" pos:end="49:20"><name pos:start="49:10" pos:end="49:20">TCG_COND_GT</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:21">case <expr pos:start="51:10" pos:end="51:20"><name pos:start="51:10" pos:end="51:20">TCG_COND_LE</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:21">case <expr pos:start="53:10" pos:end="53:20"><name pos:start="53:10" pos:end="53:20">TCG_COND_GE</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:16">arg2</name> <operator pos:start="55:18" pos:end="55:19">==</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>)</condition> <block pos:start="55:24" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:18">

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:17">b_opc</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:26">b_zero</name><index pos:start="57:27" pos:end="57:32">[<expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">cond</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:24"><expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:16">arg2</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:23">arg1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:21"><expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:16">arg1</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:13">s_opc</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:23">OPC_SLT</name></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:22">/* FALLTHRU */</comment>



    <case pos:start="73:5" pos:end="73:22">case <expr pos:start="73:10" pos:end="73:21"><name pos:start="73:10" pos:end="73:21">TCG_COND_LTU</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:22">case <expr pos:start="75:10" pos:end="75:21"><name pos:start="75:10" pos:end="75:21">TCG_COND_GTU</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:22">case <expr pos:start="77:10" pos:end="77:21"><name pos:start="77:10" pos:end="77:21">TCG_COND_LEU</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:22">case <expr pos:start="79:10" pos:end="79:21"><name pos:start="79:10" pos:end="79:21">TCG_COND_GEU</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:15">cmp_map</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:36"><name pos:start="81:19" pos:end="81:30">mips_cmp_map</name><index pos:start="81:31" pos:end="81:36">[<expr pos:start="81:32" pos:end="81:35"><name pos:start="81:32" pos:end="81:35">cond</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:36">(<expr pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:19">cmp_map</name> <operator pos:start="83:21" pos:end="83:21">&amp;</operator> <name pos:start="83:23" pos:end="83:35">MIPS_CMP_SWAP</name></expr>)</condition> <block pos:start="83:38" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:21">

            <decl_stmt pos:start="85:13" pos:end="85:28"><decl pos:start="85:13" pos:end="85:27"><type pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:18">TCGReg</name></type> <name pos:start="85:20" pos:end="85:20">t</name> <init pos:start="85:22" pos:end="85:27">= <expr pos:start="85:24" pos:end="85:27"><name pos:start="85:24" pos:end="85:27">arg1</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:24"><expr pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:16">arg1</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:23">arg2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:21"><expr pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:16">arg2</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:20">t</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:56"><expr pos:start="93:9" pos:end="93:55"><call pos:start="93:9" pos:end="93:55"><name pos:start="93:9" pos:end="93:23">tcg_out_opc_reg</name><argument_list pos:start="93:24" pos:end="93:55">(<argument pos:start="93:25" pos:end="93:25"><expr pos:start="93:25" pos:end="93:25"><name pos:start="93:25" pos:end="93:25">s</name></expr></argument>, <argument pos:start="93:28" pos:end="93:32"><expr pos:start="93:28" pos:end="93:32"><name pos:start="93:28" pos:end="93:32">s_opc</name></expr></argument>, <argument pos:start="93:35" pos:end="93:42"><expr pos:start="93:35" pos:end="93:42"><name pos:start="93:35" pos:end="93:42">TCG_TMP0</name></expr></argument>, <argument pos:start="93:45" pos:end="93:48"><expr pos:start="93:45" pos:end="93:48"><name pos:start="93:45" pos:end="93:48">arg1</name></expr></argument>, <argument pos:start="93:51" pos:end="93:54"><expr pos:start="93:51" pos:end="93:54"><name pos:start="93:51" pos:end="93:54">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:13">b_opc</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <operator pos:start="95:17" pos:end="95:17">(</operator><ternary pos:start="95:18" pos:end="95:59"><condition pos:start="95:18" pos:end="95:41"><expr pos:start="95:18" pos:end="95:39"><name pos:start="95:18" pos:end="95:24">cmp_map</name> <operator pos:start="95:26" pos:end="95:26">&amp;</operator> <name pos:start="95:28" pos:end="95:39">MIPS_CMP_INV</name></expr> ?</condition><then pos:start="95:43" pos:end="95:49"> <expr pos:start="95:43" pos:end="95:49"><name pos:start="95:43" pos:end="95:49">OPC_BEQ</name></expr> </then><else pos:start="95:51" pos:end="95:59">: <expr pos:start="95:53" pos:end="95:59"><name pos:start="95:53" pos:end="95:59">OPC_BNE</name></expr></else></ternary><operator pos:start="95:60" pos:end="95:60">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:24"><expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:12">arg1</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <name pos:start="97:16" pos:end="97:23">TCG_TMP0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:28"><expr pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:12">arg2</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:27">TCG_REG_ZERO</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>



    <default pos:start="105:5" pos:end="105:12">default:</default>

        <expr_stmt pos:start="107:9" pos:end="107:20"><expr pos:start="107:9" pos:end="107:19"><call pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:17">tcg_abort</name><argument_list pos:start="107:18" pos:end="107:19">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="115:5" pos:end="115:41"><expr pos:start="115:5" pos:end="115:40"><call pos:start="115:5" pos:end="115:40"><name pos:start="115:5" pos:end="115:18">tcg_out_opc_br</name><argument_list pos:start="115:19" pos:end="115:40">(<argument pos:start="115:20" pos:end="115:20"><expr pos:start="115:20" pos:end="115:20"><name pos:start="115:20" pos:end="115:20">s</name></expr></argument>, <argument pos:start="115:23" pos:end="115:27"><expr pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:27">b_opc</name></expr></argument>, <argument pos:start="115:30" pos:end="115:33"><expr pos:start="115:30" pos:end="115:33"><name pos:start="115:30" pos:end="115:33">arg1</name></expr></argument>, <argument pos:start="115:36" pos:end="115:39"><expr pos:start="115:36" pos:end="115:39"><name pos:start="115:36" pos:end="115:39">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:32"><expr pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:5">l</name> <operator pos:start="117:7" pos:end="117:7">=</operator> <operator pos:start="117:9" pos:end="117:9">&amp;</operator><name pos:start="117:10" pos:end="117:31"><name pos:start="117:10" pos:end="117:10">s</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:18">labels</name><index pos:start="117:19" pos:end="117:31">[<expr pos:start="117:20" pos:end="117:30"><name pos:start="117:20" pos:end="117:30">label_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="127:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:21">(<expr pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:9">l</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:20">has_value</name></name></expr>)</condition> <block pos:start="119:23" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:52">

        <expr_stmt pos:start="121:9" pos:end="121:52"><expr pos:start="121:9" pos:end="121:51"><call pos:start="121:9" pos:end="121:51"><name pos:start="121:9" pos:end="121:18">reloc_pc16</name><argument_list pos:start="121:19" pos:end="121:51">(<argument pos:start="121:20" pos:end="121:34"><expr pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:30"><name pos:start="121:20" pos:end="121:20">s</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:30">code_ptr</name></name> <operator pos:start="121:32" pos:end="121:32">-</operator> <literal type="number" pos:start="121:34" pos:end="121:34">1</literal></expr></argument>, <argument pos:start="121:37" pos:end="121:50"><expr pos:start="121:37" pos:end="121:50"><name pos:start="121:37" pos:end="121:50"><name pos:start="121:37" pos:end="121:37">l</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:40">u</name><operator pos:start="121:41" pos:end="121:41">.</operator><name pos:start="121:42" pos:end="121:50">value_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="127:5">else <block pos:start="123:12" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:71">

        <expr_stmt pos:start="125:9" pos:end="125:71"><expr pos:start="125:9" pos:end="125:70"><call pos:start="125:9" pos:end="125:70"><name pos:start="125:9" pos:end="125:21">tcg_out_reloc</name><argument_list pos:start="125:22" pos:end="125:70">(<argument pos:start="125:23" pos:end="125:23"><expr pos:start="125:23" pos:end="125:23"><name pos:start="125:23" pos:end="125:23">s</name></expr></argument>, <argument pos:start="125:26" pos:end="125:40"><expr pos:start="125:26" pos:end="125:40"><name pos:start="125:26" pos:end="125:36"><name pos:start="125:26" pos:end="125:26">s</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:36">code_ptr</name></name> <operator pos:start="125:38" pos:end="125:38">-</operator> <literal type="number" pos:start="125:40" pos:end="125:40">1</literal></expr></argument>, <argument pos:start="125:43" pos:end="125:53"><expr pos:start="125:43" pos:end="125:53"><name pos:start="125:43" pos:end="125:53">R_MIPS_PC16</name></expr></argument>, <argument pos:start="125:56" pos:end="125:66"><expr pos:start="125:56" pos:end="125:66"><name pos:start="125:56" pos:end="125:66">label_index</name></expr></argument>, <argument pos:start="125:69" pos:end="125:69"><expr pos:start="125:69" pos:end="125:69"><literal type="number" pos:start="125:69" pos:end="125:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:19"><expr pos:start="129:5" pos:end="129:18"><call pos:start="129:5" pos:end="129:18"><name pos:start="129:5" pos:end="129:15">tcg_out_nop</name><argument_list pos:start="129:16" pos:end="129:18">(<argument pos:start="129:17" pos:end="129:17"><expr pos:start="129:17" pos:end="129:17"><name pos:start="129:17" pos:end="129:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
