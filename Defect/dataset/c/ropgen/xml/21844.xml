<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21844.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:34">ff_intrax8_common_init</name><parameter_list pos:start="1:35" pos:end="3:59">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:49">IntraX8Context</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">w</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:74"><decl pos:start="1:55" pos:end="1:74"><type pos:start="1:55" pos:end="1:74"><name pos:start="1:55" pos:end="1:68">IDCTDSPContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">idsp</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:58"><decl pos:start="3:36" pos:end="3:58"><type pos:start="3:36" pos:end="3:58"><name pos:start="3:36" pos:end="3:49">MpegEncContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier><specifier pos:start="3:52" pos:end="3:56">const</specifier></type> <name pos:start="3:58" pos:end="3:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:27">= <expr pos:start="7:15" pos:end="7:27"><call pos:start="7:15" pos:end="7:27"><name pos:start="7:15" pos:end="7:25">x8_vlc_init</name><argument_list pos:start="7:26" pos:end="7:27">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:19"><if pos:start="9:5" pos:end="11:19">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">&lt;</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:19"><block_content pos:start="11:9" pos:end="11:19">

        <return pos:start="11:9" pos:end="11:19">return <expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">w</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:11">idsp</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">*</operator><name pos:start="15:16" pos:end="15:19">idsp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:5">w</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:8">s</name></name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:12">s</name></expr>;</expr_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:39">// two rows, 2 blocks per cannon mb</comment>

    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:5">w</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:23">prediction_table</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:57"><name pos:start="23:27" pos:end="23:36">av_mallocz</name><argument_list pos:start="23:37" pos:end="23:57">(<argument pos:start="23:38" pos:end="23:56"><expr pos:start="23:38" pos:end="23:56"><name pos:start="23:38" pos:end="23:48"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:48">mb_width</name></name> <operator pos:start="23:50" pos:end="23:50">*</operator> <literal type="number" pos:start="23:52" pos:end="23:52">2</literal> <operator pos:start="23:54" pos:end="23:54">*</operator> <literal type="number" pos:start="23:56" pos:end="23:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:28"><name pos:start="25:10" pos:end="25:10">w</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:28">prediction_table</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:44"><expr pos:start="31:5" pos:end="33:43"><call pos:start="31:5" pos:end="33:43"><name pos:start="31:5" pos:end="31:21">ff_init_scantable</name><argument_list pos:start="31:22" pos:end="33:43">(<argument pos:start="31:23" pos:end="31:46"><expr pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:23">w</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">idsp</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:46">idct_permutation</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:64"><expr pos:start="31:49" pos:end="31:64"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:64"><name pos:start="31:50" pos:end="31:50">w</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:61">scantable</name><index pos:start="31:62" pos:end="31:64">[<expr pos:start="31:63" pos:end="31:63"><literal type="number" pos:start="31:63" pos:end="31:63">0</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="33:23" pos:end="33:42"><expr pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:39">ff_wmv1_scantable</name><index pos:start="33:40" pos:end="33:42">[<expr pos:start="33:41" pos:end="33:41"><literal type="number" pos:start="33:41" pos:end="33:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:44"><expr pos:start="35:5" pos:end="37:43"><call pos:start="35:5" pos:end="37:43"><name pos:start="35:5" pos:end="35:21">ff_init_scantable</name><argument_list pos:start="35:22" pos:end="37:43">(<argument pos:start="35:23" pos:end="35:46"><expr pos:start="35:23" pos:end="35:46"><name pos:start="35:23" pos:end="35:46"><name pos:start="35:23" pos:end="35:23">w</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:29">idsp</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:46">idct_permutation</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:64"><expr pos:start="35:49" pos:end="35:64"><operator pos:start="35:49" pos:end="35:49">&amp;</operator><name pos:start="35:50" pos:end="35:64"><name pos:start="35:50" pos:end="35:50">w</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:61">scantable</name><index pos:start="35:62" pos:end="35:64">[<expr pos:start="35:63" pos:end="35:63"><literal type="number" pos:start="35:63" pos:end="35:63">1</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="37:23" pos:end="37:42"><expr pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:39">ff_wmv1_scantable</name><index pos:start="37:40" pos:end="37:42">[<expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:44"><expr pos:start="39:5" pos:end="41:43"><call pos:start="39:5" pos:end="41:43"><name pos:start="39:5" pos:end="39:21">ff_init_scantable</name><argument_list pos:start="39:22" pos:end="41:43">(<argument pos:start="39:23" pos:end="39:46"><expr pos:start="39:23" pos:end="39:46"><name pos:start="39:23" pos:end="39:46"><name pos:start="39:23" pos:end="39:23">w</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:29">idsp</name><operator pos:start="39:30" pos:end="39:30">.</operator><name pos:start="39:31" pos:end="39:46">idct_permutation</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:64"><expr pos:start="39:49" pos:end="39:64"><operator pos:start="39:49" pos:end="39:49">&amp;</operator><name pos:start="39:50" pos:end="39:64"><name pos:start="39:50" pos:end="39:50">w</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:61">scantable</name><index pos:start="39:62" pos:end="39:64">[<expr pos:start="39:63" pos:end="39:63"><literal type="number" pos:start="39:63" pos:end="39:63">2</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:42"><expr pos:start="41:23" pos:end="41:42"><name pos:start="41:23" pos:end="41:42"><name pos:start="41:23" pos:end="41:39">ff_wmv1_scantable</name><index pos:start="41:40" pos:end="41:42">[<expr pos:start="41:41" pos:end="41:41"><literal type="number" pos:start="41:41" pos:end="41:41">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><call pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:22">ff_intrax8dsp_init</name><argument_list pos:start="45:23" pos:end="45:31">(<argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:25">w</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:30">dsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
