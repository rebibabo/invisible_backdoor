<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5259.c" pos:tabs="8"><function pos:start="1:1" pos:end="44:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">gicv3_cpuif_update</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:37">GICv3CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">cs</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="44:1">{<block_content pos:start="4:5" pos:end="43:43">
    <comment type="block" pos:start="3:5" pos:end="3:67">/* Tell the CPU about its highest priority pending interrupt */</comment>
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:20"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:16">irqlevel</name> <init pos:start="4:18" pos:end="4:20">= <expr pos:start="4:20" pos:end="4:20"><literal type="number" pos:start="4:20" pos:end="4:20">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">fiqlevel</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:35"><decl pos:start="6:5" pos:end="6:34"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:10">ARMCPU</name> <modifier pos:start="6:12" pos:end="6:12">*</modifier></type><name pos:start="6:13" pos:end="6:15">cpu</name> <init pos:start="6:17" pos:end="6:34">= <expr pos:start="6:19" pos:end="6:34"><call pos:start="6:19" pos:end="6:34"><name pos:start="6:19" pos:end="6:25">ARM_CPU</name><argument_list pos:start="6:26" pos:end="6:34">(<argument pos:start="6:27" pos:end="6:33"><expr pos:start="6:27" pos:end="6:33"><name pos:start="6:27" pos:end="6:33"><name pos:start="6:27" pos:end="6:28">cs</name><operator pos:start="6:29" pos:end="6:30">-&gt;</operator><name pos:start="6:31" pos:end="6:33">cpu</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUARMState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="9:58"><expr pos:start="8:5" pos:end="9:57"><call pos:start="8:5" pos:end="9:57"><name pos:start="8:5" pos:end="8:28">trace_gicv3_cpuif_update</name><argument_list pos:start="8:29" pos:end="9:57">(<argument pos:start="8:30" pos:end="8:51"><expr pos:start="8:30" pos:end="8:51"><call pos:start="8:30" pos:end="8:51"><name pos:start="8:30" pos:end="8:47">gicv3_redist_affid</name><argument_list pos:start="8:48" pos:end="8:51">(<argument pos:start="8:49" pos:end="8:50"><expr pos:start="8:49" pos:end="8:50"><name pos:start="8:49" pos:end="8:50">cs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="8:54" pos:end="8:65"><expr pos:start="8:54" pos:end="8:65"><name pos:start="8:54" pos:end="8:65"><name pos:start="8:54" pos:end="8:55">cs</name><operator pos:start="8:56" pos:end="8:57">-&gt;</operator><name pos:start="8:58" pos:end="8:61">hppi</name><operator pos:start="8:62" pos:end="8:62">.</operator><name pos:start="8:63" pos:end="8:65">irq</name></name></expr></argument>,
                             <argument pos:start="9:30" pos:end="9:41"><expr pos:start="9:30" pos:end="9:41"><name pos:start="9:30" pos:end="9:41"><name pos:start="9:30" pos:end="9:31">cs</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:37">hppi</name><operator pos:start="9:38" pos:end="9:38">.</operator><name pos:start="9:39" pos:end="9:41">grp</name></name></expr></argument>, <argument pos:start="9:44" pos:end="9:56"><expr pos:start="9:44" pos:end="9:56"><name pos:start="9:44" pos:end="9:56"><name pos:start="9:44" pos:end="9:45">cs</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:51">hppi</name><operator pos:start="9:52" pos:end="9:52">.</operator><name pos:start="9:53" pos:end="9:56">prio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="15:5"><if pos:start="10:5" pos:end="15:5">if <condition pos:start="10:8" pos:end="10:71">(<expr pos:start="10:9" pos:end="10:70"><name pos:start="10:9" pos:end="10:20"><name pos:start="10:9" pos:end="10:10">cs</name><operator pos:start="10:11" pos:end="10:12">-&gt;</operator><name pos:start="10:13" pos:end="10:16">hppi</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:20">grp</name></name> <operator pos:start="10:22" pos:end="10:23">==</operator> <name pos:start="10:25" pos:end="10:32">GICV3_G1</name> <operator pos:start="10:34" pos:end="10:35">&amp;&amp;</operator> <operator pos:start="10:37" pos:end="10:37">!</operator><call pos:start="10:38" pos:end="10:70"><name pos:start="10:38" pos:end="10:48">arm_feature</name><argument_list pos:start="10:49" pos:end="10:70">(<argument pos:start="10:50" pos:end="10:52"><expr pos:start="10:50" pos:end="10:52"><name pos:start="10:50" pos:end="10:52">env</name></expr></argument>, <argument pos:start="10:55" pos:end="10:69"><expr pos:start="10:55" pos:end="10:69"><name pos:start="10:55" pos:end="10:69">ARM_FEATURE_EL3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="10:73" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:32">
        <comment type="block" pos:start="11:9" pos:end="13:11">/* If a Security-enabled GIC sends a G1S interrupt to a
         * Security-disabled CPU, we must treat it as if it were G0.
         */</comment>
        <expr_stmt pos:start="14:9" pos:end="14:32"><expr pos:start="14:9" pos:end="14:31"><name pos:start="14:9" pos:end="14:20"><name pos:start="14:9" pos:end="14:10">cs</name><operator pos:start="14:11" pos:end="14:12">-&gt;</operator><name pos:start="14:13" pos:end="14:16">hppi</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:20">grp</name></name> <operator pos:start="14:22" pos:end="14:22">=</operator> <name pos:start="14:24" pos:end="14:31">GICV3_G0</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="16:5" pos:end="40:5"><if pos:start="16:5" pos:end="40:5">if <condition pos:start="16:8" pos:end="16:33">(<expr pos:start="16:9" pos:end="16:32"><call pos:start="16:9" pos:end="16:32"><name pos:start="16:9" pos:end="16:28">icc_hppi_can_preempt</name><argument_list pos:start="16:29" pos:end="16:32">(<argument pos:start="16:30" pos:end="16:31"><expr pos:start="16:30" pos:end="16:31"><name pos:start="16:30" pos:end="16:31">cs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:35" pos:end="40:5">{<block_content pos:start="20:9" pos:end="39:9">
        <comment type="block" pos:start="17:9" pos:end="19:11">/* We have an interrupt: should we signal it as IRQ or FIQ?
         * This is described in the GICv3 spec section 4.6.2.
         */</comment>
        <decl_stmt pos:start="20:9" pos:end="20:19"><decl pos:start="20:9" pos:end="20:18"><type pos:start="20:9" pos:end="20:12"><name pos:start="20:9" pos:end="20:12">bool</name></type> <name pos:start="20:14" pos:end="20:18">isfiq</name></decl>;</decl_stmt>
        <switch pos:start="21:9" pos:end="34:9">switch <condition pos:start="21:16" pos:end="21:29">(<expr pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:18">cs</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">hppi</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:28">grp</name></name></expr>)</condition> <block pos:start="21:31" pos:end="34:9">{<block_content pos:start="22:9" pos:end="33:35">
        <case pos:start="22:9" pos:end="22:22">case <expr pos:start="22:14" pos:end="22:21"><name pos:start="22:14" pos:end="22:21">GICV3_G0</name></expr>:</case>
            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:17">isfiq</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:24">true</name></expr>;</expr_stmt>
            <break pos:start="24:13" pos:end="24:18">break;</break>
        <case pos:start="25:9" pos:end="25:22">case <expr pos:start="25:14" pos:end="25:21"><name pos:start="25:14" pos:end="25:21">GICV3_G1</name></expr>:</case>
            <expr_stmt pos:start="26:13" pos:end="27:75"><expr pos:start="26:13" pos:end="27:74"><name pos:start="26:13" pos:end="26:17">isfiq</name> <operator pos:start="26:19" pos:end="26:19">=</operator> <operator pos:start="26:21" pos:end="26:21">(</operator><operator pos:start="26:22" pos:end="26:22">!</operator><call pos:start="26:23" pos:end="26:40"><name pos:start="26:23" pos:end="26:35">arm_is_secure</name><argument_list pos:start="26:36" pos:end="26:40">(<argument pos:start="26:37" pos:end="26:39"><expr pos:start="26:37" pos:end="26:39"><name pos:start="26:37" pos:end="26:39">env</name></expr></argument>)</argument_list></call> <operator pos:start="26:42" pos:end="26:43">||</operator>
                     <operator pos:start="27:22" pos:end="27:22">(</operator><call pos:start="27:23" pos:end="27:41"><name pos:start="27:23" pos:end="27:36">arm_current_el</name><argument_list pos:start="27:37" pos:end="27:41">(<argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">env</name></expr></argument>)</argument_list></call> <operator pos:start="27:43" pos:end="27:44">==</operator> <literal type="number" pos:start="27:46" pos:end="27:46">3</literal> <operator pos:start="27:48" pos:end="27:49">&amp;&amp;</operator> <call pos:start="27:51" pos:end="27:72"><name pos:start="27:51" pos:end="27:64">arm_el_is_aa64</name><argument_list pos:start="27:65" pos:end="27:72">(<argument pos:start="27:66" pos:end="27:68"><expr pos:start="27:66" pos:end="27:68"><name pos:start="27:66" pos:end="27:68">env</name></expr></argument>, <argument pos:start="27:71" pos:end="27:71"><expr pos:start="27:71" pos:end="27:71"><literal type="number" pos:start="27:71" pos:end="27:71">3</literal></expr></argument>)</argument_list></call><operator pos:start="27:73" pos:end="27:73">)</operator><operator pos:start="27:74" pos:end="27:74">)</operator></expr>;</expr_stmt>
            <break pos:start="28:13" pos:end="28:18">break;</break>
        <case pos:start="29:9" pos:end="29:24">case <expr pos:start="29:14" pos:end="29:23"><name pos:start="29:14" pos:end="29:23">GICV3_G1NS</name></expr>:</case>
            <expr_stmt pos:start="30:13" pos:end="30:39"><expr pos:start="30:13" pos:end="30:38"><name pos:start="30:13" pos:end="30:17">isfiq</name> <operator pos:start="30:19" pos:end="30:19">=</operator> <call pos:start="30:21" pos:end="30:38"><name pos:start="30:21" pos:end="30:33">arm_is_secure</name><argument_list pos:start="30:34" pos:end="30:38">(<argument pos:start="30:35" pos:end="30:37"><expr pos:start="30:35" pos:end="30:37"><name pos:start="30:35" pos:end="30:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="31:13" pos:end="31:18">break;</break>
        <default pos:start="32:9" pos:end="32:16">default:</default>
            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><call pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:32">g_assert_not_reached</name><argument_list pos:start="33:33" pos:end="33:34">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></switch>
        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="37:9">if <condition pos:start="35:12" pos:end="35:18">(<expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:17">isfiq</name></expr>)</condition> <block pos:start="35:20" pos:end="37:9">{<block_content pos:start="36:13" pos:end="36:25">
            <expr_stmt pos:start="36:13" pos:end="36:25"><expr pos:start="36:13" pos:end="36:24"><name pos:start="36:13" pos:end="36:20">fiqlevel</name> <operator pos:start="36:22" pos:end="36:22">=</operator> <literal type="number" pos:start="36:24" pos:end="36:24">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="37:11" pos:end="39:9">else <block pos:start="37:16" pos:end="39:9">{<block_content pos:start="38:13" pos:end="38:25">
            <expr_stmt pos:start="38:13" pos:end="38:25"><expr pos:start="38:13" pos:end="38:24"><name pos:start="38:13" pos:end="38:20">irqlevel</name> <operator pos:start="38:22" pos:end="38:22">=</operator> <literal type="number" pos:start="38:24" pos:end="38:24">1</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:75"><expr pos:start="41:5" pos:end="41:74"><call pos:start="41:5" pos:end="41:74"><name pos:start="41:5" pos:end="41:30">trace_gicv3_cpuif_set_irqs</name><argument_list pos:start="41:31" pos:end="41:74">(<argument pos:start="41:32" pos:end="41:53"><expr pos:start="41:32" pos:end="41:53"><call pos:start="41:32" pos:end="41:53"><name pos:start="41:32" pos:end="41:49">gicv3_redist_affid</name><argument_list pos:start="41:50" pos:end="41:53">(<argument pos:start="41:51" pos:end="41:52"><expr pos:start="41:51" pos:end="41:52"><name pos:start="41:51" pos:end="41:52">cs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:56" pos:end="41:63"><expr pos:start="41:56" pos:end="41:63"><name pos:start="41:56" pos:end="41:63">fiqlevel</name></expr></argument>, <argument pos:start="41:66" pos:end="41:73"><expr pos:start="41:66" pos:end="41:73"><name pos:start="41:66" pos:end="41:73">irqlevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:43"><expr pos:start="42:5" pos:end="42:42"><call pos:start="42:5" pos:end="42:42"><name pos:start="42:5" pos:end="42:16">qemu_set_irq</name><argument_list pos:start="42:17" pos:end="42:42">(<argument pos:start="42:18" pos:end="42:31"><expr pos:start="42:18" pos:end="42:31"><name pos:start="42:18" pos:end="42:31"><name pos:start="42:18" pos:end="42:19">cs</name><operator pos:start="42:20" pos:end="42:21">-&gt;</operator><name pos:start="42:22" pos:end="42:31">parent_fiq</name></name></expr></argument>, <argument pos:start="42:34" pos:end="42:41"><expr pos:start="42:34" pos:end="42:41"><name pos:start="42:34" pos:end="42:41">fiqlevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><call pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:16">qemu_set_irq</name><argument_list pos:start="43:17" pos:end="43:42">(<argument pos:start="43:18" pos:end="43:31"><expr pos:start="43:18" pos:end="43:31"><name pos:start="43:18" pos:end="43:31"><name pos:start="43:18" pos:end="43:19">cs</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:31">parent_irq</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:41"><expr pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:41">irqlevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
