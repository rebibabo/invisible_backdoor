<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7392.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">v4l2_set_parameters</name><parameter_list pos:start="1:31" pos:end="1:51">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="229:1">{<block_content pos:start="5:5" pos:end="227:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:29">s1</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:24">v4l2_standard</name></name></type> <name pos:start="7:26" pos:end="7:33">standard</name> <init pos:start="7:35" pos:end="7:41">= <expr pos:start="7:37" pos:end="7:41"><block pos:start="7:37" pos:end="7:41">{ <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:26">v4l2_streamparm</name></name></type> <name pos:start="9:28" pos:end="9:37">streamparm</name> <init pos:start="9:39" pos:end="9:45">= <expr pos:start="9:41" pos:end="9:45"><block pos:start="9:41" pos:end="9:45">{ <expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:21">v4l2_fract</name></name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">tpf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AVRational</name></type> <name pos:start="13:16" pos:end="13:26">framerate_q</name> <init pos:start="13:28" pos:end="13:34">= <expr pos:start="13:30" pos:end="13:34"><block pos:start="13:30" pos:end="13:34">{ <expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="21:68">(<expr pos:start="19:9" pos:end="21:67"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">framerate</name></name> <operator pos:start="19:22" pos:end="19:23">&amp;&amp;</operator>

        <operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:62"><name pos:start="21:16" pos:end="21:34">av_parse_video_rate</name><argument_list pos:start="21:35" pos:end="21:62">(<argument pos:start="21:36" pos:end="21:47"><expr pos:start="21:36" pos:end="21:47"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:47">framerate_q</name></expr></argument>, <argument pos:start="21:50" pos:end="21:61"><expr pos:start="21:50" pos:end="21:61"><name pos:start="21:50" pos:end="21:61"><name pos:start="21:50" pos:end="21:50">s</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:61">framerate</name></name></expr></argument>)</argument_list></call><operator pos:start="21:63" pos:end="21:63">)</operator> <operator pos:start="21:65" pos:end="21:65">&lt;</operator> <literal type="number" pos:start="21:67" pos:end="21:67">0</literal></expr>)</condition> <block pos:start="21:70" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:19">

        <expr_stmt pos:start="23:9" pos:end="25:29"><expr pos:start="23:9" pos:end="25:28"><call pos:start="23:9" pos:end="25:28"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="25:28">(<argument pos:start="23:16" pos:end="23:17"><expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">s1</name></expr></argument>, <argument pos:start="23:20" pos:end="23:31"><expr pos:start="23:20" pos:end="23:31"><name pos:start="23:20" pos:end="23:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:34" pos:end="23:68"><expr pos:start="23:34" pos:end="23:68"><literal type="string" pos:start="23:34" pos:end="23:68">"Could not parse framerate '%s'.\n"</literal></expr></argument>,

               <argument pos:start="25:16" pos:end="25:27"><expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:27">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="89:5"><if pos:start="33:5" pos:end="89:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">standard</name></name></expr>)</condition> <block pos:start="33:22" pos:end="89:5">{<block_content pos:start="35:9" pos:end="87:9">

        <if_stmt pos:start="35:9" pos:end="87:9"><if pos:start="35:9" pos:end="81:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">std_id</name></name></expr>)</condition> <block pos:start="35:24" pos:end="81:9">{<block_content pos:start="37:13" pos:end="79:13">

            <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:76"><expr pos:start="39:13" pos:end="39:75"><call pos:start="39:13" pos:end="39:75"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:75">(<argument pos:start="39:20" pos:end="39:21"><expr pos:start="39:20" pos:end="39:21"><name pos:start="39:20" pos:end="39:21">s1</name></expr></argument>, <argument pos:start="39:24" pos:end="39:35"><expr pos:start="39:24" pos:end="39:35"><name pos:start="39:24" pos:end="39:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="39:38" pos:end="39:61"><expr pos:start="39:38" pos:end="39:61"><literal type="string" pos:start="39:38" pos:end="39:61">"Setting standard: %s\n"</literal></expr></argument>, <argument pos:start="39:64" pos:end="39:74"><expr pos:start="39:64" pos:end="39:74"><name pos:start="39:64" pos:end="39:74"><name pos:start="39:64" pos:end="39:64">s</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:74">standard</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="41:13" pos:end="41:33">/* set tv standard */</comment>

            <for pos:start="43:13" pos:end="59:13">for <control pos:start="43:17" pos:end="43:30">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:25">;</condition> <incr pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:27">i</name><operator pos:start="43:28" pos:end="43:29">++</operator></expr></incr>)</control> <block pos:start="43:32" pos:end="59:13">{<block_content pos:start="45:17" pos:end="57:26">

                <expr_stmt pos:start="45:17" pos:end="45:35"><expr pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:24">standard</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:30">index</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <name pos:start="45:34" pos:end="45:34">i</name></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if <condition pos:start="47:20" pos:end="47:69">(<expr pos:start="47:21" pos:end="47:68"><call pos:start="47:21" pos:end="47:64"><name pos:start="47:21" pos:end="47:30">v4l2_ioctl</name><argument_list pos:start="47:31" pos:end="47:64">(<argument pos:start="47:32" pos:end="47:36"><expr pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:32">s</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:36">fd</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:52"><expr pos:start="47:39" pos:end="47:52"><name pos:start="47:39" pos:end="47:52">VIDIOC_ENUMSTD</name></expr></argument>, <argument pos:start="47:55" pos:end="47:63"><expr pos:start="47:55" pos:end="47:63"><operator pos:start="47:55" pos:end="47:55">&amp;</operator><name pos:start="47:56" pos:end="47:63">standard</name></expr></argument>)</argument_list></call> <operator pos:start="47:66" pos:end="47:66">&lt;</operator> <literal type="number" pos:start="47:68" pos:end="47:68">0</literal></expr>)</condition> <block pos:start="47:71" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:26">

                    <expr_stmt pos:start="49:21" pos:end="49:41"><expr pos:start="49:21" pos:end="49:40"><name pos:start="49:21" pos:end="49:23">ret</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:40"><name pos:start="49:27" pos:end="49:33">AVERROR</name><argument_list pos:start="49:34" pos:end="49:40">(<argument pos:start="49:35" pos:end="49:39"><expr pos:start="49:35" pos:end="49:39"><name pos:start="49:35" pos:end="49:39">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="51:21" pos:end="51:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="55:17" pos:end="57:26"><if pos:start="55:17" pos:end="57:26">if <condition pos:start="55:20" pos:end="55:63">(<expr pos:start="55:21" pos:end="55:62"><operator pos:start="55:21" pos:end="55:21">!</operator><call pos:start="55:22" pos:end="55:62"><name pos:start="55:22" pos:end="55:34">av_strcasecmp</name><argument_list pos:start="55:35" pos:end="55:62">(<argument pos:start="55:36" pos:end="55:48"><expr pos:start="55:36" pos:end="55:48"><name pos:start="55:36" pos:end="55:48"><name pos:start="55:36" pos:end="55:43">standard</name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:48">name</name></name></expr></argument>, <argument pos:start="55:51" pos:end="55:61"><expr pos:start="55:51" pos:end="55:61"><name pos:start="55:51" pos:end="55:61"><name pos:start="55:51" pos:end="55:51">s</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:61">standard</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:26"><block_content pos:start="57:21" pos:end="57:26">

                    <break pos:start="57:21" pos:end="57:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if <condition pos:start="61:16" pos:end="61:24">(<expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:19">ret</name> <operator pos:start="61:21" pos:end="61:21">&lt;</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>)</condition> <block pos:start="61:26" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:27">

                <expr_stmt pos:start="63:17" pos:end="63:96"><expr pos:start="63:17" pos:end="63:95"><call pos:start="63:17" pos:end="63:95"><name pos:start="63:17" pos:end="63:22">av_log</name><argument_list pos:start="63:23" pos:end="63:95">(<argument pos:start="63:24" pos:end="63:25"><expr pos:start="63:24" pos:end="63:25"><name pos:start="63:24" pos:end="63:25">s1</name></expr></argument>, <argument pos:start="63:28" pos:end="63:39"><expr pos:start="63:28" pos:end="63:39"><name pos:start="63:28" pos:end="63:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:42" pos:end="63:81"><expr pos:start="63:42" pos:end="63:81"><literal type="string" pos:start="63:42" pos:end="63:81">"Unknown or unsupported standard '%s'\n"</literal></expr></argument>, <argument pos:start="63:84" pos:end="63:94"><expr pos:start="63:84" pos:end="63:94"><name pos:start="63:84" pos:end="63:94"><name pos:start="63:84" pos:end="63:84">s</name><operator pos:start="63:85" pos:end="63:86">-&gt;</operator><name pos:start="63:87" pos:end="63:94">standard</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="65:17" pos:end="65:27">return <expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="71:13" pos:end="79:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:66">(<expr pos:start="71:17" pos:end="71:65"><call pos:start="71:17" pos:end="71:61"><name pos:start="71:17" pos:end="71:26">v4l2_ioctl</name><argument_list pos:start="71:27" pos:end="71:61">(<argument pos:start="71:28" pos:end="71:32"><expr pos:start="71:28" pos:end="71:32"><name pos:start="71:28" pos:end="71:32"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:32">fd</name></name></expr></argument>, <argument pos:start="71:35" pos:end="71:46"><expr pos:start="71:35" pos:end="71:46"><name pos:start="71:35" pos:end="71:46">VIDIOC_S_STD</name></expr></argument>, <argument pos:start="71:49" pos:end="71:60"><expr pos:start="71:49" pos:end="71:60"><operator pos:start="71:49" pos:end="71:49">&amp;</operator><name pos:start="71:50" pos:end="71:60"><name pos:start="71:50" pos:end="71:57">standard</name><operator pos:start="71:58" pos:end="71:58">.</operator><name pos:start="71:59" pos:end="71:60">id</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:63" pos:end="71:63">&lt;</operator> <literal type="number" pos:start="71:65" pos:end="71:65">0</literal></expr>)</condition> <block pos:start="71:68" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:27">

                <expr_stmt pos:start="73:17" pos:end="73:37"><expr pos:start="73:17" pos:end="73:36"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:36"><name pos:start="73:23" pos:end="73:29">AVERROR</name><argument_list pos:start="73:30" pos:end="73:36">(<argument pos:start="73:31" pos:end="73:35"><expr pos:start="73:31" pos:end="73:35"><name pos:start="73:31" pos:end="73:35">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:87"><expr pos:start="75:17" pos:end="75:86"><call pos:start="75:17" pos:end="75:86"><name pos:start="75:17" pos:end="75:22">av_log</name><argument_list pos:start="75:23" pos:end="75:86">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">s1</name></expr></argument>, <argument pos:start="75:28" pos:end="75:39"><expr pos:start="75:28" pos:end="75:39"><name pos:start="75:28" pos:end="75:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:42" pos:end="75:68"><expr pos:start="75:42" pos:end="75:68"><literal type="string" pos:start="75:42" pos:end="75:68">"ioctl(VIDIOC_S_STD): %s\n"</literal></expr></argument>, <argument pos:start="75:71" pos:end="75:85"><expr pos:start="75:71" pos:end="75:85"><call pos:start="75:71" pos:end="75:85"><name pos:start="75:71" pos:end="75:80">av_err2str</name><argument_list pos:start="75:81" pos:end="75:85">(<argument pos:start="75:82" pos:end="75:84"><expr pos:start="75:82" pos:end="75:84"><name pos:start="75:82" pos:end="75:84">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="77:17" pos:end="77:27">return <expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="87:9">else <block pos:start="81:16" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:66">

            <expr_stmt pos:start="83:13" pos:end="85:66"><expr pos:start="83:13" pos:end="85:65"><call pos:start="83:13" pos:end="85:65"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="85:65">(<argument pos:start="83:20" pos:end="83:21"><expr pos:start="83:20" pos:end="83:21"><name pos:start="83:20" pos:end="83:21">s1</name></expr></argument>, <argument pos:start="83:24" pos:end="83:37"><expr pos:start="83:24" pos:end="83:37"><name pos:start="83:24" pos:end="83:37">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:64"><expr pos:start="85:20" pos:end="85:64"><literal type="string" pos:start="85:20" pos:end="85:64">"This device does not support any standard\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:22">/* get standard */</comment>

    <if_stmt pos:start="95:5" pos:end="139:5"><if pos:start="95:5" pos:end="135:5">if <condition pos:start="95:8" pos:end="95:57">(<expr pos:start="95:9" pos:end="95:56"><call pos:start="95:9" pos:end="95:51"><name pos:start="95:9" pos:end="95:18">v4l2_ioctl</name><argument_list pos:start="95:19" pos:end="95:51">(<argument pos:start="95:20" pos:end="95:24"><expr pos:start="95:20" pos:end="95:24"><name pos:start="95:20" pos:end="95:24"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:24">fd</name></name></expr></argument>, <argument pos:start="95:27" pos:end="95:38"><expr pos:start="95:27" pos:end="95:38"><name pos:start="95:27" pos:end="95:38">VIDIOC_G_STD</name></expr></argument>, <argument pos:start="95:41" pos:end="95:50"><expr pos:start="95:41" pos:end="95:50"><operator pos:start="95:41" pos:end="95:41">&amp;</operator><name pos:start="95:42" pos:end="95:50"><name pos:start="95:42" pos:end="95:42">s</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:50">std_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:53" pos:end="95:54">==</operator> <literal type="number" pos:start="95:56" pos:end="95:56">0</literal></expr>)</condition> <block pos:start="95:59" pos:end="135:5">{<block_content pos:start="97:9" pos:end="133:9">

        <expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:11">tpf</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <operator pos:start="97:15" pos:end="97:15">&amp;</operator><name pos:start="97:16" pos:end="97:35"><name pos:start="97:16" pos:end="97:23">standard</name><operator pos:start="97:24" pos:end="97:24">.</operator><name pos:start="97:25" pos:end="97:35">frameperiod</name></name></expr>;</expr_stmt>

        <for pos:start="99:9" pos:end="133:9">for <control pos:start="99:13" pos:end="99:26">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">i</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:21">;</condition> <incr pos:start="99:23" pos:end="99:25"><expr pos:start="99:23" pos:end="99:25"><name pos:start="99:23" pos:end="99:23">i</name><operator pos:start="99:24" pos:end="99:25">++</operator></expr></incr>)</control> <block pos:start="99:28" pos:end="133:9">{<block_content pos:start="101:13" pos:end="131:13">

            <expr_stmt pos:start="101:13" pos:end="101:31"><expr pos:start="101:13" pos:end="101:30"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:20">standard</name><operator pos:start="101:21" pos:end="101:21">.</operator><name pos:start="101:22" pos:end="101:26">index</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:30">i</name></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="119:13"><if pos:start="103:13" pos:end="119:13">if <condition pos:start="103:16" pos:end="103:65">(<expr pos:start="103:17" pos:end="103:64"><call pos:start="103:17" pos:end="103:60"><name pos:start="103:17" pos:end="103:26">v4l2_ioctl</name><argument_list pos:start="103:27" pos:end="103:60">(<argument pos:start="103:28" pos:end="103:32"><expr pos:start="103:28" pos:end="103:32"><name pos:start="103:28" pos:end="103:32"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:32">fd</name></name></expr></argument>, <argument pos:start="103:35" pos:end="103:48"><expr pos:start="103:35" pos:end="103:48"><name pos:start="103:35" pos:end="103:48">VIDIOC_ENUMSTD</name></expr></argument>, <argument pos:start="103:51" pos:end="103:59"><expr pos:start="103:51" pos:end="103:59"><operator pos:start="103:51" pos:end="103:51">&amp;</operator><name pos:start="103:52" pos:end="103:59">standard</name></expr></argument>)</argument_list></call> <operator pos:start="103:62" pos:end="103:62">&lt;</operator> <literal type="number" pos:start="103:64" pos:end="103:64">0</literal></expr>)</condition> <block pos:start="103:67" pos:end="119:13">{<block_content pos:start="105:17" pos:end="117:27">

                <expr_stmt pos:start="105:17" pos:end="105:37"><expr pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="105:36"><name pos:start="105:23" pos:end="105:29">AVERROR</name><argument_list pos:start="105:30" pos:end="105:36">(<argument pos:start="105:31" pos:end="105:35"><expr pos:start="105:31" pos:end="105:35"><name pos:start="105:31" pos:end="105:35">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="107:17" pos:end="113:17"><if pos:start="107:17" pos:end="113:17">if <condition pos:start="107:20" pos:end="107:43">(<expr pos:start="107:21" pos:end="107:42"><name pos:start="107:21" pos:end="107:23">ret</name> <operator pos:start="107:25" pos:end="107:26">==</operator> <call pos:start="107:28" pos:end="107:42"><name pos:start="107:28" pos:end="107:34">AVERROR</name><argument_list pos:start="107:35" pos:end="107:42">(<argument pos:start="107:36" pos:end="107:41"><expr pos:start="107:36" pos:end="107:41"><name pos:start="107:36" pos:end="107:41">EINVAL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:45" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:26">

                    <expr_stmt pos:start="109:21" pos:end="109:64"><expr pos:start="109:21" pos:end="109:63"><name pos:start="109:21" pos:end="109:23">tpf</name> <operator pos:start="109:25" pos:end="109:25">=</operator> <operator pos:start="109:27" pos:end="109:27">&amp;</operator><name pos:start="109:28" pos:end="109:63"><name pos:start="109:28" pos:end="109:37">streamparm</name><operator pos:start="109:38" pos:end="109:38">.</operator><name pos:start="109:39" pos:end="109:42">parm</name><operator pos:start="109:43" pos:end="109:43">.</operator><name pos:start="109:44" pos:end="109:50">capture</name><operator pos:start="109:51" pos:end="109:51">.</operator><name pos:start="109:52" pos:end="109:63">timeperframe</name></name></expr>;</expr_stmt>

                    <break pos:start="111:21" pos:end="111:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:89"><expr pos:start="115:17" pos:end="115:88"><call pos:start="115:17" pos:end="115:88"><name pos:start="115:17" pos:end="115:22">av_log</name><argument_list pos:start="115:23" pos:end="115:88">(<argument pos:start="115:24" pos:end="115:25"><expr pos:start="115:24" pos:end="115:25"><name pos:start="115:24" pos:end="115:25">s1</name></expr></argument>, <argument pos:start="115:28" pos:end="115:39"><expr pos:start="115:28" pos:end="115:39"><name pos:start="115:28" pos:end="115:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:42" pos:end="115:70"><expr pos:start="115:42" pos:end="115:70"><literal type="string" pos:start="115:42" pos:end="115:70">"ioctl(VIDIOC_ENUMSTD): %s\n"</literal></expr></argument>, <argument pos:start="115:73" pos:end="115:87"><expr pos:start="115:73" pos:end="115:87"><call pos:start="115:73" pos:end="115:87"><name pos:start="115:73" pos:end="115:82">av_err2str</name><argument_list pos:start="115:83" pos:end="115:87">(<argument pos:start="115:84" pos:end="115:86"><expr pos:start="115:84" pos:end="115:86"><name pos:start="115:84" pos:end="115:86">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="117:17" pos:end="117:27">return <expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="121:13" pos:end="131:13"><if pos:start="121:13" pos:end="131:13">if <condition pos:start="121:16" pos:end="121:41">(<expr pos:start="121:17" pos:end="121:40"><name pos:start="121:17" pos:end="121:27"><name pos:start="121:17" pos:end="121:24">standard</name><operator pos:start="121:25" pos:end="121:25">.</operator><name pos:start="121:26" pos:end="121:27">id</name></name> <operator pos:start="121:29" pos:end="121:30">==</operator> <name pos:start="121:32" pos:end="121:40"><name pos:start="121:32" pos:end="121:32">s</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:40">std_id</name></name></expr>)</condition> <block pos:start="121:43" pos:end="131:13">{<block_content pos:start="123:17" pos:end="129:22">

                <expr_stmt pos:start="123:17" pos:end="127:95"><expr pos:start="123:17" pos:end="127:94"><call pos:start="123:17" pos:end="127:94"><name pos:start="123:17" pos:end="123:22">av_log</name><argument_list pos:start="123:23" pos:end="127:94">(<argument pos:start="123:24" pos:end="123:25"><expr pos:start="123:24" pos:end="123:25"><name pos:start="123:24" pos:end="123:25">s1</name></expr></argument>, <argument pos:start="123:28" pos:end="123:39"><expr pos:start="123:28" pos:end="123:39"><name pos:start="123:28" pos:end="123:39">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="125:24" pos:end="125:82"><expr pos:start="125:24" pos:end="125:82"><literal type="string" pos:start="125:24" pos:end="125:52">"Current standard: %s, id: %"</literal><name pos:start="125:53" pos:end="125:58">PRIx64</name><literal type="string" pos:start="125:59" pos:end="125:82">", frameperiod: %d/%d\n"</literal></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:36"><expr pos:start="127:24" pos:end="127:36"><name pos:start="127:24" pos:end="127:36"><name pos:start="127:24" pos:end="127:31">standard</name><operator pos:start="127:32" pos:end="127:32">.</operator><name pos:start="127:33" pos:end="127:36">name</name></name></expr></argument>, <argument pos:start="127:39" pos:end="127:59"><expr pos:start="127:39" pos:end="127:59"><operator pos:start="127:39" pos:end="127:39">(</operator><name pos:start="127:40" pos:end="127:47">uint64_t</name><operator pos:start="127:48" pos:end="127:48">)</operator><name pos:start="127:49" pos:end="127:59"><name pos:start="127:49" pos:end="127:56">standard</name><operator pos:start="127:57" pos:end="127:57">.</operator><name pos:start="127:58" pos:end="127:59">id</name></name></expr></argument>, <argument pos:start="127:62" pos:end="127:75"><expr pos:start="127:62" pos:end="127:75"><name pos:start="127:62" pos:end="127:75"><name pos:start="127:62" pos:end="127:64">tpf</name><operator pos:start="127:65" pos:end="127:66">-&gt;</operator><name pos:start="127:67" pos:end="127:75">numerator</name></name></expr></argument>, <argument pos:start="127:78" pos:end="127:93"><expr pos:start="127:78" pos:end="127:93"><name pos:start="127:78" pos:end="127:93"><name pos:start="127:78" pos:end="127:80">tpf</name><operator pos:start="127:81" pos:end="127:82">-&gt;</operator><name pos:start="127:83" pos:end="127:93">denominator</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="129:17" pos:end="129:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="139:5">else <block pos:start="135:12" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:52">

        <expr_stmt pos:start="137:9" pos:end="137:52"><expr pos:start="137:9" pos:end="137:51"><name pos:start="137:9" pos:end="137:11">tpf</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <operator pos:start="137:15" pos:end="137:15">&amp;</operator><name pos:start="137:16" pos:end="137:51"><name pos:start="137:16" pos:end="137:25">streamparm</name><operator pos:start="137:26" pos:end="137:26">.</operator><name pos:start="137:27" pos:end="137:30">parm</name><operator pos:start="137:31" pos:end="137:31">.</operator><name pos:start="137:32" pos:end="137:38">capture</name><operator pos:start="137:39" pos:end="137:39">.</operator><name pos:start="137:40" pos:end="137:51">timeperframe</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:50"><expr pos:start="143:5" pos:end="143:49"><name pos:start="143:5" pos:end="143:19"><name pos:start="143:5" pos:end="143:14">streamparm</name><operator pos:start="143:15" pos:end="143:15">.</operator><name pos:start="143:16" pos:end="143:19">type</name></name> <operator pos:start="143:21" pos:end="143:21">=</operator> <name pos:start="143:23" pos:end="143:49">V4L2_BUF_TYPE_VIDEO_CAPTURE</name></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="153:5"><if pos:start="145:5" pos:end="153:5">if <condition pos:start="145:8" pos:end="145:58">(<expr pos:start="145:9" pos:end="145:57"><call pos:start="145:9" pos:end="145:53"><name pos:start="145:9" pos:end="145:18">v4l2_ioctl</name><argument_list pos:start="145:19" pos:end="145:53">(<argument pos:start="145:20" pos:end="145:24"><expr pos:start="145:20" pos:end="145:24"><name pos:start="145:20" pos:end="145:24"><name pos:start="145:20" pos:end="145:20">s</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:24">fd</name></name></expr></argument>, <argument pos:start="145:27" pos:end="145:39"><expr pos:start="145:27" pos:end="145:39"><name pos:start="145:27" pos:end="145:39">VIDIOC_G_PARM</name></expr></argument>, <argument pos:start="145:42" pos:end="145:52"><expr pos:start="145:42" pos:end="145:52"><operator pos:start="145:42" pos:end="145:42">&amp;</operator><name pos:start="145:43" pos:end="145:52">streamparm</name></expr></argument>)</argument_list></call> <operator pos:start="145:55" pos:end="145:55">&lt;</operator> <literal type="number" pos:start="145:57" pos:end="145:57">0</literal></expr>)</condition> <block pos:start="145:60" pos:end="153:5">{<block_content pos:start="147:9" pos:end="151:19">

        <expr_stmt pos:start="147:9" pos:end="147:29"><expr pos:start="147:9" pos:end="147:28"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <call pos:start="147:15" pos:end="147:28"><name pos:start="147:15" pos:end="147:21">AVERROR</name><argument_list pos:start="147:22" pos:end="147:28">(<argument pos:start="147:23" pos:end="147:27"><expr pos:start="147:23" pos:end="147:27"><name pos:start="147:23" pos:end="147:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:80"><expr pos:start="149:9" pos:end="149:79"><call pos:start="149:9" pos:end="149:79"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="149:79">(<argument pos:start="149:16" pos:end="149:17"><expr pos:start="149:16" pos:end="149:17"><name pos:start="149:16" pos:end="149:17">s1</name></expr></argument>, <argument pos:start="149:20" pos:end="149:31"><expr pos:start="149:20" pos:end="149:31"><name pos:start="149:20" pos:end="149:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:34" pos:end="149:61"><expr pos:start="149:34" pos:end="149:61"><literal type="string" pos:start="149:34" pos:end="149:61">"ioctl(VIDIOC_G_PARM): %s\n"</literal></expr></argument>, <argument pos:start="149:64" pos:end="149:78"><expr pos:start="149:64" pos:end="149:78"><call pos:start="149:64" pos:end="149:78"><name pos:start="149:64" pos:end="149:73">av_err2str</name><argument_list pos:start="149:74" pos:end="149:78">(<argument pos:start="149:75" pos:end="149:77"><expr pos:start="149:75" pos:end="149:77"><name pos:start="149:75" pos:end="149:77">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="151:9" pos:end="151:19">return <expr pos:start="151:16" pos:end="151:18"><name pos:start="151:16" pos:end="151:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="211:5"><if pos:start="157:5" pos:end="211:5">if <condition pos:start="157:8" pos:end="157:43">(<expr pos:start="157:9" pos:end="157:42"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:19">framerate_q</name><operator pos:start="157:20" pos:end="157:20">.</operator><name pos:start="157:21" pos:end="157:23">num</name></name> <operator pos:start="157:25" pos:end="157:26">&amp;&amp;</operator> <name pos:start="157:28" pos:end="157:42"><name pos:start="157:28" pos:end="157:38">framerate_q</name><operator pos:start="157:39" pos:end="157:39">.</operator><name pos:start="157:40" pos:end="157:42">den</name></name></expr>)</condition> <block pos:start="157:45" pos:end="211:5">{<block_content pos:start="159:9" pos:end="209:9">

        <if_stmt pos:start="159:9" pos:end="209:9"><if pos:start="159:9" pos:end="203:9">if <condition pos:start="159:12" pos:end="159:71">(<expr pos:start="159:13" pos:end="159:70"><name pos:start="159:13" pos:end="159:46"><name pos:start="159:13" pos:end="159:22">streamparm</name><operator pos:start="159:23" pos:end="159:23">.</operator><name pos:start="159:24" pos:end="159:27">parm</name><operator pos:start="159:28" pos:end="159:28">.</operator><name pos:start="159:29" pos:end="159:35">capture</name><operator pos:start="159:36" pos:end="159:36">.</operator><name pos:start="159:37" pos:end="159:46">capability</name></name> <operator pos:start="159:48" pos:end="159:48">&amp;</operator> <name pos:start="159:50" pos:end="159:70">V4L2_CAP_TIMEPERFRAME</name></expr>)</condition> <block pos:start="159:73" pos:end="203:9">{<block_content pos:start="161:13" pos:end="201:13">

            <expr_stmt pos:start="161:13" pos:end="161:56"><expr pos:start="161:13" pos:end="161:55"><name pos:start="161:13" pos:end="161:15">tpf</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <operator pos:start="161:19" pos:end="161:19">&amp;</operator><name pos:start="161:20" pos:end="161:55"><name pos:start="161:20" pos:end="161:29">streamparm</name><operator pos:start="161:30" pos:end="161:30">.</operator><name pos:start="161:31" pos:end="161:34">parm</name><operator pos:start="161:35" pos:end="161:35">.</operator><name pos:start="161:36" pos:end="161:42">capture</name><operator pos:start="161:43" pos:end="161:43">.</operator><name pos:start="161:44" pos:end="161:55">timeperframe</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="165:13" pos:end="167:53"><expr pos:start="165:13" pos:end="167:52"><call pos:start="165:13" pos:end="167:52"><name pos:start="165:13" pos:end="165:18">av_log</name><argument_list pos:start="165:19" pos:end="167:52">(<argument pos:start="165:20" pos:end="165:21"><expr pos:start="165:20" pos:end="165:21"><name pos:start="165:20" pos:end="165:21">s1</name></expr></argument>, <argument pos:start="165:24" pos:end="165:35"><expr pos:start="165:24" pos:end="165:35"><name pos:start="165:24" pos:end="165:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="165:38" pos:end="165:72"><expr pos:start="165:38" pos:end="165:72"><literal type="string" pos:start="165:38" pos:end="165:72">"Setting time per frame to %d/%d\n"</literal></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:34"><expr pos:start="167:20" pos:end="167:34"><name pos:start="167:20" pos:end="167:34"><name pos:start="167:20" pos:end="167:30">framerate_q</name><operator pos:start="167:31" pos:end="167:31">.</operator><name pos:start="167:32" pos:end="167:34">den</name></name></expr></argument>, <argument pos:start="167:37" pos:end="167:51"><expr pos:start="167:37" pos:end="167:51"><name pos:start="167:37" pos:end="167:51"><name pos:start="167:37" pos:end="167:47">framerate_q</name><operator pos:start="167:48" pos:end="167:48">.</operator><name pos:start="167:49" pos:end="167:51">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:47"><expr pos:start="169:13" pos:end="169:46"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:15">tpf</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:26">numerator</name></name>   <operator pos:start="169:30" pos:end="169:30">=</operator> <name pos:start="169:32" pos:end="169:46"><name pos:start="169:32" pos:end="169:42">framerate_q</name><operator pos:start="169:43" pos:end="169:43">.</operator><name pos:start="169:44" pos:end="169:46">den</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:47"><expr pos:start="171:13" pos:end="171:46"><name pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:15">tpf</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:28">denominator</name></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:46"><name pos:start="171:32" pos:end="171:42">framerate_q</name><operator pos:start="171:43" pos:end="171:43">.</operator><name pos:start="171:44" pos:end="171:46">num</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="175:13" pos:end="183:13"><if pos:start="175:13" pos:end="183:13">if <condition pos:start="175:16" pos:end="175:66">(<expr pos:start="175:17" pos:end="175:65"><call pos:start="175:17" pos:end="175:61"><name pos:start="175:17" pos:end="175:26">v4l2_ioctl</name><argument_list pos:start="175:27" pos:end="175:61">(<argument pos:start="175:28" pos:end="175:32"><expr pos:start="175:28" pos:end="175:32"><name pos:start="175:28" pos:end="175:32"><name pos:start="175:28" pos:end="175:28">s</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:32">fd</name></name></expr></argument>, <argument pos:start="175:35" pos:end="175:47"><expr pos:start="175:35" pos:end="175:47"><name pos:start="175:35" pos:end="175:47">VIDIOC_S_PARM</name></expr></argument>, <argument pos:start="175:50" pos:end="175:60"><expr pos:start="175:50" pos:end="175:60"><operator pos:start="175:50" pos:end="175:50">&amp;</operator><name pos:start="175:51" pos:end="175:60">streamparm</name></expr></argument>)</argument_list></call> <operator pos:start="175:63" pos:end="175:63">&lt;</operator> <literal type="number" pos:start="175:65" pos:end="175:65">0</literal></expr>)</condition> <block pos:start="175:68" pos:end="183:13">{<block_content pos:start="177:17" pos:end="181:27">

                <expr_stmt pos:start="177:17" pos:end="177:37"><expr pos:start="177:17" pos:end="177:36"><name pos:start="177:17" pos:end="177:19">ret</name> <operator pos:start="177:21" pos:end="177:21">=</operator> <call pos:start="177:23" pos:end="177:36"><name pos:start="177:23" pos:end="177:29">AVERROR</name><argument_list pos:start="177:30" pos:end="177:36">(<argument pos:start="177:31" pos:end="177:35"><expr pos:start="177:31" pos:end="177:35"><name pos:start="177:31" pos:end="177:35">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:88"><expr pos:start="179:17" pos:end="179:87"><call pos:start="179:17" pos:end="179:87"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="179:87">(<argument pos:start="179:24" pos:end="179:25"><expr pos:start="179:24" pos:end="179:25"><name pos:start="179:24" pos:end="179:25">s1</name></expr></argument>, <argument pos:start="179:28" pos:end="179:39"><expr pos:start="179:28" pos:end="179:39"><name pos:start="179:28" pos:end="179:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:42" pos:end="179:69"><expr pos:start="179:42" pos:end="179:69"><literal type="string" pos:start="179:42" pos:end="179:69">"ioctl(VIDIOC_S_PARM): %s\n"</literal></expr></argument>, <argument pos:start="179:72" pos:end="179:86"><expr pos:start="179:72" pos:end="179:86"><call pos:start="179:72" pos:end="179:86"><name pos:start="179:72" pos:end="179:81">av_err2str</name><argument_list pos:start="179:82" pos:end="179:86">(<argument pos:start="179:83" pos:end="179:85"><expr pos:start="179:83" pos:end="179:85"><name pos:start="179:83" pos:end="179:85">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="181:17" pos:end="181:27">return <expr pos:start="181:24" pos:end="181:26"><name pos:start="181:24" pos:end="181:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="187:13" pos:end="201:13"><if pos:start="187:13" pos:end="201:13">if <condition pos:start="187:16" pos:end="189:50">(<expr pos:start="187:17" pos:end="189:49"><name pos:start="187:17" pos:end="187:31"><name pos:start="187:17" pos:end="187:27">framerate_q</name><operator pos:start="187:28" pos:end="187:28">.</operator><name pos:start="187:29" pos:end="187:31">num</name></name> <operator pos:start="187:33" pos:end="187:34">!=</operator> <name pos:start="187:36" pos:end="187:51"><name pos:start="187:36" pos:end="187:38">tpf</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:51">denominator</name></name> <operator pos:start="187:53" pos:end="187:54">||</operator>

                <name pos:start="189:17" pos:end="189:31"><name pos:start="189:17" pos:end="189:27">framerate_q</name><operator pos:start="189:28" pos:end="189:28">.</operator><name pos:start="189:29" pos:end="189:31">den</name></name> <operator pos:start="189:33" pos:end="189:34">!=</operator> <name pos:start="189:36" pos:end="189:49"><name pos:start="189:36" pos:end="189:38">tpf</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:49">numerator</name></name></expr>)</condition> <block pos:start="189:52" pos:end="201:13">{<block_content pos:start="191:17" pos:end="199:57">

                <expr_stmt pos:start="191:17" pos:end="199:57"><expr pos:start="191:17" pos:end="199:56"><call pos:start="191:17" pos:end="199:56"><name pos:start="191:17" pos:end="191:22">av_log</name><argument_list pos:start="191:23" pos:end="199:56">(<argument pos:start="191:24" pos:end="191:25"><expr pos:start="191:24" pos:end="191:25"><name pos:start="191:24" pos:end="191:25">s1</name></expr></argument>, <argument pos:start="191:28" pos:end="191:38"><expr pos:start="191:28" pos:end="191:38"><name pos:start="191:28" pos:end="191:38">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="193:24" pos:end="195:41"><expr pos:start="193:24" pos:end="195:41"><literal type="string" pos:start="193:24" pos:end="193:68">"The driver changed the time per frame from "</literal>

                       <literal type="string" pos:start="195:24" pos:end="195:41">"%d/%d to %d/%d\n"</literal></expr></argument>,

                       <argument pos:start="197:24" pos:end="197:38"><expr pos:start="197:24" pos:end="197:38"><name pos:start="197:24" pos:end="197:38"><name pos:start="197:24" pos:end="197:34">framerate_q</name><operator pos:start="197:35" pos:end="197:35">.</operator><name pos:start="197:36" pos:end="197:38">den</name></name></expr></argument>, <argument pos:start="197:41" pos:end="197:55"><expr pos:start="197:41" pos:end="197:55"><name pos:start="197:41" pos:end="197:55"><name pos:start="197:41" pos:end="197:51">framerate_q</name><operator pos:start="197:52" pos:end="197:52">.</operator><name pos:start="197:53" pos:end="197:55">num</name></name></expr></argument>,

                       <argument pos:start="199:24" pos:end="199:37"><expr pos:start="199:24" pos:end="199:37"><name pos:start="199:24" pos:end="199:37"><name pos:start="199:24" pos:end="199:26">tpf</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:37">numerator</name></name></expr></argument>, <argument pos:start="199:40" pos:end="199:55"><expr pos:start="199:40" pos:end="199:55"><name pos:start="199:40" pos:end="199:55"><name pos:start="199:40" pos:end="199:42">tpf</name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:55">denominator</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="209:9">else <block pos:start="203:16" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:75">

            <expr_stmt pos:start="205:13" pos:end="207:75"><expr pos:start="205:13" pos:end="207:74"><call pos:start="205:13" pos:end="207:74"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="207:74">(<argument pos:start="205:20" pos:end="205:21"><expr pos:start="205:20" pos:end="205:21"><name pos:start="205:20" pos:end="205:21">s1</name></expr></argument>, <argument pos:start="205:24" pos:end="205:37"><expr pos:start="205:24" pos:end="205:37"><name pos:start="205:24" pos:end="205:37">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="207:20" pos:end="207:73"><expr pos:start="207:20" pos:end="207:73"><literal type="string" pos:start="207:20" pos:end="207:73">"The driver does not allow to change time per frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="213:5" pos:end="223:63"><if pos:start="213:5" pos:end="221:5">if <condition pos:start="213:8" pos:end="213:51">(<expr pos:start="213:9" pos:end="213:50"><name pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:11">tpf</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:24">denominator</name></name> <operator pos:start="213:26" pos:end="213:26">&gt;</operator> <literal type="number" pos:start="213:28" pos:end="213:28">0</literal> <operator pos:start="213:30" pos:end="213:31">&amp;&amp;</operator> <name pos:start="213:33" pos:end="213:46"><name pos:start="213:33" pos:end="213:35">tpf</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:46">numerator</name></name> <operator pos:start="213:48" pos:end="213:48">&gt;</operator> <literal type="number" pos:start="213:50" pos:end="213:50">0</literal></expr>)</condition> <block pos:start="213:53" pos:end="221:5">{<block_content pos:start="215:9" pos:end="219:70">

        <expr_stmt pos:start="215:9" pos:end="215:62"><expr pos:start="215:9" pos:end="215:61"><name pos:start="215:9" pos:end="215:22"><name pos:start="215:9" pos:end="215:10">s1</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:19">streams</name><index pos:start="215:20" pos:end="215:22">[<expr pos:start="215:21" pos:end="215:21"><literal type="number" pos:start="215:21" pos:end="215:21">0</literal></expr>]</index></name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:42"><name pos:start="215:25" pos:end="215:38">avg_frame_rate</name><operator pos:start="215:39" pos:end="215:39">.</operator><name pos:start="215:40" pos:end="215:42">num</name></name> <operator pos:start="215:44" pos:end="215:44">=</operator> <name pos:start="215:46" pos:end="215:61"><name pos:start="215:46" pos:end="215:48">tpf</name><operator pos:start="215:49" pos:end="215:50">-&gt;</operator><name pos:start="215:51" pos:end="215:61">denominator</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:60"><expr pos:start="217:9" pos:end="217:59"><name pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:10">s1</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:19">streams</name><index pos:start="217:20" pos:end="217:22">[<expr pos:start="217:21" pos:end="217:21"><literal type="number" pos:start="217:21" pos:end="217:21">0</literal></expr>]</index></name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:42"><name pos:start="217:25" pos:end="217:38">avg_frame_rate</name><operator pos:start="217:39" pos:end="217:39">.</operator><name pos:start="217:40" pos:end="217:42">den</name></name> <operator pos:start="217:44" pos:end="217:44">=</operator> <name pos:start="217:46" pos:end="217:59"><name pos:start="217:46" pos:end="217:48">tpf</name><operator pos:start="217:49" pos:end="217:50">-&gt;</operator><name pos:start="217:51" pos:end="217:59">numerator</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:70"><expr pos:start="219:9" pos:end="219:69"><name pos:start="219:9" pos:end="219:22"><name pos:start="219:9" pos:end="219:10">s1</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:19">streams</name><index pos:start="219:20" pos:end="219:22">[<expr pos:start="219:21" pos:end="219:21"><literal type="number" pos:start="219:21" pos:end="219:21">0</literal></expr>]</index></name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:36">r_frame_rate</name> <operator pos:start="219:38" pos:end="219:38">=</operator> <name pos:start="219:40" pos:end="219:53"><name pos:start="219:40" pos:end="219:41">s1</name><operator pos:start="219:42" pos:end="219:43">-&gt;</operator><name pos:start="219:44" pos:end="219:50">streams</name><index pos:start="219:51" pos:end="219:53">[<expr pos:start="219:52" pos:end="219:52"><literal type="number" pos:start="219:52" pos:end="219:52">0</literal></expr>]</index></name><operator pos:start="219:54" pos:end="219:55">-&gt;</operator><name pos:start="219:56" pos:end="219:69">avg_frame_rate</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="221:7" pos:end="223:63">else<block type="pseudo" pos:start="223:9" pos:end="223:63"><block_content pos:start="223:9" pos:end="223:63">

        <expr_stmt pos:start="223:9" pos:end="223:63"><expr pos:start="223:9" pos:end="223:62"><call pos:start="223:9" pos:end="223:62"><name pos:start="223:9" pos:end="223:14">av_log</name><argument_list pos:start="223:15" pos:end="223:62">(<argument pos:start="223:16" pos:end="223:17"><expr pos:start="223:16" pos:end="223:17"><name pos:start="223:16" pos:end="223:17">s1</name></expr></argument>, <argument pos:start="223:20" pos:end="223:33"><expr pos:start="223:20" pos:end="223:33"><name pos:start="223:20" pos:end="223:33">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="223:36" pos:end="223:61"><expr pos:start="223:36" pos:end="223:61"><literal type="string" pos:start="223:36" pos:end="223:61">"Time per frame unknown\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="227:5" pos:end="227:13">return <expr pos:start="227:12" pos:end="227:12"><literal type="number" pos:start="227:12" pos:end="227:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
