<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16656.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">av_buffersink_get_samples</name><parameter_list pos:start="1:30" pos:end="1:83">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:59">AVFrame</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">frame</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:82">nb_samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="81:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:36">= <expr pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:30">ctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name>   <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">link</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">inputs</name><index pos:start="7:39" pos:end="7:41">[<expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">cur_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:22">audio_fifo</name></name></expr>)</condition> <block pos:start="15:25" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:35">

        <decl_stmt pos:start="17:9" pos:end="17:41"><decl pos:start="17:9" pos:end="17:40"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:23">nb_channels</name> <init pos:start="17:25" pos:end="17:40">= <expr pos:start="17:27" pos:end="17:40"><name pos:start="17:27" pos:end="17:40"><name pos:start="17:27" pos:end="17:30">link</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:40">channels</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:35"><if pos:start="19:9" pos:end="21:35">if <condition pos:start="19:12" pos:end="19:90">(<expr pos:start="19:13" pos:end="19:89"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:27"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:27">audio_fifo</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <call pos:start="19:31" pos:end="19:88"><name pos:start="19:31" pos:end="19:49">av_audio_fifo_alloc</name><argument_list pos:start="19:50" pos:end="19:88">(<argument pos:start="19:51" pos:end="19:62"><expr pos:start="19:51" pos:end="19:62"><name pos:start="19:51" pos:end="19:62"><name pos:start="19:51" pos:end="19:54">link</name><operator pos:start="19:55" pos:end="19:56">-&gt;</operator><name pos:start="19:57" pos:end="19:62">format</name></name></expr></argument>, <argument pos:start="19:65" pos:end="19:75"><expr pos:start="19:65" pos:end="19:75"><name pos:start="19:65" pos:end="19:75">nb_channels</name></expr></argument>, <argument pos:start="19:78" pos:end="19:87"><expr pos:start="19:78" pos:end="19:87"><name pos:start="19:78" pos:end="19:87">nb_samples</name></expr></argument>)</argument_list></call><operator pos:start="19:89" pos:end="19:89">)</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:35"><block_content pos:start="21:13" pos:end="21:35">

            <return pos:start="21:13" pos:end="21:35">return <expr pos:start="21:20" pos:end="21:34"><call pos:start="21:20" pos:end="21:34"><name pos:start="21:20" pos:end="21:26">AVERROR</name><argument_list pos:start="21:27" pos:end="21:34">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="27:5" pos:end="77:5">while <condition pos:start="27:11" pos:end="27:20">(<expr pos:start="27:12" pos:end="27:19"><name pos:start="27:12" pos:end="27:14">ret</name> <operator pos:start="27:16" pos:end="27:17">&gt;=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition> <block pos:start="27:22" pos:end="77:5">{<block_content pos:start="29:9" pos:end="75:34">

        <if_stmt pos:start="29:9" pos:end="31:58"><if pos:start="29:9" pos:end="31:58">if <condition pos:start="29:12" pos:end="29:60">(<expr pos:start="29:13" pos:end="29:59"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:30">av_audio_fifo_size</name><argument_list pos:start="29:31" pos:end="29:45">(<argument pos:start="29:32" pos:end="29:44"><expr pos:start="29:32" pos:end="29:44"><name pos:start="29:32" pos:end="29:44"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:44">audio_fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:47" pos:end="29:48">&gt;=</operator> <name pos:start="29:50" pos:end="29:59">nb_samples</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:58"><block_content pos:start="31:13" pos:end="31:58">

            <return pos:start="31:13" pos:end="31:58">return <expr pos:start="31:20" pos:end="31:57"><call pos:start="31:20" pos:end="31:57"><name pos:start="31:20" pos:end="31:33">read_from_fifo</name><argument_list pos:start="31:34" pos:end="31:57">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">ctx</name></expr></argument>, <argument pos:start="31:40" pos:end="31:44"><expr pos:start="31:40" pos:end="31:44"><name pos:start="31:40" pos:end="31:44">frame</name></expr></argument>, <argument pos:start="31:47" pos:end="31:56"><expr pos:start="31:47" pos:end="31:56"><name pos:start="31:47" pos:end="31:56">nb_samples</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="37:35"><if pos:start="35:9" pos:end="37:35">if <condition pos:start="35:12" pos:end="35:44">(<expr pos:start="35:13" pos:end="35:43"><operator pos:start="35:13" pos:end="35:13">!</operator><operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:23">cur_frame</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="35:42"><name pos:start="35:27" pos:end="35:40">av_frame_alloc</name><argument_list pos:start="35:41" pos:end="35:42">()</argument_list></call><operator pos:start="35:43" pos:end="35:43">)</operator></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:35"><block_content pos:start="37:13" pos:end="37:35">

            <return pos:start="37:13" pos:end="37:35">return <expr pos:start="37:20" pos:end="37:34"><call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:62"><name pos:start="39:15" pos:end="39:43">av_buffersink_get_frame_flags</name><argument_list pos:start="39:44" pos:end="39:62">(<argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">ctx</name></expr></argument>, <argument pos:start="39:50" pos:end="39:58"><expr pos:start="39:50" pos:end="39:58"><name pos:start="39:50" pos:end="39:58">cur_frame</name></expr></argument>, <argument pos:start="39:61" pos:end="39:61"><expr pos:start="39:61" pos:end="39:61"><literal type="number" pos:start="39:61" pos:end="39:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="53:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:68">(<expr pos:start="41:13" pos:end="41:67"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <name pos:start="41:20" pos:end="41:30">AVERROR_EOF</name> <operator pos:start="41:32" pos:end="41:33">&amp;&amp;</operator> <call pos:start="41:35" pos:end="41:67"><name pos:start="41:35" pos:end="41:52">av_audio_fifo_size</name><argument_list pos:start="41:53" pos:end="41:67">(<argument pos:start="41:54" pos:end="41:66"><expr pos:start="41:54" pos:end="41:66"><name pos:start="41:54" pos:end="41:66"><name pos:start="41:54" pos:end="41:54">s</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:66">audio_fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:70" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:81">

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><call pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:25">av_frame_free</name><argument_list pos:start="43:26" pos:end="43:37">(<argument pos:start="43:27" pos:end="43:36"><expr pos:start="43:27" pos:end="43:36"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:36">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:81">return <expr pos:start="45:20" pos:end="45:80"><call pos:start="45:20" pos:end="45:80"><name pos:start="45:20" pos:end="45:33">read_from_fifo</name><argument_list pos:start="45:34" pos:end="45:80">(<argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:37">ctx</name></expr></argument>, <argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">frame</name></expr></argument>, <argument pos:start="45:47" pos:end="45:79"><expr pos:start="45:47" pos:end="45:79"><call pos:start="45:47" pos:end="45:79"><name pos:start="45:47" pos:end="45:64">av_audio_fifo_size</name><argument_list pos:start="45:65" pos:end="45:79">(<argument pos:start="45:66" pos:end="45:78"><expr pos:start="45:66" pos:end="45:78"><name pos:start="45:66" pos:end="45:78"><name pos:start="45:66" pos:end="45:66">s</name><operator pos:start="45:67" pos:end="45:68">-&gt;</operator><name pos:start="45:69" pos:end="45:78">audio_fifo</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="53:9">else if <condition pos:start="47:19" pos:end="47:27">(<expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:22">ret</name> <operator pos:start="47:24" pos:end="47:24">&lt;</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>)</condition> <block pos:start="47:29" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:23">

            <expr_stmt pos:start="49:13" pos:end="49:38"><expr pos:start="49:13" pos:end="49:37"><call pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:25">av_frame_free</name><argument_list pos:start="49:26" pos:end="49:37">(<argument pos:start="49:27" pos:end="49:36"><expr pos:start="49:27" pos:end="49:36"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:36">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:23">return <expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:45">(<expr pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:21">cur_frame</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">pts</name></name> <operator pos:start="57:28" pos:end="57:29">!=</operator> <name pos:start="57:31" pos:end="57:44">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="57:47" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:56">

            <expr_stmt pos:start="59:13" pos:end="65:56"><expr pos:start="59:13" pos:end="65:55"><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:23">next_pts</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:40"><name pos:start="59:27" pos:end="59:35">cur_frame</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:40">pts</name></name> <operator pos:start="59:42" pos:end="59:42">-</operator>

                          <macro pos:start="61:27" pos:end="65:55"><name pos:start="61:27" pos:end="61:38">av_rescale_q</name><argument_list pos:start="61:39" pos:end="65:55">(<argument pos:start="61:40" pos:end="61:72">av_audio_fifo_size(s-&gt;audio_fifo)</argument>,

                                       <argument pos:start="63:40" pos:end="63:54">(AVRational){ <literal type="number" pos:start="63:54" pos:end="63:54">1</literal></argument>, <argument pos:start="63:57" pos:end="63:75">link-&gt;sample_rate }</argument>,

                                       <argument pos:start="65:40" pos:end="65:54">link-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="73:57"><expr pos:start="71:9" pos:end="73:56"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="73:56"><name pos:start="71:15" pos:end="71:33">av_audio_fifo_write</name><argument_list pos:start="71:34" pos:end="73:56">(<argument pos:start="71:35" pos:end="71:47"><expr pos:start="71:35" pos:end="71:47"><name pos:start="71:35" pos:end="71:47"><name pos:start="71:35" pos:end="71:35">s</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:47">audio_fifo</name></name></expr></argument>, <argument pos:start="71:50" pos:end="71:81"><expr pos:start="71:50" pos:end="71:81"><operator pos:start="71:50" pos:end="71:50">(</operator><name pos:start="71:51" pos:end="71:54">void</name><operator pos:start="71:55" pos:end="71:55">*</operator><operator pos:start="71:56" pos:end="71:56">*</operator><operator pos:start="71:57" pos:end="71:57">)</operator><name pos:start="71:58" pos:end="71:81"><name pos:start="71:58" pos:end="71:66">cur_frame</name><operator pos:start="71:67" pos:end="71:68">-&gt;</operator><name pos:start="71:69" pos:end="71:81">extended_data</name></name></expr></argument>,

                                  <argument pos:start="73:35" pos:end="73:55"><expr pos:start="73:35" pos:end="73:55"><name pos:start="73:35" pos:end="73:55"><name pos:start="73:35" pos:end="73:43">cur_frame</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:55">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><call pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:21">av_frame_free</name><argument_list pos:start="75:22" pos:end="75:33">(<argument pos:start="75:23" pos:end="75:32"><expr pos:start="75:23" pos:end="75:32"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:32">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">ret</name></expr>;</return>



</block_content>}</block></function>
</unit>
