<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2460.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">QPCIDevice</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:33">get_pci_device</name><parameter_list pos:start="1:34" pos:end="1:69">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier><modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:51">bmdma_base</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">ide_base</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">QPCIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:22">vendor_id</name></decl>, <decl pos:start="7:25" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:25" pos:end="7:33">device_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">pcibus</name></expr>)</condition> <block pos:start="11:18" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:36">

        <expr_stmt pos:start="13:9" pos:end="13:36"><expr pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:14">pcibus</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:35"><name pos:start="13:18" pos:end="13:29">qpci_init_pc</name><argument_list pos:start="13:30" pos:end="13:35">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:55">/* Find PCI device and verify it's the right one */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:74"><expr pos:start="21:5" pos:end="21:73"><name pos:start="21:5" pos:end="21:7">dev</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:73"><name pos:start="21:11" pos:end="21:26">qpci_device_find</name><argument_list pos:start="21:27" pos:end="21:73">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">pcibus</name></expr></argument>, <argument pos:start="21:36" pos:end="21:72"><expr pos:start="21:36" pos:end="21:72"><call pos:start="21:36" pos:end="21:72"><name pos:start="21:36" pos:end="21:45">QPCI_DEVFN</name><argument_list pos:start="21:46" pos:end="21:72">(<argument pos:start="21:47" pos:end="21:57"><expr pos:start="21:47" pos:end="21:57"><name pos:start="21:47" pos:end="21:57">IDE_PCI_DEV</name></expr></argument>, <argument pos:start="21:60" pos:end="21:71"><expr pos:start="21:60" pos:end="21:71"><name pos:start="21:60" pos:end="21:71">IDE_PCI_FUNC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><call pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:25">(<argument pos:start="23:14" pos:end="23:24"><expr pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:16">dev</name> <operator pos:start="23:18" pos:end="23:19">!=</operator> <name pos:start="23:21" pos:end="23:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:13">vendor_id</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:53"><name pos:start="27:17" pos:end="27:33">qpci_config_readw</name><argument_list pos:start="27:34" pos:end="27:53">(<argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">dev</name></expr></argument>, <argument pos:start="27:40" pos:end="27:52"><expr pos:start="27:40" pos:end="27:52"><name pos:start="27:40" pos:end="27:52">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:13">device_id</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:53"><name pos:start="29:17" pos:end="29:33">qpci_config_readw</name><argument_list pos:start="29:34" pos:end="29:53">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">dev</name></expr></argument>, <argument pos:start="29:40" pos:end="29:52"><expr pos:start="29:40" pos:end="29:52"><name pos:start="29:40" pos:end="29:52">PCI_DEVICE_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><call pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:12">g_assert</name><argument_list pos:start="31:13" pos:end="31:46">(<argument pos:start="31:14" pos:end="31:45"><expr pos:start="31:14" pos:end="31:45"><name pos:start="31:14" pos:end="31:22">vendor_id</name> <operator pos:start="31:24" pos:end="31:25">==</operator> <name pos:start="31:27" pos:end="31:45">PCI_VENDOR_ID_INTEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:12">g_assert</name><argument_list pos:start="33:13" pos:end="33:56">(<argument pos:start="33:14" pos:end="33:55"><expr pos:start="33:14" pos:end="33:55"><name pos:start="33:14" pos:end="33:22">device_id</name> <operator pos:start="33:24" pos:end="33:25">==</operator> <name pos:start="33:27" pos:end="33:55">PCI_DEVICE_ID_INTEL_82371SB_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:23">/* Map bmdma BAR */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:15">bmdma_base</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:42"><name pos:start="39:19" pos:end="39:28">qpci_iomap</name><argument_list pos:start="39:29" pos:end="39:42">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">dev</name></expr></argument>, <argument pos:start="39:35" pos:end="39:35"><expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">4</literal></expr></argument>, <argument pos:start="39:38" pos:end="39:41"><expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:13">ide_base</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:48"><name pos:start="43:17" pos:end="43:33">qpci_legacy_iomap</name><argument_list pos:start="43:34" pos:end="43:48">(<argument pos:start="43:35" pos:end="43:37"><expr pos:start="43:35" pos:end="43:37"><name pos:start="43:35" pos:end="43:37">dev</name></expr></argument>, <argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:47">IDE_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><call pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:22">qpci_device_enable</name><argument_list pos:start="47:23" pos:end="47:27">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
