<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12997.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">dump_exec_info</name><parameter_list pos:start="1:20" pos:end="3:70">(<parameter pos:start="1:21" pos:end="1:27"><decl pos:start="1:21" pos:end="1:27"><type pos:start="1:21" pos:end="1:27"><name pos:start="1:21" pos:end="1:24">FILE</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">f</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:69"><function_decl pos:start="3:21" pos:end="3:69"><type pos:start="3:21" pos:end="3:23"><name pos:start="3:21" pos:end="3:23">int</name></type> (<modifier pos:start="3:26" pos:end="3:26">*</modifier><name pos:start="3:27" pos:end="3:37">cpu_fprintf</name>)<parameter_list pos:start="3:39" pos:end="3:69">(<parameter pos:start="3:40" pos:end="3:46"><decl pos:start="3:40" pos:end="3:46"><type pos:start="3:40" pos:end="3:46"><name pos:start="3:40" pos:end="3:43">FILE</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:46">f</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">fmt</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:68"><decl pos:start="3:66" pos:end="3:68"><type pos:start="3:66" pos:end="3:68"><modifier pos:start="3:66" pos:end="3:68">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:34">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:27">target_code_size</name></decl>, <decl pos:start="7:30" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:49">max_target_code_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">direct_jmp_count</name></decl>, <decl pos:start="9:27" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:43">direct_jmp2_count</name></decl>, <decl pos:start="9:46" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:46" pos:end="9:55">cross_page</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">TranslationBlock</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">tb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:20">target_code_size</name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:24">max_target_code_size</name> <operator pos:start="17:26" pos:end="17:26">=</operator> <literal type="number" pos:start="17:28" pos:end="17:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:14">cross_page</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:20">direct_jmp_count</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:21">direct_jmp2_count</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="51:5">for<control pos:start="25:8" pos:end="25:31">(<init pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</init> <condition pos:start="25:16" pos:end="25:26"><expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:16">i</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <name pos:start="25:20" pos:end="25:25">nb_tbs</name></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">i</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="51:5">{<block_content pos:start="27:9" pos:end="49:9">

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:10">tb</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:20"><name pos:start="27:15" pos:end="27:17">tbs</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:24">target_code_size</name> <operator pos:start="29:26" pos:end="29:27">+=</operator> <name pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:30">tb</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:36">size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:44"><if pos:start="31:9" pos:end="33:44">if <condition pos:start="31:12" pos:end="31:44">(<expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:14">tb</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">size</name></name> <operator pos:start="31:22" pos:end="31:22">&gt;</operator> <name pos:start="31:24" pos:end="31:43">max_target_code_size</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:44"><block_content pos:start="33:13" pos:end="33:44">

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:32">max_target_code_size</name> <operator pos:start="33:34" pos:end="33:34">=</operator> <name pos:start="33:36" pos:end="33:43"><name pos:start="33:36" pos:end="33:37">tb</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="37:25"><if pos:start="35:9" pos:end="37:25">if <condition pos:start="35:12" pos:end="35:35">(<expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:14">tb</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:25">page_addr</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:31">!=</operator> <operator pos:start="35:33" pos:end="35:33">-</operator><literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:25"><block_content pos:start="37:13" pos:end="37:25">

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:22">cross_page</name><operator pos:start="37:23" pos:end="37:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:14">tb</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:30">tb_next_offset</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>]</index></name> <operator pos:start="39:35" pos:end="39:36">!=</operator> <literal type="number" pos:start="39:38" pos:end="39:43">0xffff</literal></expr>)</condition> <block pos:start="39:46" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:13">

            <expr_stmt pos:start="41:13" pos:end="41:31"><expr pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:28">direct_jmp_count</name><operator pos:start="41:29" pos:end="41:30">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:48">(<expr pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:18">tb</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:34">tb_next_offset</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><literal type="number" pos:start="43:36" pos:end="43:36">1</literal></expr>]</index></name> <operator pos:start="43:39" pos:end="43:40">!=</operator> <literal type="number" pos:start="43:42" pos:end="43:47">0xffff</literal></expr>)</condition> <block pos:start="43:50" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:36">

                <expr_stmt pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:33">direct_jmp2_count</name><operator pos:start="45:34" pos:end="45:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="53:5" pos:end="53:36">/* XXX: avoid using doubles ? */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:50"><expr pos:start="55:5" pos:end="55:49"><call pos:start="55:5" pos:end="55:49"><name pos:start="55:5" pos:end="55:15">cpu_fprintf</name><argument_list pos:start="55:16" pos:end="55:49">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">f</name></expr></argument>, <argument pos:start="55:20" pos:end="55:48"><expr pos:start="55:20" pos:end="55:48"><literal type="string" pos:start="55:20" pos:end="55:48">"Translation buffer state:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:74"><expr pos:start="57:5" pos:end="59:73"><call pos:start="57:5" pos:end="59:73"><name pos:start="57:5" pos:end="57:15">cpu_fprintf</name><argument_list pos:start="57:16" pos:end="59:73">(<argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">f</name></expr></argument>, <argument pos:start="57:20" pos:end="57:50"><expr pos:start="57:20" pos:end="57:50"><literal type="string" pos:start="57:20" pos:end="57:50">"gen code size       %ld/%ld\n"</literal></expr></argument>,

                <argument pos:start="59:17" pos:end="59:46"><expr pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:28">code_gen_ptr</name> <operator pos:start="59:30" pos:end="59:30">-</operator> <name pos:start="59:32" pos:end="59:46">code_gen_buffer</name></expr></argument>, <argument pos:start="59:49" pos:end="59:72"><expr pos:start="59:49" pos:end="59:72"><name pos:start="59:49" pos:end="59:72">code_gen_buffer_max_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:45"><expr pos:start="61:5" pos:end="63:44"><call pos:start="61:5" pos:end="63:44"><name pos:start="61:5" pos:end="61:15">cpu_fprintf</name><argument_list pos:start="61:16" pos:end="63:44">(<argument pos:start="61:17" pos:end="61:17"><expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">f</name></expr></argument>, <argument pos:start="61:20" pos:end="61:48"><expr pos:start="61:20" pos:end="61:48"><literal type="string" pos:start="61:20" pos:end="61:48">"TB count            %d/%d\n"</literal></expr></argument>, 

                <argument pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">nb_tbs</name></expr></argument>, <argument pos:start="63:25" pos:end="63:43"><expr pos:start="63:25" pos:end="63:43"><name pos:start="63:25" pos:end="63:43">code_gen_max_blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="69:38"><expr pos:start="65:5" pos:end="69:37"><call pos:start="65:5" pos:end="69:37"><name pos:start="65:5" pos:end="65:15">cpu_fprintf</name><argument_list pos:start="65:16" pos:end="69:37">(<argument pos:start="65:17" pos:end="65:17"><expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">f</name></expr></argument>, <argument pos:start="65:20" pos:end="65:58"><expr pos:start="65:20" pos:end="65:58"><literal type="string" pos:start="65:20" pos:end="65:58">"TB avg target size  %d max=%d bytes\n"</literal></expr></argument>,

                <argument pos:start="67:17" pos:end="67:54"><expr pos:start="67:17" pos:end="67:54"><ternary pos:start="67:17" pos:end="67:54"><condition pos:start="67:17" pos:end="67:24"><expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">nb_tbs</name></expr> ?</condition><then pos:start="67:26" pos:end="67:50"> <expr pos:start="67:26" pos:end="67:50"><name pos:start="67:26" pos:end="67:41">target_code_size</name> <operator pos:start="67:43" pos:end="67:43">/</operator> <name pos:start="67:45" pos:end="67:50">nb_tbs</name></expr> </then><else pos:start="67:52" pos:end="67:54">: <expr pos:start="67:54" pos:end="67:54"><literal type="number" pos:start="67:54" pos:end="67:54">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="69:17" pos:end="69:36"><expr pos:start="69:17" pos:end="69:36"><name pos:start="69:17" pos:end="69:36">max_target_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="75:101"><expr pos:start="71:5" pos:end="75:100"><call pos:start="71:5" pos:end="75:100"><name pos:start="71:5" pos:end="71:15">cpu_fprintf</name><argument_list pos:start="71:16" pos:end="75:100">(<argument pos:start="71:17" pos:end="71:17"><expr pos:start="71:17" pos:end="71:17"><name pos:start="71:17" pos:end="71:17">f</name></expr></argument>, <argument pos:start="71:20" pos:end="71:76"><expr pos:start="71:20" pos:end="71:76"><literal type="string" pos:start="71:20" pos:end="71:76">"TB avg host size    %d bytes (expansion ratio: %0.1f)\n"</literal></expr></argument>,

                <argument pos:start="73:17" pos:end="73:70"><expr pos:start="73:17" pos:end="73:70"><ternary pos:start="73:17" pos:end="73:70"><condition pos:start="73:17" pos:end="73:24"><expr pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:22">nb_tbs</name></expr> ?</condition><then pos:start="73:26" pos:end="73:66"> <expr pos:start="73:26" pos:end="73:66"><operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:38">code_gen_ptr</name> <operator pos:start="73:40" pos:end="73:40">-</operator> <name pos:start="73:42" pos:end="73:56">code_gen_buffer</name><operator pos:start="73:57" pos:end="73:57">)</operator> <operator pos:start="73:59" pos:end="73:59">/</operator> <name pos:start="73:61" pos:end="73:66">nb_tbs</name></expr> </then><else pos:start="73:68" pos:end="73:70">: <expr pos:start="73:70" pos:end="73:70"><literal type="number" pos:start="73:70" pos:end="73:70">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="75:17" pos:end="75:99"><expr pos:start="75:17" pos:end="75:99"><ternary pos:start="75:17" pos:end="75:99"><condition pos:start="75:17" pos:end="75:34"><expr pos:start="75:17" pos:end="75:32"><name pos:start="75:17" pos:end="75:32">target_code_size</name></expr> ?</condition><then pos:start="75:36" pos:end="75:95"> <expr pos:start="75:36" pos:end="75:95"><operator pos:start="75:36" pos:end="75:36">(</operator><name pos:start="75:37" pos:end="75:42">double</name><operator pos:start="75:43" pos:end="75:43">)</operator> <operator pos:start="75:45" pos:end="75:45">(</operator><name pos:start="75:46" pos:end="75:57">code_gen_ptr</name> <operator pos:start="75:59" pos:end="75:59">-</operator> <name pos:start="75:61" pos:end="75:75">code_gen_buffer</name><operator pos:start="75:76" pos:end="75:76">)</operator> <operator pos:start="75:78" pos:end="75:78">/</operator> <name pos:start="75:80" pos:end="75:95">target_code_size</name></expr> </then><else pos:start="75:97" pos:end="75:99">: <expr pos:start="75:99" pos:end="75:99"><literal type="number" pos:start="75:99" pos:end="75:99">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="81:54"><expr pos:start="77:5" pos:end="81:53"><call pos:start="77:5" pos:end="81:53"><name pos:start="77:5" pos:end="77:15">cpu_fprintf</name><argument_list pos:start="77:16" pos:end="81:53">(<argument pos:start="77:17" pos:end="77:17"><expr pos:start="77:17" pos:end="77:17"><name pos:start="77:17" pos:end="77:17">f</name></expr></argument>, <argument pos:start="77:20" pos:end="77:52"><expr pos:start="77:20" pos:end="77:52"><literal type="string" pos:start="77:20" pos:end="77:52">"cross page TB count %d (%d%%)\n"</literal></expr></argument>,

            <argument pos:start="79:13" pos:end="79:22"><expr pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:22">cross_page</name></expr></argument>,

            <argument pos:start="81:13" pos:end="81:52"><expr pos:start="81:13" pos:end="81:52"><ternary pos:start="81:13" pos:end="81:52"><condition pos:start="81:13" pos:end="81:20"><expr pos:start="81:13" pos:end="81:18"><name pos:start="81:13" pos:end="81:18">nb_tbs</name></expr> ?</condition><then pos:start="81:22" pos:end="81:48"> <expr pos:start="81:22" pos:end="81:48"><operator pos:start="81:22" pos:end="81:22">(</operator><name pos:start="81:23" pos:end="81:32">cross_page</name> <operator pos:start="81:34" pos:end="81:34">*</operator> <literal type="number" pos:start="81:36" pos:end="81:38">100</literal><operator pos:start="81:39" pos:end="81:39">)</operator> <operator pos:start="81:41" pos:end="81:41">/</operator> <name pos:start="81:43" pos:end="81:48">nb_tbs</name></expr> </then><else pos:start="81:50" pos:end="81:52">: <expr pos:start="81:52" pos:end="81:52"><literal type="number" pos:start="81:52" pos:end="81:52">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="91:65"><expr pos:start="83:5" pos:end="91:64"><call pos:start="83:5" pos:end="91:64"><name pos:start="83:5" pos:end="83:15">cpu_fprintf</name><argument_list pos:start="83:16" pos:end="91:64">(<argument pos:start="83:17" pos:end="83:17"><expr pos:start="83:17" pos:end="83:17"><name pos:start="83:17" pos:end="83:17">f</name></expr></argument>, <argument pos:start="83:20" pos:end="83:70"><expr pos:start="83:20" pos:end="83:70"><literal type="string" pos:start="83:20" pos:end="83:70">"direct jump count   %d (%d%%) (2 jumps=%d %d%%)\n"</literal></expr></argument>,

                <argument pos:start="85:17" pos:end="85:32"><expr pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:32">direct_jmp_count</name></expr></argument>,

                <argument pos:start="87:17" pos:end="87:62"><expr pos:start="87:17" pos:end="87:62"><ternary pos:start="87:17" pos:end="87:62"><condition pos:start="87:17" pos:end="87:24"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">nb_tbs</name></expr> ?</condition><then pos:start="87:26" pos:end="87:58"> <expr pos:start="87:26" pos:end="87:58"><operator pos:start="87:26" pos:end="87:26">(</operator><name pos:start="87:27" pos:end="87:42">direct_jmp_count</name> <operator pos:start="87:44" pos:end="87:44">*</operator> <literal type="number" pos:start="87:46" pos:end="87:48">100</literal><operator pos:start="87:49" pos:end="87:49">)</operator> <operator pos:start="87:51" pos:end="87:51">/</operator> <name pos:start="87:53" pos:end="87:58">nb_tbs</name></expr> </then><else pos:start="87:60" pos:end="87:62">: <expr pos:start="87:62" pos:end="87:62"><literal type="number" pos:start="87:62" pos:end="87:62">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="89:17" pos:end="89:33"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:33">direct_jmp2_count</name></expr></argument>,

                <argument pos:start="91:17" pos:end="91:63"><expr pos:start="91:17" pos:end="91:63"><ternary pos:start="91:17" pos:end="91:63"><condition pos:start="91:17" pos:end="91:24"><expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:22">nb_tbs</name></expr> ?</condition><then pos:start="91:26" pos:end="91:59"> <expr pos:start="91:26" pos:end="91:59"><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:43">direct_jmp2_count</name> <operator pos:start="91:45" pos:end="91:45">*</operator> <literal type="number" pos:start="91:47" pos:end="91:49">100</literal><operator pos:start="91:50" pos:end="91:50">)</operator> <operator pos:start="91:52" pos:end="91:52">/</operator> <name pos:start="91:54" pos:end="91:59">nb_tbs</name></expr> </then><else pos:start="91:61" pos:end="91:63">: <expr pos:start="91:63" pos:end="91:63"><literal type="number" pos:start="91:63" pos:end="91:63">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:38"><expr pos:start="93:5" pos:end="93:37"><call pos:start="93:5" pos:end="93:37"><name pos:start="93:5" pos:end="93:15">cpu_fprintf</name><argument_list pos:start="93:16" pos:end="93:37">(<argument pos:start="93:17" pos:end="93:17"><expr pos:start="93:17" pos:end="93:17"><name pos:start="93:17" pos:end="93:17">f</name></expr></argument>, <argument pos:start="93:20" pos:end="93:36"><expr pos:start="93:20" pos:end="93:36"><literal type="string" pos:start="93:20" pos:end="93:36">"\nStatistics:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:63"><expr pos:start="95:5" pos:end="95:62"><call pos:start="95:5" pos:end="95:62"><name pos:start="95:5" pos:end="95:15">cpu_fprintf</name><argument_list pos:start="95:16" pos:end="95:62">(<argument pos:start="95:17" pos:end="95:17"><expr pos:start="95:17" pos:end="95:17"><name pos:start="95:17" pos:end="95:17">f</name></expr></argument>, <argument pos:start="95:20" pos:end="95:45"><expr pos:start="95:20" pos:end="95:45"><literal type="string" pos:start="95:20" pos:end="95:45">"TB flush count      %d\n"</literal></expr></argument>, <argument pos:start="95:48" pos:end="95:61"><expr pos:start="95:48" pos:end="95:61"><name pos:start="95:48" pos:end="95:61">tb_flush_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:73"><expr pos:start="97:5" pos:end="97:72"><call pos:start="97:5" pos:end="97:72"><name pos:start="97:5" pos:end="97:15">cpu_fprintf</name><argument_list pos:start="97:16" pos:end="97:72">(<argument pos:start="97:17" pos:end="97:17"><expr pos:start="97:17" pos:end="97:17"><name pos:start="97:17" pos:end="97:17">f</name></expr></argument>, <argument pos:start="97:20" pos:end="97:45"><expr pos:start="97:20" pos:end="97:45"><literal type="string" pos:start="97:20" pos:end="97:45">"TB invalidate count %d\n"</literal></expr></argument>, <argument pos:start="97:48" pos:end="97:71"><expr pos:start="97:48" pos:end="97:71"><name pos:start="97:48" pos:end="97:71">tb_phys_invalidate_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:64"><expr pos:start="99:5" pos:end="99:63"><call pos:start="99:5" pos:end="99:63"><name pos:start="99:5" pos:end="99:15">cpu_fprintf</name><argument_list pos:start="99:16" pos:end="99:63">(<argument pos:start="99:17" pos:end="99:17"><expr pos:start="99:17" pos:end="99:17"><name pos:start="99:17" pos:end="99:17">f</name></expr></argument>, <argument pos:start="99:20" pos:end="99:45"><expr pos:start="99:20" pos:end="99:45"><literal type="string" pos:start="99:20" pos:end="99:45">"TLB flush count     %d\n"</literal></expr></argument>, <argument pos:start="99:48" pos:end="99:62"><expr pos:start="99:48" pos:end="99:62"><name pos:start="99:48" pos:end="99:62">tlb_flush_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:34"><expr pos:start="101:5" pos:end="101:33"><call pos:start="101:5" pos:end="101:33"><name pos:start="101:5" pos:end="101:17">tcg_dump_info</name><argument_list pos:start="101:18" pos:end="101:33">(<argument pos:start="101:19" pos:end="101:19"><expr pos:start="101:19" pos:end="101:19"><name pos:start="101:19" pos:end="101:19">f</name></expr></argument>, <argument pos:start="101:22" pos:end="101:32"><expr pos:start="101:22" pos:end="101:32"><name pos:start="101:22" pos:end="101:32">cpu_fprintf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
