<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7268.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">adpcm_decode_init</name><parameter_list pos:start="1:37" pos:end="1:60">(<parameter pos:start="1:38" pos:end="1:59"><decl pos:start="1:38" pos:end="1:59"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">ADPCMDecodeContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">c</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:29">max_channels</name> <init pos:start="7:31" pos:end="7:33">= <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">2</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="25:5">switch<condition pos:start="11:11" pos:end="11:28">(<expr pos:start="11:12" pos:end="11:27"><name pos:start="11:12" pos:end="11:27"><name pos:start="11:12" pos:end="11:16">avctx</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:23">codec</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">id</name></name></expr>)</condition> <block pos:start="11:30" pos:end="25:5">{<block_content pos:start="13:5" pos:end="23:14">

    <case pos:start="13:5" pos:end="13:30">case <expr pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:29">CODEC_ID_ADPCM_EA_R1</name></expr>:</case>

    <case pos:start="15:5" pos:end="15:30">case <expr pos:start="15:10" pos:end="15:29"><name pos:start="15:10" pos:end="15:29">CODEC_ID_ADPCM_EA_R2</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:30">case <expr pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:29">CODEC_ID_ADPCM_EA_R3</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:31">case <expr pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:30">CODEC_ID_ADPCM_EA_XAS</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:20">max_channels</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">6</literal></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if<condition pos:start="27:7" pos:end="27:38">(<expr pos:start="27:8" pos:end="27:37"><name pos:start="27:8" pos:end="27:22"><name pos:start="27:8" pos:end="27:12">avctx</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:22">channels</name></name> <operator pos:start="27:24" pos:end="27:24">&gt;</operator> <name pos:start="27:26" pos:end="27:37">max_channels</name></expr>)</condition><block pos:start="27:39" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="35:5" pos:end="71:5">switch<condition pos:start="35:11" pos:end="35:28">(<expr pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:16">avctx</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">codec</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:27">id</name></name></expr>)</condition> <block pos:start="35:30" pos:end="71:5">{<block_content pos:start="37:5" pos:end="69:14">

    <case pos:start="37:5" pos:end="37:27">case <expr pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:26">CODEC_ID_ADPCM_CT</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">status</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>]</index></name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:25">step</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:40"><name pos:start="39:29" pos:end="39:29">c</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:37">status</name><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">1</literal></expr>]</index></name><operator pos:start="39:41" pos:end="39:41">.</operator><name pos:start="39:42" pos:end="39:45">step</name> <operator pos:start="39:47" pos:end="39:47">=</operator> <literal type="number" pos:start="39:49" pos:end="39:51">511</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:32">case <expr pos:start="43:10" pos:end="43:31"><name pos:start="43:10" pos:end="43:31">CODEC_ID_ADPCM_IMA_WAV</name></expr>:</case>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:46">(<expr pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:40">bits_per_coded_sample</name></name> <operator pos:start="45:42" pos:end="45:43">!=</operator> <literal type="number" pos:start="45:45" pos:end="45:45">4</literal></expr>)</condition> <block pos:start="45:48" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:90"><expr pos:start="47:13" pos:end="47:89"><call pos:start="47:13" pos:end="47:89"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:89">(<argument pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:24">avctx</name></expr></argument>, <argument pos:start="47:27" pos:end="47:38"><expr pos:start="47:27" pos:end="47:38"><name pos:start="47:27" pos:end="47:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:41" pos:end="47:88"><expr pos:start="47:41" pos:end="47:88"><literal type="string" pos:start="47:41" pos:end="47:88">"Only 4-bit ADPCM IMA WAV files are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:31">case <expr pos:start="55:10" pos:end="55:30"><name pos:start="55:10" pos:end="55:30">CODEC_ID_ADPCM_IMA_WS</name></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:63">(<expr pos:start="57:13" pos:end="57:62"><name pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:17">avctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">extradata</name></name> <operator pos:start="57:30" pos:end="57:31">&amp;&amp;</operator> <name pos:start="57:33" pos:end="57:53"><name pos:start="57:33" pos:end="57:37">avctx</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:53">extradata_size</name></name> <operator pos:start="57:55" pos:end="57:56">==</operator> <literal type="number" pos:start="57:58" pos:end="57:58">2</literal> <operator pos:start="57:60" pos:end="57:60">*</operator> <literal type="number" pos:start="57:62" pos:end="57:62">4</literal></expr>)</condition> <block pos:start="57:65" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:67">

            <expr_stmt pos:start="59:13" pos:end="59:63"><expr pos:start="59:13" pos:end="59:62"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:13">c</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:21">status</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>]</index></name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:34">predictor</name> <operator pos:start="59:36" pos:end="59:36">=</operator> <call pos:start="59:38" pos:end="59:62"><name pos:start="59:38" pos:end="59:44">AV_RL32</name><argument_list pos:start="59:45" pos:end="59:62">(<argument pos:start="59:46" pos:end="59:61"><expr pos:start="59:46" pos:end="59:61"><name pos:start="59:46" pos:end="59:61"><name pos:start="59:46" pos:end="59:50">avctx</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:61">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:67"><expr pos:start="61:13" pos:end="61:66"><name pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:13">c</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">status</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">1</literal></expr>]</index></name><operator pos:start="61:25" pos:end="61:25">.</operator><name pos:start="61:26" pos:end="61:34">predictor</name> <operator pos:start="61:36" pos:end="61:36">=</operator> <call pos:start="61:38" pos:end="61:66"><name pos:start="61:38" pos:end="61:44">AV_RL32</name><argument_list pos:start="61:45" pos:end="61:66">(<argument pos:start="61:46" pos:end="61:65"><expr pos:start="61:46" pos:end="61:65"><name pos:start="61:46" pos:end="61:61"><name pos:start="61:46" pos:end="61:50">avctx</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:61">extradata</name></name> <operator pos:start="61:63" pos:end="61:63">+</operator> <literal type="number" pos:start="61:65" pos:end="61:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <default pos:start="67:5" pos:end="67:12">default:</default>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:9">avctx</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:21">sample_fmt</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><call pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:30">avcodec_get_frame_defaults</name><argument_list pos:start="77:31" pos:end="77:41">(<argument pos:start="77:32" pos:end="77:40"><expr pos:start="77:32" pos:end="77:40"><operator pos:start="77:32" pos:end="77:32">&amp;</operator><name pos:start="77:33" pos:end="77:40"><name pos:start="77:33" pos:end="77:33">c</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:35"><expr pos:start="79:5" pos:end="79:34"><name pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:9">avctx</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:22">coded_frame</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:34"><name pos:start="79:27" pos:end="79:27">c</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:34">frame</name></name></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
