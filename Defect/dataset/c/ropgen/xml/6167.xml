<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6167.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">float32</name></type> <name pos:start="1:16" pos:end="1:29">addFloat32Sigs</name><parameter_list pos:start="1:30" pos:end="1:77">( <parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:38">float32</name></type> <name pos:start="1:40" pos:end="1:40">a</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:51"><decl pos:start="1:43" pos:end="1:51"><type pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:49">float32</name></type> <name pos:start="1:51" pos:end="1:51">b</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:76"><decl pos:start="1:54" pos:end="1:76"><type pos:start="1:54" pos:end="1:76"><name pos:start="1:54" pos:end="1:57">flag</name> <name pos:start="1:59" pos:end="1:63">zSign</name></type> <name pos:start="1:65" pos:end="1:76">STATUS_PARAM</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="125:63">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:9">int16</name></type> <name pos:start="5:11" pos:end="5:14">aExp</name></decl>, <decl pos:start="5:17" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:9"/><name pos:start="5:17" pos:end="5:20">bExp</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:9"/><name pos:start="5:23" pos:end="5:26">zExp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">aSig</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:23">bSig</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:26" pos:end="7:29">zSig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">int16</name></type> <name pos:start="9:11" pos:end="9:17">expDiff</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:8">aSig</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:34"><name pos:start="13:12" pos:end="13:29">extractFloat32Frac</name><argument_list pos:start="13:30" pos:end="13:34">( <argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><name pos:start="13:32" pos:end="13:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:8">aExp</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:33"><name pos:start="15:12" pos:end="15:28">extractFloat32Exp</name><argument_list pos:start="15:29" pos:end="15:33">( <argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">bSig</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:29">extractFloat32Frac</name><argument_list pos:start="17:30" pos:end="17:34">( <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">b</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:8">bExp</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:28">extractFloat32Exp</name><argument_list pos:start="19:29" pos:end="19:33">( <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">b</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:11">expDiff</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:18">aExp</name> <operator pos:start="21:20" pos:end="21:20">-</operator> <name pos:start="21:22" pos:end="21:25">bExp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:8">aSig</name> <operator pos:start="23:10" pos:end="23:12">&lt;&lt;=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:8">bSig</name> <operator pos:start="25:10" pos:end="25:12">&lt;&lt;=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">6</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="107:5"><if pos:start="27:5" pos:end="53:5">if <condition pos:start="27:8" pos:end="27:22">( <expr pos:start="27:10" pos:end="27:20"><literal type="number" pos:start="27:10" pos:end="27:10">0</literal> <operator pos:start="27:12" pos:end="27:12">&lt;</operator> <name pos:start="27:14" pos:end="27:20">expDiff</name></expr> )</condition> <block pos:start="27:24" pos:end="53:5">{<block_content pos:start="29:9" pos:end="51:20">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:27">( <expr pos:start="29:14" pos:end="29:25"><name pos:start="29:14" pos:end="29:17">aExp</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <literal type="number" pos:start="29:22" pos:end="29:25">0xFF</literal></expr> )</condition> <block pos:start="29:29" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:21">

            <if_stmt pos:start="31:13" pos:end="31:70"><if pos:start="31:13" pos:end="31:70">if <condition pos:start="31:16" pos:end="31:23">( <expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">aSig</name></expr> )</condition><block type="pseudo" pos:start="31:25" pos:end="31:70"><block_content pos:start="31:25" pos:end="31:70"> <return pos:start="31:25" pos:end="31:70">return <macro pos:start="31:32" pos:end="31:69"><name pos:start="31:32" pos:end="31:50">propagateFloat32NaN</name><argument_list pos:start="31:51" pos:end="31:69">( <argument pos:start="31:53" pos:end="31:53">a</argument>, <argument pos:start="31:56" pos:end="31:67">b STATUS_VAR</argument> )</argument_list></macro>;</return></block_content></block></if></if_stmt>

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">a</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:24">( <expr pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:17">bExp</name> <operator pos:start="37:19" pos:end="37:20">==</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr> )</condition> <block pos:start="37:26" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <expr_stmt pos:start="39:13" pos:end="39:22"><expr pos:start="39:13" pos:end="39:21"><operator pos:start="39:13" pos:end="39:14">--</operator><name pos:start="39:15" pos:end="39:21">expDiff</name></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="43:9" pos:end="47:9">else <block pos:start="43:14" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:31">

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:16">bSig</name> <operator pos:start="45:18" pos:end="45:19">|=</operator> <literal type="number" pos:start="45:21" pos:end="45:30">0x20000000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><call pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:27">shift32RightJamming</name><argument_list pos:start="49:28" pos:end="49:51">( <argument pos:start="49:30" pos:end="49:33"><expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">bSig</name></expr></argument>, <argument pos:start="49:36" pos:end="49:42"><expr pos:start="49:36" pos:end="49:42"><name pos:start="49:36" pos:end="49:42">expDiff</name></expr></argument>, <argument pos:start="49:45" pos:end="49:49"><expr pos:start="49:45" pos:end="49:49"><operator pos:start="49:45" pos:end="49:45">&amp;</operator><name pos:start="49:46" pos:end="49:49">bSig</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:12">zExp</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:19">aExp</name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <if type="elseif" pos:start="55:5" pos:end="81:5">else if <condition pos:start="55:13" pos:end="55:27">( <expr pos:start="55:15" pos:end="55:25"><name pos:start="55:15" pos:end="55:21">expDiff</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr> )</condition> <block pos:start="55:29" pos:end="81:5">{<block_content pos:start="57:9" pos:end="79:20">

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:27">( <expr pos:start="57:14" pos:end="57:25"><name pos:start="57:14" pos:end="57:17">bExp</name> <operator pos:start="57:19" pos:end="57:20">==</operator> <literal type="number" pos:start="57:22" pos:end="57:25">0xFF</literal></expr> )</condition> <block pos:start="57:29" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:49">

            <if_stmt pos:start="59:13" pos:end="59:70"><if pos:start="59:13" pos:end="59:70">if <condition pos:start="59:16" pos:end="59:23">( <expr pos:start="59:18" pos:end="59:21"><name pos:start="59:18" pos:end="59:21">bSig</name></expr> )</condition><block type="pseudo" pos:start="59:25" pos:end="59:70"><block_content pos:start="59:25" pos:end="59:70"> <return pos:start="59:25" pos:end="59:70">return <macro pos:start="59:32" pos:end="59:69"><name pos:start="59:32" pos:end="59:50">propagateFloat32NaN</name><argument_list pos:start="59:51" pos:end="59:69">( <argument pos:start="59:53" pos:end="59:53">a</argument>, <argument pos:start="59:56" pos:end="59:67">b STATUS_VAR</argument> )</argument_list></macro>;</return></block_content></block></if></if_stmt>

            <return pos:start="61:13" pos:end="61:49">return <expr pos:start="61:20" pos:end="61:48"><call pos:start="61:20" pos:end="61:48"><name pos:start="61:20" pos:end="61:30">packFloat32</name><argument_list pos:start="61:31" pos:end="61:48">( <argument pos:start="61:33" pos:end="61:37"><expr pos:start="61:33" pos:end="61:37"><name pos:start="61:33" pos:end="61:37">zSign</name></expr></argument>, <argument pos:start="61:40" pos:end="61:43"><expr pos:start="61:40" pos:end="61:43"><literal type="number" pos:start="61:40" pos:end="61:43">0xFF</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr></argument> )</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:24">( <expr pos:start="65:14" pos:end="65:22"><name pos:start="65:14" pos:end="65:17">aExp</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr> )</condition> <block pos:start="65:26" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:22">

            <expr_stmt pos:start="67:13" pos:end="67:22"><expr pos:start="67:13" pos:end="67:21"><operator pos:start="67:13" pos:end="67:14">++</operator><name pos:start="67:15" pos:end="67:21">expDiff</name></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="71:9" pos:end="75:9">else <block pos:start="71:14" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:31">

            <expr_stmt pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:16">aSig</name> <operator pos:start="73:18" pos:end="73:19">|=</operator> <literal type="number" pos:start="73:21" pos:end="73:30">0x20000000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:54"><expr pos:start="77:9" pos:end="77:53"><call pos:start="77:9" pos:end="77:53"><name pos:start="77:9" pos:end="77:27">shift32RightJamming</name><argument_list pos:start="77:28" pos:end="77:53">( <argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">aSig</name></expr></argument>, <argument pos:start="77:36" pos:end="77:44"><expr pos:start="77:36" pos:end="77:44"><operator pos:start="77:36" pos:end="77:36">-</operator> <name pos:start="77:38" pos:end="77:44">expDiff</name></expr></argument>, <argument pos:start="77:47" pos:end="77:51"><expr pos:start="77:47" pos:end="77:51"><operator pos:start="77:47" pos:end="77:47">&amp;</operator><name pos:start="77:48" pos:end="77:51">aSig</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:12">zExp</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <name pos:start="79:16" pos:end="79:19">bExp</name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="83:5" pos:end="107:5">else <block pos:start="83:10" pos:end="107:5">{<block_content pos:start="85:9" pos:end="105:26">

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:27">( <expr pos:start="85:14" pos:end="85:25"><name pos:start="85:14" pos:end="85:17">aExp</name> <operator pos:start="85:19" pos:end="85:20">==</operator> <literal type="number" pos:start="85:22" pos:end="85:25">0xFF</literal></expr> )</condition> <block pos:start="85:29" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:21">

            <if_stmt pos:start="87:13" pos:end="87:77"><if pos:start="87:13" pos:end="87:77">if <condition pos:start="87:16" pos:end="87:30">( <expr pos:start="87:18" pos:end="87:28"><name pos:start="87:18" pos:end="87:21">aSig</name> <operator pos:start="87:23" pos:end="87:23">|</operator> <name pos:start="87:25" pos:end="87:28">bSig</name></expr> )</condition><block type="pseudo" pos:start="87:32" pos:end="87:77"><block_content pos:start="87:32" pos:end="87:77"> <return pos:start="87:32" pos:end="87:77">return <macro pos:start="87:39" pos:end="87:76"><name pos:start="87:39" pos:end="87:57">propagateFloat32NaN</name><argument_list pos:start="87:58" pos:end="87:76">( <argument pos:start="87:60" pos:end="87:60">a</argument>, <argument pos:start="87:63" pos:end="87:74">b STATUS_VAR</argument> )</argument_list></macro>;</return></block_content></block></if></if_stmt>

            <return pos:start="89:13" pos:end="89:21">return <expr pos:start="89:20" pos:end="89:20"><name pos:start="89:20" pos:end="89:20">a</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:24">( <expr pos:start="93:14" pos:end="93:22"><name pos:start="93:14" pos:end="93:17">aExp</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr> )</condition> <block pos:start="93:26" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:63">

            <if_stmt pos:start="95:13" pos:end="95:75"><if pos:start="95:13" pos:end="95:75">if <condition pos:start="95:16" pos:end="95:40">( <expr pos:start="95:18" pos:end="95:38"><call pos:start="95:18" pos:end="95:38"><name pos:start="95:18" pos:end="95:23">STATUS</name><argument_list pos:start="95:24" pos:end="95:38">(<argument pos:start="95:25" pos:end="95:37"><expr pos:start="95:25" pos:end="95:37"><name pos:start="95:25" pos:end="95:37">flush_to_zero</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo" pos:start="95:42" pos:end="95:75"><block_content pos:start="95:42" pos:end="95:75"> <return pos:start="95:42" pos:end="95:75">return <expr pos:start="95:49" pos:end="95:74"><call pos:start="95:49" pos:end="95:74"><name pos:start="95:49" pos:end="95:59">packFloat32</name><argument_list pos:start="95:60" pos:end="95:74">( <argument pos:start="95:62" pos:end="95:66"><expr pos:start="95:62" pos:end="95:66"><name pos:start="95:62" pos:end="95:66">zSign</name></expr></argument>, <argument pos:start="95:69" pos:end="95:69"><expr pos:start="95:69" pos:end="95:69"><literal type="number" pos:start="95:69" pos:end="95:69">0</literal></expr></argument>, <argument pos:start="95:72" pos:end="95:72"><expr pos:start="95:72" pos:end="95:72"><literal type="number" pos:start="95:72" pos:end="95:72">0</literal></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="97:13" pos:end="97:63">return <expr pos:start="97:20" pos:end="97:62"><call pos:start="97:20" pos:end="97:62"><name pos:start="97:20" pos:end="97:30">packFloat32</name><argument_list pos:start="97:31" pos:end="97:62">( <argument pos:start="97:33" pos:end="97:37"><expr pos:start="97:33" pos:end="97:37"><name pos:start="97:33" pos:end="97:37">zSign</name></expr></argument>, <argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><literal type="number" pos:start="97:40" pos:end="97:40">0</literal></expr></argument>, <argument pos:start="97:43" pos:end="97:60"><expr pos:start="97:43" pos:end="97:60"><operator pos:start="97:43" pos:end="97:43">(</operator> <name pos:start="97:45" pos:end="97:48">aSig</name> <operator pos:start="97:50" pos:end="97:50">+</operator> <name pos:start="97:52" pos:end="97:55">bSig</name> <operator pos:start="97:57" pos:end="97:57">)</operator><operator pos:start="97:58" pos:end="97:59">&gt;&gt;</operator><literal type="number" pos:start="97:60" pos:end="97:60">6</literal></expr></argument> )</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:40"><expr pos:start="101:9" pos:end="101:39"><name pos:start="101:9" pos:end="101:12">zSig</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <literal type="number" pos:start="101:16" pos:end="101:27">0x40000000</literal> <operator pos:start="101:27" pos:end="101:27">+</operator> <name pos:start="101:29" pos:end="101:32">aSig</name> <operator pos:start="101:34" pos:end="101:34">+</operator> <name pos:start="101:36" pos:end="101:39">bSig</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:12">zExp</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <name pos:start="103:16" pos:end="103:19">aExp</name></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:26">goto <name pos:start="105:14" pos:end="105:25">roundAndPack</name>;</goto>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:23"><expr pos:start="109:5" pos:end="109:22"><name pos:start="109:5" pos:end="109:8">aSig</name> <operator pos:start="109:10" pos:end="109:11">|=</operator> <literal type="number" pos:start="109:13" pos:end="109:22">0x20000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:30"><expr pos:start="111:5" pos:end="111:29"><name pos:start="111:5" pos:end="111:8">zSig</name> <operator pos:start="111:10" pos:end="111:10">=</operator> <operator pos:start="111:12" pos:end="111:12">(</operator> <name pos:start="111:14" pos:end="111:17">aSig</name> <operator pos:start="111:19" pos:end="111:19">+</operator> <name pos:start="111:21" pos:end="111:24">bSig</name> <operator pos:start="111:26" pos:end="111:26">)</operator><operator pos:start="111:27" pos:end="111:28">&lt;&lt;</operator><literal type="number" pos:start="111:29" pos:end="111:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:11"><expr pos:start="113:5" pos:end="113:10"><operator pos:start="113:5" pos:end="113:6">--</operator><name pos:start="113:7" pos:end="113:10">zExp</name></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:29">( <expr pos:start="115:10" pos:end="115:27"><operator pos:start="115:10" pos:end="115:10">(</operator><name pos:start="115:11" pos:end="115:17">int32_t</name><operator pos:start="115:18" pos:end="115:18">)</operator> <name pos:start="115:20" pos:end="115:23">zSig</name> <operator pos:start="115:25" pos:end="115:25">&lt;</operator> <literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr> )</condition> <block pos:start="115:31" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:15">

        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:12">zSig</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:19">aSig</name> <operator pos:start="117:21" pos:end="117:21">+</operator> <name pos:start="117:23" pos:end="117:26">bSig</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:15"><expr pos:start="119:9" pos:end="119:14"><operator pos:start="119:9" pos:end="119:10">++</operator><name pos:start="119:11" pos:end="119:14">zExp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

 <label pos:start="123:2" pos:end="123:14"><name pos:start="123:2" pos:end="123:13">roundAndPack</name>:</label>

    <return pos:start="125:5" pos:end="125:63">return <macro pos:start="125:12" pos:end="125:62"><name pos:start="125:12" pos:end="125:30">roundAndPackFloat32</name><argument_list pos:start="125:31" pos:end="125:62">( <argument pos:start="125:33" pos:end="125:37">zSign</argument>, <argument pos:start="125:40" pos:end="125:43">zExp</argument>, <argument pos:start="125:46" pos:end="125:60">zSig STATUS_VAR</argument> )</argument_list></macro>;</return>



</block_content>}</block></function>
</unit>
