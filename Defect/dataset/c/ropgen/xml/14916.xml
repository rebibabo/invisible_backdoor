<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14916.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">nbd_send_option_request</name><parameter_list pos:start="1:35" pos:end="5:48">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:45">QIOChannel</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ioc</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:64">opt</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:43">uint32_t</name></type> <name pos:start="3:45" pos:end="3:47">len</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:59">char</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">data</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:40">Error</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier><modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">nbd_option</name></type> <name pos:start="9:16" pos:end="9:18">req</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="11:22" pos:end="11:40">(<argument pos:start="11:23" pos:end="11:39"><expr pos:start="11:23" pos:end="11:39"><sizeof pos:start="11:23" pos:end="11:33">sizeof<argument_list pos:start="11:29" pos:end="11:33">(<argument pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:32"><name pos:start="11:30" pos:end="11:32">req</name></expr></argument>)</argument_list></sizeof> <operator pos:start="11:35" pos:end="11:36">!=</operator> <literal type="number" pos:start="11:38" pos:end="11:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>)</condition> <block pos:start="15:20" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:40">

        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">req</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:18">length</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:24">len</name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:33">strlen</name><argument_list pos:start="17:34" pos:end="17:39">(<argument pos:start="17:35" pos:end="17:38"><expr pos:start="17:35" pos:end="17:38"><name pos:start="17:35" pos:end="17:38">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:71"><expr pos:start="21:5" pos:end="21:70"><call pos:start="21:5" pos:end="21:70"><name pos:start="21:5" pos:end="21:9">TRACE</name><argument_list pos:start="21:10" pos:end="21:70">(<argument pos:start="21:11" pos:end="21:59"><expr pos:start="21:11" pos:end="21:59"><literal type="string" pos:start="21:11" pos:end="21:36">"Sending option request %"</literal> <name pos:start="21:38" pos:end="21:43">PRIu32</name><literal type="string" pos:start="21:44" pos:end="21:52">", len %"</literal> <name pos:start="21:54" pos:end="21:59">PRIu32</name></expr></argument>, <argument pos:start="21:62" pos:end="21:64"><expr pos:start="21:62" pos:end="21:64"><name pos:start="21:62" pos:end="21:64">opt</name></expr></argument>, <argument pos:start="21:67" pos:end="21:69"><expr pos:start="21:67" pos:end="21:69"><name pos:start="21:67" pos:end="21:69">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:12">stq_be_p</name><argument_list pos:start="25:13" pos:end="25:40">(<argument pos:start="25:14" pos:end="25:23"><expr pos:start="25:14" pos:end="25:23"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:23"><name pos:start="25:15" pos:end="25:17">req</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:23">magic</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:39"><expr pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:39">NBD_OPTS_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><call pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:12">stl_be_p</name><argument_list pos:start="27:13" pos:end="27:30">(<argument pos:start="27:14" pos:end="27:24"><expr pos:start="27:14" pos:end="27:24"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:24"><name pos:start="27:15" pos:end="27:17">req</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:24">option</name></name></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:12">stl_be_p</name><argument_list pos:start="29:13" pos:end="29:30">(<argument pos:start="29:14" pos:end="29:24"><expr pos:start="29:14" pos:end="29:24"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:24"><name pos:start="29:15" pos:end="29:17">req</name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:24">length</name></name></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:53">(<expr pos:start="33:9" pos:end="33:52"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:18">write_sync</name><argument_list pos:start="33:19" pos:end="33:48">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ioc</name></expr></argument>, <argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:28">req</name></expr></argument>, <argument pos:start="33:31" pos:end="33:41"><expr pos:start="33:31" pos:end="33:41"><sizeof pos:start="33:31" pos:end="33:41">sizeof<argument_list pos:start="33:37" pos:end="33:41">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">req</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:44" pos:end="33:47"><expr pos:start="33:44" pos:end="33:47"><name pos:start="33:44" pos:end="33:47">errp</name></expr></argument>)</argument_list></call> <operator pos:start="33:50" pos:end="33:50">&lt;</operator> <literal type="number" pos:start="33:52" pos:end="33:52">0</literal></expr>)</condition> <block pos:start="33:55" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><call pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:21">error_prepend</name><argument_list pos:start="35:22" pos:end="35:67">(<argument pos:start="35:23" pos:end="35:26"><expr pos:start="35:23" pos:end="35:26"><name pos:start="35:23" pos:end="35:26">errp</name></expr></argument>, <argument pos:start="35:29" pos:end="35:66"><expr pos:start="35:29" pos:end="35:66"><literal type="string" pos:start="35:29" pos:end="35:66">"Failed to send option request header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:61">(<expr pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:11">len</name> <operator pos:start="43:13" pos:end="43:14">&amp;&amp;</operator> <call pos:start="43:16" pos:end="43:56"><name pos:start="43:16" pos:end="43:25">write_sync</name><argument_list pos:start="43:26" pos:end="43:56">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">ioc</name></expr></argument>, <argument pos:start="43:32" pos:end="43:44"><expr pos:start="43:32" pos:end="43:44"><operator pos:start="43:32" pos:end="43:32">(</operator><name pos:start="43:33" pos:end="43:36">char</name> <operator pos:start="43:38" pos:end="43:38">*</operator><operator pos:start="43:39" pos:end="43:39">)</operator> <name pos:start="43:41" pos:end="43:44">data</name></expr></argument>, <argument pos:start="43:47" pos:end="43:49"><expr pos:start="43:47" pos:end="43:49"><name pos:start="43:47" pos:end="43:49">len</name></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><name pos:start="43:52" pos:end="43:55">errp</name></expr></argument>)</argument_list></call> <operator pos:start="43:58" pos:end="43:58">&lt;</operator> <literal type="number" pos:start="43:60" pos:end="43:60">0</literal></expr>)</condition> <block pos:start="43:63" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:66"><expr pos:start="45:9" pos:end="45:65"><call pos:start="45:9" pos:end="45:65"><name pos:start="45:9" pos:end="45:21">error_prepend</name><argument_list pos:start="45:22" pos:end="45:65">(<argument pos:start="45:23" pos:end="45:26"><expr pos:start="45:23" pos:end="45:26"><name pos:start="45:23" pos:end="45:26">errp</name></expr></argument>, <argument pos:start="45:29" pos:end="45:64"><expr pos:start="45:29" pos:end="45:64"><literal type="string" pos:start="45:29" pos:end="45:64">"Failed to send option request data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
