<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5564.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">PCIDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:40">do_pci_register_device</name><parameter_list pos:start="1:41" pos:end="5:54">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:50">PCIDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">pci_dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">PCIBus</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">bus</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:57"><decl pos:start="3:42" pos:end="3:57"><type pos:start="3:42" pos:end="3:57"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:51">char</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">name</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:68"><decl pos:start="3:60" pos:end="3:68"><type pos:start="3:60" pos:end="3:68"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:68">devfn</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:46">Error</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier><modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:53">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="205:1">{<block_content pos:start="9:5" pos:end="203:19">

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">PCIDeviceClass</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">pc</name> <init pos:start="9:24" pos:end="9:54">= <expr pos:start="9:26" pos:end="9:54"><call pos:start="9:26" pos:end="9:54"><name pos:start="9:26" pos:end="9:45">PCI_DEVICE_GET_CLASS</name><argument_list pos:start="9:46" pos:end="9:54">(<argument pos:start="9:47" pos:end="9:53"><expr pos:start="9:47" pos:end="9:53"><name pos:start="9:47" pos:end="9:53">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">PCIConfigReadFunc</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:34">config_read</name> <init pos:start="11:36" pos:end="11:52">= <expr pos:start="11:38" pos:end="11:52"><name pos:start="11:38" pos:end="11:52"><name pos:start="11:38" pos:end="11:39">pc</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:52">config_read</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">PCIConfigWriteFunc</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:36">config_write</name> <init pos:start="13:38" pos:end="13:55">= <expr pos:start="13:40" pos:end="13:55"><name pos:start="13:40" pos:end="13:55"><name pos:start="13:40" pos:end="13:41">pc</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:55">config_write</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">DeviceState</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">dev</name> <init pos:start="17:22" pos:end="17:38">= <expr pos:start="17:24" pos:end="17:38"><call pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:29">DEVICE</name><argument_list pos:start="17:30" pos:end="17:38">(<argument pos:start="17:31" pos:end="17:37"><expr pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:37">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:11">pci_dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">bus</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:22">bus</name></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:66">/* Only pci bridges can be attached to extra PCI root buses */</comment>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:66">(<expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:23">pci_bus_is_root</name><argument_list pos:start="25:24" pos:end="25:28">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">bus</name></expr></argument>)</argument_list></call> <operator pos:start="25:30" pos:end="25:31">&amp;&amp;</operator> <name pos:start="25:33" pos:end="25:47"><name pos:start="25:33" pos:end="25:35">bus</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:47">parent_dev</name></name> <operator pos:start="25:49" pos:end="25:50">&amp;&amp;</operator> <operator pos:start="25:52" pos:end="25:52">!</operator><name pos:start="25:53" pos:end="25:65"><name pos:start="25:53" pos:end="25:54">pc</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:65">is_bridge</name></name></expr>)</condition> <block pos:start="25:68" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:20">

        <expr_stmt pos:start="27:9" pos:end="31:43"><expr pos:start="27:9" pos:end="31:42"><call pos:start="27:9" pos:end="31:42"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="31:42">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:70"><expr pos:start="29:20" pos:end="29:70"><literal type="string" pos:start="29:20" pos:end="29:70">"PCI: Only PCI/PCIe bridges can be plugged into %s"</literal></expr></argument>,

                    <argument pos:start="31:21" pos:end="31:41"><expr pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:23">bus</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:35">parent_dev</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:41">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="89:5"><if pos:start="39:5" pos:end="59:5">if <condition pos:start="39:8" pos:end="39:18">(<expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:13">devfn</name> <operator pos:start="39:15" pos:end="39:15">&lt;</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>)</condition> <block pos:start="39:20" pos:end="59:5">{<block_content pos:start="41:9" pos:end="57:12">

        <for pos:start="41:9" pos:end="49:9">for<control pos:start="41:12" pos:end="43:34">(<init pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:17">devfn</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:23">bus</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:34">devfn_min</name></name></expr> ;</init> <condition pos:start="41:38" pos:end="41:70"><expr pos:start="41:38" pos:end="41:69"><name pos:start="41:38" pos:end="41:42">devfn</name> <operator pos:start="41:44" pos:end="41:44">&lt;</operator> <call pos:start="41:46" pos:end="41:69"><name pos:start="41:46" pos:end="41:55">ARRAY_SIZE</name><argument_list pos:start="41:56" pos:end="41:69">(<argument pos:start="41:57" pos:end="41:68"><expr pos:start="41:57" pos:end="41:68"><name pos:start="41:57" pos:end="41:68"><name pos:start="41:57" pos:end="41:59">bus</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:68">devices</name></name></expr></argument>)</argument_list></call></expr>;</condition>

            <incr pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:17">devfn</name> <operator pos:start="43:19" pos:end="43:20">+=</operator> <name pos:start="43:22" pos:end="43:33">PCI_FUNC_MAX</name></expr></incr>)</control> <block pos:start="43:36" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:27">

            <if_stmt pos:start="45:13" pos:end="47:27"><if pos:start="45:13" pos:end="47:27">if <condition pos:start="45:16" pos:end="45:37">(<expr pos:start="45:17" pos:end="45:36"><operator pos:start="45:17" pos:end="45:17">!</operator><name pos:start="45:18" pos:end="45:36"><name pos:start="45:18" pos:end="45:20">bus</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:29">devices</name><index pos:start="45:30" pos:end="45:36">[<expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">devfn</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:27"><block_content pos:start="47:17" pos:end="47:27">

                <goto pos:start="47:17" pos:end="47:27">goto <name pos:start="47:22" pos:end="47:26">found</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="51:9" pos:end="53:25"><expr pos:start="51:9" pos:end="53:24"><call pos:start="51:9" pos:end="53:24"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="53:24">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">errp</name></expr></argument>, <argument pos:start="51:26" pos:end="51:77"><expr pos:start="51:26" pos:end="51:77"><literal type="string" pos:start="51:26" pos:end="51:77">"PCI: no slot/function available for %s, all in use"</literal></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:20">return <expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">NULL</name></expr>;</return>

    <label pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:9">found</name>:</label> <empty_stmt pos:start="57:12" pos:end="57:12">;</empty_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="71:5">else if <condition pos:start="59:15" pos:end="59:35">(<expr pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:18">bus</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:27">devices</name><index pos:start="59:28" pos:end="59:34">[<expr pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:33">devfn</name></expr>]</index></name></expr>)</condition> <block pos:start="59:37" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:20">

        <expr_stmt pos:start="61:9" pos:end="67:46"><expr pos:start="61:9" pos:end="67:45"><call pos:start="61:9" pos:end="67:45"><name pos:start="61:9" pos:end="61:18">error_setg</name><argument_list pos:start="61:19" pos:end="67:45">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">errp</name></expr></argument>, <argument pos:start="61:26" pos:end="63:34"><expr pos:start="61:26" pos:end="63:34"><literal type="string" pos:start="61:26" pos:end="61:73">"PCI: slot %d function %d not available for %s,"</literal>

                   <literal type="string" pos:start="63:20" pos:end="63:34">" in use by %s"</literal></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:34"><expr pos:start="65:20" pos:end="65:34"><call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:27">PCI_SLOT</name><argument_list pos:start="65:28" pos:end="65:34">(<argument pos:start="65:29" pos:end="65:33"><expr pos:start="65:29" pos:end="65:33"><name pos:start="65:29" pos:end="65:33">devfn</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:37" pos:end="65:51"><expr pos:start="65:37" pos:end="65:51"><call pos:start="65:37" pos:end="65:51"><name pos:start="65:37" pos:end="65:44">PCI_FUNC</name><argument_list pos:start="65:45" pos:end="65:51">(<argument pos:start="65:46" pos:end="65:50"><expr pos:start="65:46" pos:end="65:50"><name pos:start="65:46" pos:end="65:50">devfn</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:54" pos:end="65:57"><expr pos:start="65:54" pos:end="65:57"><name pos:start="65:54" pos:end="65:57">name</name></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:44"><expr pos:start="67:20" pos:end="67:44"><name pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:22">bus</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:31">devices</name><index pos:start="67:32" pos:end="67:38">[<expr pos:start="67:33" pos:end="67:37"><name pos:start="67:33" pos:end="67:37">devfn</name></expr>]</index></name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:44">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:20">return <expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">NULL</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="89:5">else if <condition pos:start="71:15" pos:end="73:43">(<expr pos:start="71:16" pos:end="73:42"><name pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:18">dev</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:30">hotplugged</name></name> <operator pos:start="71:32" pos:end="71:33">&amp;&amp;</operator>

               <call pos:start="73:16" pos:end="73:42"><name pos:start="73:16" pos:end="73:33">pci_get_function_0</name><argument_list pos:start="73:34" pos:end="73:42">(<argument pos:start="73:35" pos:end="73:41"><expr pos:start="73:35" pos:end="73:41"><name pos:start="73:35" pos:end="73:41">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:45" pos:end="89:5">{<block_content pos:start="75:9" pos:end="87:19">

        <expr_stmt pos:start="75:9" pos:end="83:25"><expr pos:start="75:9" pos:end="83:24"><call pos:start="75:9" pos:end="83:24"><name pos:start="75:9" pos:end="75:18">error_setg</name><argument_list pos:start="75:19" pos:end="83:24">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">errp</name></expr></argument>, <argument pos:start="75:26" pos:end="77:61"><expr pos:start="75:26" pos:end="77:61"><literal type="string" pos:start="75:26" pos:end="75:74">"PCI: slot %d function 0 already ocuppied by %s,"</literal>

                   <literal type="string" pos:start="77:20" pos:end="77:61">" new func %s cannot be exposed to guest."</literal></expr></argument>,

                   <argument pos:start="79:20" pos:end="79:63"><expr pos:start="79:20" pos:end="79:63"><call pos:start="79:20" pos:end="79:63"><name pos:start="79:20" pos:end="79:27">PCI_SLOT</name><argument_list pos:start="79:28" pos:end="79:63">(<argument pos:start="79:29" pos:end="79:62"><expr pos:start="79:29" pos:end="79:62"><call pos:start="79:29" pos:end="79:55"><name pos:start="79:29" pos:end="79:46">pci_get_function_0</name><argument_list pos:start="79:47" pos:end="79:55">(<argument pos:start="79:48" pos:end="79:54"><expr pos:start="79:48" pos:end="79:54"><name pos:start="79:48" pos:end="79:54">pci_dev</name></expr></argument>)</argument_list></call><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:62">devfn</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:52"><expr pos:start="81:20" pos:end="81:52"><call pos:start="81:20" pos:end="81:46"><name pos:start="81:20" pos:end="81:37">pci_get_function_0</name><argument_list pos:start="81:38" pos:end="81:46">(<argument pos:start="81:39" pos:end="81:45"><expr pos:start="81:39" pos:end="81:45"><name pos:start="81:39" pos:end="81:45">pci_dev</name></expr></argument>)</argument_list></call><operator pos:start="81:47" pos:end="81:48">-&gt;</operator><name pos:start="81:49" pos:end="81:52">name</name></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



       <return pos:start="87:8" pos:end="87:19">return <expr pos:start="87:15" pos:end="87:18"><name pos:start="87:15" pos:end="87:18">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:27"><expr pos:start="93:5" pos:end="93:26"><name pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:11">pci_dev</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:18">devfn</name></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:26">devfn</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:64"><expr pos:start="95:5" pos:end="95:63"><name pos:start="95:5" pos:end="95:31"><name pos:start="95:5" pos:end="95:11">pci_dev</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:31">requester_id_cache</name></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <call pos:start="95:35" pos:end="95:63"><name pos:start="95:35" pos:end="95:54">pci_req_id_cache_get</name><argument_list pos:start="95:55" pos:end="95:63">(<argument pos:start="95:56" pos:end="95:62"><expr pos:start="95:56" pos:end="95:62"><name pos:start="95:56" pos:end="95:62">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="101:59"><expr pos:start="99:5" pos:end="101:58"><call pos:start="99:5" pos:end="101:58"><name pos:start="99:5" pos:end="99:22">memory_region_init</name><argument_list pos:start="99:23" pos:end="101:58">(<argument pos:start="99:24" pos:end="99:60"><expr pos:start="99:24" pos:end="99:60"><operator pos:start="99:24" pos:end="99:24">&amp;</operator><name pos:start="99:25" pos:end="99:60"><name pos:start="99:25" pos:end="99:31">pci_dev</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:60">bus_master_container_region</name></name></expr></argument>, <argument pos:start="99:63" pos:end="99:77"><expr pos:start="99:63" pos:end="99:77"><call pos:start="99:63" pos:end="99:77"><name pos:start="99:63" pos:end="99:68">OBJECT</name><argument_list pos:start="99:69" pos:end="99:77">(<argument pos:start="99:70" pos:end="99:76"><expr pos:start="99:70" pos:end="99:76"><name pos:start="99:70" pos:end="99:76">pci_dev</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="101:24" pos:end="101:45"><expr pos:start="101:24" pos:end="101:45"><literal type="string" pos:start="101:24" pos:end="101:45">"bus master container"</literal></expr></argument>, <argument pos:start="101:48" pos:end="101:57"><expr pos:start="101:48" pos:end="101:57"><name pos:start="101:48" pos:end="101:57">UINT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="105:77"><expr pos:start="103:5" pos:end="105:76"><call pos:start="103:5" pos:end="105:76"><name pos:start="103:5" pos:end="103:22">address_space_init</name><argument_list pos:start="103:23" pos:end="105:76">(<argument pos:start="103:24" pos:end="103:46"><expr pos:start="103:24" pos:end="103:46"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:46"><name pos:start="103:25" pos:end="103:31">pci_dev</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:46">bus_master_as</name></name></expr></argument>,

                       <argument pos:start="105:24" pos:end="105:60"><expr pos:start="105:24" pos:end="105:60"><operator pos:start="105:24" pos:end="105:24">&amp;</operator><name pos:start="105:25" pos:end="105:60"><name pos:start="105:25" pos:end="105:31">pci_dev</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:60">bus_master_container_region</name></name></expr></argument>, <argument pos:start="105:63" pos:end="105:75"><expr pos:start="105:63" pos:end="105:75"><name pos:start="105:63" pos:end="105:75"><name pos:start="105:63" pos:end="105:69">pci_dev</name><operator pos:start="105:70" pos:end="105:71">-&gt;</operator><name pos:start="105:72" pos:end="105:75">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:21">(<expr pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:20">qdev_hotplug</name></expr>)</condition> <block pos:start="109:23" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:37">

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><call pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:27">pci_init_bus_master</name><argument_list pos:start="111:28" pos:end="111:36">(<argument pos:start="111:29" pos:end="111:35"><expr pos:start="111:29" pos:end="111:35"><name pos:start="111:29" pos:end="111:35">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:56"><expr pos:start="115:5" pos:end="115:55"><call pos:start="115:5" pos:end="115:55"><name pos:start="115:5" pos:end="115:11">pstrcpy</name><argument_list pos:start="115:12" pos:end="115:55">(<argument pos:start="115:13" pos:end="115:25"><expr pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:19">pci_dev</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:25">name</name></name></expr></argument>, <argument pos:start="115:28" pos:end="115:48"><expr pos:start="115:28" pos:end="115:48"><sizeof pos:start="115:28" pos:end="115:48">sizeof<argument_list pos:start="115:34" pos:end="115:48">(<argument pos:start="115:35" pos:end="115:47"><expr pos:start="115:35" pos:end="115:47"><name pos:start="115:35" pos:end="115:47"><name pos:start="115:35" pos:end="115:41">pci_dev</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:47">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:51" pos:end="115:54"><expr pos:start="115:51" pos:end="115:54"><name pos:start="115:51" pos:end="115:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:27"><expr pos:start="117:5" pos:end="117:26"><name pos:start="117:5" pos:end="117:22"><name pos:start="117:5" pos:end="117:11">pci_dev</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:22">irq_state</name></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><call pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:20">pci_config_alloc</name><argument_list pos:start="119:21" pos:end="119:29">(<argument pos:start="119:22" pos:end="119:28"><expr pos:start="119:22" pos:end="119:28"><name pos:start="119:22" pos:end="119:28">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:61"><expr pos:start="123:5" pos:end="123:60"><call pos:start="123:5" pos:end="123:60"><name pos:start="123:5" pos:end="123:28">pci_config_set_vendor_id</name><argument_list pos:start="123:29" pos:end="123:60">(<argument pos:start="123:30" pos:end="123:44"><expr pos:start="123:30" pos:end="123:44"><name pos:start="123:30" pos:end="123:44"><name pos:start="123:30" pos:end="123:36">pci_dev</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:44">config</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:59"><expr pos:start="123:47" pos:end="123:59"><name pos:start="123:47" pos:end="123:59"><name pos:start="123:47" pos:end="123:48">pc</name><operator pos:start="123:49" pos:end="123:50">-&gt;</operator><name pos:start="123:51" pos:end="123:59">vendor_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:61"><expr pos:start="125:5" pos:end="125:60"><call pos:start="125:5" pos:end="125:60"><name pos:start="125:5" pos:end="125:28">pci_config_set_device_id</name><argument_list pos:start="125:29" pos:end="125:60">(<argument pos:start="125:30" pos:end="125:44"><expr pos:start="125:30" pos:end="125:44"><name pos:start="125:30" pos:end="125:44"><name pos:start="125:30" pos:end="125:36">pci_dev</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:44">config</name></name></expr></argument>, <argument pos:start="125:47" pos:end="125:59"><expr pos:start="125:47" pos:end="125:59"><name pos:start="125:47" pos:end="125:59"><name pos:start="125:47" pos:end="125:48">pc</name><operator pos:start="125:49" pos:end="125:50">-&gt;</operator><name pos:start="125:51" pos:end="125:59">device_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:59"><expr pos:start="127:5" pos:end="127:58"><call pos:start="127:5" pos:end="127:58"><name pos:start="127:5" pos:end="127:27">pci_config_set_revision</name><argument_list pos:start="127:28" pos:end="127:58">(<argument pos:start="127:29" pos:end="127:43"><expr pos:start="127:29" pos:end="127:43"><name pos:start="127:29" pos:end="127:43"><name pos:start="127:29" pos:end="127:35">pci_dev</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:43">config</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:57"><expr pos:start="127:46" pos:end="127:57"><name pos:start="127:46" pos:end="127:57"><name pos:start="127:46" pos:end="127:47">pc</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:57">revision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:56"><expr pos:start="129:5" pos:end="129:55"><call pos:start="129:5" pos:end="129:55"><name pos:start="129:5" pos:end="129:24">pci_config_set_class</name><argument_list pos:start="129:25" pos:end="129:55">(<argument pos:start="129:26" pos:end="129:40"><expr pos:start="129:26" pos:end="129:40"><name pos:start="129:26" pos:end="129:40"><name pos:start="129:26" pos:end="129:32">pci_dev</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:40">config</name></name></expr></argument>, <argument pos:start="129:43" pos:end="129:54"><expr pos:start="129:43" pos:end="129:54"><name pos:start="129:43" pos:end="129:54"><name pos:start="129:43" pos:end="129:44">pc</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:54">class_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="159:5"><if pos:start="133:5" pos:end="151:5">if <condition pos:start="133:8" pos:end="133:23">(<expr pos:start="133:9" pos:end="133:22"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:22"><name pos:start="133:10" pos:end="133:11">pc</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:22">is_bridge</name></name></expr>)</condition> <block pos:start="133:25" pos:end="151:5">{<block_content pos:start="135:9" pos:end="149:9">

        <if_stmt pos:start="135:9" pos:end="149:9"><if pos:start="135:9" pos:end="145:9">if <condition pos:start="135:12" pos:end="135:56">(<expr pos:start="135:13" pos:end="135:55"><name pos:start="135:13" pos:end="135:35"><name pos:start="135:13" pos:end="135:14">pc</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:35">subsystem_vendor_id</name></name> <operator pos:start="135:37" pos:end="135:38">||</operator> <name pos:start="135:40" pos:end="135:55"><name pos:start="135:40" pos:end="135:41">pc</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:55">subsystem_id</name></name></expr>)</condition> <block pos:start="135:58" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:43">

            <expr_stmt pos:start="137:13" pos:end="139:50"><expr pos:start="137:13" pos:end="139:49"><call pos:start="137:13" pos:end="139:49"><name pos:start="137:13" pos:end="137:24">pci_set_word</name><argument_list pos:start="137:25" pos:end="139:49">(<argument pos:start="137:26" pos:end="137:66"><expr pos:start="137:26" pos:end="137:66"><name pos:start="137:26" pos:end="137:40"><name pos:start="137:26" pos:end="137:32">pci_dev</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:40">config</name></name> <operator pos:start="137:42" pos:end="137:42">+</operator> <name pos:start="137:44" pos:end="137:66">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>,

                         <argument pos:start="139:26" pos:end="139:48"><expr pos:start="139:26" pos:end="139:48"><name pos:start="139:26" pos:end="139:48"><name pos:start="139:26" pos:end="139:27">pc</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:48">subsystem_vendor_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="143:43"><expr pos:start="141:13" pos:end="143:42"><call pos:start="141:13" pos:end="143:42"><name pos:start="141:13" pos:end="141:24">pci_set_word</name><argument_list pos:start="141:25" pos:end="143:42">(<argument pos:start="141:26" pos:end="141:59"><expr pos:start="141:26" pos:end="141:59"><name pos:start="141:26" pos:end="141:40"><name pos:start="141:26" pos:end="141:32">pci_dev</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:40">config</name></name> <operator pos:start="141:42" pos:end="141:42">+</operator> <name pos:start="141:44" pos:end="141:59">PCI_SUBSYSTEM_ID</name></expr></argument>,

                         <argument pos:start="143:26" pos:end="143:41"><expr pos:start="143:26" pos:end="143:41"><name pos:start="143:26" pos:end="143:41"><name pos:start="143:26" pos:end="143:27">pc</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:41">subsystem_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="149:9">else <block pos:start="145:16" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:50">

            <expr_stmt pos:start="147:13" pos:end="147:50"><expr pos:start="147:13" pos:end="147:49"><call pos:start="147:13" pos:end="147:49"><name pos:start="147:13" pos:end="147:40">pci_set_default_subsystem_id</name><argument_list pos:start="147:41" pos:end="147:49">(<argument pos:start="147:42" pos:end="147:48"><expr pos:start="147:42" pos:end="147:48"><name pos:start="147:42" pos:end="147:48">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="159:5">else <block pos:start="151:12" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:34">

        <comment type="block" pos:start="153:9" pos:end="153:73">/* subsystem_vendor_id/subsystem_id are only for header type 0 */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:41"><expr pos:start="155:9" pos:end="155:40"><call pos:start="155:9" pos:end="155:40"><name pos:start="155:9" pos:end="155:14">assert</name><argument_list pos:start="155:15" pos:end="155:40">(<argument pos:start="155:16" pos:end="155:39"><expr pos:start="155:16" pos:end="155:39"><operator pos:start="155:16" pos:end="155:16">!</operator><name pos:start="155:17" pos:end="155:39"><name pos:start="155:17" pos:end="155:18">pc</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:39">subsystem_vendor_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:34"><expr pos:start="157:9" pos:end="157:33"><call pos:start="157:9" pos:end="157:33"><name pos:start="157:9" pos:end="157:14">assert</name><argument_list pos:start="157:15" pos:end="157:33">(<argument pos:start="157:16" pos:end="157:32"><expr pos:start="157:16" pos:end="157:32"><operator pos:start="157:16" pos:end="157:16">!</operator><name pos:start="157:17" pos:end="157:32"><name pos:start="157:17" pos:end="157:18">pc</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:32">subsystem_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:28"><expr pos:start="161:5" pos:end="161:27"><call pos:start="161:5" pos:end="161:27"><name pos:start="161:5" pos:end="161:18">pci_init_cmask</name><argument_list pos:start="161:19" pos:end="161:27">(<argument pos:start="161:20" pos:end="161:26"><expr pos:start="161:20" pos:end="161:26"><name pos:start="161:20" pos:end="161:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:28"><expr pos:start="163:5" pos:end="163:27"><call pos:start="163:5" pos:end="163:27"><name pos:start="163:5" pos:end="163:18">pci_init_wmask</name><argument_list pos:start="163:19" pos:end="163:27">(<argument pos:start="163:20" pos:end="163:26"><expr pos:start="163:20" pos:end="163:26"><name pos:start="163:20" pos:end="163:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:30"><expr pos:start="165:5" pos:end="165:29"><call pos:start="165:5" pos:end="165:29"><name pos:start="165:5" pos:end="165:20">pci_init_w1cmask</name><argument_list pos:start="165:21" pos:end="165:29">(<argument pos:start="165:22" pos:end="165:28"><expr pos:start="165:22" pos:end="165:28"><name pos:start="165:22" pos:end="165:28">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="171:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:22">(<expr pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:10">pc</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:21">is_bridge</name></name></expr>)</condition> <block pos:start="167:24" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:38">

        <expr_stmt pos:start="169:9" pos:end="169:38"><expr pos:start="169:9" pos:end="169:37"><call pos:start="169:9" pos:end="169:37"><name pos:start="169:9" pos:end="169:28">pci_init_mask_bridge</name><argument_list pos:start="169:29" pos:end="169:37">(<argument pos:start="169:30" pos:end="169:36"><expr pos:start="169:30" pos:end="169:36"><name pos:start="169:30" pos:end="169:36">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:53"><expr pos:start="173:5" pos:end="173:52"><call pos:start="173:5" pos:end="173:52"><name pos:start="173:5" pos:end="173:26">pci_init_multifunction</name><argument_list pos:start="173:27" pos:end="173:52">(<argument pos:start="173:28" pos:end="173:30"><expr pos:start="173:28" pos:end="173:30"><name pos:start="173:28" pos:end="173:30">bus</name></expr></argument>, <argument pos:start="173:33" pos:end="173:39"><expr pos:start="173:33" pos:end="173:39"><name pos:start="173:33" pos:end="173:39">pci_dev</name></expr></argument>, <argument pos:start="173:42" pos:end="173:51"><expr pos:start="173:42" pos:end="173:51"><operator pos:start="173:42" pos:end="173:42">&amp;</operator><name pos:start="173:43" pos:end="173:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="175:5" pos:end="183:5"><if pos:start="175:5" pos:end="183:5">if <condition pos:start="175:8" pos:end="175:18">(<expr pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:17">local_err</name></expr>)</condition> <block pos:start="175:20" pos:end="183:5">{<block_content pos:start="177:9" pos:end="181:20">

        <expr_stmt pos:start="177:9" pos:end="177:41"><expr pos:start="177:9" pos:end="177:40"><call pos:start="177:9" pos:end="177:40"><name pos:start="177:9" pos:end="177:23">error_propagate</name><argument_list pos:start="177:24" pos:end="177:40">(<argument pos:start="177:25" pos:end="177:28"><expr pos:start="177:25" pos:end="177:28"><name pos:start="177:25" pos:end="177:28">errp</name></expr></argument>, <argument pos:start="177:31" pos:end="177:39"><expr pos:start="177:31" pos:end="177:39"><name pos:start="177:31" pos:end="177:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:42"><expr pos:start="179:9" pos:end="179:41"><call pos:start="179:9" pos:end="179:41"><name pos:start="179:9" pos:end="179:32">do_pci_unregister_device</name><argument_list pos:start="179:33" pos:end="179:41">(<argument pos:start="179:34" pos:end="179:40"><expr pos:start="179:34" pos:end="179:40"><name pos:start="179:34" pos:end="179:40">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:20">return <expr pos:start="181:16" pos:end="181:19"><name pos:start="181:16" pos:end="181:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="189:46"><if pos:start="187:5" pos:end="189:46">if <condition pos:start="187:8" pos:end="187:21">(<expr pos:start="187:9" pos:end="187:20"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:20">config_read</name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:46"><block_content pos:start="189:9" pos:end="189:46">

        <expr_stmt pos:start="189:9" pos:end="189:46"><expr pos:start="189:9" pos:end="189:45"><name pos:start="189:9" pos:end="189:19">config_read</name> <operator pos:start="189:21" pos:end="189:21">=</operator> <name pos:start="189:23" pos:end="189:45">pci_default_read_config</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="191:5" pos:end="193:48"><if pos:start="191:5" pos:end="193:48">if <condition pos:start="191:8" pos:end="191:22">(<expr pos:start="191:9" pos:end="191:21"><operator pos:start="191:9" pos:end="191:9">!</operator><name pos:start="191:10" pos:end="191:21">config_write</name></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:48"><block_content pos:start="193:9" pos:end="193:48">

        <expr_stmt pos:start="193:9" pos:end="193:48"><expr pos:start="193:9" pos:end="193:47"><name pos:start="193:9" pos:end="193:20">config_write</name> <operator pos:start="193:22" pos:end="193:22">=</operator> <name pos:start="193:24" pos:end="193:47">pci_default_write_config</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:39"><expr pos:start="195:5" pos:end="195:38"><name pos:start="195:5" pos:end="195:24"><name pos:start="195:5" pos:end="195:11">pci_dev</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:24">config_read</name></name> <operator pos:start="195:26" pos:end="195:26">=</operator> <name pos:start="195:28" pos:end="195:38">config_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:41"><expr pos:start="197:5" pos:end="197:40"><name pos:start="197:5" pos:end="197:25"><name pos:start="197:5" pos:end="197:11">pci_dev</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:25">config_write</name></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:40">config_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:34"><expr pos:start="199:5" pos:end="199:33"><name pos:start="199:5" pos:end="199:23"><name pos:start="199:5" pos:end="199:7">bus</name><operator pos:start="199:8" pos:end="199:9">-&gt;</operator><name pos:start="199:10" pos:end="199:16">devices</name><index pos:start="199:17" pos:end="199:23">[<expr pos:start="199:18" pos:end="199:22"><name pos:start="199:18" pos:end="199:22">devfn</name></expr>]</index></name> <operator pos:start="199:25" pos:end="199:25">=</operator> <name pos:start="199:27" pos:end="199:33">pci_dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:28"><expr pos:start="201:5" pos:end="201:27"><name pos:start="201:5" pos:end="201:23"><name pos:start="201:5" pos:end="201:11">pci_dev</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:23">version_id</name></name> <operator pos:start="201:25" pos:end="201:25">=</operator> <literal type="number" pos:start="201:27" pos:end="201:27">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="201:30" pos:end="201:69">/* Current pci device vmstate version */</comment>

    <return pos:start="203:5" pos:end="203:19">return <expr pos:start="203:12" pos:end="203:18"><name pos:start="203:12" pos:end="203:18">pci_dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
