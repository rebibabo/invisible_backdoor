<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5702.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:32">dec_movem_mr</name><parameter_list pos:start="1:33" pos:end="1:50">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:45">DisasContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:9" pos:end="85:17">

	<decl_stmt pos:start="5:9" pos:end="5:21"><decl pos:start="5:9" pos:end="5:20"><type pos:start="5:9" pos:end="5:12"><name pos:start="5:9" pos:end="5:12">TCGv</name></type> <name pos:start="5:14" pos:end="5:20"><name pos:start="5:14" pos:end="5:16">tmp</name><index pos:start="5:17" pos:end="5:20">[<expr pos:start="5:18" pos:end="5:19"><literal type="number" pos:start="5:18" pos:end="5:19">16</literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">TCGv</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:29"><decl pos:start="11:9" pos:end="11:28"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:14">nr</name> <init pos:start="11:16" pos:end="11:28">= <expr pos:start="11:18" pos:end="11:28"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:19">dc</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:24">op2</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <literal type="number" pos:start="11:28" pos:end="11:28">1</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="15:9" pos:end="17:56"><expr pos:start="15:9" pos:end="17:55"><call pos:start="15:9" pos:end="17:55"><name pos:start="15:9" pos:end="15:11">DIS</name><argument_list pos:start="15:12" pos:end="17:55">(<argument pos:start="15:13" pos:end="17:54"><expr pos:start="15:13" pos:end="17:54"><call pos:start="15:13" pos:end="17:54"><name pos:start="15:13" pos:end="15:19">fprintf</name> <argument_list pos:start="15:21" pos:end="17:54">(<argument pos:start="15:22" pos:end="15:28"><expr pos:start="15:22" pos:end="15:28"><name pos:start="15:22" pos:end="15:28">logfile</name></expr></argument>, <argument pos:start="15:31" pos:end="15:53"><expr pos:start="15:31" pos:end="15:53"><literal type="string" pos:start="15:31" pos:end="15:53">"movem [$r%u%s, $r%u\n"</literal></expr></argument>, <argument pos:start="15:56" pos:end="15:62"><expr pos:start="15:56" pos:end="15:62"><name pos:start="15:56" pos:end="15:62"><name pos:start="15:56" pos:end="15:57">dc</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:62">op1</name></name></expr></argument>,

		    <argument pos:start="17:21" pos:end="17:44"><expr pos:start="17:21" pos:end="17:44"><ternary pos:start="17:21" pos:end="17:44"><condition pos:start="17:21" pos:end="17:33"><expr pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:22">dc</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:31">postinc</name></name></expr> ?</condition><then pos:start="17:35" pos:end="17:38"> <expr pos:start="17:35" pos:end="17:38"><literal type="string" pos:start="17:35" pos:end="17:38">"+]"</literal></expr> </then><else pos:start="17:40" pos:end="17:44">: <expr pos:start="17:42" pos:end="17:44"><literal type="string" pos:start="17:42" pos:end="17:44">"]"</literal></expr></else></ternary></expr></argument>, <argument pos:start="17:47" pos:end="17:53"><expr pos:start="17:47" pos:end="17:53"><name pos:start="17:47" pos:end="17:53"><name pos:start="17:47" pos:end="17:48">dc</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:53">op2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:12">addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:40"><name pos:start="21:16" pos:end="21:27">tcg_temp_new</name><argument_list pos:start="21:28" pos:end="21:40">(<argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block" pos:start="23:9" pos:end="23:60">/* There are probably better ways of doing this.  */</comment>

	<expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:27">cris_flush_cc_state</name><argument_list pos:start="25:28" pos:end="25:31">(<argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:start="27:9" pos:end="35:9">for <control pos:start="27:13" pos:end="27:39">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:34"><expr pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:27">nr</name> <operator pos:start="27:29" pos:end="27:30">&gt;&gt;</operator> <literal type="number" pos:start="27:32" pos:end="27:32">1</literal><operator pos:start="27:33" pos:end="27:33">)</operator></expr>;</condition> <incr pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:36">i</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control> <block pos:start="27:41" pos:end="35:9">{<block_content pos:start="29:17" pos:end="33:49">

		<expr_stmt pos:start="29:17" pos:end="29:52"><expr pos:start="29:17" pos:end="29:51"><name pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:19">tmp</name><index pos:start="29:20" pos:end="29:22">[<expr pos:start="29:21" pos:end="29:21"><name pos:start="29:21" pos:end="29:21">i</name></expr>]</index></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:51"><name pos:start="29:26" pos:end="29:37">tcg_temp_new</name><argument_list pos:start="29:38" pos:end="29:51">(<argument pos:start="29:39" pos:end="29:50"><expr pos:start="29:39" pos:end="29:50"><name pos:start="29:39" pos:end="29:50">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="31:17" pos:end="31:61"><expr pos:start="31:17" pos:end="31:60"><call pos:start="31:17" pos:end="31:60"><name pos:start="31:17" pos:end="31:31">tcg_gen_addi_tl</name><argument_list pos:start="31:32" pos:end="31:60">(<argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">addr</name></expr></argument>, <argument pos:start="31:39" pos:end="31:52"><expr pos:start="31:39" pos:end="31:52"><name pos:start="31:39" pos:end="31:52"><name pos:start="31:39" pos:end="31:43">cpu_R</name><index pos:start="31:44" pos:end="31:52">[<expr pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:46">dc</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:51">op1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="31:55" pos:end="31:59"><expr pos:start="31:55" pos:end="31:59"><name pos:start="31:55" pos:end="31:55">i</name> <operator pos:start="31:57" pos:end="31:57">*</operator> <literal type="number" pos:start="31:59" pos:end="31:59">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="33:17" pos:end="33:49"><expr pos:start="33:17" pos:end="33:48"><call pos:start="33:17" pos:end="33:48"><name pos:start="33:17" pos:end="33:24">gen_load</name><argument_list pos:start="33:25" pos:end="33:48">(<argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><name pos:start="33:26" pos:end="33:27">dc</name></expr></argument>, <argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:32">tmp</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><name pos:start="33:38" pos:end="33:41">addr</name></expr></argument>, <argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">8</literal></expr></argument>, <argument pos:start="33:47" pos:end="33:47"><expr pos:start="33:47" pos:end="33:47"><literal type="number" pos:start="33:47" pos:end="33:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

	<if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:19">(<expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:14">nr</name> <operator pos:start="37:16" pos:end="37:16">&amp;</operator> <literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>)</condition> <block pos:start="37:21" pos:end="45:9">{<block_content pos:start="39:17" pos:end="43:49">

		<expr_stmt pos:start="39:17" pos:end="39:52"><expr pos:start="39:17" pos:end="39:51"><name pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:19">tmp</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">i</name></expr>]</index></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <call pos:start="39:26" pos:end="39:51"><name pos:start="39:26" pos:end="39:37">tcg_temp_new</name><argument_list pos:start="39:38" pos:end="39:51">(<argument pos:start="39:39" pos:end="39:50"><expr pos:start="39:39" pos:end="39:50"><name pos:start="39:39" pos:end="39:50">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="41:17" pos:end="41:61"><expr pos:start="41:17" pos:end="41:60"><call pos:start="41:17" pos:end="41:60"><name pos:start="41:17" pos:end="41:31">tcg_gen_addi_tl</name><argument_list pos:start="41:32" pos:end="41:60">(<argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">addr</name></expr></argument>, <argument pos:start="41:39" pos:end="41:52"><expr pos:start="41:39" pos:end="41:52"><name pos:start="41:39" pos:end="41:52"><name pos:start="41:39" pos:end="41:43">cpu_R</name><index pos:start="41:44" pos:end="41:52">[<expr pos:start="41:45" pos:end="41:51"><name pos:start="41:45" pos:end="41:51"><name pos:start="41:45" pos:end="41:46">dc</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:51">op1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="41:55" pos:end="41:59"><expr pos:start="41:55" pos:end="41:59"><name pos:start="41:55" pos:end="41:55">i</name> <operator pos:start="41:57" pos:end="41:57">*</operator> <literal type="number" pos:start="41:59" pos:end="41:59">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="43:17" pos:end="43:49"><expr pos:start="43:17" pos:end="43:48"><call pos:start="43:17" pos:end="43:48"><name pos:start="43:17" pos:end="43:24">gen_load</name><argument_list pos:start="43:25" pos:end="43:48">(<argument pos:start="43:26" pos:end="43:27"><expr pos:start="43:26" pos:end="43:27"><name pos:start="43:26" pos:end="43:27">dc</name></expr></argument>, <argument pos:start="43:30" pos:end="43:35"><expr pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:32">tmp</name><index pos:start="43:33" pos:end="43:35">[<expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:38" pos:end="43:41"><expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">addr</name></expr></argument>, <argument pos:start="43:44" pos:end="43:44"><expr pos:start="43:44" pos:end="43:44"><literal type="number" pos:start="43:44" pos:end="43:44">4</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:47"><expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:21">tcg_temp_free</name><argument_list pos:start="47:22" pos:end="47:27">(<argument pos:start="47:23" pos:end="47:26"><expr pos:start="47:23" pos:end="47:26"><name pos:start="47:23" pos:end="47:26">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<for pos:start="51:9" pos:end="61:9">for <control pos:start="51:13" pos:end="51:39">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:34"><expr pos:start="51:21" pos:end="51:33"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:27">nr</name> <operator pos:start="51:29" pos:end="51:30">&gt;&gt;</operator> <literal type="number" pos:start="51:32" pos:end="51:32">1</literal><operator pos:start="51:33" pos:end="51:33">)</operator></expr>;</condition> <incr pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:36">i</name><operator pos:start="51:37" pos:end="51:38">++</operator></expr></incr>)</control> <block pos:start="51:41" pos:end="61:9">{<block_content pos:start="53:17" pos:end="59:38">

		<expr_stmt pos:start="53:17" pos:end="53:60"><expr pos:start="53:17" pos:end="53:59"><call pos:start="53:17" pos:end="53:59"><name pos:start="53:17" pos:end="53:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="53:38" pos:end="53:59">(<argument pos:start="53:39" pos:end="53:50"><expr pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:43">cpu_R</name><index pos:start="53:44" pos:end="53:50">[<expr pos:start="53:45" pos:end="53:49"><name pos:start="53:45" pos:end="53:45">i</name> <operator pos:start="53:47" pos:end="53:47">*</operator> <literal type="number" pos:start="53:49" pos:end="53:49">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:53" pos:end="53:58"><expr pos:start="53:53" pos:end="53:58"><name pos:start="53:53" pos:end="53:58"><name pos:start="53:53" pos:end="53:55">tmp</name><index pos:start="53:56" pos:end="53:58">[<expr pos:start="53:57" pos:end="53:57"><name pos:start="53:57" pos:end="53:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="55:17" pos:end="55:53"><expr pos:start="55:17" pos:end="55:52"><call pos:start="55:17" pos:end="55:52"><name pos:start="55:17" pos:end="55:32">tcg_gen_shri_i64</name><argument_list pos:start="55:33" pos:end="55:52">(<argument pos:start="55:34" pos:end="55:39"><expr pos:start="55:34" pos:end="55:39"><name pos:start="55:34" pos:end="55:39"><name pos:start="55:34" pos:end="55:36">tmp</name><index pos:start="55:37" pos:end="55:39">[<expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="55:42" pos:end="55:47"><expr pos:start="55:42" pos:end="55:47"><name pos:start="55:42" pos:end="55:47"><name pos:start="55:42" pos:end="55:44">tmp</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><name pos:start="55:46" pos:end="55:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="55:50" pos:end="55:51"><expr pos:start="55:50" pos:end="55:51"><literal type="number" pos:start="55:50" pos:end="55:51">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="57:17" pos:end="57:64"><expr pos:start="57:17" pos:end="57:63"><call pos:start="57:17" pos:end="57:63"><name pos:start="57:17" pos:end="57:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="57:38" pos:end="57:63">(<argument pos:start="57:39" pos:end="57:54"><expr pos:start="57:39" pos:end="57:54"><name pos:start="57:39" pos:end="57:54"><name pos:start="57:39" pos:end="57:43">cpu_R</name><index pos:start="57:44" pos:end="57:54">[<expr pos:start="57:45" pos:end="57:53"><name pos:start="57:45" pos:end="57:45">i</name> <operator pos:start="57:47" pos:end="57:47">*</operator> <literal type="number" pos:start="57:49" pos:end="57:51">2</literal> <operator pos:start="57:51" pos:end="57:51">+</operator> <literal type="number" pos:start="57:53" pos:end="57:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:57" pos:end="57:62"><expr pos:start="57:57" pos:end="57:62"><name pos:start="57:57" pos:end="57:62"><name pos:start="57:57" pos:end="57:59">tmp</name><index pos:start="57:60" pos:end="57:62">[<expr pos:start="57:61" pos:end="57:61"><name pos:start="57:61" pos:end="57:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="59:17" pos:end="59:38"><expr pos:start="59:17" pos:end="59:37"><call pos:start="59:17" pos:end="59:37"><name pos:start="59:17" pos:end="59:29">tcg_temp_free</name><argument_list pos:start="59:30" pos:end="59:37">(<argument pos:start="59:31" pos:end="59:36"><expr pos:start="59:31" pos:end="59:36"><name pos:start="59:31" pos:end="59:36"><name pos:start="59:31" pos:end="59:33">tmp</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

	<if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:19">(<expr pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:14">nr</name> <operator pos:start="63:16" pos:end="63:16">&amp;</operator> <literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>)</condition> <block pos:start="63:21" pos:end="69:9">{<block_content pos:start="65:17" pos:end="67:38">

		<expr_stmt pos:start="65:17" pos:end="65:55"><expr pos:start="65:17" pos:end="65:54"><call pos:start="65:17" pos:end="65:54"><name pos:start="65:17" pos:end="65:30">tcg_gen_mov_tl</name><argument_list pos:start="65:31" pos:end="65:54">(<argument pos:start="65:32" pos:end="65:45"><expr pos:start="65:32" pos:end="65:45"><name pos:start="65:32" pos:end="65:45"><name pos:start="65:32" pos:end="65:36">cpu_R</name><index pos:start="65:37" pos:end="65:45">[<expr pos:start="65:38" pos:end="65:44"><name pos:start="65:38" pos:end="65:44"><name pos:start="65:38" pos:end="65:39">dc</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:44">op2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="65:48" pos:end="65:53"><expr pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:50">tmp</name><index pos:start="65:51" pos:end="65:53">[<expr pos:start="65:52" pos:end="65:52"><name pos:start="65:52" pos:end="65:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="67:17" pos:end="67:38"><expr pos:start="67:17" pos:end="67:37"><call pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:29">tcg_temp_free</name><argument_list pos:start="67:30" pos:end="67:37">(<argument pos:start="67:31" pos:end="67:36"><expr pos:start="67:31" pos:end="67:36"><name pos:start="67:31" pos:end="67:36"><name pos:start="67:31" pos:end="67:33">tmp</name><index pos:start="67:34" pos:end="67:36">[<expr pos:start="67:35" pos:end="67:35"><name pos:start="67:35" pos:end="67:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="73:9" pos:end="73:51">/* writeback the updated pointer value.  */</comment>

	<if_stmt pos:start="75:9" pos:end="77:72"><if pos:start="75:9" pos:end="77:72">if <condition pos:start="75:12" pos:end="75:24">(<expr pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:14">dc</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:23">postinc</name></name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:72"><block_content pos:start="77:17" pos:end="77:72">

		<expr_stmt pos:start="77:17" pos:end="77:72"><expr pos:start="77:17" pos:end="77:71"><call pos:start="77:17" pos:end="77:71"><name pos:start="77:17" pos:end="77:31">tcg_gen_addi_tl</name><argument_list pos:start="77:32" pos:end="77:71">(<argument pos:start="77:33" pos:end="77:46"><expr pos:start="77:33" pos:end="77:46"><name pos:start="77:33" pos:end="77:46"><name pos:start="77:33" pos:end="77:37">cpu_R</name><index pos:start="77:38" pos:end="77:46">[<expr pos:start="77:39" pos:end="77:45"><name pos:start="77:39" pos:end="77:45"><name pos:start="77:39" pos:end="77:40">dc</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:45">op1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="77:49" pos:end="77:62"><expr pos:start="77:49" pos:end="77:62"><name pos:start="77:49" pos:end="77:62"><name pos:start="77:49" pos:end="77:53">cpu_R</name><index pos:start="77:54" pos:end="77:62">[<expr pos:start="77:55" pos:end="77:61"><name pos:start="77:55" pos:end="77:61"><name pos:start="77:55" pos:end="77:56">dc</name><operator pos:start="77:57" pos:end="77:58">-&gt;</operator><name pos:start="77:59" pos:end="77:61">op1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="77:65" pos:end="77:70"><expr pos:start="77:65" pos:end="77:70"><name pos:start="77:65" pos:end="77:66">nr</name> <operator pos:start="77:68" pos:end="77:68">*</operator> <literal type="number" pos:start="77:70" pos:end="77:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



	<comment type="block" pos:start="81:9" pos:end="81:72">/* gen_load might want to evaluate the previous insns flags.  */</comment>

	<expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><call pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:20">cris_cc_mask</name><argument_list pos:start="83:21" pos:end="83:27">(<argument pos:start="83:22" pos:end="83:23"><expr pos:start="83:22" pos:end="83:23"><name pos:start="83:22" pos:end="83:23">dc</name></expr></argument>, <argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="85:9" pos:end="85:17">return <expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
