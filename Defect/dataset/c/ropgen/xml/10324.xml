<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10324.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:50">vaapi_encode_h265_init_internal</name><parameter_list pos:start="1:51" pos:end="1:73">(<parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:65">AVCodecContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="17:6"><decl pos:start="5:5" pos:end="17:5"><type pos:start="5:5" pos:end="5:31"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:31">VAConfigAttrib</name></type> <name pos:start="5:33" pos:end="5:59"><name pos:start="5:33" pos:end="5:57">default_config_attributes</name><index pos:start="5:58" pos:end="5:59">[]</index></name> <init pos:start="5:61" pos:end="17:5">= <expr pos:start="5:63" pos:end="17:5"><block pos:start="5:63" pos:end="17:5">{

        <expr pos:start="7:9" pos:end="9:40"><block pos:start="7:9" pos:end="9:40">{ <expr pos:start="7:11" pos:end="7:41"><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:15">type</name>  <operator pos:start="7:18" pos:end="7:18">=</operator> <name pos:start="7:20" pos:end="7:41">VAConfigAttribRTFormat</name></expr>,

          <expr pos:start="9:11" pos:end="9:38"><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:16">value</name> <operator pos:start="9:18" pos:end="9:18">=</operator> <name pos:start="9:20" pos:end="9:38">VA_RT_FORMAT_YUV420</name></expr> }</block></expr>,

        <expr pos:start="11:9" pos:end="15:49"><block pos:start="11:9" pos:end="15:49">{ <expr pos:start="11:11" pos:end="11:49"><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:15">type</name>  <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:49">VAConfigAttribEncPackedHeaders</name></expr>,

          <expr pos:start="13:11" pos:end="15:47"><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:16">value</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <operator pos:start="13:20" pos:end="13:20">(</operator><name pos:start="13:21" pos:end="13:49">VA_ENC_PACKED_HEADER_SEQUENCE</name> <operator pos:start="13:51" pos:end="13:51">|</operator>

                    <name pos:start="15:21" pos:end="15:46">VA_ENC_PACKED_HEADER_SLICE</name><operator pos:start="15:47" pos:end="15:47">)</operator></expr> }</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:52"><decl pos:start="21:5" pos:end="21:51"><type pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:22">VAAPIEncodeContext</name>      <modifier pos:start="21:29" pos:end="21:29">*</modifier></type><name pos:start="21:30" pos:end="21:32">ctx</name> <init pos:start="21:34" pos:end="21:51">= <expr pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:40">avctx</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:50"><decl pos:start="23:5" pos:end="23:49"><type pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:26">VAAPIEncodeH265Context</name> <modifier pos:start="23:28" pos:end="23:28">*</modifier></type><name pos:start="23:29" pos:end="23:32">priv</name> <init pos:start="23:34" pos:end="23:49">= <expr pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:38">ctx</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:14"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:14">err</name></decl>;</decl_stmt>



    <switch pos:start="29:5" pos:end="55:5">switch <condition pos:start="29:12" pos:end="29:27">(<expr pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:17">avctx</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:26">profile</name></name></expr>)</condition> <block pos:start="29:29" pos:end="55:5">{<block_content pos:start="31:5" pos:end="53:31">

    <case pos:start="31:5" pos:end="31:30">case <expr pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:29">FF_PROFILE_HEVC_MAIN</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:28">case <expr pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:27">FF_PROFILE_UNKNOWN</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:11">ctx</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:23">va_profile</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:43">VAProfileHEVCMain</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:33">case <expr pos:start="39:10" pos:end="39:32"><name pos:start="39:10" pos:end="39:32">FF_PROFILE_HEVC_MAIN_10</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="43:38"><expr pos:start="41:9" pos:end="43:37"><call pos:start="41:9" pos:end="43:37"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:37">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:37" pos:end="43:36"><expr pos:start="41:37" pos:end="43:36"><literal type="string" pos:start="41:37" pos:end="41:64">"H.265 main 10-bit profile "</literal>

               <literal type="string" pos:start="43:16" pos:end="43:36">"is not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:36">return <expr pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <expr_stmt pos:start="49:9" pos:end="51:31"><expr pos:start="49:9" pos:end="51:30"><call pos:start="49:9" pos:end="51:30"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:30">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:65"><expr pos:start="49:37" pos:end="49:65"><literal type="string" pos:start="49:37" pos:end="49:65">"Unknown H.265 profile %d.\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:29"><expr pos:start="51:16" pos:end="51:29"><name pos:start="51:16" pos:end="51:29"><name pos:start="51:16" pos:end="51:20">avctx</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:29">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:7">ctx</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:22">va_entrypoint</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:45">VAEntrypointEncSlice</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">ctx</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:20">input_width</name></name>    <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:31">avctx</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:38">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:7">ctx</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:21">input_height</name></name>   <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:39"><name pos:start="63:27" pos:end="63:31">avctx</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:39">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:57"><expr pos:start="65:5" pos:end="65:56"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:7">ctx</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:22">aligned_width</name></name>  <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:56"><name pos:start="65:27" pos:end="65:33">FFALIGN</name><argument_list pos:start="65:34" pos:end="65:56">(<argument pos:start="65:35" pos:end="65:50"><expr pos:start="65:35" pos:end="65:50"><name pos:start="65:35" pos:end="65:50"><name pos:start="65:35" pos:end="65:37">ctx</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:50">input_width</name></name></expr></argument>,  <argument pos:start="65:54" pos:end="65:55"><expr pos:start="65:54" pos:end="65:55"><literal type="number" pos:start="65:54" pos:end="65:55">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:57"><expr pos:start="67:5" pos:end="67:56"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:7">ctx</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:23">aligned_height</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <call pos:start="67:27" pos:end="67:56"><name pos:start="67:27" pos:end="67:33">FFALIGN</name><argument_list pos:start="67:34" pos:end="67:56">(<argument pos:start="67:35" pos:end="67:51"><expr pos:start="67:35" pos:end="67:51"><name pos:start="67:35" pos:end="67:51"><name pos:start="67:35" pos:end="67:37">ctx</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:51">input_height</name></name></expr></argument>, <argument pos:start="67:54" pos:end="67:55"><expr pos:start="67:54" pos:end="67:55"><literal type="number" pos:start="67:54" pos:end="67:55">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:64"><expr pos:start="69:5" pos:end="69:63"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:8">priv</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:19">ctu_width</name></name>     <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:58"><name pos:start="69:27" pos:end="69:33">FFALIGN</name><argument_list pos:start="69:34" pos:end="69:58">(<argument pos:start="69:35" pos:end="69:52"><expr pos:start="69:35" pos:end="69:52"><name pos:start="69:35" pos:end="69:52"><name pos:start="69:35" pos:end="69:37">ctx</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:52">aligned_width</name></name></expr></argument>,  <argument pos:start="69:56" pos:end="69:57"><expr pos:start="69:56" pos:end="69:57"><literal type="number" pos:start="69:56" pos:end="69:57">32</literal></expr></argument>)</argument_list></call> <operator pos:start="69:60" pos:end="69:60">/</operator> <literal type="number" pos:start="69:62" pos:end="69:63">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:64"><expr pos:start="71:5" pos:end="71:63"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:8">priv</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:20">ctu_height</name></name>    <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:58"><name pos:start="71:27" pos:end="71:33">FFALIGN</name><argument_list pos:start="71:34" pos:end="71:58">(<argument pos:start="71:35" pos:end="71:53"><expr pos:start="71:35" pos:end="71:53"><name pos:start="71:35" pos:end="71:53"><name pos:start="71:35" pos:end="71:37">ctx</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:53">aligned_height</name></name></expr></argument>, <argument pos:start="71:56" pos:end="71:57"><expr pos:start="71:56" pos:end="71:57"><literal type="number" pos:start="71:56" pos:end="71:57">32</literal></expr></argument>)</argument_list></call> <operator pos:start="71:60" pos:end="71:60">/</operator> <literal type="number" pos:start="71:62" pos:end="71:63">32</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="79:67"><expr pos:start="75:5" pos:end="79:66"><call pos:start="75:5" pos:end="79:66"><name pos:start="75:5" pos:end="75:10">av_log</name><argument_list pos:start="75:11" pos:end="79:66">(<argument pos:start="75:12" pos:end="75:16"><expr pos:start="75:12" pos:end="75:16"><name pos:start="75:12" pos:end="75:16">avctx</name></expr></argument>, <argument pos:start="75:19" pos:end="75:32"><expr pos:start="75:19" pos:end="75:32"><name pos:start="75:19" pos:end="75:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="75:35" pos:end="75:80"><expr pos:start="75:35" pos:end="75:80"><literal type="string" pos:start="75:35" pos:end="75:80">"Input %ux%u -&gt; Aligned %ux%u -&gt; CTU %ux%u.\n"</literal></expr></argument>,

           <argument pos:start="77:12" pos:end="77:27"><expr pos:start="77:12" pos:end="77:27"><name pos:start="77:12" pos:end="77:27"><name pos:start="77:12" pos:end="77:14">ctx</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:27">input_width</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:46"><expr pos:start="77:30" pos:end="77:46"><name pos:start="77:30" pos:end="77:46"><name pos:start="77:30" pos:end="77:32">ctx</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:46">input_height</name></name></expr></argument>, <argument pos:start="77:49" pos:end="77:66"><expr pos:start="77:49" pos:end="77:66"><name pos:start="77:49" pos:end="77:66"><name pos:start="77:49" pos:end="77:51">ctx</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:66">aligned_width</name></name></expr></argument>,

           <argument pos:start="79:12" pos:end="79:30"><expr pos:start="79:12" pos:end="79:30"><name pos:start="79:12" pos:end="79:30"><name pos:start="79:12" pos:end="79:14">ctx</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:30">aligned_height</name></name></expr></argument>, <argument pos:start="79:33" pos:end="79:47"><expr pos:start="79:33" pos:end="79:47"><name pos:start="79:33" pos:end="79:47"><name pos:start="79:33" pos:end="79:36">priv</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:47">ctu_width</name></name></expr></argument>, <argument pos:start="79:50" pos:end="79:65"><expr pos:start="79:50" pos:end="79:65"><name pos:start="79:50" pos:end="79:65"><name pos:start="79:50" pos:end="79:53">priv</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:65">ctu_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="83:5" pos:end="89:5">for <control pos:start="83:9" pos:end="83:67">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:62"><expr pos:start="83:17" pos:end="83:61"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <call pos:start="83:21" pos:end="83:61"><name pos:start="83:21" pos:end="83:34">FF_ARRAY_ELEMS</name><argument_list pos:start="83:35" pos:end="83:61">(<argument pos:start="83:36" pos:end="83:60"><expr pos:start="83:36" pos:end="83:60"><name pos:start="83:36" pos:end="83:60">default_config_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="83:64" pos:end="83:66"><expr pos:start="83:64" pos:end="83:66"><name pos:start="83:64" pos:end="83:64">i</name><operator pos:start="83:65" pos:end="83:66">++</operator></expr></incr>)</control> <block pos:start="83:69" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:41">

        <expr_stmt pos:start="85:9" pos:end="87:41"><expr pos:start="85:9" pos:end="87:40"><name pos:start="85:9" pos:end="85:59"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:30">config_attributes</name><index pos:start="85:31" pos:end="85:59">[<expr pos:start="85:32" pos:end="85:58"><name pos:start="85:32" pos:end="85:56"><name pos:start="85:32" pos:end="85:34">ctx</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:56">nb_config_attributes</name></name><operator pos:start="85:57" pos:end="85:58">++</operator></expr>]</index></name> <operator pos:start="85:61" pos:end="85:61">=</operator>

            <name pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:37">default_config_attributes</name><index pos:start="87:38" pos:end="87:40">[<expr pos:start="87:39" pos:end="87:39"><name pos:start="87:39" pos:end="87:39">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="93:5" pos:end="105:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:28">(<expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:13">avctx</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">bit_rate</name></name> <operator pos:start="93:25" pos:end="93:25">&gt;</operator> <literal type="number" pos:start="93:27" pos:end="93:27">0</literal></expr>)</condition> <block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:61">

        <expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:11">ctx</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:23">va_rc_mode</name></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:35">VA_RC_CBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:61"><expr pos:start="97:9" pos:end="97:60"><name pos:start="97:9" pos:end="97:11">err</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:60"><name pos:start="97:15" pos:end="97:53">vaapi_encode_h265_init_constant_bitrate</name><argument_list pos:start="97:54" pos:end="97:60">(<argument pos:start="97:55" pos:end="97:59"><expr pos:start="97:55" pos:end="97:59"><name pos:start="97:55" pos:end="97:59">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="105:5">else <block pos:start="99:12" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:53">

        <expr_stmt pos:start="101:9" pos:end="101:36"><expr pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:23">va_rc_mode</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:35">VA_RC_CQP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:53"><expr pos:start="103:9" pos:end="103:52"><name pos:start="103:9" pos:end="103:11">err</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:52"><name pos:start="103:15" pos:end="103:45">vaapi_encode_h265_init_fixed_qp</name><argument_list pos:start="103:46" pos:end="103:52">(<argument pos:start="103:47" pos:end="103:51"><expr pos:start="103:47" pos:end="103:51"><name pos:start="103:47" pos:end="103:51">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="107:5" pos:end="109:19"><if pos:start="107:5" pos:end="109:19">if <condition pos:start="107:8" pos:end="107:16">(<expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">err</name> <operator pos:start="107:13" pos:end="107:13">&lt;</operator> <literal type="number" pos:start="107:15" pos:end="107:15">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:19"><block_content pos:start="109:9" pos:end="109:19">

        <return pos:start="109:9" pos:end="109:19">return <expr pos:start="109:16" pos:end="109:18"><name pos:start="109:16" pos:end="109:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="119:6"><expr pos:start="113:5" pos:end="119:5"><name pos:start="113:5" pos:end="113:55"><name pos:start="113:5" pos:end="113:7">ctx</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:26">config_attributes</name><index pos:start="113:27" pos:end="113:55">[<expr pos:start="113:28" pos:end="113:54"><name pos:start="113:28" pos:end="113:52"><name pos:start="113:28" pos:end="113:30">ctx</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:52">nb_config_attributes</name></name><operator pos:start="113:53" pos:end="113:54">++</operator></expr>]</index></name> <operator pos:start="113:57" pos:end="113:57">=</operator> <operator pos:start="113:59" pos:end="113:59">(</operator><name pos:start="113:60" pos:end="113:73">VAConfigAttrib</name><operator pos:start="113:74" pos:end="113:74">)</operator> <block pos:start="113:76" pos:end="119:5">{

        <expr pos:start="115:9" pos:end="115:42"><operator pos:start="115:9" pos:end="115:9">.</operator><name pos:start="115:10" pos:end="115:13">type</name>  <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:42">VAConfigAttribRateControl</name></expr>,

        <expr pos:start="117:9" pos:end="117:32"><operator pos:start="117:9" pos:end="117:9">.</operator><name pos:start="117:10" pos:end="117:14">value</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <name pos:start="117:18" pos:end="117:32"><name pos:start="117:18" pos:end="117:20">ctx</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:32">va_rc_mode</name></name></expr>,

    }</block></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:30"><expr pos:start="123:5" pos:end="123:29"><name pos:start="123:5" pos:end="123:24"><name pos:start="123:5" pos:end="123:7">ctx</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:24">nb_recon_frames</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <literal type="number" pos:start="123:28" pos:end="123:29">20</literal></expr>;</expr_stmt>



    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
