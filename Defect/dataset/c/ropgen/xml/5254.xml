<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5254.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">uint8_t</name></type> <name pos:start="1:9" pos:end="1:21">qpci_io_readb</name><parameter_list pos:start="1:22" pos:end="1:50">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:32">QPCIDevice</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">dev</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:49"><decl pos:start="1:40" pos:end="1:49"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">uintptr_t</name></type> <name pos:start="5:15" pos:end="5:18">addr</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:31">uintptr_t</name><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:36">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="21:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:12">addr</name> <operator pos:start="9:14" pos:end="9:14">&lt;</operator> <name pos:start="9:16" pos:end="9:29">QPCI_PIO_LIMIT</name></expr>)</condition> <block pos:start="9:32" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:51">

        <return pos:start="11:9" pos:end="11:51">return <expr pos:start="11:16" pos:end="11:50"><call pos:start="11:16" pos:end="11:50"><name pos:start="11:16" pos:end="11:34"><name pos:start="11:16" pos:end="11:18">dev</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:23">bus</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:34">pio_readb</name></name><argument_list pos:start="11:35" pos:end="11:50">(<argument pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:38">dev</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:43">bus</name></name></expr></argument>, <argument pos:start="11:46" pos:end="11:49"><expr pos:start="11:46" pos:end="11:49"><name pos:start="11:46" pos:end="11:49">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="21:5">else <block pos:start="13:12" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:19">

        <decl_stmt pos:start="15:9" pos:end="15:20"><decl pos:start="15:9" pos:end="15:19"><type pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">uint8_t</name></type> <name pos:start="15:17" pos:end="15:19">val</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:61"><expr pos:start="17:9" pos:end="17:60"><call pos:start="17:9" pos:end="17:60"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:11">dev</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">bus</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:25">memread</name></name><argument_list pos:start="17:26" pos:end="17:60">(<argument pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:29">dev</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:34">bus</name></name></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">addr</name></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:46">val</name></expr></argument>, <argument pos:start="17:49" pos:end="17:59"><expr pos:start="17:49" pos:end="17:59"><sizeof pos:start="17:49" pos:end="17:59">sizeof<argument_list pos:start="17:55" pos:end="17:59">(<argument pos:start="17:56" pos:end="17:58"><expr pos:start="17:56" pos:end="17:58"><name pos:start="17:56" pos:end="17:58">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">val</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
