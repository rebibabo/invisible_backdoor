<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26618.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">process_metadata</name><parameter_list pos:start="1:28" pos:end="3:80">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">name</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:80"><decl pos:start="1:64" pos:end="1:80"><type pos:start="1:64" pos:end="1:80"><name pos:start="1:64" pos:end="1:71">uint16_t</name></type> <name pos:start="1:73" pos:end="1:80">name_len</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><name pos:start="3:29" pos:end="3:36">uint16_t</name></type> <name pos:start="3:38" pos:end="3:44">val_len</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:54">uint16_t</name></type> <name pos:start="3:56" pos:end="3:59">type</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:79"><decl pos:start="3:62" pos:end="3:79"><type pos:start="3:62" pos:end="3:79"><name pos:start="3:62" pos:end="3:73">AVDictionary</name> <modifier pos:start="3:75" pos:end="3:75">*</modifier><modifier pos:start="3:76" pos:end="3:76">*</modifier></type><name pos:start="3:77" pos:end="3:79">met</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ff_asf_guid</name></type> <name pos:start="9:17" pos:end="9:20">guid</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="55:5"><if pos:start="13:5" pos:end="55:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">val_len</name></expr>)</condition> <block pos:start="13:18" pos:end="55:5">{<block_content pos:start="15:9" pos:end="53:9">

        <switch pos:start="15:9" pos:end="53:9">switch <condition pos:start="15:16" pos:end="15:21">(<expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">type</name></expr>)</condition> <block pos:start="15:23" pos:end="53:9">{<block_content pos:start="17:9" pos:end="51:18">

        <case pos:start="17:9" pos:end="17:25">case <expr pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:24">ASF_UNICODE</name></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:66"><expr pos:start="19:13" pos:end="19:65"><call pos:start="19:13" pos:end="19:65"><name pos:start="19:13" pos:end="19:26">asf_read_value</name><argument_list pos:start="19:27" pos:end="19:65">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">s</name></expr></argument>, <argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">name</name></expr></argument>, <argument pos:start="19:37" pos:end="19:44"><expr pos:start="19:37" pos:end="19:44"><name pos:start="19:37" pos:end="19:44">name_len</name></expr></argument>, <argument pos:start="19:47" pos:end="19:53"><expr pos:start="19:47" pos:end="19:53"><name pos:start="19:47" pos:end="19:53">val_len</name></expr></argument>, <argument pos:start="19:56" pos:end="19:59"><expr pos:start="19:56" pos:end="19:59"><name pos:start="19:56" pos:end="19:59">type</name></expr></argument>, <argument pos:start="19:62" pos:end="19:64"><expr pos:start="19:62" pos:end="19:64"><name pos:start="19:62" pos:end="19:64">met</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:28">case <expr pos:start="23:14" pos:end="23:27"><name pos:start="23:14" pos:end="23:27">ASF_BYTE_ARRAY</name></expr>:</case>

            <if_stmt pos:start="25:13" pos:end="35:70"><if pos:start="25:13" pos:end="27:45">if <condition pos:start="25:16" pos:end="25:44">(<expr pos:start="25:17" pos:end="25:43"><operator pos:start="25:17" pos:end="25:17">!</operator><call pos:start="25:18" pos:end="25:43"><name pos:start="25:18" pos:end="25:23">strcmp</name><argument_list pos:start="25:24" pos:end="25:43">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">name</name></expr></argument>, <argument pos:start="25:31" pos:end="25:42"><expr pos:start="25:31" pos:end="25:42"><literal type="string" pos:start="25:31" pos:end="25:42">"WM/Picture"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:45"><block_content pos:start="27:17" pos:end="27:45"> <comment type="line" pos:start="25:46" pos:end="25:64">// handle cover art</comment>

                <expr_stmt pos:start="27:17" pos:end="27:45"><expr pos:start="27:17" pos:end="27:44"><call pos:start="27:17" pos:end="27:44"><name pos:start="27:17" pos:end="27:32">asf_read_picture</name><argument_list pos:start="27:33" pos:end="27:44">(<argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">s</name></expr></argument>, <argument pos:start="27:37" pos:end="27:43"><expr pos:start="27:37" pos:end="27:43"><name pos:start="27:37" pos:end="27:43">val_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="29:13" pos:end="31:40">else if <condition pos:start="29:21" pos:end="29:42">(<expr pos:start="29:22" pos:end="29:41"><operator pos:start="29:22" pos:end="29:22">!</operator><call pos:start="29:23" pos:end="29:41"><name pos:start="29:23" pos:end="29:28">strcmp</name><argument_list pos:start="29:29" pos:end="29:41">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">name</name></expr></argument>, <argument pos:start="29:36" pos:end="29:40"><expr pos:start="29:36" pos:end="29:40"><literal type="string" pos:start="29:36" pos:end="29:40">"ID3"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:40"><block_content pos:start="31:17" pos:end="31:40"> <comment type="line" pos:start="29:44" pos:end="29:60">// handle ID3 tag</comment>

                <expr_stmt pos:start="31:17" pos:end="31:40"><expr pos:start="31:17" pos:end="31:39"><call pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:27">get_id3_tag</name><argument_list pos:start="31:28" pos:end="31:39">(<argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">s</name></expr></argument>, <argument pos:start="31:32" pos:end="31:38"><expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:38">val_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="33:13" pos:end="35:70">else<block type="pseudo" pos:start="35:17" pos:end="35:70"><block_content pos:start="35:17" pos:end="35:70">

                <expr_stmt pos:start="35:17" pos:end="35:70"><expr pos:start="35:17" pos:end="35:69"><call pos:start="35:17" pos:end="35:69"><name pos:start="35:17" pos:end="35:30">asf_read_value</name><argument_list pos:start="35:31" pos:end="35:69">(<argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">s</name></expr></argument>, <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">name</name></expr></argument>, <argument pos:start="35:41" pos:end="35:48"><expr pos:start="35:41" pos:end="35:48"><name pos:start="35:41" pos:end="35:48">name_len</name></expr></argument>, <argument pos:start="35:51" pos:end="35:57"><expr pos:start="35:51" pos:end="35:57"><name pos:start="35:51" pos:end="35:57">val_len</name></expr></argument>, <argument pos:start="35:60" pos:end="35:63"><expr pos:start="35:60" pos:end="35:63"><name pos:start="35:60" pos:end="35:63">type</name></expr></argument>, <argument pos:start="35:66" pos:end="35:68"><expr pos:start="35:66" pos:end="35:68"><name pos:start="35:66" pos:end="35:68">met</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:22">case <expr pos:start="39:14" pos:end="39:21"><name pos:start="39:14" pos:end="39:21">ASF_GUID</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><call pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:23">ff_get_guid</name><argument_list pos:start="41:24" pos:end="41:37">(<argument pos:start="41:25" pos:end="41:29"><expr pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">pb</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><operator pos:start="41:32" pos:end="41:32">&amp;</operator><name pos:start="41:33" pos:end="41:36">guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <default pos:start="45:9" pos:end="45:16">default:</default>

            <if_stmt pos:start="47:13" pos:end="49:27"><if pos:start="47:13" pos:end="49:27">if <condition pos:start="47:16" pos:end="47:81">(<expr pos:start="47:17" pos:end="47:80"><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:20">ret</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:75"><name pos:start="47:24" pos:end="47:45">asf_read_generic_value</name><argument_list pos:start="47:46" pos:end="47:75">(<argument pos:start="47:47" pos:end="47:47"><expr pos:start="47:47" pos:end="47:47"><name pos:start="47:47" pos:end="47:47">s</name></expr></argument>, <argument pos:start="47:50" pos:end="47:53"><expr pos:start="47:50" pos:end="47:53"><name pos:start="47:50" pos:end="47:53">name</name></expr></argument>, <argument pos:start="47:56" pos:end="47:63"><expr pos:start="47:56" pos:end="47:63"><name pos:start="47:56" pos:end="47:63">name_len</name></expr></argument>, <argument pos:start="47:66" pos:end="47:69"><expr pos:start="47:66" pos:end="47:69"><name pos:start="47:66" pos:end="47:69">type</name></expr></argument>, <argument pos:start="47:72" pos:end="47:74"><expr pos:start="47:72" pos:end="47:74"><name pos:start="47:72" pos:end="47:74">met</name></expr></argument>)</argument_list></call><operator pos:start="47:76" pos:end="47:76">)</operator> <operator pos:start="47:78" pos:end="47:78">&lt;</operator> <literal type="number" pos:start="47:80" pos:end="47:80">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:27"><block_content pos:start="49:17" pos:end="49:27">

                <return pos:start="49:17" pos:end="49:27">return <expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><call pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:12">av_freep</name><argument_list pos:start="57:13" pos:end="57:19">(<argument pos:start="57:14" pos:end="57:18"><expr pos:start="57:14" pos:end="57:18"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:18">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
