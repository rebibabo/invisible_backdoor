<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10039.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">Object</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:27">object_dynamic_cast</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:34">Object</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">obj</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:61"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:61">typename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:16">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">GSList</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:13">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:48">/* Check if typename is a direct ancestor */</comment>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:38">(<expr pos:start="11:9" pos:end="11:37"><call pos:start="11:9" pos:end="11:37"><name pos:start="11:9" pos:end="11:22">object_is_type</name><argument_list pos:start="11:23" pos:end="11:37">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">obj</name></expr></argument>, <argument pos:start="11:29" pos:end="11:36"><expr pos:start="11:29" pos:end="11:36"><name pos:start="11:29" pos:end="11:36">typename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:40" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">obj</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:51">/* Check if obj has an interface of typename */</comment>

    <for pos:start="21:5" pos:end="33:5">for <control pos:start="21:9" pos:end="21:45">(<init pos:start="21:10" pos:end="21:29"><expr pos:start="21:10" pos:end="21:28"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:28"><name pos:start="21:14" pos:end="21:16">obj</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:28">interfaces</name></name></expr>;</init> <condition pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:31"><name pos:start="21:31" pos:end="21:31">i</name></expr>;</condition> <incr pos:start="21:34" pos:end="21:44"><expr pos:start="21:34" pos:end="21:44"><name pos:start="21:34" pos:end="21:34">i</name> <operator pos:start="21:36" pos:end="21:36">=</operator> <name pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:38">i</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:44">next</name></name></expr></incr>)</control> <block pos:start="21:47" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:9">

        <decl_stmt pos:start="23:9" pos:end="23:35"><decl pos:start="23:9" pos:end="23:34"><type pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:17">Interface</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:24">iface</name> <init pos:start="23:26" pos:end="23:34">= <expr pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:34">data</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:52">(<expr pos:start="27:13" pos:end="27:51"><call pos:start="27:13" pos:end="27:51"><name pos:start="27:13" pos:end="27:26">object_is_type</name><argument_list pos:start="27:27" pos:end="27:51">(<argument pos:start="27:28" pos:end="27:40"><expr pos:start="27:28" pos:end="27:40"><call pos:start="27:28" pos:end="27:40"><name pos:start="27:28" pos:end="27:33">OBJECT</name><argument_list pos:start="27:34" pos:end="27:40">(<argument pos:start="27:35" pos:end="27:39"><expr pos:start="27:35" pos:end="27:39"><name pos:start="27:35" pos:end="27:39">iface</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:43" pos:end="27:50"><expr pos:start="27:43" pos:end="27:50"><name pos:start="27:43" pos:end="27:50">typename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:54" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:33">

            <return pos:start="29:13" pos:end="29:33">return <expr pos:start="29:20" pos:end="29:32"><call pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:25">OBJECT</name><argument_list pos:start="29:26" pos:end="29:32">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">iface</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="37:5" pos:end="39:30">/* Check if obj is an interface and its containing object is a direct

     * ancestor of typename */</comment>

    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:44">(<expr pos:start="41:9" pos:end="41:43"><call pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:22">object_is_type</name><argument_list pos:start="41:23" pos:end="41:43">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">obj</name></expr></argument>, <argument pos:start="41:29" pos:end="41:42"><expr pos:start="41:29" pos:end="41:42"><name pos:start="41:29" pos:end="41:42">TYPE_INTERFACE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:46" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:9">

        <decl_stmt pos:start="43:9" pos:end="43:42"><decl pos:start="43:9" pos:end="43:41"><type pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:17">Interface</name> <modifier pos:start="43:19" pos:end="43:19">*</modifier></type><name pos:start="43:20" pos:end="43:24">iface</name> <init pos:start="43:26" pos:end="43:41">= <expr pos:start="43:28" pos:end="43:41"><call pos:start="43:28" pos:end="43:41"><name pos:start="43:28" pos:end="43:36">INTERFACE</name><argument_list pos:start="43:37" pos:end="43:41">(<argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:49">(<expr pos:start="47:13" pos:end="47:48"><call pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:26">object_is_type</name><argument_list pos:start="47:27" pos:end="47:48">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:32">iface</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:37">obj</name></name></expr></argument>, <argument pos:start="47:40" pos:end="47:47"><expr pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:47">typename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:51" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:30">

            <return pos:start="49:13" pos:end="49:30">return <expr pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:24">iface</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:29">obj</name></name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="57:5" pos:end="57:16">return <expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
