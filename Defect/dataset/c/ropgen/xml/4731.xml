<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4731.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ehci_state_writeback</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:41">EHCIQueue</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:17">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">EHCIPacket</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:45">= <expr pos:start="5:21" pos:end="5:45"><call pos:start="5:21" pos:end="5:45"><name pos:start="5:21" pos:end="5:32">QTAILQ_FIRST</name><argument_list pos:start="5:33" pos:end="5:45">(<argument pos:start="5:34" pos:end="5:44"><expr pos:start="5:34" pos:end="5:44"><operator pos:start="5:34" pos:end="5:34">&amp;</operator><name pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:35">q</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:44">packets</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">again</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:46">/*  Write back the QTD from the QH area */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:21">(<argument pos:start="13:12" pos:end="13:20"><expr pos:start="13:12" pos:end="13:20"><name pos:start="13:12" pos:end="13:12">p</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <name pos:start="13:17" pos:end="13:20">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:36">(<argument pos:start="15:12" pos:end="15:35"><expr pos:start="15:12" pos:end="15:35"><name pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:12">p</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:21">qtdaddr</name></name> <operator pos:start="15:23" pos:end="15:24">==</operator> <name pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:26">q</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:35">qtdaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:74"><expr pos:start="19:5" pos:end="19:73"><call pos:start="19:5" pos:end="19:73"><name pos:start="19:5" pos:end="19:18">ehci_trace_qtd</name><argument_list pos:start="19:19" pos:end="19:73">(<argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">q</name></expr></argument>, <argument pos:start="19:23" pos:end="19:43"><expr pos:start="19:23" pos:end="19:43"><call pos:start="19:23" pos:end="19:43"><name pos:start="19:23" pos:end="19:31">NLPTR_GET</name><argument_list pos:start="19:32" pos:end="19:43">(<argument pos:start="19:33" pos:end="19:42"><expr pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:33">p</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:42">qtdaddr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:46" pos:end="19:72"><expr pos:start="19:46" pos:end="19:72"><operator pos:start="19:46" pos:end="19:46">(</operator><name pos:start="19:47" pos:end="19:53">EHCIqtd</name> <operator pos:start="19:55" pos:end="19:55">*</operator><operator pos:start="19:56" pos:end="19:56">)</operator> <operator pos:start="19:58" pos:end="19:58">&amp;</operator><name pos:start="19:59" pos:end="19:72"><name pos:start="19:59" pos:end="19:59">q</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:63">qh</name><operator pos:start="19:64" pos:end="19:64">.</operator><name pos:start="19:65" pos:end="19:72">next_qtd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:37"><expr pos:start="21:5" pos:end="23:36"><call pos:start="21:5" pos:end="23:36"><name pos:start="21:5" pos:end="21:14">put_dwords</name><argument_list pos:start="21:15" pos:end="23:36">(<argument pos:start="21:16" pos:end="21:22"><expr pos:start="21:16" pos:end="21:22"><name pos:start="21:16" pos:end="21:22"><name pos:start="21:16" pos:end="21:16">q</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:22">ehci</name></name></expr></argument>, <argument pos:start="21:25" pos:end="21:45"><expr pos:start="21:25" pos:end="21:45"><call pos:start="21:25" pos:end="21:45"><name pos:start="21:25" pos:end="21:33">NLPTR_GET</name><argument_list pos:start="21:34" pos:end="21:45">(<argument pos:start="21:35" pos:end="21:44"><expr pos:start="21:35" pos:end="21:44"><name pos:start="21:35" pos:end="21:44"><name pos:start="21:35" pos:end="21:35">p</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:44">qtdaddr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:48" pos:end="21:75"><expr pos:start="21:48" pos:end="21:75"><operator pos:start="21:48" pos:end="21:48">(</operator><name pos:start="21:49" pos:end="21:56">uint32_t</name> <operator pos:start="21:58" pos:end="21:58">*</operator><operator pos:start="21:59" pos:end="21:59">)</operator> <operator pos:start="21:61" pos:end="21:61">&amp;</operator><name pos:start="21:62" pos:end="21:75"><name pos:start="21:62" pos:end="21:62">q</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:66">qh</name><operator pos:start="21:67" pos:end="21:67">.</operator><name pos:start="21:68" pos:end="21:75">next_qtd</name></name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:35"><expr pos:start="23:16" pos:end="23:35"><sizeof pos:start="23:16" pos:end="23:30">sizeof<argument_list pos:start="23:22" pos:end="23:30">(<argument pos:start="23:23" pos:end="23:29"><expr pos:start="23:23" pos:end="23:29"><name pos:start="23:23" pos:end="23:29">EHCIqtd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:32" pos:end="23:33">&gt;&gt;</operator> <literal type="number" pos:start="23:35" pos:end="23:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:20">ehci_free_packet</name><argument_list pos:start="25:21" pos:end="25:23">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="43:7">/*

     * EHCI specs say go horizontal here.

     *

     * We can also advance the queue here for performance reasons.  We

     * need to take care to only take that shortcut in case we've

     * processed the qtd just written back without errors, i.e. halt

     * bit is clear.

     */</comment>

    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:37">(<expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">q</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">qh</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:19">token</name></name> <operator pos:start="45:21" pos:end="45:21">&amp;</operator> <name pos:start="45:23" pos:end="45:36">QTD_TOKEN_HALT</name></expr>)</condition> <block pos:start="45:39" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:22">ehci_set_state</name><argument_list pos:start="47:23" pos:end="47:59">(<argument pos:start="47:24" pos:end="47:30"><expr pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:24">q</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:30">ehci</name></name></expr></argument>, <argument pos:start="47:33" pos:end="47:40"><expr pos:start="47:33" pos:end="47:40"><name pos:start="47:33" pos:end="47:40"><name pos:start="47:33" pos:end="47:33">q</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:40">async</name></name></expr></argument>, <argument pos:start="47:43" pos:end="47:58"><expr pos:start="47:43" pos:end="47:58"><name pos:start="47:43" pos:end="47:58">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:13">again</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="57:5">else <block pos:start="51:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:60"><expr pos:start="53:9" pos:end="53:59"><call pos:start="53:9" pos:end="53:59"><name pos:start="53:9" pos:end="53:22">ehci_set_state</name><argument_list pos:start="53:23" pos:end="53:59">(<argument pos:start="53:24" pos:end="53:30"><expr pos:start="53:24" pos:end="53:30"><name pos:start="53:24" pos:end="53:30"><name pos:start="53:24" pos:end="53:24">q</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:30">ehci</name></name></expr></argument>, <argument pos:start="53:33" pos:end="53:40"><expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:33">q</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:40">async</name></name></expr></argument>, <argument pos:start="53:43" pos:end="53:58"><expr pos:start="53:43" pos:end="53:58"><name pos:start="53:43" pos:end="53:58">EST_ADVANCEQUEUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:18"><expr pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:13">again</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="59:5" pos:end="59:17">return <expr pos:start="59:12" pos:end="59:16"><name pos:start="59:12" pos:end="59:16">again</name></expr>;</return>

</block_content>}</block></function>
</unit>
