<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4994.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp6_parse_header</name><parameter_list pos:start="1:28" pos:end="1:77">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">VP56Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:76">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="275:1">{<block_content pos:start="5:5" pos:end="273:15">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VP56RangeCoder</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:25">parse_filter_info</name> <init pos:start="7:27" pos:end="7:29">= <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">coeff_offset</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">vrt_shift</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">sub_version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">rows</name></decl>, <decl pos:start="15:15" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:18">cols</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">res</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:23">separated_coeff</name> <init pos:start="21:25" pos:end="21:36">= <expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:32"><name pos:start="21:27" pos:end="21:29">buf</name><index pos:start="21:30" pos:end="21:32">[<expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr>]</index></name> <operator pos:start="21:34" pos:end="21:34">&amp;</operator> <literal type="number" pos:start="21:36" pos:end="21:36">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">frames</name><index pos:start="25:14" pos:end="25:33">[<expr pos:start="25:15" pos:end="25:32"><name pos:start="25:15" pos:end="25:32">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">key_frame</name> <operator pos:start="25:46" pos:end="25:46">=</operator> <operator pos:start="25:48" pos:end="25:48">!</operator><operator pos:start="25:49" pos:end="25:49">(</operator><name pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:52">buf</name><index pos:start="25:53" pos:end="25:55">[<expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr>]</index></name> <operator pos:start="25:57" pos:end="25:57">&amp;</operator> <literal type="number" pos:start="25:59" pos:end="25:62">0x80</literal><operator pos:start="25:63" pos:end="25:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><call pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:24">ff_vp56_init_dequant</name><argument_list pos:start="27:25" pos:end="27:49">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>, <argument pos:start="27:29" pos:end="27:48"><expr pos:start="27:29" pos:end="27:48"><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:32">buf</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name> <operator pos:start="27:37" pos:end="27:38">&gt;&gt;</operator> <literal type="number" pos:start="27:40" pos:end="27:40">1</literal><operator pos:start="27:41" pos:end="27:41">)</operator> <operator pos:start="27:43" pos:end="27:43">&amp;</operator> <literal type="number" pos:start="27:45" pos:end="27:48">0x3F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="189:5"><if pos:start="31:5" pos:end="147:5">if <condition pos:start="31:8" pos:end="31:49">(<expr pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">frames</name><index pos:start="31:18" pos:end="31:37">[<expr pos:start="31:19" pos:end="31:36"><name pos:start="31:19" pos:end="31:36">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:48">key_frame</name></expr>)</condition> <block pos:start="31:51" pos:end="147:5">{<block_content pos:start="33:9" pos:end="145:28">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:19">sub_version</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:25">buf</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>]</index></name> <operator pos:start="33:30" pos:end="33:31">&gt;&gt;</operator> <literal type="number" pos:start="33:33" pos:end="33:33">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:39"><if pos:start="35:9" pos:end="37:39">if <condition pos:start="35:12" pos:end="35:28">(<expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:23">sub_version</name> <operator pos:start="35:25" pos:end="35:25">&gt;</operator> <literal type="number" pos:start="35:27" pos:end="35:27">8</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:39"><block_content pos:start="37:13" pos:end="37:39">

            <return pos:start="37:13" pos:end="37:39">return <expr pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:24">filter_header</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:30">buf</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">1</literal></expr>]</index></name> <operator pos:start="39:35" pos:end="39:35">&amp;</operator> <literal type="number" pos:start="39:37" pos:end="39:40">0x06</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:15">buf</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <literal type="number" pos:start="41:22" pos:end="41:22">1</literal></expr>)</condition> <block pos:start="41:25" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:40">

            <expr_stmt pos:start="43:13" pos:end="43:67"><expr pos:start="43:13" pos:end="43:66"><call pos:start="43:13" pos:end="43:66"><name pos:start="43:13" pos:end="43:41">avpriv_report_missing_feature</name><argument_list pos:start="43:42" pos:end="43:66">(<argument pos:start="43:43" pos:end="43:50"><expr pos:start="43:43" pos:end="43:50"><name pos:start="43:43" pos:end="43:50"><name pos:start="43:43" pos:end="43:43">s</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:50">avctx</name></name></expr></argument>, <argument pos:start="43:53" pos:end="43:65"><expr pos:start="43:53" pos:end="43:65"><literal type="string" pos:start="43:53" pos:end="43:65">"Interlacing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:40">return <expr pos:start="45:20" pos:end="45:39"><name pos:start="45:20" pos:end="45:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:27">separated_coeff</name> <operator pos:start="49:29" pos:end="49:30">||</operator> <operator pos:start="49:32" pos:end="49:32">!</operator><name pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:48">filter_header</name></name></expr>)</condition> <block pos:start="49:51" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:26">

            <expr_stmt pos:start="51:13" pos:end="51:46"><expr pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:24">coeff_offset</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:41"><name pos:start="51:28" pos:end="51:34">AV_RB16</name><argument_list pos:start="51:35" pos:end="51:41">(<argument pos:start="51:36" pos:end="51:40"><expr pos:start="51:36" pos:end="51:40"><name pos:start="51:36" pos:end="51:38">buf</name><operator pos:start="51:39" pos:end="51:39">+</operator><literal type="number" pos:start="51:40" pos:end="51:40">2</literal></expr></argument>)</argument_list></call> <operator pos:start="51:43" pos:end="51:43">-</operator> <literal type="number" pos:start="51:45" pos:end="51:45">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">buf</name> <operator pos:start="53:17" pos:end="53:18">+=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:20">buf_size</name> <operator pos:start="55:22" pos:end="55:23">-=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:12">rows</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:21"><name pos:start="61:16" pos:end="61:18">buf</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">2</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="block" pos:start="61:25" pos:end="61:62">/* number of stored macroblock rows */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:12">cols</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:21"><name pos:start="63:16" pos:end="63:18">buf</name><index pos:start="63:19" pos:end="63:21">[<expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">3</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="block" pos:start="63:25" pos:end="63:62">/* number of stored macroblock cols */</comment>

        <comment type="block" pos:start="65:9" pos:end="65:59">/* buf[4] is number of displayed macroblock rows */</comment>

        <comment type="block" pos:start="67:9" pos:end="67:59">/* buf[5] is number of displayed macroblock cols */</comment>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:27">(<expr pos:start="69:13" pos:end="69:26"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:17">rows</name> <operator pos:start="69:19" pos:end="69:20">||</operator> <operator pos:start="69:22" pos:end="69:22">!</operator><name pos:start="69:23" pos:end="69:26">cols</name></expr>)</condition> <block pos:start="69:29" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:39">

            <expr_stmt pos:start="71:13" pos:end="71:89"><expr pos:start="71:13" pos:end="71:88"><call pos:start="71:13" pos:end="71:88"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:88">(<argument pos:start="71:20" pos:end="71:27"><expr pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:27">avctx</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:41"><expr pos:start="71:30" pos:end="71:41"><name pos:start="71:30" pos:end="71:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:44" pos:end="71:65"><expr pos:start="71:44" pos:end="71:65"><literal type="string" pos:start="71:44" pos:end="71:65">"Invalid size %dx%d\n"</literal></expr></argument>, <argument pos:start="71:68" pos:end="71:76"><expr pos:start="71:68" pos:end="71:76"><name pos:start="71:68" pos:end="71:71">cols</name> <operator pos:start="71:73" pos:end="71:74">&lt;&lt;</operator> <literal type="number" pos:start="71:76" pos:end="71:76">4</literal></expr></argument>, <argument pos:start="71:79" pos:end="71:87"><expr pos:start="71:79" pos:end="71:87"><name pos:start="71:79" pos:end="71:82">rows</name> <operator pos:start="71:84" pos:end="71:85">&lt;&lt;</operator> <literal type="number" pos:start="71:87" pos:end="71:87">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:39">return <expr pos:start="73:20" pos:end="73:38"><name pos:start="73:20" pos:end="73:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="79:9" pos:end="123:9"><if pos:start="79:9" pos:end="123:9">if <condition pos:start="79:12" pos:end="83:46">(<expr pos:start="79:13" pos:end="83:45"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:27"><name pos:start="79:14" pos:end="79:14">s</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:27">macroblocks</name></name> <operator pos:start="79:29" pos:end="79:30">||</operator> <comment type="block" pos:start="79:32" pos:end="79:48">/* first frame */</comment>

            <literal type="number" pos:start="81:13" pos:end="81:14">16</literal><operator pos:start="81:15" pos:end="81:15">*</operator><name pos:start="81:16" pos:end="81:19">cols</name> <operator pos:start="81:21" pos:end="81:22">!=</operator> <name pos:start="81:24" pos:end="81:44"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">avctx</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:44">coded_width</name></name> <operator pos:start="81:46" pos:end="81:47">||</operator>

            <literal type="number" pos:start="83:13" pos:end="83:14">16</literal><operator pos:start="83:15" pos:end="83:15">*</operator><name pos:start="83:16" pos:end="83:19">rows</name> <operator pos:start="83:21" pos:end="83:22">!=</operator> <name pos:start="83:24" pos:end="83:45"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:31">avctx</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:45">coded_height</name></name></expr>)</condition> <block pos:start="83:48" pos:end="123:9">{<block_content pos:start="85:13" pos:end="121:35">

            <if_stmt pos:start="85:13" pos:end="119:13"><if pos:start="85:13" pos:end="101:13">if <condition pos:start="85:16" pos:end="89:59">(<expr pos:start="85:17" pos:end="89:58"><name pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:24">avctx</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:40">extradata_size</name></name> <operator pos:start="85:42" pos:end="85:43">==</operator> <literal type="number" pos:start="85:45" pos:end="85:45">0</literal> <operator pos:start="85:47" pos:end="85:48">&amp;&amp;</operator>

                <call pos:start="87:17" pos:end="87:45"><name pos:start="87:17" pos:end="87:23">FFALIGN</name><argument_list pos:start="87:24" pos:end="87:45">(<argument pos:start="87:25" pos:end="87:39"><expr pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:25">s</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:32">avctx</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:39">width</name></name></expr></argument>,  <argument pos:start="87:43" pos:end="87:44"><expr pos:start="87:43" pos:end="87:44"><literal type="number" pos:start="87:43" pos:end="87:44">16</literal></expr></argument>)</argument_list></call> <operator pos:start="87:47" pos:end="87:48">==</operator> <literal type="number" pos:start="87:50" pos:end="87:51">16</literal> <operator pos:start="87:53" pos:end="87:53">*</operator> <name pos:start="87:55" pos:end="87:58">cols</name> <operator pos:start="87:60" pos:end="87:61">&amp;&amp;</operator>

                <call pos:start="89:17" pos:end="89:45"><name pos:start="89:17" pos:end="89:23">FFALIGN</name><argument_list pos:start="89:24" pos:end="89:45">(<argument pos:start="89:25" pos:end="89:40"><expr pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:32">avctx</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:40">height</name></name></expr></argument>, <argument pos:start="89:43" pos:end="89:44"><expr pos:start="89:43" pos:end="89:44"><literal type="number" pos:start="89:43" pos:end="89:44">16</literal></expr></argument>)</argument_list></call> <operator pos:start="89:47" pos:end="89:48">==</operator> <literal type="number" pos:start="89:50" pos:end="89:51">16</literal> <operator pos:start="89:53" pos:end="89:53">*</operator> <name pos:start="89:55" pos:end="89:58">rows</name></expr>)</condition> <block pos:start="89:61" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:51">

                <comment type="line" pos:start="91:17" pos:end="91:75">// We assume this is properly signalled container cropping,</comment>

                <comment type="line" pos:start="93:17" pos:end="93:73">// in an F4V file. Just set the coded_width/height, don't</comment>

                <comment type="line" pos:start="95:17" pos:end="95:42">// touch the cropped ones.</comment>

                <expr_stmt pos:start="97:17" pos:end="97:51"><expr pos:start="97:17" pos:end="97:50"><name pos:start="97:17" pos:end="97:37"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">avctx</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:37">coded_width</name></name>  <operator pos:start="97:40" pos:end="97:40">=</operator> <literal type="number" pos:start="97:42" pos:end="97:43">16</literal> <operator pos:start="97:45" pos:end="97:45">*</operator> <name pos:start="97:47" pos:end="97:50">cols</name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:51"><expr pos:start="99:17" pos:end="99:50"><name pos:start="99:17" pos:end="99:38"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:24">avctx</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:38">coded_height</name></name> <operator pos:start="99:40" pos:end="99:40">=</operator> <literal type="number" pos:start="99:42" pos:end="99:43">16</literal> <operator pos:start="99:45" pos:end="99:45">*</operator> <name pos:start="99:47" pos:end="99:50">rows</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="101:15" pos:end="119:13">else <block pos:start="101:20" pos:end="119:13">{<block_content pos:start="103:17" pos:end="117:17">

                <expr_stmt pos:start="103:17" pos:end="103:72"><expr pos:start="103:17" pos:end="103:71"><name pos:start="103:17" pos:end="103:19">ret</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:71"><name pos:start="103:23" pos:end="103:39">ff_set_dimensions</name><argument_list pos:start="103:40" pos:end="103:71">(<argument pos:start="103:41" pos:end="103:48"><expr pos:start="103:41" pos:end="103:48"><name pos:start="103:41" pos:end="103:48"><name pos:start="103:41" pos:end="103:41">s</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:48">avctx</name></name></expr></argument>, <argument pos:start="103:51" pos:end="103:59"><expr pos:start="103:51" pos:end="103:59"><literal type="number" pos:start="103:51" pos:end="103:52">16</literal> <operator pos:start="103:54" pos:end="103:54">*</operator> <name pos:start="103:56" pos:end="103:59">cols</name></expr></argument>, <argument pos:start="103:62" pos:end="103:70"><expr pos:start="103:62" pos:end="103:70"><literal type="number" pos:start="103:62" pos:end="103:63">16</literal> <operator pos:start="103:65" pos:end="103:65">*</operator> <name pos:start="103:67" pos:end="103:70">rows</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="107:31"><if pos:start="105:17" pos:end="107:31">if <condition pos:start="105:20" pos:end="105:28">(<expr pos:start="105:21" pos:end="105:27"><name pos:start="105:21" pos:end="105:23">ret</name> <operator pos:start="105:25" pos:end="105:25">&lt;</operator> <literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:31"><block_content pos:start="107:21" pos:end="107:31">

                    <return pos:start="107:21" pos:end="107:31">return <expr pos:start="107:28" pos:end="107:30"><name pos:start="107:28" pos:end="107:30">ret</name></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="111:17" pos:end="117:17"><if pos:start="111:17" pos:end="117:17">if <condition pos:start="111:20" pos:end="111:50">(<expr pos:start="111:21" pos:end="111:49"><name pos:start="111:21" pos:end="111:44"><name pos:start="111:21" pos:end="111:21">s</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:28">avctx</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:44">extradata_size</name></name> <operator pos:start="111:46" pos:end="111:47">==</operator> <literal type="number" pos:start="111:49" pos:end="111:49">1</literal></expr>)</condition> <block pos:start="111:52" pos:end="117:17">{<block_content pos:start="113:21" pos:end="115:70">

                    <expr_stmt pos:start="113:21" pos:end="113:68"><expr pos:start="113:21" pos:end="113:67"><name pos:start="113:21" pos:end="113:35"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:28">avctx</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:35">width</name></name>  <operator pos:start="113:38" pos:end="113:39">-=</operator> <name pos:start="113:41" pos:end="113:62"><name pos:start="113:41" pos:end="113:41">s</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:48">avctx</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:59">extradata</name><index pos:start="113:60" pos:end="113:62">[<expr pos:start="113:61" pos:end="113:61"><literal type="number" pos:start="113:61" pos:end="113:61">0</literal></expr>]</index></name> <operator pos:start="113:64" pos:end="113:65">&gt;&gt;</operator> <literal type="number" pos:start="113:67" pos:end="113:67">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:70"><expr pos:start="115:21" pos:end="115:69"><name pos:start="115:21" pos:end="115:36"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:28">avctx</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:36">height</name></name> <operator pos:start="115:38" pos:end="115:39">-=</operator> <name pos:start="115:41" pos:end="115:62"><name pos:start="115:41" pos:end="115:41">s</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:48">avctx</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:59">extradata</name><index pos:start="115:60" pos:end="115:62">[<expr pos:start="115:61" pos:end="115:61"><literal type="number" pos:start="115:61" pos:end="115:61">0</literal></expr>]</index></name> <operator pos:start="115:64" pos:end="115:64">&amp;</operator> <literal type="number" pos:start="115:66" pos:end="115:69">0x0F</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:35"><expr pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:15">res</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <name pos:start="121:19" pos:end="121:34">VP56_SIZE_CHANGE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:63"><expr pos:start="127:9" pos:end="127:62"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:62"><name pos:start="127:15" pos:end="127:40">ff_vp56_init_range_decoder</name><argument_list pos:start="127:41" pos:end="127:62">(<argument pos:start="127:42" pos:end="127:42"><expr pos:start="127:42" pos:end="127:42"><name pos:start="127:42" pos:end="127:42">c</name></expr></argument>, <argument pos:start="127:45" pos:end="127:49"><expr pos:start="127:45" pos:end="127:49"><name pos:start="127:45" pos:end="127:47">buf</name><operator pos:start="127:48" pos:end="127:48">+</operator><literal type="number" pos:start="127:49" pos:end="127:49">6</literal></expr></argument>, <argument pos:start="127:52" pos:end="127:61"><expr pos:start="127:52" pos:end="127:61"><name pos:start="127:52" pos:end="127:59">buf_size</name><operator pos:start="127:60" pos:end="127:60">-</operator><literal type="number" pos:start="127:61" pos:end="127:61">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:23"><if pos:start="129:9" pos:end="131:23">if <condition pos:start="129:12" pos:end="129:20">(<expr pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:15">ret</name> <operator pos:start="129:17" pos:end="129:17">&lt;</operator> <literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:23"><block_content pos:start="131:13" pos:end="131:23">

            <return pos:start="131:13" pos:end="131:23">return <expr pos:start="131:20" pos:end="131:22"><name pos:start="131:20" pos:end="131:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:28"><expr pos:start="133:9" pos:end="133:27"><call pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:21">vp56_rac_gets</name><argument_list pos:start="133:22" pos:end="133:27">(<argument pos:start="133:23" pos:end="133:23"><expr pos:start="133:23" pos:end="133:23"><name pos:start="133:23" pos:end="133:23">c</name></expr></argument>, <argument pos:start="133:26" pos:end="133:26"><expr pos:start="133:26" pos:end="133:26"><literal type="number" pos:start="133:26" pos:end="133:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:45"><expr pos:start="137:9" pos:end="137:44"><name pos:start="137:9" pos:end="137:25">parse_filter_info</name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:44"><name pos:start="137:29" pos:end="137:29">s</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:44">filter_header</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:26"><if pos:start="139:9" pos:end="141:26">if <condition pos:start="139:12" pos:end="139:28">(<expr pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:23">sub_version</name> <operator pos:start="139:25" pos:end="139:25">&lt;</operator> <literal type="number" pos:start="139:27" pos:end="139:27">8</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:26"><block_content pos:start="141:13" pos:end="141:26">

            <expr_stmt pos:start="141:13" pos:end="141:26"><expr pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:21">vrt_shift</name> <operator pos:start="141:23" pos:end="141:23">=</operator> <literal type="number" pos:start="141:25" pos:end="141:25">5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:37"><expr pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:22">sub_version</name></name> <operator pos:start="143:24" pos:end="143:24">=</operator> <name pos:start="143:26" pos:end="143:36">sub_version</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:23">golden_frame</name></name> <operator pos:start="145:25" pos:end="145:25">=</operator> <literal type="number" pos:start="145:27" pos:end="145:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="147:7" pos:end="189:5">else <block pos:start="147:12" pos:end="189:5">{<block_content pos:start="149:9" pos:end="187:9">

        <if_stmt pos:start="149:9" pos:end="151:39"><if pos:start="149:9" pos:end="151:39">if <condition pos:start="149:12" pos:end="149:81">(<expr pos:start="149:13" pos:end="149:80"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:27"><name pos:start="149:14" pos:end="149:14">s</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:27">sub_version</name></name> <operator pos:start="149:29" pos:end="149:30">||</operator> <operator pos:start="149:32" pos:end="149:32">!</operator><name pos:start="149:33" pos:end="149:53"><name pos:start="149:33" pos:end="149:33">s</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:40">avctx</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:53">coded_width</name></name> <operator pos:start="149:55" pos:end="149:56">||</operator> <operator pos:start="149:58" pos:end="149:58">!</operator><name pos:start="149:59" pos:end="149:80"><name pos:start="149:59" pos:end="149:59">s</name><operator pos:start="149:60" pos:end="149:61">-&gt;</operator><name pos:start="149:62" pos:end="149:66">avctx</name><operator pos:start="149:67" pos:end="149:68">-&gt;</operator><name pos:start="149:69" pos:end="149:80">coded_height</name></name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:39"><block_content pos:start="151:13" pos:end="151:39">

            <return pos:start="151:13" pos:end="151:39">return <expr pos:start="151:20" pos:end="151:38"><name pos:start="151:20" pos:end="151:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="163:9"><if pos:start="155:9" pos:end="163:9">if <condition pos:start="155:12" pos:end="155:49">(<expr pos:start="155:13" pos:end="155:48"><name pos:start="155:13" pos:end="155:27">separated_coeff</name> <operator pos:start="155:29" pos:end="155:30">||</operator> <operator pos:start="155:32" pos:end="155:32">!</operator><name pos:start="155:33" pos:end="155:48"><name pos:start="155:33" pos:end="155:33">s</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:48">filter_header</name></name></expr>)</condition> <block pos:start="155:51" pos:end="163:9">{<block_content pos:start="157:13" pos:end="161:26">

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:24">coeff_offset</name> <operator pos:start="157:26" pos:end="157:26">=</operator> <call pos:start="157:28" pos:end="157:41"><name pos:start="157:28" pos:end="157:34">AV_RB16</name><argument_list pos:start="157:35" pos:end="157:41">(<argument pos:start="157:36" pos:end="157:40"><expr pos:start="157:36" pos:end="157:40"><name pos:start="157:36" pos:end="157:38">buf</name><operator pos:start="157:39" pos:end="157:39">+</operator><literal type="number" pos:start="157:40" pos:end="157:40">1</literal></expr></argument>)</argument_list></call> <operator pos:start="157:43" pos:end="157:43">-</operator> <literal type="number" pos:start="157:45" pos:end="157:45">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:21"><expr pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:15">buf</name> <operator pos:start="159:17" pos:end="159:18">+=</operator> <literal type="number" pos:start="159:20" pos:end="159:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:26"><expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:20">buf_size</name> <operator pos:start="161:22" pos:end="161:23">-=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:63"><expr pos:start="165:9" pos:end="165:62"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:62"><name pos:start="165:15" pos:end="165:40">ff_vp56_init_range_decoder</name><argument_list pos:start="165:41" pos:end="165:62">(<argument pos:start="165:42" pos:end="165:42"><expr pos:start="165:42" pos:end="165:42"><name pos:start="165:42" pos:end="165:42">c</name></expr></argument>, <argument pos:start="165:45" pos:end="165:49"><expr pos:start="165:45" pos:end="165:49"><name pos:start="165:45" pos:end="165:47">buf</name><operator pos:start="165:48" pos:end="165:48">+</operator><literal type="number" pos:start="165:49" pos:end="165:49">1</literal></expr></argument>, <argument pos:start="165:52" pos:end="165:61"><expr pos:start="165:52" pos:end="165:61"><name pos:start="165:52" pos:end="165:59">buf_size</name><operator pos:start="165:60" pos:end="165:60">-</operator><literal type="number" pos:start="165:61" pos:end="165:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="169:23"><if pos:start="167:9" pos:end="169:23">if <condition pos:start="167:12" pos:end="167:20">(<expr pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:15">ret</name> <operator pos:start="167:17" pos:end="167:17">&lt;</operator> <literal type="number" pos:start="167:19" pos:end="167:19">0</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:23"><block_content pos:start="169:13" pos:end="169:23">

            <return pos:start="169:13" pos:end="169:23">return <expr pos:start="169:20" pos:end="169:22"><name pos:start="169:20" pos:end="169:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:42"><expr pos:start="173:9" pos:end="173:41"><name pos:start="173:9" pos:end="173:23"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:23">golden_frame</name></name> <operator pos:start="173:25" pos:end="173:25">=</operator> <call pos:start="173:27" pos:end="173:41"><name pos:start="173:27" pos:end="173:38">vp56_rac_get</name><argument_list pos:start="173:39" pos:end="173:41">(<argument pos:start="173:40" pos:end="173:40"><expr pos:start="173:40" pos:end="173:40"><name pos:start="173:40" pos:end="173:40">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="187:9"><if pos:start="175:9" pos:end="187:9">if <condition pos:start="175:12" pos:end="175:29">(<expr pos:start="175:13" pos:end="175:28"><name pos:start="175:13" pos:end="175:28"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:28">filter_header</name></name></expr>)</condition> <block pos:start="175:31" pos:end="187:9">{<block_content pos:start="177:13" pos:end="185:52">

            <expr_stmt pos:start="177:13" pos:end="177:51"><expr pos:start="177:13" pos:end="177:50"><name pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:32">deblock_filtering</name></name> <operator pos:start="177:34" pos:end="177:34">=</operator> <call pos:start="177:36" pos:end="177:50"><name pos:start="177:36" pos:end="177:47">vp56_rac_get</name><argument_list pos:start="177:48" pos:end="177:50">(<argument pos:start="177:49" pos:end="177:49"><expr pos:start="177:49" pos:end="177:49"><name pos:start="177:49" pos:end="177:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="181:32"><if pos:start="179:13" pos:end="181:32">if <condition pos:start="179:16" pos:end="179:37">(<expr pos:start="179:17" pos:end="179:36"><name pos:start="179:17" pos:end="179:36"><name pos:start="179:17" pos:end="179:17">s</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:36">deblock_filtering</name></name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:32"><block_content pos:start="181:17" pos:end="181:32">

                <expr_stmt pos:start="181:17" pos:end="181:32"><expr pos:start="181:17" pos:end="181:31"><call pos:start="181:17" pos:end="181:31"><name pos:start="181:17" pos:end="181:28">vp56_rac_get</name><argument_list pos:start="181:29" pos:end="181:31">(<argument pos:start="181:30" pos:end="181:30"><expr pos:start="181:30" pos:end="181:30"><name pos:start="181:30" pos:end="181:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="185:52"><if pos:start="183:13" pos:end="185:52">if <condition pos:start="183:16" pos:end="183:35">(<expr pos:start="183:17" pos:end="183:34"><name pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:17">s</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:30">sub_version</name></name> <operator pos:start="183:32" pos:end="183:32">&gt;</operator> <literal type="number" pos:start="183:34" pos:end="183:34">7</literal></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:52"><block_content pos:start="185:17" pos:end="185:52">

                <expr_stmt pos:start="185:17" pos:end="185:52"><expr pos:start="185:17" pos:end="185:51"><name pos:start="185:17" pos:end="185:33">parse_filter_info</name> <operator pos:start="185:35" pos:end="185:35">=</operator> <call pos:start="185:37" pos:end="185:51"><name pos:start="185:37" pos:end="185:48">vp56_rac_get</name><argument_list pos:start="185:49" pos:end="185:51">(<argument pos:start="185:50" pos:end="185:50"><expr pos:start="185:50" pos:end="185:50"><name pos:start="185:50" pos:end="185:50">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="193:5" pos:end="221:5"><if pos:start="193:5" pos:end="221:5">if <condition pos:start="193:8" pos:end="193:26">(<expr pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:25">parse_filter_info</name></expr>)</condition> <block pos:start="193:28" pos:end="221:5">{<block_content pos:start="195:9" pos:end="219:37">

        <if_stmt pos:start="195:9" pos:end="211:9"><if pos:start="195:9" pos:end="203:9">if <condition pos:start="195:12" pos:end="195:28">(<expr pos:start="195:13" pos:end="195:27"><call pos:start="195:13" pos:end="195:27"><name pos:start="195:13" pos:end="195:24">vp56_rac_get</name><argument_list pos:start="195:25" pos:end="195:27">(<argument pos:start="195:26" pos:end="195:26"><expr pos:start="195:26" pos:end="195:26"><name pos:start="195:26" pos:end="195:26">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="195:30" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:60">

            <expr_stmt pos:start="197:13" pos:end="197:31"><expr pos:start="197:13" pos:end="197:30"><name pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:26">filter_mode</name></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <literal type="number" pos:start="197:30" pos:end="197:30">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:76"><expr pos:start="199:13" pos:end="199:75"><name pos:start="199:13" pos:end="199:40"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:40">sample_variance_threshold</name></name> <operator pos:start="199:42" pos:end="199:42">=</operator> <call pos:start="199:44" pos:end="199:62"><name pos:start="199:44" pos:end="199:56">vp56_rac_gets</name><argument_list pos:start="199:57" pos:end="199:62">(<argument pos:start="199:58" pos:end="199:58"><expr pos:start="199:58" pos:end="199:58"><name pos:start="199:58" pos:end="199:58">c</name></expr></argument>, <argument pos:start="199:61" pos:end="199:61"><expr pos:start="199:61" pos:end="199:61"><literal type="number" pos:start="199:61" pos:end="199:61">5</literal></expr></argument>)</argument_list></call> <operator pos:start="199:64" pos:end="199:65">&lt;&lt;</operator> <name pos:start="199:67" pos:end="199:75">vrt_shift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:60"><expr pos:start="201:13" pos:end="201:59"><name pos:start="201:13" pos:end="201:32"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:32">max_vector_length</name></name> <operator pos:start="201:34" pos:end="201:34">=</operator> <literal type="number" pos:start="201:36" pos:end="201:36">2</literal> <operator pos:start="201:38" pos:end="201:39">&lt;&lt;</operator> <call pos:start="201:41" pos:end="201:59"><name pos:start="201:41" pos:end="201:53">vp56_rac_gets</name><argument_list pos:start="201:54" pos:end="201:59">(<argument pos:start="201:55" pos:end="201:55"><expr pos:start="201:55" pos:end="201:55"><name pos:start="201:55" pos:end="201:55">c</name></expr></argument>, <argument pos:start="201:58" pos:end="201:58"><expr pos:start="201:58" pos:end="201:58"><literal type="number" pos:start="201:58" pos:end="201:58">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="203:11" pos:end="207:9">else if <condition pos:start="203:19" pos:end="203:35">(<expr pos:start="203:20" pos:end="203:34"><call pos:start="203:20" pos:end="203:34"><name pos:start="203:20" pos:end="203:31">vp56_rac_get</name><argument_list pos:start="203:32" pos:end="203:34">(<argument pos:start="203:33" pos:end="203:33"><expr pos:start="203:33" pos:end="203:33"><name pos:start="203:33" pos:end="203:33">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:37" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:31">

            <expr_stmt pos:start="205:13" pos:end="205:31"><expr pos:start="205:13" pos:end="205:30"><name pos:start="205:13" pos:end="205:26"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:26">filter_mode</name></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <literal type="number" pos:start="205:30" pos:end="205:30">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="207:11" pos:end="211:9">else <block pos:start="207:16" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:31">

            <expr_stmt pos:start="209:13" pos:end="209:31"><expr pos:start="209:13" pos:end="209:30"><name pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:26">filter_mode</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="213:9" pos:end="219:37"><if pos:start="213:9" pos:end="215:54">if <condition pos:start="213:12" pos:end="213:31">(<expr pos:start="213:13" pos:end="213:30"><name pos:start="213:13" pos:end="213:26"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:26">sub_version</name></name> <operator pos:start="213:28" pos:end="213:28">&gt;</operator> <literal type="number" pos:start="213:30" pos:end="213:30">7</literal></expr>)</condition><block type="pseudo" pos:start="215:13" pos:end="215:54"><block_content pos:start="215:13" pos:end="215:54">

            <expr_stmt pos:start="215:13" pos:end="215:54"><expr pos:start="215:13" pos:end="215:53"><name pos:start="215:13" pos:end="215:31"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:31">filter_selection</name></name> <operator pos:start="215:33" pos:end="215:33">=</operator> <call pos:start="215:35" pos:end="215:53"><name pos:start="215:35" pos:end="215:47">vp56_rac_gets</name><argument_list pos:start="215:48" pos:end="215:53">(<argument pos:start="215:49" pos:end="215:49"><expr pos:start="215:49" pos:end="215:49"><name pos:start="215:49" pos:end="215:49">c</name></expr></argument>, <argument pos:start="215:52" pos:end="215:52"><expr pos:start="215:52" pos:end="215:52"><literal type="number" pos:start="215:52" pos:end="215:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="217:9" pos:end="219:37">else<block type="pseudo" pos:start="219:13" pos:end="219:37"><block_content pos:start="219:13" pos:end="219:37">

            <expr_stmt pos:start="219:13" pos:end="219:37"><expr pos:start="219:13" pos:end="219:36"><name pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:31">filter_selection</name></name> <operator pos:start="219:33" pos:end="219:33">=</operator> <literal type="number" pos:start="219:35" pos:end="219:36">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:37"><expr pos:start="225:5" pos:end="225:36"><name pos:start="225:5" pos:end="225:18"><name pos:start="225:5" pos:end="225:5">s</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:18">use_huffman</name></name> <operator pos:start="225:20" pos:end="225:20">=</operator> <call pos:start="225:22" pos:end="225:36"><name pos:start="225:22" pos:end="225:33">vp56_rac_get</name><argument_list pos:start="225:34" pos:end="225:36">(<argument pos:start="225:35" pos:end="225:35"><expr pos:start="225:35" pos:end="225:35"><name pos:start="225:35" pos:end="225:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:37"><expr pos:start="229:5" pos:end="229:36"><name pos:start="229:5" pos:end="229:18"><name pos:start="229:5" pos:end="229:5">s</name><operator pos:start="229:6" pos:end="229:7">-&gt;</operator><name pos:start="229:8" pos:end="229:18">parse_coeff</name></name> <operator pos:start="229:20" pos:end="229:20">=</operator> <name pos:start="229:22" pos:end="229:36">vp6_parse_coeff</name></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="269:5"><if pos:start="231:5" pos:end="265:5">if <condition pos:start="231:8" pos:end="231:21">(<expr pos:start="231:9" pos:end="231:20"><name pos:start="231:9" pos:end="231:20">coeff_offset</name></expr>)</condition> <block pos:start="231:23" pos:end="265:5">{<block_content pos:start="233:9" pos:end="263:9">

        <expr_stmt pos:start="233:9" pos:end="233:33"><expr pos:start="233:9" pos:end="233:32"><name pos:start="233:9" pos:end="233:11">buf</name>      <operator pos:start="233:18" pos:end="233:19">+=</operator> <name pos:start="233:21" pos:end="233:32">coeff_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:33"><expr pos:start="235:9" pos:end="235:32"><name pos:start="235:9" pos:end="235:16">buf_size</name> <operator pos:start="235:18" pos:end="235:19">-=</operator> <name pos:start="235:21" pos:end="235:32">coeff_offset</name></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="245:9"><if pos:start="237:9" pos:end="245:9">if <condition pos:start="237:12" pos:end="237:25">(<expr pos:start="237:13" pos:end="237:24"><name pos:start="237:13" pos:end="237:20">buf_size</name> <operator pos:start="237:22" pos:end="237:22">&lt;</operator> <literal type="number" pos:start="237:24" pos:end="237:24">0</literal></expr>)</condition> <block pos:start="237:27" pos:end="245:9">{<block_content pos:start="239:13" pos:end="243:39">

            <if_stmt pos:start="239:13" pos:end="241:50"><if pos:start="239:13" pos:end="241:50">if <condition pos:start="239:16" pos:end="239:57">(<expr pos:start="239:17" pos:end="239:56"><name pos:start="239:17" pos:end="239:45"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:25">frames</name><index pos:start="239:26" pos:end="239:45">[<expr pos:start="239:27" pos:end="239:44"><name pos:start="239:27" pos:end="239:44">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="239:46" pos:end="239:47">-&gt;</operator><name pos:start="239:48" pos:end="239:56">key_frame</name></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="241:50"><block_content pos:start="241:17" pos:end="241:50">

                <expr_stmt pos:start="241:17" pos:end="241:50"><expr pos:start="241:17" pos:end="241:49"><call pos:start="241:17" pos:end="241:49"><name pos:start="241:17" pos:end="241:33">ff_set_dimensions</name><argument_list pos:start="241:34" pos:end="241:49">(<argument pos:start="241:35" pos:end="241:42"><expr pos:start="241:35" pos:end="241:42"><name pos:start="241:35" pos:end="241:42"><name pos:start="241:35" pos:end="241:35">s</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:42">avctx</name></name></expr></argument>, <argument pos:start="241:45" pos:end="241:45"><expr pos:start="241:45" pos:end="241:45"><literal type="number" pos:start="241:45" pos:end="241:45">0</literal></expr></argument>, <argument pos:start="241:48" pos:end="241:48"><expr pos:start="241:48" pos:end="241:48"><literal type="number" pos:start="241:48" pos:end="241:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="243:13" pos:end="243:39">return <expr pos:start="243:20" pos:end="243:38"><name pos:start="243:20" pos:end="243:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="247:9" pos:end="263:9"><if pos:start="247:9" pos:end="253:9">if <condition pos:start="247:12" pos:end="247:27">(<expr pos:start="247:13" pos:end="247:26"><name pos:start="247:13" pos:end="247:26"><name pos:start="247:13" pos:end="247:13">s</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:26">use_huffman</name></name></expr>)</condition> <block pos:start="247:29" pos:end="253:9">{<block_content pos:start="249:13" pos:end="251:52">

            <expr_stmt pos:start="249:13" pos:end="249:53"><expr pos:start="249:13" pos:end="249:52"><name pos:start="249:13" pos:end="249:26"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:26">parse_coeff</name></name> <operator pos:start="249:28" pos:end="249:28">=</operator> <name pos:start="249:30" pos:end="249:52">vp6_parse_coeff_huffman</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:52"><expr pos:start="251:13" pos:end="251:51"><call pos:start="251:13" pos:end="251:51"><name pos:start="251:13" pos:end="251:25">init_get_bits</name><argument_list pos:start="251:26" pos:end="251:51">(<argument pos:start="251:27" pos:end="251:32"><expr pos:start="251:27" pos:end="251:32"><operator pos:start="251:27" pos:end="251:27">&amp;</operator><name pos:start="251:28" pos:end="251:32"><name pos:start="251:28" pos:end="251:28">s</name><operator pos:start="251:29" pos:end="251:30">-&gt;</operator><name pos:start="251:31" pos:end="251:32">gb</name></name></expr></argument>, <argument pos:start="251:35" pos:end="251:37"><expr pos:start="251:35" pos:end="251:37"><name pos:start="251:35" pos:end="251:37">buf</name></expr></argument>, <argument pos:start="251:40" pos:end="251:50"><expr pos:start="251:40" pos:end="251:50"><name pos:start="251:40" pos:end="251:47">buf_size</name><operator pos:start="251:48" pos:end="251:49">&lt;&lt;</operator><literal type="number" pos:start="251:50" pos:end="251:50">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="253:11" pos:end="263:9">else <block pos:start="253:16" pos:end="263:9">{<block_content pos:start="255:13" pos:end="261:28">

            <expr_stmt pos:start="255:13" pos:end="255:68"><expr pos:start="255:13" pos:end="255:67"><name pos:start="255:13" pos:end="255:15">ret</name> <operator pos:start="255:17" pos:end="255:17">=</operator> <call pos:start="255:19" pos:end="255:67"><name pos:start="255:19" pos:end="255:44">ff_vp56_init_range_decoder</name><argument_list pos:start="255:45" pos:end="255:67">(<argument pos:start="255:46" pos:end="255:51"><expr pos:start="255:46" pos:end="255:51"><operator pos:start="255:46" pos:end="255:46">&amp;</operator><name pos:start="255:47" pos:end="255:51"><name pos:start="255:47" pos:end="255:47">s</name><operator pos:start="255:48" pos:end="255:49">-&gt;</operator><name pos:start="255:50" pos:end="255:51">cc</name></name></expr></argument>, <argument pos:start="255:54" pos:end="255:56"><expr pos:start="255:54" pos:end="255:56"><name pos:start="255:54" pos:end="255:56">buf</name></expr></argument>, <argument pos:start="255:59" pos:end="255:66"><expr pos:start="255:59" pos:end="255:66"><name pos:start="255:59" pos:end="255:66">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="259:27"><if pos:start="257:13" pos:end="259:27">if <condition pos:start="257:16" pos:end="257:24">(<expr pos:start="257:17" pos:end="257:23"><name pos:start="257:17" pos:end="257:19">ret</name> <operator pos:start="257:21" pos:end="257:21">&lt;</operator> <literal type="number" pos:start="257:23" pos:end="257:23">0</literal></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:27"><block_content pos:start="259:17" pos:end="259:27">

                <return pos:start="259:17" pos:end="259:27">return <expr pos:start="259:24" pos:end="259:26"><name pos:start="259:24" pos:end="259:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:28"><expr pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:18"><name pos:start="261:13" pos:end="261:13">s</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:18">ccp</name></name> <operator pos:start="261:20" pos:end="261:20">=</operator> <operator pos:start="261:22" pos:end="261:22">&amp;</operator><name pos:start="261:23" pos:end="261:27"><name pos:start="261:23" pos:end="261:23">s</name><operator pos:start="261:24" pos:end="261:25">-&gt;</operator><name pos:start="261:26" pos:end="261:27">cc</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="269:5">else <block pos:start="265:12" pos:end="269:5">{<block_content pos:start="267:9" pos:end="267:23">

        <expr_stmt pos:start="267:9" pos:end="267:23"><expr pos:start="267:9" pos:end="267:22"><name pos:start="267:9" pos:end="267:14"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:14">ccp</name></name> <operator pos:start="267:16" pos:end="267:16">=</operator> <operator pos:start="267:18" pos:end="267:18">&amp;</operator><name pos:start="267:19" pos:end="267:22"><name pos:start="267:19" pos:end="267:19">s</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:22">c</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="273:5" pos:end="273:15">return <expr pos:start="273:12" pos:end="273:14"><name pos:start="273:12" pos:end="273:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
