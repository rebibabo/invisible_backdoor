<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10626.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_sv3d</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="227:1">{<block_content pos:start="5:5" pos:end="225:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:15">yaw</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:22">pitch</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:25" pos:end="11:28">roll</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:12">l</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr></init></decl>, <decl pos:start="13:19" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:10"/><name pos:start="13:19" pos:end="13:19">t</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>, <decl pos:start="13:26" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:10"/><name pos:start="13:26" pos:end="13:26">r</name> <init pos:start="13:28" pos:end="13:30">= <expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr></init></decl>, <decl pos:start="13:33" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:10"/><name pos:start="13:33" pos:end="13:33">b</name> <init pos:start="13:35" pos:end="13:37">= <expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:18">padding</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:16">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:8">enum</name> <name pos:start="19:10" pos:end="19:30">AVSphericalProjection</name></name></type> <name pos:start="19:32" pos:end="19:41">projection</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">fc</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">nb_streams</name></name> <operator pos:start="23:27" pos:end="23:27">&lt;</operator> <literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:6">st</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:46"><name pos:start="29:10" pos:end="29:10">c</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:14">fc</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:23">streams</name><index pos:start="29:24" pos:end="29:46">[<expr pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:41"><name pos:start="29:25" pos:end="29:25">c</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:29">fc</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:41">nb_streams</name></name> <operator pos:start="29:43" pos:end="29:43">-</operator> <literal type="number" pos:start="29:45" pos:end="29:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:6">sc</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <name pos:start="31:10" pos:end="31:22"><name pos:start="31:10" pos:end="31:11">st</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:22">priv_data</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:22">(<expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:12">atom</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:17">size</name></name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">8</literal></expr>)</condition> <block pos:start="35:24" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:35">

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:66">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:16">c</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:20">fc</name></name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:65"><expr pos:start="37:37" pos:end="37:65"><literal type="string" pos:start="37:37" pos:end="37:65">"Empty spherical video box\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:8">size</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:24"><name pos:start="45:12" pos:end="45:20">avio_rb32</name><argument_list pos:start="45:21" pos:end="45:24">(<argument pos:start="45:22" pos:end="45:23"><expr pos:start="45:22" pos:end="45:23"><name pos:start="45:22" pos:end="45:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:35"><if pos:start="47:5" pos:end="49:35">if <condition pos:start="47:8" pos:end="47:39">(<expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:12">size</name> <operator pos:start="47:14" pos:end="47:15">&lt;=</operator> <literal type="number" pos:start="47:17" pos:end="47:18">12</literal> <operator pos:start="47:20" pos:end="47:21">||</operator> <name pos:start="47:23" pos:end="47:26">size</name> <operator pos:start="47:28" pos:end="47:28">&gt;</operator> <name pos:start="47:30" pos:end="47:38"><name pos:start="47:30" pos:end="47:33">atom</name><operator pos:start="47:34" pos:end="47:34">.</operator><name pos:start="47:35" pos:end="47:38">size</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:35"><block_content pos:start="49:9" pos:end="49:35">

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:24"><expr pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:7">tag</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:23"><name pos:start="53:11" pos:end="53:19">avio_rl32</name><argument_list pos:start="53:20" pos:end="53:23">(<argument pos:start="53:21" pos:end="53:22"><expr pos:start="53:21" pos:end="53:22"><name pos:start="53:21" pos:end="53:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:38">(<expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:11">tag</name> <operator pos:start="55:13" pos:end="55:14">!=</operator> <call pos:start="55:16" pos:end="55:37"><name pos:start="55:16" pos:end="55:20">MKTAG</name><argument_list pos:start="55:21" pos:end="55:37">(<argument pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><literal type="char" pos:start="55:22" pos:end="55:24">'s'</literal></expr></argument>,<argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><literal type="char" pos:start="55:26" pos:end="55:28">'v'</literal></expr></argument>,<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><literal type="char" pos:start="55:30" pos:end="55:32">'h'</literal></expr></argument>,<argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><literal type="char" pos:start="55:34" pos:end="55:36">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:40" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:17">

        <expr_stmt pos:start="57:9" pos:end="57:72"><expr pos:start="57:9" pos:end="57:71"><call pos:start="57:9" pos:end="57:71"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:71">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:16">c</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:20">fc</name></name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:70"><expr pos:start="57:37" pos:end="57:70"><literal type="string" pos:start="57:37" pos:end="57:70">"Missing spherical video header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:17">return <expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><call pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:13">avio_skip</name><argument_list pos:start="63:14" pos:end="63:20">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:23" pos:end="63:44">/*  version + flags */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><call pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:13">avio_skip</name><argument_list pos:start="65:14" pos:end="65:28">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:27"><expr pos:start="65:19" pos:end="65:27"><name pos:start="65:19" pos:end="65:22">size</name> <operator pos:start="65:24" pos:end="65:24">-</operator> <literal type="number" pos:start="65:26" pos:end="65:27">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:31" pos:end="65:51">/* metadata_source */</comment>



    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:8">size</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <call pos:start="69:12" pos:end="69:24"><name pos:start="69:12" pos:end="69:20">avio_rb32</name><argument_list pos:start="69:21" pos:end="69:24">(<argument pos:start="69:22" pos:end="69:23"><expr pos:start="69:22" pos:end="69:23"><name pos:start="69:22" pos:end="69:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:35"><if pos:start="71:5" pos:end="73:35">if <condition pos:start="71:8" pos:end="71:25">(<expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:12">size</name> <operator pos:start="71:14" pos:end="71:14">&gt;</operator> <name pos:start="71:16" pos:end="71:24"><name pos:start="71:16" pos:end="71:19">atom</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:24">size</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:35"><block_content pos:start="73:9" pos:end="73:35">

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:7">tag</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:23"><name pos:start="77:11" pos:end="77:19">avio_rl32</name><argument_list pos:start="77:20" pos:end="77:23">(<argument pos:start="77:21" pos:end="77:22"><expr pos:start="77:21" pos:end="77:22"><name pos:start="77:21" pos:end="77:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:38">(<expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:11">tag</name> <operator pos:start="79:13" pos:end="79:14">!=</operator> <call pos:start="79:16" pos:end="79:37"><name pos:start="79:16" pos:end="79:20">MKTAG</name><argument_list pos:start="79:21" pos:end="79:37">(<argument pos:start="79:22" pos:end="79:24"><expr pos:start="79:22" pos:end="79:24"><literal type="char" pos:start="79:22" pos:end="79:24">'p'</literal></expr></argument>,<argument pos:start="79:26" pos:end="79:28"><expr pos:start="79:26" pos:end="79:28"><literal type="char" pos:start="79:26" pos:end="79:28">'r'</literal></expr></argument>,<argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><literal type="char" pos:start="79:30" pos:end="79:32">'o'</literal></expr></argument>,<argument pos:start="79:34" pos:end="79:36"><expr pos:start="79:34" pos:end="79:36"><literal type="char" pos:start="79:34" pos:end="79:36">'j'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:40" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:17">

        <expr_stmt pos:start="81:9" pos:end="81:64"><expr pos:start="81:9" pos:end="81:63"><call pos:start="81:9" pos:end="81:63"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:63">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:16">c</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:20">fc</name></name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:62"><expr pos:start="81:37" pos:end="81:62"><literal type="string" pos:start="81:37" pos:end="81:62">"Missing projection box\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:17">return <expr pos:start="83:16" pos:end="83:16"><literal type="number" pos:start="83:16" pos:end="83:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:25"><expr pos:start="89:5" pos:end="89:24"><name pos:start="89:5" pos:end="89:8">size</name> <operator pos:start="89:10" pos:end="89:10">=</operator> <call pos:start="89:12" pos:end="89:24"><name pos:start="89:12" pos:end="89:20">avio_rb32</name><argument_list pos:start="89:21" pos:end="89:24">(<argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><name pos:start="89:22" pos:end="89:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:35"><if pos:start="91:5" pos:end="93:35">if <condition pos:start="91:8" pos:end="91:25">(<expr pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:12">size</name> <operator pos:start="91:14" pos:end="91:14">&gt;</operator> <name pos:start="91:16" pos:end="91:24"><name pos:start="91:16" pos:end="91:19">atom</name><operator pos:start="91:20" pos:end="91:20">.</operator><name pos:start="91:21" pos:end="91:24">size</name></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:35"><block_content pos:start="93:9" pos:end="93:35">

        <return pos:start="93:9" pos:end="93:35">return <expr pos:start="93:16" pos:end="93:34"><name pos:start="93:16" pos:end="93:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:24"><expr pos:start="97:5" pos:end="97:23"><name pos:start="97:5" pos:end="97:7">tag</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:23"><name pos:start="97:11" pos:end="97:19">avio_rl32</name><argument_list pos:start="97:20" pos:end="97:23">(<argument pos:start="97:21" pos:end="97:22"><expr pos:start="97:21" pos:end="97:22"><name pos:start="97:21" pos:end="97:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:38">(<expr pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:11">tag</name> <operator pos:start="99:13" pos:end="99:14">!=</operator> <call pos:start="99:16" pos:end="99:37"><name pos:start="99:16" pos:end="99:20">MKTAG</name><argument_list pos:start="99:21" pos:end="99:37">(<argument pos:start="99:22" pos:end="99:24"><expr pos:start="99:22" pos:end="99:24"><literal type="char" pos:start="99:22" pos:end="99:24">'p'</literal></expr></argument>,<argument pos:start="99:26" pos:end="99:28"><expr pos:start="99:26" pos:end="99:28"><literal type="char" pos:start="99:26" pos:end="99:28">'r'</literal></expr></argument>,<argument pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><literal type="char" pos:start="99:30" pos:end="99:32">'h'</literal></expr></argument>,<argument pos:start="99:34" pos:end="99:36"><expr pos:start="99:34" pos:end="99:36"><literal type="char" pos:start="99:34" pos:end="99:36">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:40" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:17">

        <expr_stmt pos:start="101:9" pos:end="101:71"><expr pos:start="101:9" pos:end="101:70"><call pos:start="101:9" pos:end="101:70"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:70">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:16">c</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:20">fc</name></name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:37" pos:end="101:69"><expr pos:start="101:37" pos:end="101:69"><literal type="string" pos:start="101:37" pos:end="101:69">"Missing projection header box\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:17">return <expr pos:start="103:16" pos:end="103:16"><literal type="number" pos:start="103:16" pos:end="103:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:13">avio_skip</name><argument_list pos:start="107:14" pos:end="107:20">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:23" pos:end="107:44">/*  version + flags */</comment>



    <comment type="block" pos:start="111:5" pos:end="111:27">/* 16.16 fixed point */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:7">yaw</name>   <operator pos:start="113:11" pos:end="113:11">=</operator> <call pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:21">avio_rb32</name><argument_list pos:start="113:22" pos:end="113:25">(<argument pos:start="113:23" pos:end="113:24"><expr pos:start="113:23" pos:end="113:24"><name pos:start="113:23" pos:end="113:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:26"><expr pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:9">pitch</name> <operator pos:start="115:11" pos:end="115:11">=</operator> <call pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:21">avio_rb32</name><argument_list pos:start="115:22" pos:end="115:25">(<argument pos:start="115:23" pos:end="115:24"><expr pos:start="115:23" pos:end="115:24"><name pos:start="115:23" pos:end="115:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:26"><expr pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:8">roll</name>  <operator pos:start="117:11" pos:end="117:11">=</operator> <call pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:21">avio_rb32</name><argument_list pos:start="117:22" pos:end="117:25">(<argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:25"><expr pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:8">size</name> <operator pos:start="121:10" pos:end="121:10">=</operator> <call pos:start="121:12" pos:end="121:24"><name pos:start="121:12" pos:end="121:20">avio_rb32</name><argument_list pos:start="121:21" pos:end="121:24">(<argument pos:start="121:22" pos:end="121:23"><expr pos:start="121:22" pos:end="121:23"><name pos:start="121:22" pos:end="121:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="125:35"><if pos:start="123:5" pos:end="125:35">if <condition pos:start="123:8" pos:end="123:25">(<expr pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:12">size</name> <operator pos:start="123:14" pos:end="123:14">&gt;</operator> <name pos:start="123:16" pos:end="123:24"><name pos:start="123:16" pos:end="123:19">atom</name><operator pos:start="123:20" pos:end="123:20">.</operator><name pos:start="123:21" pos:end="123:24">size</name></name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:35"><block_content pos:start="125:9" pos:end="125:35">

        <return pos:start="125:9" pos:end="125:35">return <expr pos:start="125:16" pos:end="125:34"><name pos:start="125:16" pos:end="125:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:24"><expr pos:start="129:5" pos:end="129:23"><name pos:start="129:5" pos:end="129:7">tag</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <call pos:start="129:11" pos:end="129:23"><name pos:start="129:11" pos:end="129:19">avio_rl32</name><argument_list pos:start="129:20" pos:end="129:23">(<argument pos:start="129:21" pos:end="129:22"><expr pos:start="129:21" pos:end="129:22"><name pos:start="129:21" pos:end="129:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:21"><expr pos:start="131:5" pos:end="131:20"><call pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:13">avio_skip</name><argument_list pos:start="131:14" pos:end="131:20">(<argument pos:start="131:15" pos:end="131:16"><expr pos:start="131:15" pos:end="131:16"><name pos:start="131:15" pos:end="131:16">pb</name></expr></argument>, <argument pos:start="131:19" pos:end="131:19"><expr pos:start="131:19" pos:end="131:19"><literal type="number" pos:start="131:19" pos:end="131:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="131:23" pos:end="131:44">/*  version + flags */</comment>

    <switch pos:start="133:5" pos:end="187:5">switch <condition pos:start="133:12" pos:end="133:16">(<expr pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">tag</name></expr>)</condition> <block pos:start="133:18" pos:end="187:5">{<block_content pos:start="135:5" pos:end="185:17">

    <case pos:start="135:5" pos:end="135:32">case <expr pos:start="135:10" pos:end="135:31"><call pos:start="135:10" pos:end="135:31"><name pos:start="135:10" pos:end="135:14">MKTAG</name><argument_list pos:start="135:15" pos:end="135:31">(<argument pos:start="135:16" pos:end="135:18"><expr pos:start="135:16" pos:end="135:18"><literal type="char" pos:start="135:16" pos:end="135:18">'c'</literal></expr></argument>,<argument pos:start="135:20" pos:end="135:22"><expr pos:start="135:20" pos:end="135:22"><literal type="char" pos:start="135:20" pos:end="135:22">'b'</literal></expr></argument>,<argument pos:start="135:24" pos:end="135:26"><expr pos:start="135:24" pos:end="135:26"><literal type="char" pos:start="135:24" pos:end="135:26">'m'</literal></expr></argument>,<argument pos:start="135:28" pos:end="135:30"><expr pos:start="135:28" pos:end="135:30"><literal type="char" pos:start="135:28" pos:end="135:30">'p'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:42"><expr pos:start="137:9" pos:end="137:41"><name pos:start="137:9" pos:end="137:18">projection</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <name pos:start="137:22" pos:end="137:41">AV_SPHERICAL_CUBEMAP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:32"><expr pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:15">padding</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="139:31"><name pos:start="139:19" pos:end="139:27">avio_rb32</name><argument_list pos:start="139:28" pos:end="139:31">(<argument pos:start="139:29" pos:end="139:30"><expr pos:start="139:29" pos:end="139:30"><name pos:start="139:29" pos:end="139:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:32">case <expr pos:start="143:10" pos:end="143:31"><call pos:start="143:10" pos:end="143:31"><name pos:start="143:10" pos:end="143:14">MKTAG</name><argument_list pos:start="143:15" pos:end="143:31">(<argument pos:start="143:16" pos:end="143:18"><expr pos:start="143:16" pos:end="143:18"><literal type="char" pos:start="143:16" pos:end="143:18">'e'</literal></expr></argument>,<argument pos:start="143:20" pos:end="143:22"><expr pos:start="143:20" pos:end="143:22"><literal type="char" pos:start="143:20" pos:end="143:22">'q'</literal></expr></argument>,<argument pos:start="143:24" pos:end="143:26"><expr pos:start="143:24" pos:end="143:26"><literal type="char" pos:start="143:24" pos:end="143:26">'u'</literal></expr></argument>,<argument pos:start="143:28" pos:end="143:30"><expr pos:start="143:28" pos:end="143:30"><literal type="char" pos:start="143:28" pos:end="143:30">'i'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:26"><expr pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:9">t</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <call pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:21">avio_rb32</name><argument_list pos:start="145:22" pos:end="145:25">(<argument pos:start="145:23" pos:end="145:24"><expr pos:start="145:23" pos:end="145:24"><name pos:start="145:23" pos:end="145:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:26"><expr pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:9">b</name> <operator pos:start="147:11" pos:end="147:11">=</operator> <call pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:21">avio_rb32</name><argument_list pos:start="147:22" pos:end="147:25">(<argument pos:start="147:23" pos:end="147:24"><expr pos:start="147:23" pos:end="147:24"><name pos:start="147:23" pos:end="147:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:26"><expr pos:start="149:9" pos:end="149:25"><name pos:start="149:9" pos:end="149:9">l</name> <operator pos:start="149:11" pos:end="149:11">=</operator> <call pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:21">avio_rb32</name><argument_list pos:start="149:22" pos:end="149:25">(<argument pos:start="149:23" pos:end="149:24"><expr pos:start="149:23" pos:end="149:24"><name pos:start="149:23" pos:end="149:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:26"><expr pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:9">r</name> <operator pos:start="151:11" pos:end="151:11">=</operator> <call pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:21">avio_rb32</name><argument_list pos:start="151:22" pos:end="151:25">(<argument pos:start="151:23" pos:end="151:24"><expr pos:start="151:23" pos:end="151:24"><name pos:start="151:23" pos:end="151:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="167:9"><if pos:start="155:9" pos:end="167:9">if <condition pos:start="155:12" pos:end="155:51">(<expr pos:start="155:13" pos:end="155:50"><name pos:start="155:13" pos:end="155:13">b</name> <operator pos:start="155:15" pos:end="155:16">&gt;=</operator> <name pos:start="155:18" pos:end="155:25">UINT_MAX</name> <operator pos:start="155:27" pos:end="155:27">-</operator> <name pos:start="155:29" pos:end="155:29">t</name> <operator pos:start="155:31" pos:end="155:32">||</operator> <name pos:start="155:34" pos:end="155:34">r</name> <operator pos:start="155:36" pos:end="155:37">&gt;=</operator> <name pos:start="155:39" pos:end="155:46">UINT_MAX</name> <operator pos:start="155:48" pos:end="155:48">-</operator> <name pos:start="155:50" pos:end="155:50">l</name></expr>)</condition> <block pos:start="155:53" pos:end="167:9">{<block_content pos:start="157:13" pos:end="165:39">

            <expr_stmt pos:start="157:13" pos:end="163:31"><expr pos:start="157:13" pos:end="163:30"><call pos:start="157:13" pos:end="163:30"><name pos:start="157:13" pos:end="157:18">av_log</name><argument_list pos:start="157:19" pos:end="163:30">(<argument pos:start="157:20" pos:end="157:24"><expr pos:start="157:20" pos:end="157:24"><name pos:start="157:20" pos:end="157:24"><name pos:start="157:20" pos:end="157:20">c</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:24">fc</name></name></expr></argument>, <argument pos:start="157:27" pos:end="157:38"><expr pos:start="157:27" pos:end="157:38"><name pos:start="157:27" pos:end="157:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="159:20" pos:end="161:76"><expr pos:start="159:20" pos:end="161:76"><literal type="string" pos:start="159:20" pos:end="159:61">"Invalid bounding rectangle coordinates %"</literal><name pos:start="159:62" pos:end="159:75">SIZE_SPECIFIER</name><literal type="string" pos:start="159:76" pos:end="159:78">","</literal>

                   <literal type="string" pos:start="161:20" pos:end="161:22">"%"</literal><name pos:start="161:23" pos:end="161:36">SIZE_SPECIFIER</name><literal type="string" pos:start="161:37" pos:end="161:40">",%"</literal><name pos:start="161:41" pos:end="161:54">SIZE_SPECIFIER</name><literal type="string" pos:start="161:55" pos:end="161:58">",%"</literal><name pos:start="161:59" pos:end="161:72">SIZE_SPECIFIER</name><literal type="string" pos:start="161:73" pos:end="161:76">"\n"</literal></expr></argument>,

                   <argument pos:start="163:20" pos:end="163:20"><expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">l</name></expr></argument>, <argument pos:start="163:23" pos:end="163:23"><expr pos:start="163:23" pos:end="163:23"><name pos:start="163:23" pos:end="163:23">t</name></expr></argument>, <argument pos:start="163:26" pos:end="163:26"><expr pos:start="163:26" pos:end="163:26"><name pos:start="163:26" pos:end="163:26">r</name></expr></argument>, <argument pos:start="163:29" pos:end="163:29"><expr pos:start="163:29" pos:end="163:29"><name pos:start="163:29" pos:end="163:29">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="165:13" pos:end="165:39">return <expr pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="171:9" pos:end="177:54"><if pos:start="171:9" pos:end="173:59">if <condition pos:start="171:12" pos:end="171:29">(<expr pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:13">l</name> <operator pos:start="171:15" pos:end="171:16">||</operator> <name pos:start="171:18" pos:end="171:18">t</name> <operator pos:start="171:20" pos:end="171:21">||</operator> <name pos:start="171:23" pos:end="171:23">r</name> <operator pos:start="171:25" pos:end="171:26">||</operator> <name pos:start="171:28" pos:end="171:28">b</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:59"><block_content pos:start="173:13" pos:end="173:59">

            <expr_stmt pos:start="173:13" pos:end="173:59"><expr pos:start="173:13" pos:end="173:58"><name pos:start="173:13" pos:end="173:22">projection</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <name pos:start="173:26" pos:end="173:58">AV_SPHERICAL_EQUIRECTANGULAR_TILE</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="175:9" pos:end="177:54">else<block type="pseudo" pos:start="177:13" pos:end="177:54"><block_content pos:start="177:13" pos:end="177:54">

            <expr_stmt pos:start="177:13" pos:end="177:54"><expr pos:start="177:13" pos:end="177:53"><name pos:start="177:13" pos:end="177:22">projection</name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:53">AV_SPHERICAL_EQUIRECTANGULAR</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <default pos:start="181:5" pos:end="181:12">default:</default>

        <expr_stmt pos:start="183:9" pos:end="183:65"><expr pos:start="183:9" pos:end="183:64"><call pos:start="183:9" pos:end="183:64"><name pos:start="183:9" pos:end="183:14">av_log</name><argument_list pos:start="183:15" pos:end="183:64">(<argument pos:start="183:16" pos:end="183:20"><expr pos:start="183:16" pos:end="183:20"><name pos:start="183:16" pos:end="183:20"><name pos:start="183:16" pos:end="183:16">c</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:20">fc</name></name></expr></argument>, <argument pos:start="183:23" pos:end="183:34"><expr pos:start="183:23" pos:end="183:34"><name pos:start="183:23" pos:end="183:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:37" pos:end="183:63"><expr pos:start="183:37" pos:end="183:63"><literal type="string" pos:start="183:37" pos:end="183:63">"Unknown projection type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="185:9" pos:end="185:17">return <expr pos:start="185:16" pos:end="185:16"><literal type="number" pos:start="185:16" pos:end="185:16">0</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="191:5" pos:end="191:60"><expr pos:start="191:5" pos:end="191:59"><name pos:start="191:5" pos:end="191:17"><name pos:start="191:5" pos:end="191:6">sc</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:17">spherical</name></name> <operator pos:start="191:19" pos:end="191:19">=</operator> <call pos:start="191:21" pos:end="191:59"><name pos:start="191:21" pos:end="191:38">av_spherical_alloc</name><argument_list pos:start="191:39" pos:end="191:59">(<argument pos:start="191:40" pos:end="191:58"><expr pos:start="191:40" pos:end="191:58"><operator pos:start="191:40" pos:end="191:40">&amp;</operator><name pos:start="191:41" pos:end="191:58"><name pos:start="191:41" pos:end="191:42">sc</name><operator pos:start="191:43" pos:end="191:44">-&gt;</operator><name pos:start="191:45" pos:end="191:58">spherical_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="195:31"><if pos:start="193:5" pos:end="195:31">if <condition pos:start="193:8" pos:end="193:23">(<expr pos:start="193:9" pos:end="193:22"><operator pos:start="193:9" pos:end="193:9">!</operator><name pos:start="193:10" pos:end="193:22"><name pos:start="193:10" pos:end="193:11">sc</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:22">spherical</name></name></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:31"><block_content pos:start="195:9" pos:end="195:31">

        <return pos:start="195:9" pos:end="195:31">return <expr pos:start="195:16" pos:end="195:30"><call pos:start="195:16" pos:end="195:30"><name pos:start="195:16" pos:end="195:22">AVERROR</name><argument_list pos:start="195:23" pos:end="195:30">(<argument pos:start="195:24" pos:end="195:29"><expr pos:start="195:24" pos:end="195:29"><name pos:start="195:24" pos:end="195:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:43"><expr pos:start="199:5" pos:end="199:42"><name pos:start="199:5" pos:end="199:29"><name pos:start="199:5" pos:end="199:6">sc</name><operator pos:start="199:7" pos:end="199:8">-&gt;</operator><name pos:start="199:9" pos:end="199:17">spherical</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:29">projection</name></name> <operator pos:start="199:31" pos:end="199:31">=</operator> <name pos:start="199:33" pos:end="199:42">projection</name></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:31"><expr pos:start="203:5" pos:end="203:30"><name pos:start="203:5" pos:end="203:22"><name pos:start="203:5" pos:end="203:6">sc</name><operator pos:start="203:7" pos:end="203:8">-&gt;</operator><name pos:start="203:9" pos:end="203:17">spherical</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:22">yaw</name></name>   <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:30">yaw</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:33"><expr pos:start="205:5" pos:end="205:32"><name pos:start="205:5" pos:end="205:24"><name pos:start="205:5" pos:end="205:6">sc</name><operator pos:start="205:7" pos:end="205:8">-&gt;</operator><name pos:start="205:9" pos:end="205:17">spherical</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:24">pitch</name></name> <operator pos:start="205:26" pos:end="205:26">=</operator> <name pos:start="205:28" pos:end="205:32">pitch</name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:32"><expr pos:start="207:5" pos:end="207:31"><name pos:start="207:5" pos:end="207:23"><name pos:start="207:5" pos:end="207:6">sc</name><operator pos:start="207:7" pos:end="207:8">-&gt;</operator><name pos:start="207:9" pos:end="207:17">spherical</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:23">roll</name></name>  <operator pos:start="207:26" pos:end="207:26">=</operator> <name pos:start="207:28" pos:end="207:31">roll</name></expr>;</expr_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:37"><expr pos:start="211:5" pos:end="211:36"><name pos:start="211:5" pos:end="211:26"><name pos:start="211:5" pos:end="211:6">sc</name><operator pos:start="211:7" pos:end="211:8">-&gt;</operator><name pos:start="211:9" pos:end="211:17">spherical</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:26">padding</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <name pos:start="211:30" pos:end="211:36">padding</name></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:36"><expr pos:start="215:5" pos:end="215:35"><name pos:start="215:5" pos:end="215:29"><name pos:start="215:5" pos:end="215:6">sc</name><operator pos:start="215:7" pos:end="215:8">-&gt;</operator><name pos:start="215:9" pos:end="215:17">spherical</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:29">bound_left</name></name>   <operator pos:start="215:33" pos:end="215:33">=</operator> <name pos:start="215:35" pos:end="215:35">l</name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:36"><expr pos:start="217:5" pos:end="217:35"><name pos:start="217:5" pos:end="217:28"><name pos:start="217:5" pos:end="217:6">sc</name><operator pos:start="217:7" pos:end="217:8">-&gt;</operator><name pos:start="217:9" pos:end="217:17">spherical</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:28">bound_top</name></name>    <operator pos:start="217:33" pos:end="217:33">=</operator> <name pos:start="217:35" pos:end="217:35">t</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:36"><expr pos:start="219:5" pos:end="219:35"><name pos:start="219:5" pos:end="219:30"><name pos:start="219:5" pos:end="219:6">sc</name><operator pos:start="219:7" pos:end="219:8">-&gt;</operator><name pos:start="219:9" pos:end="219:17">spherical</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:30">bound_right</name></name>  <operator pos:start="219:33" pos:end="219:33">=</operator> <name pos:start="219:35" pos:end="219:35">r</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:36"><expr pos:start="221:5" pos:end="221:35"><name pos:start="221:5" pos:end="221:31"><name pos:start="221:5" pos:end="221:6">sc</name><operator pos:start="221:7" pos:end="221:8">-&gt;</operator><name pos:start="221:9" pos:end="221:17">spherical</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:31">bound_bottom</name></name> <operator pos:start="221:33" pos:end="221:33">=</operator> <name pos:start="221:35" pos:end="221:35">b</name></expr>;</expr_stmt>



    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
