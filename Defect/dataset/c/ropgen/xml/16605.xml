<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16605.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">do_fp_st</name><parameter_list pos:start="1:21" pos:end="1:78">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:48">srcidx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:58">TCGv_i64</name></type> <name pos:start="1:60" pos:end="1:67">tcg_addr</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:27">

    <comment type="block" pos:start="5:5" pos:end="5:74">/* This writes the bottom N bits of a 128 bit wide vector to memory */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i64</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name> <init pos:start="7:18" pos:end="7:37">= <expr pos:start="7:20" pos:end="7:37"><call pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:35">tcg_temp_new_i64</name><argument_list pos:start="7:36" pos:end="7:37">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:63"><expr pos:start="9:5" pos:end="9:62"><call pos:start="9:5" pos:end="9:62"><name pos:start="9:5" pos:end="9:18">tcg_gen_ld_i64</name><argument_list pos:start="9:19" pos:end="9:62">(<argument pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:22"><name pos:start="9:20" pos:end="9:22">tmp</name></expr></argument>, <argument pos:start="9:25" pos:end="9:31"><expr pos:start="9:25" pos:end="9:31"><name pos:start="9:25" pos:end="9:31">cpu_env</name></expr></argument>, <argument pos:start="9:34" pos:end="9:61"><expr pos:start="9:34" pos:end="9:61"><call pos:start="9:34" pos:end="9:61"><name pos:start="9:34" pos:end="9:46">fp_reg_offset</name><argument_list pos:start="9:47" pos:end="9:61">(<argument pos:start="9:48" pos:end="9:53"><expr pos:start="9:48" pos:end="9:53"><name pos:start="9:48" pos:end="9:53">srcidx</name></expr></argument>, <argument pos:start="9:56" pos:end="9:60"><expr pos:start="9:56" pos:end="9:60"><name pos:start="9:56" pos:end="9:60">MO_64</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="31:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <literal type="number" pos:start="11:16" pos:end="11:16">4</literal></expr>)</condition> <block pos:start="11:19" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:75">

        <expr_stmt pos:start="13:9" pos:end="13:75"><expr pos:start="13:9" pos:end="13:74"><call pos:start="13:9" pos:end="13:74"><name pos:start="13:9" pos:end="13:27">tcg_gen_qemu_st_i64</name><argument_list pos:start="13:28" pos:end="13:74">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">tmp</name></expr></argument>, <argument pos:start="13:34" pos:end="13:41"><expr pos:start="13:34" pos:end="13:41"><name pos:start="13:34" pos:end="13:41">tcg_addr</name></expr></argument>, <argument pos:start="13:44" pos:end="13:59"><expr pos:start="13:44" pos:end="13:59"><call pos:start="13:44" pos:end="13:59"><name pos:start="13:44" pos:end="13:56">get_mem_index</name><argument_list pos:start="13:57" pos:end="13:59">(<argument pos:start="13:58" pos:end="13:58"><expr pos:start="13:58" pos:end="13:58"><name pos:start="13:58" pos:end="13:58">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:62" pos:end="13:73"><expr pos:start="13:62" pos:end="13:73"><name pos:start="13:62" pos:end="13:66">MO_TE</name> <operator pos:start="13:68" pos:end="13:68">+</operator> <name pos:start="13:70" pos:end="13:73">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="31:5">else <block pos:start="15:12" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:38">

        <decl_stmt pos:start="17:9" pos:end="17:49"><decl pos:start="17:9" pos:end="17:48"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">TCGv_i64</name></type> <name pos:start="17:18" pos:end="17:27">tcg_hiaddr</name> <init pos:start="17:29" pos:end="17:48">= <expr pos:start="17:31" pos:end="17:48"><call pos:start="17:31" pos:end="17:48"><name pos:start="17:31" pos:end="17:46">tcg_temp_new_i64</name><argument_list pos:start="17:47" pos:end="17:48">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:69"><expr pos:start="19:9" pos:end="19:68"><call pos:start="19:9" pos:end="19:68"><name pos:start="19:9" pos:end="19:27">tcg_gen_qemu_st_i64</name><argument_list pos:start="19:28" pos:end="19:68">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">tmp</name></expr></argument>, <argument pos:start="19:34" pos:end="19:41"><expr pos:start="19:34" pos:end="19:41"><name pos:start="19:34" pos:end="19:41">tcg_addr</name></expr></argument>, <argument pos:start="19:44" pos:end="19:59"><expr pos:start="19:44" pos:end="19:59"><call pos:start="19:44" pos:end="19:59"><name pos:start="19:44" pos:end="19:56">get_mem_index</name><argument_list pos:start="19:57" pos:end="19:59">(<argument pos:start="19:58" pos:end="19:58"><expr pos:start="19:58" pos:end="19:58"><name pos:start="19:58" pos:end="19:58">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:62" pos:end="19:67"><expr pos:start="19:62" pos:end="19:67"><name pos:start="19:62" pos:end="19:67">MO_TEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><call pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:25">tcg_gen_qemu_st64</name><argument_list pos:start="21:26" pos:end="21:58">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">tmp</name></expr></argument>, <argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39">tcg_addr</name></expr></argument>, <argument pos:start="21:42" pos:end="21:57"><expr pos:start="21:42" pos:end="21:57"><call pos:start="21:42" pos:end="21:57"><name pos:start="21:42" pos:end="21:54">get_mem_index</name><argument_list pos:start="21:55" pos:end="21:57">(<argument pos:start="21:56" pos:end="21:56"><expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><call pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:22">tcg_gen_ld_i64</name><argument_list pos:start="23:23" pos:end="23:62">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">tmp</name></expr></argument>, <argument pos:start="23:29" pos:end="23:35"><expr pos:start="23:29" pos:end="23:35"><name pos:start="23:29" pos:end="23:35">cpu_env</name></expr></argument>, <argument pos:start="23:38" pos:end="23:61"><expr pos:start="23:38" pos:end="23:61"><call pos:start="23:38" pos:end="23:61"><name pos:start="23:38" pos:end="23:53">fp_reg_hi_offset</name><argument_list pos:start="23:54" pos:end="23:61">(<argument pos:start="23:55" pos:end="23:60"><expr pos:start="23:55" pos:end="23:60"><name pos:start="23:55" pos:end="23:60">srcidx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:49"><call pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:24">tcg_gen_addi_i64</name><argument_list pos:start="25:25" pos:end="25:49">(<argument pos:start="25:26" pos:end="25:35"><expr pos:start="25:26" pos:end="25:35"><name pos:start="25:26" pos:end="25:35">tcg_hiaddr</name></expr></argument>, <argument pos:start="25:38" pos:end="25:45"><expr pos:start="25:38" pos:end="25:45"><name pos:start="25:38" pos:end="25:45">tcg_addr</name></expr></argument>, <argument pos:start="25:48" pos:end="25:48"><expr pos:start="25:48" pos:end="25:48"><literal type="number" pos:start="25:48" pos:end="25:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:27">tcg_gen_qemu_st_i64</name><argument_list pos:start="27:28" pos:end="27:70">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">tmp</name></expr></argument>, <argument pos:start="27:34" pos:end="27:43"><expr pos:start="27:34" pos:end="27:43"><name pos:start="27:34" pos:end="27:43">tcg_hiaddr</name></expr></argument>, <argument pos:start="27:46" pos:end="27:61"><expr pos:start="27:46" pos:end="27:61"><call pos:start="27:46" pos:end="27:61"><name pos:start="27:46" pos:end="27:58">get_mem_index</name><argument_list pos:start="27:59" pos:end="27:61">(<argument pos:start="27:60" pos:end="27:60"><expr pos:start="27:60" pos:end="27:60"><name pos:start="27:60" pos:end="27:60">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:64" pos:end="27:69"><expr pos:start="27:64" pos:end="27:69"><name pos:start="27:64" pos:end="27:69">MO_TEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:25">tcg_temp_free_i64</name><argument_list pos:start="29:26" pos:end="29:37">(<argument pos:start="29:27" pos:end="29:36"><expr pos:start="29:27" pos:end="29:36"><name pos:start="29:27" pos:end="29:36">tcg_hiaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:21">tcg_temp_free_i64</name><argument_list pos:start="35:22" pos:end="35:26">(<argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
