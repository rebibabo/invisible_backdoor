<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26748.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">patch_pci_windows</name><parameter_list pos:start="1:30" pos:end="1:76">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:39">PcPciInfo</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">pci</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">start</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:75"><decl pos:start="1:63" pos:end="1:75"><type pos:start="1:63" pos:end="1:75"><name pos:start="1:63" pos:end="1:70">unsigned</name></type> <name pos:start="1:72" pos:end="1:75">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <expr_stmt pos:start="5:5" pos:end="7:36"><expr pos:start="5:5" pos:end="7:35"><operator pos:start="5:5" pos:end="5:5">*</operator><call pos:start="5:6" pos:end="5:63"><name pos:start="5:6" pos:end="5:19">ACPI_BUILD_PTR</name><argument_list pos:start="5:20" pos:end="5:63">(<argument pos:start="5:21" pos:end="5:25"><expr pos:start="5:21" pos:end="5:25"><name pos:start="5:21" pos:end="5:25">start</name></expr></argument>, <argument pos:start="5:28" pos:end="5:31"><expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">size</name></expr></argument>, <argument pos:start="5:34" pos:end="5:52"><expr pos:start="5:34" pos:end="5:52"><name pos:start="5:34" pos:end="5:52"><name pos:start="5:34" pos:end="5:49">acpi_pci32_start</name><index pos:start="5:50" pos:end="5:52">[<expr pos:start="5:51" pos:end="5:51"><literal type="number" pos:start="5:51" pos:end="5:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="5:55" pos:end="5:62"><expr pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:62">uint32_t</name></expr></argument>)</argument_list></call> <operator pos:start="5:65" pos:end="5:65">=</operator>

        <call pos:start="7:9" pos:end="7:35"><name pos:start="7:9" pos:end="7:19">cpu_to_le32</name><argument_list pos:start="7:20" pos:end="7:35">(<argument pos:start="7:21" pos:end="7:34"><expr pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:23">pci</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:28">w32</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:34">begin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:38"><expr pos:start="11:5" pos:end="13:37"><operator pos:start="11:5" pos:end="11:5">*</operator><call pos:start="11:6" pos:end="11:61"><name pos:start="11:6" pos:end="11:19">ACPI_BUILD_PTR</name><argument_list pos:start="11:20" pos:end="11:61">(<argument pos:start="11:21" pos:end="11:25"><expr pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:25">start</name></expr></argument>, <argument pos:start="11:28" pos:end="11:31"><expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">size</name></expr></argument>, <argument pos:start="11:34" pos:end="11:50"><expr pos:start="11:34" pos:end="11:50"><name pos:start="11:34" pos:end="11:50"><name pos:start="11:34" pos:end="11:47">acpi_pci32_end</name><index pos:start="11:48" pos:end="11:50">[<expr pos:start="11:49" pos:end="11:49"><literal type="number" pos:start="11:49" pos:end="11:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="11:53" pos:end="11:60"><expr pos:start="11:53" pos:end="11:60"><name pos:start="11:53" pos:end="11:60">uint32_t</name></expr></argument>)</argument_list></call> <operator pos:start="11:63" pos:end="11:63">=</operator>

        <call pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:19">cpu_to_le32</name><argument_list pos:start="13:20" pos:end="13:37">(<argument pos:start="13:21" pos:end="13:36"><expr pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:23">pci</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:28">w32</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:32">end</name></name> <operator pos:start="13:34" pos:end="13:34">-</operator> <literal type="number" pos:start="13:36" pos:end="13:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:39">(<expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:11">pci</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">w64</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:20">end</name></name> <operator pos:start="17:22" pos:end="17:23">||</operator> <name pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:27">pci</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:32">w64</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:38">begin</name></name></expr>)</condition> <block pos:start="17:41" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:55">

        <expr_stmt pos:start="19:9" pos:end="19:71"><expr pos:start="19:9" pos:end="19:70"><operator pos:start="19:9" pos:end="19:9">*</operator><call pos:start="19:10" pos:end="19:66"><name pos:start="19:10" pos:end="19:23">ACPI_BUILD_PTR</name><argument_list pos:start="19:24" pos:end="19:66">(<argument pos:start="19:25" pos:end="19:29"><expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:29">start</name></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">size</name></expr></argument>, <argument pos:start="19:38" pos:end="19:56"><expr pos:start="19:38" pos:end="19:56"><name pos:start="19:38" pos:end="19:56"><name pos:start="19:38" pos:end="19:53">acpi_pci64_valid</name><index pos:start="19:54" pos:end="19:56">[<expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="19:59" pos:end="19:65"><expr pos:start="19:59" pos:end="19:65"><name pos:start="19:59" pos:end="19:65">uint8_t</name></expr></argument>)</argument_list></call> <operator pos:start="19:68" pos:end="19:68">=</operator> <literal type="number" pos:start="19:70" pos:end="19:70">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="23:40"><expr pos:start="21:9" pos:end="23:39"><operator pos:start="21:9" pos:end="21:9">*</operator><call pos:start="21:10" pos:end="21:67"><name pos:start="21:10" pos:end="21:23">ACPI_BUILD_PTR</name><argument_list pos:start="21:24" pos:end="21:67">(<argument pos:start="21:25" pos:end="21:29"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:29">start</name></expr></argument>, <argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">size</name></expr></argument>, <argument pos:start="21:38" pos:end="21:56"><expr pos:start="21:38" pos:end="21:56"><name pos:start="21:38" pos:end="21:56"><name pos:start="21:38" pos:end="21:53">acpi_pci64_start</name><index pos:start="21:54" pos:end="21:56">[<expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:59" pos:end="21:66"><expr pos:start="21:59" pos:end="21:66"><name pos:start="21:59" pos:end="21:66">uint64_t</name></expr></argument>)</argument_list></call> <operator pos:start="21:69" pos:end="21:69">=</operator>

            <call pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:23">cpu_to_le64</name><argument_list pos:start="23:24" pos:end="23:39">(<argument pos:start="23:25" pos:end="23:38"><expr pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:27">pci</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">w64</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:38">begin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:42"><expr pos:start="25:9" pos:end="27:41"><operator pos:start="25:9" pos:end="25:9">*</operator><call pos:start="25:10" pos:end="25:65"><name pos:start="25:10" pos:end="25:23">ACPI_BUILD_PTR</name><argument_list pos:start="25:24" pos:end="25:65">(<argument pos:start="25:25" pos:end="25:29"><expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:29">start</name></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><name pos:start="25:32" pos:end="25:35">size</name></expr></argument>, <argument pos:start="25:38" pos:end="25:54"><expr pos:start="25:38" pos:end="25:54"><name pos:start="25:38" pos:end="25:54"><name pos:start="25:38" pos:end="25:51">acpi_pci64_end</name><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:57" pos:end="25:64"><expr pos:start="25:57" pos:end="25:64"><name pos:start="25:57" pos:end="25:64">uint64_t</name></expr></argument>)</argument_list></call> <operator pos:start="25:67" pos:end="25:67">=</operator>

            <call pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:23">cpu_to_le64</name><argument_list pos:start="27:24" pos:end="27:41">(<argument pos:start="27:25" pos:end="27:40"><expr pos:start="27:25" pos:end="27:40"><name pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:27">pci</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:32">w64</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:36">end</name></name> <operator pos:start="27:38" pos:end="27:38">-</operator> <literal type="number" pos:start="27:40" pos:end="27:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:55"><expr pos:start="29:9" pos:end="31:54"><operator pos:start="29:9" pos:end="29:9">*</operator><call pos:start="29:10" pos:end="29:68"><name pos:start="29:10" pos:end="29:23">ACPI_BUILD_PTR</name><argument_list pos:start="29:24" pos:end="29:68">(<argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">start</name></expr></argument>, <argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">size</name></expr></argument>, <argument pos:start="29:38" pos:end="29:57"><expr pos:start="29:38" pos:end="29:57"><name pos:start="29:38" pos:end="29:57"><name pos:start="29:38" pos:end="29:54">acpi_pci64_length</name><index pos:start="29:55" pos:end="29:57">[<expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:60" pos:end="29:67"><expr pos:start="29:60" pos:end="29:67"><name pos:start="29:60" pos:end="29:67">uint64_t</name></expr></argument>)</argument_list></call> <operator pos:start="29:70" pos:end="29:70">=</operator>

            <call pos:start="31:13" pos:end="31:54"><name pos:start="31:13" pos:end="31:23">cpu_to_le64</name><argument_list pos:start="31:24" pos:end="31:54">(<argument pos:start="31:25" pos:end="31:53"><expr pos:start="31:25" pos:end="31:53"><name pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:27">pci</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:32">w64</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:36">end</name></name> <operator pos:start="31:38" pos:end="31:38">-</operator> <name pos:start="31:40" pos:end="31:53"><name pos:start="31:40" pos:end="31:42">pci</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:47">w64</name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:53">begin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:71">

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><operator pos:start="35:9" pos:end="35:9">*</operator><call pos:start="35:10" pos:end="35:66"><name pos:start="35:10" pos:end="35:23">ACPI_BUILD_PTR</name><argument_list pos:start="35:24" pos:end="35:66">(<argument pos:start="35:25" pos:end="35:29"><expr pos:start="35:25" pos:end="35:29"><name pos:start="35:25" pos:end="35:29">start</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><name pos:start="35:32" pos:end="35:35">size</name></expr></argument>, <argument pos:start="35:38" pos:end="35:56"><expr pos:start="35:38" pos:end="35:56"><name pos:start="35:38" pos:end="35:56"><name pos:start="35:38" pos:end="35:53">acpi_pci64_valid</name><index pos:start="35:54" pos:end="35:56">[<expr pos:start="35:55" pos:end="35:55"><literal type="number" pos:start="35:55" pos:end="35:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:59" pos:end="35:65"><expr pos:start="35:59" pos:end="35:65"><name pos:start="35:59" pos:end="35:65">uint8_t</name></expr></argument>)</argument_list></call> <operator pos:start="35:68" pos:end="35:68">=</operator> <literal type="number" pos:start="35:70" pos:end="35:70">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
