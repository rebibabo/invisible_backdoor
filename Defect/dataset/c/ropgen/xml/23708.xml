<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23708.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:49">bdrv_do_release_matching_dirty_bitmap</name><parameter_list pos:start="1:50" pos:end="5:66">(<parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><name pos:start="1:51" pos:end="1:66">BlockDriverState</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">bs</name></decl></parameter>,

                                                  <parameter pos:start="3:51" pos:end="3:73"><decl pos:start="3:51" pos:end="3:73"><type pos:start="3:51" pos:end="3:73"><name pos:start="3:51" pos:end="3:65">BdrvDirtyBitmap</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:73">bitmap</name></decl></parameter>,

                                                  <parameter pos:start="5:51" pos:end="5:65"><decl pos:start="5:51" pos:end="5:65"><type pos:start="5:51" pos:end="5:65"><name pos:start="5:51" pos:end="5:54">bool</name></type> <name pos:start="5:56" pos:end="5:65">only_named</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="47:1">{<block_content pos:start="9:5" pos:end="45:5">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">BdrvDirtyBitmap</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">bm</name></decl>, <decl pos:start="9:26" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:30">next</name></decl>;</decl_stmt>

    <macro pos:start="11:5" pos:end="11:58"><name pos:start="11:5" pos:end="11:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="11:23" pos:end="11:58">(<argument pos:start="11:24" pos:end="11:25">bm</argument>, <argument pos:start="11:28" pos:end="11:45">&amp;bs-&gt;dirty_bitmaps</argument>, <argument pos:start="11:48" pos:end="11:51">list</argument>, <argument pos:start="11:54" pos:end="11:57">next</argument>)</argument_list></macro> <block pos:start="11:60" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

        <if_stmt pos:start="13:9" pos:end="37:9"><if pos:start="13:9" pos:end="37:9">if <condition pos:start="13:12" pos:end="13:67">(<expr pos:start="13:13" pos:end="13:66"><operator pos:start="13:13" pos:end="13:13">(</operator><operator pos:start="13:14" pos:end="13:14">!</operator><name pos:start="13:15" pos:end="13:20">bitmap</name> <operator pos:start="13:22" pos:end="13:23">||</operator> <name pos:start="13:25" pos:end="13:26">bm</name> <operator pos:start="13:28" pos:end="13:29">==</operator> <name pos:start="13:31" pos:end="13:36">bitmap</name><operator pos:start="13:37" pos:end="13:37">)</operator> <operator pos:start="13:39" pos:end="13:40">&amp;&amp;</operator> <operator pos:start="13:42" pos:end="13:42">(</operator><operator pos:start="13:43" pos:end="13:43">!</operator><name pos:start="13:44" pos:end="13:53">only_named</name> <operator pos:start="13:55" pos:end="13:56">||</operator> <name pos:start="13:58" pos:end="13:65"><name pos:start="13:58" pos:end="13:59">bm</name><operator pos:start="13:60" pos:end="13:61">-&gt;</operator><name pos:start="13:62" pos:end="13:65">name</name></name><operator pos:start="13:66" pos:end="13:66">)</operator></expr>)</condition> <block pos:start="13:69" pos:end="37:9">{<block_content pos:start="15:13" pos:end="35:13">

            <expr_stmt pos:start="15:13" pos:end="15:42"><expr pos:start="15:13" pos:end="15:41"><call pos:start="15:13" pos:end="15:41"><name pos:start="15:13" pos:end="15:18">assert</name><argument_list pos:start="15:19" pos:end="15:41">(<argument pos:start="15:20" pos:end="15:40"><expr pos:start="15:20" pos:end="15:40"><operator pos:start="15:20" pos:end="15:20">!</operator><name pos:start="15:21" pos:end="15:40"><name pos:start="15:21" pos:end="15:22">bm</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:40">active_iterators</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:50"><expr pos:start="17:13" pos:end="17:49"><call pos:start="17:13" pos:end="17:49"><name pos:start="17:13" pos:end="17:18">assert</name><argument_list pos:start="17:19" pos:end="17:49">(<argument pos:start="17:20" pos:end="17:48"><expr pos:start="17:20" pos:end="17:48"><operator pos:start="17:20" pos:end="17:20">!</operator><call pos:start="17:21" pos:end="17:48"><name pos:start="17:21" pos:end="17:44">bdrv_dirty_bitmap_frozen</name><argument_list pos:start="17:45" pos:end="17:48">(<argument pos:start="17:46" pos:end="17:47"><expr pos:start="17:46" pos:end="17:47"><name pos:start="17:46" pos:end="17:47">bm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:30"><expr pos:start="19:13" pos:end="19:29"><call pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:18">assert</name><argument_list pos:start="19:19" pos:end="19:29">(<argument pos:start="19:20" pos:end="19:28"><expr pos:start="19:20" pos:end="19:28"><operator pos:start="19:20" pos:end="19:20">!</operator><name pos:start="19:21" pos:end="19:28"><name pos:start="19:21" pos:end="19:22">bm</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:28">meta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:34"><call pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:24">QLIST_REMOVE</name><argument_list pos:start="21:25" pos:end="21:34">(<argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><name pos:start="21:26" pos:end="21:27">bm</name></expr></argument>, <argument pos:start="21:30" pos:end="21:33"><expr pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:33">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:37"><expr pos:start="23:13" pos:end="23:36"><call pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:24">hbitmap_free</name><argument_list pos:start="23:25" pos:end="23:36">(<argument pos:start="23:26" pos:end="23:35"><expr pos:start="23:26" pos:end="23:35"><name pos:start="23:26" pos:end="23:35"><name pos:start="23:26" pos:end="23:27">bm</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:18">g_free</name><argument_list pos:start="25:19" pos:end="25:28">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:21">bm</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:23"><expr pos:start="27:13" pos:end="27:22"><call pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:18">g_free</name><argument_list pos:start="27:19" pos:end="27:22">(<argument pos:start="27:20" pos:end="27:21"><expr pos:start="27:20" pos:end="27:21"><name pos:start="27:20" pos:end="27:21">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:23">(<expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">bitmap</name></expr>)</condition> <block pos:start="31:25" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:23">

                <return pos:start="33:17" pos:end="33:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">bitmap</name></expr>)</condition> <block pos:start="41:17" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:16">

        <expr_stmt pos:start="43:9" pos:end="43:16"><expr pos:start="43:9" pos:end="43:15"><call pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:13">abort</name><argument_list pos:start="43:14" pos:end="43:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
