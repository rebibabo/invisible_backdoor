<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2422.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">decode_init</name><parameter_list pos:start="1:31" pos:end="1:54">(<parameter pos:start="1:32" pos:end="1:53"><decl pos:start="1:32" pos:end="1:53"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:15">KmvcContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier><specifier pos:start="5:18" pos:end="5:22">const</specifier></type> <name pos:start="5:24" pos:end="5:24">c</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">c</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:20">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:50">(<expr pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">width</name></name> <operator pos:start="15:22" pos:end="15:22">&gt;</operator> <literal type="number" pos:start="15:24" pos:end="15:26">320</literal> <operator pos:start="15:28" pos:end="15:29">||</operator> <name pos:start="15:31" pos:end="15:43"><name pos:start="15:31" pos:end="15:35">avctx</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:43">height</name></name> <operator pos:start="15:45" pos:end="15:45">&gt;</operator> <literal type="number" pos:start="15:47" pos:end="15:49">200</literal></expr>)</condition> <block pos:start="15:52" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:73"><expr pos:start="17:9" pos:end="17:72"><call pos:start="17:9" pos:end="17:72"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:72">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:37" pos:end="17:71"><expr pos:start="17:37" pos:end="17:71"><literal type="string" pos:start="17:37" pos:end="17:71">"KMVC supports frames &lt;= 320x200\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">c</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">frm0</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:35"><name pos:start="25:15" pos:end="25:24">av_mallocz</name><argument_list pos:start="25:25" pos:end="25:35">(<argument pos:start="25:26" pos:end="25:34"><expr pos:start="25:26" pos:end="25:34"><literal type="number" pos:start="25:26" pos:end="25:28">320</literal> <operator pos:start="25:30" pos:end="25:30">*</operator> <literal type="number" pos:start="25:32" pos:end="25:34">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">c</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">frm1</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:35"><name pos:start="27:15" pos:end="27:24">av_mallocz</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><literal type="number" pos:start="27:26" pos:end="27:28">320</literal> <operator pos:start="27:30" pos:end="27:30">*</operator> <literal type="number" pos:start="27:32" pos:end="27:34">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">cur</name></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:20"><name pos:start="29:14" pos:end="29:14">c</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">frm0</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:11">prev</name></name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:21"><name pos:start="31:15" pos:end="31:15">c</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:21">frm1</name></name></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="39:5">for <control pos:start="35:9" pos:end="35:29">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:23">256</literal></expr>;</condition> <incr pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:26">i</name><operator pos:start="35:27" pos:end="35:28">++</operator></expr></incr>)</control> <block pos:start="35:31" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:45">

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:14">pal</name><index pos:start="37:15" pos:end="37:17">[<expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">i</name></expr>]</index></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:24">0xFF</literal> <operator pos:start="37:26" pos:end="37:27">&lt;&lt;</operator> <literal type="number" pos:start="37:29" pos:end="37:30">24</literal> <operator pos:start="37:32" pos:end="37:32">|</operator> <name pos:start="37:34" pos:end="37:34">i</name> <operator pos:start="37:36" pos:end="37:36">*</operator> <literal type="number" pos:start="37:38" pos:end="37:44">0x10101</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:35">(<expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:29">extradata_size</name></name> <operator pos:start="43:31" pos:end="43:31">&lt;</operator> <literal type="number" pos:start="43:33" pos:end="43:34">12</literal></expr>)</condition> <block pos:start="43:37" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:25">

        <expr_stmt pos:start="45:9" pos:end="47:73"><expr pos:start="45:9" pos:end="47:72"><call pos:start="45:9" pos:end="47:72"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="47:72">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:36"><expr pos:start="45:23" pos:end="45:36"><name pos:start="45:23" pos:end="45:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="47:16" pos:end="47:71"><expr pos:start="47:16" pos:end="47:71"><literal type="string" pos:start="47:16" pos:end="47:71">"Extradata missing, decoding may not work properly...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:18">palsize</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:24">127</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="65:5">else <block pos:start="51:12" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:9">

        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">palsize</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:51"><name pos:start="53:22" pos:end="53:28">AV_RL16</name><argument_list pos:start="53:29" pos:end="53:51">(<argument pos:start="53:30" pos:end="53:50"><expr pos:start="53:30" pos:end="53:50"><name pos:start="53:30" pos:end="53:45"><name pos:start="53:30" pos:end="53:34">avctx</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:45">extradata</name></name> <operator pos:start="53:47" pos:end="53:47">+</operator> <literal type="number" pos:start="53:49" pos:end="53:50">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:48">(<expr pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">palsize</name></name> <operator pos:start="55:24" pos:end="55:25">&gt;=</operator> <operator pos:start="55:27" pos:end="55:27">(</operator><name pos:start="55:28" pos:end="55:35">unsigned</name><operator pos:start="55:36" pos:end="55:36">)</operator><name pos:start="55:37" pos:end="55:47">MAX_PALSIZE</name></expr>)</condition> <block pos:start="55:50" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:39">

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:13">c</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">palsize</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:28">127</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:68"><expr pos:start="59:13" pos:end="59:67"><call pos:start="59:13" pos:end="59:67"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:67">(<argument pos:start="59:20" pos:end="59:24"><expr pos:start="59:20" pos:end="59:24"><name pos:start="59:20" pos:end="59:24">avctx</name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><name pos:start="59:27" pos:end="59:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:41" pos:end="59:66"><expr pos:start="59:41" pos:end="59:66"><literal type="string" pos:start="59:41" pos:end="59:66">"KMVC palette too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:39">return <expr pos:start="61:20" pos:end="61:38"><name pos:start="61:20" pos:end="61:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:38">(<expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:13">avctx</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:29">extradata_size</name></name> <operator pos:start="69:31" pos:end="69:32">==</operator> <literal type="number" pos:start="69:34" pos:end="69:37">1036</literal></expr>)</condition> <block pos:start="69:40" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:22">        <comment type="line" pos:start="69:49" pos:end="69:71">// palette in extradata</comment>

        <decl_stmt pos:start="71:9" pos:end="71:45"><decl pos:start="71:9" pos:end="71:44"><type pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:15">uint8_t</name> <modifier pos:start="71:17" pos:end="71:17">*</modifier></type><name pos:start="71:18" pos:end="71:20">src</name> <init pos:start="71:22" pos:end="71:44">= <expr pos:start="71:24" pos:end="71:44"><name pos:start="71:24" pos:end="71:39"><name pos:start="71:24" pos:end="71:28">avctx</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:39">extradata</name></name> <operator pos:start="71:41" pos:end="71:41">+</operator> <literal type="number" pos:start="71:43" pos:end="71:44">12</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="73:9" pos:end="79:9">for <control pos:start="73:13" pos:end="73:33">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:28"><expr pos:start="73:21" pos:end="73:27"><name pos:start="73:21" pos:end="73:21">i</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <literal type="number" pos:start="73:25" pos:end="73:27">256</literal></expr>;</condition> <incr pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:30">i</name><operator pos:start="73:31" pos:end="73:32">++</operator></expr></incr>)</control> <block pos:start="73:35" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:21">

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:13">c</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:18">pal</name><index pos:start="75:19" pos:end="75:21">[<expr pos:start="75:20" pos:end="75:20"><name pos:start="75:20" pos:end="75:20">i</name></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <call pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:31">AV_RL32</name><argument_list pos:start="75:32" pos:end="75:36">(<argument pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:35">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:21"><expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:15">src</name> <operator pos:start="77:17" pos:end="77:18">+=</operator> <literal type="number" pos:start="77:20" pos:end="77:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:22"><expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:9">c</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:17">setpal</name></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:40"><expr pos:start="87:5" pos:end="87:39"><call pos:start="87:5" pos:end="87:39"><name pos:start="87:5" pos:end="87:30">avcodec_get_frame_defaults</name><argument_list pos:start="87:31" pos:end="87:39">(<argument pos:start="87:32" pos:end="87:38"><expr pos:start="87:32" pos:end="87:38"><operator pos:start="87:32" pos:end="87:32">&amp;</operator><name pos:start="87:33" pos:end="87:38"><name pos:start="87:33" pos:end="87:33">c</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:38">pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:37"><expr pos:start="89:5" pos:end="89:36"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:9">avctx</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">pix_fmt</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:36">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
