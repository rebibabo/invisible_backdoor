<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13764.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">s390_init</name><parameter_list pos:start="1:22" pos:end="1:44">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">MachineState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:43">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:72">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">ram_addr_t</name></type> <name pos:start="5:16" pos:end="5:26">my_ram_size</name> <init pos:start="5:28" pos:end="5:46">= <expr pos:start="5:30" pos:end="5:46"><name pos:start="5:30" pos:end="5:46"><name pos:start="5:30" pos:end="5:36">machine</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:46">ram_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">sysmem</name> <init pos:start="7:26" pos:end="7:46">= <expr pos:start="7:28" pos:end="7:46"><call pos:start="7:28" pos:end="7:46"><name pos:start="7:28" pos:end="7:44">get_system_memory</name><argument_list pos:start="7:45" pos:end="7:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ram</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><call pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:29">g_new</name><argument_list pos:start="9:30" pos:end="9:46">(<argument pos:start="9:31" pos:end="9:42"><expr pos:start="9:31" pos:end="9:42"><name pos:start="9:31" pos:end="9:42">MemoryRegion</name></expr></argument>, <argument pos:start="9:45" pos:end="9:45"><expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">increment_size</name> <init pos:start="11:24" pos:end="11:27">= <expr pos:start="11:26" pos:end="11:27"><literal type="number" pos:start="11:26" pos:end="11:27">20</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:23">virtio_region</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:28">virtio_region_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">hwaddr</name></type> <name pos:start="17:12" pos:end="17:30">virtio_region_start</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:27">(<expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:15">machine</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:26">ram_slots</name></name></expr>)</condition> <block pos:start="21:29" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:27">

        <expr_stmt pos:start="23:9" pos:end="23:78"><expr pos:start="23:9" pos:end="23:77"><call pos:start="23:9" pos:end="23:77"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="23:77">(<argument pos:start="23:22" pos:end="23:76"><expr pos:start="23:22" pos:end="23:76"><literal type="string" pos:start="23:22" pos:end="23:76">"Memory hotplug not supported by the selected machine."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><call pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:12">exit</name><argument_list pos:start="25:13" pos:end="25:26">(<argument pos:start="25:14" pos:end="25:25"><expr pos:start="25:14" pos:end="25:25"><name pos:start="25:14" pos:end="25:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="29:5" pos:end="37:7">/*

     * The storage increment size is a multiple of 1M and is a power of 2.

     * The number of storage increments must be MAX_STORAGE_INCREMENTS or

     * fewer.

     */</comment>

    <while pos:start="39:5" pos:end="43:5">while <condition pos:start="39:11" pos:end="39:68">(<expr pos:start="39:12" pos:end="39:67"><operator pos:start="39:12" pos:end="39:12">(</operator><name pos:start="39:13" pos:end="39:23">my_ram_size</name> <operator pos:start="39:25" pos:end="39:26">&gt;&gt;</operator> <name pos:start="39:28" pos:end="39:41">increment_size</name><operator pos:start="39:42" pos:end="39:42">)</operator> <operator pos:start="39:44" pos:end="39:44">&gt;</operator> <name pos:start="39:46" pos:end="39:67">MAX_STORAGE_INCREMENTS</name></expr>)</condition> <block pos:start="39:70" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:25">

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:22">increment_size</name><operator pos:start="41:23" pos:end="41:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:15">my_ram_size</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:29">my_ram_size</name> <operator pos:start="45:31" pos:end="45:32">&gt;&gt;</operator> <name pos:start="45:34" pos:end="45:47">increment_size</name> <operator pos:start="45:49" pos:end="45:50">&lt;&lt;</operator> <name pos:start="45:52" pos:end="45:65">increment_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:72">/* let's propagate the changed ram size into the global variable. */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:12">ram_size</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:26">my_ram_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:19">/* get a BUS */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:12">s390_bus</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:49"><name pos:start="57:16" pos:end="57:35">s390_virtio_bus_init</name><argument_list pos:start="57:36" pos:end="57:49">(<argument pos:start="57:37" pos:end="57:48"><expr pos:start="57:37" pos:end="57:48"><operator pos:start="57:37" pos:end="57:37">&amp;</operator><name pos:start="57:38" pos:end="57:48">my_ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><call pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:18">s390_sclp_init</name><argument_list pos:start="59:19" pos:end="59:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:70"><expr pos:start="61:5" pos:end="63:69"><call pos:start="61:5" pos:end="63:69"><name pos:start="61:5" pos:end="61:21">s390_init_ipl_dev</name><argument_list pos:start="61:22" pos:end="63:69">(<argument pos:start="61:23" pos:end="61:46"><expr pos:start="61:23" pos:end="61:46"><name pos:start="61:23" pos:end="61:46"><name pos:start="61:23" pos:end="61:29">machine</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:46">kernel_filename</name></name></expr></argument>, <argument pos:start="61:49" pos:end="61:71"><expr pos:start="61:49" pos:end="61:71"><name pos:start="61:49" pos:end="61:71"><name pos:start="61:49" pos:end="61:55">machine</name><operator pos:start="61:56" pos:end="61:57">-&gt;</operator><name pos:start="61:58" pos:end="61:71">kernel_cmdline</name></name></expr></argument>,

                      <argument pos:start="63:23" pos:end="63:46"><expr pos:start="63:23" pos:end="63:46"><name pos:start="63:23" pos:end="63:46"><name pos:start="63:23" pos:end="63:29">machine</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:46">initrd_filename</name></name></expr></argument>, <argument pos:start="63:49" pos:end="63:61"><expr pos:start="63:49" pos:end="63:61"><name pos:start="63:49" pos:end="63:61">ZIPL_FILENAME</name></expr></argument>, <argument pos:start="63:64" pos:end="63:68"><expr pos:start="63:64" pos:end="63:68"><name pos:start="63:64" pos:end="63:68">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><call pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:18">s390_flic_init</name><argument_list pos:start="65:19" pos:end="65:20">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:29">/* register hypercalls */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><call pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:31">s390_virtio_register_hcalls</name><argument_list pos:start="71:32" pos:end="71:33">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:22">/* allocate RAM */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:77"><expr pos:start="77:5" pos:end="77:76"><call pos:start="77:5" pos:end="77:76"><name pos:start="77:5" pos:end="77:26">memory_region_init_ram</name><argument_list pos:start="77:27" pos:end="77:76">(<argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:30">ram</name></expr></argument>, <argument pos:start="77:33" pos:end="77:36"><expr pos:start="77:33" pos:end="77:36"><name pos:start="77:33" pos:end="77:36">NULL</name></expr></argument>, <argument pos:start="77:39" pos:end="77:48"><expr pos:start="77:39" pos:end="77:48"><literal type="string" pos:start="77:39" pos:end="77:48">"s390.ram"</literal></expr></argument>, <argument pos:start="77:51" pos:end="77:61"><expr pos:start="77:51" pos:end="77:61"><name pos:start="77:51" pos:end="77:61">my_ram_size</name></expr></argument>, <argument pos:start="77:64" pos:end="77:75"><expr pos:start="77:64" pos:end="77:75"><operator pos:start="77:64" pos:end="77:64">&amp;</operator><name pos:start="77:65" pos:end="77:75">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><call pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:31">vmstate_register_ram_global</name><argument_list pos:start="79:32" pos:end="79:36">(<argument pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:35">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:48"><expr pos:start="81:5" pos:end="81:47"><call pos:start="81:5" pos:end="81:47"><name pos:start="81:5" pos:end="81:31">memory_region_add_subregion</name><argument_list pos:start="81:32" pos:end="81:47">(<argument pos:start="81:33" pos:end="81:38"><expr pos:start="81:33" pos:end="81:38"><name pos:start="81:33" pos:end="81:38">sysmem</name></expr></argument>, <argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><name pos:start="81:44" pos:end="81:46">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:29">/* clear virtio region */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:47"><expr pos:start="87:5" pos:end="87:46"><name pos:start="87:5" pos:end="87:21">virtio_region_len</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:35">my_ram_size</name> <operator pos:start="87:37" pos:end="87:37">-</operator> <name pos:start="87:39" pos:end="87:46">ram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:23">virtio_region_start</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:34">ram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:70"><expr pos:start="91:5" pos:end="93:69"><name pos:start="91:5" pos:end="91:17">virtio_region</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="93:69"><name pos:start="91:21" pos:end="91:43">cpu_physical_memory_map</name><argument_list pos:start="91:44" pos:end="93:69">(<argument pos:start="91:45" pos:end="91:63"><expr pos:start="91:45" pos:end="91:63"><name pos:start="91:45" pos:end="91:63">virtio_region_start</name></expr></argument>,

                                            <argument pos:start="93:45" pos:end="93:62"><expr pos:start="93:45" pos:end="93:62"><operator pos:start="93:45" pos:end="93:45">&amp;</operator><name pos:start="93:46" pos:end="93:62">virtio_region_len</name></expr></argument>, <argument pos:start="93:65" pos:end="93:68"><expr pos:start="93:65" pos:end="93:68"><name pos:start="93:65" pos:end="93:68">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:48"><expr pos:start="95:5" pos:end="95:47"><call pos:start="95:5" pos:end="95:47"><name pos:start="95:5" pos:end="95:10">memset</name><argument_list pos:start="95:11" pos:end="95:47">(<argument pos:start="95:12" pos:end="95:24"><expr pos:start="95:12" pos:end="95:24"><name pos:start="95:12" pos:end="95:24">virtio_region</name></expr></argument>, <argument pos:start="95:27" pos:end="95:27"><expr pos:start="95:27" pos:end="95:27"><literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr></argument>, <argument pos:start="95:30" pos:end="95:46"><expr pos:start="95:30" pos:end="95:46"><name pos:start="95:30" pos:end="95:46">virtio_region_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="99:49"><expr pos:start="97:5" pos:end="99:48"><call pos:start="97:5" pos:end="99:48"><name pos:start="97:5" pos:end="97:29">cpu_physical_memory_unmap</name><argument_list pos:start="97:30" pos:end="99:48">(<argument pos:start="97:31" pos:end="97:43"><expr pos:start="97:31" pos:end="97:43"><name pos:start="97:31" pos:end="97:43">virtio_region</name></expr></argument>, <argument pos:start="97:46" pos:end="97:62"><expr pos:start="97:46" pos:end="97:62"><name pos:start="97:46" pos:end="97:62">virtio_region_len</name></expr></argument>, <argument pos:start="97:65" pos:end="97:65"><expr pos:start="97:65" pos:end="97:65"><literal type="number" pos:start="97:65" pos:end="97:65">1</literal></expr></argument>,

                              <argument pos:start="99:31" pos:end="99:47"><expr pos:start="99:31" pos:end="99:47"><name pos:start="99:31" pos:end="99:47">virtio_region_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:39">/* Initialize storage key device */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:22"><expr pos:start="105:5" pos:end="105:21"><call pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:19">s390_skeys_init</name><argument_list pos:start="105:20" pos:end="105:21">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:19">/* init CPUs */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:39"><expr pos:start="111:5" pos:end="111:38"><call pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:18">s390_init_cpus</name><argument_list pos:start="111:19" pos:end="111:38">(<argument pos:start="111:20" pos:end="111:37"><expr pos:start="111:20" pos:end="111:37"><name pos:start="111:20" pos:end="111:37"><name pos:start="111:20" pos:end="111:26">machine</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:37">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:40">/* Create VirtIO network adapters */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:68"><expr pos:start="117:5" pos:end="117:67"><call pos:start="117:5" pos:end="117:67"><name pos:start="117:5" pos:end="117:26">s390_create_virtio_net</name><argument_list pos:start="117:27" pos:end="117:67">(<argument pos:start="117:28" pos:end="117:47"><expr pos:start="117:28" pos:end="117:47"><operator pos:start="117:28" pos:end="117:28">(</operator><name pos:start="117:29" pos:end="117:36">BusState</name> <operator pos:start="117:38" pos:end="117:38">*</operator><operator pos:start="117:39" pos:end="117:39">)</operator><name pos:start="117:40" pos:end="117:47">s390_bus</name></expr></argument>, <argument pos:start="117:50" pos:end="117:66"><expr pos:start="117:50" pos:end="117:66"><literal type="string" pos:start="117:50" pos:end="117:66">"virtio-net-s390"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:53">/* Register savevm handler for guest TOD clock */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:72"><expr pos:start="123:5" pos:end="123:71"><call pos:start="123:5" pos:end="123:71"><name pos:start="123:5" pos:end="123:19">register_savevm</name><argument_list pos:start="123:20" pos:end="123:71">(<argument pos:start="123:21" pos:end="123:24"><expr pos:start="123:21" pos:end="123:24"><name pos:start="123:21" pos:end="123:24">NULL</name></expr></argument>, <argument pos:start="123:27" pos:end="123:36"><expr pos:start="123:27" pos:end="123:36"><literal type="string" pos:start="123:27" pos:end="123:36">"todclock"</literal></expr></argument>, <argument pos:start="123:39" pos:end="123:39"><expr pos:start="123:39" pos:end="123:39"><literal type="number" pos:start="123:39" pos:end="123:39">0</literal></expr></argument>, <argument pos:start="123:42" pos:end="123:42"><expr pos:start="123:42" pos:end="123:42"><literal type="number" pos:start="123:42" pos:end="123:42">1</literal></expr></argument>, <argument pos:start="123:45" pos:end="123:53"><expr pos:start="123:45" pos:end="123:53"><name pos:start="123:45" pos:end="123:53">gtod_save</name></expr></argument>, <argument pos:start="123:56" pos:end="123:64"><expr pos:start="123:56" pos:end="123:64"><name pos:start="123:56" pos:end="123:64">gtod_load</name></expr></argument>, <argument pos:start="123:67" pos:end="123:70"><expr pos:start="123:67" pos:end="123:70"><name pos:start="123:67" pos:end="123:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
