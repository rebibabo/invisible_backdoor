<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2107.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">filter_mb_edgeh</name><parameter_list pos:start="1:28" pos:end="1:90">( <parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">H264Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">h</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pix</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:69">stride</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:80"><decl pos:start="1:72" pos:end="1:80"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:80"><name pos:start="1:76" pos:end="1:77">bS</name><index pos:start="1:78" pos:end="1:80">[<expr pos:start="1:79" pos:end="1:79"><literal type="number" pos:start="1:79" pos:end="1:79">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:88"><decl pos:start="1:83" pos:end="1:88"><type pos:start="1:83" pos:end="1:88"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:88">qp</name></decl></parameter> )</parameter_list> <block pos:start="1:92" pos:end="151:1">{<block_content pos:start="3:5" pos:end="149:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:21">index_a</name> <init pos:start="5:23" pos:end="5:68">= <expr pos:start="5:25" pos:end="5:68"><call pos:start="5:25" pos:end="5:68"><name pos:start="5:25" pos:end="5:28">clip</name><argument_list pos:start="5:29" pos:end="5:68">( <argument pos:start="5:31" pos:end="5:59"><expr pos:start="5:31" pos:end="5:59"><name pos:start="5:31" pos:end="5:32">qp</name> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:59"><name pos:start="5:36" pos:end="5:36">h</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:59">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="5:62" pos:end="5:62"><expr pos:start="5:62" pos:end="5:62"><literal type="number" pos:start="5:62" pos:end="5:62">0</literal></expr></argument>, <argument pos:start="5:65" pos:end="5:66"><expr pos:start="5:65" pos:end="5:66"><literal type="number" pos:start="5:65" pos:end="5:66">51</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">alpha</name> <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:33">alpha_table</name><index pos:start="7:34" pos:end="7:42">[<expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">index_a</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:74"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">beta</name>  <init pos:start="9:21" pos:end="9:74">= <expr pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:32">beta_table</name><index pos:start="9:33" pos:end="9:74">[<expr pos:start="9:34" pos:end="9:73"><call pos:start="9:34" pos:end="9:73"><name pos:start="9:34" pos:end="9:37">clip</name><argument_list pos:start="9:38" pos:end="9:73">( <argument pos:start="9:40" pos:end="9:64"><expr pos:start="9:40" pos:end="9:64"><name pos:start="9:40" pos:end="9:41">qp</name> <operator pos:start="9:43" pos:end="9:43">+</operator> <name pos:start="9:45" pos:end="9:64"><name pos:start="9:45" pos:end="9:45">h</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:64">slice_beta_offset</name></name></expr></argument>, <argument pos:start="9:67" pos:end="9:67"><expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">0</literal></expr></argument>, <argument pos:start="9:70" pos:end="9:71"><expr pos:start="9:70" pos:end="9:71"><literal type="number" pos:start="9:70" pos:end="9:71">51</literal></expr></argument> )</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:22">pix_next</name>  <init pos:start="11:25" pos:end="11:32">= <expr pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:32">stride</name></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="149:5">for<control pos:start="15:8" pos:end="15:28">( <init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:21"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">4</literal></expr>;</condition> <incr pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:24">i</name><operator pos:start="15:25" pos:end="15:26">++</operator></expr></incr> )</control> <block pos:start="15:30" pos:end="149:5">{<block_content pos:start="17:9" pos:end="147:9">

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if<condition pos:start="17:11" pos:end="17:24">( <expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:14">bS</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name> <operator pos:start="17:19" pos:end="17:20">==</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr> )</condition> <block pos:start="17:26" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:21">

            <expr_stmt pos:start="19:13" pos:end="19:21"><expr pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">pix</name> <operator pos:start="19:17" pos:end="19:18">+=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">4</literal></expr>;</expr_stmt>

            <continue pos:start="21:13" pos:end="21:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:29">/* 4px edge length */</comment>

        <for pos:start="29:9" pos:end="147:9">for<control pos:start="29:12" pos:end="29:32">( <init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">d</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">d</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">4</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">d</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr> )</control> <block pos:start="29:34" pos:end="147:9">{<block_content pos:start="31:13" pos:end="145:18">

            <decl_stmt pos:start="31:13" pos:end="31:48"><decl pos:start="31:13" pos:end="31:47"><type pos:start="31:13" pos:end="31:25"><specifier pos:start="31:13" pos:end="31:17">const</specifier> <name pos:start="31:19" pos:end="31:25">uint8_t</name></type> <name pos:start="31:27" pos:end="31:28">p0</name> <init pos:start="31:30" pos:end="31:47">= <expr pos:start="31:32" pos:end="31:47"><name pos:start="31:32" pos:end="31:47"><name pos:start="31:32" pos:end="31:34">pix</name><index pos:start="31:35" pos:end="31:47">[<expr pos:start="31:36" pos:end="31:46"><operator pos:start="31:36" pos:end="31:36">-</operator><literal type="number" pos:start="31:37" pos:end="31:37">1</literal><operator pos:start="31:38" pos:end="31:38">*</operator><name pos:start="31:39" pos:end="31:46">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:48"><decl pos:start="33:13" pos:end="33:47"><type pos:start="33:13" pos:end="33:25"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:25">uint8_t</name></type> <name pos:start="33:27" pos:end="33:28">p1</name> <init pos:start="33:30" pos:end="33:47">= <expr pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:34">pix</name><index pos:start="33:35" pos:end="33:47">[<expr pos:start="33:36" pos:end="33:46"><operator pos:start="33:36" pos:end="33:36">-</operator><literal type="number" pos:start="33:37" pos:end="33:37">2</literal><operator pos:start="33:38" pos:end="33:38">*</operator><name pos:start="33:39" pos:end="33:46">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:48"><decl pos:start="35:13" pos:end="35:47"><type pos:start="35:13" pos:end="35:25"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:25">uint8_t</name></type> <name pos:start="35:27" pos:end="35:28">p2</name> <init pos:start="35:30" pos:end="35:47">= <expr pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:34">pix</name><index pos:start="35:35" pos:end="35:47">[<expr pos:start="35:36" pos:end="35:46"><operator pos:start="35:36" pos:end="35:36">-</operator><literal type="number" pos:start="35:37" pos:end="35:37">3</literal><operator pos:start="35:38" pos:end="35:38">*</operator><name pos:start="35:39" pos:end="35:46">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:38"><decl pos:start="37:13" pos:end="37:37"><type pos:start="37:13" pos:end="37:25"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:25">uint8_t</name></type> <name pos:start="37:27" pos:end="37:28">q0</name> <init pos:start="37:30" pos:end="37:37">= <expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:34">pix</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:47"><decl pos:start="39:13" pos:end="39:46"><type pos:start="39:13" pos:end="39:25"><specifier pos:start="39:13" pos:end="39:17">const</specifier> <name pos:start="39:19" pos:end="39:25">uint8_t</name></type> <name pos:start="39:27" pos:end="39:28">q1</name> <init pos:start="39:30" pos:end="39:46">= <expr pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:34">pix</name><index pos:start="39:35" pos:end="39:46">[<expr pos:start="39:36" pos:end="39:45"><literal type="number" pos:start="39:36" pos:end="39:36">1</literal><operator pos:start="39:37" pos:end="39:37">*</operator><name pos:start="39:38" pos:end="39:45">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:47"><decl pos:start="41:13" pos:end="41:46"><type pos:start="41:13" pos:end="41:25"><specifier pos:start="41:13" pos:end="41:17">const</specifier> <name pos:start="41:19" pos:end="41:25">uint8_t</name></type> <name pos:start="41:27" pos:end="41:28">q2</name> <init pos:start="41:30" pos:end="41:46">= <expr pos:start="41:32" pos:end="41:46"><name pos:start="41:32" pos:end="41:46"><name pos:start="41:32" pos:end="41:34">pix</name><index pos:start="41:35" pos:end="41:46">[<expr pos:start="41:36" pos:end="41:45"><literal type="number" pos:start="41:36" pos:end="41:36">2</literal><operator pos:start="41:37" pos:end="41:37">*</operator><name pos:start="41:38" pos:end="41:45">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="55:13"><if pos:start="45:13" pos:end="55:13">if<condition pos:start="45:15" pos:end="49:40">( <expr pos:start="45:17" pos:end="49:38"><call pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:19">abs</name><argument_list pos:start="45:20" pos:end="45:30">( <argument pos:start="45:22" pos:end="45:28"><expr pos:start="45:22" pos:end="45:28"><name pos:start="45:22" pos:end="45:23">p0</name> <operator pos:start="45:25" pos:end="45:25">-</operator> <name pos:start="45:27" pos:end="45:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="45:32" pos:end="45:33">&gt;=</operator> <name pos:start="45:35" pos:end="45:39">alpha</name> <operator pos:start="45:41" pos:end="45:42">||</operator>

                <call pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">abs</name><argument_list pos:start="47:20" pos:end="47:30">( <argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:23">p1</name> <operator pos:start="47:25" pos:end="47:25">-</operator> <name pos:start="47:27" pos:end="47:28">p0</name></expr></argument> )</argument_list></call> <operator pos:start="47:32" pos:end="47:33">&gt;=</operator> <name pos:start="47:35" pos:end="47:38">beta</name> <operator pos:start="47:40" pos:end="47:41">||</operator>

                <call pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:19">abs</name><argument_list pos:start="49:20" pos:end="49:30">( <argument pos:start="49:22" pos:end="49:28"><expr pos:start="49:22" pos:end="49:28"><name pos:start="49:22" pos:end="49:23">q1</name> <operator pos:start="49:25" pos:end="49:25">-</operator> <name pos:start="49:27" pos:end="49:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="49:32" pos:end="49:33">&gt;=</operator> <name pos:start="49:35" pos:end="49:38">beta</name></expr> )</condition> <block pos:start="49:42" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:25">

                <expr_stmt pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:19">pix</name><operator pos:start="51:20" pos:end="51:21">++</operator></expr>;</expr_stmt>

                <continue pos:start="53:17" pos:end="53:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="143:13"><if pos:start="59:13" pos:end="93:13">if<condition pos:start="59:15" pos:end="59:27">( <expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:18">bS</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">i</name></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:25">4</literal></expr> )</condition> <block pos:start="59:29" pos:end="93:13">{<block_content pos:start="61:17" pos:end="91:62">

                <decl_stmt pos:start="61:17" pos:end="61:62"><decl pos:start="61:17" pos:end="61:61"><type pos:start="61:17" pos:end="61:25"><specifier pos:start="61:17" pos:end="61:21">const</specifier> <name pos:start="61:23" pos:end="61:25">int</name></type> <name pos:start="61:27" pos:end="61:29">tc0</name> <init pos:start="61:31" pos:end="61:61">= <expr pos:start="61:33" pos:end="61:61"><name pos:start="61:33" pos:end="61:61"><name pos:start="61:33" pos:end="61:41">tc0_table</name><index pos:start="61:42" pos:end="61:50">[<expr pos:start="61:43" pos:end="61:49"><name pos:start="61:43" pos:end="61:49">index_a</name></expr>]</index><index pos:start="61:51" pos:end="61:61">[<expr pos:start="61:52" pos:end="61:60"><name pos:start="61:52" pos:end="61:56"><name pos:start="61:52" pos:end="61:53">bS</name><index pos:start="61:54" pos:end="61:56">[<expr pos:start="61:55" pos:end="61:55"><name pos:start="61:55" pos:end="61:55">i</name></expr>]</index></name> <operator pos:start="61:58" pos:end="61:58">-</operator> <literal type="number" pos:start="61:60" pos:end="61:60">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="63:17" pos:end="63:29"><decl pos:start="63:17" pos:end="63:28"><type pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:19">int</name></type> <name pos:start="63:21" pos:end="63:22">tc</name> <init pos:start="63:24" pos:end="63:28">= <expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:28">tc0</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:28"><decl pos:start="65:17" pos:end="65:27"><type pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">int</name></type> <name pos:start="65:21" pos:end="65:27">i_delta</name></decl>;</decl_stmt>



                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if<condition pos:start="69:19" pos:end="69:43">( <expr pos:start="69:21" pos:end="69:41"><call pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:23">abs</name><argument_list pos:start="69:24" pos:end="69:34">( <argument pos:start="69:26" pos:end="69:32"><expr pos:start="69:26" pos:end="69:32"><name pos:start="69:26" pos:end="69:27">p2</name> <operator pos:start="69:29" pos:end="69:29">-</operator> <name pos:start="69:31" pos:end="69:32">p0</name></expr></argument> )</argument_list></call> <operator pos:start="69:36" pos:end="69:36">&lt;</operator> <name pos:start="69:38" pos:end="69:41">beta</name></expr> )</condition> <block pos:start="69:45" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:25">

                    <expr_stmt pos:start="71:21" pos:end="71:116"><expr pos:start="71:21" pos:end="71:115"><name pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:23">pix</name><index pos:start="71:24" pos:end="71:36">[<expr pos:start="71:25" pos:end="71:35"><operator pos:start="71:25" pos:end="71:25">-</operator><literal type="number" pos:start="71:26" pos:end="71:26">2</literal><operator pos:start="71:27" pos:end="71:27">*</operator><name pos:start="71:28" pos:end="71:35">pix_next</name></expr>]</index></name> <operator pos:start="71:38" pos:end="71:38">=</operator> <name pos:start="71:40" pos:end="71:41">p1</name> <operator pos:start="71:43" pos:end="71:43">+</operator> <call pos:start="71:45" pos:end="71:115"><name pos:start="71:45" pos:end="71:48">clip</name><argument_list pos:start="71:49" pos:end="71:115">( <argument pos:start="71:51" pos:end="71:102"><expr pos:start="71:51" pos:end="71:102"><operator pos:start="71:51" pos:end="71:51">(</operator> <name pos:start="71:53" pos:end="71:54">p2</name> <operator pos:start="71:56" pos:end="71:56">+</operator> <operator pos:start="71:58" pos:end="71:58">(</operator> <operator pos:start="71:60" pos:end="71:60">(</operator> <name pos:start="71:62" pos:end="71:63">p0</name> <operator pos:start="71:65" pos:end="71:65">+</operator> <name pos:start="71:67" pos:end="71:68">q0</name> <operator pos:start="71:70" pos:end="71:70">+</operator> <literal type="number" pos:start="71:72" pos:end="71:72">1</literal> <operator pos:start="71:74" pos:end="71:74">)</operator> <operator pos:start="71:76" pos:end="71:77">&gt;&gt;</operator> <literal type="number" pos:start="71:79" pos:end="71:79">1</literal> <operator pos:start="71:81" pos:end="71:81">)</operator> <operator pos:start="71:83" pos:end="71:83">-</operator> <operator pos:start="71:85" pos:end="71:85">(</operator> <name pos:start="71:87" pos:end="71:88">p1</name> <operator pos:start="71:90" pos:end="71:91">&lt;&lt;</operator> <literal type="number" pos:start="71:93" pos:end="71:93">1</literal> <operator pos:start="71:95" pos:end="71:95">)</operator> <operator pos:start="71:97" pos:end="71:97">)</operator> <operator pos:start="71:99" pos:end="71:100">&gt;&gt;</operator> <literal type="number" pos:start="71:102" pos:end="71:102">1</literal></expr></argument>, <argument pos:start="71:105" pos:end="71:108"><expr pos:start="71:105" pos:end="71:108"><operator pos:start="71:105" pos:end="71:105">-</operator><name pos:start="71:106" pos:end="71:108">tc0</name></expr></argument>, <argument pos:start="71:111" pos:end="71:113"><expr pos:start="71:111" pos:end="71:113"><name pos:start="71:111" pos:end="71:113">tc0</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:25"><expr pos:start="73:21" pos:end="73:24"><name pos:start="73:21" pos:end="73:22">tc</name><operator pos:start="73:23" pos:end="73:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="77:17" pos:end="83:17"><if pos:start="77:17" pos:end="83:17">if<condition pos:start="77:19" pos:end="77:43">( <expr pos:start="77:21" pos:end="77:41"><call pos:start="77:21" pos:end="77:34"><name pos:start="77:21" pos:end="77:23">abs</name><argument_list pos:start="77:24" pos:end="77:34">( <argument pos:start="77:26" pos:end="77:32"><expr pos:start="77:26" pos:end="77:32"><name pos:start="77:26" pos:end="77:27">q2</name> <operator pos:start="77:29" pos:end="77:29">-</operator> <name pos:start="77:31" pos:end="77:32">q0</name></expr></argument> )</argument_list></call> <operator pos:start="77:36" pos:end="77:36">&lt;</operator> <name pos:start="77:38" pos:end="77:41">beta</name></expr> )</condition> <block pos:start="77:45" pos:end="83:17">{<block_content pos:start="79:21" pos:end="81:25">

                    <expr_stmt pos:start="79:21" pos:end="79:113"><expr pos:start="79:21" pos:end="79:112"><name pos:start="79:21" pos:end="79:33"><name pos:start="79:21" pos:end="79:23">pix</name><index pos:start="79:24" pos:end="79:33">[<expr pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:32">pix_next</name></expr>]</index></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:38">q1</name> <operator pos:start="79:40" pos:end="79:40">+</operator> <call pos:start="79:42" pos:end="79:112"><name pos:start="79:42" pos:end="79:45">clip</name><argument_list pos:start="79:46" pos:end="79:112">( <argument pos:start="79:48" pos:end="79:99"><expr pos:start="79:48" pos:end="79:99"><operator pos:start="79:48" pos:end="79:48">(</operator> <name pos:start="79:50" pos:end="79:51">q2</name> <operator pos:start="79:53" pos:end="79:53">+</operator> <operator pos:start="79:55" pos:end="79:55">(</operator> <operator pos:start="79:57" pos:end="79:57">(</operator> <name pos:start="79:59" pos:end="79:60">p0</name> <operator pos:start="79:62" pos:end="79:62">+</operator> <name pos:start="79:64" pos:end="79:65">q0</name> <operator pos:start="79:67" pos:end="79:67">+</operator> <literal type="number" pos:start="79:69" pos:end="79:69">1</literal> <operator pos:start="79:71" pos:end="79:71">)</operator> <operator pos:start="79:73" pos:end="79:74">&gt;&gt;</operator> <literal type="number" pos:start="79:76" pos:end="79:76">1</literal> <operator pos:start="79:78" pos:end="79:78">)</operator> <operator pos:start="79:80" pos:end="79:80">-</operator> <operator pos:start="79:82" pos:end="79:82">(</operator> <name pos:start="79:84" pos:end="79:85">q1</name> <operator pos:start="79:87" pos:end="79:88">&lt;&lt;</operator> <literal type="number" pos:start="79:90" pos:end="79:90">1</literal> <operator pos:start="79:92" pos:end="79:92">)</operator> <operator pos:start="79:94" pos:end="79:94">)</operator> <operator pos:start="79:96" pos:end="79:97">&gt;&gt;</operator> <literal type="number" pos:start="79:99" pos:end="79:99">1</literal></expr></argument>, <argument pos:start="79:102" pos:end="79:105"><expr pos:start="79:102" pos:end="79:105"><operator pos:start="79:102" pos:end="79:102">-</operator><name pos:start="79:103" pos:end="79:105">tc0</name></expr></argument>, <argument pos:start="79:108" pos:end="79:110"><expr pos:start="79:108" pos:end="79:110"><name pos:start="79:108" pos:end="79:110">tc0</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:25"><expr pos:start="81:21" pos:end="81:24"><name pos:start="81:21" pos:end="81:22">tc</name><operator pos:start="81:23" pos:end="81:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:84"><expr pos:start="87:17" pos:end="87:83"><name pos:start="87:17" pos:end="87:23">i_delta</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:83"><name pos:start="87:27" pos:end="87:30">clip</name><argument_list pos:start="87:31" pos:end="87:83">( <argument pos:start="87:33" pos:end="87:72"><expr pos:start="87:33" pos:end="87:72"><operator pos:start="87:33" pos:end="87:33">(</operator><operator pos:start="87:34" pos:end="87:34">(</operator><operator pos:start="87:35" pos:end="87:35">(</operator><name pos:start="87:36" pos:end="87:37">q0</name> <operator pos:start="87:39" pos:end="87:39">-</operator> <name pos:start="87:41" pos:end="87:42">p0</name> <operator pos:start="87:44" pos:end="87:44">)</operator> <operator pos:start="87:46" pos:end="87:47">&lt;&lt;</operator> <literal type="number" pos:start="87:49" pos:end="87:49">2</literal><operator pos:start="87:50" pos:end="87:50">)</operator> <operator pos:start="87:52" pos:end="87:52">+</operator> <operator pos:start="87:54" pos:end="87:54">(</operator><name pos:start="87:55" pos:end="87:56">p1</name> <operator pos:start="87:58" pos:end="87:58">-</operator> <name pos:start="87:60" pos:end="87:61">q1</name><operator pos:start="87:62" pos:end="87:62">)</operator> <operator pos:start="87:64" pos:end="87:64">+</operator> <literal type="number" pos:start="87:66" pos:end="87:66">4</literal><operator pos:start="87:67" pos:end="87:67">)</operator> <operator pos:start="87:69" pos:end="87:70">&gt;&gt;</operator> <literal type="number" pos:start="87:72" pos:end="87:72">3</literal></expr></argument>, <argument pos:start="87:75" pos:end="87:77"><expr pos:start="87:75" pos:end="87:77"><operator pos:start="87:75" pos:end="87:75">-</operator><name pos:start="87:76" pos:end="87:77">tc</name></expr></argument>, <argument pos:start="87:80" pos:end="87:81"><expr pos:start="87:80" pos:end="87:81"><name pos:start="87:80" pos:end="87:81">tc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:62"><expr pos:start="89:17" pos:end="89:61"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:19">pix</name><index pos:start="89:20" pos:end="89:30">[<expr pos:start="89:21" pos:end="89:29"><operator pos:start="89:21" pos:end="89:21">-</operator><name pos:start="89:22" pos:end="89:29">pix_next</name></expr>]</index></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <call pos:start="89:34" pos:end="89:61"><name pos:start="89:34" pos:end="89:37">clip</name><argument_list pos:start="89:38" pos:end="89:61">( <argument pos:start="89:40" pos:end="89:51"><expr pos:start="89:40" pos:end="89:51"><name pos:start="89:40" pos:end="89:41">p0</name> <operator pos:start="89:43" pos:end="89:43">+</operator> <name pos:start="89:45" pos:end="89:51">i_delta</name></expr></argument>, <argument pos:start="89:54" pos:end="89:54"><expr pos:start="89:54" pos:end="89:54"><literal type="number" pos:start="89:54" pos:end="89:54">0</literal></expr></argument>, <argument pos:start="89:57" pos:end="89:59"><expr pos:start="89:57" pos:end="89:59"><literal type="number" pos:start="89:57" pos:end="89:59">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="89:67" pos:end="89:75">/* p0' */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:62"><expr pos:start="91:17" pos:end="91:61"><name pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:19">pix</name><index pos:start="91:20" pos:end="91:22">[<expr pos:start="91:21" pos:end="91:21"><literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>]</index></name>         <operator pos:start="91:32" pos:end="91:32">=</operator> <call pos:start="91:34" pos:end="91:61"><name pos:start="91:34" pos:end="91:37">clip</name><argument_list pos:start="91:38" pos:end="91:61">( <argument pos:start="91:40" pos:end="91:51"><expr pos:start="91:40" pos:end="91:51"><name pos:start="91:40" pos:end="91:41">q0</name> <operator pos:start="91:43" pos:end="91:43">-</operator> <name pos:start="91:45" pos:end="91:51">i_delta</name></expr></argument>, <argument pos:start="91:54" pos:end="91:54"><expr pos:start="91:54" pos:end="91:54"><literal type="number" pos:start="91:54" pos:end="91:54">0</literal></expr></argument>, <argument pos:start="91:57" pos:end="91:59"><expr pos:start="91:57" pos:end="91:59"><literal type="number" pos:start="91:57" pos:end="91:59">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="91:67" pos:end="91:75">/* q0' */</comment>

            </block_content>}</block></if>

            <else pos:start="95:13" pos:end="143:13">else

            <block pos:start="97:13" pos:end="143:13">{<block_content pos:start="99:17" pos:end="141:17">

                <decl_stmt pos:start="99:17" pos:end="99:52"><decl pos:start="99:17" pos:end="99:51"><type pos:start="99:17" pos:end="99:29"><specifier pos:start="99:17" pos:end="99:21">const</specifier> <name pos:start="99:23" pos:end="99:29">uint8_t</name></type> <name pos:start="99:31" pos:end="99:32">p3</name> <init pos:start="99:34" pos:end="99:51">= <expr pos:start="99:36" pos:end="99:51"><name pos:start="99:36" pos:end="99:51"><name pos:start="99:36" pos:end="99:38">pix</name><index pos:start="99:39" pos:end="99:51">[<expr pos:start="99:40" pos:end="99:50"><operator pos:start="99:40" pos:end="99:40">-</operator><literal type="number" pos:start="99:41" pos:end="99:41">4</literal><operator pos:start="99:42" pos:end="99:42">*</operator><name pos:start="99:43" pos:end="99:50">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="101:17" pos:end="101:52"><decl pos:start="101:17" pos:end="101:51"><type pos:start="101:17" pos:end="101:29"><specifier pos:start="101:17" pos:end="101:21">const</specifier> <name pos:start="101:23" pos:end="101:29">uint8_t</name></type> <name pos:start="101:31" pos:end="101:32">q3</name> <init pos:start="101:34" pos:end="101:51">= <expr pos:start="101:36" pos:end="101:51"><name pos:start="101:36" pos:end="101:51"><name pos:start="101:36" pos:end="101:38">pix</name><index pos:start="101:39" pos:end="101:51">[ <expr pos:start="101:41" pos:end="101:50"><literal type="number" pos:start="101:41" pos:end="101:41">3</literal><operator pos:start="101:42" pos:end="101:42">*</operator><name pos:start="101:43" pos:end="101:50">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="103:17" pos:end="103:70"><decl pos:start="103:17" pos:end="103:69"><type pos:start="103:17" pos:end="103:25"><specifier pos:start="103:17" pos:end="103:21">const</specifier> <name pos:start="103:23" pos:end="103:25">int</name></type> <name pos:start="103:27" pos:end="103:27">c</name>  <init pos:start="103:30" pos:end="103:69">= <expr pos:start="103:32" pos:end="103:69"><call pos:start="103:32" pos:end="103:45"><name pos:start="103:32" pos:end="103:34">abs</name><argument_list pos:start="103:35" pos:end="103:45">( <argument pos:start="103:37" pos:end="103:43"><expr pos:start="103:37" pos:end="103:43"><name pos:start="103:37" pos:end="103:38">p0</name> <operator pos:start="103:40" pos:end="103:40">-</operator> <name pos:start="103:42" pos:end="103:43">q0</name></expr></argument> )</argument_list></call> <operator pos:start="103:47" pos:end="103:47">&lt;</operator> <operator pos:start="103:49" pos:end="103:49">(</operator><operator pos:start="103:50" pos:end="103:50">(</operator> <name pos:start="103:52" pos:end="103:56">alpha</name> <operator pos:start="103:58" pos:end="103:59">&gt;&gt;</operator> <literal type="number" pos:start="103:61" pos:end="103:61">2</literal> <operator pos:start="103:63" pos:end="103:63">)</operator> <operator pos:start="103:65" pos:end="103:65">+</operator> <literal type="number" pos:start="103:67" pos:end="103:67">2</literal> <operator pos:start="103:69" pos:end="103:69">)</operator></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="107:17" pos:end="123:17"><if pos:start="107:17" pos:end="117:17">if<condition pos:start="107:19" pos:end="107:48">( <expr pos:start="107:21" pos:end="107:46"><call pos:start="107:21" pos:end="107:34"><name pos:start="107:21" pos:end="107:23">abs</name><argument_list pos:start="107:24" pos:end="107:34">( <argument pos:start="107:26" pos:end="107:32"><expr pos:start="107:26" pos:end="107:32"><name pos:start="107:26" pos:end="107:27">p2</name> <operator pos:start="107:29" pos:end="107:29">-</operator> <name pos:start="107:31" pos:end="107:32">p0</name></expr></argument> )</argument_list></call> <operator pos:start="107:36" pos:end="107:36">&lt;</operator> <name pos:start="107:38" pos:end="107:41">beta</name> <operator pos:start="107:43" pos:end="107:44">&amp;&amp;</operator> <name pos:start="107:46" pos:end="107:46">c</name></expr> )</condition> <block pos:start="107:50" pos:end="117:17">{<block_content pos:start="111:21" pos:end="115:79">

                    <comment type="block" pos:start="109:21" pos:end="109:39">/* p0', p1', p2' */</comment>

                    <expr_stmt pos:start="111:21" pos:end="111:81"><expr pos:start="111:21" pos:end="111:80"><name pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:23">pix</name><index pos:start="111:24" pos:end="111:36">[<expr pos:start="111:25" pos:end="111:35"><operator pos:start="111:25" pos:end="111:25">-</operator><literal type="number" pos:start="111:26" pos:end="111:26">1</literal><operator pos:start="111:27" pos:end="111:27">*</operator><name pos:start="111:28" pos:end="111:35">pix_next</name></expr>]</index></name> <operator pos:start="111:38" pos:end="111:38">=</operator> <operator pos:start="111:40" pos:end="111:40">(</operator> <name pos:start="111:42" pos:end="111:43">p2</name> <operator pos:start="111:45" pos:end="111:45">+</operator> <literal type="number" pos:start="111:47" pos:end="111:47">2</literal><operator pos:start="111:48" pos:end="111:48">*</operator><name pos:start="111:49" pos:end="111:50">p1</name> <operator pos:start="111:52" pos:end="111:52">+</operator> <literal type="number" pos:start="111:54" pos:end="111:54">2</literal><operator pos:start="111:55" pos:end="111:55">*</operator><name pos:start="111:56" pos:end="111:57">p0</name> <operator pos:start="111:59" pos:end="111:59">+</operator> <literal type="number" pos:start="111:61" pos:end="111:61">2</literal><operator pos:start="111:62" pos:end="111:62">*</operator><name pos:start="111:63" pos:end="111:64">q0</name> <operator pos:start="111:66" pos:end="111:66">+</operator> <name pos:start="111:68" pos:end="111:69">q1</name> <operator pos:start="111:71" pos:end="111:71">+</operator> <literal type="number" pos:start="111:73" pos:end="111:73">4</literal> <operator pos:start="111:75" pos:end="111:75">)</operator> <operator pos:start="111:77" pos:end="111:78">&gt;&gt;</operator> <literal type="number" pos:start="111:80" pos:end="111:80">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:70"><expr pos:start="113:21" pos:end="113:69"><name pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:23">pix</name><index pos:start="113:24" pos:end="113:36">[<expr pos:start="113:25" pos:end="113:35"><operator pos:start="113:25" pos:end="113:25">-</operator><literal type="number" pos:start="113:26" pos:end="113:26">2</literal><operator pos:start="113:27" pos:end="113:27">*</operator><name pos:start="113:28" pos:end="113:35">pix_next</name></expr>]</index></name> <operator pos:start="113:38" pos:end="113:38">=</operator> <operator pos:start="113:40" pos:end="113:40">(</operator> <name pos:start="113:42" pos:end="113:43">p2</name> <operator pos:start="113:45" pos:end="113:45">+</operator> <name pos:start="113:47" pos:end="113:48">p1</name> <operator pos:start="113:50" pos:end="113:50">+</operator> <name pos:start="113:52" pos:end="113:53">p0</name> <operator pos:start="113:55" pos:end="113:55">+</operator> <name pos:start="113:57" pos:end="113:58">q0</name> <operator pos:start="113:60" pos:end="113:60">+</operator> <literal type="number" pos:start="113:62" pos:end="113:62">2</literal> <operator pos:start="113:64" pos:end="113:64">)</operator> <operator pos:start="113:66" pos:end="113:67">&gt;&gt;</operator> <literal type="number" pos:start="113:69" pos:end="113:69">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:79"><expr pos:start="115:21" pos:end="115:78"><name pos:start="115:21" pos:end="115:36"><name pos:start="115:21" pos:end="115:23">pix</name><index pos:start="115:24" pos:end="115:36">[<expr pos:start="115:25" pos:end="115:35"><operator pos:start="115:25" pos:end="115:25">-</operator><literal type="number" pos:start="115:26" pos:end="115:26">3</literal><operator pos:start="115:27" pos:end="115:27">*</operator><name pos:start="115:28" pos:end="115:35">pix_next</name></expr>]</index></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <operator pos:start="115:40" pos:end="115:40">(</operator> <literal type="number" pos:start="115:42" pos:end="115:42">2</literal><operator pos:start="115:43" pos:end="115:43">*</operator><name pos:start="115:44" pos:end="115:45">p3</name> <operator pos:start="115:47" pos:end="115:47">+</operator> <literal type="number" pos:start="115:49" pos:end="115:49">3</literal><operator pos:start="115:50" pos:end="115:50">*</operator><name pos:start="115:51" pos:end="115:52">p2</name> <operator pos:start="115:54" pos:end="115:54">+</operator> <name pos:start="115:56" pos:end="115:57">p1</name> <operator pos:start="115:59" pos:end="115:59">+</operator> <name pos:start="115:61" pos:end="115:62">p0</name> <operator pos:start="115:64" pos:end="115:64">+</operator> <name pos:start="115:66" pos:end="115:67">q0</name> <operator pos:start="115:69" pos:end="115:69">+</operator> <literal type="number" pos:start="115:71" pos:end="115:71">4</literal> <operator pos:start="115:73" pos:end="115:73">)</operator> <operator pos:start="115:75" pos:end="115:76">&gt;&gt;</operator> <literal type="number" pos:start="115:78" pos:end="115:78">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="117:19" pos:end="123:17">else <block pos:start="117:24" pos:end="123:17">{<block_content pos:start="121:21" pos:end="121:67">

                    <comment type="block" pos:start="119:21" pos:end="119:29">/* p0' */</comment>

                    <expr_stmt pos:start="121:21" pos:end="121:67"><expr pos:start="121:21" pos:end="121:66"><name pos:start="121:21" pos:end="121:36"><name pos:start="121:21" pos:end="121:23">pix</name><index pos:start="121:24" pos:end="121:36">[<expr pos:start="121:25" pos:end="121:35"><operator pos:start="121:25" pos:end="121:25">-</operator><literal type="number" pos:start="121:26" pos:end="121:26">1</literal><operator pos:start="121:27" pos:end="121:27">*</operator><name pos:start="121:28" pos:end="121:35">pix_next</name></expr>]</index></name> <operator pos:start="121:38" pos:end="121:38">=</operator> <operator pos:start="121:40" pos:end="121:40">(</operator> <literal type="number" pos:start="121:42" pos:end="121:42">2</literal><operator pos:start="121:43" pos:end="121:43">*</operator><name pos:start="121:44" pos:end="121:45">p1</name> <operator pos:start="121:47" pos:end="121:47">+</operator> <name pos:start="121:49" pos:end="121:50">p0</name> <operator pos:start="121:52" pos:end="121:52">+</operator> <name pos:start="121:54" pos:end="121:55">q1</name> <operator pos:start="121:57" pos:end="121:57">+</operator> <literal type="number" pos:start="121:59" pos:end="121:59">2</literal> <operator pos:start="121:61" pos:end="121:61">)</operator> <operator pos:start="121:63" pos:end="121:64">&gt;&gt;</operator> <literal type="number" pos:start="121:66" pos:end="121:66">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="125:17" pos:end="141:17"><if pos:start="125:17" pos:end="135:17">if<condition pos:start="125:19" pos:end="125:48">( <expr pos:start="125:21" pos:end="125:46"><call pos:start="125:21" pos:end="125:34"><name pos:start="125:21" pos:end="125:23">abs</name><argument_list pos:start="125:24" pos:end="125:34">( <argument pos:start="125:26" pos:end="125:32"><expr pos:start="125:26" pos:end="125:32"><name pos:start="125:26" pos:end="125:27">q2</name> <operator pos:start="125:29" pos:end="125:29">-</operator> <name pos:start="125:31" pos:end="125:32">q0</name></expr></argument> )</argument_list></call> <operator pos:start="125:36" pos:end="125:36">&lt;</operator> <name pos:start="125:38" pos:end="125:41">beta</name> <operator pos:start="125:43" pos:end="125:44">&amp;&amp;</operator> <name pos:start="125:46" pos:end="125:46">c</name></expr> )</condition> <block pos:start="125:50" pos:end="135:17">{<block_content pos:start="129:21" pos:end="133:78">

                    <comment type="block" pos:start="127:21" pos:end="127:39">/* q0', q1', q2' */</comment>

                    <expr_stmt pos:start="129:21" pos:end="129:80"><expr pos:start="129:21" pos:end="129:79"><name pos:start="129:21" pos:end="129:35"><name pos:start="129:21" pos:end="129:23">pix</name><index pos:start="129:24" pos:end="129:35">[<expr pos:start="129:25" pos:end="129:34"><literal type="number" pos:start="129:25" pos:end="129:25">0</literal><operator pos:start="129:26" pos:end="129:26">*</operator><name pos:start="129:27" pos:end="129:34">pix_next</name></expr>]</index></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <operator pos:start="129:39" pos:end="129:39">(</operator> <name pos:start="129:41" pos:end="129:42">p1</name> <operator pos:start="129:44" pos:end="129:44">+</operator> <literal type="number" pos:start="129:46" pos:end="129:46">2</literal><operator pos:start="129:47" pos:end="129:47">*</operator><name pos:start="129:48" pos:end="129:49">p0</name> <operator pos:start="129:51" pos:end="129:51">+</operator> <literal type="number" pos:start="129:53" pos:end="129:53">2</literal><operator pos:start="129:54" pos:end="129:54">*</operator><name pos:start="129:55" pos:end="129:56">q0</name> <operator pos:start="129:58" pos:end="129:58">+</operator> <literal type="number" pos:start="129:60" pos:end="129:60">2</literal><operator pos:start="129:61" pos:end="129:61">*</operator><name pos:start="129:62" pos:end="129:63">q1</name> <operator pos:start="129:65" pos:end="129:65">+</operator> <name pos:start="129:67" pos:end="129:68">q2</name> <operator pos:start="129:70" pos:end="129:70">+</operator> <literal type="number" pos:start="129:72" pos:end="129:72">4</literal> <operator pos:start="129:74" pos:end="129:74">)</operator> <operator pos:start="129:76" pos:end="129:77">&gt;&gt;</operator> <literal type="number" pos:start="129:79" pos:end="129:79">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:69"><expr pos:start="131:21" pos:end="131:68"><name pos:start="131:21" pos:end="131:35"><name pos:start="131:21" pos:end="131:23">pix</name><index pos:start="131:24" pos:end="131:35">[<expr pos:start="131:25" pos:end="131:34"><literal type="number" pos:start="131:25" pos:end="131:25">1</literal><operator pos:start="131:26" pos:end="131:26">*</operator><name pos:start="131:27" pos:end="131:34">pix_next</name></expr>]</index></name> <operator pos:start="131:37" pos:end="131:37">=</operator> <operator pos:start="131:39" pos:end="131:39">(</operator> <name pos:start="131:41" pos:end="131:42">p0</name> <operator pos:start="131:44" pos:end="131:44">+</operator> <name pos:start="131:46" pos:end="131:47">q0</name> <operator pos:start="131:49" pos:end="131:49">+</operator> <name pos:start="131:51" pos:end="131:52">q1</name> <operator pos:start="131:54" pos:end="131:54">+</operator> <name pos:start="131:56" pos:end="131:57">q2</name> <operator pos:start="131:59" pos:end="131:59">+</operator> <literal type="number" pos:start="131:61" pos:end="131:61">2</literal> <operator pos:start="131:63" pos:end="131:63">)</operator> <operator pos:start="131:65" pos:end="131:66">&gt;&gt;</operator> <literal type="number" pos:start="131:68" pos:end="131:68">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:78"><expr pos:start="133:21" pos:end="133:77"><name pos:start="133:21" pos:end="133:35"><name pos:start="133:21" pos:end="133:23">pix</name><index pos:start="133:24" pos:end="133:35">[<expr pos:start="133:25" pos:end="133:34"><literal type="number" pos:start="133:25" pos:end="133:25">2</literal><operator pos:start="133:26" pos:end="133:26">*</operator><name pos:start="133:27" pos:end="133:34">pix_next</name></expr>]</index></name> <operator pos:start="133:37" pos:end="133:37">=</operator> <operator pos:start="133:39" pos:end="133:39">(</operator> <literal type="number" pos:start="133:41" pos:end="133:41">2</literal><operator pos:start="133:42" pos:end="133:42">*</operator><name pos:start="133:43" pos:end="133:44">q3</name> <operator pos:start="133:46" pos:end="133:46">+</operator> <literal type="number" pos:start="133:48" pos:end="133:48">3</literal><operator pos:start="133:49" pos:end="133:49">*</operator><name pos:start="133:50" pos:end="133:51">q2</name> <operator pos:start="133:53" pos:end="133:53">+</operator> <name pos:start="133:55" pos:end="133:56">q1</name> <operator pos:start="133:58" pos:end="133:58">+</operator> <name pos:start="133:60" pos:end="133:61">q0</name> <operator pos:start="133:63" pos:end="133:63">+</operator> <name pos:start="133:65" pos:end="133:66">p0</name> <operator pos:start="133:68" pos:end="133:68">+</operator> <literal type="number" pos:start="133:70" pos:end="133:70">4</literal> <operator pos:start="133:72" pos:end="133:72">)</operator> <operator pos:start="133:74" pos:end="133:75">&gt;&gt;</operator> <literal type="number" pos:start="133:77" pos:end="133:77">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="135:19" pos:end="141:17">else <block pos:start="135:24" pos:end="141:17">{<block_content pos:start="139:21" pos:end="139:66">

                    <comment type="block" pos:start="137:21" pos:end="137:29">/* q0' */</comment>

                    <expr_stmt pos:start="139:21" pos:end="139:66"><expr pos:start="139:21" pos:end="139:65"><name pos:start="139:21" pos:end="139:35"><name pos:start="139:21" pos:end="139:23">pix</name><index pos:start="139:24" pos:end="139:35">[<expr pos:start="139:25" pos:end="139:34"><literal type="number" pos:start="139:25" pos:end="139:25">0</literal><operator pos:start="139:26" pos:end="139:26">*</operator><name pos:start="139:27" pos:end="139:34">pix_next</name></expr>]</index></name> <operator pos:start="139:37" pos:end="139:37">=</operator> <operator pos:start="139:39" pos:end="139:39">(</operator> <literal type="number" pos:start="139:41" pos:end="139:41">2</literal><operator pos:start="139:42" pos:end="139:42">*</operator><name pos:start="139:43" pos:end="139:44">q1</name> <operator pos:start="139:46" pos:end="139:46">+</operator> <name pos:start="139:48" pos:end="139:49">q0</name> <operator pos:start="139:51" pos:end="139:51">+</operator> <name pos:start="139:53" pos:end="139:54">p1</name> <operator pos:start="139:56" pos:end="139:56">+</operator> <literal type="number" pos:start="139:58" pos:end="139:58">2</literal> <operator pos:start="139:60" pos:end="139:60">)</operator> <operator pos:start="139:62" pos:end="139:63">&gt;&gt;</operator> <literal type="number" pos:start="139:65" pos:end="139:65">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:18"><expr pos:start="145:13" pos:end="145:17"><name pos:start="145:13" pos:end="145:15">pix</name><operator pos:start="145:16" pos:end="145:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
