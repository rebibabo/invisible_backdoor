<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8583.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_syncpoint</name><parameter_list pos:start="1:28" pos:end="1:44">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">NUTContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">nut</name></decl></parameter>)</parameter_list><block pos:start="1:45" pos:end="65:1">{<block_content pos:start="3:5" pos:end="63:13">

    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:32"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">AVFormatContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:22">s</name><init pos:start="3:23" pos:end="3:32">= <expr pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:27">nut</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:32">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">bc</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AVRational</name></type> <name pos:start="13:16" pos:end="13:24">time_base</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:7">nut</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:27">last_syncpoint_pos</name></name><operator pos:start="17:28" pos:end="17:28">=</operator> <call pos:start="17:30" pos:end="17:42"><name pos:start="17:30" pos:end="17:38">url_ftell</name><argument_list pos:start="17:39" pos:end="17:42">(<argument pos:start="17:40" pos:end="17:41"><expr pos:start="17:40" pos:end="17:41"><name pos:start="17:40" pos:end="17:41">bc</name></expr></argument>)</argument_list></call><operator pos:start="17:43" pos:end="17:43">-</operator><literal type="number" pos:start="17:44" pos:end="17:44">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:7">end</name><operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:37"><name pos:start="21:10" pos:end="21:25">get_packetheader</name><argument_list pos:start="21:26" pos:end="21:37">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">nut</name></expr></argument>, <argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">bc</name></expr></argument>, <argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:7">end</name> <operator pos:start="23:9" pos:end="23:10">+=</operator> <call pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:20">url_ftell</name><argument_list pos:start="23:21" pos:end="23:24">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">bc</name></expr></argument>)</argument_list></call> <operator pos:start="23:26" pos:end="23:26">-</operator> <literal type="number" pos:start="23:28" pos:end="23:28">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:7">tmp</name><operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:14">get_v</name><argument_list pos:start="27:15" pos:end="27:18">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:14"><expr pos:start="29:5" pos:end="29:13"><call pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:9">get_v</name><argument_list pos:start="29:10" pos:end="29:13">(<argument pos:start="29:11" pos:end="29:12"><expr pos:start="29:11" pos:end="29:12"><name pos:start="29:11" pos:end="29:12">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:16" pos:end="29:31">//back_ptr_div16</comment>



    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:13">time_base</name><operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:57"><name pos:start="33:16" pos:end="33:18">nut</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:29">time_base</name><index pos:start="33:30" pos:end="33:57">[<expr pos:start="33:31" pos:end="33:56"><name pos:start="33:31" pos:end="33:33">tmp</name> <operator pos:start="33:35" pos:end="33:35">%</operator> <name pos:start="33:37" pos:end="33:56"><name pos:start="33:37" pos:end="33:39">nut</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:56">time_base_count</name></name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="49:5">for<control pos:start="35:8" pos:end="35:34">(<init pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">i</name><operator pos:start="35:10" pos:end="35:10">=</operator><literal type="number" pos:start="35:11" pos:end="35:11">0</literal></expr>;</init> <condition pos:start="35:14" pos:end="35:29"><expr pos:start="35:14" pos:end="35:28"><name pos:start="35:14" pos:end="35:14">i</name><operator pos:start="35:15" pos:end="35:15">&lt;</operator><name pos:start="35:16" pos:end="35:28"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:28">nb_streams</name></name></expr>;</condition> <incr pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:31">i</name><operator pos:start="35:32" pos:end="35:33">++</operator></expr></incr>)</control><block pos:start="35:35" pos:end="49:5">{<block_content pos:start="37:9" pos:end="45:27">

        <expr_stmt pos:start="37:9" pos:end="45:27"><expr pos:start="37:9" pos:end="45:26"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">nut</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">stream</name><index pos:start="37:20" pos:end="37:22">[<expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">i</name></expr>]</index></name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:31">last_pts</name><operator pos:start="37:32" pos:end="37:32">=</operator> <call pos:start="37:34" pos:end="45:26"><name pos:start="37:34" pos:end="37:47">av_rescale_rnd</name><argument_list pos:start="37:48" pos:end="45:26">(

            <argument pos:start="39:13" pos:end="39:38"><expr pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:15">tmp</name> <operator pos:start="39:17" pos:end="39:17">/</operator> <name pos:start="39:19" pos:end="39:38"><name pos:start="39:19" pos:end="39:21">nut</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:38">time_base_count</name></name></expr></argument>,

            <argument pos:start="41:13" pos:end="41:65"><expr pos:start="41:13" pos:end="41:65"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:21">time_base</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">num</name></name> <operator pos:start="41:27" pos:end="41:27">*</operator> <operator pos:start="41:29" pos:end="41:29">(</operator><name pos:start="41:30" pos:end="41:36">int64_t</name><operator pos:start="41:37" pos:end="41:37">)</operator><name pos:start="41:38" pos:end="41:51"><name pos:start="41:38" pos:end="41:40">nut</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:48">stream</name><index pos:start="41:49" pos:end="41:51">[<expr pos:start="41:50" pos:end="41:50"><name pos:start="41:50" pos:end="41:50">i</name></expr>]</index></name><operator pos:start="41:52" pos:end="41:52">.</operator><name pos:start="41:53" pos:end="41:65"><name pos:start="41:53" pos:end="41:61">time_base</name><operator pos:start="41:62" pos:end="41:62">.</operator><name pos:start="41:63" pos:end="41:65">den</name></name></expr></argument>,

            <argument pos:start="43:13" pos:end="43:65"><expr pos:start="43:13" pos:end="43:65"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:21">time_base</name><operator pos:start="43:22" pos:end="43:22">.</operator><name pos:start="43:23" pos:end="43:25">den</name></name> <operator pos:start="43:27" pos:end="43:27">*</operator> <operator pos:start="43:29" pos:end="43:29">(</operator><name pos:start="43:30" pos:end="43:36">int64_t</name><operator pos:start="43:37" pos:end="43:37">)</operator><name pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:40">nut</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:48">stream</name><index pos:start="43:49" pos:end="43:51">[<expr pos:start="43:50" pos:end="43:50"><name pos:start="43:50" pos:end="43:50">i</name></expr>]</index></name><operator pos:start="43:52" pos:end="43:52">.</operator><name pos:start="43:53" pos:end="43:65"><name pos:start="43:53" pos:end="43:61">time_base</name><operator pos:start="43:62" pos:end="43:62">.</operator><name pos:start="43:63" pos:end="43:65">num</name></name></expr></argument>,

            <argument pos:start="45:13" pos:end="45:25"><expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:25">AV_ROUND_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="47:9" pos:end="47:26">//last_key_frame ?</comment>

    </block_content>}</block></for>

    <comment type="line" pos:start="51:5" pos:end="51:42">//FIXME put this in a reset func maybe</comment>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if<condition pos:start="55:7" pos:end="55:52">(<expr pos:start="55:8" pos:end="55:51"><call pos:start="55:8" pos:end="55:29"><name pos:start="55:8" pos:end="55:20">skip_reserved</name><argument_list pos:start="55:21" pos:end="55:29">(<argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><name pos:start="55:22" pos:end="55:23">bc</name></expr></argument>, <argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">end</name></expr></argument>)</argument_list></call> <operator pos:start="55:31" pos:end="55:32">||</operator> <call pos:start="55:34" pos:end="55:51"><name pos:start="55:34" pos:end="55:47">check_checksum</name><argument_list pos:start="55:48" pos:end="55:51">(<argument pos:start="55:49" pos:end="55:50"><expr pos:start="55:49" pos:end="55:50"><name pos:start="55:49" pos:end="55:50">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="55:53" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:18">

        <expr_stmt pos:start="57:9" pos:end="57:66"><expr pos:start="57:9" pos:end="57:65"><call pos:start="57:9" pos:end="57:65"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:65">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:33" pos:end="57:64"><expr pos:start="57:33" pos:end="57:64"><literal type="string" pos:start="57:33" pos:end="57:64">"sync point checksum mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
