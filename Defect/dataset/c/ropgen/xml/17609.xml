<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17609.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">matroska_parse_rm_audio</name><parameter_list pos:start="1:35" pos:end="11:47">(<parameter pos:start="1:36" pos:end="1:65"><decl pos:start="1:36" pos:end="1:65"><type pos:start="1:36" pos:end="1:65"><name pos:start="1:36" pos:end="1:55">MatroskaDemuxContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">matroska</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:55"><decl pos:start="3:36" pos:end="3:55"><type pos:start="3:36" pos:end="3:55"><name pos:start="3:36" pos:end="3:48">MatroskaTrack</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:55">track</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:43">AVStream</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:47">st</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:48"><decl pos:start="7:36" pos:end="7:48"><type pos:start="7:36" pos:end="7:48"><name pos:start="7:36" pos:end="7:42">uint8_t</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:48">data</name></decl></parameter>, <parameter pos:start="7:51" pos:end="7:58"><decl pos:start="7:51" pos:end="7:58"><type pos:start="7:51" pos:end="7:58"><name pos:start="7:51" pos:end="7:53">int</name></type> <name pos:start="7:55" pos:end="7:58">size</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:52"><decl pos:start="9:36" pos:end="9:52"><type pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:43">uint64_t</name></type> <name pos:start="9:45" pos:end="9:52">timecode</name></decl></parameter>,

                                   <parameter pos:start="11:36" pos:end="11:46"><decl pos:start="11:36" pos:end="11:46"><type pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:42">int64_t</name></type> <name pos:start="11:44" pos:end="11:46">pos</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="137:1">{<block_content pos:start="15:5" pos:end="135:13">

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">a</name> <init pos:start="15:11" pos:end="15:34">= <expr pos:start="15:13" pos:end="15:34"><name pos:start="15:13" pos:end="15:34"><name pos:start="15:13" pos:end="15:14">st</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:21">codec</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:34">block_align</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">sps</name> <init pos:start="17:13" pos:end="17:42">= <expr pos:start="17:15" pos:end="17:42"><name pos:start="17:15" pos:end="17:42"><name pos:start="17:15" pos:end="17:19">track</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:26">audio</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:42">sub_packet_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:43"><decl pos:start="19:5" pos:end="19:42"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">cfs</name> <init pos:start="19:13" pos:end="19:42">= <expr pos:start="19:15" pos:end="19:42"><name pos:start="19:15" pos:end="19:42"><name pos:start="19:15" pos:end="19:19">track</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">audio</name><operator pos:start="19:27" pos:end="19:27">.</operator><name pos:start="19:28" pos:end="19:42">coded_framesize</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:38"><decl pos:start="21:5" pos:end="21:37"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">h</name> <init pos:start="21:11" pos:end="21:37">= <expr pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:17">track</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:24">audio</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:37">sub_packet_h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:40"><decl pos:start="23:5" pos:end="23:39"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">y</name> <init pos:start="23:11" pos:end="23:39">= <expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:17">track</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">audio</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:39">sub_packet_cnt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:36"><decl pos:start="25:5" pos:end="25:35"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">w</name> <init pos:start="25:11" pos:end="25:35">= <expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:17">track</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">audio</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:35">frame_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">x</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="101:5"><if pos:start="31:5" pos:end="101:5">if <condition pos:start="31:8" pos:end="31:30">(<expr pos:start="31:9" pos:end="31:29"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:14">track</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">audio</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:29">pkt_cnt</name></name></expr>)</condition> <block pos:start="31:32" pos:end="101:5">{<block_content pos:start="33:9" pos:end="99:9">

        <if_stmt pos:start="33:9" pos:end="35:49"><if pos:start="33:9" pos:end="35:49">if <condition pos:start="33:12" pos:end="33:45">(<expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:17">track</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">audio</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:39">sub_packet_cnt</name></name> <operator pos:start="33:41" pos:end="33:42">==</operator> <literal type="number" pos:start="33:44" pos:end="33:44">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:49"><block_content pos:start="35:13" pos:end="35:49">

            <expr_stmt pos:start="35:13" pos:end="35:49"><expr pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:17">track</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">audio</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:37">buf_timecode</name></name> <operator pos:start="35:39" pos:end="35:39">=</operator> <name pos:start="35:41" pos:end="35:48">timecode</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="85:9"><if pos:start="37:9" pos:end="55:9">if <condition pos:start="37:12" pos:end="37:54">(<expr pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:14">st</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:21">codec</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:31">codec_id</name></name> <operator pos:start="37:33" pos:end="37:34">==</operator> <name pos:start="37:36" pos:end="37:53">AV_CODEC_ID_RA_288</name></expr>)</condition> <block pos:start="37:56" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:40">

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="47:13">if <condition pos:start="39:16" pos:end="39:35">(<expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:20">size</name> <operator pos:start="39:22" pos:end="39:22">&lt;</operator> <name pos:start="39:24" pos:end="39:26">cfs</name> <operator pos:start="39:28" pos:end="39:28">*</operator> <name pos:start="39:30" pos:end="39:30">h</name> <operator pos:start="39:32" pos:end="39:32">/</operator> <literal type="number" pos:start="39:34" pos:end="39:34">2</literal></expr>)</condition> <block pos:start="39:37" pos:end="47:13">{<block_content pos:start="41:17" pos:end="45:43">

                <expr_stmt pos:start="41:17" pos:end="43:68"><expr pos:start="41:17" pos:end="43:67"><call pos:start="41:17" pos:end="43:67"><name pos:start="41:17" pos:end="41:22">av_log</name><argument_list pos:start="41:23" pos:end="43:67">(<argument pos:start="41:24" pos:end="41:36"><expr pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:31">matroska</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:36">ctx</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:50"><expr pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:50">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:66"><expr pos:start="43:24" pos:end="43:66"><literal type="string" pos:start="43:24" pos:end="43:66">"Corrupt int4 RM-style audio packet size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:43">return <expr pos:start="45:24" pos:end="45:42"><name pos:start="45:24" pos:end="45:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="49:13" pos:end="53:40">for <control pos:start="49:17" pos:end="49:33">(<init pos:start="49:18" pos:end="49:21"><expr pos:start="49:18" pos:end="49:20"><name pos:start="49:18" pos:end="49:18">x</name><operator pos:start="49:19" pos:end="49:19">=</operator><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</init> <condition pos:start="49:23" pos:end="49:28"><expr pos:start="49:23" pos:end="49:27"><name pos:start="49:23" pos:end="49:23">x</name><operator pos:start="49:24" pos:end="49:24">&lt;</operator><name pos:start="49:25" pos:end="49:25">h</name><operator pos:start="49:26" pos:end="49:26">/</operator><literal type="number" pos:start="49:27" pos:end="49:27">2</literal></expr>;</condition> <incr pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:30">x</name><operator pos:start="49:31" pos:end="49:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:17" pos:end="53:40"><block_content pos:start="51:17" pos:end="53:40">

                <expr_stmt pos:start="51:17" pos:end="53:40"><expr pos:start="51:17" pos:end="53:39"><call pos:start="51:17" pos:end="53:39"><name pos:start="51:17" pos:end="51:22">memcpy</name><argument_list pos:start="51:23" pos:end="53:39">(<argument pos:start="51:24" pos:end="51:51"><expr pos:start="51:24" pos:end="51:51"><name pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:28">track</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:35">audio</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:39">buf</name></name><operator pos:start="51:40" pos:end="51:40">+</operator><name pos:start="51:41" pos:end="51:41">x</name><operator pos:start="51:42" pos:end="51:42">*</operator><literal type="number" pos:start="51:43" pos:end="51:43">2</literal><operator pos:start="51:44" pos:end="51:44">*</operator><name pos:start="51:45" pos:end="51:45">w</name><operator pos:start="51:46" pos:end="51:46">+</operator><name pos:start="51:47" pos:end="51:47">y</name><operator pos:start="51:48" pos:end="51:48">*</operator><name pos:start="51:49" pos:end="51:51">cfs</name></expr></argument>,

                       <argument pos:start="53:24" pos:end="53:33"><expr pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:27">data</name><operator pos:start="53:28" pos:end="53:28">+</operator><name pos:start="53:29" pos:end="53:29">x</name><operator pos:start="53:30" pos:end="53:30">*</operator><name pos:start="53:31" pos:end="53:33">cfs</name></expr></argument>, <argument pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:38">cfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="69:9">else if <condition pos:start="55:19" pos:end="55:59">(<expr pos:start="55:20" pos:end="55:58"><name pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:21">st</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:28">codec</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:38">codec_id</name></name> <operator pos:start="55:40" pos:end="55:41">==</operator> <name pos:start="55:43" pos:end="55:58">AV_CODEC_ID_SIPR</name></expr>)</condition> <block pos:start="55:61" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:52">

            <if_stmt pos:start="57:13" pos:end="65:13"><if pos:start="57:13" pos:end="65:13">if <condition pos:start="57:16" pos:end="57:25">(<expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:20">size</name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <name pos:start="57:24" pos:end="57:24">w</name></expr>)</condition> <block pos:start="57:27" pos:end="65:13">{<block_content pos:start="59:17" pos:end="63:43">

                <expr_stmt pos:start="59:17" pos:end="61:68"><expr pos:start="59:17" pos:end="61:67"><call pos:start="59:17" pos:end="61:67"><name pos:start="59:17" pos:end="59:22">av_log</name><argument_list pos:start="59:23" pos:end="61:67">(<argument pos:start="59:24" pos:end="59:36"><expr pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:31">matroska</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:36">ctx</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:50"><expr pos:start="59:39" pos:end="59:50"><name pos:start="59:39" pos:end="59:50">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="61:24" pos:end="61:66"><expr pos:start="61:24" pos:end="61:66"><literal type="string" pos:start="61:24" pos:end="61:66">"Corrupt sipr RM-style audio packet size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:43">return <expr pos:start="63:24" pos:end="63:42"><name pos:start="63:24" pos:end="63:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:52"><expr pos:start="67:13" pos:end="67:51"><call pos:start="67:13" pos:end="67:51"><name pos:start="67:13" pos:end="67:18">memcpy</name><argument_list pos:start="67:19" pos:end="67:51">(<argument pos:start="67:20" pos:end="67:41"><expr pos:start="67:20" pos:end="67:41"><name pos:start="67:20" pos:end="67:35"><name pos:start="67:20" pos:end="67:24">track</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">audio</name><operator pos:start="67:32" pos:end="67:32">.</operator><name pos:start="67:33" pos:end="67:35">buf</name></name> <operator pos:start="67:37" pos:end="67:37">+</operator> <name pos:start="67:39" pos:end="67:39">y</name><operator pos:start="67:40" pos:end="67:40">*</operator><name pos:start="67:41" pos:end="67:41">w</name></expr></argument>, <argument pos:start="67:44" pos:end="67:47"><expr pos:start="67:44" pos:end="67:47"><name pos:start="67:44" pos:end="67:47">data</name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><name pos:start="67:50" pos:end="67:50">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="85:9">else <block pos:start="69:16" pos:end="85:9">{<block_content pos:start="71:13" pos:end="83:91">

            <if_stmt pos:start="71:13" pos:end="79:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:37">(<expr pos:start="71:17" pos:end="71:36"><name pos:start="71:17" pos:end="71:20">size</name> <operator pos:start="71:22" pos:end="71:22">&lt;</operator> <name pos:start="71:24" pos:end="71:26">sps</name> <operator pos:start="71:28" pos:end="71:28">*</operator> <name pos:start="71:30" pos:end="71:30">w</name> <operator pos:start="71:32" pos:end="71:32">/</operator> <name pos:start="71:34" pos:end="71:36">sps</name></expr>)</condition> <block pos:start="71:39" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:43">

                <expr_stmt pos:start="73:17" pos:end="75:71"><expr pos:start="73:17" pos:end="75:70"><call pos:start="73:17" pos:end="75:70"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="75:70">(<argument pos:start="73:24" pos:end="73:36"><expr pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:31">matroska</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:36">ctx</name></name></expr></argument>, <argument pos:start="73:39" pos:end="73:50"><expr pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:50">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="75:24" pos:end="75:69"><expr pos:start="75:24" pos:end="75:69"><literal type="string" pos:start="75:24" pos:end="75:69">"Corrupt generic RM-style audio packet size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="77:17" pos:end="77:43">return <expr pos:start="77:24" pos:end="77:42"><name pos:start="77:24" pos:end="77:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="81:13" pos:end="83:91">for <control pos:start="81:17" pos:end="81:35">(<init pos:start="81:18" pos:end="81:21"><expr pos:start="81:18" pos:end="81:20"><name pos:start="81:18" pos:end="81:18">x</name><operator pos:start="81:19" pos:end="81:19">=</operator><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</init> <condition pos:start="81:23" pos:end="81:30"><expr pos:start="81:23" pos:end="81:29"><name pos:start="81:23" pos:end="81:23">x</name><operator pos:start="81:24" pos:end="81:24">&lt;</operator><name pos:start="81:25" pos:end="81:25">w</name><operator pos:start="81:26" pos:end="81:26">/</operator><name pos:start="81:27" pos:end="81:29">sps</name></expr>;</condition> <incr pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:32">x</name><operator pos:start="81:33" pos:end="81:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:17" pos:end="83:91"><block_content pos:start="83:17" pos:end="83:91">

                <expr_stmt pos:start="83:17" pos:end="83:91"><expr pos:start="83:17" pos:end="83:90"><call pos:start="83:17" pos:end="83:90"><name pos:start="83:17" pos:end="83:22">memcpy</name><argument_list pos:start="83:23" pos:end="83:90">(<argument pos:start="83:24" pos:end="83:72"><expr pos:start="83:24" pos:end="83:72"><name pos:start="83:24" pos:end="83:39"><name pos:start="83:24" pos:end="83:28">track</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:35">audio</name><operator pos:start="83:36" pos:end="83:36">.</operator><name pos:start="83:37" pos:end="83:39">buf</name></name><operator pos:start="83:40" pos:end="83:40">+</operator><name pos:start="83:41" pos:end="83:43">sps</name><operator pos:start="83:44" pos:end="83:44">*</operator><operator pos:start="83:45" pos:end="83:45">(</operator><name pos:start="83:46" pos:end="83:46">h</name><operator pos:start="83:47" pos:end="83:47">*</operator><name pos:start="83:48" pos:end="83:48">x</name><operator pos:start="83:49" pos:end="83:49">+</operator><operator pos:start="83:50" pos:end="83:50">(</operator><operator pos:start="83:51" pos:end="83:51">(</operator><name pos:start="83:52" pos:end="83:52">h</name><operator pos:start="83:53" pos:end="83:53">+</operator><literal type="number" pos:start="83:54" pos:end="83:54">1</literal><operator pos:start="83:55" pos:end="83:55">)</operator><operator pos:start="83:56" pos:end="83:56">/</operator><literal type="number" pos:start="83:57" pos:end="83:57">2</literal><operator pos:start="83:58" pos:end="83:58">)</operator><operator pos:start="83:59" pos:end="83:59">*</operator><operator pos:start="83:60" pos:end="83:60">(</operator><name pos:start="83:61" pos:end="83:61">y</name><operator pos:start="83:62" pos:end="83:62">&amp;</operator><literal type="number" pos:start="83:63" pos:end="83:63">1</literal><operator pos:start="83:64" pos:end="83:64">)</operator><operator pos:start="83:65" pos:end="83:65">+</operator><operator pos:start="83:66" pos:end="83:66">(</operator><name pos:start="83:67" pos:end="83:67">y</name><operator pos:start="83:68" pos:end="83:69">&gt;&gt;</operator><literal type="number" pos:start="83:70" pos:end="83:70">1</literal><operator pos:start="83:71" pos:end="83:71">)</operator><operator pos:start="83:72" pos:end="83:72">)</operator></expr></argument>, <argument pos:start="83:75" pos:end="83:84"><expr pos:start="83:75" pos:end="83:84"><name pos:start="83:75" pos:end="83:78">data</name><operator pos:start="83:79" pos:end="83:79">+</operator><name pos:start="83:80" pos:end="83:80">x</name><operator pos:start="83:81" pos:end="83:81">*</operator><name pos:start="83:82" pos:end="83:84">sps</name></expr></argument>, <argument pos:start="83:87" pos:end="83:89"><expr pos:start="83:87" pos:end="83:89"><name pos:start="83:87" pos:end="83:89">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="89:9" pos:end="99:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:47">(<expr pos:start="89:13" pos:end="89:46"><operator pos:start="89:13" pos:end="89:14">++</operator><name pos:start="89:15" pos:end="89:41"><name pos:start="89:15" pos:end="89:19">track</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:26">audio</name><operator pos:start="89:27" pos:end="89:27">.</operator><name pos:start="89:28" pos:end="89:41">sub_packet_cnt</name></name> <operator pos:start="89:43" pos:end="89:44">&gt;=</operator> <name pos:start="89:46" pos:end="89:46">h</name></expr>)</condition> <block pos:start="89:49" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:43">

            <if_stmt pos:start="91:13" pos:end="93:64"><if pos:start="91:13" pos:end="93:64">if <condition pos:start="91:16" pos:end="91:56">(<expr pos:start="91:17" pos:end="91:55"><name pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:18">st</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:25">codec</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:35">codec_id</name></name> <operator pos:start="91:37" pos:end="91:38">==</operator> <name pos:start="91:40" pos:end="91:55">AV_CODEC_ID_SIPR</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:64"><block_content pos:start="93:17" pos:end="93:64">

                <expr_stmt pos:start="93:17" pos:end="93:64"><expr pos:start="93:17" pos:end="93:63"><call pos:start="93:17" pos:end="93:63"><name pos:start="93:17" pos:end="93:39">ff_rm_reorder_sipr_data</name><argument_list pos:start="93:40" pos:end="93:63">(<argument pos:start="93:41" pos:end="93:56"><expr pos:start="93:41" pos:end="93:56"><name pos:start="93:41" pos:end="93:56"><name pos:start="93:41" pos:end="93:45">track</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:52">audio</name><operator pos:start="93:53" pos:end="93:53">.</operator><name pos:start="93:54" pos:end="93:56">buf</name></name></expr></argument>, <argument pos:start="93:59" pos:end="93:59"><expr pos:start="93:59" pos:end="93:59"><name pos:start="93:59" pos:end="93:59">h</name></expr></argument>, <argument pos:start="93:62" pos:end="93:62"><expr pos:start="93:62" pos:end="93:62"><name pos:start="93:62" pos:end="93:62">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:44"><expr pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:39"><name pos:start="95:13" pos:end="95:17">track</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:24">audio</name><operator pos:start="95:25" pos:end="95:25">.</operator><name pos:start="95:26" pos:end="95:39">sub_packet_cnt</name></name> <operator pos:start="95:41" pos:end="95:41">=</operator> <literal type="number" pos:start="95:43" pos:end="95:43">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:43"><expr pos:start="97:13" pos:end="97:42"><name pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:17">track</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">audio</name><operator pos:start="97:25" pos:end="97:25">.</operator><name pos:start="97:26" pos:end="97:32">pkt_cnt</name></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:36">h</name><operator pos:start="97:37" pos:end="97:37">*</operator><name pos:start="97:38" pos:end="97:38">w</name> <operator pos:start="97:40" pos:end="97:40">/</operator> <name pos:start="97:42" pos:end="97:42">a</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="105:5" pos:end="131:5">while <condition pos:start="105:11" pos:end="105:32">(<expr pos:start="105:12" pos:end="105:31"><name pos:start="105:12" pos:end="105:31"><name pos:start="105:12" pos:end="105:16">track</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:23">audio</name><operator pos:start="105:24" pos:end="105:24">.</operator><name pos:start="105:25" pos:end="105:31">pkt_cnt</name></name></expr>)</condition> <block pos:start="105:34" pos:end="131:5">{<block_content pos:start="107:9" pos:end="129:68">

        <decl_stmt pos:start="107:9" pos:end="107:29"><decl pos:start="107:9" pos:end="107:28"><type pos:start="107:9" pos:end="107:18"><name pos:start="107:9" pos:end="107:16">AVPacket</name> <modifier pos:start="107:18" pos:end="107:18">*</modifier></type><name pos:start="107:19" pos:end="107:21">pkt</name> <init pos:start="107:23" pos:end="107:28">= <expr pos:start="107:25" pos:end="107:28"><name pos:start="107:25" pos:end="107:28">NULL</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:79">(<expr pos:start="109:13" pos:end="109:78"><operator pos:start="109:13" pos:end="109:13">!</operator><operator pos:start="109:14" pos:end="109:14">(</operator><name pos:start="109:15" pos:end="109:17">pkt</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <call pos:start="109:21" pos:end="109:48"><name pos:start="109:21" pos:end="109:30">av_mallocz</name><argument_list pos:start="109:31" pos:end="109:48">(<argument pos:start="109:32" pos:end="109:47"><expr pos:start="109:32" pos:end="109:47"><sizeof pos:start="109:32" pos:end="109:47">sizeof<argument_list pos:start="109:38" pos:end="109:47">(<argument pos:start="109:39" pos:end="109:46"><expr pos:start="109:39" pos:end="109:46"><name pos:start="109:39" pos:end="109:46">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="109:49" pos:end="109:49">)</operator> <operator pos:start="109:51" pos:end="109:52">||</operator> <call pos:start="109:54" pos:end="109:74"><name pos:start="109:54" pos:end="109:66">av_new_packet</name><argument_list pos:start="109:67" pos:end="109:74">(<argument pos:start="109:68" pos:end="109:70"><expr pos:start="109:68" pos:end="109:70"><name pos:start="109:68" pos:end="109:70">pkt</name></expr></argument>, <argument pos:start="109:73" pos:end="109:73"><expr pos:start="109:73" pos:end="109:73"><name pos:start="109:73" pos:end="109:73">a</name></expr></argument>)</argument_list></call> <operator pos:start="109:76" pos:end="109:76">&lt;</operator> <literal type="number" pos:start="109:78" pos:end="109:78">0</literal></expr>)</condition><block pos:start="109:80" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:35">

            <expr_stmt pos:start="111:13" pos:end="111:25"><expr pos:start="111:13" pos:end="111:24"><call pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:19">av_free</name><argument_list pos:start="111:20" pos:end="111:24">(<argument pos:start="111:21" pos:end="111:23"><expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:35">return <expr pos:start="113:20" pos:end="113:34"><call pos:start="113:20" pos:end="113:34"><name pos:start="113:20" pos:end="113:26">AVERROR</name><argument_list pos:start="113:27" pos:end="113:34">(<argument pos:start="113:28" pos:end="113:33"><expr pos:start="113:28" pos:end="113:33"><name pos:start="113:28" pos:end="113:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="119:60"><expr pos:start="117:9" pos:end="119:59"><call pos:start="117:9" pos:end="119:59"><name pos:start="117:9" pos:end="117:14">memcpy</name><argument_list pos:start="117:15" pos:end="119:59">(<argument pos:start="117:16" pos:end="117:24"><expr pos:start="117:16" pos:end="117:24"><name pos:start="117:16" pos:end="117:24"><name pos:start="117:16" pos:end="117:18">pkt</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:24">data</name></name></expr></argument>, <argument pos:start="117:27" pos:end="119:55"><expr pos:start="117:27" pos:end="119:55"><name pos:start="117:27" pos:end="117:42"><name pos:start="117:27" pos:end="117:31">track</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:38">audio</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:42">buf</name></name>

               <operator pos:start="119:16" pos:end="119:16">+</operator> <name pos:start="119:18" pos:end="119:18">a</name> <operator pos:start="119:20" pos:end="119:20">*</operator> <operator pos:start="119:22" pos:end="119:22">(</operator><name pos:start="119:23" pos:end="119:23">h</name><operator pos:start="119:24" pos:end="119:24">*</operator><name pos:start="119:25" pos:end="119:25">w</name> <operator pos:start="119:27" pos:end="119:27">/</operator> <name pos:start="119:29" pos:end="119:29">a</name> <operator pos:start="119:31" pos:end="119:31">-</operator> <name pos:start="119:33" pos:end="119:52"><name pos:start="119:33" pos:end="119:37">track</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:44">audio</name><operator pos:start="119:45" pos:end="119:45">.</operator><name pos:start="119:46" pos:end="119:52">pkt_cnt</name></name><operator pos:start="119:53" pos:end="119:54">--</operator><operator pos:start="119:55" pos:end="119:55">)</operator></expr></argument>, <argument pos:start="119:58" pos:end="119:58"><expr pos:start="119:58" pos:end="119:58"><name pos:start="119:58" pos:end="119:58">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:11">pkt</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:16">pts</name></name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:44"><name pos:start="121:20" pos:end="121:24">track</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">audio</name><operator pos:start="121:32" pos:end="121:32">.</operator><name pos:start="121:33" pos:end="121:44">buf_timecode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:51"><expr pos:start="123:9" pos:end="123:50"><name pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:13">track</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:20">audio</name><operator pos:start="123:21" pos:end="123:21">.</operator><name pos:start="123:22" pos:end="123:33">buf_timecode</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <name pos:start="123:37" pos:end="123:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:23"><expr pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:11">pkt</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:16">pos</name></name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:22">pos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:38"><expr pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:11">pkt</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:25">stream_index</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:37"><name pos:start="127:29" pos:end="127:30">st</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:37">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:68"><expr pos:start="129:9" pos:end="129:67"><call pos:start="129:9" pos:end="129:67"><name pos:start="129:9" pos:end="129:20">dynarray_add</name><argument_list pos:start="129:21" pos:end="129:67">(<argument pos:start="129:22" pos:end="129:39"><expr pos:start="129:22" pos:end="129:39"><operator pos:start="129:22" pos:end="129:22">&amp;</operator><name pos:start="129:23" pos:end="129:39"><name pos:start="129:23" pos:end="129:30">matroska</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:39">packets</name></name></expr></argument>,<argument pos:start="129:41" pos:end="129:62"><expr pos:start="129:41" pos:end="129:62"><operator pos:start="129:41" pos:end="129:41">&amp;</operator><name pos:start="129:42" pos:end="129:62"><name pos:start="129:42" pos:end="129:49">matroska</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:62">num_packets</name></name></expr></argument>,<argument pos:start="129:64" pos:end="129:66"><expr pos:start="129:64" pos:end="129:66"><name pos:start="129:64" pos:end="129:66">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
