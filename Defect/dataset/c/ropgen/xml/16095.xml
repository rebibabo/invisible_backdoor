<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16095.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">qxl_realize_primary</name><parameter_list pos:start="1:32" pos:end="1:61">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:41">PCIDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">dev</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:53">Error</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier><modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:50">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PCIQXLDevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">qxl</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><call pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:31">PCI_QXL</name><argument_list pos:start="5:32" pos:end="5:36">(<argument pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:35">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VGACommonState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">vga</name> <init pos:start="7:25" pos:end="7:35">= <expr pos:start="7:27" pos:end="7:35"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:35"><name pos:start="7:28" pos:end="7:30">qxl</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:35">vga</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:7">qxl</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:11">id</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:20">qxl_init_ramsize</name><argument_list pos:start="15:21" pos:end="15:25">(<argument pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:24">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:7">vga</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:17">vbe_size</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:23">qxl</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:36">vgamem_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">vga</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:21">vram_size_mb</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:42"><name pos:start="19:25" pos:end="19:27">qxl</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:32">vga</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:42">vram_size</name></name> <operator pos:start="19:44" pos:end="19:45">&gt;&gt;</operator> <literal type="number" pos:start="19:47" pos:end="19:48">20</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><call pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:19">vga_common_init</name><argument_list pos:start="21:20" pos:end="21:43">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">vga</name></expr></argument>, <argument pos:start="21:26" pos:end="21:36"><expr pos:start="21:26" pos:end="21:36"><call pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:31">OBJECT</name><argument_list pos:start="21:32" pos:end="21:36">(<argument pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:35">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:39" pos:end="21:42"><expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:71"><expr pos:start="23:5" pos:end="25:70"><call pos:start="23:5" pos:end="25:70"><name pos:start="23:5" pos:end="23:12">vga_init</name><argument_list pos:start="23:13" pos:end="25:70">(<argument pos:start="23:14" pos:end="23:16"><expr pos:start="23:14" pos:end="23:16"><name pos:start="23:14" pos:end="23:16">vga</name></expr></argument>, <argument pos:start="23:19" pos:end="23:29"><expr pos:start="23:19" pos:end="23:29"><call pos:start="23:19" pos:end="23:29"><name pos:start="23:19" pos:end="23:24">OBJECT</name><argument_list pos:start="23:25" pos:end="23:29">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">dev</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="25:14" pos:end="25:35"><expr pos:start="25:14" pos:end="25:35"><call pos:start="25:14" pos:end="25:35"><name pos:start="25:14" pos:end="25:30">pci_address_space</name><argument_list pos:start="25:31" pos:end="25:35">(<argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:34">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:38" pos:end="25:62"><expr pos:start="25:38" pos:end="25:62"><call pos:start="25:38" pos:end="25:62"><name pos:start="25:38" pos:end="25:57">pci_address_space_io</name><argument_list pos:start="25:58" pos:end="25:62">(<argument pos:start="25:59" pos:end="25:61"><expr pos:start="25:59" pos:end="25:61"><name pos:start="25:59" pos:end="25:61">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:65" pos:end="25:69"><expr pos:start="25:65" pos:end="25:69"><name pos:start="25:65" pos:end="25:69">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:33"><expr pos:start="27:5" pos:end="29:32"><call pos:start="27:5" pos:end="29:32"><name pos:start="27:5" pos:end="27:20">portio_list_init</name><argument_list pos:start="27:21" pos:end="29:32">(<argument pos:start="27:22" pos:end="27:40"><expr pos:start="27:22" pos:end="27:40"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:40"><name pos:start="27:23" pos:end="27:25">qxl</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:40">vga_port_list</name></name></expr></argument>, <argument pos:start="27:43" pos:end="27:53"><expr pos:start="27:43" pos:end="27:53"><call pos:start="27:43" pos:end="27:53"><name pos:start="27:43" pos:end="27:48">OBJECT</name><argument_list pos:start="27:49" pos:end="27:53">(<argument pos:start="27:50" pos:end="27:52"><expr pos:start="27:50" pos:end="27:52"><name pos:start="27:50" pos:end="27:52">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:74"><expr pos:start="27:56" pos:end="27:74"><name pos:start="27:56" pos:end="27:74">qxl_vga_portio_list</name></expr></argument>,

                     <argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">vga</name></expr></argument>, <argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><literal type="string" pos:start="29:27" pos:end="29:31">"vga"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:57"><expr pos:start="31:5" pos:end="31:56"><call pos:start="31:5" pos:end="31:56"><name pos:start="31:5" pos:end="31:35">portio_list_set_flush_coalesced</name><argument_list pos:start="31:36" pos:end="31:56">(<argument pos:start="31:37" pos:end="31:55"><expr pos:start="31:37" pos:end="31:55"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:55"><name pos:start="31:38" pos:end="31:40">qxl</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:55">vga_port_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:75"><expr pos:start="33:5" pos:end="33:74"><call pos:start="33:5" pos:end="33:74"><name pos:start="33:5" pos:end="33:19">portio_list_add</name><argument_list pos:start="33:20" pos:end="33:74">(<argument pos:start="33:21" pos:end="33:39"><expr pos:start="33:21" pos:end="33:39"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:39"><name pos:start="33:22" pos:end="33:24">qxl</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:39">vga_port_list</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:66"><expr pos:start="33:42" pos:end="33:66"><call pos:start="33:42" pos:end="33:66"><name pos:start="33:42" pos:end="33:61">pci_address_space_io</name><argument_list pos:start="33:62" pos:end="33:66">(<argument pos:start="33:63" pos:end="33:65"><expr pos:start="33:63" pos:end="33:65"><name pos:start="33:63" pos:end="33:65">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:69" pos:end="33:73"><expr pos:start="33:69" pos:end="33:73"><literal type="number" pos:start="33:69" pos:end="33:73">0x3b0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:67"><expr pos:start="37:5" pos:end="37:66"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">vga</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:12">con</name></name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:66"><name pos:start="37:16" pos:end="37:35">graphic_console_init</name><argument_list pos:start="37:36" pos:end="37:66">(<argument pos:start="37:37" pos:end="37:47"><expr pos:start="37:37" pos:end="37:47"><call pos:start="37:37" pos:end="37:47"><name pos:start="37:37" pos:end="37:42">DEVICE</name><argument_list pos:start="37:43" pos:end="37:47">(<argument pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><name pos:start="37:44" pos:end="37:46">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:50" pos:end="37:50"><expr pos:start="37:50" pos:end="37:50"><literal type="number" pos:start="37:50" pos:end="37:50">0</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:60"><expr pos:start="37:53" pos:end="37:60"><operator pos:start="37:53" pos:end="37:53">&amp;</operator><name pos:start="37:54" pos:end="37:60">qxl_ops</name></expr></argument>, <argument pos:start="37:63" pos:end="37:65"><expr pos:start="37:63" pos:end="37:65"><name pos:start="37:63" pos:end="37:65">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><call pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:34">qemu_spice_display_init_common</name><argument_list pos:start="39:35" pos:end="39:45">(<argument pos:start="39:36" pos:end="39:44"><expr pos:start="39:36" pos:end="39:44"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:39">qxl</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:44">ssd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:22">qxl_realize_common</name><argument_list pos:start="43:23" pos:end="43:39">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">qxl</name></expr></argument>, <argument pos:start="43:29" pos:end="43:38"><expr pos:start="43:29" pos:end="43:38"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:17">local_err</name></expr>)</condition> <block pos:start="45:20" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:15">

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:23">error_propagate</name><argument_list pos:start="47:24" pos:end="47:40">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">errp</name></expr></argument>, <argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:7">qxl</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:12">ssd</name><operator pos:start="55:13" pos:end="55:13">.</operator><name pos:start="55:14" pos:end="55:16">dcl</name><operator pos:start="55:17" pos:end="55:17">.</operator><name pos:start="55:18" pos:end="55:20">ops</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:44">display_listener_ops</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:7">qxl</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:12">ssd</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:16">dcl</name><operator pos:start="57:17" pos:end="57:17">.</operator><name pos:start="57:18" pos:end="57:20">con</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:31"><name pos:start="57:24" pos:end="57:26">vga</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:31">con</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:50"><expr pos:start="59:5" pos:end="59:49"><call pos:start="59:5" pos:end="59:49"><name pos:start="59:5" pos:end="59:34">register_displaychangelistener</name><argument_list pos:start="59:35" pos:end="59:49">(<argument pos:start="59:36" pos:end="59:48"><expr pos:start="59:36" pos:end="59:48"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:48"><name pos:start="59:37" pos:end="59:39">qxl</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:44">ssd</name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:48">dcl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
