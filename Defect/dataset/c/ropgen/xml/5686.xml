<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5686.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">sm501_palette_write</name><parameter_list pos:start="1:32" pos:end="3:72">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>,

				<parameter pos:start="3:33" pos:end="3:55"><decl pos:start="3:33" pos:end="3:55"><type pos:start="3:33" pos:end="3:55"><name pos:start="3:33" pos:end="3:50">target_phys_addr_t</name></type> <name pos:start="3:52" pos:end="3:55">addr</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:71"><decl pos:start="3:58" pos:end="3:71"><type pos:start="3:58" pos:end="3:71"><name pos:start="3:58" pos:end="3:65">uint32_t</name></type> <name pos:start="3:67" pos:end="3:71">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:45">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SM501State</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type> <name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:41">= <expr pos:start="7:22" pos:end="7:41"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:32">SM501State</name> <operator pos:start="7:34" pos:end="7:34">*</operator><operator pos:start="7:35" pos:end="7:35">)</operator><name pos:start="7:36" pos:end="7:41">opaque</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="11:36"><expr pos:start="9:5" pos:end="11:35"><call pos:start="9:5" pos:end="11:35"><name pos:start="9:5" pos:end="9:17">SM501_DPRINTF</name><argument_list pos:start="9:18" pos:end="11:35">(<argument pos:start="9:19" pos:end="9:57"><expr pos:start="9:19" pos:end="9:57"><literal type="string" pos:start="9:19" pos:end="9:57">"sm501 palette write addr=%x, val=%x\n"</literal></expr></argument>,

		  <argument pos:start="11:19" pos:end="11:27"><expr pos:start="11:19" pos:end="11:27"><operator pos:start="11:19" pos:end="11:19">(</operator><name pos:start="11:20" pos:end="11:22">int</name><operator pos:start="11:23" pos:end="11:23">)</operator><name pos:start="11:24" pos:end="11:27">addr</name></expr></argument>, <argument pos:start="11:30" pos:end="11:34"><expr pos:start="11:30" pos:end="11:34"><name pos:start="11:30" pos:end="11:34">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:42">/* TODO : consider BYTE/WORD access */</comment>

    <comment type="block" pos:start="17:5" pos:end="17:32">/* TODO : consider endian */</comment>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:41">(<argument pos:start="21:12" pos:end="21:40"><expr pos:start="21:12" pos:end="21:40"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal> <operator pos:start="21:14" pos:end="21:15">&lt;=</operator> <name pos:start="21:17" pos:end="21:20">addr</name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <name pos:start="21:25" pos:end="21:28">addr</name> <operator pos:start="21:30" pos:end="21:30">&lt;</operator> <literal type="number" pos:start="21:32" pos:end="21:36">0x400</literal> <operator pos:start="21:38" pos:end="21:38">*</operator> <literal type="number" pos:start="21:40" pos:end="21:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><operator pos:start="23:5" pos:end="23:5">*</operator><operator pos:start="23:6" pos:end="23:6">(</operator><name pos:start="23:7" pos:end="23:14">uint32_t</name><operator pos:start="23:15" pos:end="23:15">*</operator><operator pos:start="23:16" pos:end="23:16">)</operator><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:36"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:30">dc_palette</name><index pos:start="23:31" pos:end="23:36">[<expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">addr</name></expr>]</index></name> <operator pos:start="23:38" pos:end="23:38">=</operator> <name pos:start="23:40" pos:end="23:44">value</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
