<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4398.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_device_type</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:40">SCSIDiskState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">bdrv</name> <init pos:start="5:28" pos:end="5:44">= <expr pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">qdev</name><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:41">conf</name><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:44">bs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:15">cmd</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:19">[<expr pos:start="9:17" pos:end="9:18"><literal type="number" pos:start="9:17" pos:end="9:18">36</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:20">sensebuf</name><index pos:start="11:21" pos:end="11:23">[<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">sg_io_hdr_t</name></type> <name pos:start="13:17" pos:end="13:25">io_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:31">(<argument pos:start="19:12" pos:end="19:14"><expr pos:start="19:12" pos:end="19:14"><name pos:start="19:12" pos:end="19:14">cmd</name></expr></argument>, <argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr></argument>, <argument pos:start="19:20" pos:end="19:30"><expr pos:start="19:20" pos:end="19:30"><sizeof pos:start="19:20" pos:end="19:30">sizeof<argument_list pos:start="19:26" pos:end="19:30">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:31">(<argument pos:start="21:12" pos:end="21:14"><expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">buf</name></expr></argument>, <argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr></argument>, <argument pos:start="21:20" pos:end="21:30"><expr pos:start="21:20" pos:end="21:30"><sizeof pos:start="21:20" pos:end="21:30">sizeof<argument_list pos:start="21:26" pos:end="21:30">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:7">cmd</name><index pos:start="23:8" pos:end="23:10">[<expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr>]</index></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:20">INQUIRY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:7">cmd</name><index pos:start="25:8" pos:end="25:10">[<expr pos:start="25:9" pos:end="25:9"><literal type="number" pos:start="25:9" pos:end="25:9">4</literal></expr>]</index></name> <operator pos:start="25:12" pos:end="25:12">=</operator> <sizeof pos:start="25:14" pos:end="25:24">sizeof<argument_list pos:start="25:20" pos:end="25:24">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:44">(<argument pos:start="29:12" pos:end="29:21"><expr pos:start="29:12" pos:end="29:21"><operator pos:start="29:12" pos:end="29:12">&amp;</operator><name pos:start="29:13" pos:end="29:21">io_header</name></expr></argument>, <argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr></argument>, <argument pos:start="29:27" pos:end="29:43"><expr pos:start="29:27" pos:end="29:43"><sizeof pos:start="29:27" pos:end="29:43">sizeof<argument_list pos:start="29:33" pos:end="29:43">(<argument pos:start="29:34" pos:end="29:42"><expr pos:start="29:34" pos:end="29:42"><name pos:start="29:34" pos:end="29:42">io_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:13">io_header</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:26">interface_id</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <literal type="char" pos:start="31:30" pos:end="31:32">'S'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:13">io_header</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:29">dxfer_direction</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:49">SG_DXFER_FROM_DEV</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:13">io_header</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:23">dxfer_len</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <sizeof pos:start="35:27" pos:end="35:37">sizeof<argument_list pos:start="35:33" pos:end="35:37">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:13">io_header</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:20">dxferp</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:26">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:13">io_header</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:18">cmdp</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:24">cmd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:13">io_header</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:21">cmd_len</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <sizeof pos:start="41:25" pos:end="41:35">sizeof<argument_list pos:start="41:31" pos:end="41:35">(<argument pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:34">cmd</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:13">io_header</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:23">mx_sb_len</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <sizeof pos:start="43:27" pos:end="43:42">sizeof<argument_list pos:start="43:33" pos:end="43:42">(<argument pos:start="43:34" pos:end="43:41"><expr pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:41">sensebuf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:13">io_header</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:17">sbp</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:28">sensebuf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:13">io_header</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:21">timeout</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:28">6000</literal></expr>;</expr_stmt> <comment type="block" pos:start="47:31" pos:end="47:39">/* XXX */</comment>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:45"><name pos:start="51:11" pos:end="51:20">bdrv_ioctl</name><argument_list pos:start="51:21" pos:end="51:45">(<argument pos:start="51:22" pos:end="51:25"><expr pos:start="51:22" pos:end="51:25"><name pos:start="51:22" pos:end="51:25">bdrv</name></expr></argument>, <argument pos:start="51:28" pos:end="51:32"><expr pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:32">SG_IO</name></expr></argument>, <argument pos:start="51:35" pos:end="51:44"><expr pos:start="51:35" pos:end="51:44"><operator pos:start="51:35" pos:end="51:35">&amp;</operator><name pos:start="51:36" pos:end="51:44">io_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:68">(<expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal> <operator pos:start="53:17" pos:end="53:18">||</operator> <name pos:start="53:20" pos:end="53:42"><name pos:start="53:20" pos:end="53:28">io_header</name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:42">driver_status</name></name> <operator pos:start="53:44" pos:end="53:45">||</operator> <name pos:start="53:47" pos:end="53:67"><name pos:start="53:47" pos:end="53:55">io_header</name><operator pos:start="53:56" pos:end="53:56">.</operator><name pos:start="53:57" pos:end="53:67">host_status</name></name></expr>)</condition> <block pos:start="53:70" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:18">

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:11">qdev</name><operator pos:start="59:12" pos:end="59:12">.</operator><name pos:start="59:13" pos:end="59:16">type</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:25"><name pos:start="59:20" pos:end="59:22">buf</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:22">(<expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:11">buf</name><index pos:start="61:12" pos:end="61:14">[<expr pos:start="61:13" pos:end="61:13"><literal type="number" pos:start="61:13" pos:end="61:13">1</literal></expr>]</index></name> <operator pos:start="61:16" pos:end="61:16">&amp;</operator> <literal type="number" pos:start="61:18" pos:end="61:21">0x80</literal></expr>)</condition> <block pos:start="61:24" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:50">

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">features</name></name> <operator pos:start="63:21" pos:end="63:22">|=</operator> <literal type="number" pos:start="63:24" pos:end="63:24">1</literal> <operator pos:start="63:26" pos:end="63:27">&lt;&lt;</operator> <name pos:start="63:29" pos:end="63:49">SCSI_DISK_F_REMOVABLE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
