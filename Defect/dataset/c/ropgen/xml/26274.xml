<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26274.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">bonito_spciconf_writeb</name><parameter_list pos:start="1:35" pos:end="3:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:72"><decl pos:start="1:50" pos:end="1:72"><type pos:start="1:50" pos:end="1:72"><name pos:start="1:50" pos:end="1:67">target_phys_addr_t</name></type> <name pos:start="1:69" pos:end="1:72">addr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:43">uint32_t</name></type> <name pos:start="3:45" pos:end="3:47">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:49">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCIBonitoState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCIDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">d</name> <init pos:start="9:18" pos:end="9:32">= <expr pos:start="9:20" pos:end="9:32"><call pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:29">PCI_DEVICE</name><argument_list pos:start="9:30" pos:end="9:32">(<argument pos:start="9:31" pos:end="9:31"><expr pos:start="9:31" pos:end="9:31"><name pos:start="9:31" pos:end="9:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">PCIHostState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">phb</name> <init pos:start="11:23" pos:end="11:51">= <expr pos:start="11:25" pos:end="11:51"><call pos:start="11:25" pos:end="11:51"><name pos:start="11:25" pos:end="11:39">PCI_HOST_BRIDGE</name><argument_list pos:start="11:40" pos:end="11:51">(<argument pos:start="11:41" pos:end="11:50"><expr pos:start="11:41" pos:end="11:50"><name pos:start="11:41" pos:end="11:50"><name pos:start="11:41" pos:end="11:41">s</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:50">pcihost</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:20">pciaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:19">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:75"><expr pos:start="19:5" pos:end="19:74"><call pos:start="19:5" pos:end="19:74"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:74">(<argument pos:start="19:13" pos:end="19:62"><expr pos:start="19:13" pos:end="19:62"><literal type="string" pos:start="19:13" pos:end="19:37">"bonito_spciconf_writeb "</literal><name pos:start="19:38" pos:end="19:51">TARGET_FMT_plx</name><literal type="string" pos:start="19:52" pos:end="19:62">" val %x\n"</literal></expr></argument>, <argument pos:start="19:65" pos:end="19:68"><expr pos:start="19:65" pos:end="19:68"><name pos:start="19:65" pos:end="19:68">addr</name></expr></argument>, <argument pos:start="19:71" pos:end="19:73"><expr pos:start="19:71" pos:end="19:73"><name pos:start="19:71" pos:end="19:73">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:11">pciaddr</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:45"><name pos:start="21:15" pos:end="21:36">bonito_sbridge_pciaddr</name><argument_list pos:start="21:37" pos:end="21:45">(<argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">s</name></expr></argument>, <argument pos:start="21:41" pos:end="21:44"><expr pos:start="21:41" pos:end="21:44"><name pos:start="21:41" pos:end="21:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:15">pciaddr</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <literal type="number" pos:start="25:20" pos:end="25:29">0xffffffff</literal></expr>)</condition> <block pos:start="25:32" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:46">/* set the pci address in s-&gt;config_reg */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:7">phb</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:19">config_reg</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <operator pos:start="35:23" pos:end="35:23">(</operator><name pos:start="35:24" pos:end="35:30">pciaddr</name><operator pos:start="35:31" pos:end="35:31">)</operator> <operator pos:start="35:33" pos:end="35:33">|</operator> <operator pos:start="35:35" pos:end="35:35">(</operator><literal type="number" pos:start="35:36" pos:end="35:37">1u</literal> <operator pos:start="35:39" pos:end="35:40">&lt;&lt;</operator> <literal type="number" pos:start="35:42" pos:end="35:43">31</literal><operator pos:start="35:44" pos:end="35:44">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:61"><expr pos:start="37:5" pos:end="37:60"><call pos:start="37:5" pos:end="37:60"><name pos:start="37:5" pos:end="37:18">pci_data_write</name><argument_list pos:start="37:19" pos:end="37:60">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:22">phb</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:27">bus</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:44"><expr pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:32">phb</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:44">config_reg</name></name></expr></argument>, <argument pos:start="37:47" pos:end="37:56"><expr pos:start="37:47" pos:end="37:56"><name pos:start="37:47" pos:end="37:49">val</name> <operator pos:start="37:51" pos:end="37:51">&amp;</operator> <literal type="number" pos:start="37:53" pos:end="37:56">0xff</literal></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:75">/* clear PCI_STATUS_REC_MASTER_ABORT and PCI_STATUS_REC_TARGET_ABORT */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:10">status</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:49"><name pos:start="43:14" pos:end="43:25">pci_get_word</name><argument_list pos:start="43:26" pos:end="43:49">(<argument pos:start="43:27" pos:end="43:48"><expr pos:start="43:27" pos:end="43:48"><name pos:start="43:27" pos:end="43:35"><name pos:start="43:27" pos:end="43:27">d</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:35">config</name></name> <operator pos:start="43:37" pos:end="43:37">+</operator> <name pos:start="43:39" pos:end="43:48">PCI_STATUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:75"><expr pos:start="45:5" pos:end="45:74"><name pos:start="45:5" pos:end="45:10">status</name> <operator pos:start="45:12" pos:end="45:13">&amp;=</operator> <operator pos:start="45:15" pos:end="45:15">~</operator><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:43">PCI_STATUS_REC_MASTER_ABORT</name> <operator pos:start="45:45" pos:end="45:45">|</operator> <name pos:start="45:47" pos:end="45:73">PCI_STATUS_REC_TARGET_ABORT</name><operator pos:start="45:74" pos:end="45:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><call pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:16">pci_set_word</name><argument_list pos:start="47:17" pos:end="47:48">(<argument pos:start="47:18" pos:end="47:39"><expr pos:start="47:18" pos:end="47:39"><name pos:start="47:18" pos:end="47:26"><name pos:start="47:18" pos:end="47:18">d</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:26">config</name></name> <operator pos:start="47:28" pos:end="47:28">+</operator> <name pos:start="47:30" pos:end="47:39">PCI_STATUS</name></expr></argument>, <argument pos:start="47:42" pos:end="47:47"><expr pos:start="47:42" pos:end="47:47"><name pos:start="47:42" pos:end="47:47">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
