<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7339.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">spapr_create_phb</name><parameter_list pos:start="1:22" pos:end="7:66">(<parameter pos:start="1:23" pos:end="1:45"><decl pos:start="1:23" pos:end="1:45"><type pos:start="1:23" pos:end="1:45"><name pos:start="1:23" pos:end="1:38">sPAPREnvironment</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">spapr</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:41"><decl pos:start="3:23" pos:end="3:41"><type pos:start="3:23" pos:end="3:41"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:32">char</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:41">busname</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">uint64_t</name></type> <name pos:start="3:53" pos:end="3:56">buid</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:43"><decl pos:start="5:23" pos:end="5:43"><type pos:start="5:23" pos:end="5:43"><name pos:start="5:23" pos:end="5:30">uint64_t</name></type> <name pos:start="5:32" pos:end="5:43">mem_win_addr</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:66"><decl pos:start="5:46" pos:end="5:66"><type pos:start="5:46" pos:end="5:66"><name pos:start="5:46" pos:end="5:53">uint64_t</name></type> <name pos:start="5:55" pos:end="5:66">mem_win_size</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:42"><decl pos:start="7:23" pos:end="7:42"><type pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:30">uint64_t</name></type> <name pos:start="7:32" pos:end="7:42">io_win_addr</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:65"><decl pos:start="7:45" pos:end="7:65"><type pos:start="7:45" pos:end="7:65"><name pos:start="7:45" pos:end="7:52">uint64_t</name></type> <name pos:start="7:54" pos:end="7:65">msi_win_addr</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="39:1">{<block_content pos:start="11:5" pos:end="37:26">

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">dev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:7">dev</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:55"><name pos:start="15:11" pos:end="15:21">qdev_create</name><argument_list pos:start="15:22" pos:end="15:55">(<argument pos:start="15:23" pos:end="15:26"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">NULL</name></expr></argument>, <argument pos:start="15:29" pos:end="15:54"><expr pos:start="15:29" pos:end="15:54"><name pos:start="15:29" pos:end="15:54">TYPE_SPAPR_PCI_HOST_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15">busname</name></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:64">

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:28">qdev_prop_set_string</name><argument_list pos:start="21:29" pos:end="21:63">(<argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">dev</name></expr></argument>, <argument pos:start="21:35" pos:end="21:43"><expr pos:start="21:35" pos:end="21:43"><literal type="string" pos:start="21:35" pos:end="21:43">"busname"</literal></expr></argument>, <argument pos:start="21:46" pos:end="21:62"><expr pos:start="21:46" pos:end="21:62"><call pos:start="21:46" pos:end="21:62"><name pos:start="21:46" pos:end="21:53">g_strdup</name><argument_list pos:start="21:54" pos:end="21:62">(<argument pos:start="21:55" pos:end="21:61"><expr pos:start="21:55" pos:end="21:61"><name pos:start="21:55" pos:end="21:61">busname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><call pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:24">qdev_prop_set_uint64</name><argument_list pos:start="25:25" pos:end="25:43">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">dev</name></expr></argument>, <argument pos:start="25:31" pos:end="25:36"><expr pos:start="25:31" pos:end="25:36"><literal type="string" pos:start="25:31" pos:end="25:36">"buid"</literal></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:42">buid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><call pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:24">qdev_prop_set_uint64</name><argument_list pos:start="27:25" pos:end="27:59">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">dev</name></expr></argument>, <argument pos:start="27:31" pos:end="27:44"><expr pos:start="27:31" pos:end="27:44"><literal type="string" pos:start="27:31" pos:end="27:44">"mem_win_addr"</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:58"><expr pos:start="27:47" pos:end="27:58"><name pos:start="27:47" pos:end="27:58">mem_win_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:24">qdev_prop_set_uint64</name><argument_list pos:start="29:25" pos:end="29:59">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">dev</name></expr></argument>, <argument pos:start="29:31" pos:end="29:44"><expr pos:start="29:31" pos:end="29:44"><literal type="string" pos:start="29:31" pos:end="29:44">"mem_win_size"</literal></expr></argument>, <argument pos:start="29:47" pos:end="29:58"><expr pos:start="29:47" pos:end="29:58"><name pos:start="29:47" pos:end="29:58">mem_win_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:24">qdev_prop_set_uint64</name><argument_list pos:start="31:25" pos:end="31:57">(<argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">dev</name></expr></argument>, <argument pos:start="31:31" pos:end="31:43"><expr pos:start="31:31" pos:end="31:43"><literal type="string" pos:start="31:31" pos:end="31:43">"io_win_addr"</literal></expr></argument>, <argument pos:start="31:46" pos:end="31:56"><expr pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:56">io_win_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><call pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:24">qdev_prop_set_uint64</name><argument_list pos:start="33:25" pos:end="33:59">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">dev</name></expr></argument>, <argument pos:start="33:31" pos:end="33:44"><expr pos:start="33:31" pos:end="33:44"><literal type="string" pos:start="33:31" pos:end="33:44">"msi_win_addr"</literal></expr></argument>, <argument pos:start="33:47" pos:end="33:58"><expr pos:start="33:47" pos:end="33:58"><name pos:start="33:47" pos:end="33:58">msi_win_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><call pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:20">qdev_init_nofail</name><argument_list pos:start="37:21" pos:end="37:25">(<argument pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
