<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25295.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">VncClientInfo</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:42">qmp_query_vnc_client</name><parameter_list pos:start="1:43" pos:end="1:66">(<parameter pos:start="1:44" pos:end="1:65"><decl pos:start="1:44" pos:end="1:65"><type pos:start="1:44" pos:end="1:59"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:57">VncState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">client</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:16">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">sockaddr_storage</name></name></type> <name pos:start="5:29" pos:end="5:30">sa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">socklen_t</name></type> <name pos:start="7:15" pos:end="7:19">salen</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><sizeof pos:start="7:23" pos:end="7:32">sizeof<argument_list pos:start="7:29" pos:end="7:32">(<argument pos:start="7:30" pos:end="7:31"><expr pos:start="7:30" pos:end="7:31"><name pos:start="7:30" pos:end="7:31">sa</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:13">host</name><index pos:start="9:14" pos:end="9:25">[<expr pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:24">NI_MAXHOST</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:13">serv</name><index pos:start="11:14" pos:end="11:25">[<expr pos:start="11:15" pos:end="11:24"><name pos:start="11:15" pos:end="11:24">NI_MAXSERV</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">VncClientInfo</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">info</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:71">(<expr pos:start="17:9" pos:end="17:70"><call pos:start="17:9" pos:end="17:66"><name pos:start="17:9" pos:end="17:19">getpeername</name><argument_list pos:start="17:20" pos:end="17:66">(<argument pos:start="17:21" pos:end="17:33"><expr pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:26">client</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:33">csock</name></name></expr></argument>, <argument pos:start="17:36" pos:end="17:57"><expr pos:start="17:36" pos:end="17:57"><operator pos:start="17:36" pos:end="17:36">(</operator>struct <name pos:start="17:44" pos:end="17:51">sockaddr</name> <operator pos:start="17:53" pos:end="17:53">*</operator><operator pos:start="17:54" pos:end="17:54">)</operator><operator pos:start="17:55" pos:end="17:55">&amp;</operator><name pos:start="17:56" pos:end="17:57">sa</name></expr></argument>, <argument pos:start="17:60" pos:end="17:65"><expr pos:start="17:60" pos:end="17:65"><operator pos:start="17:60" pos:end="17:60">&amp;</operator><name pos:start="17:61" pos:end="17:65">salen</name></expr></argument>)</argument_list></call> <operator pos:start="17:68" pos:end="17:68">&lt;</operator> <literal type="number" pos:start="17:70" pos:end="17:70">0</literal></expr>)</condition> <block pos:start="17:73" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="31:57">(<expr pos:start="25:9" pos:end="31:56"><call pos:start="25:9" pos:end="31:52"><name pos:start="25:9" pos:end="25:19">getnameinfo</name><argument_list pos:start="25:20" pos:end="31:52">(<argument pos:start="25:21" pos:end="25:42"><expr pos:start="25:21" pos:end="25:42"><operator pos:start="25:21" pos:end="25:21">(</operator>struct <name pos:start="25:29" pos:end="25:36">sockaddr</name> <operator pos:start="25:38" pos:end="25:38">*</operator><operator pos:start="25:39" pos:end="25:39">)</operator><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:42">sa</name></expr></argument>, <argument pos:start="25:45" pos:end="25:49"><expr pos:start="25:45" pos:end="25:49"><name pos:start="25:45" pos:end="25:49">salen</name></expr></argument>,

                    <argument pos:start="27:21" pos:end="27:24"><expr pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:24">host</name></expr></argument>, <argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><sizeof pos:start="27:27" pos:end="27:38">sizeof<argument_list pos:start="27:33" pos:end="27:38">(<argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">host</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:24"><name pos:start="29:21" pos:end="29:24">serv</name></expr></argument>, <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><sizeof pos:start="29:27" pos:end="29:38">sizeof<argument_list pos:start="29:33" pos:end="29:38">(<argument pos:start="29:34" pos:end="29:37"><expr pos:start="29:34" pos:end="29:37"><name pos:start="29:34" pos:end="29:37">serv</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="31:21" pos:end="31:51"><expr pos:start="31:21" pos:end="31:51"><name pos:start="31:21" pos:end="31:34">NI_NUMERICHOST</name> <operator pos:start="31:36" pos:end="31:36">|</operator> <name pos:start="31:38" pos:end="31:51">NI_NUMERICSERV</name></expr></argument>)</argument_list></call> <operator pos:start="31:54" pos:end="31:54">&lt;</operator> <literal type="number" pos:start="31:56" pos:end="31:56">0</literal></expr>)</condition> <block pos:start="31:59" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:20">

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:8">info</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:35"><name pos:start="39:12" pos:end="39:20">g_malloc0</name><argument_list pos:start="39:21" pos:end="39:35">(<argument pos:start="39:22" pos:end="39:34"><expr pos:start="39:22" pos:end="39:34"><sizeof pos:start="39:22" pos:end="39:34">sizeof<argument_list pos:start="39:28" pos:end="39:34">(<argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><operator pos:start="39:29" pos:end="39:29">*</operator><name pos:start="39:30" pos:end="39:33">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:8">info</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:14">base</name></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:47"><name pos:start="41:18" pos:end="41:26">g_malloc0</name><argument_list pos:start="41:27" pos:end="41:47">(<argument pos:start="41:28" pos:end="41:46"><expr pos:start="41:28" pos:end="41:46"><sizeof pos:start="41:28" pos:end="41:46">sizeof<argument_list pos:start="41:34" pos:end="41:46">(<argument pos:start="41:35" pos:end="41:45"><expr pos:start="41:35" pos:end="41:45"><operator pos:start="41:35" pos:end="41:35">*</operator><name pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:39">info</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:45">base</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:8">info</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:14">base</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">host</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:37"><name pos:start="43:24" pos:end="43:31">g_strdup</name><argument_list pos:start="43:32" pos:end="43:37">(<argument pos:start="43:33" pos:end="43:36"><expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:8">info</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:14">base</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">service</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:40"><name pos:start="45:27" pos:end="45:34">g_strdup</name><argument_list pos:start="45:35" pos:end="45:40">(<argument pos:start="45:36" pos:end="45:39"><expr pos:start="45:36" pos:end="45:39"><name pos:start="45:36" pos:end="45:39">serv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:8">info</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:14">base</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:22">family</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:53"><name pos:start="47:26" pos:end="47:39">inet_netfamily</name><argument_list pos:start="47:40" pos:end="47:53">(<argument pos:start="47:41" pos:end="47:52"><expr pos:start="47:41" pos:end="47:52"><name pos:start="47:41" pos:end="47:52"><name pos:start="47:41" pos:end="47:42">sa</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:52">ss_family</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:8">info</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:14">base</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:25">websocket</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:45"><name pos:start="49:29" pos:end="49:34">client</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:45">websocket</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="62:0"><if pos:start="53:5" pos:end="62:0">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:14">client</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:19">tls</name></name></expr>)</condition> <block pos:start="53:22" pos:end="62:0">{<block_content pos:start="55:9" pos:end="57:56">

        <expr_stmt pos:start="55:9" pos:end="55:74"><expr pos:start="55:9" pos:end="55:73"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:12">info</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:24">x509_dname</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:73"><name pos:start="55:28" pos:end="55:60">qcrypto_tls_session_get_peer_name</name><argument_list pos:start="55:61" pos:end="55:73">(<argument pos:start="55:62" pos:end="55:72"><expr pos:start="55:62" pos:end="55:72"><name pos:start="55:62" pos:end="55:72"><name pos:start="55:62" pos:end="55:67">client</name><operator pos:start="55:68" pos:end="55:69">-&gt;</operator><name pos:start="55:70" pos:end="55:72">tls</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:12">info</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:28">has_x509_dname</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:47"><name pos:start="57:32" pos:end="57:35">info</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:47">x509_dname</name></name> <operator pos:start="57:49" pos:end="57:50">!=</operator> <name pos:start="57:52" pos:end="57:55">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="61:1" pos:end="61:22">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:22">CONFIG_VNC_SASL</name></cpp:ifdef>

    <if_stmt pos:start="63:5" pos:end="72:0"><if pos:start="63:5" pos:end="72:0">if <condition pos:start="63:8" pos:end="63:51">(<expr pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:14">client</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:20">sasl</name><operator pos:start="63:21" pos:end="63:21">.</operator><name pos:start="63:22" pos:end="63:25">conn</name></name> <operator pos:start="63:27" pos:end="63:28">&amp;&amp;</operator> <name pos:start="63:30" pos:end="63:50"><name pos:start="63:30" pos:end="63:35">client</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:41">sasl</name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:50">username</name></name></expr>)</condition> <block pos:start="63:53" pos:end="72:0">{<block_content pos:start="65:9" pos:end="67:62">

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:12">info</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:31">has_sasl_username</name></name> <operator pos:start="65:33" pos:end="65:33">=</operator> <name pos:start="65:35" pos:end="65:38">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:62"><expr pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:12">info</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:27">sasl_username</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <call pos:start="67:31" pos:end="67:61"><name pos:start="67:31" pos:end="67:38">g_strdup</name><argument_list pos:start="67:39" pos:end="67:61">(<argument pos:start="67:40" pos:end="67:60"><expr pos:start="67:40" pos:end="67:60"><name pos:start="67:40" pos:end="67:60"><name pos:start="67:40" pos:end="67:45">client</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:51">sasl</name><operator pos:start="67:52" pos:end="67:52">.</operator><name pos:start="67:53" pos:end="67:60">username</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <return pos:start="75:5" pos:end="75:16">return <expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">info</name></expr>;</return>

</block_content>}</block></function>
</unit>
