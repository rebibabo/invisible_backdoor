<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21235.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">video_thread</name><parameter_list pos:start="1:24" pos:end="1:34">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:24">= <expr pos:start="5:22" pos:end="5:24"><name pos:start="5:22" pos:end="5:24">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVPacket</name></type> <name pos:start="7:14" pos:end="7:17">pkt1</name></decl>, <decl pos:start="7:20" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:12"><modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">pkt</name> <init pos:start="7:25" pos:end="7:31">= <expr pos:start="7:27" pos:end="7:31"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">len1</name></decl>, <decl pos:start="9:15" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:25">got_picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:18">frame</name><init pos:start="11:19" pos:end="11:41">= <expr pos:start="11:21" pos:end="11:41"><call pos:start="11:21" pos:end="11:41"><name pos:start="11:21" pos:end="11:39">avcodec_alloc_frame</name><argument_list pos:start="11:40" pos:end="11:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:14">pts</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="119:5">for<control pos:start="17:8" pos:end="17:11">(<init pos:start="17:9" pos:end="17:9">;</init><condition pos:start="17:10" pos:end="17:10">;</condition><incr/>)</control> <block pos:start="17:13" pos:end="119:5">{<block_content pos:start="19:9" pos:end="117:41">

        <while pos:start="19:9" pos:end="23:9">while <condition pos:start="19:15" pos:end="19:55">(<expr pos:start="19:16" pos:end="19:54"><name pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:17">is</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:25">paused</name></name> <operator pos:start="19:27" pos:end="19:28">&amp;&amp;</operator> <operator pos:start="19:30" pos:end="19:30">!</operator><name pos:start="19:31" pos:end="19:54"><name pos:start="19:31" pos:end="19:32">is</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:40">videoq</name><operator pos:start="19:41" pos:end="19:41">.</operator><name pos:start="19:42" pos:end="19:54">abort_request</name></name></expr>)</condition> <block pos:start="19:57" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:26">

            <expr_stmt pos:start="21:13" pos:end="21:26"><expr pos:start="21:13" pos:end="21:25"><call pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:21">SDL_Delay</name><argument_list pos:start="21:22" pos:end="21:25">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><literal type="number" pos:start="21:23" pos:end="21:24">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:54">(<expr pos:start="25:13" pos:end="25:53"><call pos:start="25:13" pos:end="25:49"><name pos:start="25:13" pos:end="25:28">packet_queue_get</name><argument_list pos:start="25:29" pos:end="25:49">(<argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:32">is</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:40">videoq</name></name></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">pkt</name></expr></argument>, <argument pos:start="25:48" pos:end="25:48"><expr pos:start="25:48" pos:end="25:48"><literal type="number" pos:start="25:48" pos:end="25:48">1</literal></expr></argument>)</argument_list></call> <operator pos:start="25:51" pos:end="25:51">&lt;</operator> <literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if<condition pos:start="31:11" pos:end="31:39">(<expr pos:start="31:12" pos:end="31:38"><name pos:start="31:12" pos:end="31:20"><name pos:start="31:12" pos:end="31:14">pkt</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">data</name></name> <operator pos:start="31:22" pos:end="31:23">==</operator> <name pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:33">flush_pkt</name><operator pos:start="31:34" pos:end="31:34">.</operator><name pos:start="31:35" pos:end="31:38">data</name></name></expr>)</condition><block pos:start="31:40" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:21">

            <expr_stmt pos:start="33:13" pos:end="33:55"><expr pos:start="33:13" pos:end="33:54"><call pos:start="33:13" pos:end="33:54"><name pos:start="33:13" pos:end="33:33">avcodec_flush_buffers</name><argument_list pos:start="33:34" pos:end="33:54">(<argument pos:start="33:35" pos:end="33:53"><expr pos:start="33:35" pos:end="33:53"><name pos:start="33:35" pos:end="33:53"><name pos:start="33:35" pos:end="33:36">is</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:46">video_st</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:53">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="37:56"><expr pos:start="35:13" pos:end="37:55"><name pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:14">is</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:44">last_dts_for_fault_detection</name></name><operator pos:start="35:45" pos:end="35:45">=</operator>

            <name pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:14">is</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:44">last_pts_for_fault_detection</name></name><operator pos:start="37:45" pos:end="37:45">=</operator> <name pos:start="37:47" pos:end="37:55">INT64_MIN</name></expr>;</expr_stmt>

            <continue pos:start="39:13" pos:end="39:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="45:9" pos:end="47:33">/* NOTE: ipts is the PTS of the _first_ picture beginning in

           this packet, if any */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:10">is</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:20">video_st</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:27">codec</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:45">reordered_opaque</name></name><operator pos:start="49:46" pos:end="49:46">=</operator> <name pos:start="49:48" pos:end="49:55"><name pos:start="49:48" pos:end="49:50">pkt</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:55">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="55:41"><expr pos:start="51:9" pos:end="55:40"><name pos:start="51:9" pos:end="51:12">len1</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="55:40"><name pos:start="51:16" pos:end="51:36">avcodec_decode_video2</name><argument_list pos:start="51:37" pos:end="55:40">(<argument pos:start="51:38" pos:end="51:56"><expr pos:start="51:38" pos:end="51:56"><name pos:start="51:38" pos:end="51:56"><name pos:start="51:38" pos:end="51:39">is</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:49">video_st</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:56">codec</name></name></expr></argument>,

                                    <argument pos:start="53:37" pos:end="53:41"><expr pos:start="53:37" pos:end="53:41"><name pos:start="53:37" pos:end="53:41">frame</name></expr></argument>, <argument pos:start="53:44" pos:end="53:55"><expr pos:start="53:44" pos:end="53:55"><operator pos:start="53:44" pos:end="53:44">&amp;</operator><name pos:start="53:45" pos:end="53:55">got_picture</name></expr></argument>,

                                    <argument pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:39">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if<condition pos:start="59:11" pos:end="59:38">(<expr pos:start="59:12" pos:end="59:37"><name pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:14">pkt</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:19">dts</name></name> <operator pos:start="59:21" pos:end="59:22">!=</operator> <name pos:start="59:24" pos:end="59:37">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="59:39" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:55">

            <expr_stmt pos:start="61:13" pos:end="61:75"><expr pos:start="61:13" pos:end="61:74"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:14">is</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:26">faulty_dts</name></name> <operator pos:start="61:28" pos:end="61:29">+=</operator> <name pos:start="61:31" pos:end="61:38"><name pos:start="61:31" pos:end="61:33">pkt</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:38">dts</name></name> <operator pos:start="61:40" pos:end="61:41">&lt;=</operator> <name pos:start="61:43" pos:end="61:74"><name pos:start="61:43" pos:end="61:44">is</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:74">last_dts_for_fault_detection</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:55"><expr pos:start="63:13" pos:end="63:54"><name pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:14">is</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:44">last_dts_for_fault_detection</name></name><operator pos:start="63:45" pos:end="63:45">=</operator> <name pos:start="63:47" pos:end="63:54"><name pos:start="63:47" pos:end="63:49">pkt</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:54">dts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if<condition pos:start="67:11" pos:end="67:53">(<expr pos:start="67:12" pos:end="67:52"><name pos:start="67:12" pos:end="67:34"><name pos:start="67:12" pos:end="67:16">frame</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:34">reordered_opaque</name></name> <operator pos:start="67:36" pos:end="67:37">!=</operator> <name pos:start="67:39" pos:end="67:52">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="67:54" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:70">

            <expr_stmt pos:start="69:13" pos:end="69:90"><expr pos:start="69:13" pos:end="69:89"><name pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:14">is</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:26">faulty_pts</name></name> <operator pos:start="69:28" pos:end="69:29">+=</operator> <name pos:start="69:31" pos:end="69:53"><name pos:start="69:31" pos:end="69:35">frame</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:53">reordered_opaque</name></name> <operator pos:start="69:55" pos:end="69:56">&lt;=</operator> <name pos:start="69:58" pos:end="69:89"><name pos:start="69:58" pos:end="69:59">is</name><operator pos:start="69:60" pos:end="69:61">-&gt;</operator><name pos:start="69:62" pos:end="69:89">last_pts_for_fault_detection</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:70"><expr pos:start="71:13" pos:end="71:69"><name pos:start="71:13" pos:end="71:44"><name pos:start="71:13" pos:end="71:14">is</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:44">last_pts_for_fault_detection</name></name><operator pos:start="71:45" pos:end="71:45">=</operator> <name pos:start="71:47" pos:end="71:69"><name pos:start="71:47" pos:end="71:51">frame</name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:69">reordered_opaque</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="93:19"><if pos:start="77:9" pos:end="85:41">if<condition pos:start="77:11" pos:end="83:56">(   <expr pos:start="77:15" pos:end="83:55"><operator pos:start="77:15" pos:end="77:15">(</operator>   <name pos:start="77:19" pos:end="77:37">decoder_reorder_pts</name><operator pos:start="77:38" pos:end="77:39">==</operator><literal type="number" pos:start="77:40" pos:end="77:40">1</literal>

               <operator pos:start="79:16" pos:end="79:17">||</operator> <name pos:start="79:19" pos:end="79:37">decoder_reorder_pts</name> <operator pos:start="79:39" pos:end="79:40">&amp;&amp;</operator> <name pos:start="79:42" pos:end="79:55"><name pos:start="79:42" pos:end="79:43">is</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:55">faulty_pts</name></name><operator pos:start="79:56" pos:end="79:56">&lt;</operator><name pos:start="79:57" pos:end="79:70"><name pos:start="79:57" pos:end="79:58">is</name><operator pos:start="79:59" pos:end="79:60">-&gt;</operator><name pos:start="79:61" pos:end="79:70">faulty_dts</name></name>

               <operator pos:start="81:16" pos:end="81:17">||</operator> <name pos:start="81:19" pos:end="81:26"><name pos:start="81:19" pos:end="81:21">pkt</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:26">dts</name></name> <operator pos:start="81:28" pos:end="81:29">==</operator> <name pos:start="81:31" pos:end="81:44">AV_NOPTS_VALUE</name><operator pos:start="81:45" pos:end="81:45">)</operator>

           <operator pos:start="83:12" pos:end="83:13">&amp;&amp;</operator> <name pos:start="83:15" pos:end="83:37"><name pos:start="83:15" pos:end="83:19">frame</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:37">reordered_opaque</name></name> <operator pos:start="83:39" pos:end="83:40">!=</operator> <name pos:start="83:42" pos:end="83:55">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:41"><block_content pos:start="85:13" pos:end="85:41">

            <expr_stmt pos:start="85:13" pos:end="85:41"><expr pos:start="85:13" pos:end="85:40"><name pos:start="85:13" pos:end="85:15">pts</name><operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:40"><name pos:start="85:18" pos:end="85:22">frame</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:40">reordered_opaque</name></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="87:9" pos:end="89:26">else if<condition pos:start="87:16" pos:end="87:43">(<expr pos:start="87:17" pos:end="87:42"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:19">pkt</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:24">dts</name></name> <operator pos:start="87:26" pos:end="87:27">!=</operator> <name pos:start="87:29" pos:end="87:42">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:26"><block_content pos:start="89:13" pos:end="89:26">

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:15">pts</name><operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:25"><name pos:start="89:18" pos:end="89:20">pkt</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:25">dts</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="91:9" pos:end="93:19">else<block type="pseudo" pos:start="93:13" pos:end="93:19"><block_content pos:start="93:13" pos:end="93:19">

            <expr_stmt pos:start="93:13" pos:end="93:19"><expr pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:15">pts</name><operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:11">pts</name> <operator pos:start="95:13" pos:end="95:14">*=</operator> <call pos:start="95:16" pos:end="95:46"><name pos:start="95:16" pos:end="95:21">av_q2d</name><argument_list pos:start="95:22" pos:end="95:46">(<argument pos:start="95:23" pos:end="95:45"><expr pos:start="95:23" pos:end="95:45"><name pos:start="95:23" pos:end="95:45"><name pos:start="95:23" pos:end="95:24">is</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:34">video_st</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:45">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="99:1" pos:end="99:27">//            if (len1 &lt; 0)</comment>

<comment type="line" pos:start="101:1" pos:end="101:24">//                break;</comment>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:24">(<expr pos:start="103:13" pos:end="103:23"><name pos:start="103:13" pos:end="103:23">got_picture</name></expr>)</condition> <block pos:start="103:26" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:29">

            <if_stmt pos:start="105:13" pos:end="107:29"><if pos:start="105:13" pos:end="107:29">if <condition pos:start="105:16" pos:end="105:52">(<expr pos:start="105:17" pos:end="105:51"><call pos:start="105:17" pos:end="105:47"><name pos:start="105:17" pos:end="105:31">output_picture2</name><argument_list pos:start="105:32" pos:end="105:47">(<argument pos:start="105:33" pos:end="105:34"><expr pos:start="105:33" pos:end="105:34"><name pos:start="105:33" pos:end="105:34">is</name></expr></argument>, <argument pos:start="105:37" pos:end="105:41"><expr pos:start="105:37" pos:end="105:41"><name pos:start="105:37" pos:end="105:41">frame</name></expr></argument>, <argument pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><name pos:start="105:44" pos:end="105:46">pts</name></expr></argument>)</argument_list></call> <operator pos:start="105:49" pos:end="105:49">&lt;</operator> <literal type="number" pos:start="105:51" pos:end="105:51">0</literal></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:29"><block_content pos:start="107:17" pos:end="107:29">

                <goto pos:start="107:17" pos:end="107:29">goto <name pos:start="107:22" pos:end="107:28">the_end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><call pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:22">av_free_packet</name><argument_list pos:start="111:23" pos:end="111:27">(<argument pos:start="111:24" pos:end="111:26"><expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="117:41"><if pos:start="113:9" pos:end="117:41">if <condition pos:start="113:12" pos:end="113:17">(<expr pos:start="113:13" pos:end="113:16"><name pos:start="113:13" pos:end="113:16">step</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="117:41"><block_content pos:start="115:13" pos:end="117:41">

            <if_stmt pos:start="115:13" pos:end="117:41"><if pos:start="115:13" pos:end="117:41">if <condition pos:start="115:16" pos:end="115:27">(<expr pos:start="115:17" pos:end="115:26"><name pos:start="115:17" pos:end="115:26">cur_stream</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:41"><block_content pos:start="117:17" pos:end="117:41">

                <expr_stmt pos:start="117:17" pos:end="117:41"><expr pos:start="117:17" pos:end="117:40"><call pos:start="117:17" pos:end="117:40"><name pos:start="117:17" pos:end="117:28">stream_pause</name><argument_list pos:start="117:29" pos:end="117:40">(<argument pos:start="117:30" pos:end="117:39"><expr pos:start="117:30" pos:end="117:39"><name pos:start="117:30" pos:end="117:39">cur_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

 <label pos:start="121:2" pos:end="121:9"><name pos:start="121:2" pos:end="121:8">the_end</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:19"><expr pos:start="123:5" pos:end="123:18"><call pos:start="123:5" pos:end="123:18"><name pos:start="123:5" pos:end="123:11">av_free</name><argument_list pos:start="123:12" pos:end="123:18">(<argument pos:start="123:13" pos:end="123:17"><expr pos:start="123:13" pos:end="123:17"><name pos:start="123:13" pos:end="123:17">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
