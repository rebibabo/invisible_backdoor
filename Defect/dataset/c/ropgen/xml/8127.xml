<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8127.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">ff_amf_tag_size</name><parameter_list pos:start="1:20" pos:end="1:65">(<parameter pos:start="1:21" pos:end="1:39"><decl pos:start="1:21" pos:end="1:39"><type pos:start="1:21" pos:end="1:39"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:33">uint8_t</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">data</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">data_end</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">base</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:25">(<expr pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:12">data</name> <operator pos:start="9:14" pos:end="9:15">&gt;=</operator> <name pos:start="9:17" pos:end="9:24">data_end</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <switch pos:start="13:5" pos:end="67:5">switch <condition pos:start="13:12" pos:end="13:20">(<expr pos:start="13:13" pos:end="13:19"><operator pos:start="13:13" pos:end="13:13">*</operator><name pos:start="13:14" pos:end="13:17">data</name><operator pos:start="13:18" pos:end="13:19">++</operator></expr>)</condition> <block pos:start="13:22" pos:end="67:5">{<block_content pos:start="15:5" pos:end="65:46">

    <case pos:start="15:5" pos:end="15:30">case <expr pos:start="15:10" pos:end="15:29"><name pos:start="15:10" pos:end="15:29">AMF_DATA_TYPE_NUMBER</name></expr>:</case>      <return pos:start="15:37" pos:end="15:45">return <expr pos:start="15:44" pos:end="15:44"><literal type="number" pos:start="15:44" pos:end="15:44">9</literal></expr>;</return>

    <case pos:start="17:5" pos:end="17:28">case <expr pos:start="17:10" pos:end="17:27"><name pos:start="17:10" pos:end="17:27">AMF_DATA_TYPE_BOOL</name></expr>:</case>        <return pos:start="17:37" pos:end="17:45">return <expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">2</literal></expr>;</return>

    <case pos:start="19:5" pos:end="19:30">case <expr pos:start="19:10" pos:end="19:29"><name pos:start="19:10" pos:end="19:29">AMF_DATA_TYPE_STRING</name></expr>:</case>      <return pos:start="19:37" pos:end="19:61">return <expr pos:start="19:44" pos:end="19:60"><literal type="number" pos:start="19:44" pos:end="19:46">3</literal> <operator pos:start="19:46" pos:end="19:46">+</operator> <call pos:start="19:48" pos:end="19:60"><name pos:start="19:48" pos:end="19:54">AV_RB16</name><argument_list pos:start="19:55" pos:end="19:60">(<argument pos:start="19:56" pos:end="19:59"><expr pos:start="19:56" pos:end="19:59"><name pos:start="19:56" pos:end="19:59">data</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="21:5" pos:end="21:35">case <expr pos:start="21:10" pos:end="21:34"><name pos:start="21:10" pos:end="21:34">AMF_DATA_TYPE_LONG_STRING</name></expr>:</case> <return pos:start="21:37" pos:end="21:61">return <expr pos:start="21:44" pos:end="21:60"><literal type="number" pos:start="21:44" pos:end="21:46">5</literal> <operator pos:start="21:46" pos:end="21:46">+</operator> <call pos:start="21:48" pos:end="21:60"><name pos:start="21:48" pos:end="21:54">AV_RB32</name><argument_list pos:start="21:55" pos:end="21:60">(<argument pos:start="21:56" pos:end="21:59"><expr pos:start="21:56" pos:end="21:59"><name pos:start="21:56" pos:end="21:59">data</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="23:5" pos:end="23:28">case <expr pos:start="23:10" pos:end="23:27"><name pos:start="23:10" pos:end="23:27">AMF_DATA_TYPE_NULL</name></expr>:</case>        <return pos:start="23:37" pos:end="23:45">return <expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">1</literal></expr>;</return>

    <case pos:start="25:5" pos:end="25:29">case <expr pos:start="25:10" pos:end="25:28"><name pos:start="25:10" pos:end="25:28">AMF_DATA_TYPE_ARRAY</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">data</name> <operator pos:start="27:14" pos:end="27:15">+=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">4</literal></expr>;</expr_stmt>

    <case pos:start="29:5" pos:end="29:30">case <expr pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:29">AMF_DATA_TYPE_OBJECT</name></expr>:</case>

        <for pos:start="31:9" pos:end="59:9">for <control pos:start="31:13" pos:end="31:16">(<init pos:start="31:14" pos:end="31:14">;</init><condition pos:start="31:15" pos:end="31:15">;</condition><incr/>)</control> <block pos:start="31:18" pos:end="59:9">{<block_content pos:start="33:13" pos:end="57:22">

            <decl_stmt pos:start="33:13" pos:end="33:50"><decl pos:start="33:13" pos:end="33:49"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:20">size</name> <init pos:start="33:22" pos:end="33:49">= <expr pos:start="33:24" pos:end="33:49"><call pos:start="33:24" pos:end="33:49"><name pos:start="33:24" pos:end="33:42">bytestream_get_be16</name><argument_list pos:start="33:43" pos:end="33:49">(<argument pos:start="33:44" pos:end="33:48"><expr pos:start="33:44" pos:end="33:48"><operator pos:start="33:44" pos:end="33:44">&amp;</operator><name pos:start="33:45" pos:end="33:48">data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:18"><decl pos:start="35:13" pos:end="35:17"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:17">t</name></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:22">(<expr pos:start="37:17" pos:end="37:21"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:21">size</name></expr>)</condition> <block pos:start="37:24" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:22">

                <expr_stmt pos:start="39:17" pos:end="39:23"><expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:20">data</name><operator pos:start="39:21" pos:end="39:22">++</operator></expr>;</expr_stmt>

                <break pos:start="41:17" pos:end="41:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:62">(<expr pos:start="45:17" pos:end="45:61"><name pos:start="45:17" pos:end="45:20">data</name> <operator pos:start="45:22" pos:end="45:22">+</operator> <name pos:start="45:24" pos:end="45:27">size</name> <operator pos:start="45:29" pos:end="45:30">&gt;=</operator> <name pos:start="45:32" pos:end="45:39">data_end</name> <operator pos:start="45:41" pos:end="45:42">||</operator> <name pos:start="45:44" pos:end="45:47">data</name> <operator pos:start="45:49" pos:end="45:49">+</operator> <name pos:start="45:51" pos:end="45:54">size</name> <operator pos:start="45:56" pos:end="45:56">&lt;</operator> <name pos:start="45:58" pos:end="45:61">data</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:16">data</name> <operator pos:start="49:18" pos:end="49:19">+=</operator> <name pos:start="49:21" pos:end="49:24">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:13">t</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:47"><name pos:start="51:17" pos:end="51:31">ff_amf_tag_size</name><argument_list pos:start="51:32" pos:end="51:47">(<argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">data</name></expr></argument>, <argument pos:start="51:39" pos:end="51:46"><expr pos:start="51:39" pos:end="51:46"><name pos:start="51:39" pos:end="51:46">data_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:26"><if pos:start="53:13" pos:end="55:26">if <condition pos:start="53:16" pos:end="53:46">(<expr pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:17">t</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal> <operator pos:start="53:23" pos:end="53:24">||</operator> <name pos:start="53:26" pos:end="53:29">data</name> <operator pos:start="53:31" pos:end="53:31">+</operator> <name pos:start="53:33" pos:end="53:33">t</name> <operator pos:start="53:35" pos:end="53:36">&gt;=</operator> <name pos:start="53:38" pos:end="53:45">data_end</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:26"><block_content pos:start="55:17" pos:end="55:26">

                <return pos:start="55:17" pos:end="55:26">return <expr pos:start="55:24" pos:end="55:25"><operator pos:start="55:24" pos:end="55:24">-</operator><literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:22"><expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:16">data</name> <operator pos:start="57:18" pos:end="57:19">+=</operator> <name pos:start="57:21" pos:end="57:21">t</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <return pos:start="61:9" pos:end="61:27">return <expr pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:19">data</name> <operator pos:start="61:21" pos:end="61:21">-</operator> <name pos:start="61:23" pos:end="61:26">base</name></expr>;</return>

    <case pos:start="63:5" pos:end="63:34">case <expr pos:start="63:10" pos:end="63:33"><name pos:start="63:10" pos:end="63:33">AMF_DATA_TYPE_OBJECT_END</name></expr>:</case>  <return pos:start="63:37" pos:end="63:45">return <expr pos:start="63:44" pos:end="63:44"><literal type="number" pos:start="63:44" pos:end="63:44">1</literal></expr>;</return>

    <default pos:start="65:5" pos:end="65:12">default:</default>                        <return pos:start="65:37" pos:end="65:46">return <expr pos:start="65:44" pos:end="65:45"><operator pos:start="65:44" pos:end="65:44">-</operator><literal type="number" pos:start="65:45" pos:end="65:45">1</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
