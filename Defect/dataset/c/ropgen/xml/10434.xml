<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10434.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:60"><name pos:start="1:1" pos:end="1:17">e1000e_set_pbaclr</name><argument_list pos:start="1:18" pos:end="1:60">(<argument pos:start="1:19" pos:end="1:34">E1000ECore *core</argument>, <argument pos:start="1:37" pos:end="1:45">int index</argument>, <argument pos:start="1:48" pos:end="1:59">uint32_t val</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:8">core</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:13">mac</name><index pos:start="9:14" pos:end="9:21">[<expr pos:start="9:15" pos:end="9:20"><name pos:start="9:15" pos:end="9:20">PBACLR</name></expr>]</index></name> <operator pos:start="9:23" pos:end="9:23">=</operator> <name pos:start="9:25" pos:end="9:27">val</name> <operator pos:start="9:29" pos:end="9:29">&amp;</operator> <name pos:start="9:31" pos:end="9:53">E1000_PBACLR_VALID_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:34">(<expr pos:start="13:9" pos:end="13:33"><call pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:20">msix_enabled</name><argument_list pos:start="13:21" pos:end="13:33">(<argument pos:start="13:22" pos:end="13:32"><expr pos:start="13:22" pos:end="13:32"><name pos:start="13:22" pos:end="13:32"><name pos:start="13:22" pos:end="13:25">core</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:32">owner</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:36" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="21:5" pos:end="29:5">for <control pos:start="21:9" pos:end="21:45">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:40"><expr pos:start="21:17" pos:end="21:39"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:39">E1000E_MSIX_VEC_NUM</name></expr>;</condition> <incr pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:42">i</name><operator pos:start="21:43" pos:end="21:44">++</operator></expr></incr>)</control> <block pos:start="21:47" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:9">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:39">(<expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:16">core</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">mac</name><index pos:start="23:22" pos:end="23:29">[<expr pos:start="23:23" pos:end="23:28"><name pos:start="23:23" pos:end="23:28">PBACLR</name></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <call pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:35">BIT</name><argument_list pos:start="23:36" pos:end="23:38">(<argument pos:start="23:37" pos:end="23:37"><expr pos:start="23:37" pos:end="23:37"><name pos:start="23:37" pos:end="23:37">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:41" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:45">

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:28">msix_clr_pending</name><argument_list pos:start="25:29" pos:end="25:44">(<argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:33">core</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:40">owner</name></name></expr></argument>, <argument pos:start="25:43" pos:end="25:43"><expr pos:start="25:43" pos:end="25:43"><name pos:start="25:43" pos:end="25:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
