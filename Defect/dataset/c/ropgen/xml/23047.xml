<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23047.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">blkconf_geometry</name><parameter_list pos:start="1:22" pos:end="5:35">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:31">BlockConf</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:37">conf</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:42">int</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">ptrans</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:39"><decl pos:start="3:23" pos:end="3:39"><type pos:start="3:23" pos:end="3:39"><name pos:start="3:23" pos:end="3:30">unsigned</name></type> <name pos:start="3:32" pos:end="3:39">cyls_max</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:59"><decl pos:start="3:42" pos:end="3:59"><type pos:start="3:42" pos:end="3:59"><name pos:start="3:42" pos:end="3:49">unsigned</name></type> <name pos:start="3:51" pos:end="3:59">heads_max</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:78"><decl pos:start="3:62" pos:end="3:78"><type pos:start="3:62" pos:end="3:78"><name pos:start="3:62" pos:end="3:69">unsigned</name></type> <name pos:start="3:71" pos:end="3:78">secs_max</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:34"><decl pos:start="5:23" pos:end="5:34"><type pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:27">Error</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier><modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:5">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">DriveInfo</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">dinfo</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:13">conf</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:19">cyls</name></name> <operator pos:start="13:21" pos:end="13:22">&amp;&amp;</operator> <operator pos:start="13:24" pos:end="13:24">!</operator><name pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:28">conf</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:35">heads</name></name> <operator pos:start="13:37" pos:end="13:38">&amp;&amp;</operator> <operator pos:start="13:40" pos:end="13:40">!</operator><name pos:start="13:41" pos:end="13:50"><name pos:start="13:41" pos:end="13:44">conf</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:50">secs</name></name></expr>)</condition> <block pos:start="13:53" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:9">

        <comment type="block" pos:start="15:9" pos:end="15:71">/* try to fall back to value set with legacy -drive cyls=... */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:13">dinfo</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:47"><name pos:start="17:17" pos:end="17:37">drive_get_by_blockdev</name><argument_list pos:start="17:38" pos:end="17:47">(<argument pos:start="17:39" pos:end="17:46"><expr pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:42">conf</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:46">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:12">conf</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:18">cyls</name></name>  <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:33"><name pos:start="19:23" pos:end="19:27">dinfo</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">cyls</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:12">conf</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:19">heads</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:27">dinfo</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:34">heads</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:12">conf</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:18">secs</name></name>  <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:27">dinfo</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">secs</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:19">(<expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:18">ptrans</name></expr>)</condition> <block pos:start="25:21" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:35">

            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:19">ptrans</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:27">dinfo</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:34">trans</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:51">(<expr pos:start="33:9" pos:end="33:50"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:19"><name pos:start="33:10" pos:end="33:13">conf</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">cyls</name></name> <operator pos:start="33:21" pos:end="33:22">&amp;&amp;</operator> <operator pos:start="33:24" pos:end="33:24">!</operator><name pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:28">conf</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:35">heads</name></name> <operator pos:start="33:37" pos:end="33:38">&amp;&amp;</operator> <operator pos:start="33:40" pos:end="33:40">!</operator><name pos:start="33:41" pos:end="33:50"><name pos:start="33:41" pos:end="33:44">conf</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:50">secs</name></name></expr>)</condition> <block pos:start="33:53" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:34">

        <expr_stmt pos:start="35:9" pos:end="39:34"><expr pos:start="35:9" pos:end="39:33"><call pos:start="35:9" pos:end="39:33"><name pos:start="35:9" pos:end="35:25">hd_geometry_guess</name><argument_list pos:start="35:26" pos:end="39:33">(<argument pos:start="35:27" pos:end="35:34"><expr pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:30">conf</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:34">bs</name></name></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:37"><name pos:start="37:28" pos:end="37:31">conf</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:37">cyls</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:51"><expr pos:start="37:40" pos:end="37:51"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:51"><name pos:start="37:41" pos:end="37:44">conf</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:51">heads</name></name></expr></argument>, <argument pos:start="37:54" pos:end="37:64"><expr pos:start="37:54" pos:end="37:64"><operator pos:start="37:54" pos:end="37:54">&amp;</operator><name pos:start="37:55" pos:end="37:64"><name pos:start="37:55" pos:end="37:58">conf</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:64">secs</name></name></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:32"><expr pos:start="39:27" pos:end="39:32"><name pos:start="39:27" pos:end="39:32">ptrans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="45:5">else if <condition pos:start="41:15" pos:end="41:62">(<expr pos:start="41:16" pos:end="41:61"><name pos:start="41:16" pos:end="41:21">ptrans</name> <operator pos:start="41:23" pos:end="41:24">&amp;&amp;</operator> <operator pos:start="41:26" pos:end="41:26">*</operator><name pos:start="41:27" pos:end="41:32">ptrans</name> <operator pos:start="41:34" pos:end="41:35">==</operator> <name pos:start="41:37" pos:end="41:61">BIOS_ATA_TRANSLATION_AUTO</name></expr>)</condition> <block pos:start="41:64" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:78">

        <expr_stmt pos:start="43:9" pos:end="43:78"><expr pos:start="43:9" pos:end="43:77"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:15">ptrans</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:77"><name pos:start="43:19" pos:end="43:40">hd_bios_chs_auto_trans</name><argument_list pos:start="43:41" pos:end="43:77">(<argument pos:start="43:42" pos:end="43:51"><expr pos:start="43:42" pos:end="43:51"><name pos:start="43:42" pos:end="43:51"><name pos:start="43:42" pos:end="43:45">conf</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:51">cyls</name></name></expr></argument>, <argument pos:start="43:54" pos:end="43:64"><expr pos:start="43:54" pos:end="43:64"><name pos:start="43:54" pos:end="43:64"><name pos:start="43:54" pos:end="43:57">conf</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:64">heads</name></name></expr></argument>, <argument pos:start="43:67" pos:end="43:76"><expr pos:start="43:67" pos:end="43:76"><name pos:start="43:67" pos:end="43:76"><name pos:start="43:67" pos:end="43:70">conf</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:76">secs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="73:5"><if pos:start="47:5" pos:end="73:5">if <condition pos:start="47:8" pos:end="47:48">(<expr pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:12">conf</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:18">cyls</name></name> <operator pos:start="47:20" pos:end="47:21">||</operator> <name pos:start="47:23" pos:end="47:33"><name pos:start="47:23" pos:end="47:26">conf</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:33">heads</name></name> <operator pos:start="47:35" pos:end="47:36">||</operator> <name pos:start="47:38" pos:end="47:47"><name pos:start="47:38" pos:end="47:41">conf</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">secs</name></name></expr>)</condition> <block pos:start="47:50" pos:end="73:5">{<block_content pos:start="49:9" pos:end="71:9">

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:52">(<expr pos:start="49:13" pos:end="49:51"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:16">conf</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:22">cyls</name></name> <operator pos:start="49:24" pos:end="49:24">&lt;</operator> <literal type="number" pos:start="49:26" pos:end="49:26">1</literal> <operator pos:start="49:28" pos:end="49:29">||</operator> <name pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:34">conf</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">cyls</name></name> <operator pos:start="49:42" pos:end="49:42">&gt;</operator> <name pos:start="49:44" pos:end="49:51">cyls_max</name></expr>)</condition> <block pos:start="49:54" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:19">

            <expr_stmt pos:start="51:13" pos:end="51:72"><expr pos:start="51:13" pos:end="51:71"><call pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:22">error_setg</name><argument_list pos:start="51:23" pos:end="51:71">(<argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">errp</name></expr></argument>, <argument pos:start="51:30" pos:end="51:60"><expr pos:start="51:30" pos:end="51:60"><literal type="string" pos:start="51:30" pos:end="51:60">"cyls must be between 1 and %u"</literal></expr></argument>, <argument pos:start="51:63" pos:end="51:70"><expr pos:start="51:63" pos:end="51:70"><name pos:start="51:63" pos:end="51:70">cyls_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:55">(<expr pos:start="57:13" pos:end="57:54"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:16">conf</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">heads</name></name> <operator pos:start="57:25" pos:end="57:25">&lt;</operator> <literal type="number" pos:start="57:27" pos:end="57:27">1</literal> <operator pos:start="57:29" pos:end="57:30">||</operator> <name pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:35">conf</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:42">heads</name></name> <operator pos:start="57:44" pos:end="57:44">&gt;</operator> <name pos:start="57:46" pos:end="57:54">heads_max</name></expr>)</condition> <block pos:start="57:57" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:19">

            <expr_stmt pos:start="59:13" pos:end="59:74"><expr pos:start="59:13" pos:end="59:73"><call pos:start="59:13" pos:end="59:73"><name pos:start="59:13" pos:end="59:22">error_setg</name><argument_list pos:start="59:23" pos:end="59:73">(<argument pos:start="59:24" pos:end="59:27"><expr pos:start="59:24" pos:end="59:27"><name pos:start="59:24" pos:end="59:27">errp</name></expr></argument>, <argument pos:start="59:30" pos:end="59:61"><expr pos:start="59:30" pos:end="59:61"><literal type="string" pos:start="59:30" pos:end="59:61">"heads must be between 1 and %u"</literal></expr></argument>, <argument pos:start="59:64" pos:end="59:72"><expr pos:start="59:64" pos:end="59:72"><name pos:start="59:64" pos:end="59:72">heads_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:52">(<expr pos:start="65:13" pos:end="65:51"><name pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:16">conf</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:22">secs</name></name> <operator pos:start="65:24" pos:end="65:24">&lt;</operator> <literal type="number" pos:start="65:26" pos:end="65:26">1</literal> <operator pos:start="65:28" pos:end="65:29">||</operator> <name pos:start="65:31" pos:end="65:40"><name pos:start="65:31" pos:end="65:34">conf</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:40">secs</name></name> <operator pos:start="65:42" pos:end="65:42">&gt;</operator> <name pos:start="65:44" pos:end="65:51">secs_max</name></expr>)</condition> <block pos:start="65:54" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:19">

            <expr_stmt pos:start="67:13" pos:end="67:72"><expr pos:start="67:13" pos:end="67:71"><call pos:start="67:13" pos:end="67:71"><name pos:start="67:13" pos:end="67:22">error_setg</name><argument_list pos:start="67:23" pos:end="67:71">(<argument pos:start="67:24" pos:end="67:27"><expr pos:start="67:24" pos:end="67:27"><name pos:start="67:24" pos:end="67:27">errp</name></expr></argument>, <argument pos:start="67:30" pos:end="67:60"><expr pos:start="67:30" pos:end="67:60"><literal type="string" pos:start="67:30" pos:end="67:60">"secs must be between 1 and %u"</literal></expr></argument>, <argument pos:start="67:63" pos:end="67:70"><expr pos:start="67:63" pos:end="67:70"><name pos:start="67:63" pos:end="67:70">secs_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
