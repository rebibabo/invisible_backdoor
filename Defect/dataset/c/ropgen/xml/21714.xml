<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21714.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">filter_mb_edgech</name><parameter_list pos:start="1:29" pos:end="1:91">( <parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">H264Context</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">h</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pix</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:70">stride</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:78"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:81"><name pos:start="1:77" pos:end="1:78">bS</name><index pos:start="1:79" pos:end="1:81">[<expr pos:start="1:80" pos:end="1:80"><literal type="number" pos:start="1:80" pos:end="1:80">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:89"><decl pos:start="1:84" pos:end="1:89"><type pos:start="1:84" pos:end="1:89"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:89">qp</name></decl></parameter> )</parameter_list> <block pos:start="1:93" pos:end="87:1">{<block_content pos:start="3:5" pos:end="85:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:21">index_a</name> <init pos:start="5:23" pos:end="5:68">= <expr pos:start="5:25" pos:end="5:68"><call pos:start="5:25" pos:end="5:68"><name pos:start="5:25" pos:end="5:28">clip</name><argument_list pos:start="5:29" pos:end="5:68">( <argument pos:start="5:31" pos:end="5:59"><expr pos:start="5:31" pos:end="5:59"><name pos:start="5:31" pos:end="5:32">qp</name> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:59"><name pos:start="5:36" pos:end="5:36">h</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:59">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="5:62" pos:end="5:62"><expr pos:start="5:62" pos:end="5:62"><literal type="number" pos:start="5:62" pos:end="5:62">0</literal></expr></argument>, <argument pos:start="5:65" pos:end="5:66"><expr pos:start="5:65" pos:end="5:66"><literal type="number" pos:start="5:65" pos:end="5:66">51</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">alpha</name> <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:33">alpha_table</name><index pos:start="7:34" pos:end="7:42">[<expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">index_a</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:74"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">beta</name>  <init pos:start="9:21" pos:end="9:74">= <expr pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:32">beta_table</name><index pos:start="9:33" pos:end="9:74">[<expr pos:start="9:34" pos:end="9:73"><call pos:start="9:34" pos:end="9:73"><name pos:start="9:34" pos:end="9:37">clip</name><argument_list pos:start="9:38" pos:end="9:73">( <argument pos:start="9:40" pos:end="9:64"><expr pos:start="9:40" pos:end="9:64"><name pos:start="9:40" pos:end="9:41">qp</name> <operator pos:start="9:43" pos:end="9:43">+</operator> <name pos:start="9:45" pos:end="9:64"><name pos:start="9:45" pos:end="9:45">h</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:64">slice_beta_offset</name></name></expr></argument>, <argument pos:start="9:67" pos:end="9:67"><expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">0</literal></expr></argument>, <argument pos:start="9:70" pos:end="9:71"><expr pos:start="9:70" pos:end="9:71"><literal type="number" pos:start="9:70" pos:end="9:71">51</literal></expr></argument> )</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:22">pix_next</name>  <init pos:start="11:25" pos:end="11:32">= <expr pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:32">stride</name></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="85:5">for<control pos:start="15:8" pos:end="15:28">( <init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:21"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">4</literal></expr>;</condition> <incr pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:24">i</name><operator pos:start="15:25" pos:end="15:26">++</operator></expr></incr> )</control>

    <block pos:start="17:5" pos:end="85:5">{<block_content pos:start="19:9" pos:end="83:9">

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if<condition pos:start="19:11" pos:end="19:24">( <expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:14">bS</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">i</name></expr>]</index></name> <operator pos:start="19:19" pos:end="19:20">==</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr> )</condition> <block pos:start="19:26" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:21">

            <expr_stmt pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">pix</name> <operator pos:start="21:17" pos:end="21:18">+=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">2</literal></expr>;</expr_stmt>

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:60">/* 2px edge length (see deblocking_filter_edgecv) */</comment>

        <for pos:start="31:9" pos:end="83:9">for<control pos:start="31:12" pos:end="31:32">( <init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">d</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">d</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">2</literal></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">d</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr> )</control> <block pos:start="31:34" pos:end="83:9">{<block_content pos:start="33:13" pos:end="81:18">

            <decl_stmt pos:start="33:13" pos:end="33:48"><decl pos:start="33:13" pos:end="33:47"><type pos:start="33:13" pos:end="33:25"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:25">uint8_t</name></type> <name pos:start="33:27" pos:end="33:28">p0</name> <init pos:start="33:30" pos:end="33:47">= <expr pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:34">pix</name><index pos:start="33:35" pos:end="33:47">[<expr pos:start="33:36" pos:end="33:46"><operator pos:start="33:36" pos:end="33:36">-</operator><literal type="number" pos:start="33:37" pos:end="33:37">1</literal><operator pos:start="33:38" pos:end="33:38">*</operator><name pos:start="33:39" pos:end="33:46">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:48"><decl pos:start="35:13" pos:end="35:47"><type pos:start="35:13" pos:end="35:25"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:25">uint8_t</name></type> <name pos:start="35:27" pos:end="35:28">p1</name> <init pos:start="35:30" pos:end="35:47">= <expr pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:34">pix</name><index pos:start="35:35" pos:end="35:47">[<expr pos:start="35:36" pos:end="35:46"><operator pos:start="35:36" pos:end="35:36">-</operator><literal type="number" pos:start="35:37" pos:end="35:37">2</literal><operator pos:start="35:38" pos:end="35:38">*</operator><name pos:start="35:39" pos:end="35:46">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:38"><decl pos:start="37:13" pos:end="37:37"><type pos:start="37:13" pos:end="37:25"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:25">uint8_t</name></type> <name pos:start="37:27" pos:end="37:28">q0</name> <init pos:start="37:30" pos:end="37:37">= <expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:34">pix</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:47"><decl pos:start="39:13" pos:end="39:46"><type pos:start="39:13" pos:end="39:25"><specifier pos:start="39:13" pos:end="39:17">const</specifier> <name pos:start="39:19" pos:end="39:25">uint8_t</name></type> <name pos:start="39:27" pos:end="39:28">q1</name> <init pos:start="39:30" pos:end="39:46">= <expr pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:34">pix</name><index pos:start="39:35" pos:end="39:46">[<expr pos:start="39:36" pos:end="39:45"><literal type="number" pos:start="39:36" pos:end="39:36">1</literal><operator pos:start="39:37" pos:end="39:37">*</operator><name pos:start="39:38" pos:end="39:45">pix_next</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="43:13" pos:end="53:13"><if pos:start="43:13" pos:end="53:13">if<condition pos:start="43:15" pos:end="47:40">( <expr pos:start="43:17" pos:end="47:38"><call pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:19">abs</name><argument_list pos:start="43:20" pos:end="43:30">( <argument pos:start="43:22" pos:end="43:28"><expr pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:23">p0</name> <operator pos:start="43:25" pos:end="43:25">-</operator> <name pos:start="43:27" pos:end="43:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="43:32" pos:end="43:33">&gt;=</operator> <name pos:start="43:35" pos:end="43:39">alpha</name> <operator pos:start="43:41" pos:end="43:42">||</operator>

                <call pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:19">abs</name><argument_list pos:start="45:20" pos:end="45:30">( <argument pos:start="45:22" pos:end="45:28"><expr pos:start="45:22" pos:end="45:28"><name pos:start="45:22" pos:end="45:23">p1</name> <operator pos:start="45:25" pos:end="45:25">-</operator> <name pos:start="45:27" pos:end="45:28">p0</name></expr></argument> )</argument_list></call> <operator pos:start="45:32" pos:end="45:33">&gt;=</operator> <name pos:start="45:35" pos:end="45:38">beta</name> <operator pos:start="45:40" pos:end="45:41">||</operator>

                <call pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">abs</name><argument_list pos:start="47:20" pos:end="47:30">( <argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:23">q1</name> <operator pos:start="47:25" pos:end="47:25">-</operator> <name pos:start="47:27" pos:end="47:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="47:32" pos:end="47:33">&gt;=</operator> <name pos:start="47:35" pos:end="47:38">beta</name></expr> )</condition> <block pos:start="47:42" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:25">

                <expr_stmt pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:19">pix</name><operator pos:start="49:20" pos:end="49:21">++</operator></expr>;</expr_stmt>

                <continue pos:start="51:17" pos:end="51:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="57:13" pos:end="79:13"><if pos:start="57:13" pos:end="69:13">if<condition pos:start="57:15" pos:end="57:27">( <expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:18">bS</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">i</name></expr>]</index></name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <literal type="number" pos:start="57:25" pos:end="57:25">4</literal></expr> )</condition> <block pos:start="57:29" pos:end="69:13">{<block_content pos:start="59:17" pos:end="67:62">

                <decl_stmt pos:start="59:17" pos:end="59:59"><decl pos:start="59:17" pos:end="59:58"><type pos:start="59:17" pos:end="59:19"><name pos:start="59:17" pos:end="59:19">int</name></type> <name pos:start="59:21" pos:end="59:22">tc</name> <init pos:start="59:24" pos:end="59:58">= <expr pos:start="59:26" pos:end="59:58"><name pos:start="59:26" pos:end="59:54"><name pos:start="59:26" pos:end="59:34">tc0_table</name><index pos:start="59:35" pos:end="59:43">[<expr pos:start="59:36" pos:end="59:42"><name pos:start="59:36" pos:end="59:42">index_a</name></expr>]</index><index pos:start="59:44" pos:end="59:54">[<expr pos:start="59:45" pos:end="59:53"><name pos:start="59:45" pos:end="59:49"><name pos:start="59:45" pos:end="59:46">bS</name><index pos:start="59:47" pos:end="59:49">[<expr pos:start="59:48" pos:end="59:48"><name pos:start="59:48" pos:end="59:48">i</name></expr>]</index></name> <operator pos:start="59:51" pos:end="59:51">-</operator> <literal type="number" pos:start="59:53" pos:end="59:53">1</literal></expr>]</index></name> <operator pos:start="59:56" pos:end="59:56">+</operator> <literal type="number" pos:start="59:58" pos:end="59:58">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="61:17" pos:end="61:88"><decl pos:start="61:17" pos:end="61:87"><type pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">int</name></type> <name pos:start="61:21" pos:end="61:27">i_delta</name> <init pos:start="61:29" pos:end="61:87">= <expr pos:start="61:31" pos:end="61:87"><call pos:start="61:31" pos:end="61:87"><name pos:start="61:31" pos:end="61:34">clip</name><argument_list pos:start="61:35" pos:end="61:87">( <argument pos:start="61:37" pos:end="61:76"><expr pos:start="61:37" pos:end="61:76"><operator pos:start="61:37" pos:end="61:37">(</operator><operator pos:start="61:38" pos:end="61:38">(</operator><operator pos:start="61:39" pos:end="61:39">(</operator><name pos:start="61:40" pos:end="61:41">q0</name> <operator pos:start="61:43" pos:end="61:43">-</operator> <name pos:start="61:45" pos:end="61:46">p0</name> <operator pos:start="61:48" pos:end="61:48">)</operator> <operator pos:start="61:50" pos:end="61:51">&lt;&lt;</operator> <literal type="number" pos:start="61:53" pos:end="61:53">2</literal><operator pos:start="61:54" pos:end="61:54">)</operator> <operator pos:start="61:56" pos:end="61:56">+</operator> <operator pos:start="61:58" pos:end="61:58">(</operator><name pos:start="61:59" pos:end="61:60">p1</name> <operator pos:start="61:62" pos:end="61:62">-</operator> <name pos:start="61:64" pos:end="61:65">q1</name><operator pos:start="61:66" pos:end="61:66">)</operator> <operator pos:start="61:68" pos:end="61:68">+</operator> <literal type="number" pos:start="61:70" pos:end="61:70">4</literal><operator pos:start="61:71" pos:end="61:71">)</operator> <operator pos:start="61:73" pos:end="61:74">&gt;&gt;</operator> <literal type="number" pos:start="61:76" pos:end="61:76">3</literal></expr></argument>, <argument pos:start="61:79" pos:end="61:81"><expr pos:start="61:79" pos:end="61:81"><operator pos:start="61:79" pos:end="61:79">-</operator><name pos:start="61:80" pos:end="61:81">tc</name></expr></argument>, <argument pos:start="61:84" pos:end="61:85"><expr pos:start="61:84" pos:end="61:85"><name pos:start="61:84" pos:end="61:85">tc</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="65:17" pos:end="65:62"><expr pos:start="65:17" pos:end="65:61"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:19">pix</name><index pos:start="65:20" pos:end="65:30">[<expr pos:start="65:21" pos:end="65:29"><operator pos:start="65:21" pos:end="65:21">-</operator><name pos:start="65:22" pos:end="65:29">pix_next</name></expr>]</index></name> <operator pos:start="65:32" pos:end="65:32">=</operator> <call pos:start="65:34" pos:end="65:61"><name pos:start="65:34" pos:end="65:37">clip</name><argument_list pos:start="65:38" pos:end="65:61">( <argument pos:start="65:40" pos:end="65:51"><expr pos:start="65:40" pos:end="65:51"><name pos:start="65:40" pos:end="65:41">p0</name> <operator pos:start="65:43" pos:end="65:43">+</operator> <name pos:start="65:45" pos:end="65:51">i_delta</name></expr></argument>, <argument pos:start="65:54" pos:end="65:54"><expr pos:start="65:54" pos:end="65:54"><literal type="number" pos:start="65:54" pos:end="65:54">0</literal></expr></argument>, <argument pos:start="65:57" pos:end="65:59"><expr pos:start="65:57" pos:end="65:59"><literal type="number" pos:start="65:57" pos:end="65:59">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="65:67" pos:end="65:75">/* p0' */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:62"><expr pos:start="67:17" pos:end="67:61"><name pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:19">pix</name><index pos:start="67:20" pos:end="67:22">[<expr pos:start="67:21" pos:end="67:21"><literal type="number" pos:start="67:21" pos:end="67:21">0</literal></expr>]</index></name>         <operator pos:start="67:32" pos:end="67:32">=</operator> <call pos:start="67:34" pos:end="67:61"><name pos:start="67:34" pos:end="67:37">clip</name><argument_list pos:start="67:38" pos:end="67:61">( <argument pos:start="67:40" pos:end="67:51"><expr pos:start="67:40" pos:end="67:51"><name pos:start="67:40" pos:end="67:41">q0</name> <operator pos:start="67:43" pos:end="67:43">-</operator> <name pos:start="67:45" pos:end="67:51">i_delta</name></expr></argument>, <argument pos:start="67:54" pos:end="67:54"><expr pos:start="67:54" pos:end="67:54"><literal type="number" pos:start="67:54" pos:end="67:54">0</literal></expr></argument>, <argument pos:start="67:57" pos:end="67:59"><expr pos:start="67:57" pos:end="67:59"><literal type="number" pos:start="67:57" pos:end="67:59">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="67:67" pos:end="67:75">/* q0' */</comment>

            </block_content>}</block></if>

            <else pos:start="71:13" pos:end="79:13">else

            <block pos:start="73:13" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:61">

                <expr_stmt pos:start="75:17" pos:end="75:61"><expr pos:start="75:17" pos:end="75:60"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:19">pix</name><index pos:start="75:20" pos:end="75:30">[<expr pos:start="75:21" pos:end="75:29"><operator pos:start="75:21" pos:end="75:21">-</operator><name pos:start="75:22" pos:end="75:29">pix_next</name></expr>]</index></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <operator pos:start="75:34" pos:end="75:34">(</operator> <literal type="number" pos:start="75:36" pos:end="75:36">2</literal><operator pos:start="75:37" pos:end="75:37">*</operator><name pos:start="75:38" pos:end="75:39">p1</name> <operator pos:start="75:41" pos:end="75:41">+</operator> <name pos:start="75:43" pos:end="75:44">p0</name> <operator pos:start="75:46" pos:end="75:46">+</operator> <name pos:start="75:48" pos:end="75:49">q1</name> <operator pos:start="75:51" pos:end="75:51">+</operator> <literal type="number" pos:start="75:53" pos:end="75:53">2</literal> <operator pos:start="75:55" pos:end="75:55">)</operator> <operator pos:start="75:57" pos:end="75:58">&gt;&gt;</operator> <literal type="number" pos:start="75:60" pos:end="75:60">2</literal></expr>;</expr_stmt>   <comment type="block" pos:start="75:65" pos:end="75:73">/* p0' */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:61"><expr pos:start="77:17" pos:end="77:60"><name pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:19">pix</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr>]</index></name>         <operator pos:start="77:32" pos:end="77:32">=</operator> <operator pos:start="77:34" pos:end="77:34">(</operator> <literal type="number" pos:start="77:36" pos:end="77:36">2</literal><operator pos:start="77:37" pos:end="77:37">*</operator><name pos:start="77:38" pos:end="77:39">q1</name> <operator pos:start="77:41" pos:end="77:41">+</operator> <name pos:start="77:43" pos:end="77:44">q0</name> <operator pos:start="77:46" pos:end="77:46">+</operator> <name pos:start="77:48" pos:end="77:49">p1</name> <operator pos:start="77:51" pos:end="77:51">+</operator> <literal type="number" pos:start="77:53" pos:end="77:53">2</literal> <operator pos:start="77:55" pos:end="77:55">)</operator> <operator pos:start="77:57" pos:end="77:58">&gt;&gt;</operator> <literal type="number" pos:start="77:60" pos:end="77:60">2</literal></expr>;</expr_stmt>   <comment type="block" pos:start="77:65" pos:end="77:73">/* q0' */</comment>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:18"><expr pos:start="81:13" pos:end="81:17"><name pos:start="81:13" pos:end="81:15">pix</name><operator pos:start="81:16" pos:end="81:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
