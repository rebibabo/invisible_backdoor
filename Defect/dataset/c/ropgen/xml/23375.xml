<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23375.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">do_raise_exception_err</name> <parameter_list pos:start="1:29" pos:end="1:64">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:37">uint32_t</name></type> <name pos:start="1:39" pos:end="1:47">exception</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:63">error_code</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="11:5" pos:end="31:20">

<cpp:if pos:start="5:1" pos:end="5:5">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:5"><literal type="number" pos:start="5:5" pos:end="5:5">0</literal></expr></cpp:if>

    printf("Raise exception %3x code : %d\n", exception, error_code);

<cpp:endif pos:start="9:1" pos:end="9:6">#<cpp:directive pos:start="9:2" pos:end="9:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="11:5" pos:end="25:5">switch <condition pos:start="11:12" pos:end="11:22">(<expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:21">exception</name></expr>)</condition> <block pos:start="11:24" pos:end="25:5">{<block_content pos:start="13:5" pos:end="23:14">

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">EXCP_PROGRAM</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="17:19"><if pos:start="15:9" pos:end="17:19">if <condition pos:start="15:12" pos:end="15:66">(<expr pos:start="15:13" pos:end="15:65"><name pos:start="15:13" pos:end="15:22">error_code</name> <operator pos:start="15:24" pos:end="15:25">==</operator> <name pos:start="15:27" pos:end="15:33">EXCP_FP</name> <operator pos:start="15:35" pos:end="15:36">&amp;&amp;</operator> <name pos:start="15:38" pos:end="15:44">msr_fe0</name> <operator pos:start="15:46" pos:end="15:47">==</operator> <literal type="number" pos:start="15:49" pos:end="15:49">0</literal> <operator pos:start="15:51" pos:end="15:52">&amp;&amp;</operator> <name pos:start="15:54" pos:end="15:60">msr_fe1</name> <operator pos:start="15:62" pos:end="15:63">==</operator> <literal type="number" pos:start="15:65" pos:end="15:65">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:19"><block_content pos:start="17:13" pos:end="17:19">

            <return pos:start="17:13" pos:end="17:19">return;</return></block_content></block></if></if_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <default pos:start="21:5" pos:end="21:12">default:</default>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:24">exception_index</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:36">exception</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:19">error_code</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:32">error_code</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:20"><expr pos:start="31:5" pos:end="31:19"><call pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:17">cpu_loop_exit</name><argument_list pos:start="31:18" pos:end="31:19">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
