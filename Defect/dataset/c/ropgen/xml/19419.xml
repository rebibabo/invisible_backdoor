<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19419.c" pos:tabs="8"><function pos:start="1:1" pos:end="158:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">rm_assemble_video_frame</name><parameter_list pos:start="1:35" pos:end="5:69">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:72"><decl pos:start="1:56" pos:end="1:72"><type pos:start="1:56" pos:end="1:72"><name pos:start="1:56" pos:end="1:68">ByteIOContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">pb</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:49">RMDemuxContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:53">rm</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:63">RMStream</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:68">vst</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:48"><decl pos:start="5:36" pos:end="5:48"><type pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:43">AVPacket</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:48">pkt</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:57"><decl pos:start="5:51" pos:end="5:57"><type pos:start="5:51" pos:end="5:57"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:57">len</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:68"><decl pos:start="5:60" pos:end="5:68"><type pos:start="5:60" pos:end="5:68"><name pos:start="5:60" pos:end="5:62">int</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:68">pseq</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="158:1">{<block_content pos:start="9:5" pos:end="156:13">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">hdr</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">seq</name></decl>, <decl pos:start="9:19" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:25">pic_num</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:31">len2</name></decl>, <decl pos:start="9:34" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:36">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">hdr</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:22"><name pos:start="15:11" pos:end="15:18">get_byte</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:27">len</name><operator pos:start="15:28" pos:end="15:29">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:14">hdr</name> <operator pos:start="17:16" pos:end="17:17">&gt;&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">6</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if<condition pos:start="21:7" pos:end="21:17">(<expr pos:start="21:8" pos:end="21:16"><name pos:start="21:8" pos:end="21:11">type</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">3</literal></expr>)</condition><block pos:start="21:18" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:34">  <comment type="line" pos:start="21:21" pos:end="21:52">// not frame as a part of packet</comment>

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">seq</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:22">get_byte</name><argument_list pos:start="23:23" pos:end="23:26">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:31">len</name><operator pos:start="23:32" pos:end="23:33">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if<condition pos:start="27:7" pos:end="27:17">(<expr pos:start="27:8" pos:end="27:16"><name pos:start="27:8" pos:end="27:11">type</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>)</condition><block pos:start="27:18" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:38">  <comment type="line" pos:start="27:21" pos:end="27:38">// not whole frame</comment>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:12">len2</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:32"><name pos:start="29:16" pos:end="29:22">get_num</name><argument_list pos:start="29:23" pos:end="29:32">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">pb</name></expr></argument>, <argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:11">pos</name>  <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:22">get_num</name><argument_list pos:start="31:23" pos:end="31:32">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">pb</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:15">pic_num</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:26">get_byte</name><argument_list pos:start="33:27" pos:end="33:30">(<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="33:33" pos:end="33:38"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:35">len</name><operator pos:start="33:36" pos:end="33:37">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if<condition pos:start="37:7" pos:end="37:13">(<expr pos:start="37:8" pos:end="37:12"><name pos:start="37:8" pos:end="37:10">len</name><operator pos:start="37:11" pos:end="37:11">&lt;</operator><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:6">rm</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:21">remaining_len</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:27">len</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="69:5"><if pos:start="43:5" pos:end="69:5">if<condition pos:start="43:7" pos:end="43:14">(<expr pos:start="43:8" pos:end="43:13"><name pos:start="43:8" pos:end="43:11">type</name><operator pos:start="43:12" pos:end="43:12">&amp;</operator><literal type="number" pos:start="43:13" pos:end="43:13">1</literal></expr>)</condition><block pos:start="43:15" pos:end="69:5">{<block_content pos:start="45:9" pos:end="67:17">     <comment type="line" pos:start="43:21" pos:end="43:39">// frame, not slice</comment>

        <if_stmt pos:start="45:9" pos:end="47:22"><if pos:start="45:9" pos:end="47:22">if<condition pos:start="45:11" pos:end="45:21">(<expr pos:start="45:12" pos:end="45:20"><name pos:start="45:12" pos:end="45:15">type</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <literal type="number" pos:start="45:20" pos:end="45:20">3</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:22"><block_content pos:start="47:13" pos:end="47:22">  <comment type="line" pos:start="45:24" pos:end="45:51">// frame as a part of packet</comment>

            <expr_stmt pos:start="47:13" pos:end="47:22"><expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:15">len</name><operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:21">len2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:22"><if pos:start="49:9" pos:end="51:22">if<condition pos:start="49:11" pos:end="49:35">(<expr pos:start="49:12" pos:end="49:34"><name pos:start="49:12" pos:end="49:28"><name pos:start="49:12" pos:end="49:13">rm</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:28">remaining_len</name></name> <operator pos:start="49:30" pos:end="49:30">&lt;</operator> <name pos:start="49:32" pos:end="49:34">len</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:22"><block_content pos:start="51:13" pos:end="51:22">

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:10">rm</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:25">remaining_len</name></name> <operator pos:start="53:27" pos:end="53:28">-=</operator> <name pos:start="53:30" pos:end="53:32">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:32"><if pos:start="55:9" pos:end="57:32">if<condition pos:start="55:11" pos:end="55:43">(<expr pos:start="55:12" pos:end="55:42"><call pos:start="55:12" pos:end="55:38"><name pos:start="55:12" pos:end="55:24">av_new_packet</name><argument_list pos:start="55:25" pos:end="55:38">(<argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">pkt</name></expr></argument>, <argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:33">len</name> <operator pos:start="55:35" pos:end="55:35">+</operator> <literal type="number" pos:start="55:37" pos:end="55:37">9</literal></expr></argument>)</argument_list></call> <operator pos:start="55:40" pos:end="55:40">&lt;</operator> <literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:32"><block_content pos:start="57:13" pos:end="57:32">

            <return pos:start="57:13" pos:end="57:32">return <expr pos:start="57:20" pos:end="57:31"><call pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:26">AVERROR</name><argument_list pos:start="57:27" pos:end="57:31">(<argument pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">pkt</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">data</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>]</index></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><call pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:15">AV_WL32</name><argument_list pos:start="61:16" pos:end="61:33">(<argument pos:start="61:17" pos:end="61:29"><expr pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:19">pkt</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:25">data</name></name> <operator pos:start="61:27" pos:end="61:27">+</operator> <literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr></argument>, <argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><call pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:15">AV_WL32</name><argument_list pos:start="63:16" pos:end="63:33">(<argument pos:start="63:17" pos:end="63:29"><expr pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:19">pkt</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:25">data</name></name> <operator pos:start="63:27" pos:end="63:27">+</operator> <literal type="number" pos:start="63:29" pos:end="63:29">5</literal></expr></argument>, <argument pos:start="63:32" pos:end="63:32"><expr pos:start="63:32" pos:end="63:32"><literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><call pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:18">get_buffer</name><argument_list pos:start="65:19" pos:end="65:42">(<argument pos:start="65:20" pos:end="65:21"><expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">pb</name></expr></argument>, <argument pos:start="65:24" pos:end="65:36"><expr pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:32"><name pos:start="65:24" pos:end="65:26">pkt</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:32">data</name></name> <operator pos:start="65:34" pos:end="65:34">+</operator> <literal type="number" pos:start="65:36" pos:end="65:36">9</literal></expr></argument>, <argument pos:start="65:39" pos:end="65:41"><expr pos:start="65:39" pos:end="65:41"><name pos:start="65:39" pos:end="65:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="71:5" pos:end="71:43">//now we have to deal with single slice</comment>



    <expr_stmt pos:start="75:5" pos:end="75:16"><expr pos:start="75:5" pos:end="75:15"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:9">pseq</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:15">seq</name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="97:5"><if pos:start="77:5" pos:end="97:5">if<condition pos:start="77:7" pos:end="77:55">(<expr pos:start="77:8" pos:end="77:54"><operator pos:start="77:8" pos:end="77:8">(</operator><name pos:start="77:9" pos:end="77:11">seq</name> <operator pos:start="77:13" pos:end="77:13">&amp;</operator> <literal type="number" pos:start="77:15" pos:end="77:18">0x7F</literal><operator pos:start="77:19" pos:end="77:19">)</operator> <operator pos:start="77:21" pos:end="77:22">==</operator> <literal type="number" pos:start="77:24" pos:end="77:24">1</literal> <operator pos:start="77:26" pos:end="77:27">||</operator> <name pos:start="77:29" pos:end="77:43"><name pos:start="77:29" pos:end="77:31">vst</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:43">curpic_num</name></name> <operator pos:start="77:45" pos:end="77:46">!=</operator> <name pos:start="77:48" pos:end="77:54">pic_num</name></expr>)</condition><block pos:start="77:56" pos:end="97:5">{<block_content pos:start="79:9" pos:end="95:36">

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:11">vst</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:19">slices</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <operator pos:start="79:23" pos:end="79:23">(</operator><operator pos:start="79:24" pos:end="79:24">(</operator><name pos:start="79:25" pos:end="79:27">hdr</name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <literal type="number" pos:start="79:31" pos:end="79:34">0x3F</literal><operator pos:start="79:35" pos:end="79:35">)</operator> <operator pos:start="79:37" pos:end="79:38">&lt;&lt;</operator> <literal type="number" pos:start="79:40" pos:end="79:40">1</literal><operator pos:start="79:41" pos:end="79:41">)</operator> <operator pos:start="79:43" pos:end="79:43">+</operator> <literal type="number" pos:start="79:45" pos:end="79:45">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:53"><expr pos:start="81:9" pos:end="81:52"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:11">vst</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:25">videobufsize</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:32">len2</name> <operator pos:start="81:34" pos:end="81:34">+</operator> <literal type="number" pos:start="81:36" pos:end="81:36">8</literal><operator pos:start="81:37" pos:end="81:37">*</operator><name pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:40">vst</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:48">slices</name></name> <operator pos:start="81:50" pos:end="81:50">+</operator> <literal type="number" pos:start="81:52" pos:end="81:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:34"><expr pos:start="83:9" pos:end="83:33"><call pos:start="83:9" pos:end="83:33"><name pos:start="83:9" pos:end="83:22">av_free_packet</name><argument_list pos:start="83:23" pos:end="83:33">(<argument pos:start="83:24" pos:end="83:32"><expr pos:start="83:24" pos:end="83:32"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:32"><name pos:start="83:25" pos:end="83:27">vst</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:32">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="83:36" pos:end="83:65">//FIXME this should be output.</comment>

        <if_stmt pos:start="85:9" pos:end="87:35"><if pos:start="85:9" pos:end="87:35">if<condition pos:start="85:11" pos:end="85:59">(<expr pos:start="85:12" pos:end="85:58"><call pos:start="85:12" pos:end="85:54"><name pos:start="85:12" pos:end="85:24">av_new_packet</name><argument_list pos:start="85:25" pos:end="85:54">(<argument pos:start="85:26" pos:end="85:34"><expr pos:start="85:26" pos:end="85:34"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:29">vst</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:34">pkt</name></name></expr></argument>, <argument pos:start="85:37" pos:end="85:53"><expr pos:start="85:37" pos:end="85:53"><name pos:start="85:37" pos:end="85:53"><name pos:start="85:37" pos:end="85:39">vst</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:53">videobufsize</name></name></expr></argument>)</argument_list></call> <operator pos:start="85:56" pos:end="85:56">&lt;</operator> <literal type="number" pos:start="85:58" pos:end="85:58">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:35"><block_content pos:start="87:13" pos:end="87:35">

            <return pos:start="87:13" pos:end="87:35">return <expr pos:start="87:20" pos:end="87:34"><call pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:26">AVERROR</name><argument_list pos:start="87:27" pos:end="87:34">(<argument pos:start="87:28" pos:end="87:33"><expr pos:start="87:28" pos:end="87:33"><name pos:start="87:28" pos:end="87:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:45"><expr pos:start="89:9" pos:end="89:44"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:11">vst</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:24">videobufpos</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <literal type="number" pos:start="89:28" pos:end="89:28">8</literal><operator pos:start="89:29" pos:end="89:29">*</operator><name pos:start="89:30" pos:end="89:40"><name pos:start="89:30" pos:end="89:32">vst</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:40">slices</name></name> <operator pos:start="89:42" pos:end="89:42">+</operator> <literal type="number" pos:start="89:44" pos:end="89:44">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:11">vst</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:22">cur_slice</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:34"><expr pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:11">vst</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:23">curpic_num</name></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:33">pic_num</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:11">vst</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:19">pktpos</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <call pos:start="95:23" pos:end="95:35"><name pos:start="95:23" pos:end="95:31">url_ftell</name><argument_list pos:start="95:32" pos:end="95:35">(<argument pos:start="95:33" pos:end="95:34"><expr pos:start="95:33" pos:end="95:34"><name pos:start="95:33" pos:end="95:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="99:5" pos:end="101:30"><if pos:start="99:5" pos:end="101:30">if<condition pos:start="99:7" pos:end="99:17">(<expr pos:start="99:8" pos:end="99:16"><name pos:start="99:8" pos:end="99:11">type</name> <operator pos:start="99:13" pos:end="99:14">==</operator> <literal type="number" pos:start="99:16" pos:end="99:16">2</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:30"><block_content pos:start="101:9" pos:end="101:30">

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:11">len</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:29"><name pos:start="101:15" pos:end="101:19">FFMIN</name><argument_list pos:start="101:20" pos:end="101:29">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">len</name></expr></argument>, <argument pos:start="101:26" pos:end="101:28"><expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="107:17"><if pos:start="105:5" pos:end="107:17">if<condition pos:start="105:7" pos:end="105:38">(<expr pos:start="105:8" pos:end="105:37"><operator pos:start="105:8" pos:end="105:9">++</operator><name pos:start="105:10" pos:end="105:23"><name pos:start="105:10" pos:end="105:12">vst</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:23">cur_slice</name></name> <operator pos:start="105:25" pos:end="105:25">&gt;</operator> <name pos:start="105:27" pos:end="105:37"><name pos:start="105:27" pos:end="105:29">vst</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:37">slices</name></name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:17"><block_content pos:start="107:9" pos:end="107:17">

        <return pos:start="107:9" pos:end="107:17">return <expr pos:start="107:16" pos:end="107:16"><literal type="number" pos:start="107:16" pos:end="107:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:53"><expr pos:start="109:5" pos:end="109:52"><call pos:start="109:5" pos:end="109:52"><name pos:start="109:5" pos:end="109:11">AV_WL32</name><argument_list pos:start="109:12" pos:end="109:52">(<argument pos:start="109:13" pos:end="109:48"><expr pos:start="109:13" pos:end="109:48"><name pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:15">vst</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:20">pkt</name><operator pos:start="109:21" pos:end="109:21">.</operator><name pos:start="109:22" pos:end="109:25">data</name></name> <operator pos:start="109:27" pos:end="109:27">-</operator> <literal type="number" pos:start="109:29" pos:end="109:31">7</literal> <operator pos:start="109:31" pos:end="109:31">+</operator> <literal type="number" pos:start="109:33" pos:end="109:33">8</literal><operator pos:start="109:34" pos:end="109:34">*</operator><name pos:start="109:35" pos:end="109:48"><name pos:start="109:35" pos:end="109:37">vst</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:48">cur_slice</name></name></expr></argument>, <argument pos:start="109:51" pos:end="109:51"><expr pos:start="109:51" pos:end="109:51"><literal type="number" pos:start="109:51" pos:end="109:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:88"><expr pos:start="111:5" pos:end="111:87"><call pos:start="111:5" pos:end="111:87"><name pos:start="111:5" pos:end="111:11">AV_WL32</name><argument_list pos:start="111:12" pos:end="111:87">(<argument pos:start="111:13" pos:end="111:48"><expr pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:15">vst</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:20">pkt</name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:25">data</name></name> <operator pos:start="111:27" pos:end="111:27">-</operator> <literal type="number" pos:start="111:29" pos:end="111:31">3</literal> <operator pos:start="111:31" pos:end="111:31">+</operator> <literal type="number" pos:start="111:33" pos:end="111:33">8</literal><operator pos:start="111:34" pos:end="111:34">*</operator><name pos:start="111:35" pos:end="111:48"><name pos:start="111:35" pos:end="111:37">vst</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:48">cur_slice</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:86"><expr pos:start="111:51" pos:end="111:86"><name pos:start="111:51" pos:end="111:66"><name pos:start="111:51" pos:end="111:53">vst</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:66">videobufpos</name></name> <operator pos:start="111:68" pos:end="111:68">-</operator> <literal type="number" pos:start="111:70" pos:end="111:70">8</literal><operator pos:start="111:71" pos:end="111:71">*</operator><name pos:start="111:72" pos:end="111:82"><name pos:start="111:72" pos:end="111:74">vst</name><operator pos:start="111:75" pos:end="111:76">-&gt;</operator><name pos:start="111:77" pos:end="111:82">slices</name></name> <operator pos:start="111:84" pos:end="111:84">-</operator> <literal type="number" pos:start="111:86" pos:end="111:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="115:17"><if pos:start="113:5" pos:end="115:17">if<condition pos:start="113:7" pos:end="113:50">(<expr pos:start="113:8" pos:end="113:49"><name pos:start="113:8" pos:end="113:23"><name pos:start="113:8" pos:end="113:10">vst</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:23">videobufpos</name></name> <operator pos:start="113:25" pos:end="113:25">+</operator> <name pos:start="113:27" pos:end="113:29">len</name> <operator pos:start="113:31" pos:end="113:31">&gt;</operator> <name pos:start="113:33" pos:end="113:49"><name pos:start="113:33" pos:end="113:35">vst</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:49">videobufsize</name></name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:17"><block_content pos:start="115:9" pos:end="115:17">

        <return pos:start="115:9" pos:end="115:17">return <expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="119:28"><if pos:start="117:5" pos:end="119:28">if <condition pos:start="117:8" pos:end="117:69">(<expr pos:start="117:9" pos:end="117:68"><call pos:start="117:9" pos:end="117:61"><name pos:start="117:9" pos:end="117:18">get_buffer</name><argument_list pos:start="117:19" pos:end="117:61">(<argument pos:start="117:20" pos:end="117:21"><expr pos:start="117:20" pos:end="117:21"><name pos:start="117:20" pos:end="117:21">pb</name></expr></argument>, <argument pos:start="117:24" pos:end="117:55"><expr pos:start="117:24" pos:end="117:55"><name pos:start="117:24" pos:end="117:36"><name pos:start="117:24" pos:end="117:26">vst</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:31">pkt</name><operator pos:start="117:32" pos:end="117:32">.</operator><name pos:start="117:33" pos:end="117:36">data</name></name> <operator pos:start="117:38" pos:end="117:38">+</operator> <name pos:start="117:40" pos:end="117:55"><name pos:start="117:40" pos:end="117:42">vst</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:55">videobufpos</name></name></expr></argument>, <argument pos:start="117:58" pos:end="117:60"><expr pos:start="117:58" pos:end="117:60"><name pos:start="117:58" pos:end="117:60">len</name></expr></argument>)</argument_list></call> <operator pos:start="117:63" pos:end="117:64">!=</operator> <name pos:start="117:66" pos:end="117:68">len</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:28"><block_content pos:start="119:9" pos:end="119:28">

        <return pos:start="119:9" pos:end="119:28">return <expr pos:start="119:16" pos:end="119:27"><call pos:start="119:16" pos:end="119:27"><name pos:start="119:16" pos:end="119:22">AVERROR</name><argument_list pos:start="119:23" pos:end="119:27">(<argument pos:start="119:24" pos:end="119:26"><expr pos:start="119:24" pos:end="119:26"><name pos:start="119:24" pos:end="119:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:28"><expr pos:start="121:5" pos:end="121:27"><name pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:7">vst</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:20">videobufpos</name></name> <operator pos:start="121:22" pos:end="121:23">+=</operator> <name pos:start="121:25" pos:end="121:27">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:28"><expr pos:start="123:5" pos:end="123:27"><name pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:6">rm</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:21">remaining_len</name></name><operator pos:start="123:22" pos:end="123:23">-=</operator> <name pos:start="123:25" pos:end="123:27">len</name></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="152:5"><if pos:start="127:5" pos:end="152:5">if<condition pos:start="127:7" pos:end="127:60">(<expr pos:start="127:8" pos:end="127:59"><name pos:start="127:8" pos:end="127:11">type</name> <operator pos:start="127:13" pos:end="127:14">==</operator> <literal type="number" pos:start="127:16" pos:end="127:16">2</literal> <operator pos:start="127:18" pos:end="127:19">||</operator> <operator pos:start="127:21" pos:end="127:21">(</operator><name pos:start="127:22" pos:end="127:37"><name pos:start="127:22" pos:end="127:24">vst</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:37">videobufpos</name></name><operator pos:start="127:38" pos:end="127:38">)</operator> <operator pos:start="127:40" pos:end="127:41">==</operator> <name pos:start="127:43" pos:end="127:59"><name pos:start="127:43" pos:end="127:45">vst</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:59">videobufsize</name></name></expr>)</condition><block pos:start="127:61" pos:end="152:5">{<block_content pos:start="129:9" pos:end="150:17">

        <expr_stmt pos:start="129:9" pos:end="129:44"><expr pos:start="129:9" pos:end="129:43"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:11">vst</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:16">pkt</name><operator pos:start="129:17" pos:end="129:17">.</operator><name pos:start="129:18" pos:end="129:21">data</name><index pos:start="129:22" pos:end="129:24">[<expr pos:start="129:23" pos:end="129:23"><literal type="number" pos:start="129:23" pos:end="129:23">0</literal></expr>]</index></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <name pos:start="129:28" pos:end="129:41"><name pos:start="129:28" pos:end="129:30">vst</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:41">cur_slice</name></name><operator pos:start="129:42" pos:end="129:42">-</operator><literal type="number" pos:start="129:43" pos:end="129:43">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><operator pos:start="131:9" pos:end="131:9">*</operator><name pos:start="131:10" pos:end="131:12">pkt</name><operator pos:start="131:13" pos:end="131:13">=</operator> <name pos:start="131:15" pos:end="131:22"><name pos:start="131:15" pos:end="131:17">vst</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:22">pkt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:28"><expr pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:11">vst</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:16">pkt</name><operator pos:start="133:17" pos:end="133:17">.</operator><name pos:start="133:18" pos:end="133:21">data</name></name><operator pos:start="133:22" pos:end="133:22">=</operator> <name pos:start="133:24" pos:end="133:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:25"><expr pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:11">vst</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:16">pkt</name><operator pos:start="135:17" pos:end="135:17">.</operator><name pos:start="135:18" pos:end="135:21">size</name></name><operator pos:start="135:22" pos:end="135:22">=</operator> <literal type="number" pos:start="135:24" pos:end="135:24">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="141:54"><if pos:start="137:9" pos:end="141:54">if<condition pos:start="137:11" pos:end="137:41">(<expr pos:start="137:12" pos:end="137:40"><name pos:start="137:12" pos:end="137:22"><name pos:start="137:12" pos:end="137:14">vst</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:22">slices</name></name> <operator pos:start="137:24" pos:end="137:25">!=</operator> <name pos:start="137:27" pos:end="137:40"><name pos:start="137:27" pos:end="137:29">vst</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:40">cur_slice</name></name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="141:54"><block_content pos:start="139:13" pos:end="141:54"> <comment type="line" pos:start="137:43" pos:end="137:99">//FIXME find out how to set slices correct from the begin</comment>

            <expr_stmt pos:start="139:13" pos:end="141:54"><expr pos:start="139:13" pos:end="141:53"><call pos:start="139:13" pos:end="141:53"><name pos:start="139:13" pos:end="139:19">memmove</name><argument_list pos:start="139:20" pos:end="141:53">(<argument pos:start="139:21" pos:end="139:52"><expr pos:start="139:21" pos:end="139:52"><name pos:start="139:21" pos:end="139:29"><name pos:start="139:21" pos:end="139:23">pkt</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:29">data</name></name> <operator pos:start="139:31" pos:end="139:31">+</operator> <literal type="number" pos:start="139:33" pos:end="139:35">1</literal> <operator pos:start="139:35" pos:end="139:35">+</operator> <literal type="number" pos:start="139:37" pos:end="139:37">8</literal><operator pos:start="139:38" pos:end="139:38">*</operator><name pos:start="139:39" pos:end="139:52"><name pos:start="139:39" pos:end="139:41">vst</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:52">cur_slice</name></name></expr></argument>, <argument pos:start="139:55" pos:end="139:83"><expr pos:start="139:55" pos:end="139:83"><name pos:start="139:55" pos:end="139:63"><name pos:start="139:55" pos:end="139:57">pkt</name><operator pos:start="139:58" pos:end="139:59">-&gt;</operator><name pos:start="139:60" pos:end="139:63">data</name></name> <operator pos:start="139:65" pos:end="139:65">+</operator> <literal type="number" pos:start="139:67" pos:end="139:69">1</literal> <operator pos:start="139:69" pos:end="139:69">+</operator> <literal type="number" pos:start="139:71" pos:end="139:71">8</literal><operator pos:start="139:72" pos:end="139:72">*</operator><name pos:start="139:73" pos:end="139:83"><name pos:start="139:73" pos:end="139:75">vst</name><operator pos:start="139:76" pos:end="139:77">-&gt;</operator><name pos:start="139:78" pos:end="139:83">slices</name></name></expr></argument>,

                <argument pos:start="141:17" pos:end="141:52"><expr pos:start="141:17" pos:end="141:52"><name pos:start="141:17" pos:end="141:32"><name pos:start="141:17" pos:end="141:19">vst</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:32">videobufpos</name></name> <operator pos:start="141:34" pos:end="141:34">-</operator> <literal type="number" pos:start="141:36" pos:end="141:38">1</literal> <operator pos:start="141:38" pos:end="141:38">-</operator> <literal type="number" pos:start="141:40" pos:end="141:40">8</literal><operator pos:start="141:41" pos:end="141:41">*</operator><name pos:start="141:42" pos:end="141:52"><name pos:start="141:42" pos:end="141:44">vst</name><operator pos:start="141:45" pos:end="141:46">-&gt;</operator><name pos:start="141:47" pos:end="141:52">slices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:72"><expr pos:start="143:9" pos:end="143:71"><name pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:11">pkt</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:17">size</name></name> <operator pos:start="143:19" pos:end="143:19">=</operator> <name pos:start="143:21" pos:end="143:36"><name pos:start="143:21" pos:end="143:23">vst</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:36">videobufpos</name></name> <operator pos:start="143:38" pos:end="143:38">+</operator> <literal type="number" pos:start="143:40" pos:end="143:40">8</literal><operator pos:start="143:41" pos:end="143:41">*</operator><operator pos:start="143:42" pos:end="143:42">(</operator><name pos:start="143:43" pos:end="143:56"><name pos:start="143:43" pos:end="143:45">vst</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:56">cur_slice</name></name> <operator pos:start="143:58" pos:end="143:58">-</operator> <name pos:start="143:60" pos:end="143:70"><name pos:start="143:60" pos:end="143:62">vst</name><operator pos:start="143:63" pos:end="143:64">-&gt;</operator><name pos:start="143:65" pos:end="143:70">slices</name></name><operator pos:start="143:71" pos:end="143:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:34"><expr pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:11">pkt</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:16">pts</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:11">pkt</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:16">pos</name></name> <operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:30"><name pos:start="147:20" pos:end="147:22">vst</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:30">pktpos</name></name></expr>;</expr_stmt>


        <return pos:start="150:9" pos:end="150:17">return <expr pos:start="150:16" pos:end="150:16"><literal type="number" pos:start="150:16" pos:end="150:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="156:5" pos:end="156:13">return <expr pos:start="156:12" pos:end="156:12"><literal type="number" pos:start="156:12" pos:end="156:12">1</literal></expr>;</return>

</block_content>}</block></function></unit>
