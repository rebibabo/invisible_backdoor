<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8525.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:35">svq3_decode_block</name><parameter_list pos:start="1:36" pos:end="3:62">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:49">GetBitContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">gb</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:62">DCTELEM</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">block</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">index</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:61"><decl pos:start="3:48" pos:end="3:61"><type pos:start="3:48" pos:end="3:61"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:61">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:13">

    <decl_stmt pos:start="7:5" pos:end="9:68"><decl pos:start="7:5" pos:end="9:67"><type pos:start="7:5" pos:end="7:31"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier><specifier pos:start="7:27" pos:end="7:31">const</specifier></type> <name pos:start="7:33" pos:end="7:48"><name pos:start="7:33" pos:end="7:45">scan_patterns</name><index pos:start="7:46" pos:end="7:48">[<expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">4</literal></expr>]</index></name> <init pos:start="7:50" pos:end="9:67">=

    <expr pos:start="9:5" pos:end="9:67"><block pos:start="9:5" pos:end="9:67">{ <expr pos:start="9:7" pos:end="9:25"><name pos:start="9:7" pos:end="9:25">luma_dc_zigzag_scan</name></expr>, <expr pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:38">zigzag_scan</name></expr>, <expr pos:start="9:41" pos:end="9:49"><name pos:start="9:41" pos:end="9:49">svq3_scan</name></expr>, <expr pos:start="9:52" pos:end="9:65"><name pos:start="9:52" pos:end="9:65">chroma_dc_scan</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">run</name></decl>, <decl pos:start="13:14" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:18">level</name></decl>, <decl pos:start="13:21" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:24">sign</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:29">vlc</name></decl>, <decl pos:start="13:32" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:36">limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">intra</name>           <init pos:start="15:31" pos:end="15:45">= <expr pos:start="15:33" pos:end="15:45"><literal type="number" pos:start="15:33" pos:end="15:33">3</literal> <operator pos:start="15:35" pos:end="15:35">*</operator> <name pos:start="15:37" pos:end="15:40">type</name> <operator pos:start="15:42" pos:end="15:43">&gt;&gt;</operator> <literal type="number" pos:start="15:45" pos:end="15:45">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier><specifier pos:start="17:20" pos:end="17:24">const</specifier></type> <name pos:start="17:26" pos:end="17:29">scan</name> <init pos:start="17:31" pos:end="17:51">= <expr pos:start="17:33" pos:end="17:51"><name pos:start="17:33" pos:end="17:51"><name pos:start="17:33" pos:end="17:45">scan_patterns</name><index pos:start="17:46" pos:end="17:51">[<expr pos:start="17:47" pos:end="17:50"><name pos:start="17:47" pos:end="17:50">type</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="107:5">for <control pos:start="21:9" pos:end="21:70">(<init pos:start="21:10" pos:end="21:31"><expr pos:start="21:10" pos:end="21:30"><name pos:start="21:10" pos:end="21:14">limit</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">(</operator><literal type="number" pos:start="21:19" pos:end="21:20">16</literal> <operator pos:start="21:22" pos:end="21:23">&gt;&gt;</operator> <name pos:start="21:25" pos:end="21:29">intra</name><operator pos:start="21:30" pos:end="21:30">)</operator></expr>;</init> <condition pos:start="21:33" pos:end="21:43"><expr pos:start="21:33" pos:end="21:42"><name pos:start="21:33" pos:end="21:37">index</name> <operator pos:start="21:39" pos:end="21:39">&lt;</operator> <literal type="number" pos:start="21:41" pos:end="21:42">16</literal></expr>;</condition> <incr pos:start="21:45" pos:end="21:69"><expr pos:start="21:45" pos:end="21:57"><name pos:start="21:45" pos:end="21:49">index</name> <operator pos:start="21:51" pos:end="21:51">=</operator> <name pos:start="21:53" pos:end="21:57">limit</name></expr><operator pos:start="21:58" pos:end="21:58">,</operator> <expr pos:start="21:60" pos:end="21:69"><name pos:start="21:60" pos:end="21:64">limit</name> <operator pos:start="21:66" pos:end="21:67">+=</operator> <literal type="number" pos:start="21:69" pos:end="21:69">8</literal></expr></incr>)</control> <block pos:start="21:72" pos:end="107:5">{<block_content pos:start="23:9" pos:end="105:9">

        <for pos:start="23:9" pos:end="97:9">for <control pos:start="23:13" pos:end="23:60">(<init pos:start="23:14" pos:end="23:14">;</init> <condition pos:start="23:16" pos:end="23:51"><expr pos:start="23:16" pos:end="23:50"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:19">vlc</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:44"><name pos:start="23:23" pos:end="23:40">svq3_get_ue_golomb</name><argument_list pos:start="23:41" pos:end="23:44">(<argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><name pos:start="23:42" pos:end="23:43">gb</name></expr></argument>)</argument_list></call><operator pos:start="23:45" pos:end="23:45">)</operator> <operator pos:start="23:47" pos:end="23:48">!=</operator> <literal type="number" pos:start="23:50" pos:end="23:50">0</literal></expr>;</condition> <incr pos:start="23:53" pos:end="23:59"><expr pos:start="23:53" pos:end="23:59"><name pos:start="23:53" pos:end="23:57">index</name><operator pos:start="23:58" pos:end="23:59">++</operator></expr></incr>)</control> <block pos:start="23:62" pos:end="97:9">{<block_content pos:start="25:13" pos:end="95:55">

            <if_stmt pos:start="25:13" pos:end="27:26"><if pos:start="25:13" pos:end="27:26">if <condition pos:start="25:16" pos:end="25:35">(<expr pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:19">vlc</name> <operator pos:start="25:21" pos:end="25:22">==</operator> <name pos:start="25:24" pos:end="25:34">INVALID_VLC</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:26"><block_content pos:start="27:17" pos:end="27:26">

                <return pos:start="27:17" pos:end="27:26">return <expr pos:start="27:24" pos:end="27:25"><operator pos:start="27:24" pos:end="27:24">-</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:16">sign</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:23">vlc</name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <literal type="number" pos:start="31:27" pos:end="31:29">0x1</literal><operator pos:start="31:30" pos:end="31:30">)</operator> <operator pos:start="31:32" pos:end="31:32">-</operator> <literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:32"><expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:15">vlc</name>  <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:22">vlc</name> <operator pos:start="33:24" pos:end="33:24">+</operator> <literal type="number" pos:start="33:26" pos:end="33:26">1</literal> <operator pos:start="33:28" pos:end="33:29">&gt;&gt;</operator> <literal type="number" pos:start="33:31" pos:end="33:31">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="37:13" pos:end="85:13"><if pos:start="37:13" pos:end="59:13">if <condition pos:start="37:16" pos:end="37:26">(<expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:20">type</name> <operator pos:start="37:22" pos:end="37:23">==</operator> <literal type="number" pos:start="37:25" pos:end="37:25">3</literal></expr>)</condition> <block pos:start="37:28" pos:end="59:13">{<block_content pos:start="39:17" pos:end="57:17">

                <if_stmt pos:start="39:17" pos:end="57:17"><if pos:start="39:17" pos:end="45:17">if <condition pos:start="39:20" pos:end="39:28">(<expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:23">vlc</name> <operator pos:start="39:25" pos:end="39:25">&lt;</operator> <literal type="number" pos:start="39:27" pos:end="39:27">3</literal></expr>)</condition> <block pos:start="39:30" pos:end="45:17">{<block_content pos:start="41:21" pos:end="43:32">

                    <expr_stmt pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:23">run</name>   <operator pos:start="41:27" pos:end="41:27">=</operator> <literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:32"><expr pos:start="43:21" pos:end="43:31"><name pos:start="43:21" pos:end="43:25">level</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:31">vlc</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="45:19" pos:end="51:17">else if <condition pos:start="45:27" pos:end="45:35">(<expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:30">vlc</name> <operator pos:start="45:32" pos:end="45:32">&lt;</operator> <literal type="number" pos:start="45:34" pos:end="45:34">4</literal></expr>)</condition> <block pos:start="45:37" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:30">

                    <expr_stmt pos:start="47:21" pos:end="47:30"><expr pos:start="47:21" pos:end="47:29"><name pos:start="47:21" pos:end="47:23">run</name>   <operator pos:start="47:27" pos:end="47:27">=</operator> <literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:30"><expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:25">level</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="51:19" pos:end="57:17">else <block pos:start="51:24" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:49">

                    <expr_stmt pos:start="53:21" pos:end="53:38"><expr pos:start="53:21" pos:end="53:37"><name pos:start="53:21" pos:end="53:23">run</name>   <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:31">vlc</name> <operator pos:start="53:33" pos:end="53:33">&amp;</operator> <literal type="number" pos:start="53:35" pos:end="53:37">0x3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:49"><expr pos:start="55:21" pos:end="55:48"><name pos:start="55:21" pos:end="55:25">level</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <operator pos:start="55:29" pos:end="55:29">(</operator><name pos:start="55:30" pos:end="55:32">vlc</name> <operator pos:start="55:34" pos:end="55:34">+</operator> <literal type="number" pos:start="55:36" pos:end="55:36">9</literal> <operator pos:start="55:38" pos:end="55:39">&gt;&gt;</operator> <literal type="number" pos:start="55:41" pos:end="55:41">2</literal><operator pos:start="55:42" pos:end="55:42">)</operator> <operator pos:start="55:44" pos:end="55:44">-</operator> <name pos:start="55:46" pos:end="55:48">run</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="85:13">else <block pos:start="59:20" pos:end="85:13">{<block_content pos:start="61:17" pos:end="83:17">

                <if_stmt pos:start="61:17" pos:end="83:17"><if pos:start="61:17" pos:end="67:17">if <condition pos:start="61:20" pos:end="61:29">(<expr pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:23">vlc</name> <operator pos:start="61:25" pos:end="61:25">&lt;</operator> <literal type="number" pos:start="61:27" pos:end="61:28">16</literal></expr>)</condition> <block pos:start="61:31" pos:end="67:17">{<block_content pos:start="63:21" pos:end="65:62">

                    <expr_stmt pos:start="63:21" pos:end="63:60"><expr pos:start="63:21" pos:end="63:59"><name pos:start="63:21" pos:end="63:23">run</name>   <operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:55"><name pos:start="63:29" pos:end="63:43">svq3_dct_tables</name><index pos:start="63:44" pos:end="63:50">[<expr pos:start="63:45" pos:end="63:49"><name pos:start="63:45" pos:end="63:49">intra</name></expr>]</index><index pos:start="63:51" pos:end="63:55">[<expr pos:start="63:52" pos:end="63:54"><name pos:start="63:52" pos:end="63:54">vlc</name></expr>]</index></name><operator pos:start="63:56" pos:end="63:56">.</operator><name pos:start="63:57" pos:end="63:59">run</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:62"><expr pos:start="65:21" pos:end="65:61"><name pos:start="65:21" pos:end="65:25">level</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:55"><name pos:start="65:29" pos:end="65:43">svq3_dct_tables</name><index pos:start="65:44" pos:end="65:50">[<expr pos:start="65:45" pos:end="65:49"><name pos:start="65:45" pos:end="65:49">intra</name></expr>]</index><index pos:start="65:51" pos:end="65:55">[<expr pos:start="65:52" pos:end="65:54"><name pos:start="65:52" pos:end="65:54">vlc</name></expr>]</index></name><operator pos:start="65:56" pos:end="65:56">.</operator><name pos:start="65:57" pos:end="65:61">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="67:19" pos:end="75:17">else if <condition pos:start="67:27" pos:end="67:33">(<expr pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:32">intra</name></expr>)</condition> <block pos:start="67:35" pos:end="75:17">{<block_content pos:start="69:21" pos:end="73:86">

                    <expr_stmt pos:start="69:21" pos:end="69:38"><expr pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:23">run</name>   <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:31">vlc</name> <operator pos:start="69:33" pos:end="69:33">&amp;</operator> <literal type="number" pos:start="69:35" pos:end="69:37">0x7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="73:86"><expr pos:start="71:21" pos:end="73:85"><name pos:start="71:21" pos:end="71:25">level</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <operator pos:start="71:29" pos:end="71:29">(</operator><name pos:start="71:30" pos:end="71:32">vlc</name> <operator pos:start="71:34" pos:end="71:35">&gt;&gt;</operator> <literal type="number" pos:start="71:37" pos:end="71:37">3</literal><operator pos:start="71:38" pos:end="71:38">)</operator> <operator pos:start="71:40" pos:end="71:40">+</operator>

                            <operator pos:start="73:29" pos:end="73:29">(</operator><ternary pos:start="73:30" pos:end="73:84"><condition pos:start="73:30" pos:end="73:41"><expr pos:start="73:30" pos:end="73:39"><operator pos:start="73:30" pos:end="73:30">(</operator><name pos:start="73:31" pos:end="73:33">run</name> <operator pos:start="73:35" pos:end="73:36">==</operator> <literal type="number" pos:start="73:38" pos:end="73:38">0</literal><operator pos:start="73:39" pos:end="73:39">)</operator></expr> ?</condition><then pos:start="73:43" pos:end="73:43"> <expr pos:start="73:43" pos:end="73:43"><literal type="number" pos:start="73:43" pos:end="73:43">8</literal></expr> </then><else pos:start="73:45" pos:end="73:84">: <expr pos:start="73:47" pos:end="73:84"><operator pos:start="73:47" pos:end="73:47">(</operator><ternary pos:start="73:48" pos:end="73:83"><condition pos:start="73:48" pos:end="73:58"><expr pos:start="73:48" pos:end="73:56"><operator pos:start="73:48" pos:end="73:48">(</operator><name pos:start="73:49" pos:end="73:51">run</name> <operator pos:start="73:53" pos:end="73:53">&lt;</operator> <literal type="number" pos:start="73:55" pos:end="73:55">2</literal><operator pos:start="73:56" pos:end="73:56">)</operator></expr> ?</condition><then pos:start="73:60" pos:end="73:60"> <expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">2</literal></expr> </then><else pos:start="73:62" pos:end="73:83">: <expr pos:start="73:64" pos:end="73:83"><operator pos:start="73:64" pos:end="73:64">(</operator><ternary pos:start="73:65" pos:end="73:82"><condition pos:start="73:65" pos:end="73:75"><expr pos:start="73:65" pos:end="73:73"><operator pos:start="73:65" pos:end="73:65">(</operator><name pos:start="73:66" pos:end="73:68">run</name> <operator pos:start="73:70" pos:end="73:70">&lt;</operator> <literal type="number" pos:start="73:72" pos:end="73:72">5</literal><operator pos:start="73:73" pos:end="73:73">)</operator></expr> ?</condition><then pos:start="73:77" pos:end="73:77"> <expr pos:start="73:77" pos:end="73:77"><literal type="number" pos:start="73:77" pos:end="73:77">0</literal></expr> </then><else pos:start="73:79" pos:end="73:82">: <expr pos:start="73:81" pos:end="73:82"><operator pos:start="73:81" pos:end="73:81">-</operator><literal type="number" pos:start="73:82" pos:end="73:82">1</literal></expr></else></ternary><operator pos:start="73:83" pos:end="73:83">)</operator></expr></else></ternary><operator pos:start="73:84" pos:end="73:84">)</operator></expr></else></ternary><operator pos:start="73:85" pos:end="73:85">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="75:19" pos:end="83:17">else <block pos:start="75:24" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:86">

                    <expr_stmt pos:start="77:21" pos:end="77:38"><expr pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:23">run</name>   <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:31">vlc</name> <operator pos:start="77:33" pos:end="77:33">&amp;</operator> <literal type="number" pos:start="77:35" pos:end="77:37">0xF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="81:86"><expr pos:start="79:21" pos:end="81:85"><name pos:start="79:21" pos:end="79:25">level</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:32">vlc</name> <operator pos:start="79:34" pos:end="79:35">&gt;&gt;</operator> <literal type="number" pos:start="79:37" pos:end="79:37">4</literal><operator pos:start="79:38" pos:end="79:38">)</operator> <operator pos:start="79:40" pos:end="79:40">+</operator>

                            <operator pos:start="81:29" pos:end="81:29">(</operator><ternary pos:start="81:30" pos:end="81:84"><condition pos:start="81:30" pos:end="81:41"><expr pos:start="81:30" pos:end="81:39"><operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:33">run</name> <operator pos:start="81:35" pos:end="81:36">==</operator> <literal type="number" pos:start="81:38" pos:end="81:38">0</literal><operator pos:start="81:39" pos:end="81:39">)</operator></expr> ?</condition><then pos:start="81:43" pos:end="81:43"> <expr pos:start="81:43" pos:end="81:43"><literal type="number" pos:start="81:43" pos:end="81:43">4</literal></expr> </then><else pos:start="81:45" pos:end="81:84">: <expr pos:start="81:47" pos:end="81:84"><operator pos:start="81:47" pos:end="81:47">(</operator><ternary pos:start="81:48" pos:end="81:83"><condition pos:start="81:48" pos:end="81:58"><expr pos:start="81:48" pos:end="81:56"><operator pos:start="81:48" pos:end="81:48">(</operator><name pos:start="81:49" pos:end="81:51">run</name> <operator pos:start="81:53" pos:end="81:53">&lt;</operator> <literal type="number" pos:start="81:55" pos:end="81:55">3</literal><operator pos:start="81:56" pos:end="81:56">)</operator></expr> ?</condition><then pos:start="81:60" pos:end="81:60"> <expr pos:start="81:60" pos:end="81:60"><literal type="number" pos:start="81:60" pos:end="81:60">2</literal></expr> </then><else pos:start="81:62" pos:end="81:83">: <expr pos:start="81:64" pos:end="81:83"><operator pos:start="81:64" pos:end="81:64">(</operator><ternary pos:start="81:65" pos:end="81:82"><condition pos:start="81:65" pos:end="81:76"><expr pos:start="81:65" pos:end="81:74"><operator pos:start="81:65" pos:end="81:65">(</operator><name pos:start="81:66" pos:end="81:68">run</name> <operator pos:start="81:70" pos:end="81:70">&lt;</operator> <literal type="number" pos:start="81:72" pos:end="81:73">10</literal><operator pos:start="81:74" pos:end="81:74">)</operator></expr> ?</condition><then pos:start="81:78" pos:end="81:78"> <expr pos:start="81:78" pos:end="81:78"><literal type="number" pos:start="81:78" pos:end="81:78">1</literal></expr> </then><else pos:start="81:80" pos:end="81:82">: <expr pos:start="81:82" pos:end="81:82"><literal type="number" pos:start="81:82" pos:end="81:82">0</literal></expr></else></ternary><operator pos:start="81:83" pos:end="81:83">)</operator></expr></else></ternary><operator pos:start="81:84" pos:end="81:84">)</operator></expr></else></ternary><operator pos:start="81:85" pos:end="81:85">)</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="89:13" pos:end="91:26"><if pos:start="89:13" pos:end="91:26">if <condition pos:start="89:16" pos:end="89:40">(<expr pos:start="89:17" pos:end="89:39"><operator pos:start="89:17" pos:end="89:17">(</operator><name pos:start="89:18" pos:end="89:22">index</name> <operator pos:start="89:24" pos:end="89:25">+=</operator> <name pos:start="89:27" pos:end="89:29">run</name><operator pos:start="89:30" pos:end="89:30">)</operator> <operator pos:start="89:32" pos:end="89:33">&gt;=</operator> <name pos:start="89:35" pos:end="89:39">limit</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:26"><block_content pos:start="91:17" pos:end="91:26">

                <return pos:start="91:17" pos:end="91:26">return <expr pos:start="91:24" pos:end="91:25"><operator pos:start="91:24" pos:end="91:24">-</operator><literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:55"><expr pos:start="95:13" pos:end="95:54"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:17">block</name><index pos:start="95:18" pos:end="95:30">[<expr pos:start="95:19" pos:end="95:29"><name pos:start="95:19" pos:end="95:29"><name pos:start="95:19" pos:end="95:22">scan</name><index pos:start="95:23" pos:end="95:29">[<expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">index</name></expr>]</index></name></expr>]</index></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <operator pos:start="95:34" pos:end="95:34">(</operator><name pos:start="95:35" pos:end="95:39">level</name> <operator pos:start="95:41" pos:end="95:41">^</operator> <name pos:start="95:43" pos:end="95:46">sign</name><operator pos:start="95:47" pos:end="95:47">)</operator> <operator pos:start="95:49" pos:end="95:49">-</operator> <name pos:start="95:51" pos:end="95:54">sign</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:22">(<expr pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:16">type</name> <operator pos:start="101:18" pos:end="101:19">!=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">2</literal></expr>)</condition> <block pos:start="101:24" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:18">

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
