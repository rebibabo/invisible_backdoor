<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4857.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">yuv4_read_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:35"><name pos:start="7:10" pos:end="7:15">header</name><index pos:start="7:16" pos:end="7:35">[<expr pos:start="7:17" pos:end="7:34"><name pos:start="7:17" pos:end="7:32">MAX_FRAME_HEADER</name><operator pos:start="7:33" pos:end="7:33">+</operator><literal type="number" pos:start="7:34" pos:end="7:34">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">off</name> <init pos:start="11:17" pos:end="11:34">= <expr pos:start="11:19" pos:end="11:34"><call pos:start="11:19" pos:end="11:34"><name pos:start="11:19" pos:end="11:27">avio_tell</name><argument_list pos:start="11:28" pos:end="11:34">(<argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:33">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="27:5">for <control pos:start="15:9" pos:end="15:42">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:37"><expr pos:start="15:17" pos:end="15:36"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:36">MAX_FRAME_HEADER</name></expr>;</condition> <incr pos:start="15:39" pos:end="15:41"><expr pos:start="15:39" pos:end="15:41"><name pos:start="15:39" pos:end="15:39">i</name><operator pos:start="15:40" pos:end="15:41">++</operator></expr></incr>)</control> <block pos:start="15:44" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:9">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:14">header</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:34"><name pos:start="17:21" pos:end="17:27">avio_r8</name><argument_list pos:start="17:28" pos:end="17:34">(<argument pos:start="17:29" pos:end="17:33"><expr pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:18">header</name><index pos:start="19:19" pos:end="19:21">[<expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">i</name></expr>]</index></name> <operator pos:start="19:23" pos:end="19:24">==</operator> <literal type="char" pos:start="19:26" pos:end="19:29">'\n'</literal></expr>)</condition> <block pos:start="19:32" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:18">

            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:18">header</name><index pos:start="21:19" pos:end="21:25">[<expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:20">i</name> <operator pos:start="21:22" pos:end="21:22">+</operator> <literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr>]</index></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="29:5" pos:end="39:35"><if pos:start="29:5" pos:end="31:28">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:13">pb</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:20">error</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:28"><block_content pos:start="31:9" pos:end="31:28">

        <return pos:start="31:9" pos:end="31:28">return <expr pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:20">pb</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">error</name></name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="33:5" pos:end="35:27">else if <condition pos:start="33:13" pos:end="33:32">(<expr pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:18">pb</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:31">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:27"><block_content pos:start="35:9" pos:end="35:27">

        <return pos:start="35:9" pos:end="35:27">return <expr pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:26">AVERROR_EOF</name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="37:5" pos:end="39:35">else if <condition pos:start="37:13" pos:end="37:35">(<expr pos:start="37:14" pos:end="37:34"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:17">==</operator> <name pos:start="37:19" pos:end="37:34">MAX_FRAME_HEADER</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:35"><block_content pos:start="39:9" pos:end="39:35">

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:35"><if pos:start="43:5" pos:end="45:35">if <condition pos:start="43:8" pos:end="43:66">(<expr pos:start="43:9" pos:end="43:65"><call pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:15">strncmp</name><argument_list pos:start="43:16" pos:end="43:65">(<argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">header</name></expr></argument>, <argument pos:start="43:25" pos:end="43:39"><expr pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:39">Y4M_FRAME_MAGIC</name></expr></argument>, <argument pos:start="43:42" pos:end="43:64"><expr pos:start="43:42" pos:end="43:64"><call pos:start="43:42" pos:end="43:64"><name pos:start="43:42" pos:end="43:47">strlen</name><argument_list pos:start="43:48" pos:end="43:64">(<argument pos:start="43:49" pos:end="43:63"><expr pos:start="43:49" pos:end="43:63"><name pos:start="43:49" pos:end="43:63">Y4M_FRAME_MAGIC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:35"><block_content pos:start="45:9" pos:end="45:35">

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:73"><name pos:start="49:11" pos:end="49:23">av_get_packet</name><argument_list pos:start="49:24" pos:end="49:73">(<argument pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">s</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">pb</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">pkt</name></expr></argument>, <argument pos:start="49:37" pos:end="49:72"><expr pos:start="49:37" pos:end="49:72"><name pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">packet_size</name></name> <operator pos:start="49:52" pos:end="49:52">-</operator> <name pos:start="49:54" pos:end="49:72">Y4M_FRAME_MAGIC_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:63"><if pos:start="51:5" pos:end="53:19">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:19"><block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="55:5" pos:end="57:63">else if <condition pos:start="55:13" pos:end="55:57">(<expr pos:start="55:14" pos:end="55:56"><name pos:start="55:14" pos:end="55:16">ret</name> <operator pos:start="55:18" pos:end="55:19">!=</operator> <name pos:start="55:21" pos:end="55:34"><name pos:start="55:21" pos:end="55:21">s</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:34">packet_size</name></name> <operator pos:start="55:36" pos:end="55:36">-</operator> <name pos:start="55:38" pos:end="55:56">Y4M_FRAME_MAGIC_LEN</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:63"><block_content pos:start="57:9" pos:end="57:63">

        <return pos:start="57:9" pos:end="57:63">return <expr pos:start="57:16" pos:end="57:62"><ternary pos:start="57:16" pos:end="57:62"><condition pos:start="57:16" pos:end="57:35"><expr pos:start="57:16" pos:end="57:33"><name pos:start="57:16" pos:end="57:33"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:20">pb</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:33">eof_reached</name></name></expr> ?</condition><then pos:start="57:37" pos:end="57:47"> <expr pos:start="57:37" pos:end="57:47"><name pos:start="57:37" pos:end="57:47">AVERROR_EOF</name></expr> </then><else pos:start="57:49" pos:end="57:62">: <expr pos:start="57:51" pos:end="57:62"><call pos:start="57:51" pos:end="57:62"><name pos:start="57:51" pos:end="57:57">AVERROR</name><argument_list pos:start="57:58" pos:end="57:62">(<argument pos:start="57:59" pos:end="57:61"><expr pos:start="57:59" pos:end="57:61"><name pos:start="57:59" pos:end="57:61">EIO</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:7">pkt</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:21">stream_index</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:65"><expr pos:start="63:5" pos:end="63:64"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:7">pkt</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:12">pts</name></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <operator pos:start="63:16" pos:end="63:16">(</operator><name pos:start="63:17" pos:end="63:19">off</name> <operator pos:start="63:21" pos:end="63:21">-</operator> <name pos:start="63:23" pos:end="63:46"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:33">internal</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:46">data_offset</name></name><operator pos:start="63:47" pos:end="63:47">)</operator> <operator pos:start="63:49" pos:end="63:49">/</operator> <name pos:start="63:51" pos:end="63:64"><name pos:start="63:51" pos:end="63:51">s</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:64">packet_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:7">pkt</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:17">duration</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
