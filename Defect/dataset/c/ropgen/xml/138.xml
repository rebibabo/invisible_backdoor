<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/138.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ff_print_debug_info</name><parameter_list pos:start="1:25" pos:end="1:55">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">MpegEncContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:51">Picture</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="191:1">{<block_content pos:start="5:5" pos:end="189:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">pict</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:15"><if pos:start="7:5" pos:end="9:15">if <condition pos:start="7:8" pos:end="7:47">(<expr pos:start="7:9" pos:end="7:46"><name pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:9">s</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:16">avctx</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:25">hwaccel</name></name> <operator pos:start="7:27" pos:end="7:28">||</operator> <operator pos:start="7:30" pos:end="7:30">!</operator><name pos:start="7:31" pos:end="7:31">p</name> <operator pos:start="7:33" pos:end="7:34">||</operator> <operator pos:start="7:36" pos:end="7:36">!</operator><name pos:start="7:37" pos:end="7:46"><name pos:start="7:37" pos:end="7:37">p</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:46">mb_type</name></name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:15"><block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">pict</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <operator pos:start="11:12" pos:end="11:12">&amp;</operator><name pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">p</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:16">f</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="189:5"><if pos:start="15:5" pos:end="189:5">if <condition pos:start="15:8" pos:end="15:75">(<expr pos:start="15:9" pos:end="15:74"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">avctx</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">debug</name></name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <operator pos:start="15:27" pos:end="15:27">(</operator><name pos:start="15:28" pos:end="15:40">FF_DEBUG_SKIP</name> <operator pos:start="15:42" pos:end="15:42">|</operator> <name pos:start="15:44" pos:end="15:54">FF_DEBUG_QP</name> <operator pos:start="15:56" pos:end="15:56">|</operator> <name pos:start="15:58" pos:end="15:73">FF_DEBUG_MB_TYPE</name><operator pos:start="15:74" pos:end="15:74">)</operator></expr>)</condition> <block pos:start="15:77" pos:end="189:5">{<block_content pos:start="17:9" pos:end="187:9">

        <decl_stmt pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">x</name></decl>,<decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:15" pos:end="17:15">y</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:58"><expr pos:start="21:9" pos:end="21:57"><call pos:start="21:9" pos:end="21:57"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:57">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>,<argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="21:38" pos:end="21:56"><expr pos:start="21:38" pos:end="21:56"><literal type="string" pos:start="21:38" pos:end="21:56">"New frame, type: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="61:9">switch <condition pos:start="23:16" pos:end="23:32">(<expr pos:start="23:17" pos:end="23:31"><name pos:start="23:17" pos:end="23:31"><name pos:start="23:17" pos:end="23:20">pict</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:31">pict_type</name></name></expr>)</condition> <block pos:start="23:34" pos:end="61:9">{<block_content pos:start="25:9" pos:end="59:18">

        <case pos:start="25:9" pos:end="25:31">case <expr pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:30">AV_PICTURE_TYPE_I</name></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><call pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:47">(<argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">avctx</name></name></expr></argument>,<argument pos:start="27:29" pos:end="27:40"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:40">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="27:42" pos:end="27:46"><expr pos:start="27:42" pos:end="27:46"><literal type="string" pos:start="27:42" pos:end="27:46">"I\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:31">case <expr pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:30">AV_PICTURE_TYPE_P</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:48"><expr pos:start="33:13" pos:end="33:47"><call pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:47">(<argument pos:start="33:20" pos:end="33:27"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">avctx</name></name></expr></argument>,<argument pos:start="33:29" pos:end="33:40"><expr pos:start="33:29" pos:end="33:40"><name pos:start="33:29" pos:end="33:40">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="33:42" pos:end="33:46"><expr pos:start="33:42" pos:end="33:46"><literal type="string" pos:start="33:42" pos:end="33:46">"P\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:31">case <expr pos:start="37:14" pos:end="37:30"><name pos:start="37:14" pos:end="37:30">AV_PICTURE_TYPE_B</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:48"><expr pos:start="39:13" pos:end="39:47"><call pos:start="39:13" pos:end="39:47"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:47">(<argument pos:start="39:20" pos:end="39:27"><expr pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:27">avctx</name></name></expr></argument>,<argument pos:start="39:29" pos:end="39:40"><expr pos:start="39:29" pos:end="39:40"><name pos:start="39:29" pos:end="39:40">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><literal type="string" pos:start="39:42" pos:end="39:46">"B\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <case pos:start="43:9" pos:end="43:31">case <expr pos:start="43:14" pos:end="43:30"><name pos:start="43:14" pos:end="43:30">AV_PICTURE_TYPE_S</name></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:48"><expr pos:start="45:13" pos:end="45:47"><call pos:start="45:13" pos:end="45:47"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="45:47">(<argument pos:start="45:20" pos:end="45:27"><expr pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:27">avctx</name></name></expr></argument>,<argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:40">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="45:42" pos:end="45:46"><expr pos:start="45:42" pos:end="45:46"><literal type="string" pos:start="45:42" pos:end="45:46">"S\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:32">case <expr pos:start="49:14" pos:end="49:31"><name pos:start="49:14" pos:end="49:31">AV_PICTURE_TYPE_SI</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:49"><expr pos:start="51:13" pos:end="51:48"><call pos:start="51:13" pos:end="51:48"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:48">(<argument pos:start="51:20" pos:end="51:27"><expr pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">avctx</name></name></expr></argument>,<argument pos:start="51:29" pos:end="51:40"><expr pos:start="51:29" pos:end="51:40"><name pos:start="51:29" pos:end="51:40">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="51:42" pos:end="51:47"><expr pos:start="51:42" pos:end="51:47"><literal type="string" pos:start="51:42" pos:end="51:47">"SI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:32">case <expr pos:start="55:14" pos:end="55:31"><name pos:start="55:14" pos:end="55:31">AV_PICTURE_TYPE_SP</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><call pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:48">(<argument pos:start="57:20" pos:end="57:27"><expr pos:start="57:20" pos:end="57:27"><name pos:start="57:20" pos:end="57:27"><name pos:start="57:20" pos:end="57:20">s</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:27">avctx</name></name></expr></argument>,<argument pos:start="57:29" pos:end="57:40"><expr pos:start="57:29" pos:end="57:40"><name pos:start="57:29" pos:end="57:40">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="57:42" pos:end="57:47"><expr pos:start="57:42" pos:end="57:47"><literal type="string" pos:start="57:42" pos:end="57:47">"SP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        </block_content>}</block></switch>

        <for pos:start="63:9" pos:end="187:9">for <control pos:start="63:13" pos:end="63:42">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">y</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:37"><expr pos:start="63:21" pos:end="63:36"><name pos:start="63:21" pos:end="63:21">y</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:36">mb_height</name></name></expr>;</condition> <incr pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><name pos:start="63:39" pos:end="63:39">y</name><operator pos:start="63:40" pos:end="63:41">++</operator></expr></incr>)</control> <block pos:start="63:44" pos:end="187:9">{<block_content pos:start="65:13" pos:end="185:49">

            <for pos:start="65:13" pos:end="183:13">for <control pos:start="65:17" pos:end="65:45">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">x</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:40"><expr pos:start="65:25" pos:end="65:39"><name pos:start="65:25" pos:end="65:25">x</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:29">s</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:39">mb_width</name></name></expr>;</condition> <incr pos:start="65:42" pos:end="65:44"><expr pos:start="65:42" pos:end="65:44"><name pos:start="65:42" pos:end="65:42">x</name><operator pos:start="65:43" pos:end="65:44">++</operator></expr></incr>)</control> <block pos:start="65:47" pos:end="183:13">{<block_content pos:start="67:17" pos:end="181:17">

                <if_stmt pos:start="67:17" pos:end="77:17"><if pos:start="67:17" pos:end="77:17">if <condition pos:start="67:20" pos:end="67:52">(<expr pos:start="67:21" pos:end="67:51"><name pos:start="67:21" pos:end="67:35"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:28">avctx</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:35">debug</name></name> <operator pos:start="67:37" pos:end="67:37">&amp;</operator> <name pos:start="67:39" pos:end="67:51">FF_DEBUG_SKIP</name></expr>)</condition> <block pos:start="67:54" pos:end="77:17">{<block_content pos:start="69:21" pos:end="75:65">

                    <decl_stmt pos:start="69:21" pos:end="69:70"><decl pos:start="69:21" pos:end="69:69"><type pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">int</name></type> <name pos:start="69:25" pos:end="69:29">count</name> <init pos:start="69:31" pos:end="69:69">= <expr pos:start="69:33" pos:end="69:69"><name pos:start="69:33" pos:end="69:69"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:47">mbskip_table</name><index pos:start="69:48" pos:end="69:69">[<expr pos:start="69:49" pos:end="69:68"><name pos:start="69:49" pos:end="69:49">x</name> <operator pos:start="69:51" pos:end="69:51">+</operator> <name pos:start="69:53" pos:end="69:53">y</name> <operator pos:start="69:55" pos:end="69:55">*</operator> <name pos:start="69:57" pos:end="69:68"><name pos:start="69:57" pos:end="69:57">s</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:68">mb_stride</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="71:21" pos:end="73:34"><if pos:start="71:21" pos:end="73:34">if <condition pos:start="71:24" pos:end="71:34">(<expr pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:29">count</name> <operator pos:start="71:31" pos:end="71:31">&gt;</operator> <literal type="number" pos:start="71:33" pos:end="71:33">9</literal></expr>)</condition><block type="pseudo" pos:start="73:25" pos:end="73:34"><block_content pos:start="73:25" pos:end="73:34">

                        <expr_stmt pos:start="73:25" pos:end="73:34"><expr pos:start="73:25" pos:end="73:33"><name pos:start="73:25" pos:end="73:29">count</name> <operator pos:start="73:31" pos:end="73:31">=</operator> <literal type="number" pos:start="73:33" pos:end="73:33">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:65"><expr pos:start="75:21" pos:end="75:64"><call pos:start="75:21" pos:end="75:64"><name pos:start="75:21" pos:end="75:26">av_log</name><argument_list pos:start="75:27" pos:end="75:64">(<argument pos:start="75:28" pos:end="75:35"><expr pos:start="75:28" pos:end="75:35"><name pos:start="75:28" pos:end="75:35"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:35">avctx</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:49"><expr pos:start="75:38" pos:end="75:49"><name pos:start="75:38" pos:end="75:49">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="75:52" pos:end="75:56"><expr pos:start="75:52" pos:end="75:56"><literal type="string" pos:start="75:52" pos:end="75:56">"%1d"</literal></expr></argument>, <argument pos:start="75:59" pos:end="75:63"><expr pos:start="75:59" pos:end="75:63"><name pos:start="75:59" pos:end="75:63">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="79:17" pos:end="85:17"><if pos:start="79:17" pos:end="85:17">if <condition pos:start="79:20" pos:end="79:50">(<expr pos:start="79:21" pos:end="79:49"><name pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:28">avctx</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:35">debug</name></name> <operator pos:start="79:37" pos:end="79:37">&amp;</operator> <name pos:start="79:39" pos:end="79:49">FF_DEBUG_QP</name></expr>)</condition> <block pos:start="79:52" pos:end="85:17">{<block_content pos:start="81:21" pos:end="83:66">

                    <expr_stmt pos:start="81:21" pos:end="83:66"><expr pos:start="81:21" pos:end="83:65"><call pos:start="81:21" pos:end="83:65"><name pos:start="81:21" pos:end="81:26">av_log</name><argument_list pos:start="81:27" pos:end="83:65">(<argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:35">avctx</name></name></expr></argument>, <argument pos:start="81:38" pos:end="81:49"><expr pos:start="81:38" pos:end="81:49"><name pos:start="81:38" pos:end="81:49">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:52" pos:end="81:56"><expr pos:start="81:52" pos:end="81:56"><literal type="string" pos:start="81:52" pos:end="81:56">"%2d"</literal></expr></argument>,

                           <argument pos:start="83:28" pos:end="83:64"><expr pos:start="83:28" pos:end="83:64"><name pos:start="83:28" pos:end="83:64"><name pos:start="83:28" pos:end="83:28">p</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:42">qscale_table</name><index pos:start="83:43" pos:end="83:64">[<expr pos:start="83:44" pos:end="83:63"><name pos:start="83:44" pos:end="83:44">x</name> <operator pos:start="83:46" pos:end="83:46">+</operator> <name pos:start="83:48" pos:end="83:48">y</name> <operator pos:start="83:50" pos:end="83:50">*</operator> <name pos:start="83:52" pos:end="83:63"><name pos:start="83:52" pos:end="83:52">s</name><operator pos:start="83:53" pos:end="83:54">-&gt;</operator><name pos:start="83:55" pos:end="83:63">mb_stride</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="87:17" pos:end="181:17"><if pos:start="87:17" pos:end="181:17">if <condition pos:start="87:20" pos:end="87:55">(<expr pos:start="87:21" pos:end="87:54"><name pos:start="87:21" pos:end="87:35"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:28">avctx</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:35">debug</name></name> <operator pos:start="87:37" pos:end="87:37">&amp;</operator> <name pos:start="87:39" pos:end="87:54">FF_DEBUG_MB_TYPE</name></expr>)</condition> <block pos:start="87:57" pos:end="181:17">{<block_content pos:start="89:21" pos:end="179:60">

                    <decl_stmt pos:start="89:21" pos:end="89:67"><decl pos:start="89:21" pos:end="89:66"><type pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">int</name></type> <name pos:start="89:25" pos:end="89:31">mb_type</name> <init pos:start="89:33" pos:end="89:66">= <expr pos:start="89:35" pos:end="89:66"><name pos:start="89:35" pos:end="89:66"><name pos:start="89:35" pos:end="89:35">p</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:44">mb_type</name><index pos:start="89:45" pos:end="89:66">[<expr pos:start="89:46" pos:end="89:65"><name pos:start="89:46" pos:end="89:46">x</name> <operator pos:start="89:48" pos:end="89:48">+</operator> <name pos:start="89:50" pos:end="89:50">y</name> <operator pos:start="89:52" pos:end="89:52">*</operator> <name pos:start="89:54" pos:end="89:65"><name pos:start="89:54" pos:end="89:54">s</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:65">mb_stride</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <comment type="line" pos:start="91:21" pos:end="91:42">// Type &amp; MV direction</comment>

                    <if_stmt pos:start="93:21" pos:end="143:21"><if pos:start="93:21" pos:end="95:60">if <condition pos:start="93:24" pos:end="93:40">(<expr pos:start="93:25" pos:end="93:39"><call pos:start="93:25" pos:end="93:39"><name pos:start="93:25" pos:end="93:30">IS_PCM</name><argument_list pos:start="93:31" pos:end="93:39">(<argument pos:start="93:32" pos:end="93:38"><expr pos:start="93:32" pos:end="93:38"><name pos:start="93:32" pos:end="93:38">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:25" pos:end="95:60"><block_content pos:start="95:25" pos:end="95:60">

                        <expr_stmt pos:start="95:25" pos:end="95:60"><expr pos:start="95:25" pos:end="95:59"><call pos:start="95:25" pos:end="95:59"><name pos:start="95:25" pos:end="95:30">av_log</name><argument_list pos:start="95:31" pos:end="95:59">(<argument pos:start="95:32" pos:end="95:39"><expr pos:start="95:32" pos:end="95:39"><name pos:start="95:32" pos:end="95:39"><name pos:start="95:32" pos:end="95:32">s</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:39">avctx</name></name></expr></argument>, <argument pos:start="95:42" pos:end="95:53"><expr pos:start="95:42" pos:end="95:53"><name pos:start="95:42" pos:end="95:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="95:56" pos:end="95:58"><expr pos:start="95:56" pos:end="95:58"><literal type="string" pos:start="95:56" pos:end="95:58">"P"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="97:21" pos:end="99:60">else if <condition pos:start="97:29" pos:end="97:69">(<expr pos:start="97:30" pos:end="97:68"><call pos:start="97:30" pos:end="97:46"><name pos:start="97:30" pos:end="97:37">IS_INTRA</name><argument_list pos:start="97:38" pos:end="97:46">(<argument pos:start="97:39" pos:end="97:45"><expr pos:start="97:39" pos:end="97:45"><name pos:start="97:39" pos:end="97:45">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="97:48" pos:end="97:49">&amp;&amp;</operator> <call pos:start="97:51" pos:end="97:68"><name pos:start="97:51" pos:end="97:59">IS_ACPRED</name><argument_list pos:start="97:60" pos:end="97:68">(<argument pos:start="97:61" pos:end="97:67"><expr pos:start="97:61" pos:end="97:67"><name pos:start="97:61" pos:end="97:67">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:25" pos:end="99:60"><block_content pos:start="99:25" pos:end="99:60">

                        <expr_stmt pos:start="99:25" pos:end="99:60"><expr pos:start="99:25" pos:end="99:59"><call pos:start="99:25" pos:end="99:59"><name pos:start="99:25" pos:end="99:30">av_log</name><argument_list pos:start="99:31" pos:end="99:59">(<argument pos:start="99:32" pos:end="99:39"><expr pos:start="99:32" pos:end="99:39"><name pos:start="99:32" pos:end="99:39"><name pos:start="99:32" pos:end="99:32">s</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:39">avctx</name></name></expr></argument>, <argument pos:start="99:42" pos:end="99:53"><expr pos:start="99:42" pos:end="99:53"><name pos:start="99:42" pos:end="99:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="99:56" pos:end="99:58"><expr pos:start="99:56" pos:end="99:58"><literal type="string" pos:start="99:56" pos:end="99:58">"A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="101:21" pos:end="103:60">else if <condition pos:start="101:29" pos:end="101:50">(<expr pos:start="101:30" pos:end="101:49"><call pos:start="101:30" pos:end="101:49"><name pos:start="101:30" pos:end="101:40">IS_INTRA4x4</name><argument_list pos:start="101:41" pos:end="101:49">(<argument pos:start="101:42" pos:end="101:48"><expr pos:start="101:42" pos:end="101:48"><name pos:start="101:42" pos:end="101:48">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="103:25" pos:end="103:60"><block_content pos:start="103:25" pos:end="103:60">

                        <expr_stmt pos:start="103:25" pos:end="103:60"><expr pos:start="103:25" pos:end="103:59"><call pos:start="103:25" pos:end="103:59"><name pos:start="103:25" pos:end="103:30">av_log</name><argument_list pos:start="103:31" pos:end="103:59">(<argument pos:start="103:32" pos:end="103:39"><expr pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:32">s</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:39">avctx</name></name></expr></argument>, <argument pos:start="103:42" pos:end="103:53"><expr pos:start="103:42" pos:end="103:53"><name pos:start="103:42" pos:end="103:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="103:56" pos:end="103:58"><expr pos:start="103:56" pos:end="103:58"><literal type="string" pos:start="103:56" pos:end="103:58">"i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="105:21" pos:end="107:60">else if <condition pos:start="105:29" pos:end="105:52">(<expr pos:start="105:30" pos:end="105:51"><call pos:start="105:30" pos:end="105:51"><name pos:start="105:30" pos:end="105:42">IS_INTRA16x16</name><argument_list pos:start="105:43" pos:end="105:51">(<argument pos:start="105:44" pos:end="105:50"><expr pos:start="105:44" pos:end="105:50"><name pos:start="105:44" pos:end="105:50">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="107:25" pos:end="107:60"><block_content pos:start="107:25" pos:end="107:60">

                        <expr_stmt pos:start="107:25" pos:end="107:60"><expr pos:start="107:25" pos:end="107:59"><call pos:start="107:25" pos:end="107:59"><name pos:start="107:25" pos:end="107:30">av_log</name><argument_list pos:start="107:31" pos:end="107:59">(<argument pos:start="107:32" pos:end="107:39"><expr pos:start="107:32" pos:end="107:39"><name pos:start="107:32" pos:end="107:39"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:39">avctx</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:53"><expr pos:start="107:42" pos:end="107:53"><name pos:start="107:42" pos:end="107:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="107:56" pos:end="107:58"><expr pos:start="107:56" pos:end="107:58"><literal type="string" pos:start="107:56" pos:end="107:58">"I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="109:21" pos:end="111:60">else if <condition pos:start="109:29" pos:end="109:68">(<expr pos:start="109:30" pos:end="109:67"><call pos:start="109:30" pos:end="109:47"><name pos:start="109:30" pos:end="109:38">IS_DIRECT</name><argument_list pos:start="109:39" pos:end="109:47">(<argument pos:start="109:40" pos:end="109:46"><expr pos:start="109:40" pos:end="109:46"><name pos:start="109:40" pos:end="109:46">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="109:49" pos:end="109:50">&amp;&amp;</operator> <call pos:start="109:52" pos:end="109:67"><name pos:start="109:52" pos:end="109:58">IS_SKIP</name><argument_list pos:start="109:59" pos:end="109:67">(<argument pos:start="109:60" pos:end="109:66"><expr pos:start="109:60" pos:end="109:66"><name pos:start="109:60" pos:end="109:66">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:25" pos:end="111:60"><block_content pos:start="111:25" pos:end="111:60">

                        <expr_stmt pos:start="111:25" pos:end="111:60"><expr pos:start="111:25" pos:end="111:59"><call pos:start="111:25" pos:end="111:59"><name pos:start="111:25" pos:end="111:30">av_log</name><argument_list pos:start="111:31" pos:end="111:59">(<argument pos:start="111:32" pos:end="111:39"><expr pos:start="111:32" pos:end="111:39"><name pos:start="111:32" pos:end="111:39"><name pos:start="111:32" pos:end="111:32">s</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:39">avctx</name></name></expr></argument>, <argument pos:start="111:42" pos:end="111:53"><expr pos:start="111:42" pos:end="111:53"><name pos:start="111:42" pos:end="111:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="111:56" pos:end="111:58"><expr pos:start="111:56" pos:end="111:58"><literal type="string" pos:start="111:56" pos:end="111:58">"d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="113:21" pos:end="115:60">else if <condition pos:start="113:29" pos:end="113:48">(<expr pos:start="113:30" pos:end="113:47"><call pos:start="113:30" pos:end="113:47"><name pos:start="113:30" pos:end="113:38">IS_DIRECT</name><argument_list pos:start="113:39" pos:end="113:47">(<argument pos:start="113:40" pos:end="113:46"><expr pos:start="113:40" pos:end="113:46"><name pos:start="113:40" pos:end="113:46">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:60"><block_content pos:start="115:25" pos:end="115:60">

                        <expr_stmt pos:start="115:25" pos:end="115:60"><expr pos:start="115:25" pos:end="115:59"><call pos:start="115:25" pos:end="115:59"><name pos:start="115:25" pos:end="115:30">av_log</name><argument_list pos:start="115:31" pos:end="115:59">(<argument pos:start="115:32" pos:end="115:39"><expr pos:start="115:32" pos:end="115:39"><name pos:start="115:32" pos:end="115:39"><name pos:start="115:32" pos:end="115:32">s</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:39">avctx</name></name></expr></argument>, <argument pos:start="115:42" pos:end="115:53"><expr pos:start="115:42" pos:end="115:53"><name pos:start="115:42" pos:end="115:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="115:56" pos:end="115:58"><expr pos:start="115:56" pos:end="115:58"><literal type="string" pos:start="115:56" pos:end="115:58">"D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="117:21" pos:end="119:60">else if <condition pos:start="117:29" pos:end="117:65">(<expr pos:start="117:30" pos:end="117:64"><call pos:start="117:30" pos:end="117:44"><name pos:start="117:30" pos:end="117:35">IS_GMC</name><argument_list pos:start="117:36" pos:end="117:44">(<argument pos:start="117:37" pos:end="117:43"><expr pos:start="117:37" pos:end="117:43"><name pos:start="117:37" pos:end="117:43">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="117:46" pos:end="117:47">&amp;&amp;</operator> <call pos:start="117:49" pos:end="117:64"><name pos:start="117:49" pos:end="117:55">IS_SKIP</name><argument_list pos:start="117:56" pos:end="117:64">(<argument pos:start="117:57" pos:end="117:63"><expr pos:start="117:57" pos:end="117:63"><name pos:start="117:57" pos:end="117:63">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:25" pos:end="119:60"><block_content pos:start="119:25" pos:end="119:60">

                        <expr_stmt pos:start="119:25" pos:end="119:60"><expr pos:start="119:25" pos:end="119:59"><call pos:start="119:25" pos:end="119:59"><name pos:start="119:25" pos:end="119:30">av_log</name><argument_list pos:start="119:31" pos:end="119:59">(<argument pos:start="119:32" pos:end="119:39"><expr pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:32">s</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:39">avctx</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:53"><expr pos:start="119:42" pos:end="119:53"><name pos:start="119:42" pos:end="119:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="119:56" pos:end="119:58"><expr pos:start="119:56" pos:end="119:58"><literal type="string" pos:start="119:56" pos:end="119:58">"g"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="121:21" pos:end="123:60">else if <condition pos:start="121:29" pos:end="121:45">(<expr pos:start="121:30" pos:end="121:44"><call pos:start="121:30" pos:end="121:44"><name pos:start="121:30" pos:end="121:35">IS_GMC</name><argument_list pos:start="121:36" pos:end="121:44">(<argument pos:start="121:37" pos:end="121:43"><expr pos:start="121:37" pos:end="121:43"><name pos:start="121:37" pos:end="121:43">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:25" pos:end="123:60"><block_content pos:start="123:25" pos:end="123:60">

                        <expr_stmt pos:start="123:25" pos:end="123:60"><expr pos:start="123:25" pos:end="123:59"><call pos:start="123:25" pos:end="123:59"><name pos:start="123:25" pos:end="123:30">av_log</name><argument_list pos:start="123:31" pos:end="123:59">(<argument pos:start="123:32" pos:end="123:39"><expr pos:start="123:32" pos:end="123:39"><name pos:start="123:32" pos:end="123:39"><name pos:start="123:32" pos:end="123:32">s</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:39">avctx</name></name></expr></argument>, <argument pos:start="123:42" pos:end="123:53"><expr pos:start="123:42" pos:end="123:53"><name pos:start="123:42" pos:end="123:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="123:56" pos:end="123:58"><expr pos:start="123:56" pos:end="123:58"><literal type="string" pos:start="123:56" pos:end="123:58">"G"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="125:21" pos:end="127:60">else if <condition pos:start="125:29" pos:end="125:46">(<expr pos:start="125:30" pos:end="125:45"><call pos:start="125:30" pos:end="125:45"><name pos:start="125:30" pos:end="125:36">IS_SKIP</name><argument_list pos:start="125:37" pos:end="125:45">(<argument pos:start="125:38" pos:end="125:44"><expr pos:start="125:38" pos:end="125:44"><name pos:start="125:38" pos:end="125:44">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="127:25" pos:end="127:60"><block_content pos:start="127:25" pos:end="127:60">

                        <expr_stmt pos:start="127:25" pos:end="127:60"><expr pos:start="127:25" pos:end="127:59"><call pos:start="127:25" pos:end="127:59"><name pos:start="127:25" pos:end="127:30">av_log</name><argument_list pos:start="127:31" pos:end="127:59">(<argument pos:start="127:32" pos:end="127:39"><expr pos:start="127:32" pos:end="127:39"><name pos:start="127:32" pos:end="127:39"><name pos:start="127:32" pos:end="127:32">s</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:39">avctx</name></name></expr></argument>, <argument pos:start="127:42" pos:end="127:53"><expr pos:start="127:42" pos:end="127:53"><name pos:start="127:42" pos:end="127:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="127:56" pos:end="127:58"><expr pos:start="127:56" pos:end="127:58"><literal type="string" pos:start="127:56" pos:end="127:58">"S"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="129:21" pos:end="131:60">else if <condition pos:start="129:29" pos:end="129:52">(<expr pos:start="129:30" pos:end="129:51"><operator pos:start="129:30" pos:end="129:30">!</operator><call pos:start="129:31" pos:end="129:51"><name pos:start="129:31" pos:end="129:39">USES_LIST</name><argument_list pos:start="129:40" pos:end="129:51">(<argument pos:start="129:41" pos:end="129:47"><expr pos:start="129:41" pos:end="129:47"><name pos:start="129:41" pos:end="129:47">mb_type</name></expr></argument>, <argument pos:start="129:50" pos:end="129:50"><expr pos:start="129:50" pos:end="129:50"><literal type="number" pos:start="129:50" pos:end="129:50">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:25" pos:end="131:60"><block_content pos:start="131:25" pos:end="131:60">

                        <expr_stmt pos:start="131:25" pos:end="131:60"><expr pos:start="131:25" pos:end="131:59"><call pos:start="131:25" pos:end="131:59"><name pos:start="131:25" pos:end="131:30">av_log</name><argument_list pos:start="131:31" pos:end="131:59">(<argument pos:start="131:32" pos:end="131:39"><expr pos:start="131:32" pos:end="131:39"><name pos:start="131:32" pos:end="131:39"><name pos:start="131:32" pos:end="131:32">s</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:39">avctx</name></name></expr></argument>, <argument pos:start="131:42" pos:end="131:53"><expr pos:start="131:42" pos:end="131:53"><name pos:start="131:42" pos:end="131:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="131:56" pos:end="131:58"><expr pos:start="131:56" pos:end="131:58"><literal type="string" pos:start="131:56" pos:end="131:58">"&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="133:21" pos:end="135:60">else if <condition pos:start="133:29" pos:end="133:52">(<expr pos:start="133:30" pos:end="133:51"><operator pos:start="133:30" pos:end="133:30">!</operator><call pos:start="133:31" pos:end="133:51"><name pos:start="133:31" pos:end="133:39">USES_LIST</name><argument_list pos:start="133:40" pos:end="133:51">(<argument pos:start="133:41" pos:end="133:47"><expr pos:start="133:41" pos:end="133:47"><name pos:start="133:41" pos:end="133:47">mb_type</name></expr></argument>, <argument pos:start="133:50" pos:end="133:50"><expr pos:start="133:50" pos:end="133:50"><literal type="number" pos:start="133:50" pos:end="133:50">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:25" pos:end="135:60"><block_content pos:start="135:25" pos:end="135:60">

                        <expr_stmt pos:start="135:25" pos:end="135:60"><expr pos:start="135:25" pos:end="135:59"><call pos:start="135:25" pos:end="135:59"><name pos:start="135:25" pos:end="135:30">av_log</name><argument_list pos:start="135:31" pos:end="135:59">(<argument pos:start="135:32" pos:end="135:39"><expr pos:start="135:32" pos:end="135:39"><name pos:start="135:32" pos:end="135:39"><name pos:start="135:32" pos:end="135:32">s</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:39">avctx</name></name></expr></argument>, <argument pos:start="135:42" pos:end="135:53"><expr pos:start="135:42" pos:end="135:53"><name pos:start="135:42" pos:end="135:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="135:56" pos:end="135:58"><expr pos:start="135:56" pos:end="135:58"><literal type="string" pos:start="135:56" pos:end="135:58">"&lt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="137:21" pos:end="143:21">else <block pos:start="137:26" pos:end="143:21">{<block_content pos:start="139:25" pos:end="141:60">

                        <expr_stmt pos:start="139:25" pos:end="139:79"><expr pos:start="139:25" pos:end="139:78"><call pos:start="139:25" pos:end="139:78"><name pos:start="139:25" pos:end="139:30">assert</name><argument_list pos:start="139:31" pos:end="139:78">(<argument pos:start="139:32" pos:end="139:77"><expr pos:start="139:32" pos:end="139:77"><call pos:start="139:32" pos:end="139:52"><name pos:start="139:32" pos:end="139:40">USES_LIST</name><argument_list pos:start="139:41" pos:end="139:52">(<argument pos:start="139:42" pos:end="139:48"><expr pos:start="139:42" pos:end="139:48"><name pos:start="139:42" pos:end="139:48">mb_type</name></expr></argument>, <argument pos:start="139:51" pos:end="139:51"><expr pos:start="139:51" pos:end="139:51"><literal type="number" pos:start="139:51" pos:end="139:51">0</literal></expr></argument>)</argument_list></call> <operator pos:start="139:54" pos:end="139:55">&amp;&amp;</operator> <call pos:start="139:57" pos:end="139:77"><name pos:start="139:57" pos:end="139:65">USES_LIST</name><argument_list pos:start="139:66" pos:end="139:77">(<argument pos:start="139:67" pos:end="139:73"><expr pos:start="139:67" pos:end="139:73"><name pos:start="139:67" pos:end="139:73">mb_type</name></expr></argument>, <argument pos:start="139:76" pos:end="139:76"><expr pos:start="139:76" pos:end="139:76"><literal type="number" pos:start="139:76" pos:end="139:76">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="141:25" pos:end="141:60"><expr pos:start="141:25" pos:end="141:59"><call pos:start="141:25" pos:end="141:59"><name pos:start="141:25" pos:end="141:30">av_log</name><argument_list pos:start="141:31" pos:end="141:59">(<argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:32">s</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:39">avctx</name></name></expr></argument>, <argument pos:start="141:42" pos:end="141:53"><expr pos:start="141:42" pos:end="141:53"><name pos:start="141:42" pos:end="141:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="141:56" pos:end="141:58"><expr pos:start="141:56" pos:end="141:58"><literal type="string" pos:start="141:56" pos:end="141:58">"X"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <comment type="line" pos:start="147:21" pos:end="147:35">// segmentation</comment>

                    <if_stmt pos:start="149:21" pos:end="167:60"><if pos:start="149:21" pos:end="151:60">if <condition pos:start="149:24" pos:end="149:40">(<expr pos:start="149:25" pos:end="149:39"><call pos:start="149:25" pos:end="149:39"><name pos:start="149:25" pos:end="149:30">IS_8X8</name><argument_list pos:start="149:31" pos:end="149:39">(<argument pos:start="149:32" pos:end="149:38"><expr pos:start="149:32" pos:end="149:38"><name pos:start="149:32" pos:end="149:38">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="151:25" pos:end="151:60"><block_content pos:start="151:25" pos:end="151:60">

                        <expr_stmt pos:start="151:25" pos:end="151:60"><expr pos:start="151:25" pos:end="151:59"><call pos:start="151:25" pos:end="151:59"><name pos:start="151:25" pos:end="151:30">av_log</name><argument_list pos:start="151:31" pos:end="151:59">(<argument pos:start="151:32" pos:end="151:39"><expr pos:start="151:32" pos:end="151:39"><name pos:start="151:32" pos:end="151:39"><name pos:start="151:32" pos:end="151:32">s</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:39">avctx</name></name></expr></argument>, <argument pos:start="151:42" pos:end="151:53"><expr pos:start="151:42" pos:end="151:53"><name pos:start="151:42" pos:end="151:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="151:56" pos:end="151:58"><expr pos:start="151:56" pos:end="151:58"><literal type="string" pos:start="151:56" pos:end="151:58">"+"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="153:21" pos:end="155:60">else if <condition pos:start="153:29" pos:end="153:46">(<expr pos:start="153:30" pos:end="153:45"><call pos:start="153:30" pos:end="153:45"><name pos:start="153:30" pos:end="153:36">IS_16X8</name><argument_list pos:start="153:37" pos:end="153:45">(<argument pos:start="153:38" pos:end="153:44"><expr pos:start="153:38" pos:end="153:44"><name pos:start="153:38" pos:end="153:44">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="155:25" pos:end="155:60"><block_content pos:start="155:25" pos:end="155:60">

                        <expr_stmt pos:start="155:25" pos:end="155:60"><expr pos:start="155:25" pos:end="155:59"><call pos:start="155:25" pos:end="155:59"><name pos:start="155:25" pos:end="155:30">av_log</name><argument_list pos:start="155:31" pos:end="155:59">(<argument pos:start="155:32" pos:end="155:39"><expr pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:32">s</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:39">avctx</name></name></expr></argument>, <argument pos:start="155:42" pos:end="155:53"><expr pos:start="155:42" pos:end="155:53"><name pos:start="155:42" pos:end="155:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="155:56" pos:end="155:58"><expr pos:start="155:56" pos:end="155:58"><literal type="string" pos:start="155:56" pos:end="155:58">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="157:21" pos:end="159:60">else if <condition pos:start="157:29" pos:end="157:46">(<expr pos:start="157:30" pos:end="157:45"><call pos:start="157:30" pos:end="157:45"><name pos:start="157:30" pos:end="157:36">IS_8X16</name><argument_list pos:start="157:37" pos:end="157:45">(<argument pos:start="157:38" pos:end="157:44"><expr pos:start="157:38" pos:end="157:44"><name pos:start="157:38" pos:end="157:44">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="159:25" pos:end="159:60"><block_content pos:start="159:25" pos:end="159:60">

                        <expr_stmt pos:start="159:25" pos:end="159:60"><expr pos:start="159:25" pos:end="159:59"><call pos:start="159:25" pos:end="159:59"><name pos:start="159:25" pos:end="159:30">av_log</name><argument_list pos:start="159:31" pos:end="159:59">(<argument pos:start="159:32" pos:end="159:39"><expr pos:start="159:32" pos:end="159:39"><name pos:start="159:32" pos:end="159:39"><name pos:start="159:32" pos:end="159:32">s</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:39">avctx</name></name></expr></argument>, <argument pos:start="159:42" pos:end="159:53"><expr pos:start="159:42" pos:end="159:53"><name pos:start="159:42" pos:end="159:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="159:56" pos:end="159:58"><expr pos:start="159:56" pos:end="159:58"><literal type="string" pos:start="159:56" pos:end="159:58">"|"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="161:21" pos:end="163:60">else if <condition pos:start="161:29" pos:end="161:68">(<expr pos:start="161:30" pos:end="161:67"><call pos:start="161:30" pos:end="161:46"><name pos:start="161:30" pos:end="161:37">IS_INTRA</name><argument_list pos:start="161:38" pos:end="161:46">(<argument pos:start="161:39" pos:end="161:45"><expr pos:start="161:39" pos:end="161:45"><name pos:start="161:39" pos:end="161:45">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="161:48" pos:end="161:49">||</operator> <call pos:start="161:51" pos:end="161:67"><name pos:start="161:51" pos:end="161:58">IS_16X16</name><argument_list pos:start="161:59" pos:end="161:67">(<argument pos:start="161:60" pos:end="161:66"><expr pos:start="161:60" pos:end="161:66"><name pos:start="161:60" pos:end="161:66">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="163:25" pos:end="163:60"><block_content pos:start="163:25" pos:end="163:60">

                        <expr_stmt pos:start="163:25" pos:end="163:60"><expr pos:start="163:25" pos:end="163:59"><call pos:start="163:25" pos:end="163:59"><name pos:start="163:25" pos:end="163:30">av_log</name><argument_list pos:start="163:31" pos:end="163:59">(<argument pos:start="163:32" pos:end="163:39"><expr pos:start="163:32" pos:end="163:39"><name pos:start="163:32" pos:end="163:39"><name pos:start="163:32" pos:end="163:32">s</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:39">avctx</name></name></expr></argument>, <argument pos:start="163:42" pos:end="163:53"><expr pos:start="163:42" pos:end="163:53"><name pos:start="163:42" pos:end="163:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="163:56" pos:end="163:58"><expr pos:start="163:56" pos:end="163:58"><literal type="string" pos:start="163:56" pos:end="163:58">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="165:21" pos:end="167:60">else<block type="pseudo" pos:start="167:25" pos:end="167:60"><block_content pos:start="167:25" pos:end="167:60">

                        <expr_stmt pos:start="167:25" pos:end="167:60"><expr pos:start="167:25" pos:end="167:59"><call pos:start="167:25" pos:end="167:59"><name pos:start="167:25" pos:end="167:30">av_log</name><argument_list pos:start="167:31" pos:end="167:59">(<argument pos:start="167:32" pos:end="167:39"><expr pos:start="167:32" pos:end="167:39"><name pos:start="167:32" pos:end="167:39"><name pos:start="167:32" pos:end="167:32">s</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:39">avctx</name></name></expr></argument>, <argument pos:start="167:42" pos:end="167:53"><expr pos:start="167:42" pos:end="167:53"><name pos:start="167:42" pos:end="167:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="167:56" pos:end="167:58"><expr pos:start="167:56" pos:end="167:58"><literal type="string" pos:start="167:56" pos:end="167:58">"?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>





                    <if_stmt pos:start="173:21" pos:end="179:60"><if pos:start="173:21" pos:end="175:60">if <condition pos:start="173:24" pos:end="173:47">(<expr pos:start="173:25" pos:end="173:46"><call pos:start="173:25" pos:end="173:46"><name pos:start="173:25" pos:end="173:37">IS_INTERLACED</name><argument_list pos:start="173:38" pos:end="173:46">(<argument pos:start="173:39" pos:end="173:45"><expr pos:start="173:39" pos:end="173:45"><name pos:start="173:39" pos:end="173:45">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="175:25" pos:end="175:60"><block_content pos:start="175:25" pos:end="175:60">

                        <expr_stmt pos:start="175:25" pos:end="175:60"><expr pos:start="175:25" pos:end="175:59"><call pos:start="175:25" pos:end="175:59"><name pos:start="175:25" pos:end="175:30">av_log</name><argument_list pos:start="175:31" pos:end="175:59">(<argument pos:start="175:32" pos:end="175:39"><expr pos:start="175:32" pos:end="175:39"><name pos:start="175:32" pos:end="175:39"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:39">avctx</name></name></expr></argument>, <argument pos:start="175:42" pos:end="175:53"><expr pos:start="175:42" pos:end="175:53"><name pos:start="175:42" pos:end="175:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="175:56" pos:end="175:58"><expr pos:start="175:56" pos:end="175:58"><literal type="string" pos:start="175:56" pos:end="175:58">"="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="177:21" pos:end="179:60">else<block type="pseudo" pos:start="179:25" pos:end="179:60"><block_content pos:start="179:25" pos:end="179:60">

                        <expr_stmt pos:start="179:25" pos:end="179:60"><expr pos:start="179:25" pos:end="179:59"><call pos:start="179:25" pos:end="179:59"><name pos:start="179:25" pos:end="179:30">av_log</name><argument_list pos:start="179:31" pos:end="179:59">(<argument pos:start="179:32" pos:end="179:39"><expr pos:start="179:32" pos:end="179:39"><name pos:start="179:32" pos:end="179:39"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:39">avctx</name></name></expr></argument>, <argument pos:start="179:42" pos:end="179:53"><expr pos:start="179:42" pos:end="179:53"><name pos:start="179:42" pos:end="179:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="179:56" pos:end="179:58"><expr pos:start="179:56" pos:end="179:58"><literal type="string" pos:start="179:56" pos:end="179:58">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="185:13" pos:end="185:49"><expr pos:start="185:13" pos:end="185:48"><call pos:start="185:13" pos:end="185:48"><name pos:start="185:13" pos:end="185:18">av_log</name><argument_list pos:start="185:19" pos:end="185:48">(<argument pos:start="185:20" pos:end="185:27"><expr pos:start="185:20" pos:end="185:27"><name pos:start="185:20" pos:end="185:27"><name pos:start="185:20" pos:end="185:20">s</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:27">avctx</name></name></expr></argument>, <argument pos:start="185:30" pos:end="185:41"><expr pos:start="185:30" pos:end="185:41"><name pos:start="185:30" pos:end="185:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="185:44" pos:end="185:47"><expr pos:start="185:44" pos:end="185:47"><literal type="string" pos:start="185:44" pos:end="185:47">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
