<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14285.c" pos:tabs="8"><function pos:start="1:1" pos:end="519:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">asf_write_header1</name><parameter_list pos:start="1:29" pos:end="1:92">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:66">file_size</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:91"><decl pos:start="1:69" pos:end="1:91"><type pos:start="1:69" pos:end="1:91"><name pos:start="1:69" pos:end="1:75">int64_t</name></type> <name pos:start="1:77" pos:end="1:91">data_chunk_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="519:1">{<block_content pos:start="5:5" pos:end="517:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:27">tags</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:75"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">header_size</name></decl>, <decl pos:start="11:22" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:22">n</name></decl>, <decl pos:start="11:25" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:34">extra_size</name></decl>, <decl pos:start="11:37" pos:end="11:47"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:47">extra_size2</name></decl>, <decl pos:start="11:50" pos:end="11:63"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:50" pos:end="11:63">wav_extra_size</name></decl>, <decl pos:start="11:66" pos:end="11:74"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:66" pos:end="11:74">file_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">has_title</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">metadata_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:25">header_offset</name></decl>, <decl pos:start="19:28" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:28" pos:end="19:34">cur_pos</name></decl>, <decl pos:start="19:37" pos:end="19:40"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:37" pos:end="19:40">hpos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">bit_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:20">duration</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><call pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:20">ff_metadata_conv</name><argument_list pos:start="27:21" pos:end="27:62">(<argument pos:start="27:22" pos:end="27:33"><expr pos:start="27:22" pos:end="27:33"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:33"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:33">metadata</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:55"><expr pos:start="27:36" pos:end="27:55"><name pos:start="27:36" pos:end="27:55">ff_asf_metadata_conv</name></expr></argument>, <argument pos:start="27:58" pos:end="27:61"><expr pos:start="27:58" pos:end="27:61"><name pos:start="27:58" pos:end="27:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:8">tags</name><index pos:start="31:9" pos:end="31:11">[<expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">0</literal></expr>]</index></name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:60"><name pos:start="31:15" pos:end="31:25">av_dict_get</name><argument_list pos:start="31:26" pos:end="31:60">(<argument pos:start="31:27" pos:end="31:37"><expr pos:start="31:27" pos:end="31:37"><name pos:start="31:27" pos:end="31:37"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:37">metadata</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:46"><expr pos:start="31:40" pos:end="31:46"><literal type="string" pos:start="31:40" pos:end="31:46">"title"</literal></expr></argument>    , <argument pos:start="31:53" pos:end="31:56"><expr pos:start="31:53" pos:end="31:56"><name pos:start="31:53" pos:end="31:56">NULL</name></expr></argument>, <argument pos:start="31:59" pos:end="31:59"><expr pos:start="31:59" pos:end="31:59"><literal type="number" pos:start="31:59" pos:end="31:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:61"><expr pos:start="33:5" pos:end="33:60"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:8">tags</name><index pos:start="33:9" pos:end="33:11">[<expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">1</literal></expr>]</index></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:60"><name pos:start="33:15" pos:end="33:25">av_dict_get</name><argument_list pos:start="33:26" pos:end="33:60">(<argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:37">metadata</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:47"><expr pos:start="33:40" pos:end="33:47"><literal type="string" pos:start="33:40" pos:end="33:47">"author"</literal></expr></argument>   , <argument pos:start="33:53" pos:end="33:56"><expr pos:start="33:53" pos:end="33:56"><name pos:start="33:53" pos:end="33:56">NULL</name></expr></argument>, <argument pos:start="33:59" pos:end="33:59"><expr pos:start="33:59" pos:end="33:59"><literal type="number" pos:start="33:59" pos:end="33:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:8">tags</name><index pos:start="35:9" pos:end="35:11">[<expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">2</literal></expr>]</index></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:60"><name pos:start="35:15" pos:end="35:25">av_dict_get</name><argument_list pos:start="35:26" pos:end="35:60">(<argument pos:start="35:27" pos:end="35:37"><expr pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">metadata</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:50"><expr pos:start="35:40" pos:end="35:50"><literal type="string" pos:start="35:40" pos:end="35:50">"copyright"</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:56"><expr pos:start="35:53" pos:end="35:56"><name pos:start="35:53" pos:end="35:56">NULL</name></expr></argument>, <argument pos:start="35:59" pos:end="35:59"><expr pos:start="35:59" pos:end="35:59"><literal type="number" pos:start="35:59" pos:end="35:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:61"><expr pos:start="37:5" pos:end="37:60"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:8">tags</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">3</literal></expr>]</index></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:60"><name pos:start="37:15" pos:end="37:25">av_dict_get</name><argument_list pos:start="37:26" pos:end="37:60">(<argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:37">metadata</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:48"><expr pos:start="37:40" pos:end="37:48"><literal type="string" pos:start="37:40" pos:end="37:48">"comment"</literal></expr></argument>  , <argument pos:start="37:53" pos:end="37:56"><expr pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:56">NULL</name></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:61"><expr pos:start="39:5" pos:end="39:60"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:8">tags</name><index pos:start="39:9" pos:end="39:11">[<expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">4</literal></expr>]</index></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:60"><name pos:start="39:15" pos:end="39:25">av_dict_get</name><argument_list pos:start="39:26" pos:end="39:60">(<argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">metadata</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:47"><expr pos:start="39:40" pos:end="39:47"><literal type="string" pos:start="39:40" pos:end="39:47">"rating"</literal></expr></argument>   , <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">NULL</name></expr></argument>, <argument pos:start="39:59" pos:end="39:59"><expr pos:start="39:59" pos:end="39:59"><literal type="number" pos:start="39:59" pos:end="39:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:52"><expr pos:start="43:5" pos:end="43:51"><name pos:start="43:5" pos:end="43:12">duration</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:18">asf</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:28">duration</name></name> <operator pos:start="43:30" pos:end="43:30">+</operator> <name pos:start="43:32" pos:end="43:43">PREROLL_TIME</name> <operator pos:start="43:45" pos:end="43:45">*</operator> <literal type="number" pos:start="43:47" pos:end="43:51">10000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:68"><expr pos:start="45:5" pos:end="45:67"><name pos:start="45:5" pos:end="45:13">has_title</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:20">tags</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>]</index></name> <operator pos:start="45:25" pos:end="45:26">||</operator> <name pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:31">tags</name><index pos:start="45:32" pos:end="45:34">[<expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr>]</index></name> <operator pos:start="45:36" pos:end="45:37">||</operator> <name pos:start="45:39" pos:end="45:45"><name pos:start="45:39" pos:end="45:42">tags</name><index pos:start="45:43" pos:end="45:45">[<expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">2</literal></expr>]</index></name> <operator pos:start="45:47" pos:end="45:48">||</operator> <name pos:start="45:50" pos:end="45:56"><name pos:start="45:50" pos:end="45:53">tags</name><index pos:start="45:54" pos:end="45:56">[<expr pos:start="45:55" pos:end="45:55"><literal type="number" pos:start="45:55" pos:end="45:55">3</literal></expr>]</index></name> <operator pos:start="45:58" pos:end="45:59">||</operator> <name pos:start="45:61" pos:end="45:67"><name pos:start="45:61" pos:end="45:64">tags</name><index pos:start="45:65" pos:end="45:67">[<expr pos:start="45:66" pos:end="45:66"><literal type="number" pos:start="45:66" pos:end="45:66">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:18">metadata_count</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <ternary pos:start="47:22" pos:end="47:57"><condition pos:start="47:22" pos:end="47:34"><expr pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:32">metadata</name></name></expr> ?</condition><then pos:start="47:36" pos:end="47:53"> <expr pos:start="47:36" pos:end="47:53"><name pos:start="47:36" pos:end="47:53"><name pos:start="47:36" pos:end="47:36">s</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:46">metadata</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:53">count</name></name></expr> </then><else pos:start="47:55" pos:end="47:57">: <expr pos:start="47:57" pos:end="47:57"><literal type="number" pos:start="47:57" pos:end="47:57">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:17"><expr pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:12">bit_rate</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="65:5">for<control pos:start="53:8" pos:end="53:32">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">n</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init><condition pos:start="53:13" pos:end="53:28"><expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:13">n</name><operator pos:start="53:14" pos:end="53:14">&lt;</operator><name pos:start="53:15" pos:end="53:27"><name pos:start="53:15" pos:end="53:15">s</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:27">nb_streams</name></name></expr>;</condition><incr pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:29">n</name><operator pos:start="53:30" pos:end="53:31">++</operator></expr></incr>)</control> <block pos:start="53:34" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:34">

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:11">enc</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:27"><name pos:start="55:15" pos:end="55:15">s</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:24">streams</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">n</name></expr>]</index></name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:34">codec</name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:52"><expr pos:start="59:9" pos:end="59:51"><call pos:start="59:9" pos:end="59:51"><name pos:start="59:9" pos:end="59:23">av_set_pts_info</name><argument_list pos:start="59:24" pos:end="59:51">(<argument pos:start="59:25" pos:end="59:37"><expr pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:34">streams</name><index pos:start="59:35" pos:end="59:37">[<expr pos:start="59:36" pos:end="59:36"><name pos:start="59:36" pos:end="59:36">n</name></expr>]</index></name></expr></argument>, <argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><literal type="number" pos:start="59:40" pos:end="59:41">32</literal></expr></argument>, <argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><literal type="number" pos:start="59:44" pos:end="59:44">1</literal></expr></argument>, <argument pos:start="59:47" pos:end="59:50"><expr pos:start="59:47" pos:end="59:50"><literal type="number" pos:start="59:47" pos:end="59:50">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:54" pos:end="59:75">/* 32 bit pts in ms */</comment>



        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:16">bit_rate</name> <operator pos:start="63:18" pos:end="63:19">+=</operator> <name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:23">enc</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:33">bit_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:25">(<expr pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:11">asf</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:24">is_streamed</name></name></expr>)</condition> <block pos:start="69:27" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:39">

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><call pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:17">put_chunk</name><argument_list pos:start="71:18" pos:end="71:38">(<argument pos:start="71:19" pos:end="71:19"><expr pos:start="71:19" pos:end="71:19"><name pos:start="71:19" pos:end="71:19">s</name></expr></argument>, <argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><literal type="number" pos:start="71:22" pos:end="71:27">0x4824</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:30"><expr pos:start="71:30" pos:end="71:30"><literal type="number" pos:start="71:30" pos:end="71:30">0</literal></expr></argument>, <argument pos:start="71:33" pos:end="71:37"><expr pos:start="71:33" pos:end="71:37"><literal type="number" pos:start="71:33" pos:end="71:37">0xc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:41" pos:end="71:92">/* start of stream (length will be patched later) */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><call pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:12">put_guid</name><argument_list pos:start="77:13" pos:end="77:32">(<argument pos:start="77:14" pos:end="77:15"><expr pos:start="77:14" pos:end="77:15"><name pos:start="77:14" pos:end="77:15">pb</name></expr></argument>, <argument pos:start="77:18" pos:end="77:31"><expr pos:start="77:18" pos:end="77:31"><operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:31">ff_asf_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:22"><expr pos:start="79:5" pos:end="79:21"><call pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:13">avio_wl64</name><argument_list pos:start="79:14" pos:end="79:21">(<argument pos:start="79:15" pos:end="79:16"><expr pos:start="79:15" pos:end="79:16"><name pos:start="79:15" pos:end="79:16">pb</name></expr></argument>, <argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><operator pos:start="79:19" pos:end="79:19">-</operator><literal type="number" pos:start="79:20" pos:end="79:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:24" pos:end="79:65">/* header length, will be patched after */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:68"><expr pos:start="81:5" pos:end="81:67"><call pos:start="81:5" pos:end="81:67"><name pos:start="81:5" pos:end="81:13">avio_wl32</name><argument_list pos:start="81:14" pos:end="81:67">(<argument pos:start="81:15" pos:end="81:16"><expr pos:start="81:15" pos:end="81:16"><name pos:start="81:15" pos:end="81:16">pb</name></expr></argument>, <argument pos:start="81:19" pos:end="81:66"><expr pos:start="81:19" pos:end="81:66"><literal type="number" pos:start="81:19" pos:end="81:21">3</literal> <operator pos:start="81:21" pos:end="81:21">+</operator> <name pos:start="81:23" pos:end="81:31">has_title</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <operator pos:start="81:35" pos:end="81:35">!</operator><operator pos:start="81:36" pos:end="81:36">!</operator><name pos:start="81:37" pos:end="81:50">metadata_count</name> <operator pos:start="81:52" pos:end="81:52">+</operator> <name pos:start="81:54" pos:end="81:66"><name pos:start="81:54" pos:end="81:54">s</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:66">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:70" pos:end="81:101">/* number of chunks in header */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:19"><expr pos:start="83:5" pos:end="83:18"><call pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:11">avio_w8</name><argument_list pos:start="83:12" pos:end="83:18">(<argument pos:start="83:13" pos:end="83:14"><expr pos:start="83:13" pos:end="83:14"><name pos:start="83:13" pos:end="83:14">pb</name></expr></argument>, <argument pos:start="83:17" pos:end="83:17"><expr pos:start="83:17" pos:end="83:17"><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:21" pos:end="83:29">/* ??? */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:19"><expr pos:start="85:5" pos:end="85:18"><call pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:11">avio_w8</name><argument_list pos:start="85:12" pos:end="85:18">(<argument pos:start="85:13" pos:end="85:14"><expr pos:start="85:13" pos:end="85:14"><name pos:start="85:13" pos:end="85:14">pb</name></expr></argument>, <argument pos:start="85:17" pos:end="85:17"><expr pos:start="85:17" pos:end="85:17"><literal type="number" pos:start="85:17" pos:end="85:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:21" pos:end="85:29">/* ??? */</comment>



    <comment type="block" pos:start="89:5" pos:end="89:21">/* file header */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:17">header_offset</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:33"><name pos:start="91:21" pos:end="91:29">avio_tell</name><argument_list pos:start="91:30" pos:end="91:33">(<argument pos:start="91:31" pos:end="91:32"><expr pos:start="91:31" pos:end="91:32"><name pos:start="91:31" pos:end="91:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:47"><expr pos:start="93:5" pos:end="93:46"><name pos:start="93:5" pos:end="93:8">hpos</name> <operator pos:start="93:10" pos:end="93:10">=</operator> <call pos:start="93:12" pos:end="93:46"><name pos:start="93:12" pos:end="93:21">put_header</name><argument_list pos:start="93:22" pos:end="93:46">(<argument pos:start="93:23" pos:end="93:24"><expr pos:start="93:23" pos:end="93:24"><name pos:start="93:23" pos:end="93:24">pb</name></expr></argument>, <argument pos:start="93:27" pos:end="93:45"><expr pos:start="93:27" pos:end="93:45"><operator pos:start="93:27" pos:end="93:27">&amp;</operator><name pos:start="93:28" pos:end="93:45">ff_asf_file_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:34"><expr pos:start="95:5" pos:end="95:33"><call pos:start="95:5" pos:end="95:33"><name pos:start="95:5" pos:end="95:12">put_guid</name><argument_list pos:start="95:13" pos:end="95:33">(<argument pos:start="95:14" pos:end="95:15"><expr pos:start="95:14" pos:end="95:15"><name pos:start="95:14" pos:end="95:15">pb</name></expr></argument>, <argument pos:start="95:18" pos:end="95:32"><expr pos:start="95:18" pos:end="95:32"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:32">ff_asf_my_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:29"><expr pos:start="97:5" pos:end="97:28"><call pos:start="97:5" pos:end="97:28"><name pos:start="97:5" pos:end="97:13">avio_wl64</name><argument_list pos:start="97:14" pos:end="97:28">(<argument pos:start="97:15" pos:end="97:16"><expr pos:start="97:15" pos:end="97:16"><name pos:start="97:15" pos:end="97:16">pb</name></expr></argument>, <argument pos:start="97:19" pos:end="97:27"><expr pos:start="97:19" pos:end="97:27"><name pos:start="97:19" pos:end="97:27">file_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:18"><expr pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:13">file_time</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <literal type="number" pos:start="99:17" pos:end="99:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><call pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:13">avio_wl64</name><argument_list pos:start="101:14" pos:end="101:47">(<argument pos:start="101:15" pos:end="101:16"><expr pos:start="101:15" pos:end="101:16"><name pos:start="101:15" pos:end="101:16">pb</name></expr></argument>, <argument pos:start="101:19" pos:end="101:46"><expr pos:start="101:19" pos:end="101:46"><call pos:start="101:19" pos:end="101:46"><name pos:start="101:19" pos:end="101:35">unix_to_file_time</name><argument_list pos:start="101:36" pos:end="101:46">(<argument pos:start="101:37" pos:end="101:45"><expr pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:45">file_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><call pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:13">avio_wl64</name><argument_list pos:start="103:14" pos:end="103:34">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:33"><expr pos:start="103:19" pos:end="103:33"><name pos:start="103:19" pos:end="103:33"><name pos:start="103:19" pos:end="103:21">asf</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:33">nb_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="103:37" pos:end="103:59">/* number of packets */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:28"><expr pos:start="105:5" pos:end="105:27"><call pos:start="105:5" pos:end="105:27"><name pos:start="105:5" pos:end="105:13">avio_wl64</name><argument_list pos:start="105:14" pos:end="105:27">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:26"><expr pos:start="105:19" pos:end="105:26"><name pos:start="105:19" pos:end="105:26">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:30" pos:end="105:66">/* end time stamp (in 100ns units) */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:33"><expr pos:start="107:5" pos:end="107:32"><call pos:start="107:5" pos:end="107:32"><name pos:start="107:5" pos:end="107:13">avio_wl64</name><argument_list pos:start="107:14" pos:end="107:32">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:31"><expr pos:start="107:19" pos:end="107:31"><name pos:start="107:19" pos:end="107:31"><name pos:start="107:19" pos:end="107:21">asf</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:31">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:35" pos:end="107:65">/* duration (in 100ns units) */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:32"><expr pos:start="109:5" pos:end="109:31"><call pos:start="109:5" pos:end="109:31"><name pos:start="109:5" pos:end="109:13">avio_wl64</name><argument_list pos:start="109:14" pos:end="109:31">(<argument pos:start="109:15" pos:end="109:16"><expr pos:start="109:15" pos:end="109:16"><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>, <argument pos:start="109:19" pos:end="109:30"><expr pos:start="109:19" pos:end="109:30"><name pos:start="109:19" pos:end="109:30">PREROLL_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="109:34" pos:end="109:55">/* start time stamp */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:64"><expr pos:start="111:5" pos:end="111:63"><call pos:start="111:5" pos:end="111:63"><name pos:start="111:5" pos:end="111:13">avio_wl32</name><argument_list pos:start="111:14" pos:end="111:63">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:62"><expr pos:start="111:19" pos:end="111:62"><ternary pos:start="111:19" pos:end="111:62"><condition pos:start="111:19" pos:end="111:56"><expr pos:start="111:19" pos:end="111:54"><operator pos:start="111:19" pos:end="111:19">(</operator><name pos:start="111:20" pos:end="111:35"><name pos:start="111:20" pos:end="111:22">asf</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:35">is_streamed</name></name> <operator pos:start="111:37" pos:end="111:38">||</operator> <operator pos:start="111:40" pos:end="111:40">!</operator><name pos:start="111:41" pos:end="111:52"><name pos:start="111:41" pos:end="111:42">pb</name><operator pos:start="111:43" pos:end="111:44">-&gt;</operator><name pos:start="111:45" pos:end="111:52">seekable</name></name> <operator pos:start="111:54" pos:end="111:54">)</operator></expr> ?</condition><then pos:start="111:58" pos:end="111:58"> <expr pos:start="111:58" pos:end="111:58"><literal type="number" pos:start="111:58" pos:end="111:58">3</literal></expr> </then><else pos:start="111:60" pos:end="111:62">: <expr pos:start="111:62" pos:end="111:62"><literal type="number" pos:start="111:62" pos:end="111:62">2</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:66" pos:end="111:74">/* ??? */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:34"><expr pos:start="113:5" pos:end="113:33"><call pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:13">avio_wl32</name><argument_list pos:start="113:14" pos:end="113:33">(<argument pos:start="113:15" pos:end="113:16"><expr pos:start="113:15" pos:end="113:16"><name pos:start="113:15" pos:end="113:16">pb</name></expr></argument>, <argument pos:start="113:19" pos:end="113:32"><expr pos:start="113:19" pos:end="113:32"><name pos:start="113:19" pos:end="113:32"><name pos:start="113:19" pos:end="113:19">s</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:32">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:36" pos:end="113:52">/* packet size */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:34"><expr pos:start="115:5" pos:end="115:33"><call pos:start="115:5" pos:end="115:33"><name pos:start="115:5" pos:end="115:13">avio_wl32</name><argument_list pos:start="115:14" pos:end="115:33">(<argument pos:start="115:15" pos:end="115:16"><expr pos:start="115:15" pos:end="115:16"><name pos:start="115:15" pos:end="115:16">pb</name></expr></argument>, <argument pos:start="115:19" pos:end="115:32"><expr pos:start="115:19" pos:end="115:32"><name pos:start="115:19" pos:end="115:32"><name pos:start="115:19" pos:end="115:19">s</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:32">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:36" pos:end="115:52">/* packet size */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:28"><expr pos:start="117:5" pos:end="117:27"><call pos:start="117:5" pos:end="117:27"><name pos:start="117:5" pos:end="117:13">avio_wl32</name><argument_list pos:start="117:14" pos:end="117:27">(<argument pos:start="117:15" pos:end="117:16"><expr pos:start="117:15" pos:end="117:16"><name pos:start="117:15" pos:end="117:16">pb</name></expr></argument>, <argument pos:start="117:19" pos:end="117:26"><expr pos:start="117:19" pos:end="117:26"><name pos:start="117:19" pos:end="117:26">bit_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:30" pos:end="117:59">/* Nominal data rate in bps */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:25"><expr pos:start="119:5" pos:end="119:24"><call pos:start="119:5" pos:end="119:24"><name pos:start="119:5" pos:end="119:14">end_header</name><argument_list pos:start="119:15" pos:end="119:24">(<argument pos:start="119:16" pos:end="119:17"><expr pos:start="119:16" pos:end="119:17"><name pos:start="119:16" pos:end="119:17">pb</name></expr></argument>, <argument pos:start="119:20" pos:end="119:23"><expr pos:start="119:20" pos:end="119:23"><name pos:start="119:20" pos:end="119:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:25">/* unknown headers */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:46"><expr pos:start="125:5" pos:end="125:45"><name pos:start="125:5" pos:end="125:8">hpos</name> <operator pos:start="125:10" pos:end="125:10">=</operator> <call pos:start="125:12" pos:end="125:45"><name pos:start="125:12" pos:end="125:21">put_header</name><argument_list pos:start="125:22" pos:end="125:45">(<argument pos:start="125:23" pos:end="125:24"><expr pos:start="125:23" pos:end="125:24"><name pos:start="125:23" pos:end="125:24">pb</name></expr></argument>, <argument pos:start="125:27" pos:end="125:44"><expr pos:start="125:27" pos:end="125:44"><operator pos:start="125:27" pos:end="125:27">&amp;</operator><name pos:start="125:28" pos:end="125:44">ff_asf_head1_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:37"><expr pos:start="127:5" pos:end="127:36"><call pos:start="127:5" pos:end="127:36"><name pos:start="127:5" pos:end="127:12">put_guid</name><argument_list pos:start="127:13" pos:end="127:36">(<argument pos:start="127:14" pos:end="127:15"><expr pos:start="127:14" pos:end="127:15"><name pos:start="127:14" pos:end="127:15">pb</name></expr></argument>, <argument pos:start="127:18" pos:end="127:35"><expr pos:start="127:18" pos:end="127:35"><operator pos:start="127:18" pos:end="127:18">&amp;</operator><name pos:start="127:19" pos:end="127:35">ff_asf_head2_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:21"><expr pos:start="129:5" pos:end="129:20"><call pos:start="129:5" pos:end="129:20"><name pos:start="129:5" pos:end="129:13">avio_wl32</name><argument_list pos:start="129:14" pos:end="129:20">(<argument pos:start="129:15" pos:end="129:16"><expr pos:start="129:15" pos:end="129:16"><name pos:start="129:15" pos:end="129:16">pb</name></expr></argument>, <argument pos:start="129:19" pos:end="129:19"><expr pos:start="129:19" pos:end="129:19"><literal type="number" pos:start="129:19" pos:end="129:19">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:21"><expr pos:start="131:5" pos:end="131:20"><call pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:13">avio_wl16</name><argument_list pos:start="131:14" pos:end="131:20">(<argument pos:start="131:15" pos:end="131:16"><expr pos:start="131:15" pos:end="131:16"><name pos:start="131:15" pos:end="131:16">pb</name></expr></argument>, <argument pos:start="131:19" pos:end="131:19"><expr pos:start="131:19" pos:end="131:19"><literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:25"><expr pos:start="133:5" pos:end="133:24"><call pos:start="133:5" pos:end="133:24"><name pos:start="133:5" pos:end="133:14">end_header</name><argument_list pos:start="133:15" pos:end="133:24">(<argument pos:start="133:16" pos:end="133:17"><expr pos:start="133:16" pos:end="133:17"><name pos:start="133:16" pos:end="133:17">pb</name></expr></argument>, <argument pos:start="133:20" pos:end="133:23"><expr pos:start="133:20" pos:end="133:23"><name pos:start="133:20" pos:end="133:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:31">/* title and other infos */</comment>

    <if_stmt pos:start="139:5" pos:end="175:5"><if pos:start="139:5" pos:end="175:5">if <condition pos:start="139:8" pos:end="139:18">(<expr pos:start="139:9" pos:end="139:17"><name pos:start="139:9" pos:end="139:17">has_title</name></expr>)</condition> <block pos:start="139:20" pos:end="175:5">{<block_content pos:start="141:9" pos:end="173:29">

        <decl_stmt pos:start="141:9" pos:end="141:16"><decl pos:start="141:9" pos:end="141:15"><type pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:11">int</name></type> <name pos:start="141:13" pos:end="141:15">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="143:9" pos:end="143:21"><decl pos:start="143:9" pos:end="143:20"><type pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:15">uint8_t</name> <modifier pos:start="143:17" pos:end="143:17">*</modifier></type><name pos:start="143:18" pos:end="143:20">buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="145:9" pos:end="145:29"><decl pos:start="145:9" pos:end="145:28"><type pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:19">AVIOContext</name> <modifier pos:start="145:21" pos:end="145:21">*</modifier></type><name pos:start="145:22" pos:end="145:28">dyn_buf</name></decl>;</decl_stmt>



        <if_stmt pos:start="149:9" pos:end="151:35"><if pos:start="149:9" pos:end="151:35">if <condition pos:start="149:12" pos:end="149:44">(<expr pos:start="149:13" pos:end="149:43"><call pos:start="149:13" pos:end="149:39"><name pos:start="149:13" pos:end="149:29">avio_open_dyn_buf</name><argument_list pos:start="149:30" pos:end="149:39">(<argument pos:start="149:31" pos:end="149:38"><expr pos:start="149:31" pos:end="149:38"><operator pos:start="149:31" pos:end="149:31">&amp;</operator><name pos:start="149:32" pos:end="149:38">dyn_buf</name></expr></argument>)</argument_list></call> <operator pos:start="149:41" pos:end="149:41">&lt;</operator> <literal type="number" pos:start="149:43" pos:end="149:43">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:35"><block_content pos:start="151:13" pos:end="151:35">

            <return pos:start="151:13" pos:end="151:35">return <expr pos:start="151:20" pos:end="151:34"><call pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:26">AVERROR</name><argument_list pos:start="151:27" pos:end="151:34">(<argument pos:start="151:28" pos:end="151:33"><expr pos:start="151:28" pos:end="151:33"><name pos:start="151:28" pos:end="151:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:54"><expr pos:start="155:9" pos:end="155:53"><name pos:start="155:9" pos:end="155:12">hpos</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <call pos:start="155:16" pos:end="155:53"><name pos:start="155:16" pos:end="155:25">put_header</name><argument_list pos:start="155:26" pos:end="155:53">(<argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">pb</name></expr></argument>, <argument pos:start="155:31" pos:end="155:52"><expr pos:start="155:31" pos:end="155:52"><operator pos:start="155:31" pos:end="155:31">&amp;</operator><name pos:start="155:32" pos:end="155:52">ff_asf_comment_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="159:9" pos:end="165:9">for <control pos:start="159:13" pos:end="159:50">(<init pos:start="159:14" pos:end="159:19"><expr pos:start="159:14" pos:end="159:18"><name pos:start="159:14" pos:end="159:14">n</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>;</init> <condition pos:start="159:21" pos:end="159:45"><expr pos:start="159:21" pos:end="159:44"><name pos:start="159:21" pos:end="159:21">n</name> <operator pos:start="159:23" pos:end="159:23">&lt;</operator> <call pos:start="159:25" pos:end="159:44"><name pos:start="159:25" pos:end="159:38">FF_ARRAY_ELEMS</name><argument_list pos:start="159:39" pos:end="159:44">(<argument pos:start="159:40" pos:end="159:43"><expr pos:start="159:40" pos:end="159:43"><name pos:start="159:40" pos:end="159:43">tags</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="159:47" pos:end="159:49"><expr pos:start="159:47" pos:end="159:49"><name pos:start="159:47" pos:end="159:47">n</name><operator pos:start="159:48" pos:end="159:49">++</operator></expr></incr>)</control> <block pos:start="159:52" pos:end="165:9">{<block_content pos:start="161:13" pos:end="163:31">

            <expr_stmt pos:start="161:13" pos:end="161:74"><expr pos:start="161:13" pos:end="161:73"><name pos:start="161:13" pos:end="161:15">len</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <ternary pos:start="161:19" pos:end="161:73"><condition pos:start="161:19" pos:end="161:27"><expr pos:start="161:19" pos:end="161:25"><name pos:start="161:19" pos:end="161:25"><name pos:start="161:19" pos:end="161:22">tags</name><index pos:start="161:23" pos:end="161:25">[<expr pos:start="161:24" pos:end="161:24"><name pos:start="161:24" pos:end="161:24">n</name></expr>]</index></name></expr> ?</condition><then pos:start="161:29" pos:end="161:69"> <expr pos:start="161:29" pos:end="161:69"><call pos:start="161:29" pos:end="161:69"><name pos:start="161:29" pos:end="161:44">avio_put_str16le</name><argument_list pos:start="161:45" pos:end="161:69">(<argument pos:start="161:46" pos:end="161:52"><expr pos:start="161:46" pos:end="161:52"><name pos:start="161:46" pos:end="161:52">dyn_buf</name></expr></argument>, <argument pos:start="161:55" pos:end="161:68"><expr pos:start="161:55" pos:end="161:68"><name pos:start="161:55" pos:end="161:61"><name pos:start="161:55" pos:end="161:58">tags</name><index pos:start="161:59" pos:end="161:61">[<expr pos:start="161:60" pos:end="161:60"><name pos:start="161:60" pos:end="161:60">n</name></expr>]</index></name><operator pos:start="161:62" pos:end="161:63">-&gt;</operator><name pos:start="161:64" pos:end="161:68">value</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="161:71" pos:end="161:73">: <expr pos:start="161:73" pos:end="161:73"><literal type="number" pos:start="161:73" pos:end="161:73">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><call pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:21">avio_wl16</name><argument_list pos:start="163:22" pos:end="163:30">(<argument pos:start="163:23" pos:end="163:24"><expr pos:start="163:23" pos:end="163:24"><name pos:start="163:23" pos:end="163:24">pb</name></expr></argument>, <argument pos:start="163:27" pos:end="163:29"><expr pos:start="163:27" pos:end="163:29"><name pos:start="163:27" pos:end="163:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="167:9" pos:end="167:48"><expr pos:start="167:9" pos:end="167:47"><name pos:start="167:9" pos:end="167:11">len</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <call pos:start="167:15" pos:end="167:47"><name pos:start="167:15" pos:end="167:32">avio_close_dyn_buf</name><argument_list pos:start="167:33" pos:end="167:47">(<argument pos:start="167:34" pos:end="167:40"><expr pos:start="167:34" pos:end="167:40"><name pos:start="167:34" pos:end="167:40">dyn_buf</name></expr></argument>, <argument pos:start="167:43" pos:end="167:46"><expr pos:start="167:43" pos:end="167:46"><operator pos:start="167:43" pos:end="167:43">&amp;</operator><name pos:start="167:44" pos:end="167:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:33"><expr pos:start="169:9" pos:end="169:32"><call pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:18">avio_write</name><argument_list pos:start="169:19" pos:end="169:32">(<argument pos:start="169:20" pos:end="169:21"><expr pos:start="169:20" pos:end="169:21"><name pos:start="169:20" pos:end="169:21">pb</name></expr></argument>, <argument pos:start="169:24" pos:end="169:26"><expr pos:start="169:24" pos:end="169:26"><name pos:start="169:24" pos:end="169:26">buf</name></expr></argument>, <argument pos:start="169:29" pos:end="169:31"><expr pos:start="169:29" pos:end="169:31"><name pos:start="169:29" pos:end="169:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:23"><expr pos:start="171:9" pos:end="171:22"><call pos:start="171:9" pos:end="171:22"><name pos:start="171:9" pos:end="171:16">av_freep</name><argument_list pos:start="171:17" pos:end="171:22">(<argument pos:start="171:18" pos:end="171:21"><expr pos:start="171:18" pos:end="171:21"><operator pos:start="171:18" pos:end="171:18">&amp;</operator><name pos:start="171:19" pos:end="171:21">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:29"><expr pos:start="173:9" pos:end="173:28"><call pos:start="173:9" pos:end="173:28"><name pos:start="173:9" pos:end="173:18">end_header</name><argument_list pos:start="173:19" pos:end="173:28">(<argument pos:start="173:20" pos:end="173:21"><expr pos:start="173:20" pos:end="173:21"><name pos:start="173:20" pos:end="173:21">pb</name></expr></argument>, <argument pos:start="173:24" pos:end="173:27"><expr pos:start="173:24" pos:end="173:27"><name pos:start="173:24" pos:end="173:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="197:5"><if pos:start="177:5" pos:end="197:5">if <condition pos:start="177:8" pos:end="177:23">(<expr pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:22">metadata_count</name></expr>)</condition> <block pos:start="177:25" pos:end="197:5">{<block_content pos:start="179:9" pos:end="195:29">

        <decl_stmt pos:start="179:9" pos:end="179:38"><decl pos:start="179:9" pos:end="179:37"><type pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:25">AVDictionaryEntry</name> <modifier pos:start="179:27" pos:end="179:27">*</modifier></type><name pos:start="179:28" pos:end="179:30">tag</name> <init pos:start="179:32" pos:end="179:37">= <expr pos:start="179:34" pos:end="179:37"><name pos:start="179:34" pos:end="179:37">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:63"><expr pos:start="181:9" pos:end="181:62"><name pos:start="181:9" pos:end="181:12">hpos</name> <operator pos:start="181:14" pos:end="181:14">=</operator> <call pos:start="181:16" pos:end="181:62"><name pos:start="181:16" pos:end="181:25">put_header</name><argument_list pos:start="181:26" pos:end="181:62">(<argument pos:start="181:27" pos:end="181:28"><expr pos:start="181:27" pos:end="181:28"><name pos:start="181:27" pos:end="181:28">pb</name></expr></argument>, <argument pos:start="181:31" pos:end="181:61"><expr pos:start="181:31" pos:end="181:61"><operator pos:start="181:31" pos:end="181:31">&amp;</operator><name pos:start="181:32" pos:end="181:61">ff_asf_extended_content_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:38"><expr pos:start="183:9" pos:end="183:37"><call pos:start="183:9" pos:end="183:37"><name pos:start="183:9" pos:end="183:17">avio_wl16</name><argument_list pos:start="183:18" pos:end="183:37">(<argument pos:start="183:19" pos:end="183:20"><expr pos:start="183:19" pos:end="183:20"><name pos:start="183:19" pos:end="183:20">pb</name></expr></argument>, <argument pos:start="183:23" pos:end="183:36"><expr pos:start="183:23" pos:end="183:36"><name pos:start="183:23" pos:end="183:36">metadata_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="185:9" pos:end="193:9">while <condition pos:start="185:15" pos:end="185:80">(<expr pos:start="185:16" pos:end="185:79"><operator pos:start="185:16" pos:end="185:16">(</operator><name pos:start="185:17" pos:end="185:19">tag</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <call pos:start="185:23" pos:end="185:78"><name pos:start="185:23" pos:end="185:33">av_dict_get</name><argument_list pos:start="185:34" pos:end="185:78">(<argument pos:start="185:35" pos:end="185:45"><expr pos:start="185:35" pos:end="185:45"><name pos:start="185:35" pos:end="185:45"><name pos:start="185:35" pos:end="185:35">s</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:45">metadata</name></name></expr></argument>, <argument pos:start="185:48" pos:end="185:49"><expr pos:start="185:48" pos:end="185:49"><literal type="string" pos:start="185:48" pos:end="185:49">""</literal></expr></argument>, <argument pos:start="185:52" pos:end="185:54"><expr pos:start="185:52" pos:end="185:54"><name pos:start="185:52" pos:end="185:54">tag</name></expr></argument>, <argument pos:start="185:57" pos:end="185:77"><expr pos:start="185:57" pos:end="185:77"><name pos:start="185:57" pos:end="185:77">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="185:79" pos:end="185:79">)</operator></expr>)</condition> <block pos:start="185:82" pos:end="193:9">{<block_content pos:start="187:13" pos:end="191:38">

            <expr_stmt pos:start="187:13" pos:end="187:36"><expr pos:start="187:13" pos:end="187:35"><call pos:start="187:13" pos:end="187:35"><name pos:start="187:13" pos:end="187:21">put_str16</name><argument_list pos:start="187:22" pos:end="187:35">(<argument pos:start="187:23" pos:end="187:24"><expr pos:start="187:23" pos:end="187:24"><name pos:start="187:23" pos:end="187:24">pb</name></expr></argument>, <argument pos:start="187:27" pos:end="187:34"><expr pos:start="187:27" pos:end="187:34"><name pos:start="187:27" pos:end="187:34"><name pos:start="187:27" pos:end="187:29">tag</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:34">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:29"><expr pos:start="189:13" pos:end="189:28"><call pos:start="189:13" pos:end="189:28"><name pos:start="189:13" pos:end="189:21">avio_wl16</name><argument_list pos:start="189:22" pos:end="189:28">(<argument pos:start="189:23" pos:end="189:24"><expr pos:start="189:23" pos:end="189:24"><name pos:start="189:23" pos:end="189:24">pb</name></expr></argument>, <argument pos:start="189:27" pos:end="189:27"><expr pos:start="189:27" pos:end="189:27"><literal type="number" pos:start="189:27" pos:end="189:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:38"><expr pos:start="191:13" pos:end="191:37"><call pos:start="191:13" pos:end="191:37"><name pos:start="191:13" pos:end="191:21">put_str16</name><argument_list pos:start="191:22" pos:end="191:37">(<argument pos:start="191:23" pos:end="191:24"><expr pos:start="191:23" pos:end="191:24"><name pos:start="191:23" pos:end="191:24">pb</name></expr></argument>, <argument pos:start="191:27" pos:end="191:36"><expr pos:start="191:27" pos:end="191:36"><name pos:start="191:27" pos:end="191:36"><name pos:start="191:27" pos:end="191:29">tag</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:36">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="195:9" pos:end="195:29"><expr pos:start="195:9" pos:end="195:28"><call pos:start="195:9" pos:end="195:28"><name pos:start="195:9" pos:end="195:18">end_header</name><argument_list pos:start="195:19" pos:end="195:28">(<argument pos:start="195:20" pos:end="195:21"><expr pos:start="195:20" pos:end="195:21"><name pos:start="195:20" pos:end="195:21">pb</name></expr></argument>, <argument pos:start="195:24" pos:end="195:27"><expr pos:start="195:24" pos:end="195:27"><name pos:start="195:24" pos:end="195:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:24">/* stream headers */</comment>

    <for pos:start="203:5" pos:end="353:5">for<control pos:start="203:8" pos:end="203:32">(<init pos:start="203:9" pos:end="203:12"><expr pos:start="203:9" pos:end="203:11"><name pos:start="203:9" pos:end="203:9">n</name><operator pos:start="203:10" pos:end="203:10">=</operator><literal type="number" pos:start="203:11" pos:end="203:11">0</literal></expr>;</init><condition pos:start="203:13" pos:end="203:28"><expr pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:13">n</name><operator pos:start="203:14" pos:end="203:14">&lt;</operator><name pos:start="203:15" pos:end="203:27"><name pos:start="203:15" pos:end="203:15">s</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:27">nb_streams</name></name></expr>;</condition><incr pos:start="203:29" pos:end="203:31"><expr pos:start="203:29" pos:end="203:31"><name pos:start="203:29" pos:end="203:29">n</name><operator pos:start="203:30" pos:end="203:31">++</operator></expr></incr>)</control> <block pos:start="203:34" pos:end="353:5">{<block_content pos:start="205:9" pos:end="351:29">

        <decl_stmt pos:start="205:9" pos:end="205:23"><decl pos:start="205:9" pos:end="205:22"><type pos:start="205:9" pos:end="205:15"><name pos:start="205:9" pos:end="205:15">int64_t</name></type> <name pos:start="205:17" pos:end="205:22">es_pos</name></decl>;</decl_stmt>

        <comment type="line" pos:start="207:9" pos:end="207:55">//        ASFStream *stream = &amp;asf-&gt;streams[n];</comment>



        <expr_stmt pos:start="211:9" pos:end="211:35"><expr pos:start="211:9" pos:end="211:34"><name pos:start="211:9" pos:end="211:11">enc</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <name pos:start="211:15" pos:end="211:27"><name pos:start="211:15" pos:end="211:15">s</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:24">streams</name><index pos:start="211:25" pos:end="211:27">[<expr pos:start="211:26" pos:end="211:26"><name pos:start="211:26" pos:end="211:26">n</name></expr>]</index></name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:34">codec</name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:36"><expr pos:start="213:9" pos:end="213:35"><name pos:start="213:9" pos:end="213:23"><name pos:start="213:9" pos:end="213:11">asf</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:20">streams</name><index pos:start="213:21" pos:end="213:23">[<expr pos:start="213:22" pos:end="213:22"><name pos:start="213:22" pos:end="213:22">n</name></expr>]</index></name><operator pos:start="213:24" pos:end="213:24">.</operator><name pos:start="213:25" pos:end="213:27">num</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <name pos:start="213:31" pos:end="213:31">n</name> <operator pos:start="213:33" pos:end="213:33">+</operator> <literal type="number" pos:start="213:35" pos:end="213:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:32"><expr pos:start="215:9" pos:end="215:31"><name pos:start="215:9" pos:end="215:23"><name pos:start="215:9" pos:end="215:11">asf</name><operator pos:start="215:12" pos:end="215:13">-&gt;</operator><name pos:start="215:14" pos:end="215:20">streams</name><index pos:start="215:21" pos:end="215:23">[<expr pos:start="215:22" pos:end="215:22"><name pos:start="215:22" pos:end="215:22">n</name></expr>]</index></name><operator pos:start="215:24" pos:end="215:24">.</operator><name pos:start="215:25" pos:end="215:27">seq</name> <operator pos:start="215:29" pos:end="215:29">=</operator> <literal type="number" pos:start="215:31" pos:end="215:31">0</literal></expr>;</expr_stmt>





        <switch pos:start="221:9" pos:end="245:9">switch<condition pos:start="221:15" pos:end="221:31">(<expr pos:start="221:16" pos:end="221:30"><name pos:start="221:16" pos:end="221:30"><name pos:start="221:16" pos:end="221:18">enc</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:30">codec_type</name></name></expr>)</condition> <block pos:start="221:33" pos:end="245:9">{<block_content pos:start="223:9" pos:end="243:18">

        <case pos:start="223:9" pos:end="223:32">case <expr pos:start="223:14" pos:end="223:31"><name pos:start="223:14" pos:end="223:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="225:13" pos:end="225:31"><expr pos:start="225:13" pos:end="225:30"><name pos:start="225:13" pos:end="225:26">wav_extra_size</name> <operator pos:start="225:28" pos:end="225:28">=</operator> <literal type="number" pos:start="225:30" pos:end="225:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:45"><expr pos:start="227:13" pos:end="227:44"><name pos:start="227:13" pos:end="227:22">extra_size</name> <operator pos:start="227:24" pos:end="227:24">=</operator> <literal type="number" pos:start="227:26" pos:end="227:29">18</literal> <operator pos:start="227:29" pos:end="227:29">+</operator> <name pos:start="227:31" pos:end="227:44">wav_extra_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:28"><expr pos:start="229:13" pos:end="229:27"><name pos:start="229:13" pos:end="229:23">extra_size2</name> <operator pos:start="229:25" pos:end="229:25">=</operator> <literal type="number" pos:start="229:27" pos:end="229:27">8</literal></expr>;</expr_stmt>

            <break pos:start="231:13" pos:end="231:18">break;</break>

        <default pos:start="233:9" pos:end="233:16">default:</default>

        <case pos:start="235:9" pos:end="235:32">case <expr pos:start="235:14" pos:end="235:31"><name pos:start="235:14" pos:end="235:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="237:13" pos:end="237:49"><expr pos:start="237:13" pos:end="237:48"><name pos:start="237:13" pos:end="237:26">wav_extra_size</name> <operator pos:start="237:28" pos:end="237:28">=</operator> <name pos:start="237:30" pos:end="237:48"><name pos:start="237:30" pos:end="237:32">enc</name><operator pos:start="237:33" pos:end="237:34">-&gt;</operator><name pos:start="237:35" pos:end="237:48">extradata_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:47"><expr pos:start="239:13" pos:end="239:46"><name pos:start="239:13" pos:end="239:22">extra_size</name> <operator pos:start="239:24" pos:end="239:24">=</operator> <literal type="number" pos:start="239:26" pos:end="239:31">0x33</literal> <operator pos:start="239:31" pos:end="239:31">+</operator> <name pos:start="239:33" pos:end="239:46">wav_extra_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:28"><expr pos:start="241:13" pos:end="241:27"><name pos:start="241:13" pos:end="241:23">extra_size2</name> <operator pos:start="241:25" pos:end="241:25">=</operator> <literal type="number" pos:start="241:27" pos:end="241:27">0</literal></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="249:9" pos:end="249:53"><expr pos:start="249:9" pos:end="249:52"><name pos:start="249:9" pos:end="249:12">hpos</name> <operator pos:start="249:14" pos:end="249:14">=</operator> <call pos:start="249:16" pos:end="249:52"><name pos:start="249:16" pos:end="249:25">put_header</name><argument_list pos:start="249:26" pos:end="249:52">(<argument pos:start="249:27" pos:end="249:28"><expr pos:start="249:27" pos:end="249:28"><name pos:start="249:27" pos:end="249:28">pb</name></expr></argument>, <argument pos:start="249:31" pos:end="249:51"><expr pos:start="249:31" pos:end="249:51"><operator pos:start="249:31" pos:end="249:31">&amp;</operator><name pos:start="249:32" pos:end="249:51">ff_asf_stream_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="263:9"><if pos:start="251:9" pos:end="257:9">if <condition pos:start="251:12" pos:end="251:50">(<expr pos:start="251:13" pos:end="251:49"><name pos:start="251:13" pos:end="251:27"><name pos:start="251:13" pos:end="251:15">enc</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:27">codec_type</name></name> <operator pos:start="251:29" pos:end="251:30">==</operator> <name pos:start="251:32" pos:end="251:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="251:52" pos:end="257:9">{<block_content pos:start="253:13" pos:end="255:55">

            <expr_stmt pos:start="253:13" pos:end="253:47"><expr pos:start="253:13" pos:end="253:46"><call pos:start="253:13" pos:end="253:46"><name pos:start="253:13" pos:end="253:20">put_guid</name><argument_list pos:start="253:21" pos:end="253:46">(<argument pos:start="253:22" pos:end="253:23"><expr pos:start="253:22" pos:end="253:23"><name pos:start="253:22" pos:end="253:23">pb</name></expr></argument>, <argument pos:start="253:26" pos:end="253:45"><expr pos:start="253:26" pos:end="253:45"><operator pos:start="253:26" pos:end="253:26">&amp;</operator><name pos:start="253:27" pos:end="253:45">ff_asf_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:55"><expr pos:start="255:13" pos:end="255:54"><call pos:start="255:13" pos:end="255:54"><name pos:start="255:13" pos:end="255:20">put_guid</name><argument_list pos:start="255:21" pos:end="255:54">(<argument pos:start="255:22" pos:end="255:23"><expr pos:start="255:22" pos:end="255:23"><name pos:start="255:22" pos:end="255:23">pb</name></expr></argument>, <argument pos:start="255:26" pos:end="255:53"><expr pos:start="255:26" pos:end="255:53"><operator pos:start="255:26" pos:end="255:26">&amp;</operator><name pos:start="255:27" pos:end="255:53">ff_asf_audio_conceal_spread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="263:9">else <block pos:start="257:16" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:53">

            <expr_stmt pos:start="259:13" pos:end="259:47"><expr pos:start="259:13" pos:end="259:46"><call pos:start="259:13" pos:end="259:46"><name pos:start="259:13" pos:end="259:20">put_guid</name><argument_list pos:start="259:21" pos:end="259:46">(<argument pos:start="259:22" pos:end="259:23"><expr pos:start="259:22" pos:end="259:23"><name pos:start="259:22" pos:end="259:23">pb</name></expr></argument>, <argument pos:start="259:26" pos:end="259:45"><expr pos:start="259:26" pos:end="259:45"><operator pos:start="259:26" pos:end="259:26">&amp;</operator><name pos:start="259:27" pos:end="259:45">ff_asf_video_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:53"><expr pos:start="261:13" pos:end="261:52"><call pos:start="261:13" pos:end="261:52"><name pos:start="261:13" pos:end="261:20">put_guid</name><argument_list pos:start="261:21" pos:end="261:52">(<argument pos:start="261:22" pos:end="261:23"><expr pos:start="261:22" pos:end="261:23"><name pos:start="261:22" pos:end="261:23">pb</name></expr></argument>, <argument pos:start="261:26" pos:end="261:51"><expr pos:start="261:26" pos:end="261:51"><operator pos:start="261:26" pos:end="261:26">&amp;</operator><name pos:start="261:27" pos:end="261:51">ff_asf_video_conceal_none</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:25"><expr pos:start="265:9" pos:end="265:24"><call pos:start="265:9" pos:end="265:24"><name pos:start="265:9" pos:end="265:17">avio_wl64</name><argument_list pos:start="265:18" pos:end="265:24">(<argument pos:start="265:19" pos:end="265:20"><expr pos:start="265:19" pos:end="265:20"><name pos:start="265:19" pos:end="265:20">pb</name></expr></argument>, <argument pos:start="265:23" pos:end="265:23"><expr pos:start="265:23" pos:end="265:23"><literal type="number" pos:start="265:23" pos:end="265:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="265:27" pos:end="265:35">/* ??? */</comment>

        <expr_stmt pos:start="267:9" pos:end="267:31"><expr pos:start="267:9" pos:end="267:30"><name pos:start="267:9" pos:end="267:14">es_pos</name> <operator pos:start="267:16" pos:end="267:16">=</operator> <call pos:start="267:18" pos:end="267:30"><name pos:start="267:18" pos:end="267:26">avio_tell</name><argument_list pos:start="267:27" pos:end="267:30">(<argument pos:start="267:28" pos:end="267:29"><expr pos:start="267:28" pos:end="267:29"><name pos:start="267:28" pos:end="267:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:34"><expr pos:start="269:9" pos:end="269:33"><call pos:start="269:9" pos:end="269:33"><name pos:start="269:9" pos:end="269:17">avio_wl32</name><argument_list pos:start="269:18" pos:end="269:33">(<argument pos:start="269:19" pos:end="269:20"><expr pos:start="269:19" pos:end="269:20"><name pos:start="269:19" pos:end="269:20">pb</name></expr></argument>, <argument pos:start="269:23" pos:end="269:32"><expr pos:start="269:23" pos:end="269:32"><name pos:start="269:23" pos:end="269:32">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="269:36" pos:end="269:55">/* wav header len */</comment>

        <expr_stmt pos:start="271:9" pos:end="271:35"><expr pos:start="271:9" pos:end="271:34"><call pos:start="271:9" pos:end="271:34"><name pos:start="271:9" pos:end="271:17">avio_wl32</name><argument_list pos:start="271:18" pos:end="271:34">(<argument pos:start="271:19" pos:end="271:20"><expr pos:start="271:19" pos:end="271:20"><name pos:start="271:19" pos:end="271:20">pb</name></expr></argument>, <argument pos:start="271:23" pos:end="271:33"><expr pos:start="271:23" pos:end="271:33"><name pos:start="271:23" pos:end="271:33">extra_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="271:37" pos:end="271:61">/* additional data len */</comment>

        <expr_stmt pos:start="273:9" pos:end="273:29"><expr pos:start="273:9" pos:end="273:28"><call pos:start="273:9" pos:end="273:28"><name pos:start="273:9" pos:end="273:17">avio_wl16</name><argument_list pos:start="273:18" pos:end="273:28">(<argument pos:start="273:19" pos:end="273:20"><expr pos:start="273:19" pos:end="273:20"><name pos:start="273:19" pos:end="273:20">pb</name></expr></argument>, <argument pos:start="273:23" pos:end="273:27"><expr pos:start="273:23" pos:end="273:27"><name pos:start="273:23" pos:end="273:23">n</name> <operator pos:start="273:25" pos:end="273:25">+</operator> <literal type="number" pos:start="273:27" pos:end="273:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="273:31" pos:end="273:49">/* stream number */</comment>

        <expr_stmt pos:start="275:9" pos:end="275:25"><expr pos:start="275:9" pos:end="275:24"><call pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:17">avio_wl32</name><argument_list pos:start="275:18" pos:end="275:24">(<argument pos:start="275:19" pos:end="275:20"><expr pos:start="275:19" pos:end="275:20"><name pos:start="275:19" pos:end="275:20">pb</name></expr></argument>, <argument pos:start="275:23" pos:end="275:23"><expr pos:start="275:23" pos:end="275:23"><literal type="number" pos:start="275:23" pos:end="275:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="275:27" pos:end="275:35">/* ??? */</comment>



        <if_stmt pos:start="279:9" pos:end="349:9"><if pos:start="279:9" pos:end="333:9">if <condition pos:start="279:12" pos:end="279:50">(<expr pos:start="279:13" pos:end="279:49"><name pos:start="279:13" pos:end="279:27"><name pos:start="279:13" pos:end="279:15">enc</name><operator pos:start="279:16" pos:end="279:17">-&gt;</operator><name pos:start="279:18" pos:end="279:27">codec_type</name></name> <operator pos:start="279:29" pos:end="279:30">==</operator> <name pos:start="279:32" pos:end="279:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="279:52" pos:end="333:9">{<block_content pos:start="283:13" pos:end="331:30">

            <comment type="block" pos:start="281:13" pos:end="281:37">/* WAVEFORMATEX header */</comment>

            <decl_stmt pos:start="283:13" pos:end="283:53"><decl pos:start="283:13" pos:end="283:52"><type pos:start="283:13" pos:end="283:15"><name pos:start="283:13" pos:end="283:15">int</name></type> <name pos:start="283:17" pos:end="283:23">wavsize</name> <init pos:start="283:25" pos:end="283:52">= <expr pos:start="283:27" pos:end="283:52"><call pos:start="283:27" pos:end="283:52"><name pos:start="283:27" pos:end="283:43">ff_put_wav_header</name><argument_list pos:start="283:44" pos:end="283:52">(<argument pos:start="283:45" pos:end="283:46"><expr pos:start="283:45" pos:end="283:46"><name pos:start="283:45" pos:end="283:46">pb</name></expr></argument>, <argument pos:start="283:49" pos:end="283:51"><expr pos:start="283:49" pos:end="283:51"><name pos:start="283:49" pos:end="283:51">enc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="285:13" pos:end="291:13"><if pos:start="285:13" pos:end="291:13">if <condition pos:start="285:16" pos:end="285:156">(<expr pos:start="285:17" pos:end="285:155"><operator pos:start="285:17" pos:end="285:17">(</operator><name pos:start="285:18" pos:end="285:30"><name pos:start="285:18" pos:end="285:20">enc</name><operator pos:start="285:21" pos:end="285:22">-&gt;</operator><name pos:start="285:23" pos:end="285:30">codec_id</name></name> <operator pos:start="285:32" pos:end="285:33">!=</operator> <name pos:start="285:35" pos:end="285:46">CODEC_ID_MP3</name><operator pos:start="285:47" pos:end="285:47">)</operator> <operator pos:start="285:49" pos:end="285:50">&amp;&amp;</operator> <operator pos:start="285:52" pos:end="285:52">(</operator><name pos:start="285:53" pos:end="285:65"><name pos:start="285:53" pos:end="285:55">enc</name><operator pos:start="285:56" pos:end="285:57">-&gt;</operator><name pos:start="285:58" pos:end="285:65">codec_id</name></name> <operator pos:start="285:67" pos:end="285:68">!=</operator> <name pos:start="285:70" pos:end="285:81">CODEC_ID_MP2</name><operator pos:start="285:82" pos:end="285:82">)</operator> <operator pos:start="285:84" pos:end="285:85">&amp;&amp;</operator> <operator pos:start="285:87" pos:end="285:87">(</operator><name pos:start="285:88" pos:end="285:100"><name pos:start="285:88" pos:end="285:90">enc</name><operator pos:start="285:91" pos:end="285:92">-&gt;</operator><name pos:start="285:93" pos:end="285:100">codec_id</name></name> <operator pos:start="285:102" pos:end="285:103">!=</operator> <name pos:start="285:105" pos:end="285:126">CODEC_ID_ADPCM_IMA_WAV</name><operator pos:start="285:127" pos:end="285:127">)</operator> <operator pos:start="285:129" pos:end="285:130">&amp;&amp;</operator> <operator pos:start="285:132" pos:end="285:132">(</operator><name pos:start="285:133" pos:end="285:151"><name pos:start="285:133" pos:end="285:135">enc</name><operator pos:start="285:136" pos:end="285:137">-&gt;</operator><name pos:start="285:138" pos:end="285:151">extradata_size</name></name><operator pos:start="285:152" pos:end="285:153">==</operator><literal type="number" pos:start="285:154" pos:end="285:154">0</literal><operator pos:start="285:155" pos:end="285:155">)</operator></expr>)</condition> <block pos:start="285:158" pos:end="291:13">{<block_content pos:start="287:17" pos:end="289:33">

                <expr_stmt pos:start="287:17" pos:end="287:29"><expr pos:start="287:17" pos:end="287:28"><name pos:start="287:17" pos:end="287:23">wavsize</name> <operator pos:start="287:25" pos:end="287:26">+=</operator> <literal type="number" pos:start="287:28" pos:end="287:28">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:33"><expr pos:start="289:17" pos:end="289:32"><call pos:start="289:17" pos:end="289:32"><name pos:start="289:17" pos:end="289:25">avio_wl16</name><argument_list pos:start="289:26" pos:end="289:32">(<argument pos:start="289:27" pos:end="289:28"><expr pos:start="289:27" pos:end="289:28"><name pos:start="289:27" pos:end="289:28">pb</name></expr></argument>, <argument pos:start="289:31" pos:end="289:31"><expr pos:start="289:31" pos:end="289:31"><literal type="number" pos:start="289:31" pos:end="289:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="295:13" pos:end="297:26"><if pos:start="295:13" pos:end="297:26">if <condition pos:start="295:16" pos:end="295:28">(<expr pos:start="295:17" pos:end="295:27"><name pos:start="295:17" pos:end="295:23">wavsize</name> <operator pos:start="295:25" pos:end="295:25">&lt;</operator> <literal type="number" pos:start="295:27" pos:end="295:27">0</literal></expr>)</condition><block type="pseudo" pos:start="297:17" pos:end="297:26"><block_content pos:start="297:17" pos:end="297:26">

                <return pos:start="297:17" pos:end="297:26">return <expr pos:start="297:24" pos:end="297:25"><operator pos:start="297:24" pos:end="297:24">-</operator><literal type="number" pos:start="297:25" pos:end="297:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="299:13" pos:end="309:13"><if pos:start="299:13" pos:end="309:13">if <condition pos:start="299:16" pos:end="299:38">(<expr pos:start="299:17" pos:end="299:37"><name pos:start="299:17" pos:end="299:23">wavsize</name> <operator pos:start="299:25" pos:end="299:26">!=</operator> <name pos:start="299:28" pos:end="299:37">extra_size</name></expr>)</condition> <block pos:start="299:40" pos:end="309:13">{<block_content pos:start="301:17" pos:end="307:49">

                <expr_stmt pos:start="301:17" pos:end="301:40"><expr pos:start="301:17" pos:end="301:39"><name pos:start="301:17" pos:end="301:23">cur_pos</name> <operator pos:start="301:25" pos:end="301:25">=</operator> <call pos:start="301:27" pos:end="301:39"><name pos:start="301:27" pos:end="301:35">avio_tell</name><argument_list pos:start="301:36" pos:end="301:39">(<argument pos:start="301:37" pos:end="301:38"><expr pos:start="301:37" pos:end="301:38"><name pos:start="301:37" pos:end="301:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:48"><expr pos:start="303:17" pos:end="303:47"><call pos:start="303:17" pos:end="303:47"><name pos:start="303:17" pos:end="303:25">avio_seek</name><argument_list pos:start="303:26" pos:end="303:47">(<argument pos:start="303:27" pos:end="303:28"><expr pos:start="303:27" pos:end="303:28"><name pos:start="303:27" pos:end="303:28">pb</name></expr></argument>, <argument pos:start="303:31" pos:end="303:36"><expr pos:start="303:31" pos:end="303:36"><name pos:start="303:31" pos:end="303:36">es_pos</name></expr></argument>, <argument pos:start="303:39" pos:end="303:46"><expr pos:start="303:39" pos:end="303:46"><name pos:start="303:39" pos:end="303:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:39"><expr pos:start="305:17" pos:end="305:38"><call pos:start="305:17" pos:end="305:38"><name pos:start="305:17" pos:end="305:25">avio_wl32</name><argument_list pos:start="305:26" pos:end="305:38">(<argument pos:start="305:27" pos:end="305:28"><expr pos:start="305:27" pos:end="305:28"><name pos:start="305:27" pos:end="305:28">pb</name></expr></argument>, <argument pos:start="305:31" pos:end="305:37"><expr pos:start="305:31" pos:end="305:37"><name pos:start="305:31" pos:end="305:37">wavsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="305:41" pos:end="305:60">/* wav header len */</comment>

                <expr_stmt pos:start="307:17" pos:end="307:49"><expr pos:start="307:17" pos:end="307:48"><call pos:start="307:17" pos:end="307:48"><name pos:start="307:17" pos:end="307:25">avio_seek</name><argument_list pos:start="307:26" pos:end="307:48">(<argument pos:start="307:27" pos:end="307:28"><expr pos:start="307:27" pos:end="307:28"><name pos:start="307:27" pos:end="307:28">pb</name></expr></argument>, <argument pos:start="307:31" pos:end="307:37"><expr pos:start="307:31" pos:end="307:37"><name pos:start="307:31" pos:end="307:37">cur_pos</name></expr></argument>, <argument pos:start="307:40" pos:end="307:47"><expr pos:start="307:40" pos:end="307:47"><name pos:start="307:40" pos:end="307:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="311:13" pos:end="311:34">/* ERROR Correction */</comment>

            <expr_stmt pos:start="313:13" pos:end="313:30"><expr pos:start="313:13" pos:end="313:29"><call pos:start="313:13" pos:end="313:29"><name pos:start="313:13" pos:end="313:19">avio_w8</name><argument_list pos:start="313:20" pos:end="313:29">(<argument pos:start="313:21" pos:end="313:22"><expr pos:start="313:21" pos:end="313:22"><name pos:start="313:21" pos:end="313:22">pb</name></expr></argument>, <argument pos:start="313:25" pos:end="313:28"><expr pos:start="313:25" pos:end="313:28"><literal type="number" pos:start="313:25" pos:end="313:28">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="315:13" pos:end="327:13"><if pos:start="315:13" pos:end="321:13">if<condition pos:start="315:15" pos:end="315:73">(<expr pos:start="315:16" pos:end="315:72"><name pos:start="315:16" pos:end="315:28"><name pos:start="315:16" pos:end="315:18">enc</name><operator pos:start="315:19" pos:end="315:20">-&gt;</operator><name pos:start="315:21" pos:end="315:28">codec_id</name></name> <operator pos:start="315:30" pos:end="315:31">==</operator> <name pos:start="315:33" pos:end="315:51">CODEC_ID_ADPCM_G726</name> <operator pos:start="315:53" pos:end="315:54">||</operator> <operator pos:start="315:56" pos:end="315:56">!</operator><name pos:start="315:57" pos:end="315:72"><name pos:start="315:57" pos:end="315:59">enc</name><operator pos:start="315:60" pos:end="315:61">-&gt;</operator><name pos:start="315:62" pos:end="315:72">block_align</name></name></expr>)</condition><block pos:start="315:74" pos:end="321:13">{<block_content pos:start="317:17" pos:end="319:38">

                <expr_stmt pos:start="317:17" pos:end="317:38"><expr pos:start="317:17" pos:end="317:37"><call pos:start="317:17" pos:end="317:37"><name pos:start="317:17" pos:end="317:25">avio_wl16</name><argument_list pos:start="317:26" pos:end="317:37">(<argument pos:start="317:27" pos:end="317:28"><expr pos:start="317:27" pos:end="317:28"><name pos:start="317:27" pos:end="317:28">pb</name></expr></argument>, <argument pos:start="317:31" pos:end="317:36"><expr pos:start="317:31" pos:end="317:36"><literal type="number" pos:start="317:31" pos:end="317:36">0x0190</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:38"><expr pos:start="319:17" pos:end="319:37"><call pos:start="319:17" pos:end="319:37"><name pos:start="319:17" pos:end="319:25">avio_wl16</name><argument_list pos:start="319:26" pos:end="319:37">(<argument pos:start="319:27" pos:end="319:28"><expr pos:start="319:27" pos:end="319:28"><name pos:start="319:27" pos:end="319:28">pb</name></expr></argument>, <argument pos:start="319:31" pos:end="319:36"><expr pos:start="319:31" pos:end="319:36"><literal type="number" pos:start="319:31" pos:end="319:36">0x0190</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="321:14" pos:end="327:13">else<block pos:start="321:18" pos:end="327:13">{<block_content pos:start="323:17" pos:end="325:48">

                <expr_stmt pos:start="323:17" pos:end="323:48"><expr pos:start="323:17" pos:end="323:47"><call pos:start="323:17" pos:end="323:47"><name pos:start="323:17" pos:end="323:25">avio_wl16</name><argument_list pos:start="323:26" pos:end="323:47">(<argument pos:start="323:27" pos:end="323:28"><expr pos:start="323:27" pos:end="323:28"><name pos:start="323:27" pos:end="323:28">pb</name></expr></argument>, <argument pos:start="323:31" pos:end="323:46"><expr pos:start="323:31" pos:end="323:46"><name pos:start="323:31" pos:end="323:46"><name pos:start="323:31" pos:end="323:33">enc</name><operator pos:start="323:34" pos:end="323:35">-&gt;</operator><name pos:start="323:36" pos:end="323:46">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="325:17" pos:end="325:48"><expr pos:start="325:17" pos:end="325:47"><call pos:start="325:17" pos:end="325:47"><name pos:start="325:17" pos:end="325:25">avio_wl16</name><argument_list pos:start="325:26" pos:end="325:47">(<argument pos:start="325:27" pos:end="325:28"><expr pos:start="325:27" pos:end="325:28"><name pos:start="325:27" pos:end="325:28">pb</name></expr></argument>, <argument pos:start="325:31" pos:end="325:46"><expr pos:start="325:31" pos:end="325:46"><name pos:start="325:31" pos:end="325:46"><name pos:start="325:31" pos:end="325:33">enc</name><operator pos:start="325:34" pos:end="325:35">-&gt;</operator><name pos:start="325:36" pos:end="325:46">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:32"><expr pos:start="329:13" pos:end="329:31"><call pos:start="329:13" pos:end="329:31"><name pos:start="329:13" pos:end="329:21">avio_wl16</name><argument_list pos:start="329:22" pos:end="329:31">(<argument pos:start="329:23" pos:end="329:24"><expr pos:start="329:23" pos:end="329:24"><name pos:start="329:23" pos:end="329:24">pb</name></expr></argument>, <argument pos:start="329:27" pos:end="329:30"><expr pos:start="329:27" pos:end="329:30"><literal type="number" pos:start="329:27" pos:end="329:30">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:30"><expr pos:start="331:13" pos:end="331:29"><call pos:start="331:13" pos:end="331:29"><name pos:start="331:13" pos:end="331:19">avio_w8</name><argument_list pos:start="331:20" pos:end="331:29">(<argument pos:start="331:21" pos:end="331:22"><expr pos:start="331:21" pos:end="331:22"><name pos:start="331:21" pos:end="331:22">pb</name></expr></argument>, <argument pos:start="331:25" pos:end="331:28"><expr pos:start="331:25" pos:end="331:28"><literal type="number" pos:start="331:25" pos:end="331:28">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="333:11" pos:end="349:9">else <block pos:start="333:16" pos:end="349:9">{<block_content pos:start="335:13" pos:end="347:61">

            <expr_stmt pos:start="335:13" pos:end="335:38"><expr pos:start="335:13" pos:end="335:37"><call pos:start="335:13" pos:end="335:37"><name pos:start="335:13" pos:end="335:21">avio_wl32</name><argument_list pos:start="335:22" pos:end="335:37">(<argument pos:start="335:23" pos:end="335:24"><expr pos:start="335:23" pos:end="335:24"><name pos:start="335:23" pos:end="335:24">pb</name></expr></argument>, <argument pos:start="335:27" pos:end="335:36"><expr pos:start="335:27" pos:end="335:36"><name pos:start="335:27" pos:end="335:36"><name pos:start="335:27" pos:end="335:29">enc</name><operator pos:start="335:30" pos:end="335:31">-&gt;</operator><name pos:start="335:32" pos:end="335:36">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:39"><expr pos:start="337:13" pos:end="337:38"><call pos:start="337:13" pos:end="337:38"><name pos:start="337:13" pos:end="337:21">avio_wl32</name><argument_list pos:start="337:22" pos:end="337:38">(<argument pos:start="337:23" pos:end="337:24"><expr pos:start="337:23" pos:end="337:24"><name pos:start="337:23" pos:end="337:24">pb</name></expr></argument>, <argument pos:start="337:27" pos:end="337:37"><expr pos:start="337:27" pos:end="337:37"><name pos:start="337:27" pos:end="337:37"><name pos:start="337:27" pos:end="337:29">enc</name><operator pos:start="337:30" pos:end="337:31">-&gt;</operator><name pos:start="337:32" pos:end="337:37">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:27"><expr pos:start="339:13" pos:end="339:26"><call pos:start="339:13" pos:end="339:26"><name pos:start="339:13" pos:end="339:19">avio_w8</name><argument_list pos:start="339:20" pos:end="339:26">(<argument pos:start="339:21" pos:end="339:22"><expr pos:start="339:21" pos:end="339:22"><name pos:start="339:21" pos:end="339:22">pb</name></expr></argument>, <argument pos:start="339:25" pos:end="339:25"><expr pos:start="339:25" pos:end="339:25"><literal type="number" pos:start="339:25" pos:end="339:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="339:29" pos:end="339:37">/* ??? */</comment>

            <expr_stmt pos:start="341:13" pos:end="341:52"><expr pos:start="341:13" pos:end="341:51"><call pos:start="341:13" pos:end="341:51"><name pos:start="341:13" pos:end="341:21">avio_wl16</name><argument_list pos:start="341:22" pos:end="341:51">(<argument pos:start="341:23" pos:end="341:24"><expr pos:start="341:23" pos:end="341:24"><name pos:start="341:23" pos:end="341:24">pb</name></expr></argument>, <argument pos:start="341:27" pos:end="341:50"><expr pos:start="341:27" pos:end="341:50"><literal type="number" pos:start="341:27" pos:end="341:30">40</literal> <operator pos:start="341:30" pos:end="341:30">+</operator> <name pos:start="341:32" pos:end="341:50"><name pos:start="341:32" pos:end="341:34">enc</name><operator pos:start="341:35" pos:end="341:36">-&gt;</operator><name pos:start="341:37" pos:end="341:50">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="341:54" pos:end="341:63">/* size */</comment>



            <comment type="block" pos:start="345:13" pos:end="345:41">/* BITMAPINFOHEADER header */</comment>

            <expr_stmt pos:start="347:13" pos:end="347:61"><expr pos:start="347:13" pos:end="347:60"><call pos:start="347:13" pos:end="347:60"><name pos:start="347:13" pos:end="347:29">ff_put_bmp_header</name><argument_list pos:start="347:30" pos:end="347:60">(<argument pos:start="347:31" pos:end="347:32"><expr pos:start="347:31" pos:end="347:32"><name pos:start="347:31" pos:end="347:32">pb</name></expr></argument>, <argument pos:start="347:35" pos:end="347:37"><expr pos:start="347:35" pos:end="347:37"><name pos:start="347:35" pos:end="347:37">enc</name></expr></argument>, <argument pos:start="347:40" pos:end="347:56"><expr pos:start="347:40" pos:end="347:56"><name pos:start="347:40" pos:end="347:56">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="347:59" pos:end="347:59"><expr pos:start="347:59" pos:end="347:59"><literal type="number" pos:start="347:59" pos:end="347:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:29"><expr pos:start="351:9" pos:end="351:28"><call pos:start="351:9" pos:end="351:28"><name pos:start="351:9" pos:end="351:18">end_header</name><argument_list pos:start="351:19" pos:end="351:28">(<argument pos:start="351:20" pos:end="351:21"><expr pos:start="351:20" pos:end="351:21"><name pos:start="351:20" pos:end="351:21">pb</name></expr></argument>, <argument pos:start="351:24" pos:end="351:27"><expr pos:start="351:24" pos:end="351:27"><name pos:start="351:24" pos:end="351:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="357:5" pos:end="357:24">/* media comments */</comment>



    <expr_stmt pos:start="361:5" pos:end="361:56"><expr pos:start="361:5" pos:end="361:55"><name pos:start="361:5" pos:end="361:8">hpos</name> <operator pos:start="361:10" pos:end="361:10">=</operator> <call pos:start="361:12" pos:end="361:55"><name pos:start="361:12" pos:end="361:21">put_header</name><argument_list pos:start="361:22" pos:end="361:55">(<argument pos:start="361:23" pos:end="361:24"><expr pos:start="361:23" pos:end="361:24"><name pos:start="361:23" pos:end="361:24">pb</name></expr></argument>, <argument pos:start="361:27" pos:end="361:54"><expr pos:start="361:27" pos:end="361:54"><operator pos:start="361:27" pos:end="361:27">&amp;</operator><name pos:start="361:28" pos:end="361:54">ff_asf_codec_comment_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="363:5" pos:end="363:48"><expr pos:start="363:5" pos:end="363:47"><call pos:start="363:5" pos:end="363:47"><name pos:start="363:5" pos:end="363:12">put_guid</name><argument_list pos:start="363:13" pos:end="363:47">(<argument pos:start="363:14" pos:end="363:15"><expr pos:start="363:14" pos:end="363:15"><name pos:start="363:14" pos:end="363:15">pb</name></expr></argument>, <argument pos:start="363:18" pos:end="363:46"><expr pos:start="363:18" pos:end="363:46"><operator pos:start="363:18" pos:end="363:18">&amp;</operator><name pos:start="363:19" pos:end="363:46">ff_asf_codec_comment1_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:33"><expr pos:start="365:5" pos:end="365:32"><call pos:start="365:5" pos:end="365:32"><name pos:start="365:5" pos:end="365:13">avio_wl32</name><argument_list pos:start="365:14" pos:end="365:32">(<argument pos:start="365:15" pos:end="365:16"><expr pos:start="365:15" pos:end="365:16"><name pos:start="365:15" pos:end="365:16">pb</name></expr></argument>, <argument pos:start="365:19" pos:end="365:31"><expr pos:start="365:19" pos:end="365:31"><name pos:start="365:19" pos:end="365:31"><name pos:start="365:19" pos:end="365:19">s</name><operator pos:start="365:20" pos:end="365:21">-&gt;</operator><name pos:start="365:22" pos:end="365:31">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="367:5" pos:end="457:5">for<control pos:start="367:8" pos:end="367:32">(<init pos:start="367:9" pos:end="367:12"><expr pos:start="367:9" pos:end="367:11"><name pos:start="367:9" pos:end="367:9">n</name><operator pos:start="367:10" pos:end="367:10">=</operator><literal type="number" pos:start="367:11" pos:end="367:11">0</literal></expr>;</init><condition pos:start="367:13" pos:end="367:28"><expr pos:start="367:13" pos:end="367:27"><name pos:start="367:13" pos:end="367:13">n</name><operator pos:start="367:14" pos:end="367:14">&lt;</operator><name pos:start="367:15" pos:end="367:27"><name pos:start="367:15" pos:end="367:15">s</name><operator pos:start="367:16" pos:end="367:17">-&gt;</operator><name pos:start="367:18" pos:end="367:27">nb_streams</name></name></expr>;</condition><incr pos:start="367:29" pos:end="367:31"><expr pos:start="367:29" pos:end="367:31"><name pos:start="367:29" pos:end="367:29">n</name><operator pos:start="367:30" pos:end="367:31">++</operator></expr></incr>)</control> <block pos:start="367:34" pos:end="457:5">{<block_content pos:start="369:9" pos:end="455:22">

        <decl_stmt pos:start="369:9" pos:end="369:19"><decl pos:start="369:9" pos:end="369:18"><type pos:start="369:9" pos:end="369:17"><name pos:start="369:9" pos:end="369:15">AVCodec</name> <modifier pos:start="369:17" pos:end="369:17">*</modifier></type><name pos:start="369:18" pos:end="369:18">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="371:9" pos:end="371:25"><decl pos:start="371:9" pos:end="371:24"><type pos:start="371:9" pos:end="371:20"><specifier pos:start="371:9" pos:end="371:13">const</specifier> <name pos:start="371:15" pos:end="371:18">char</name> <modifier pos:start="371:20" pos:end="371:20">*</modifier></type><name pos:start="371:21" pos:end="371:24">desc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="373:9" pos:end="373:16"><decl pos:start="373:9" pos:end="373:15"><type pos:start="373:9" pos:end="373:11"><name pos:start="373:9" pos:end="373:11">int</name></type> <name pos:start="373:13" pos:end="373:15">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="375:9" pos:end="375:21"><decl pos:start="375:9" pos:end="375:20"><type pos:start="375:9" pos:end="375:17"><name pos:start="375:9" pos:end="375:15">uint8_t</name> <modifier pos:start="375:17" pos:end="375:17">*</modifier></type><name pos:start="375:18" pos:end="375:20">buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="377:9" pos:end="377:29"><decl pos:start="377:9" pos:end="377:28"><type pos:start="377:9" pos:end="377:21"><name pos:start="377:9" pos:end="377:19">AVIOContext</name> <modifier pos:start="377:21" pos:end="377:21">*</modifier></type><name pos:start="377:22" pos:end="377:28">dyn_buf</name></decl>;</decl_stmt>



        <expr_stmt pos:start="381:9" pos:end="381:35"><expr pos:start="381:9" pos:end="381:34"><name pos:start="381:9" pos:end="381:11">enc</name> <operator pos:start="381:13" pos:end="381:13">=</operator> <name pos:start="381:15" pos:end="381:27"><name pos:start="381:15" pos:end="381:15">s</name><operator pos:start="381:16" pos:end="381:17">-&gt;</operator><name pos:start="381:18" pos:end="381:24">streams</name><index pos:start="381:25" pos:end="381:27">[<expr pos:start="381:26" pos:end="381:26"><name pos:start="381:26" pos:end="381:26">n</name></expr>]</index></name><operator pos:start="381:28" pos:end="381:29">-&gt;</operator><name pos:start="381:30" pos:end="381:34">codec</name></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:48"><expr pos:start="383:9" pos:end="383:47"><name pos:start="383:9" pos:end="383:9">p</name> <operator pos:start="383:11" pos:end="383:11">=</operator> <call pos:start="383:13" pos:end="383:47"><name pos:start="383:13" pos:end="383:32">avcodec_find_encoder</name><argument_list pos:start="383:33" pos:end="383:47">(<argument pos:start="383:34" pos:end="383:46"><expr pos:start="383:34" pos:end="383:46"><name pos:start="383:34" pos:end="383:46"><name pos:start="383:34" pos:end="383:36">enc</name><operator pos:start="383:37" pos:end="383:38">-&gt;</operator><name pos:start="383:39" pos:end="383:46">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="387:9" pos:end="397:30"><if pos:start="387:9" pos:end="389:29">if<condition pos:start="387:11" pos:end="387:49">(<expr pos:start="387:12" pos:end="387:48"><name pos:start="387:12" pos:end="387:26"><name pos:start="387:12" pos:end="387:14">enc</name><operator pos:start="387:15" pos:end="387:16">-&gt;</operator><name pos:start="387:17" pos:end="387:26">codec_type</name></name> <operator pos:start="387:28" pos:end="387:29">==</operator> <name pos:start="387:31" pos:end="387:48">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="389:13" pos:end="389:29"><block_content pos:start="389:13" pos:end="389:29">

            <expr_stmt pos:start="389:13" pos:end="389:29"><expr pos:start="389:13" pos:end="389:28"><call pos:start="389:13" pos:end="389:28"><name pos:start="389:13" pos:end="389:21">avio_wl16</name><argument_list pos:start="389:22" pos:end="389:28">(<argument pos:start="389:23" pos:end="389:24"><expr pos:start="389:23" pos:end="389:24"><name pos:start="389:23" pos:end="389:24">pb</name></expr></argument>, <argument pos:start="389:27" pos:end="389:27"><expr pos:start="389:27" pos:end="389:27"><literal type="number" pos:start="389:27" pos:end="389:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="391:9" pos:end="393:29">else if<condition pos:start="391:16" pos:end="391:54">(<expr pos:start="391:17" pos:end="391:53"><name pos:start="391:17" pos:end="391:31"><name pos:start="391:17" pos:end="391:19">enc</name><operator pos:start="391:20" pos:end="391:21">-&gt;</operator><name pos:start="391:22" pos:end="391:31">codec_type</name></name> <operator pos:start="391:33" pos:end="391:34">==</operator> <name pos:start="391:36" pos:end="391:53">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="393:13" pos:end="393:29"><block_content pos:start="393:13" pos:end="393:29">

            <expr_stmt pos:start="393:13" pos:end="393:29"><expr pos:start="393:13" pos:end="393:28"><call pos:start="393:13" pos:end="393:28"><name pos:start="393:13" pos:end="393:21">avio_wl16</name><argument_list pos:start="393:22" pos:end="393:28">(<argument pos:start="393:23" pos:end="393:24"><expr pos:start="393:23" pos:end="393:24"><name pos:start="393:23" pos:end="393:24">pb</name></expr></argument>, <argument pos:start="393:27" pos:end="393:27"><expr pos:start="393:27" pos:end="393:27"><literal type="number" pos:start="393:27" pos:end="393:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="395:9" pos:end="397:30">else<block type="pseudo" pos:start="397:13" pos:end="397:30"><block_content pos:start="397:13" pos:end="397:30">

            <expr_stmt pos:start="397:13" pos:end="397:30"><expr pos:start="397:13" pos:end="397:29"><call pos:start="397:13" pos:end="397:29"><name pos:start="397:13" pos:end="397:21">avio_wl16</name><argument_list pos:start="397:22" pos:end="397:29">(<argument pos:start="397:23" pos:end="397:24"><expr pos:start="397:23" pos:end="397:24"><name pos:start="397:23" pos:end="397:24">pb</name></expr></argument>, <argument pos:start="397:27" pos:end="397:28"><expr pos:start="397:27" pos:end="397:28"><operator pos:start="397:27" pos:end="397:27">-</operator><literal type="number" pos:start="397:28" pos:end="397:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="401:9" pos:end="407:49"><if pos:start="401:9" pos:end="403:44">if<condition pos:start="401:11" pos:end="401:43">(<expr pos:start="401:12" pos:end="401:42"><name pos:start="401:12" pos:end="401:24"><name pos:start="401:12" pos:end="401:14">enc</name><operator pos:start="401:15" pos:end="401:16">-&gt;</operator><name pos:start="401:17" pos:end="401:24">codec_id</name></name> <operator pos:start="401:26" pos:end="401:27">==</operator> <name pos:start="401:29" pos:end="401:42">CODEC_ID_WMAV2</name></expr>)</condition><block type="pseudo" pos:start="403:13" pos:end="403:44"><block_content pos:start="403:13" pos:end="403:44">

            <expr_stmt pos:start="403:13" pos:end="403:44"><expr pos:start="403:13" pos:end="403:43"><name pos:start="403:13" pos:end="403:16">desc</name> <operator pos:start="403:18" pos:end="403:18">=</operator> <literal type="string" pos:start="403:20" pos:end="403:43">"Windows Media Audio V8"</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="405:9" pos:end="407:49">else<block type="pseudo" pos:start="407:13" pos:end="407:49"><block_content pos:start="407:13" pos:end="407:49">

            <expr_stmt pos:start="407:13" pos:end="407:49"><expr pos:start="407:13" pos:end="407:48"><name pos:start="407:13" pos:end="407:16">desc</name> <operator pos:start="407:18" pos:end="407:18">=</operator> <ternary pos:start="407:20" pos:end="407:48"><condition pos:start="407:20" pos:end="407:22"><expr pos:start="407:20" pos:end="407:20"><name pos:start="407:20" pos:end="407:20">p</name></expr> ?</condition><then pos:start="407:24" pos:end="407:30"> <expr pos:start="407:24" pos:end="407:30"><name pos:start="407:24" pos:end="407:30"><name pos:start="407:24" pos:end="407:24">p</name><operator pos:start="407:25" pos:end="407:26">-&gt;</operator><name pos:start="407:27" pos:end="407:30">name</name></name></expr> </then><else pos:start="407:32" pos:end="407:48">: <expr pos:start="407:34" pos:end="407:48"><name pos:start="407:34" pos:end="407:48"><name pos:start="407:34" pos:end="407:36">enc</name><operator pos:start="407:37" pos:end="407:38">-&gt;</operator><name pos:start="407:39" pos:end="407:48">codec_name</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="411:9" pos:end="413:35"><if pos:start="411:9" pos:end="413:35">if <condition pos:start="411:12" pos:end="411:45">( <expr pos:start="411:14" pos:end="411:44"><call pos:start="411:14" pos:end="411:40"><name pos:start="411:14" pos:end="411:30">avio_open_dyn_buf</name><argument_list pos:start="411:31" pos:end="411:40">(<argument pos:start="411:32" pos:end="411:39"><expr pos:start="411:32" pos:end="411:39"><operator pos:start="411:32" pos:end="411:32">&amp;</operator><name pos:start="411:33" pos:end="411:39">dyn_buf</name></expr></argument>)</argument_list></call> <operator pos:start="411:42" pos:end="411:42">&lt;</operator> <literal type="number" pos:start="411:44" pos:end="411:44">0</literal></expr>)</condition><block type="pseudo" pos:start="413:13" pos:end="413:35"><block_content pos:start="413:13" pos:end="413:35">

            <return pos:start="413:13" pos:end="413:35">return <expr pos:start="413:20" pos:end="413:34"><call pos:start="413:20" pos:end="413:34"><name pos:start="413:20" pos:end="413:26">AVERROR</name><argument_list pos:start="413:27" pos:end="413:34">(<argument pos:start="413:28" pos:end="413:33"><expr pos:start="413:28" pos:end="413:33"><name pos:start="413:28" pos:end="413:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="417:9" pos:end="417:40"><expr pos:start="417:9" pos:end="417:39"><call pos:start="417:9" pos:end="417:39"><name pos:start="417:9" pos:end="417:24">avio_put_str16le</name><argument_list pos:start="417:25" pos:end="417:39">(<argument pos:start="417:26" pos:end="417:32"><expr pos:start="417:26" pos:end="417:32"><name pos:start="417:26" pos:end="417:32">dyn_buf</name></expr></argument>, <argument pos:start="417:35" pos:end="417:38"><expr pos:start="417:35" pos:end="417:38"><name pos:start="417:35" pos:end="417:38">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:48"><expr pos:start="419:9" pos:end="419:47"><name pos:start="419:9" pos:end="419:11">len</name> <operator pos:start="419:13" pos:end="419:13">=</operator> <call pos:start="419:15" pos:end="419:47"><name pos:start="419:15" pos:end="419:32">avio_close_dyn_buf</name><argument_list pos:start="419:33" pos:end="419:47">(<argument pos:start="419:34" pos:end="419:40"><expr pos:start="419:34" pos:end="419:40"><name pos:start="419:34" pos:end="419:40">dyn_buf</name></expr></argument>, <argument pos:start="419:43" pos:end="419:46"><expr pos:start="419:43" pos:end="419:46"><operator pos:start="419:43" pos:end="419:43">&amp;</operator><name pos:start="419:44" pos:end="419:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:31"><expr pos:start="421:9" pos:end="421:30"><call pos:start="421:9" pos:end="421:30"><name pos:start="421:9" pos:end="421:17">avio_wl16</name><argument_list pos:start="421:18" pos:end="421:30">(<argument pos:start="421:19" pos:end="421:20"><expr pos:start="421:19" pos:end="421:20"><name pos:start="421:19" pos:end="421:20">pb</name></expr></argument>, <argument pos:start="421:23" pos:end="421:29"><expr pos:start="421:23" pos:end="421:29"><name pos:start="421:23" pos:end="421:25">len</name> <operator pos:start="421:27" pos:end="421:27">/</operator> <literal type="number" pos:start="421:29" pos:end="421:29">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="421:33" pos:end="421:79">// "number of characters" = length in bytes / 2</comment>



        <expr_stmt pos:start="425:9" pos:end="425:33"><expr pos:start="425:9" pos:end="425:32"><call pos:start="425:9" pos:end="425:32"><name pos:start="425:9" pos:end="425:18">avio_write</name><argument_list pos:start="425:19" pos:end="425:32">(<argument pos:start="425:20" pos:end="425:21"><expr pos:start="425:20" pos:end="425:21"><name pos:start="425:20" pos:end="425:21">pb</name></expr></argument>, <argument pos:start="425:24" pos:end="425:26"><expr pos:start="425:24" pos:end="425:26"><name pos:start="425:24" pos:end="425:26">buf</name></expr></argument>, <argument pos:start="425:29" pos:end="425:31"><expr pos:start="425:29" pos:end="425:31"><name pos:start="425:29" pos:end="425:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:23"><expr pos:start="427:9" pos:end="427:22"><call pos:start="427:9" pos:end="427:22"><name pos:start="427:9" pos:end="427:16">av_freep</name><argument_list pos:start="427:17" pos:end="427:22">(<argument pos:start="427:18" pos:end="427:21"><expr pos:start="427:18" pos:end="427:21"><operator pos:start="427:18" pos:end="427:18">&amp;</operator><name pos:start="427:19" pos:end="427:21">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="431:9" pos:end="431:25"><expr pos:start="431:9" pos:end="431:24"><call pos:start="431:9" pos:end="431:24"><name pos:start="431:9" pos:end="431:17">avio_wl16</name><argument_list pos:start="431:18" pos:end="431:24">(<argument pos:start="431:19" pos:end="431:20"><expr pos:start="431:19" pos:end="431:20"><name pos:start="431:19" pos:end="431:20">pb</name></expr></argument>, <argument pos:start="431:23" pos:end="431:23"><expr pos:start="431:23" pos:end="431:23"><literal type="number" pos:start="431:23" pos:end="431:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="431:27" pos:end="431:45">/* no parameters */</comment>





        <comment type="block" pos:start="437:9" pos:end="437:16">/* id */</comment>

        <if_stmt pos:start="439:9" pos:end="451:9"><if pos:start="439:9" pos:end="445:9">if <condition pos:start="439:12" pos:end="439:50">(<expr pos:start="439:13" pos:end="439:49"><name pos:start="439:13" pos:end="439:27"><name pos:start="439:13" pos:end="439:15">enc</name><operator pos:start="439:16" pos:end="439:17">-&gt;</operator><name pos:start="439:18" pos:end="439:27">codec_type</name></name> <operator pos:start="439:29" pos:end="439:30">==</operator> <name pos:start="439:32" pos:end="439:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="439:52" pos:end="445:9">{<block_content pos:start="441:13" pos:end="443:42">

            <expr_stmt pos:start="441:13" pos:end="441:29"><expr pos:start="441:13" pos:end="441:28"><call pos:start="441:13" pos:end="441:28"><name pos:start="441:13" pos:end="441:21">avio_wl16</name><argument_list pos:start="441:22" pos:end="441:28">(<argument pos:start="441:23" pos:end="441:24"><expr pos:start="441:23" pos:end="441:24"><name pos:start="441:23" pos:end="441:24">pb</name></expr></argument>, <argument pos:start="441:27" pos:end="441:27"><expr pos:start="441:27" pos:end="441:27"><literal type="number" pos:start="441:27" pos:end="441:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:42"><expr pos:start="443:13" pos:end="443:41"><call pos:start="443:13" pos:end="443:41"><name pos:start="443:13" pos:end="443:21">avio_wl16</name><argument_list pos:start="443:22" pos:end="443:41">(<argument pos:start="443:23" pos:end="443:24"><expr pos:start="443:23" pos:end="443:24"><name pos:start="443:23" pos:end="443:24">pb</name></expr></argument>, <argument pos:start="443:27" pos:end="443:40"><expr pos:start="443:27" pos:end="443:40"><name pos:start="443:27" pos:end="443:40"><name pos:start="443:27" pos:end="443:29">enc</name><operator pos:start="443:30" pos:end="443:31">-&gt;</operator><name pos:start="443:32" pos:end="443:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="445:11" pos:end="451:9">else <block pos:start="445:16" pos:end="451:9">{<block_content pos:start="447:13" pos:end="449:42">

            <expr_stmt pos:start="447:13" pos:end="447:29"><expr pos:start="447:13" pos:end="447:28"><call pos:start="447:13" pos:end="447:28"><name pos:start="447:13" pos:end="447:21">avio_wl16</name><argument_list pos:start="447:22" pos:end="447:28">(<argument pos:start="447:23" pos:end="447:24"><expr pos:start="447:23" pos:end="447:24"><name pos:start="447:23" pos:end="447:24">pb</name></expr></argument>, <argument pos:start="447:27" pos:end="447:27"><expr pos:start="447:27" pos:end="447:27"><literal type="number" pos:start="447:27" pos:end="447:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:42"><expr pos:start="449:13" pos:end="449:41"><call pos:start="449:13" pos:end="449:41"><name pos:start="449:13" pos:end="449:21">avio_wl32</name><argument_list pos:start="449:22" pos:end="449:41">(<argument pos:start="449:23" pos:end="449:24"><expr pos:start="449:23" pos:end="449:24"><name pos:start="449:23" pos:end="449:24">pb</name></expr></argument>, <argument pos:start="449:27" pos:end="449:40"><expr pos:start="449:27" pos:end="449:40"><name pos:start="449:27" pos:end="449:40"><name pos:start="449:27" pos:end="449:29">enc</name><operator pos:start="449:30" pos:end="449:31">-&gt;</operator><name pos:start="449:32" pos:end="449:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="453:9" pos:end="455:22"><if pos:start="453:9" pos:end="455:22">if<condition pos:start="453:11" pos:end="453:27">(<expr pos:start="453:12" pos:end="453:26"><operator pos:start="453:12" pos:end="453:12">!</operator><name pos:start="453:13" pos:end="453:26"><name pos:start="453:13" pos:end="453:15">enc</name><operator pos:start="453:16" pos:end="453:17">-&gt;</operator><name pos:start="453:18" pos:end="453:26">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="455:13" pos:end="455:22"><block_content pos:start="455:13" pos:end="455:22">

            <return pos:start="455:13" pos:end="455:22">return <expr pos:start="455:20" pos:end="455:21"><operator pos:start="455:20" pos:end="455:20">-</operator><literal type="number" pos:start="455:21" pos:end="455:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="459:5" pos:end="459:25"><expr pos:start="459:5" pos:end="459:24"><call pos:start="459:5" pos:end="459:24"><name pos:start="459:5" pos:end="459:14">end_header</name><argument_list pos:start="459:15" pos:end="459:24">(<argument pos:start="459:16" pos:end="459:17"><expr pos:start="459:16" pos:end="459:17"><name pos:start="459:16" pos:end="459:17">pb</name></expr></argument>, <argument pos:start="459:20" pos:end="459:23"><expr pos:start="459:20" pos:end="459:23"><name pos:start="459:20" pos:end="459:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="463:5" pos:end="463:38">/* patch the header size fields */</comment>



    <expr_stmt pos:start="467:5" pos:end="467:28"><expr pos:start="467:5" pos:end="467:27"><name pos:start="467:5" pos:end="467:11">cur_pos</name> <operator pos:start="467:13" pos:end="467:13">=</operator> <call pos:start="467:15" pos:end="467:27"><name pos:start="467:15" pos:end="467:23">avio_tell</name><argument_list pos:start="467:24" pos:end="467:27">(<argument pos:start="467:25" pos:end="467:26"><expr pos:start="467:25" pos:end="467:26"><name pos:start="467:25" pos:end="467:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:42"><expr pos:start="469:5" pos:end="469:41"><name pos:start="469:5" pos:end="469:15">header_size</name> <operator pos:start="469:17" pos:end="469:17">=</operator> <name pos:start="469:19" pos:end="469:25">cur_pos</name> <operator pos:start="469:27" pos:end="469:27">-</operator> <name pos:start="469:29" pos:end="469:41">header_offset</name></expr>;</expr_stmt>

    <if_stmt pos:start="471:5" pos:end="489:5"><if pos:start="471:5" pos:end="489:5">if <condition pos:start="471:8" pos:end="471:25">(<expr pos:start="471:9" pos:end="471:24"><name pos:start="471:9" pos:end="471:24"><name pos:start="471:9" pos:end="471:11">asf</name><operator pos:start="471:12" pos:end="471:13">-&gt;</operator><name pos:start="471:14" pos:end="471:24">is_streamed</name></name></expr>)</condition> <block pos:start="471:27" pos:end="489:5">{<block_content pos:start="473:9" pos:end="487:35">

        <expr_stmt pos:start="473:9" pos:end="473:35"><expr pos:start="473:9" pos:end="473:34"><name pos:start="473:9" pos:end="473:19">header_size</name> <operator pos:start="473:21" pos:end="473:22">+=</operator> <literal type="number" pos:start="473:24" pos:end="473:26">8</literal> <operator pos:start="473:26" pos:end="473:26">+</operator> <literal type="number" pos:start="473:28" pos:end="473:31">30</literal> <operator pos:start="473:31" pos:end="473:31">+</operator> <literal type="number" pos:start="473:33" pos:end="473:34">50</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="477:9" pos:end="477:57"><expr pos:start="477:9" pos:end="477:56"><call pos:start="477:9" pos:end="477:56"><name pos:start="477:9" pos:end="477:17">avio_seek</name><argument_list pos:start="477:18" pos:end="477:56">(<argument pos:start="477:19" pos:end="477:20"><expr pos:start="477:19" pos:end="477:20"><name pos:start="477:19" pos:end="477:20">pb</name></expr></argument>, <argument pos:start="477:23" pos:end="477:45"><expr pos:start="477:23" pos:end="477:45"><name pos:start="477:23" pos:end="477:35">header_offset</name> <operator pos:start="477:37" pos:end="477:37">-</operator> <literal type="number" pos:start="477:39" pos:end="477:42">10</literal> <operator pos:start="477:42" pos:end="477:42">-</operator> <literal type="number" pos:start="477:44" pos:end="477:45">30</literal></expr></argument>, <argument pos:start="477:48" pos:end="477:55"><expr pos:start="477:48" pos:end="477:55"><name pos:start="477:48" pos:end="477:55">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="479:9" pos:end="479:35"><expr pos:start="479:9" pos:end="479:34"><call pos:start="479:9" pos:end="479:34"><name pos:start="479:9" pos:end="479:17">avio_wl16</name><argument_list pos:start="479:18" pos:end="479:34">(<argument pos:start="479:19" pos:end="479:20"><expr pos:start="479:19" pos:end="479:20"><name pos:start="479:19" pos:end="479:20">pb</name></expr></argument>, <argument pos:start="479:23" pos:end="479:33"><expr pos:start="479:23" pos:end="479:33"><name pos:start="479:23" pos:end="479:33">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:56"><expr pos:start="481:9" pos:end="481:55"><call pos:start="481:9" pos:end="481:55"><name pos:start="481:9" pos:end="481:17">avio_seek</name><argument_list pos:start="481:18" pos:end="481:55">(<argument pos:start="481:19" pos:end="481:20"><expr pos:start="481:19" pos:end="481:20"><name pos:start="481:19" pos:end="481:20">pb</name></expr></argument>, <argument pos:start="481:23" pos:end="481:44"><expr pos:start="481:23" pos:end="481:44"><name pos:start="481:23" pos:end="481:35">header_offset</name> <operator pos:start="481:37" pos:end="481:37">-</operator> <literal type="number" pos:start="481:39" pos:end="481:41">2</literal> <operator pos:start="481:41" pos:end="481:41">-</operator> <literal type="number" pos:start="481:43" pos:end="481:44">30</literal></expr></argument>, <argument pos:start="481:47" pos:end="481:54"><expr pos:start="481:47" pos:end="481:54"><name pos:start="481:47" pos:end="481:54">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="483:9" pos:end="483:35"><expr pos:start="483:9" pos:end="483:34"><call pos:start="483:9" pos:end="483:34"><name pos:start="483:9" pos:end="483:17">avio_wl16</name><argument_list pos:start="483:18" pos:end="483:34">(<argument pos:start="483:19" pos:end="483:20"><expr pos:start="483:19" pos:end="483:20"><name pos:start="483:19" pos:end="483:20">pb</name></expr></argument>, <argument pos:start="483:23" pos:end="483:33"><expr pos:start="483:23" pos:end="483:33"><name pos:start="483:23" pos:end="483:33">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="487:9" pos:end="487:35"><expr pos:start="487:9" pos:end="487:34"><name pos:start="487:9" pos:end="487:19">header_size</name> <operator pos:start="487:21" pos:end="487:22">-=</operator> <literal type="number" pos:start="487:24" pos:end="487:26">8</literal> <operator pos:start="487:26" pos:end="487:26">+</operator> <literal type="number" pos:start="487:28" pos:end="487:31">30</literal> <operator pos:start="487:31" pos:end="487:31">+</operator> <literal type="number" pos:start="487:33" pos:end="487:34">50</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="491:5" pos:end="491:26"><expr pos:start="491:5" pos:end="491:25"><name pos:start="491:5" pos:end="491:15">header_size</name> <operator pos:start="491:17" pos:end="491:18">+=</operator> <literal type="number" pos:start="491:20" pos:end="491:23">24</literal> <operator pos:start="491:23" pos:end="491:23">+</operator> <literal type="number" pos:start="491:25" pos:end="491:25">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="493:5" pos:end="493:48"><expr pos:start="493:5" pos:end="493:47"><call pos:start="493:5" pos:end="493:47"><name pos:start="493:5" pos:end="493:13">avio_seek</name><argument_list pos:start="493:14" pos:end="493:47">(<argument pos:start="493:15" pos:end="493:16"><expr pos:start="493:15" pos:end="493:16"><name pos:start="493:15" pos:end="493:16">pb</name></expr></argument>, <argument pos:start="493:19" pos:end="493:36"><expr pos:start="493:19" pos:end="493:36"><name pos:start="493:19" pos:end="493:31">header_offset</name> <operator pos:start="493:33" pos:end="493:33">-</operator> <literal type="number" pos:start="493:35" pos:end="493:36">14</literal></expr></argument>, <argument pos:start="493:39" pos:end="493:46"><expr pos:start="493:39" pos:end="493:46"><name pos:start="493:39" pos:end="493:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="495:5" pos:end="495:31"><expr pos:start="495:5" pos:end="495:30"><call pos:start="495:5" pos:end="495:30"><name pos:start="495:5" pos:end="495:13">avio_wl64</name><argument_list pos:start="495:14" pos:end="495:30">(<argument pos:start="495:15" pos:end="495:16"><expr pos:start="495:15" pos:end="495:16"><name pos:start="495:15" pos:end="495:16">pb</name></expr></argument>, <argument pos:start="495:19" pos:end="495:29"><expr pos:start="495:19" pos:end="495:29"><name pos:start="495:19" pos:end="495:29">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="497:5" pos:end="497:37"><expr pos:start="497:5" pos:end="497:36"><call pos:start="497:5" pos:end="497:36"><name pos:start="497:5" pos:end="497:13">avio_seek</name><argument_list pos:start="497:14" pos:end="497:36">(<argument pos:start="497:15" pos:end="497:16"><expr pos:start="497:15" pos:end="497:16"><name pos:start="497:15" pos:end="497:16">pb</name></expr></argument>, <argument pos:start="497:19" pos:end="497:25"><expr pos:start="497:19" pos:end="497:25"><name pos:start="497:19" pos:end="497:25">cur_pos</name></expr></argument>, <argument pos:start="497:28" pos:end="497:35"><expr pos:start="497:28" pos:end="497:35"><name pos:start="497:28" pos:end="497:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="501:5" pos:end="501:57">/* movie chunk, followed by packets of packet_size */</comment>

    <expr_stmt pos:start="503:5" pos:end="503:31"><expr pos:start="503:5" pos:end="503:30"><name pos:start="503:5" pos:end="503:20"><name pos:start="503:5" pos:end="503:7">asf</name><operator pos:start="503:8" pos:end="503:9">-&gt;</operator><name pos:start="503:10" pos:end="503:20">data_offset</name></name> <operator pos:start="503:22" pos:end="503:22">=</operator> <name pos:start="503:24" pos:end="503:30">cur_pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:38"><expr pos:start="505:5" pos:end="505:37"><call pos:start="505:5" pos:end="505:37"><name pos:start="505:5" pos:end="505:12">put_guid</name><argument_list pos:start="505:13" pos:end="505:37">(<argument pos:start="505:14" pos:end="505:15"><expr pos:start="505:14" pos:end="505:15"><name pos:start="505:14" pos:end="505:15">pb</name></expr></argument>, <argument pos:start="505:18" pos:end="505:36"><expr pos:start="505:18" pos:end="505:36"><operator pos:start="505:18" pos:end="505:18">&amp;</operator><name pos:start="505:19" pos:end="505:36">ff_asf_data_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:35"><expr pos:start="507:5" pos:end="507:34"><call pos:start="507:5" pos:end="507:34"><name pos:start="507:5" pos:end="507:13">avio_wl64</name><argument_list pos:start="507:14" pos:end="507:34">(<argument pos:start="507:15" pos:end="507:16"><expr pos:start="507:15" pos:end="507:16"><name pos:start="507:15" pos:end="507:16">pb</name></expr></argument>, <argument pos:start="507:19" pos:end="507:33"><expr pos:start="507:19" pos:end="507:33"><name pos:start="507:19" pos:end="507:33">data_chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:34"><expr pos:start="509:5" pos:end="509:33"><call pos:start="509:5" pos:end="509:33"><name pos:start="509:5" pos:end="509:12">put_guid</name><argument_list pos:start="509:13" pos:end="509:33">(<argument pos:start="509:14" pos:end="509:15"><expr pos:start="509:14" pos:end="509:15"><name pos:start="509:14" pos:end="509:15">pb</name></expr></argument>, <argument pos:start="509:18" pos:end="509:32"><expr pos:start="509:18" pos:end="509:32"><operator pos:start="509:18" pos:end="509:18">&amp;</operator><name pos:start="509:19" pos:end="509:32">ff_asf_my_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="511:5" pos:end="511:35"><expr pos:start="511:5" pos:end="511:34"><call pos:start="511:5" pos:end="511:34"><name pos:start="511:5" pos:end="511:13">avio_wl64</name><argument_list pos:start="511:14" pos:end="511:34">(<argument pos:start="511:15" pos:end="511:16"><expr pos:start="511:15" pos:end="511:16"><name pos:start="511:15" pos:end="511:16">pb</name></expr></argument>, <argument pos:start="511:19" pos:end="511:33"><expr pos:start="511:19" pos:end="511:33"><name pos:start="511:19" pos:end="511:33"><name pos:start="511:19" pos:end="511:21">asf</name><operator pos:start="511:22" pos:end="511:23">-&gt;</operator><name pos:start="511:24" pos:end="511:33">nb_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="511:37" pos:end="511:52">/* nb packets */</comment>

    <expr_stmt pos:start="513:5" pos:end="513:19"><expr pos:start="513:5" pos:end="513:18"><call pos:start="513:5" pos:end="513:18"><name pos:start="513:5" pos:end="513:11">avio_w8</name><argument_list pos:start="513:12" pos:end="513:18">(<argument pos:start="513:13" pos:end="513:14"><expr pos:start="513:13" pos:end="513:14"><name pos:start="513:13" pos:end="513:14">pb</name></expr></argument>, <argument pos:start="513:17" pos:end="513:17"><expr pos:start="513:17" pos:end="513:17"><literal type="number" pos:start="513:17" pos:end="513:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="513:21" pos:end="513:29">/* ??? */</comment>

    <expr_stmt pos:start="515:5" pos:end="515:19"><expr pos:start="515:5" pos:end="515:18"><call pos:start="515:5" pos:end="515:18"><name pos:start="515:5" pos:end="515:11">avio_w8</name><argument_list pos:start="515:12" pos:end="515:18">(<argument pos:start="515:13" pos:end="515:14"><expr pos:start="515:13" pos:end="515:14"><name pos:start="515:13" pos:end="515:14">pb</name></expr></argument>, <argument pos:start="515:17" pos:end="515:17"><expr pos:start="515:17" pos:end="515:17"><literal type="number" pos:start="515:17" pos:end="515:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="515:21" pos:end="515:29">/* ??? */</comment>

    <return pos:start="517:5" pos:end="517:13">return <expr pos:start="517:12" pos:end="517:12"><literal type="number" pos:start="517:12" pos:end="517:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
