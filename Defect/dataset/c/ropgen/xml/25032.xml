<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25032.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:41">qemu_chr_open_mux</name><parameter_list pos:start="1:42" pos:end="5:75">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">id</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:65"><decl pos:start="3:43" pos:end="3:65"><type pos:start="3:43" pos:end="3:65"><name pos:start="3:43" pos:end="3:56">ChardevBackend</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">backend</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:60"><decl pos:start="5:43" pos:end="5:60"><type pos:start="5:43" pos:end="5:60"><name pos:start="5:43" pos:end="5:55">ChardevReturn</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:60">ret</name></decl></parameter>, <parameter pos:start="5:63" pos:end="5:74"><decl pos:start="5:63" pos:end="5:74"><type pos:start="5:63" pos:end="5:74"><name pos:start="5:63" pos:end="5:67">Error</name> <modifier pos:start="5:69" pos:end="5:69">*</modifier><modifier pos:start="5:70" pos:end="5:70">*</modifier></type><name pos:start="5:71" pos:end="5:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:15">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">ChardevMux</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">mux</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:29">backend</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:34">mux</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">CharDriverState</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">chr</name></decl>, <decl pos:start="11:27" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:21"><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:30">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">MuxDriver</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:16">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:7">drv</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:37"><name pos:start="17:11" pos:end="17:23">qemu_chr_find</name><argument_list pos:start="17:24" pos:end="17:37">(<argument pos:start="17:25" pos:end="17:36"><expr pos:start="17:25" pos:end="17:36"><name pos:start="17:25" pos:end="17:36"><name pos:start="17:25" pos:end="17:27">mux</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:36">chardev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">drv</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <name pos:start="19:16" pos:end="19:19">NULL</name></expr>)</condition> <block pos:start="19:22" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:20">

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><call pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:18">error_setg</name><argument_list pos:start="21:19" pos:end="21:72">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">errp</name></expr></argument>, <argument pos:start="21:26" pos:end="21:57"><expr pos:start="21:26" pos:end="21:57"><literal type="string" pos:start="21:26" pos:end="21:57">"mux: base chardev %s not found"</literal></expr></argument>, <argument pos:start="21:60" pos:end="21:71"><expr pos:start="21:60" pos:end="21:71"><name pos:start="21:60" pos:end="21:71"><name pos:start="21:60" pos:end="21:62">mux</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:71">chardev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:7">chr</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:26"><name pos:start="29:11" pos:end="29:24">qemu_chr_alloc</name><argument_list pos:start="29:25" pos:end="29:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:5">d</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:14">g_new0</name><argument_list pos:start="31:15" pos:end="31:28">(<argument pos:start="31:16" pos:end="31:24"><expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:24">MuxDriver</name></expr></argument>, <argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:7">chr</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:15">opaque</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:19">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:17"><expr pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">d</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">drv</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:16">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:5">d</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">focus</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:7">chr</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:18">chr_write</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:34">mux_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:7">chr</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:32">chr_update_read_handler</name></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <name pos:start="43:36" pos:end="43:62">mux_chr_update_read_handler</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:7">chr</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:25">chr_accept_input</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:48">mux_chr_accept_input</name></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:77">/* Frontend guest-open / -close notification is not support with muxes */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:7">chr</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:24">chr_set_fe_open</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:31">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:27">(<expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:11">drv</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:26">chr_add_watch</name></name></expr>)</condition> <block pos:start="51:29" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:47">

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:11">chr</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:26">chr_add_watch</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:46">mux_chr_add_watch</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="57:5" pos:end="61:7">/* only default to opened state if we've realized the initial

     * set of muxes

     */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:7">chr</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:25">explicit_be_open</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <ternary pos:start="63:29" pos:end="63:50"><condition pos:start="63:29" pos:end="63:44"><expr pos:start="63:29" pos:end="63:42"><name pos:start="63:29" pos:end="63:42">muxes_realized</name></expr> ?</condition><then pos:start="63:46" pos:end="63:46"> <expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">0</literal></expr> </then><else pos:start="63:48" pos:end="63:50">: <expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:7">chr</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:15">is_mux</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <literal type="number" pos:start="65:19" pos:end="65:19">1</literal></expr>;</expr_stmt>



    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
