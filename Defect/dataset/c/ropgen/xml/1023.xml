<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1023.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:72"><name pos:start="1:1" pos:end="1:23">decode_coeffs_b_generic</name><argument_list pos:start="1:24" pos:end="9:72">(<argument pos:start="1:25" pos:end="1:41">VP56RangeCoder *c</argument>, <argument pos:start="1:44" pos:end="1:56">int16_t *coef</argument>, <argument pos:start="1:59" pos:end="1:70">int n_coeffs</argument>,

                        <argument pos:start="3:25" pos:end="3:38">int is_tx32x32</argument>, <argument pos:start="3:41" pos:end="3:59">int is8bitsperpixel</argument>, <argument pos:start="3:62" pos:end="3:68">int bpp</argument>, <argument pos:start="3:71" pos:end="3:91">unsigned (*cnt)[<literal type="number" pos:start="3:87" pos:end="3:87">6</literal>][<literal type="number" pos:start="3:90" pos:end="3:90">3</literal>]</argument>,

                        <argument pos:start="5:25" pos:end="5:45">unsigned (*eob)[<literal type="number" pos:start="5:41" pos:end="5:41">6</literal>][<literal type="number" pos:start="5:44" pos:end="5:44">2</literal>]</argument>, <argument pos:start="5:48" pos:end="5:66">uint8_t (*p)[<literal type="number" pos:start="5:61" pos:end="5:61">6</literal>][<literal type="number" pos:start="5:64" pos:end="5:65">11</literal>]</argument>,

                        <argument pos:start="7:25" pos:end="7:31">int nnz</argument>, <argument pos:start="7:34" pos:end="7:52">const int16_t *scan</argument>, <argument pos:start="7:55" pos:end="7:76">const int16_t (*nb)[<literal type="number" pos:start="7:75" pos:end="7:75">2</literal>]</argument>,

                        <argument pos:start="9:25" pos:end="9:50">const int16_t *band_counts</argument>, <argument pos:start="9:53" pos:end="9:71">const int16_t *qmul</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="243:1">{<block_content pos:start="13:5" pos:end="241:13">

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name> <init pos:start="13:11" pos:end="13:13">= <expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr></init></decl>, <decl pos:start="13:16" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:19">band</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>, <decl pos:start="13:26" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:26" pos:end="13:34">band_left</name> <init pos:start="13:36" pos:end="13:54">= <expr pos:start="13:38" pos:end="13:54"><name pos:start="13:38" pos:end="13:54"><name pos:start="13:38" pos:end="13:48">band_counts</name><index pos:start="13:49" pos:end="13:54">[<expr pos:start="13:50" pos:end="13:53"><name pos:start="13:50" pos:end="13:53">band</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:15">tp</name> <init pos:start="15:17" pos:end="15:27">= <expr pos:start="15:19" pos:end="15:27"><name pos:start="15:19" pos:end="15:27"><name pos:start="15:19" pos:end="15:19">p</name><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>]</index><index pos:start="15:23" pos:end="15:27">[<expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">nnz</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:17">cache</name><index pos:start="17:18" pos:end="17:23">[<expr pos:start="17:19" pos:end="17:22"><literal type="number" pos:start="17:19" pos:end="17:22">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <do pos:start="21:5" pos:end="237:29">do <block pos:start="21:8" pos:end="237:5">{<block_content pos:start="23:9" pos:end="235:26">

        <decl_stmt pos:start="23:9" pos:end="23:20"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">val</name></decl>, <decl pos:start="23:18" pos:end="23:19"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:18" pos:end="23:19">rc</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:49"><name pos:start="27:15" pos:end="27:39">vp56_rac_get_prob_branchy</name><argument_list pos:start="27:40" pos:end="27:49">(<argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><name pos:start="27:41" pos:end="27:41">c</name></expr></argument>, <argument pos:start="27:44" pos:end="27:48"><expr pos:start="27:44" pos:end="27:48"><name pos:start="27:44" pos:end="27:48"><name pos:start="27:44" pos:end="27:45">tp</name><index pos:start="27:46" pos:end="27:48">[<expr pos:start="27:47" pos:end="27:47"><literal type="number" pos:start="27:47" pos:end="27:47">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="27:52" pos:end="27:57">// eob</comment>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:11">eob</name><index pos:start="29:12" pos:end="29:17">[<expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">band</name></expr>]</index><index pos:start="29:18" pos:end="29:22">[<expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:21">nnz</name></expr>]</index><index pos:start="29:23" pos:end="29:27">[<expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">val</name></expr>]</index></name><operator pos:start="29:28" pos:end="29:29">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:18"><if pos:start="31:9" pos:end="33:18">if <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:16">val</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:18"><block_content pos:start="33:13" pos:end="33:18">

            <break pos:start="33:13" pos:end="33:18">break;</break></block_content></block></if></if_stmt>



<label pos:start="37:1" pos:end="37:9"><name pos:start="37:1" pos:end="37:8">skip_eob</name>:</label>

        <if_stmt pos:start="39:9" pos:end="59:9"><if pos:start="39:9" pos:end="59:9">if <condition pos:start="39:12" pos:end="39:49">(<expr pos:start="39:13" pos:end="39:48"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:48"><name pos:start="39:14" pos:end="39:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="39:39" pos:end="39:48">(<argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">c</name></expr></argument>, <argument pos:start="39:43" pos:end="39:47"><expr pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:44">tp</name><index pos:start="39:45" pos:end="39:47">[<expr pos:start="39:46" pos:end="39:46"><literal type="number" pos:start="39:46" pos:end="39:46">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:51" pos:end="59:9">{<block_content pos:start="41:13" pos:end="57:26"> <comment type="line" pos:start="39:53" pos:end="39:59">// zero</comment>

            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:15">cnt</name><index pos:start="41:16" pos:end="41:21">[<expr pos:start="41:17" pos:end="41:20"><name pos:start="41:17" pos:end="41:20">band</name></expr>]</index><index pos:start="41:22" pos:end="41:26">[<expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">nnz</name></expr>]</index><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>]</index></name><operator pos:start="41:30" pos:end="41:31">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:48"><if pos:start="43:13" pos:end="45:48">if <condition pos:start="43:16" pos:end="43:29">(<expr pos:start="43:17" pos:end="43:28"><operator pos:start="43:17" pos:end="43:17">!</operator><operator pos:start="43:18" pos:end="43:19">--</operator><name pos:start="43:20" pos:end="43:28">band_left</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:48"><block_content pos:start="45:17" pos:end="45:48">

                <expr_stmt pos:start="45:17" pos:end="45:48"><expr pos:start="45:17" pos:end="45:47"><name pos:start="45:17" pos:end="45:25">band_left</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:47"><name pos:start="45:29" pos:end="45:39">band_counts</name><index pos:start="45:40" pos:end="45:47">[<expr pos:start="45:41" pos:end="45:46"><operator pos:start="45:41" pos:end="45:42">++</operator><name pos:start="45:43" pos:end="45:46">band</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:17">cache</name><index pos:start="47:18" pos:end="47:26">[<expr pos:start="47:19" pos:end="47:25"><name pos:start="47:19" pos:end="47:25"><name pos:start="47:19" pos:end="47:22">scan</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:74"><expr pos:start="49:13" pos:end="49:73"><name pos:start="49:13" pos:end="49:15">nnz</name>            <operator pos:start="49:28" pos:end="49:28">=</operator> <operator pos:start="49:30" pos:end="49:30">(</operator><literal type="number" pos:start="49:31" pos:end="49:33">1</literal> <operator pos:start="49:33" pos:end="49:33">+</operator> <name pos:start="49:35" pos:end="49:49"><name pos:start="49:35" pos:end="49:39">cache</name><index pos:start="49:40" pos:end="49:49">[<expr pos:start="49:41" pos:end="49:48"><name pos:start="49:41" pos:end="49:48"><name pos:start="49:41" pos:end="49:42">nb</name><index pos:start="49:43" pos:end="49:45">[<expr pos:start="49:44" pos:end="49:44"><name pos:start="49:44" pos:end="49:44">i</name></expr>]</index><index pos:start="49:46" pos:end="49:48">[<expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="49:51" pos:end="49:51">+</operator> <name pos:start="49:53" pos:end="49:67"><name pos:start="49:53" pos:end="49:57">cache</name><index pos:start="49:58" pos:end="49:67">[<expr pos:start="49:59" pos:end="49:66"><name pos:start="49:59" pos:end="49:66"><name pos:start="49:59" pos:end="49:60">nb</name><index pos:start="49:61" pos:end="49:63">[<expr pos:start="49:62" pos:end="49:62"><name pos:start="49:62" pos:end="49:62">i</name></expr>]</index><index pos:start="49:64" pos:end="49:66">[<expr pos:start="49:65" pos:end="49:65"><literal type="number" pos:start="49:65" pos:end="49:65">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="49:68" pos:end="49:68">)</operator> <operator pos:start="49:70" pos:end="49:71">&gt;&gt;</operator> <literal type="number" pos:start="49:73" pos:end="49:73">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:14">tp</name>             <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:41"><name pos:start="51:30" pos:end="51:30">p</name><index pos:start="51:31" pos:end="51:36">[<expr pos:start="51:32" pos:end="51:35"><name pos:start="51:32" pos:end="51:35">band</name></expr>]</index><index pos:start="51:37" pos:end="51:41">[<expr pos:start="51:38" pos:end="51:40"><name pos:start="51:38" pos:end="51:40">nnz</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:22"><if pos:start="53:13" pos:end="55:22">if <condition pos:start="53:16" pos:end="53:32">(<expr pos:start="53:17" pos:end="53:31"><operator pos:start="53:17" pos:end="53:18">++</operator><name pos:start="53:19" pos:end="53:19">i</name> <operator pos:start="53:21" pos:end="53:22">==</operator> <name pos:start="53:24" pos:end="53:31">n_coeffs</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:22"><block_content pos:start="55:17" pos:end="55:22">

                <break pos:start="55:17" pos:end="55:22">break;</break></block_content></block></if></if_stmt>  <comment type="line" pos:start="55:25" pos:end="55:67">//invalid input; blocks should end with EOB</comment>

            <goto pos:start="57:13" pos:end="57:26">goto <name pos:start="57:18" pos:end="57:25">skip_eob</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:10">rc</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:20"><name pos:start="63:14" pos:end="63:17">scan</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="220:0"><if pos:start="65:9" pos:end="73:9">if <condition pos:start="65:12" pos:end="65:49">(<expr pos:start="65:13" pos:end="65:48"><operator pos:start="65:13" pos:end="65:13">!</operator><call pos:start="65:14" pos:end="65:48"><name pos:start="65:14" pos:end="65:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="65:39" pos:end="65:48">(<argument pos:start="65:40" pos:end="65:40"><expr pos:start="65:40" pos:end="65:40"><name pos:start="65:40" pos:end="65:40">c</name></expr></argument>, <argument pos:start="65:43" pos:end="65:47"><expr pos:start="65:43" pos:end="65:47"><name pos:start="65:43" pos:end="65:47"><name pos:start="65:43" pos:end="65:44">tp</name><index pos:start="65:45" pos:end="65:47">[<expr pos:start="65:46" pos:end="65:46"><literal type="number" pos:start="65:46" pos:end="65:46">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:51" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:26"> <comment type="line" pos:start="65:53" pos:end="65:58">// one</comment>

            <expr_stmt pos:start="67:13" pos:end="67:32"><expr pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:15">cnt</name><index pos:start="67:16" pos:end="67:21">[<expr pos:start="67:17" pos:end="67:20"><name pos:start="67:17" pos:end="67:20">band</name></expr>]</index><index pos:start="67:22" pos:end="67:26">[<expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:25">nnz</name></expr>]</index><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><literal type="number" pos:start="67:28" pos:end="67:28">1</literal></expr>]</index></name><operator pos:start="67:30" pos:end="67:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">val</name>       <operator pos:start="69:23" pos:end="69:23">=</operator> <literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:17">cache</name><index pos:start="71:18" pos:end="71:21">[<expr pos:start="71:19" pos:end="71:20"><name pos:start="71:19" pos:end="71:20">rc</name></expr>]</index></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="220:0">else <block pos:start="73:16" pos:end="220:0">{<block_content pos:start="77:13" pos:end="203:13">

            <comment type="line" pos:start="75:13" pos:end="75:78">// fill in p[3-10] (model fill) - only once per frame for each pos</comment>

            <if_stmt pos:start="77:13" pos:end="79:63"><if pos:start="77:13" pos:end="79:63">if <condition pos:start="77:16" pos:end="77:23">(<expr pos:start="77:17" pos:end="77:22"><operator pos:start="77:17" pos:end="77:17">!</operator><name pos:start="77:18" pos:end="77:22"><name pos:start="77:18" pos:end="77:19">tp</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">3</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:63"><block_content pos:start="79:17" pos:end="79:63">

                <expr_stmt pos:start="79:17" pos:end="79:63"><expr pos:start="79:17" pos:end="79:62"><call pos:start="79:17" pos:end="79:62"><name pos:start="79:17" pos:end="79:22">memcpy</name><argument_list pos:start="79:23" pos:end="79:62">(<argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><operator pos:start="79:24" pos:end="79:24">&amp;</operator><name pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:26">tp</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:32" pos:end="79:58"><expr pos:start="79:32" pos:end="79:58"><name pos:start="79:32" pos:end="79:58"><name pos:start="79:32" pos:end="79:51">ff_vp9_model_pareto8</name><index pos:start="79:52" pos:end="79:58">[<expr pos:start="79:53" pos:end="79:57"><name pos:start="79:53" pos:end="79:57"><name pos:start="79:53" pos:end="79:54">tp</name><index pos:start="79:55" pos:end="79:57">[<expr pos:start="79:56" pos:end="79:56"><literal type="number" pos:start="79:56" pos:end="79:56">2</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="79:61" pos:end="79:61"><expr pos:start="79:61" pos:end="79:61"><literal type="number" pos:start="79:61" pos:end="79:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="83:13" pos:end="83:32"><expr pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:15">cnt</name><index pos:start="83:16" pos:end="83:21">[<expr pos:start="83:17" pos:end="83:20"><name pos:start="83:17" pos:end="83:20">band</name></expr>]</index><index pos:start="83:22" pos:end="83:26">[<expr pos:start="83:23" pos:end="83:25"><name pos:start="83:23" pos:end="83:25">nnz</name></expr>]</index><index pos:start="83:27" pos:end="83:29">[<expr pos:start="83:28" pos:end="83:28"><literal type="number" pos:start="83:28" pos:end="83:28">2</literal></expr>]</index></name><operator pos:start="83:30" pos:end="83:31">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="203:13"><if pos:start="85:13" pos:end="99:13">if <condition pos:start="85:16" pos:end="85:53">(<expr pos:start="85:17" pos:end="85:52"><operator pos:start="85:17" pos:end="85:17">!</operator><call pos:start="85:18" pos:end="85:52"><name pos:start="85:18" pos:end="85:42">vp56_rac_get_prob_branchy</name><argument_list pos:start="85:43" pos:end="85:52">(<argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">c</name></expr></argument>, <argument pos:start="85:47" pos:end="85:51"><expr pos:start="85:47" pos:end="85:51"><name pos:start="85:47" pos:end="85:51"><name pos:start="85:47" pos:end="85:48">tp</name><index pos:start="85:49" pos:end="85:51">[<expr pos:start="85:50" pos:end="85:50"><literal type="number" pos:start="85:50" pos:end="85:50">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:55" pos:end="99:13">{<block_content pos:start="87:17" pos:end="97:17"> <comment type="line" pos:start="85:57" pos:end="85:66">// 2, 3, 4</comment>

                <if_stmt pos:start="87:17" pos:end="97:17"><if pos:start="87:17" pos:end="91:17">if <condition pos:start="87:20" pos:end="87:57">(<expr pos:start="87:21" pos:end="87:56"><operator pos:start="87:21" pos:end="87:21">!</operator><call pos:start="87:22" pos:end="87:56"><name pos:start="87:22" pos:end="87:46">vp56_rac_get_prob_branchy</name><argument_list pos:start="87:47" pos:end="87:56">(<argument pos:start="87:48" pos:end="87:48"><expr pos:start="87:48" pos:end="87:48"><name pos:start="87:48" pos:end="87:48">c</name></expr></argument>, <argument pos:start="87:51" pos:end="87:55"><expr pos:start="87:51" pos:end="87:55"><name pos:start="87:51" pos:end="87:55"><name pos:start="87:51" pos:end="87:52">tp</name><index pos:start="87:53" pos:end="87:55">[<expr pos:start="87:54" pos:end="87:54"><literal type="number" pos:start="87:54" pos:end="87:54">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:59" pos:end="91:17">{<block_content pos:start="89:21" pos:end="89:40">

                    <expr_stmt pos:start="89:21" pos:end="89:40"><expr pos:start="89:21" pos:end="89:39"><name pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:25">cache</name><index pos:start="89:26" pos:end="89:29">[<expr pos:start="89:27" pos:end="89:28"><name pos:start="89:27" pos:end="89:28">rc</name></expr>]</index></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:35">val</name> <operator pos:start="89:37" pos:end="89:37">=</operator> <literal type="number" pos:start="89:39" pos:end="89:39">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="91:19" pos:end="97:17">else <block pos:start="91:24" pos:end="97:17">{<block_content pos:start="93:21" pos:end="95:34">

                    <expr_stmt pos:start="93:21" pos:end="93:64"><expr pos:start="93:21" pos:end="93:63"><name pos:start="93:21" pos:end="93:23">val</name>       <operator pos:start="93:31" pos:end="93:31">=</operator> <literal type="number" pos:start="93:33" pos:end="93:35">3</literal> <operator pos:start="93:35" pos:end="93:35">+</operator> <call pos:start="93:37" pos:end="93:63"><name pos:start="93:37" pos:end="93:53">vp56_rac_get_prob</name><argument_list pos:start="93:54" pos:end="93:63">(<argument pos:start="93:55" pos:end="93:55"><expr pos:start="93:55" pos:end="93:55"><name pos:start="93:55" pos:end="93:55">c</name></expr></argument>, <argument pos:start="93:58" pos:end="93:62"><expr pos:start="93:58" pos:end="93:62"><name pos:start="93:58" pos:end="93:62"><name pos:start="93:58" pos:end="93:59">tp</name><index pos:start="93:60" pos:end="93:62">[<expr pos:start="93:61" pos:end="93:61"><literal type="number" pos:start="93:61" pos:end="93:61">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:34"><expr pos:start="95:21" pos:end="95:33"><name pos:start="95:21" pos:end="95:29"><name pos:start="95:21" pos:end="95:25">cache</name><index pos:start="95:26" pos:end="95:29">[<expr pos:start="95:27" pos:end="95:28"><name pos:start="95:27" pos:end="95:28">rc</name></expr>]</index></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <literal type="number" pos:start="95:33" pos:end="95:33">3</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="99:15" pos:end="115:13">else if <condition pos:start="99:23" pos:end="99:60">(<expr pos:start="99:24" pos:end="99:59"><operator pos:start="99:24" pos:end="99:24">!</operator><call pos:start="99:25" pos:end="99:59"><name pos:start="99:25" pos:end="99:49">vp56_rac_get_prob_branchy</name><argument_list pos:start="99:50" pos:end="99:59">(<argument pos:start="99:51" pos:end="99:51"><expr pos:start="99:51" pos:end="99:51"><name pos:start="99:51" pos:end="99:51">c</name></expr></argument>, <argument pos:start="99:54" pos:end="99:58"><expr pos:start="99:54" pos:end="99:58"><name pos:start="99:54" pos:end="99:58"><name pos:start="99:54" pos:end="99:55">tp</name><index pos:start="99:56" pos:end="99:58">[<expr pos:start="99:57" pos:end="99:57"><literal type="number" pos:start="99:57" pos:end="99:57">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:62" pos:end="115:13">{<block_content pos:start="101:17" pos:end="113:17"> <comment type="line" pos:start="99:64" pos:end="99:72">// cat1/2</comment>

                <expr_stmt pos:start="101:17" pos:end="101:30"><expr pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:21">cache</name><index pos:start="101:22" pos:end="101:25">[<expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">rc</name></expr>]</index></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:29">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="113:17"><if pos:start="103:17" pos:end="107:17">if <condition pos:start="103:20" pos:end="103:57">(<expr pos:start="103:21" pos:end="103:56"><operator pos:start="103:21" pos:end="103:21">!</operator><call pos:start="103:22" pos:end="103:56"><name pos:start="103:22" pos:end="103:46">vp56_rac_get_prob_branchy</name><argument_list pos:start="103:47" pos:end="103:56">(<argument pos:start="103:48" pos:end="103:48"><expr pos:start="103:48" pos:end="103:48"><name pos:start="103:48" pos:end="103:48">c</name></expr></argument>, <argument pos:start="103:51" pos:end="103:55"><expr pos:start="103:51" pos:end="103:55"><name pos:start="103:51" pos:end="103:55"><name pos:start="103:51" pos:end="103:52">tp</name><index pos:start="103:53" pos:end="103:55">[<expr pos:start="103:54" pos:end="103:54"><literal type="number" pos:start="103:54" pos:end="103:54">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:59" pos:end="107:17">{<block_content pos:start="105:21" pos:end="105:58">

                    <expr_stmt pos:start="105:21" pos:end="105:58"><expr pos:start="105:21" pos:end="105:57"><name pos:start="105:21" pos:end="105:23">val</name>  <operator pos:start="105:26" pos:end="105:26">=</operator>  <call pos:start="105:29" pos:end="105:53"><name pos:start="105:29" pos:end="105:45">vp56_rac_get_prob</name><argument_list pos:start="105:46" pos:end="105:53">(<argument pos:start="105:47" pos:end="105:47"><expr pos:start="105:47" pos:end="105:47"><name pos:start="105:47" pos:end="105:47">c</name></expr></argument>, <argument pos:start="105:50" pos:end="105:52"><expr pos:start="105:50" pos:end="105:52"><literal type="number" pos:start="105:50" pos:end="105:52">159</literal></expr></argument>)</argument_list></call> <operator pos:start="105:55" pos:end="105:55">+</operator> <literal type="number" pos:start="105:57" pos:end="105:57">5</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="107:19" pos:end="113:17">else <block pos:start="107:24" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:54">

                    <expr_stmt pos:start="109:21" pos:end="109:64"><expr pos:start="109:21" pos:end="109:63"><name pos:start="109:21" pos:end="109:23">val</name>  <operator pos:start="109:26" pos:end="109:26">=</operator> <operator pos:start="109:28" pos:end="109:28">(</operator><call pos:start="109:29" pos:end="109:53"><name pos:start="109:29" pos:end="109:45">vp56_rac_get_prob</name><argument_list pos:start="109:46" pos:end="109:53">(<argument pos:start="109:47" pos:end="109:47"><expr pos:start="109:47" pos:end="109:47"><name pos:start="109:47" pos:end="109:47">c</name></expr></argument>, <argument pos:start="109:50" pos:end="109:52"><expr pos:start="109:50" pos:end="109:52"><literal type="number" pos:start="109:50" pos:end="109:52">165</literal></expr></argument>)</argument_list></call> <operator pos:start="109:55" pos:end="109:56">&lt;&lt;</operator> <literal type="number" pos:start="109:58" pos:end="109:58">1</literal><operator pos:start="109:59" pos:end="109:59">)</operator> <operator pos:start="109:61" pos:end="109:61">+</operator> <literal type="number" pos:start="109:63" pos:end="109:63">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:54"><expr pos:start="111:21" pos:end="111:53"><name pos:start="111:21" pos:end="111:23">val</name> <operator pos:start="111:25" pos:end="111:26">+=</operator>  <call pos:start="111:29" pos:end="111:53"><name pos:start="111:29" pos:end="111:45">vp56_rac_get_prob</name><argument_list pos:start="111:46" pos:end="111:53">(<argument pos:start="111:47" pos:end="111:47"><expr pos:start="111:47" pos:end="111:47"><name pos:start="111:47" pos:end="111:47">c</name></expr></argument>, <argument pos:start="111:50" pos:end="111:52"><expr pos:start="111:50" pos:end="111:52"><literal type="number" pos:start="111:50" pos:end="111:52">145</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="203:13">else <block pos:start="115:20" pos:end="203:13">{<block_content pos:start="117:17" pos:end="201:17"> <comment type="line" pos:start="115:22" pos:end="115:31">// cat 3-6</comment>

                <expr_stmt pos:start="117:17" pos:end="117:30"><expr pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:25"><name pos:start="117:17" pos:end="117:21">cache</name><index pos:start="117:22" pos:end="117:25">[<expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">rc</name></expr>]</index></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <literal type="number" pos:start="117:29" pos:end="117:29">5</literal></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="201:17"><if pos:start="119:17" pos:end="141:17">if <condition pos:start="119:20" pos:end="119:57">(<expr pos:start="119:21" pos:end="119:56"><operator pos:start="119:21" pos:end="119:21">!</operator><call pos:start="119:22" pos:end="119:56"><name pos:start="119:22" pos:end="119:46">vp56_rac_get_prob_branchy</name><argument_list pos:start="119:47" pos:end="119:56">(<argument pos:start="119:48" pos:end="119:48"><expr pos:start="119:48" pos:end="119:48"><name pos:start="119:48" pos:end="119:48">c</name></expr></argument>, <argument pos:start="119:51" pos:end="119:55"><expr pos:start="119:51" pos:end="119:55"><name pos:start="119:51" pos:end="119:55"><name pos:start="119:51" pos:end="119:52">tp</name><index pos:start="119:53" pos:end="119:55">[<expr pos:start="119:54" pos:end="119:54"><literal type="number" pos:start="119:54" pos:end="119:54">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:59" pos:end="141:17">{<block_content pos:start="121:21" pos:end="139:21">

                    <if_stmt pos:start="121:21" pos:end="139:21"><if pos:start="121:21" pos:end="129:21">if <condition pos:start="121:24" pos:end="121:61">(<expr pos:start="121:25" pos:end="121:60"><operator pos:start="121:25" pos:end="121:25">!</operator><call pos:start="121:26" pos:end="121:60"><name pos:start="121:26" pos:end="121:50">vp56_rac_get_prob_branchy</name><argument_list pos:start="121:51" pos:end="121:60">(<argument pos:start="121:52" pos:end="121:52"><expr pos:start="121:52" pos:end="121:52"><name pos:start="121:52" pos:end="121:52">c</name></expr></argument>, <argument pos:start="121:55" pos:end="121:59"><expr pos:start="121:55" pos:end="121:59"><name pos:start="121:55" pos:end="121:59"><name pos:start="121:55" pos:end="121:56">tp</name><index pos:start="121:57" pos:end="121:59">[<expr pos:start="121:58" pos:end="121:58"><literal type="number" pos:start="121:58" pos:end="121:58">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:63" pos:end="129:21">{<block_content pos:start="123:25" pos:end="127:63">

                        <expr_stmt pos:start="123:25" pos:end="123:69"><expr pos:start="123:25" pos:end="123:68"><name pos:start="123:25" pos:end="123:27">val</name>  <operator pos:start="123:30" pos:end="123:30">=</operator> <literal type="number" pos:start="123:32" pos:end="123:35">11</literal> <operator pos:start="123:35" pos:end="123:35">+</operator> <operator pos:start="123:37" pos:end="123:37">(</operator><call pos:start="123:38" pos:end="123:62"><name pos:start="123:38" pos:end="123:54">vp56_rac_get_prob</name><argument_list pos:start="123:55" pos:end="123:62">(<argument pos:start="123:56" pos:end="123:56"><expr pos:start="123:56" pos:end="123:56"><name pos:start="123:56" pos:end="123:56">c</name></expr></argument>, <argument pos:start="123:59" pos:end="123:61"><expr pos:start="123:59" pos:end="123:61"><literal type="number" pos:start="123:59" pos:end="123:61">173</literal></expr></argument>)</argument_list></call> <operator pos:start="123:64" pos:end="123:65">&lt;&lt;</operator> <literal type="number" pos:start="123:67" pos:end="123:67">2</literal><operator pos:start="123:68" pos:end="123:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:69"><expr pos:start="125:25" pos:end="125:68"><name pos:start="125:25" pos:end="125:27">val</name> <operator pos:start="125:29" pos:end="125:30">+=</operator>      <operator pos:start="125:37" pos:end="125:37">(</operator><call pos:start="125:38" pos:end="125:62"><name pos:start="125:38" pos:end="125:54">vp56_rac_get_prob</name><argument_list pos:start="125:55" pos:end="125:62">(<argument pos:start="125:56" pos:end="125:56"><expr pos:start="125:56" pos:end="125:56"><name pos:start="125:56" pos:end="125:56">c</name></expr></argument>, <argument pos:start="125:59" pos:end="125:61"><expr pos:start="125:59" pos:end="125:61"><literal type="number" pos:start="125:59" pos:end="125:61">148</literal></expr></argument>)</argument_list></call> <operator pos:start="125:64" pos:end="125:65">&lt;&lt;</operator> <literal type="number" pos:start="125:67" pos:end="125:67">1</literal><operator pos:start="125:68" pos:end="125:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:63"><expr pos:start="127:25" pos:end="127:62"><name pos:start="127:25" pos:end="127:27">val</name> <operator pos:start="127:29" pos:end="127:30">+=</operator>       <call pos:start="127:38" pos:end="127:62"><name pos:start="127:38" pos:end="127:54">vp56_rac_get_prob</name><argument_list pos:start="127:55" pos:end="127:62">(<argument pos:start="127:56" pos:end="127:56"><expr pos:start="127:56" pos:end="127:56"><name pos:start="127:56" pos:end="127:56">c</name></expr></argument>, <argument pos:start="127:59" pos:end="127:61"><expr pos:start="127:59" pos:end="127:61"><literal type="number" pos:start="127:59" pos:end="127:61">140</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="129:23" pos:end="139:21">else <block pos:start="129:28" pos:end="139:21">{<block_content pos:start="131:25" pos:end="137:63">

                        <expr_stmt pos:start="131:25" pos:end="131:69"><expr pos:start="131:25" pos:end="131:68"><name pos:start="131:25" pos:end="131:27">val</name>  <operator pos:start="131:30" pos:end="131:30">=</operator> <literal type="number" pos:start="131:32" pos:end="131:35">19</literal> <operator pos:start="131:35" pos:end="131:35">+</operator> <operator pos:start="131:37" pos:end="131:37">(</operator><call pos:start="131:38" pos:end="131:62"><name pos:start="131:38" pos:end="131:54">vp56_rac_get_prob</name><argument_list pos:start="131:55" pos:end="131:62">(<argument pos:start="131:56" pos:end="131:56"><expr pos:start="131:56" pos:end="131:56"><name pos:start="131:56" pos:end="131:56">c</name></expr></argument>, <argument pos:start="131:59" pos:end="131:61"><expr pos:start="131:59" pos:end="131:61"><literal type="number" pos:start="131:59" pos:end="131:61">176</literal></expr></argument>)</argument_list></call> <operator pos:start="131:64" pos:end="131:65">&lt;&lt;</operator> <literal type="number" pos:start="131:67" pos:end="131:67">3</literal><operator pos:start="131:68" pos:end="131:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:69"><expr pos:start="133:25" pos:end="133:68"><name pos:start="133:25" pos:end="133:27">val</name> <operator pos:start="133:29" pos:end="133:30">+=</operator>      <operator pos:start="133:37" pos:end="133:37">(</operator><call pos:start="133:38" pos:end="133:62"><name pos:start="133:38" pos:end="133:54">vp56_rac_get_prob</name><argument_list pos:start="133:55" pos:end="133:62">(<argument pos:start="133:56" pos:end="133:56"><expr pos:start="133:56" pos:end="133:56"><name pos:start="133:56" pos:end="133:56">c</name></expr></argument>, <argument pos:start="133:59" pos:end="133:61"><expr pos:start="133:59" pos:end="133:61"><literal type="number" pos:start="133:59" pos:end="133:61">155</literal></expr></argument>)</argument_list></call> <operator pos:start="133:64" pos:end="133:65">&lt;&lt;</operator> <literal type="number" pos:start="133:67" pos:end="133:67">2</literal><operator pos:start="133:68" pos:end="133:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:69"><expr pos:start="135:25" pos:end="135:68"><name pos:start="135:25" pos:end="135:27">val</name> <operator pos:start="135:29" pos:end="135:30">+=</operator>      <operator pos:start="135:37" pos:end="135:37">(</operator><call pos:start="135:38" pos:end="135:62"><name pos:start="135:38" pos:end="135:54">vp56_rac_get_prob</name><argument_list pos:start="135:55" pos:end="135:62">(<argument pos:start="135:56" pos:end="135:56"><expr pos:start="135:56" pos:end="135:56"><name pos:start="135:56" pos:end="135:56">c</name></expr></argument>, <argument pos:start="135:59" pos:end="135:61"><expr pos:start="135:59" pos:end="135:61"><literal type="number" pos:start="135:59" pos:end="135:61">140</literal></expr></argument>)</argument_list></call> <operator pos:start="135:64" pos:end="135:65">&lt;&lt;</operator> <literal type="number" pos:start="135:67" pos:end="135:67">1</literal><operator pos:start="135:68" pos:end="135:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="137:25" pos:end="137:63"><expr pos:start="137:25" pos:end="137:62"><name pos:start="137:25" pos:end="137:27">val</name> <operator pos:start="137:29" pos:end="137:30">+=</operator>       <call pos:start="137:38" pos:end="137:62"><name pos:start="137:38" pos:end="137:54">vp56_rac_get_prob</name><argument_list pos:start="137:55" pos:end="137:62">(<argument pos:start="137:56" pos:end="137:56"><expr pos:start="137:56" pos:end="137:56"><name pos:start="137:56" pos:end="137:56">c</name></expr></argument>, <argument pos:start="137:59" pos:end="137:61"><expr pos:start="137:59" pos:end="137:61"><literal type="number" pos:start="137:59" pos:end="137:61">135</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="141:19" pos:end="153:17">else if <condition pos:start="141:27" pos:end="141:65">(<expr pos:start="141:28" pos:end="141:64"><operator pos:start="141:28" pos:end="141:28">!</operator><call pos:start="141:29" pos:end="141:64"><name pos:start="141:29" pos:end="141:53">vp56_rac_get_prob_branchy</name><argument_list pos:start="141:54" pos:end="141:64">(<argument pos:start="141:55" pos:end="141:55"><expr pos:start="141:55" pos:end="141:55"><name pos:start="141:55" pos:end="141:55">c</name></expr></argument>, <argument pos:start="141:58" pos:end="141:63"><expr pos:start="141:58" pos:end="141:63"><name pos:start="141:58" pos:end="141:63"><name pos:start="141:58" pos:end="141:59">tp</name><index pos:start="141:60" pos:end="141:63">[<expr pos:start="141:61" pos:end="141:62"><literal type="number" pos:start="141:61" pos:end="141:62">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:67" pos:end="153:17">{<block_content pos:start="143:21" pos:end="151:54">

                    <expr_stmt pos:start="143:21" pos:end="143:65"><expr pos:start="143:21" pos:end="143:64"><name pos:start="143:21" pos:end="143:23">val</name>  <operator pos:start="143:26" pos:end="143:26">=</operator> <operator pos:start="143:28" pos:end="143:28">(</operator><call pos:start="143:29" pos:end="143:53"><name pos:start="143:29" pos:end="143:45">vp56_rac_get_prob</name><argument_list pos:start="143:46" pos:end="143:53">(<argument pos:start="143:47" pos:end="143:47"><expr pos:start="143:47" pos:end="143:47"><name pos:start="143:47" pos:end="143:47">c</name></expr></argument>, <argument pos:start="143:50" pos:end="143:52"><expr pos:start="143:50" pos:end="143:52"><literal type="number" pos:start="143:50" pos:end="143:52">180</literal></expr></argument>)</argument_list></call> <operator pos:start="143:55" pos:end="143:56">&lt;&lt;</operator> <literal type="number" pos:start="143:58" pos:end="143:58">4</literal><operator pos:start="143:59" pos:end="143:59">)</operator> <operator pos:start="143:61" pos:end="143:61">+</operator> <literal type="number" pos:start="143:63" pos:end="143:64">35</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:60"><expr pos:start="145:21" pos:end="145:59"><name pos:start="145:21" pos:end="145:23">val</name> <operator pos:start="145:25" pos:end="145:26">+=</operator> <operator pos:start="145:28" pos:end="145:28">(</operator><call pos:start="145:29" pos:end="145:53"><name pos:start="145:29" pos:end="145:45">vp56_rac_get_prob</name><argument_list pos:start="145:46" pos:end="145:53">(<argument pos:start="145:47" pos:end="145:47"><expr pos:start="145:47" pos:end="145:47"><name pos:start="145:47" pos:end="145:47">c</name></expr></argument>, <argument pos:start="145:50" pos:end="145:52"><expr pos:start="145:50" pos:end="145:52"><literal type="number" pos:start="145:50" pos:end="145:52">157</literal></expr></argument>)</argument_list></call> <operator pos:start="145:55" pos:end="145:56">&lt;&lt;</operator> <literal type="number" pos:start="145:58" pos:end="145:58">3</literal><operator pos:start="145:59" pos:end="145:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:60"><expr pos:start="147:21" pos:end="147:59"><name pos:start="147:21" pos:end="147:23">val</name> <operator pos:start="147:25" pos:end="147:26">+=</operator> <operator pos:start="147:28" pos:end="147:28">(</operator><call pos:start="147:29" pos:end="147:53"><name pos:start="147:29" pos:end="147:45">vp56_rac_get_prob</name><argument_list pos:start="147:46" pos:end="147:53">(<argument pos:start="147:47" pos:end="147:47"><expr pos:start="147:47" pos:end="147:47"><name pos:start="147:47" pos:end="147:47">c</name></expr></argument>, <argument pos:start="147:50" pos:end="147:52"><expr pos:start="147:50" pos:end="147:52"><literal type="number" pos:start="147:50" pos:end="147:52">141</literal></expr></argument>)</argument_list></call> <operator pos:start="147:55" pos:end="147:56">&lt;&lt;</operator> <literal type="number" pos:start="147:58" pos:end="147:58">2</literal><operator pos:start="147:59" pos:end="147:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:60"><expr pos:start="149:21" pos:end="149:59"><name pos:start="149:21" pos:end="149:23">val</name> <operator pos:start="149:25" pos:end="149:26">+=</operator> <operator pos:start="149:28" pos:end="149:28">(</operator><call pos:start="149:29" pos:end="149:53"><name pos:start="149:29" pos:end="149:45">vp56_rac_get_prob</name><argument_list pos:start="149:46" pos:end="149:53">(<argument pos:start="149:47" pos:end="149:47"><expr pos:start="149:47" pos:end="149:47"><name pos:start="149:47" pos:end="149:47">c</name></expr></argument>, <argument pos:start="149:50" pos:end="149:52"><expr pos:start="149:50" pos:end="149:52"><literal type="number" pos:start="149:50" pos:end="149:52">134</literal></expr></argument>)</argument_list></call> <operator pos:start="149:55" pos:end="149:56">&lt;&lt;</operator> <literal type="number" pos:start="149:58" pos:end="149:58">1</literal><operator pos:start="149:59" pos:end="149:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:54"><expr pos:start="151:21" pos:end="151:53"><name pos:start="151:21" pos:end="151:23">val</name> <operator pos:start="151:25" pos:end="151:26">+=</operator>  <call pos:start="151:29" pos:end="151:53"><name pos:start="151:29" pos:end="151:45">vp56_rac_get_prob</name><argument_list pos:start="151:46" pos:end="151:53">(<argument pos:start="151:47" pos:end="151:47"><expr pos:start="151:47" pos:end="151:47"><name pos:start="151:47" pos:end="151:47">c</name></expr></argument>, <argument pos:start="151:50" pos:end="151:52"><expr pos:start="151:50" pos:end="151:52"><literal type="number" pos:start="151:50" pos:end="151:52">130</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="153:19" pos:end="201:17">else <block pos:start="153:24" pos:end="201:17">{<block_content pos:start="155:21" pos:end="199:54">

                    <expr_stmt pos:start="155:21" pos:end="155:29"><expr pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:23">val</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <literal type="number" pos:start="155:27" pos:end="155:28">67</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="157:21" pos:end="171:21"><if pos:start="157:21" pos:end="171:21">if <condition pos:start="157:24" pos:end="157:41">(<expr pos:start="157:25" pos:end="157:40"><operator pos:start="157:25" pos:end="157:25">!</operator><name pos:start="157:26" pos:end="157:40">is8bitsperpixel</name></expr>)</condition> <block pos:start="157:43" pos:end="171:21">{<block_content pos:start="159:25" pos:end="169:66">

                        <if_stmt pos:start="159:25" pos:end="165:25"><if pos:start="159:25" pos:end="165:25">if <condition pos:start="159:28" pos:end="159:38">(<expr pos:start="159:29" pos:end="159:37"><name pos:start="159:29" pos:end="159:31">bpp</name> <operator pos:start="159:33" pos:end="159:34">==</operator> <literal type="number" pos:start="159:36" pos:end="159:37">12</literal></expr>)</condition> <block pos:start="159:40" pos:end="165:25">{<block_content pos:start="161:29" pos:end="163:67">

                            <expr_stmt pos:start="161:29" pos:end="161:67"><expr pos:start="161:29" pos:end="161:66"><name pos:start="161:29" pos:end="161:31">val</name> <operator pos:start="161:33" pos:end="161:34">+=</operator> <call pos:start="161:36" pos:end="161:60"><name pos:start="161:36" pos:end="161:52">vp56_rac_get_prob</name><argument_list pos:start="161:53" pos:end="161:60">(<argument pos:start="161:54" pos:end="161:54"><expr pos:start="161:54" pos:end="161:54"><name pos:start="161:54" pos:end="161:54">c</name></expr></argument>, <argument pos:start="161:57" pos:end="161:59"><expr pos:start="161:57" pos:end="161:59"><literal type="number" pos:start="161:57" pos:end="161:59">255</literal></expr></argument>)</argument_list></call> <operator pos:start="161:62" pos:end="161:63">&lt;&lt;</operator> <literal type="number" pos:start="161:65" pos:end="161:66">17</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="163:29" pos:end="163:67"><expr pos:start="163:29" pos:end="163:66"><name pos:start="163:29" pos:end="163:31">val</name> <operator pos:start="163:33" pos:end="163:34">+=</operator> <call pos:start="163:36" pos:end="163:60"><name pos:start="163:36" pos:end="163:52">vp56_rac_get_prob</name><argument_list pos:start="163:53" pos:end="163:60">(<argument pos:start="163:54" pos:end="163:54"><expr pos:start="163:54" pos:end="163:54"><name pos:start="163:54" pos:end="163:54">c</name></expr></argument>, <argument pos:start="163:57" pos:end="163:59"><expr pos:start="163:57" pos:end="163:59"><literal type="number" pos:start="163:57" pos:end="163:59">255</literal></expr></argument>)</argument_list></call> <operator pos:start="163:62" pos:end="163:63">&lt;&lt;</operator> <literal type="number" pos:start="163:65" pos:end="163:66">16</literal></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:66"><expr pos:start="167:25" pos:end="167:65"><name pos:start="167:25" pos:end="167:27">val</name> <operator pos:start="167:29" pos:end="167:30">+=</operator>  <operator pos:start="167:33" pos:end="167:33">(</operator><call pos:start="167:34" pos:end="167:58"><name pos:start="167:34" pos:end="167:50">vp56_rac_get_prob</name><argument_list pos:start="167:51" pos:end="167:58">(<argument pos:start="167:52" pos:end="167:52"><expr pos:start="167:52" pos:end="167:52"><name pos:start="167:52" pos:end="167:52">c</name></expr></argument>, <argument pos:start="167:55" pos:end="167:57"><expr pos:start="167:55" pos:end="167:57"><literal type="number" pos:start="167:55" pos:end="167:57">255</literal></expr></argument>)</argument_list></call> <operator pos:start="167:60" pos:end="167:61">&lt;&lt;</operator> <literal type="number" pos:start="167:63" pos:end="167:64">15</literal><operator pos:start="167:65" pos:end="167:65">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="169:25" pos:end="169:66"><expr pos:start="169:25" pos:end="169:65"><name pos:start="169:25" pos:end="169:27">val</name> <operator pos:start="169:29" pos:end="169:30">+=</operator>  <operator pos:start="169:33" pos:end="169:33">(</operator><call pos:start="169:34" pos:end="169:58"><name pos:start="169:34" pos:end="169:50">vp56_rac_get_prob</name><argument_list pos:start="169:51" pos:end="169:58">(<argument pos:start="169:52" pos:end="169:52"><expr pos:start="169:52" pos:end="169:52"><name pos:start="169:52" pos:end="169:52">c</name></expr></argument>, <argument pos:start="169:55" pos:end="169:57"><expr pos:start="169:55" pos:end="169:57"><literal type="number" pos:start="169:55" pos:end="169:57">255</literal></expr></argument>)</argument_list></call> <operator pos:start="169:60" pos:end="169:61">&lt;&lt;</operator> <literal type="number" pos:start="169:63" pos:end="169:64">14</literal><operator pos:start="169:65" pos:end="169:65">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:61"><expr pos:start="173:21" pos:end="173:60"><name pos:start="173:21" pos:end="173:23">val</name> <operator pos:start="173:25" pos:end="173:26">+=</operator> <operator pos:start="173:28" pos:end="173:28">(</operator><call pos:start="173:29" pos:end="173:53"><name pos:start="173:29" pos:end="173:45">vp56_rac_get_prob</name><argument_list pos:start="173:46" pos:end="173:53">(<argument pos:start="173:47" pos:end="173:47"><expr pos:start="173:47" pos:end="173:47"><name pos:start="173:47" pos:end="173:47">c</name></expr></argument>, <argument pos:start="173:50" pos:end="173:52"><expr pos:start="173:50" pos:end="173:52"><literal type="number" pos:start="173:50" pos:end="173:52">254</literal></expr></argument>)</argument_list></call> <operator pos:start="173:55" pos:end="173:56">&lt;&lt;</operator> <literal type="number" pos:start="173:58" pos:end="173:59">13</literal><operator pos:start="173:60" pos:end="173:60">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:61"><expr pos:start="175:21" pos:end="175:60"><name pos:start="175:21" pos:end="175:23">val</name> <operator pos:start="175:25" pos:end="175:26">+=</operator> <operator pos:start="175:28" pos:end="175:28">(</operator><call pos:start="175:29" pos:end="175:53"><name pos:start="175:29" pos:end="175:45">vp56_rac_get_prob</name><argument_list pos:start="175:46" pos:end="175:53">(<argument pos:start="175:47" pos:end="175:47"><expr pos:start="175:47" pos:end="175:47"><name pos:start="175:47" pos:end="175:47">c</name></expr></argument>, <argument pos:start="175:50" pos:end="175:52"><expr pos:start="175:50" pos:end="175:52"><literal type="number" pos:start="175:50" pos:end="175:52">254</literal></expr></argument>)</argument_list></call> <operator pos:start="175:55" pos:end="175:56">&lt;&lt;</operator> <literal type="number" pos:start="175:58" pos:end="175:59">12</literal><operator pos:start="175:60" pos:end="175:60">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:61"><expr pos:start="177:21" pos:end="177:60"><name pos:start="177:21" pos:end="177:23">val</name> <operator pos:start="177:25" pos:end="177:26">+=</operator> <operator pos:start="177:28" pos:end="177:28">(</operator><call pos:start="177:29" pos:end="177:53"><name pos:start="177:29" pos:end="177:45">vp56_rac_get_prob</name><argument_list pos:start="177:46" pos:end="177:53">(<argument pos:start="177:47" pos:end="177:47"><expr pos:start="177:47" pos:end="177:47"><name pos:start="177:47" pos:end="177:47">c</name></expr></argument>, <argument pos:start="177:50" pos:end="177:52"><expr pos:start="177:50" pos:end="177:52"><literal type="number" pos:start="177:50" pos:end="177:52">254</literal></expr></argument>)</argument_list></call> <operator pos:start="177:55" pos:end="177:56">&lt;&lt;</operator> <literal type="number" pos:start="177:58" pos:end="177:59">11</literal><operator pos:start="177:60" pos:end="177:60">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:61"><expr pos:start="179:21" pos:end="179:60"><name pos:start="179:21" pos:end="179:23">val</name> <operator pos:start="179:25" pos:end="179:26">+=</operator> <operator pos:start="179:28" pos:end="179:28">(</operator><call pos:start="179:29" pos:end="179:53"><name pos:start="179:29" pos:end="179:45">vp56_rac_get_prob</name><argument_list pos:start="179:46" pos:end="179:53">(<argument pos:start="179:47" pos:end="179:47"><expr pos:start="179:47" pos:end="179:47"><name pos:start="179:47" pos:end="179:47">c</name></expr></argument>, <argument pos:start="179:50" pos:end="179:52"><expr pos:start="179:50" pos:end="179:52"><literal type="number" pos:start="179:50" pos:end="179:52">252</literal></expr></argument>)</argument_list></call> <operator pos:start="179:55" pos:end="179:56">&lt;&lt;</operator> <literal type="number" pos:start="179:58" pos:end="179:59">10</literal><operator pos:start="179:60" pos:end="179:60">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="181:21" pos:end="181:60"><expr pos:start="181:21" pos:end="181:59"><name pos:start="181:21" pos:end="181:23">val</name> <operator pos:start="181:25" pos:end="181:26">+=</operator> <operator pos:start="181:28" pos:end="181:28">(</operator><call pos:start="181:29" pos:end="181:53"><name pos:start="181:29" pos:end="181:45">vp56_rac_get_prob</name><argument_list pos:start="181:46" pos:end="181:53">(<argument pos:start="181:47" pos:end="181:47"><expr pos:start="181:47" pos:end="181:47"><name pos:start="181:47" pos:end="181:47">c</name></expr></argument>, <argument pos:start="181:50" pos:end="181:52"><expr pos:start="181:50" pos:end="181:52"><literal type="number" pos:start="181:50" pos:end="181:52">249</literal></expr></argument>)</argument_list></call> <operator pos:start="181:55" pos:end="181:56">&lt;&lt;</operator> <literal type="number" pos:start="181:58" pos:end="181:58">9</literal><operator pos:start="181:59" pos:end="181:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:60"><expr pos:start="183:21" pos:end="183:59"><name pos:start="183:21" pos:end="183:23">val</name> <operator pos:start="183:25" pos:end="183:26">+=</operator> <operator pos:start="183:28" pos:end="183:28">(</operator><call pos:start="183:29" pos:end="183:53"><name pos:start="183:29" pos:end="183:45">vp56_rac_get_prob</name><argument_list pos:start="183:46" pos:end="183:53">(<argument pos:start="183:47" pos:end="183:47"><expr pos:start="183:47" pos:end="183:47"><name pos:start="183:47" pos:end="183:47">c</name></expr></argument>, <argument pos:start="183:50" pos:end="183:52"><expr pos:start="183:50" pos:end="183:52"><literal type="number" pos:start="183:50" pos:end="183:52">243</literal></expr></argument>)</argument_list></call> <operator pos:start="183:55" pos:end="183:56">&lt;&lt;</operator> <literal type="number" pos:start="183:58" pos:end="183:58">8</literal><operator pos:start="183:59" pos:end="183:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:60"><expr pos:start="185:21" pos:end="185:59"><name pos:start="185:21" pos:end="185:23">val</name> <operator pos:start="185:25" pos:end="185:26">+=</operator> <operator pos:start="185:28" pos:end="185:28">(</operator><call pos:start="185:29" pos:end="185:53"><name pos:start="185:29" pos:end="185:45">vp56_rac_get_prob</name><argument_list pos:start="185:46" pos:end="185:53">(<argument pos:start="185:47" pos:end="185:47"><expr pos:start="185:47" pos:end="185:47"><name pos:start="185:47" pos:end="185:47">c</name></expr></argument>, <argument pos:start="185:50" pos:end="185:52"><expr pos:start="185:50" pos:end="185:52"><literal type="number" pos:start="185:50" pos:end="185:52">230</literal></expr></argument>)</argument_list></call> <operator pos:start="185:55" pos:end="185:56">&lt;&lt;</operator> <literal type="number" pos:start="185:58" pos:end="185:58">7</literal><operator pos:start="185:59" pos:end="185:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:60"><expr pos:start="187:21" pos:end="187:59"><name pos:start="187:21" pos:end="187:23">val</name> <operator pos:start="187:25" pos:end="187:26">+=</operator> <operator pos:start="187:28" pos:end="187:28">(</operator><call pos:start="187:29" pos:end="187:53"><name pos:start="187:29" pos:end="187:45">vp56_rac_get_prob</name><argument_list pos:start="187:46" pos:end="187:53">(<argument pos:start="187:47" pos:end="187:47"><expr pos:start="187:47" pos:end="187:47"><name pos:start="187:47" pos:end="187:47">c</name></expr></argument>, <argument pos:start="187:50" pos:end="187:52"><expr pos:start="187:50" pos:end="187:52"><literal type="number" pos:start="187:50" pos:end="187:52">196</literal></expr></argument>)</argument_list></call> <operator pos:start="187:55" pos:end="187:56">&lt;&lt;</operator> <literal type="number" pos:start="187:58" pos:end="187:58">6</literal><operator pos:start="187:59" pos:end="187:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:60"><expr pos:start="189:21" pos:end="189:59"><name pos:start="189:21" pos:end="189:23">val</name> <operator pos:start="189:25" pos:end="189:26">+=</operator> <operator pos:start="189:28" pos:end="189:28">(</operator><call pos:start="189:29" pos:end="189:53"><name pos:start="189:29" pos:end="189:45">vp56_rac_get_prob</name><argument_list pos:start="189:46" pos:end="189:53">(<argument pos:start="189:47" pos:end="189:47"><expr pos:start="189:47" pos:end="189:47"><name pos:start="189:47" pos:end="189:47">c</name></expr></argument>, <argument pos:start="189:50" pos:end="189:52"><expr pos:start="189:50" pos:end="189:52"><literal type="number" pos:start="189:50" pos:end="189:52">177</literal></expr></argument>)</argument_list></call> <operator pos:start="189:55" pos:end="189:56">&lt;&lt;</operator> <literal type="number" pos:start="189:58" pos:end="189:58">5</literal><operator pos:start="189:59" pos:end="189:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:60"><expr pos:start="191:21" pos:end="191:59"><name pos:start="191:21" pos:end="191:23">val</name> <operator pos:start="191:25" pos:end="191:26">+=</operator> <operator pos:start="191:28" pos:end="191:28">(</operator><call pos:start="191:29" pos:end="191:53"><name pos:start="191:29" pos:end="191:45">vp56_rac_get_prob</name><argument_list pos:start="191:46" pos:end="191:53">(<argument pos:start="191:47" pos:end="191:47"><expr pos:start="191:47" pos:end="191:47"><name pos:start="191:47" pos:end="191:47">c</name></expr></argument>, <argument pos:start="191:50" pos:end="191:52"><expr pos:start="191:50" pos:end="191:52"><literal type="number" pos:start="191:50" pos:end="191:52">153</literal></expr></argument>)</argument_list></call> <operator pos:start="191:55" pos:end="191:56">&lt;&lt;</operator> <literal type="number" pos:start="191:58" pos:end="191:58">4</literal><operator pos:start="191:59" pos:end="191:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:60"><expr pos:start="193:21" pos:end="193:59"><name pos:start="193:21" pos:end="193:23">val</name> <operator pos:start="193:25" pos:end="193:26">+=</operator> <operator pos:start="193:28" pos:end="193:28">(</operator><call pos:start="193:29" pos:end="193:53"><name pos:start="193:29" pos:end="193:45">vp56_rac_get_prob</name><argument_list pos:start="193:46" pos:end="193:53">(<argument pos:start="193:47" pos:end="193:47"><expr pos:start="193:47" pos:end="193:47"><name pos:start="193:47" pos:end="193:47">c</name></expr></argument>, <argument pos:start="193:50" pos:end="193:52"><expr pos:start="193:50" pos:end="193:52"><literal type="number" pos:start="193:50" pos:end="193:52">140</literal></expr></argument>)</argument_list></call> <operator pos:start="193:55" pos:end="193:56">&lt;&lt;</operator> <literal type="number" pos:start="193:58" pos:end="193:58">3</literal><operator pos:start="193:59" pos:end="193:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:60"><expr pos:start="195:21" pos:end="195:59"><name pos:start="195:21" pos:end="195:23">val</name> <operator pos:start="195:25" pos:end="195:26">+=</operator> <operator pos:start="195:28" pos:end="195:28">(</operator><call pos:start="195:29" pos:end="195:53"><name pos:start="195:29" pos:end="195:45">vp56_rac_get_prob</name><argument_list pos:start="195:46" pos:end="195:53">(<argument pos:start="195:47" pos:end="195:47"><expr pos:start="195:47" pos:end="195:47"><name pos:start="195:47" pos:end="195:47">c</name></expr></argument>, <argument pos:start="195:50" pos:end="195:52"><expr pos:start="195:50" pos:end="195:52"><literal type="number" pos:start="195:50" pos:end="195:52">133</literal></expr></argument>)</argument_list></call> <operator pos:start="195:55" pos:end="195:56">&lt;&lt;</operator> <literal type="number" pos:start="195:58" pos:end="195:58">2</literal><operator pos:start="195:59" pos:end="195:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:60"><expr pos:start="197:21" pos:end="197:59"><name pos:start="197:21" pos:end="197:23">val</name> <operator pos:start="197:25" pos:end="197:26">+=</operator> <operator pos:start="197:28" pos:end="197:28">(</operator><call pos:start="197:29" pos:end="197:53"><name pos:start="197:29" pos:end="197:45">vp56_rac_get_prob</name><argument_list pos:start="197:46" pos:end="197:53">(<argument pos:start="197:47" pos:end="197:47"><expr pos:start="197:47" pos:end="197:47"><name pos:start="197:47" pos:end="197:47">c</name></expr></argument>, <argument pos:start="197:50" pos:end="197:52"><expr pos:start="197:50" pos:end="197:52"><literal type="number" pos:start="197:50" pos:end="197:52">130</literal></expr></argument>)</argument_list></call> <operator pos:start="197:55" pos:end="197:56">&lt;&lt;</operator> <literal type="number" pos:start="197:58" pos:end="197:58">1</literal><operator pos:start="197:59" pos:end="197:59">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:54"><expr pos:start="199:21" pos:end="199:53"><name pos:start="199:21" pos:end="199:23">val</name> <operator pos:start="199:25" pos:end="199:26">+=</operator>  <call pos:start="199:29" pos:end="199:53"><name pos:start="199:29" pos:end="199:45">vp56_rac_get_prob</name><argument_list pos:start="199:46" pos:end="199:53">(<argument pos:start="199:47" pos:end="199:47"><expr pos:start="199:47" pos:end="199:47"><name pos:start="199:47" pos:end="199:47">c</name></expr></argument>, <argument pos:start="199:50" pos:end="199:52"><expr pos:start="199:50" pos:end="199:52"><literal type="number" pos:start="199:50" pos:end="199:52">129</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:define pos:start="207:1" pos:end="219:11">#<cpp:directive pos:start="207:2" pos:end="207:7">define</cpp:directive> <cpp:macro pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:18">STORE_COEF</name><parameter_list pos:start="207:19" pos:end="207:27">(<parameter pos:start="207:20" pos:end="207:20"><type pos:start="207:20" pos:end="207:20"><name pos:start="207:20" pos:end="207:20">c</name></type></parameter>, <parameter pos:start="207:23" pos:end="207:23"><type pos:start="207:23" pos:end="207:23"><name pos:start="207:23" pos:end="207:23">i</name></type></parameter>, <parameter pos:start="207:26" pos:end="207:26"><type pos:start="207:26" pos:end="207:26"><name pos:start="207:26" pos:end="207:26">v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="207:29" pos:end="219:11">do { \

    if (is8bitsperpixel) { \

        c[i] = v; \

    } else { \

        AV_WN32A(&amp;c[i * 2], v); \

    } \

} while (0)</cpp:value></cpp:define>

        <if_stmt pos:start="221:9" pos:end="223:44"><if pos:start="221:9" pos:end="223:44">if <condition pos:start="221:12" pos:end="221:25">(<expr pos:start="221:13" pos:end="221:24"><operator pos:start="221:13" pos:end="221:13">!</operator><operator pos:start="221:14" pos:end="221:15">--</operator><name pos:start="221:16" pos:end="221:24">band_left</name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:44"><block_content pos:start="223:13" pos:end="223:44">

            <expr_stmt pos:start="223:13" pos:end="223:44"><expr pos:start="223:13" pos:end="223:43"><name pos:start="223:13" pos:end="223:21">band_left</name> <operator pos:start="223:23" pos:end="223:23">=</operator> <name pos:start="223:25" pos:end="223:43"><name pos:start="223:25" pos:end="223:35">band_counts</name><index pos:start="223:36" pos:end="223:43">[<expr pos:start="223:37" pos:end="223:42"><operator pos:start="223:37" pos:end="223:38">++</operator><name pos:start="223:39" pos:end="223:42">band</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="225:9" pos:end="231:76"><if pos:start="225:9" pos:end="227:82">if <condition pos:start="225:12" pos:end="225:23">(<expr pos:start="225:13" pos:end="225:22"><name pos:start="225:13" pos:end="225:22">is_tx32x32</name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:82"><block_content pos:start="227:13" pos:end="227:82">

            <expr_stmt pos:start="227:13" pos:end="227:82"><expr pos:start="227:13" pos:end="227:81"><call pos:start="227:13" pos:end="227:81"><name pos:start="227:13" pos:end="227:22">STORE_COEF</name><argument_list pos:start="227:23" pos:end="227:81">(<argument pos:start="227:24" pos:end="227:27"><expr pos:start="227:24" pos:end="227:27"><name pos:start="227:24" pos:end="227:27">coef</name></expr></argument>, <argument pos:start="227:30" pos:end="227:31"><expr pos:start="227:30" pos:end="227:31"><name pos:start="227:30" pos:end="227:31">rc</name></expr></argument>, <argument pos:start="227:34" pos:end="227:80"><expr pos:start="227:34" pos:end="227:80"><operator pos:start="227:34" pos:end="227:34">(</operator><operator pos:start="227:35" pos:end="227:35">(</operator><ternary pos:start="227:36" pos:end="227:62"><condition pos:start="227:36" pos:end="227:51"><expr pos:start="227:36" pos:end="227:49"><call pos:start="227:36" pos:end="227:49"><name pos:start="227:36" pos:end="227:46">vp8_rac_get</name><argument_list pos:start="227:47" pos:end="227:49">(<argument pos:start="227:48" pos:end="227:48"><expr pos:start="227:48" pos:end="227:48"><name pos:start="227:48" pos:end="227:48">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="227:53" pos:end="227:56"> <expr pos:start="227:53" pos:end="227:56"><operator pos:start="227:53" pos:end="227:53">-</operator><name pos:start="227:54" pos:end="227:56">val</name></expr> </then><else pos:start="227:58" pos:end="227:62">: <expr pos:start="227:60" pos:end="227:62"><name pos:start="227:60" pos:end="227:62">val</name></expr></else></ternary><operator pos:start="227:63" pos:end="227:63">)</operator> <operator pos:start="227:65" pos:end="227:65">*</operator> <name pos:start="227:67" pos:end="227:75"><name pos:start="227:67" pos:end="227:70">qmul</name><index pos:start="227:71" pos:end="227:75">[<expr pos:start="227:72" pos:end="227:74"><operator pos:start="227:72" pos:end="227:72">!</operator><operator pos:start="227:73" pos:end="227:73">!</operator><name pos:start="227:74" pos:end="227:74">i</name></expr>]</index></name><operator pos:start="227:76" pos:end="227:76">)</operator> <operator pos:start="227:78" pos:end="227:78">/</operator> <literal type="number" pos:start="227:80" pos:end="227:80">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="229:9" pos:end="231:76">else<block type="pseudo" pos:start="231:13" pos:end="231:76"><block_content pos:start="231:13" pos:end="231:76">

            <expr_stmt pos:start="231:13" pos:end="231:76"><expr pos:start="231:13" pos:end="231:75"><call pos:start="231:13" pos:end="231:75"><name pos:start="231:13" pos:end="231:22">STORE_COEF</name><argument_list pos:start="231:23" pos:end="231:75">(<argument pos:start="231:24" pos:end="231:27"><expr pos:start="231:24" pos:end="231:27"><name pos:start="231:24" pos:end="231:27">coef</name></expr></argument>, <argument pos:start="231:30" pos:end="231:31"><expr pos:start="231:30" pos:end="231:31"><name pos:start="231:30" pos:end="231:31">rc</name></expr></argument>, <argument pos:start="231:34" pos:end="231:74"><expr pos:start="231:34" pos:end="231:74"><operator pos:start="231:34" pos:end="231:34">(</operator><ternary pos:start="231:35" pos:end="231:61"><condition pos:start="231:35" pos:end="231:50"><expr pos:start="231:35" pos:end="231:48"><call pos:start="231:35" pos:end="231:48"><name pos:start="231:35" pos:end="231:45">vp8_rac_get</name><argument_list pos:start="231:46" pos:end="231:48">(<argument pos:start="231:47" pos:end="231:47"><expr pos:start="231:47" pos:end="231:47"><name pos:start="231:47" pos:end="231:47">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="231:52" pos:end="231:55"> <expr pos:start="231:52" pos:end="231:55"><operator pos:start="231:52" pos:end="231:52">-</operator><name pos:start="231:53" pos:end="231:55">val</name></expr> </then><else pos:start="231:57" pos:end="231:61">: <expr pos:start="231:59" pos:end="231:61"><name pos:start="231:59" pos:end="231:61">val</name></expr></else></ternary><operator pos:start="231:62" pos:end="231:62">)</operator> <operator pos:start="231:64" pos:end="231:64">*</operator> <name pos:start="231:66" pos:end="231:74"><name pos:start="231:66" pos:end="231:69">qmul</name><index pos:start="231:70" pos:end="231:74">[<expr pos:start="231:71" pos:end="231:73"><operator pos:start="231:71" pos:end="231:71">!</operator><operator pos:start="231:72" pos:end="231:72">!</operator><name pos:start="231:73" pos:end="231:73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:59"><expr pos:start="233:9" pos:end="233:58"><name pos:start="233:9" pos:end="233:11">nnz</name> <operator pos:start="233:13" pos:end="233:13">=</operator> <operator pos:start="233:15" pos:end="233:15">(</operator><literal type="number" pos:start="233:16" pos:end="233:18">1</literal> <operator pos:start="233:18" pos:end="233:18">+</operator> <name pos:start="233:20" pos:end="233:34"><name pos:start="233:20" pos:end="233:24">cache</name><index pos:start="233:25" pos:end="233:34">[<expr pos:start="233:26" pos:end="233:33"><name pos:start="233:26" pos:end="233:33"><name pos:start="233:26" pos:end="233:27">nb</name><index pos:start="233:28" pos:end="233:30">[<expr pos:start="233:29" pos:end="233:29"><name pos:start="233:29" pos:end="233:29">i</name></expr>]</index><index pos:start="233:31" pos:end="233:33">[<expr pos:start="233:32" pos:end="233:32"><literal type="number" pos:start="233:32" pos:end="233:32">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="233:36" pos:end="233:36">+</operator> <name pos:start="233:38" pos:end="233:52"><name pos:start="233:38" pos:end="233:42">cache</name><index pos:start="233:43" pos:end="233:52">[<expr pos:start="233:44" pos:end="233:51"><name pos:start="233:44" pos:end="233:51"><name pos:start="233:44" pos:end="233:45">nb</name><index pos:start="233:46" pos:end="233:48">[<expr pos:start="233:47" pos:end="233:47"><name pos:start="233:47" pos:end="233:47">i</name></expr>]</index><index pos:start="233:49" pos:end="233:51">[<expr pos:start="233:50" pos:end="233:50"><literal type="number" pos:start="233:50" pos:end="233:50">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="233:53" pos:end="233:53">)</operator> <operator pos:start="233:55" pos:end="233:56">&gt;&gt;</operator> <literal type="number" pos:start="233:58" pos:end="233:58">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:26"><expr pos:start="235:9" pos:end="235:25"><name pos:start="235:9" pos:end="235:10">tp</name> <operator pos:start="235:12" pos:end="235:12">=</operator> <name pos:start="235:14" pos:end="235:25"><name pos:start="235:14" pos:end="235:14">p</name><index pos:start="235:15" pos:end="235:20">[<expr pos:start="235:16" pos:end="235:19"><name pos:start="235:16" pos:end="235:19">band</name></expr>]</index><index pos:start="235:21" pos:end="235:25">[<expr pos:start="235:22" pos:end="235:24"><name pos:start="235:22" pos:end="235:24">nnz</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="237:13" pos:end="237:28">(<expr pos:start="237:14" pos:end="237:27"><operator pos:start="237:14" pos:end="237:15">++</operator><name pos:start="237:16" pos:end="237:16">i</name> <operator pos:start="237:18" pos:end="237:18">&lt;</operator> <name pos:start="237:20" pos:end="237:27">n_coeffs</name></expr>)</condition>;</do>



    <return pos:start="241:5" pos:end="241:13">return <expr pos:start="241:12" pos:end="241:12"><name pos:start="241:12" pos:end="241:12">i</name></expr>;</return>

</block_content>}</block>
</unit>
