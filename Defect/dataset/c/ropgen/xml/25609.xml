<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25609.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tqi_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="89:1">{<block_content pos:start="9:5" pos:end="87:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_end</name> <init pos:start="13:28" pos:end="13:41">= <expr pos:start="13:30" pos:end="13:41"><name pos:start="13:30" pos:end="13:32">buf</name><operator pos:start="13:33" pos:end="13:33">+</operator><name pos:start="13:34" pos:end="13:41">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">TqiContext</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:17">t</name> <init pos:start="15:19" pos:end="15:36">= <expr pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:25">avctx</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">MpegEncContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:21">s</name> <init pos:start="17:23" pos:end="17:29">= <expr pos:start="17:25" pos:end="17:29"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:26">t</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:29">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">width</name></name>  <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:32"><name pos:start="21:17" pos:end="21:23">AV_RL16</name><argument_list pos:start="21:24" pos:end="21:32">(<argument pos:start="21:25" pos:end="21:31"><expr pos:start="21:25" pos:end="21:31"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:31"><name pos:start="21:26" pos:end="21:28">buf</name><index pos:start="21:29" pos:end="21:31">[<expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:13">height</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:32"><name pos:start="23:17" pos:end="23:23">AV_RL16</name><argument_list pos:start="23:24" pos:end="23:32">(<argument pos:start="23:25" pos:end="23:31"><expr pos:start="23:25" pos:end="23:31"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:31"><name pos:start="23:26" pos:end="23:28">buf</name><index pos:start="23:29" pos:end="23:31">[<expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><call pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:24">tqi_calculate_qtable</name><argument_list pos:start="25:25" pos:end="25:35">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">s</name></expr></argument>, <argument pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:31">buf</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:13"><expr pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">buf</name> <operator pos:start="27:9" pos:end="27:10">+=</operator> <literal type="number" pos:start="27:12" pos:end="27:12">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:48"><if pos:start="31:5" pos:end="33:48">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:9">t</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">frame</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:21">data</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:48"><block_content pos:start="33:9" pos:end="33:48">

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:29">release_buffer</name></name><argument_list pos:start="33:30" pos:end="33:47">(<argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:35">avctx</name></expr></argument>, <argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:46"><name pos:start="33:39" pos:end="33:39">t</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:46">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:62"><if pos:start="37:5" pos:end="39:62">if <condition pos:start="37:8" pos:end="37:65">(<expr pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">avctx</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">width</name></name><operator pos:start="37:24" pos:end="37:25">!=</operator><name pos:start="37:26" pos:end="37:33"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:33">width</name></name> <operator pos:start="37:35" pos:end="37:36">||</operator> <name pos:start="37:38" pos:end="37:53"><name pos:start="37:38" pos:end="37:38">s</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:45">avctx</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:53">height</name></name><operator pos:start="37:54" pos:end="37:55">!=</operator><name pos:start="37:56" pos:end="37:64"><name pos:start="37:56" pos:end="37:56">s</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:64">height</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:62"><block_content pos:start="39:9" pos:end="39:62">

        <expr_stmt pos:start="39:9" pos:end="39:62"><expr pos:start="39:9" pos:end="39:61"><call pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:30">avcodec_set_dimensions</name><argument_list pos:start="39:31" pos:end="39:61">(<argument pos:start="39:32" pos:end="39:39"><expr pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:39">avctx</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:49"><expr pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:42">s</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:49">width</name></name></expr></argument>, <argument pos:start="39:52" pos:end="39:60"><expr pos:start="39:52" pos:end="39:60"><name pos:start="39:52" pos:end="39:60"><name pos:start="39:52" pos:end="39:52">s</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:60">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if<condition pos:start="43:7" pos:end="43:47">(<expr pos:start="43:8" pos:end="43:46"><call pos:start="43:8" pos:end="43:42"><name pos:start="43:8" pos:end="43:24"><name pos:start="43:8" pos:end="43:12">avctx</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:24">get_buffer</name></name><argument_list pos:start="43:25" pos:end="43:42">(<argument pos:start="43:26" pos:end="43:30"><expr pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:30">avctx</name></expr></argument>, <argument pos:start="43:33" pos:end="43:41"><expr pos:start="43:33" pos:end="43:41"><operator pos:start="43:33" pos:end="43:33">&amp;</operator><name pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:34">t</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:41">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:44" pos:end="43:44">&lt;</operator> <literal type="number" pos:start="43:46" pos:end="43:46">0</literal></expr>)</condition> <block pos:start="43:49" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:61"><expr pos:start="45:9" pos:end="45:60"><call pos:start="45:9" pos:end="45:60"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:60">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:59"><expr pos:start="45:37" pos:end="45:59"><literal type="string" pos:start="45:37" pos:end="45:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:108"><expr pos:start="53:5" pos:end="53:107"><call pos:start="53:5" pos:end="53:107"><name pos:start="53:5" pos:end="53:18">av_fast_malloc</name><argument_list pos:start="53:19" pos:end="53:107">(<argument pos:start="53:20" pos:end="53:36"><expr pos:start="53:20" pos:end="53:36"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:21">t</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:36">bitstream_buf</name></name></expr></argument>, <argument pos:start="53:39" pos:end="53:60"><expr pos:start="53:39" pos:end="53:60"><operator pos:start="53:39" pos:end="53:39">&amp;</operator><name pos:start="53:40" pos:end="53:60"><name pos:start="53:40" pos:end="53:40">t</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:60">bitstream_buf_size</name></name></expr></argument>, <argument pos:start="53:63" pos:end="53:106"><expr pos:start="53:63" pos:end="53:106"><operator pos:start="53:63" pos:end="53:63">(</operator><name pos:start="53:64" pos:end="53:70">buf_end</name><operator pos:start="53:71" pos:end="53:71">-</operator><name pos:start="53:72" pos:end="53:74">buf</name><operator pos:start="53:75" pos:end="53:75">)</operator> <operator pos:start="53:77" pos:end="53:77">+</operator> <name pos:start="53:79" pos:end="53:106">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:31"><if pos:start="55:5" pos:end="57:31">if <condition pos:start="55:8" pos:end="55:26">(<expr pos:start="55:9" pos:end="55:25"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:10">t</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:25">bitstream_buf</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:78"><expr pos:start="59:5" pos:end="59:77"><call pos:start="59:5" pos:end="59:77"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:10">dsp</name><operator pos:start="59:11" pos:end="59:11">.</operator><name pos:start="59:12" pos:end="59:20">bswap_buf</name></name><argument_list pos:start="59:21" pos:end="59:77">(<argument pos:start="59:22" pos:end="59:37"><expr pos:start="59:22" pos:end="59:37"><name pos:start="59:22" pos:end="59:37"><name pos:start="59:22" pos:end="59:22">t</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:37">bitstream_buf</name></name></expr></argument>, <argument pos:start="59:40" pos:end="59:59"><expr pos:start="59:40" pos:end="59:59"><operator pos:start="59:40" pos:end="59:40">(</operator><specifier pos:start="59:41" pos:end="59:45">const</specifier> <name pos:start="59:47" pos:end="59:54">uint32_t</name><operator pos:start="59:55" pos:end="59:55">*</operator><operator pos:start="59:56" pos:end="59:56">)</operator><name pos:start="59:57" pos:end="59:59">buf</name></expr></argument>, <argument pos:start="59:62" pos:end="59:76"><expr pos:start="59:62" pos:end="59:76"><operator pos:start="59:62" pos:end="59:62">(</operator><name pos:start="59:63" pos:end="59:69">buf_end</name><operator pos:start="59:70" pos:end="59:70">-</operator><name pos:start="59:71" pos:end="59:73">buf</name><operator pos:start="59:74" pos:end="59:74">)</operator><operator pos:start="59:75" pos:end="59:75">/</operator><literal type="number" pos:start="59:76" pos:end="59:76">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:61"><expr pos:start="61:5" pos:end="61:60"><call pos:start="61:5" pos:end="61:60"><name pos:start="61:5" pos:end="61:17">init_get_bits</name><argument_list pos:start="61:18" pos:end="61:60">(<argument pos:start="61:19" pos:end="61:24"><expr pos:start="61:19" pos:end="61:24"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:24">gb</name></name></expr></argument>, <argument pos:start="61:27" pos:end="61:42"><expr pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:27">t</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:42">bitstream_buf</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:59"><expr pos:start="61:45" pos:end="61:59"><literal type="number" pos:start="61:45" pos:end="61:45">8</literal><operator pos:start="61:46" pos:end="61:46">*</operator><operator pos:start="61:47" pos:end="61:47">(</operator><name pos:start="61:48" pos:end="61:54">buf_end</name><operator pos:start="61:55" pos:end="61:55">-</operator><name pos:start="61:56" pos:end="61:58">buf</name><operator pos:start="61:59" pos:end="61:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:54"><expr pos:start="65:5" pos:end="65:53"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:14">last_dc</name><index pos:start="65:15" pos:end="65:17">[<expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>]</index></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:30">last_dc</name><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><literal type="number" pos:start="65:32" pos:end="65:32">1</literal></expr>]</index></name> <operator pos:start="65:35" pos:end="65:35">=</operator> <name pos:start="65:37" pos:end="65:49"><name pos:start="65:37" pos:end="65:37">s</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:46">last_dc</name><index pos:start="65:47" pos:end="65:49">[<expr pos:start="65:48" pos:end="65:48"><literal type="number" pos:start="65:48" pos:end="65:48">2</literal></expr>]</index></name> <operator pos:start="65:51" pos:end="65:51">=</operator> <literal type="number" pos:start="65:53" pos:end="65:53">0</literal></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="79:5">for <control pos:start="67:9" pos:end="67:61">(<init pos:start="67:10" pos:end="67:19"><expr pos:start="67:10" pos:end="67:18"><name pos:start="67:10" pos:end="67:16"><name pos:start="67:10" pos:end="67:10">s</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:16">mb_y</name></name><operator pos:start="67:17" pos:end="67:17">=</operator><literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:50"><expr pos:start="67:21" pos:end="67:49"><name pos:start="67:21" pos:end="67:27"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:27">mb_y</name></name><operator pos:start="67:28" pos:end="67:28">&lt;</operator><operator pos:start="67:29" pos:end="67:29">(</operator><name pos:start="67:30" pos:end="67:42"><name pos:start="67:30" pos:end="67:34">avctx</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:42">height</name></name><operator pos:start="67:43" pos:end="67:43">+</operator><literal type="number" pos:start="67:44" pos:end="67:45">15</literal><operator pos:start="67:46" pos:end="67:46">)</operator><operator pos:start="67:47" pos:end="67:47">/</operator><literal type="number" pos:start="67:48" pos:end="67:49">16</literal></expr>;</condition> <incr pos:start="67:52" pos:end="67:60"><expr pos:start="67:52" pos:end="67:60"><name pos:start="67:52" pos:end="67:58"><name pos:start="67:52" pos:end="67:52">s</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:58">mb_y</name></name><operator pos:start="67:59" pos:end="67:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:5" pos:end="79:5"><block_content pos:start="69:5" pos:end="79:5">

    <for pos:start="69:5" pos:end="79:5">for <control pos:start="69:9" pos:end="69:60">(<init pos:start="69:10" pos:end="69:19"><expr pos:start="69:10" pos:end="69:18"><name pos:start="69:10" pos:end="69:16"><name pos:start="69:10" pos:end="69:10">s</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:16">mb_x</name></name><operator pos:start="69:17" pos:end="69:17">=</operator><literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:49"><expr pos:start="69:21" pos:end="69:48"><name pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:27">mb_x</name></name><operator pos:start="69:28" pos:end="69:28">&lt;</operator><operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:41"><name pos:start="69:30" pos:end="69:34">avctx</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:41">width</name></name><operator pos:start="69:42" pos:end="69:42">+</operator><literal type="number" pos:start="69:43" pos:end="69:44">15</literal><operator pos:start="69:45" pos:end="69:45">)</operator><operator pos:start="69:46" pos:end="69:46">/</operator><literal type="number" pos:start="69:47" pos:end="69:48">16</literal></expr>;</condition> <incr pos:start="69:51" pos:end="69:59"><expr pos:start="69:51" pos:end="69:59"><name pos:start="69:51" pos:end="69:57"><name pos:start="69:51" pos:end="69:51">s</name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:57">mb_x</name></name><operator pos:start="69:58" pos:end="69:59">++</operator></expr></incr>)</control>

    <block pos:start="71:5" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:34">

        <if_stmt pos:start="73:9" pos:end="75:18"><if pos:start="73:9" pos:end="75:18">if<condition pos:start="73:11" pos:end="73:42">(<expr pos:start="73:12" pos:end="73:41"><call pos:start="73:12" pos:end="73:37"><name pos:start="73:12" pos:end="73:24">tqi_decode_mb</name><argument_list pos:start="73:25" pos:end="73:37">(<argument pos:start="73:26" pos:end="73:26"><expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">s</name></expr></argument>, <argument pos:start="73:29" pos:end="73:36"><expr pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:29">t</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:36">block</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:39" pos:end="73:39">&lt;</operator> <literal type="number" pos:start="73:41" pos:end="73:41">0</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:18"><block_content pos:start="75:13" pos:end="75:18">

            <break pos:start="75:13" pos:end="75:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><call pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:20">tqi_idct_put</name><argument_list pos:start="77:21" pos:end="77:33">(<argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><name pos:start="77:22" pos:end="77:22">t</name></expr></argument>, <argument pos:start="77:25" pos:end="77:32"><expr pos:start="77:25" pos:end="77:32"><name pos:start="77:25" pos:end="77:32"><name pos:start="77:25" pos:end="77:25">t</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:32">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for></block_content></block></for>



    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><operator pos:start="83:5" pos:end="83:5">*</operator><name pos:start="83:6" pos:end="83:14">data_size</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <sizeof pos:start="83:18" pos:end="83:32">sizeof<argument_list pos:start="83:24" pos:end="83:32">(<argument pos:start="83:25" pos:end="83:31"><expr pos:start="83:25" pos:end="83:31"><name pos:start="83:25" pos:end="83:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:31"><expr pos:start="85:5" pos:end="85:30"><operator pos:start="85:5" pos:end="85:5">*</operator><operator pos:start="85:6" pos:end="85:6">(</operator><name pos:start="85:7" pos:end="85:13">AVFrame</name><operator pos:start="85:14" pos:end="85:14">*</operator><operator pos:start="85:15" pos:end="85:15">)</operator><name pos:start="85:16" pos:end="85:19">data</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:30"><name pos:start="85:23" pos:end="85:23">t</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:30">frame</name></name></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:20">return <expr pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
