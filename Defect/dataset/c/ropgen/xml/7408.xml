<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7408.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:36"><name pos:start="1:1" pos:end="1:16">iscsi_set_events</name><argument_list pos:start="1:17" pos:end="1:36">(<argument pos:start="1:18" pos:end="1:35">IscsiLun *iscsilun</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:26">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">iscsi_context</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:31">iscsi</name> <init pos:start="5:33" pos:end="5:49">= <expr pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:42">iscsilun</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:49">iscsi</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">ev</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:45">/* We always register a read handler.  */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:6">ev</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:15">POLLIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:6">ev</name> <operator pos:start="15:8" pos:end="15:9">|=</operator> <call pos:start="15:11" pos:end="15:35"><name pos:start="15:11" pos:end="15:28">iscsi_which_events</name><argument_list pos:start="15:29" pos:end="15:35">(<argument pos:start="15:30" pos:end="15:34"><expr pos:start="15:30" pos:end="15:34"><name pos:start="15:30" pos:end="15:34">iscsi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:10">ev</name> <operator pos:start="17:12" pos:end="17:13">!=</operator> <name pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:22">iscsilun</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:30">events</name></name></expr>)</condition> <block pos:start="17:33" pos:end="31:5">{<block_content pos:start="19:9" pos:end="27:37">

        <expr_stmt pos:start="19:9" pos:end="27:37"><expr pos:start="19:9" pos:end="27:36"><call pos:start="19:9" pos:end="27:36"><name pos:start="19:9" pos:end="19:26">aio_set_fd_handler</name><argument_list pos:start="19:27" pos:end="27:36">(<argument pos:start="19:28" pos:end="19:48"><expr pos:start="19:28" pos:end="19:48"><name pos:start="19:28" pos:end="19:48"><name pos:start="19:28" pos:end="19:35">iscsilun</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:48">aio_context</name></name></expr></argument>,

                           <argument pos:start="21:28" pos:end="21:46"><expr pos:start="21:28" pos:end="21:46"><call pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:39">iscsi_get_fd</name><argument_list pos:start="21:40" pos:end="21:46">(<argument pos:start="21:41" pos:end="21:45"><expr pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:45">iscsi</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:45"><expr pos:start="23:28" pos:end="23:45"><name pos:start="23:28" pos:end="23:45">iscsi_process_read</name></expr></argument>,

                           <argument pos:start="25:28" pos:end="25:70"><expr pos:start="25:28" pos:end="25:70"><ternary pos:start="25:28" pos:end="25:70"><condition pos:start="25:28" pos:end="25:43"><expr pos:start="25:28" pos:end="25:41"><operator pos:start="25:28" pos:end="25:28">(</operator><name pos:start="25:29" pos:end="25:30">ev</name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <name pos:start="25:34" pos:end="25:40">POLLOUT</name><operator pos:start="25:41" pos:end="25:41">)</operator></expr> ?</condition><then pos:start="25:45" pos:end="25:63"> <expr pos:start="25:45" pos:end="25:63"><name pos:start="25:45" pos:end="25:63">iscsi_process_write</name></expr> </then><else pos:start="25:65" pos:end="25:70">: <expr pos:start="25:67" pos:end="25:70"><name pos:start="25:67" pos:end="25:70">NULL</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="27:28" pos:end="27:35"><expr pos:start="27:28" pos:end="27:35"><name pos:start="27:28" pos:end="27:35">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:12">iscsilun</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:20">events</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:25">ev</name></expr>;</expr_stmt>

</block_content>}</block>
</unit>
