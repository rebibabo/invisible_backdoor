<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18247.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">bdrv_snapshot_goto</name><parameter_list pos:start="1:23" pos:end="5:36">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:46"><decl pos:start="3:24" pos:end="3:46"><type pos:start="3:24" pos:end="3:46"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:46">snapshot_id</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:35"><decl pos:start="5:24" pos:end="5:35"><type pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:28">Error</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier><modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:35">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="141:1">{<block_content pos:start="9:5" pos:end="139:20">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">BlockDriver</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">drv</name> <init pos:start="9:22" pos:end="9:30">= <expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:21">open_ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">len</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">drv</name></expr>)</condition> <block pos:start="17:15" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:26">

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:50">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:49"><expr pos:start="19:26" pos:end="19:49"><literal type="string" pos:start="19:26" pos:end="19:49">"Block driver is closed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:26">return <expr pos:start="21:16" pos:end="21:25"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:25">ENOMEDIUM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:7">len</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:28"><name pos:start="27:11" pos:end="27:24">bdrv_getlength</name><argument_list pos:start="27:25" pos:end="27:28">(<argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><name pos:start="27:26" pos:end="27:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">len</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>)</condition> <block pos:start="29:18" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:19">

        <expr_stmt pos:start="31:9" pos:end="31:69"><expr pos:start="31:9" pos:end="31:68"><call pos:start="31:9" pos:end="31:68"><name pos:start="31:9" pos:end="31:24">error_setg_errno</name><argument_list pos:start="31:25" pos:end="31:68">(<argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">errp</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><operator pos:start="31:32" pos:end="31:32">-</operator><name pos:start="31:33" pos:end="31:35">len</name></expr></argument>, <argument pos:start="31:38" pos:end="31:67"><expr pos:start="31:38" pos:end="31:67"><literal type="string" pos:start="31:38" pos:end="31:67">"Cannot get block device size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">len</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="37:5" pos:end="47:49">/* We should set all bits in all enabled dirty bitmaps, because dirty

     * bitmaps reflect active state of disk and snapshot switch operation

     * actually dirties active state.

     * TODO: It may make sense not to set all bits but analyze block status of

     * current state and destination snapshot and do not set bits corresponding

     * to both-zero or both-unallocated areas. */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><call pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:18">bdrv_set_dirty</name><argument_list pos:start="49:19" pos:end="49:30">(<argument pos:start="49:20" pos:end="49:21"><expr pos:start="49:20" pos:end="49:21"><name pos:start="49:20" pos:end="49:21">bs</name></expr></argument>, <argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr></argument>, <argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:32">(<expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:11">drv</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:31">bdrv_snapshot_goto</name></name></expr>)</condition> <block pos:start="53:34" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:19">

        <expr_stmt pos:start="55:9" pos:end="55:55"><expr pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:54"><name pos:start="55:15" pos:end="55:37"><name pos:start="55:15" pos:end="55:17">drv</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:37">bdrv_snapshot_goto</name></name><argument_list pos:start="55:38" pos:end="55:54">(<argument pos:start="55:39" pos:end="55:40"><expr pos:start="55:39" pos:end="55:40"><name pos:start="55:39" pos:end="55:40">bs</name></expr></argument>, <argument pos:start="55:43" pos:end="55:53"><expr pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:53">snapshot_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition> <block pos:start="57:22" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:68">

            <expr_stmt pos:start="59:13" pos:end="59:68"><expr pos:start="59:13" pos:end="59:67"><call pos:start="59:13" pos:end="59:67"><name pos:start="59:13" pos:end="59:28">error_setg_errno</name><argument_list pos:start="59:29" pos:end="59:67">(<argument pos:start="59:30" pos:end="59:33"><expr pos:start="59:30" pos:end="59:33"><name pos:start="59:30" pos:end="59:33">errp</name></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><operator pos:start="59:36" pos:end="59:36">-</operator><name pos:start="59:37" pos:end="59:39">ret</name></expr></argument>, <argument pos:start="59:42" pos:end="59:66"><expr pos:start="59:42" pos:end="59:66"><literal type="string" pos:start="59:42" pos:end="59:66">"Failed to load snapshot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="133:5"><if pos:start="69:5" pos:end="133:5">if <condition pos:start="69:8" pos:end="69:17">(<expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:10">bs</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:16">file</name></name></expr>)</condition> <block pos:start="69:19" pos:end="133:5">{<block_content pos:start="71:9" pos:end="131:19">

        <decl_stmt pos:start="71:9" pos:end="71:31"><decl pos:start="71:9" pos:end="71:30"><type pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:24">BlockDriverState</name> <modifier pos:start="71:26" pos:end="71:26">*</modifier></type><name pos:start="71:27" pos:end="71:30">file</name></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:58"><decl pos:start="73:9" pos:end="73:57"><type pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:13">QDict</name> <modifier pos:start="73:15" pos:end="73:15">*</modifier></type><name pos:start="73:16" pos:end="73:22">options</name> <init pos:start="73:24" pos:end="73:57">= <expr pos:start="73:26" pos:end="73:57"><call pos:start="73:26" pos:end="73:57"><name pos:start="73:26" pos:end="73:44">qdict_clone_shallow</name><argument_list pos:start="73:45" pos:end="73:57">(<argument pos:start="73:46" pos:end="73:56"><expr pos:start="73:46" pos:end="73:56"><name pos:start="73:46" pos:end="73:56"><name pos:start="73:46" pos:end="73:47">bs</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:56">options</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:28"><decl pos:start="75:9" pos:end="75:27"><type pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:13">QDict</name> <modifier pos:start="75:15" pos:end="75:15">*</modifier></type><name pos:start="75:16" pos:end="75:27">file_options</name></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:32"><decl pos:start="77:9" pos:end="77:31"><type pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:13">Error</name> <modifier pos:start="77:15" pos:end="77:15">*</modifier></type><name pos:start="77:16" pos:end="77:24">local_err</name> <init pos:start="77:26" pos:end="77:31">= <expr pos:start="77:28" pos:end="77:31"><name pos:start="77:28" pos:end="77:31">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:12">file</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <name pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:17">bs</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">file</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:27">bs</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:67">/* Prevent it from getting deleted when detached from bs */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:23"><expr pos:start="85:9" pos:end="85:22"><call pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:16">bdrv_ref</name><argument_list pos:start="85:17" pos:end="85:22">(<argument pos:start="85:18" pos:end="85:21"><expr pos:start="85:18" pos:end="85:21"><name pos:start="85:18" pos:end="85:21">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:64"><expr pos:start="89:9" pos:end="89:63"><call pos:start="89:9" pos:end="89:63"><name pos:start="89:9" pos:end="89:30">qdict_extract_subqdict</name><argument_list pos:start="89:31" pos:end="89:63">(<argument pos:start="89:32" pos:end="89:38"><expr pos:start="89:32" pos:end="89:38"><name pos:start="89:32" pos:end="89:38">options</name></expr></argument>, <argument pos:start="89:41" pos:end="89:53"><expr pos:start="89:41" pos:end="89:53"><operator pos:start="89:41" pos:end="89:41">&amp;</operator><name pos:start="89:42" pos:end="89:53">file_options</name></expr></argument>, <argument pos:start="89:56" pos:end="89:62"><expr pos:start="89:56" pos:end="89:62"><literal type="string" pos:start="89:56" pos:end="89:62">"file."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><call pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:15">QDECREF</name><argument_list pos:start="91:16" pos:end="91:29">(<argument pos:start="91:17" pos:end="91:28"><expr pos:start="91:17" pos:end="91:28"><name pos:start="91:17" pos:end="91:28">file_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:65"><expr pos:start="93:9" pos:end="93:64"><call pos:start="93:9" pos:end="93:64"><name pos:start="93:9" pos:end="93:21">qdict_put_str</name><argument_list pos:start="93:22" pos:end="93:64">(<argument pos:start="93:23" pos:end="93:29"><expr pos:start="93:23" pos:end="93:29"><name pos:start="93:23" pos:end="93:29">options</name></expr></argument>, <argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><literal type="string" pos:start="93:32" pos:end="93:37">"file"</literal></expr></argument>, <argument pos:start="93:40" pos:end="93:63"><expr pos:start="93:40" pos:end="93:63"><call pos:start="93:40" pos:end="93:63"><name pos:start="93:40" pos:end="93:57">bdrv_get_node_name</name><argument_list pos:start="93:58" pos:end="93:63">(<argument pos:start="93:59" pos:end="93:62"><expr pos:start="93:59" pos:end="93:62"><name pos:start="93:59" pos:end="93:62">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><call pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:11">drv</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:23">bdrv_close</name></name><argument_list pos:start="97:24" pos:end="97:27">(<argument pos:start="97:25" pos:end="97:26"><expr pos:start="97:25" pos:end="97:26"><name pos:start="97:25" pos:end="97:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><call pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:24">bdrv_unref_child</name><argument_list pos:start="99:25" pos:end="99:38">(<argument pos:start="99:26" pos:end="99:27"><expr pos:start="99:26" pos:end="99:27"><name pos:start="99:26" pos:end="99:27">bs</name></expr></argument>, <argument pos:start="99:30" pos:end="99:37"><expr pos:start="99:30" pos:end="99:37"><name pos:start="99:30" pos:end="99:37"><name pos:start="99:30" pos:end="99:31">bs</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:37">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:24"><expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:10">bs</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:16">file</name></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:23">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:58"><expr pos:start="105:9" pos:end="105:57"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:57"><name pos:start="105:15" pos:end="105:32">bdrv_snapshot_goto</name><argument_list pos:start="105:33" pos:end="105:57">(<argument pos:start="105:34" pos:end="105:37"><expr pos:start="105:34" pos:end="105:37"><name pos:start="105:34" pos:end="105:37">file</name></expr></argument>, <argument pos:start="105:40" pos:end="105:50"><expr pos:start="105:40" pos:end="105:50"><name pos:start="105:40" pos:end="105:50">snapshot_id</name></expr></argument>, <argument pos:start="105:53" pos:end="105:56"><expr pos:start="105:53" pos:end="105:56"><name pos:start="105:53" pos:end="105:56">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:75"><expr pos:start="107:9" pos:end="107:74"><name pos:start="107:9" pos:end="107:16">open_ret</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <call pos:start="107:20" pos:end="107:74"><name pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:22">drv</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:33">bdrv_open</name></name><argument_list pos:start="107:34" pos:end="107:74">(<argument pos:start="107:35" pos:end="107:36"><expr pos:start="107:35" pos:end="107:36"><name pos:start="107:35" pos:end="107:36">bs</name></expr></argument>, <argument pos:start="107:39" pos:end="107:45"><expr pos:start="107:39" pos:end="107:45"><name pos:start="107:39" pos:end="107:45">options</name></expr></argument>, <argument pos:start="107:48" pos:end="107:61"><expr pos:start="107:48" pos:end="107:61"><name pos:start="107:48" pos:end="107:61"><name pos:start="107:48" pos:end="107:49">bs</name><operator pos:start="107:50" pos:end="107:51">-&gt;</operator><name pos:start="107:52" pos:end="107:61">open_flags</name></name></expr></argument>, <argument pos:start="107:64" pos:end="107:73"><expr pos:start="107:64" pos:end="107:73"><operator pos:start="107:64" pos:end="107:64">&amp;</operator><name pos:start="107:65" pos:end="107:73">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:25"><expr pos:start="109:9" pos:end="109:24"><call pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:15">QDECREF</name><argument_list pos:start="109:16" pos:end="109:24">(<argument pos:start="109:17" pos:end="109:23"><expr pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:23">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="123:9"><if pos:start="111:9" pos:end="123:9">if <condition pos:start="111:12" pos:end="111:25">(<expr pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:20">open_ret</name> <operator pos:start="111:22" pos:end="111:22">&lt;</operator> <literal type="number" pos:start="111:24" pos:end="111:24">0</literal></expr>)</condition> <block pos:start="111:27" pos:end="123:9">{<block_content pos:start="113:13" pos:end="121:44">

            <expr_stmt pos:start="113:13" pos:end="113:29"><expr pos:start="113:13" pos:end="113:28"><call pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:22">bdrv_unref</name><argument_list pos:start="113:23" pos:end="113:28">(<argument pos:start="113:24" pos:end="113:27"><expr pos:start="113:24" pos:end="113:27"><name pos:start="113:24" pos:end="113:27">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:27"><expr pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:14">bs</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:19">drv</name></name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:26">NULL</name></expr>;</expr_stmt>

            <comment type="block" pos:start="117:13" pos:end="117:63">/* A bdrv_snapshot_goto() error takes precedence */</comment>

            <expr_stmt pos:start="119:13" pos:end="119:45"><expr pos:start="119:13" pos:end="119:44"><call pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:27">error_propagate</name><argument_list pos:start="119:28" pos:end="119:44">(<argument pos:start="119:29" pos:end="119:32"><expr pos:start="119:29" pos:end="119:32"><name pos:start="119:29" pos:end="119:32">errp</name></expr></argument>, <argument pos:start="119:35" pos:end="119:43"><expr pos:start="119:35" pos:end="119:43"><name pos:start="119:35" pos:end="119:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:44">return <expr pos:start="121:20" pos:end="121:43"><ternary pos:start="121:20" pos:end="121:43"><condition pos:start="121:20" pos:end="121:28"><expr pos:start="121:20" pos:end="121:26"><name pos:start="121:20" pos:end="121:22">ret</name> <operator pos:start="121:24" pos:end="121:24">&lt;</operator> <literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr> ?</condition><then pos:start="121:30" pos:end="121:32"> <expr pos:start="121:30" pos:end="121:32"><name pos:start="121:30" pos:end="121:32">ret</name></expr> </then><else pos:start="121:34" pos:end="121:43">: <expr pos:start="121:36" pos:end="121:43"><name pos:start="121:36" pos:end="121:43">open_ret</name></expr></else></ternary></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:37"><expr pos:start="127:9" pos:end="127:36"><call pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:14">assert</name><argument_list pos:start="127:15" pos:end="127:36">(<argument pos:start="127:16" pos:end="127:35"><expr pos:start="127:16" pos:end="127:35"><name pos:start="127:16" pos:end="127:27"><name pos:start="127:16" pos:end="127:17">bs</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:23">file</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:27">bs</name></name> <operator pos:start="127:29" pos:end="127:30">==</operator> <name pos:start="127:32" pos:end="127:35">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:25"><expr pos:start="129:9" pos:end="129:24"><call pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:18">bdrv_unref</name><argument_list pos:start="129:19" pos:end="129:24">(<argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:19">return <expr pos:start="131:16" pos:end="131:18"><name pos:start="131:16" pos:end="131:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:64"><expr pos:start="137:5" pos:end="137:63"><call pos:start="137:5" pos:end="137:63"><name pos:start="137:5" pos:end="137:14">error_setg</name><argument_list pos:start="137:15" pos:end="137:63">(<argument pos:start="137:16" pos:end="137:19"><expr pos:start="137:16" pos:end="137:19"><name pos:start="137:16" pos:end="137:19">errp</name></expr></argument>, <argument pos:start="137:22" pos:end="137:62"><expr pos:start="137:22" pos:end="137:62"><literal type="string" pos:start="137:22" pos:end="137:62">"Block driver does not support snapshots"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:20">return <expr pos:start="139:12" pos:end="139:19"><operator pos:start="139:12" pos:end="139:12">-</operator><name pos:start="139:13" pos:end="139:19">ENOTSUP</name></expr>;</return>

</block_content>}</block></function>
</unit>
