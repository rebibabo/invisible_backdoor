<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14714.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">bitband_writeb</name><parameter_list pos:start="1:27" pos:end="3:42">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:66"><decl pos:start="1:42" pos:end="1:66"><type pos:start="1:42" pos:end="1:66"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:66">offset</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:35">uint32_t</name></type> <name pos:start="3:37" pos:end="3:41">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:43">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:16">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:13">v</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:39"><name pos:start="13:12" pos:end="13:23">bitband_addr</name><argument_list pos:start="13:24" pos:end="13:39">(<argument pos:start="13:25" pos:end="13:30"><expr pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:30">opaque</name></expr></argument>, <argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:8">mask</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <operator pos:start="15:12" pos:end="15:12">(</operator><literal type="number" pos:start="15:13" pos:end="15:13">1</literal> <operator pos:start="15:15" pos:end="15:16">&lt;&lt;</operator> <operator pos:start="15:18" pos:end="15:18">(</operator><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:25">offset</name> <operator pos:start="15:27" pos:end="15:28">&gt;&gt;</operator> <literal type="number" pos:start="15:30" pos:end="15:30">2</literal><operator pos:start="15:31" pos:end="15:31">)</operator> <operator pos:start="15:33" pos:end="15:33">&amp;</operator> <literal type="number" pos:start="15:35" pos:end="15:35">7</literal><operator pos:start="15:36" pos:end="15:36">)</operator><operator pos:start="15:37" pos:end="15:37">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:28">cpu_physical_memory_read</name><argument_list pos:start="17:29" pos:end="17:41">(<argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">addr</name></expr></argument>, <argument pos:start="17:36" pos:end="17:37"><expr pos:start="17:36" pos:end="17:37"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:37">v</name></expr></argument>, <argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:19"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:13">value</name> <operator pos:start="19:15" pos:end="19:15">&amp;</operator> <literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <expr_stmt pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:9">v</name> <operator pos:start="21:11" pos:end="21:12">|=</operator> <name pos:start="21:14" pos:end="21:17">mask</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:19">else<block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:9">v</name> <operator pos:start="25:11" pos:end="25:12">&amp;=</operator> <operator pos:start="25:14" pos:end="25:14">~</operator><name pos:start="25:15" pos:end="25:18">mask</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><call pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:29">cpu_physical_memory_write</name><argument_list pos:start="27:30" pos:end="27:42">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">addr</name></expr></argument>, <argument pos:start="27:37" pos:end="27:38"><expr pos:start="27:37" pos:end="27:38"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:38">v</name></expr></argument>, <argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><literal type="number" pos:start="27:41" pos:end="27:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
