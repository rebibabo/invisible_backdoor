<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12496.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:29">get_elf_hwcap</name><parameter_list pos:start="1:30" pos:end="1:35">(<parameter pos:start="1:31" pos:end="1:34"><decl pos:start="1:31" pos:end="1:34"><type pos:start="1:31" pos:end="1:34"><name pos:start="1:31" pos:end="1:34">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:20">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">e</name> <init pos:start="5:17" pos:end="5:28">= <expr pos:start="5:19" pos:end="5:28"><name pos:start="5:19" pos:end="5:28">thread_env</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="18:0"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="13:66">/* We don't have to be terribly complete here; the high points are

       Altivec/FP/SPE support.  Anything else is just a bonus.  */</comment>

<cpp:define pos:start="15:1" pos:end="17:66">#<cpp:directive pos:start="15:2" pos:end="15:7">define</cpp:directive> <cpp:macro pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:19">GET_FEATURE</name><parameter_list pos:start="15:20" pos:end="15:34">(<parameter pos:start="15:21" pos:end="15:24"><type pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">flag</name></type></parameter>, <parameter pos:start="15:27" pos:end="15:33"><type pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:33">feature</name></type></parameter>)</parameter_list></cpp:macro>              \

    <cpp:value pos:start="17:5" pos:end="17:66">do {if (e-&gt;insns_flags &amp; flag) features |= feature; } while(0)</cpp:value></cpp:define>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><call pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:15">GET_FEATURE</name><argument_list pos:start="19:16" pos:end="19:40">(<argument pos:start="19:17" pos:end="19:23"><expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:23">PPC_64B</name></expr></argument>, <argument pos:start="19:26" pos:end="19:39"><expr pos:start="19:26" pos:end="19:39"><name pos:start="19:26" pos:end="19:39">PPC_FEATURE_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><call pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:15">GET_FEATURE</name><argument_list pos:start="21:16" pos:end="21:47">(<argument pos:start="21:17" pos:end="21:25"><expr pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:25">PPC_FLOAT</name></expr></argument>, <argument pos:start="21:28" pos:end="21:46"><expr pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:46">PPC_FEATURE_HAS_FPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:15">GET_FEATURE</name><argument_list pos:start="23:16" pos:end="23:53">(<argument pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:27">PPC_ALTIVEC</name></expr></argument>, <argument pos:start="23:30" pos:end="23:52"><expr pos:start="23:30" pos:end="23:52"><name pos:start="23:30" pos:end="23:52">PPC_FEATURE_HAS_ALTIVEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:15">GET_FEATURE</name><argument_list pos:start="25:16" pos:end="25:45">(<argument pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:23">PPC_SPE</name></expr></argument>, <argument pos:start="25:26" pos:end="25:44"><expr pos:start="25:26" pos:end="25:44"><name pos:start="25:26" pos:end="25:44">PPC_FEATURE_HAS_SPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><call pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:15">GET_FEATURE</name><argument_list pos:start="27:16" pos:end="27:59">(<argument pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:30">PPC_SPE_SINGLE</name></expr></argument>, <argument pos:start="27:33" pos:end="27:58"><expr pos:start="27:33" pos:end="27:58"><name pos:start="27:33" pos:end="27:58">PPC_FEATURE_HAS_EFP_SINGLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:15">GET_FEATURE</name><argument_list pos:start="29:16" pos:end="29:59">(<argument pos:start="29:17" pos:end="29:30"><expr pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:30">PPC_SPE_DOUBLE</name></expr></argument>, <argument pos:start="29:33" pos:end="29:58"><expr pos:start="29:33" pos:end="29:58"><name pos:start="29:33" pos:end="29:58">PPC_FEATURE_HAS_EFP_DOUBLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><call pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:15">GET_FEATURE</name><argument_list pos:start="31:16" pos:end="31:45">(<argument pos:start="31:17" pos:end="31:25"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:25">PPC_BOOKE</name></expr></argument>, <argument pos:start="31:28" pos:end="31:44"><expr pos:start="31:28" pos:end="31:44"><name pos:start="31:28" pos:end="31:44">PPC_FEATURE_BOOKE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:52"><call pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:15">GET_FEATURE</name><argument_list pos:start="33:16" pos:end="33:52">(<argument pos:start="33:17" pos:end="33:27"><expr pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:27">PPC_405_MAC</name></expr></argument>, <argument pos:start="33:30" pos:end="33:51"><expr pos:start="33:30" pos:end="33:51"><name pos:start="33:30" pos:end="33:51">PPC_FEATURE_HAS_4xxMAC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="35:1" pos:end="35:18">#<cpp:directive pos:start="35:2" pos:end="35:6">undef</cpp:directive> <name pos:start="35:8" pos:end="35:18">GET_FEATURE</name></cpp:undef>



    <return pos:start="39:5" pos:end="39:20">return <expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19">features</name></expr>;</return>

</block_content>}</block></function>
</unit>
