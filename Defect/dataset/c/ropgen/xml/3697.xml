<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3697.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">ahci_init_d2h</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:36">AHCIDevice</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">ad</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:23">ide_state</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:42"><name pos:start="5:28" pos:end="5:29">ad</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">port</name><operator pos:start="5:36" pos:end="5:36">.</operator><name pos:start="5:37" pos:end="5:39">ifs</name><index pos:start="5:40" pos:end="5:42">[<expr pos:start="5:41" pos:end="5:41"><literal type="number" pos:start="5:41" pos:end="5:41">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AHCIPortRegs</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">pr</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:26">ad</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">port_regs</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:10">ad</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:25">init_d2h_sent</name></name></expr>)</condition> <block pos:start="11:28" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="35:5"><if pos:start="19:5" pos:end="35:5">if <condition pos:start="19:8" pos:end="19:31">(<expr pos:start="19:9" pos:end="19:30"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:26">ahci_write_fis_d2h</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">ad</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:33" pos:end="35:5">{<block_content pos:start="21:9" pos:end="33:40">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:10">ad</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:25">init_d2h_sent</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:32">true</name></expr>;</expr_stmt>

        <comment type="block" pos:start="23:9" pos:end="25:71">/* We're emulating receiving the first Reg H2D Fis from the device;

         * Update the SIG register, but otherwise proceed as normal. */</comment>

        <expr_stmt pos:start="27:9" pos:end="33:40"><expr pos:start="27:9" pos:end="33:39"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:10">pr</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:15">sig</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:28">ide_state</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">hcyl</name></name> <operator pos:start="27:36" pos:end="27:37">&lt;&lt;</operator> <literal type="number" pos:start="27:39" pos:end="27:40">24</literal><operator pos:start="27:41" pos:end="27:41">)</operator> <operator pos:start="27:43" pos:end="27:43">|</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:22">ide_state</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">lcyl</name></name> <operator pos:start="29:30" pos:end="29:31">&lt;&lt;</operator> <literal type="number" pos:start="29:33" pos:end="29:34">16</literal><operator pos:start="29:35" pos:end="29:35">)</operator> <operator pos:start="29:37" pos:end="29:37">|</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:22">ide_state</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:30">sector</name></name> <operator pos:start="31:32" pos:end="31:33">&lt;&lt;</operator> <literal type="number" pos:start="31:35" pos:end="31:35">8</literal><operator pos:start="31:36" pos:end="31:36">)</operator> <operator pos:start="31:38" pos:end="31:38">|</operator>

            <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:22">ide_state</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:31">nsector</name></name> <operator pos:start="33:33" pos:end="33:33">&amp;</operator> <literal type="number" pos:start="33:35" pos:end="33:38">0xFF</literal><operator pos:start="33:39" pos:end="33:39">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
