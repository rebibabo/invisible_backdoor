<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12922.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">calculate_code_lengths</name><parameter_list pos:start="1:35" pos:end="1:70">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:42">uint8_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:51">lengths</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:61">uint32_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">counts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:21">nr_nodes</name></decl>, <decl pos:start="5:24" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:24" pos:end="5:30">nr_heap</name></decl>, <decl pos:start="5:33" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:33" pos:end="5:37">node1</name></decl>, <decl pos:start="5:40" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:40" pos:end="5:44">node2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>      <name pos:start="7:14" pos:end="7:14">i</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type>  <name pos:start="9:14" pos:end="9:14">k</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:44">/* Heap and node entries start from 1 */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:20">weights</name><index pos:start="15:21" pos:end="15:25">[<expr pos:start="15:22" pos:end="15:24"><literal type="number" pos:start="15:22" pos:end="15:24">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:17">heap</name><index pos:start="17:18" pos:end="17:22">[<expr pos:start="17:19" pos:end="17:21"><literal type="number" pos:start="17:19" pos:end="17:21">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int32_t</name></type>  <name pos:start="19:14" pos:end="19:25"><name pos:start="19:14" pos:end="19:20">parents</name><index pos:start="19:21" pos:end="19:25">[<expr pos:start="19:22" pos:end="19:24"><literal type="number" pos:start="19:22" pos:end="19:24">512</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:29">/* Set initial weights */</comment>

    <for pos:start="25:5" pos:end="27:58">for <control pos:start="25:9" pos:end="25:29">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:24"><expr pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:23">256</literal></expr>;</condition> <incr pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:26">i</name><operator pos:start="25:27" pos:end="25:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:58"><block_content pos:start="27:9" pos:end="27:58">

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:15">weights</name><index pos:start="27:16" pos:end="27:22">[<expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">+</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>]</index></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <operator pos:start="27:26" pos:end="27:26">(</operator><ternary pos:start="27:27" pos:end="27:51"><condition pos:start="27:27" pos:end="27:37"><expr pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:32">counts</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr>]</index></name></expr> ?</condition><then pos:start="27:39" pos:end="27:47"> <expr pos:start="27:39" pos:end="27:47"><name pos:start="27:39" pos:end="27:47"><name pos:start="27:39" pos:end="27:44">counts</name><index pos:start="27:45" pos:end="27:47">[<expr pos:start="27:46" pos:end="27:46"><name pos:start="27:46" pos:end="27:46">i</name></expr>]</index></name></expr> </then><else pos:start="27:49" pos:end="27:51">: <expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">1</literal></expr></else></ternary><operator pos:start="27:52" pos:end="27:52">)</operator> <operator pos:start="27:54" pos:end="27:55">&lt;&lt;</operator> <literal type="number" pos:start="27:57" pos:end="27:57">8</literal></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:12">nr_nodes</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:18">256</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:11">nr_heap</name>  <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:8">heap</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>]</index></name>    <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:11">weights</name><index pos:start="39:12" pos:end="39:14">[<expr pos:start="39:13" pos:end="39:13"><literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>]</index></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:11">parents</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>]</index></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">-</operator><literal type="number" pos:start="41:19" pos:end="41:19">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:30">/* Create initial nodes */</comment>

    <for pos:start="47:5" pos:end="57:5">for <control pos:start="47:9" pos:end="47:30">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:25"><expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:20">&lt;=</operator> <literal type="number" pos:start="47:22" pos:end="47:24">256</literal></expr>;</condition> <incr pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:27">i</name><operator pos:start="47:28" pos:end="47:29">++</operator></expr></incr>)</control> <block pos:start="47:32" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:40">

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:15">parents</name><index pos:start="49:16" pos:end="49:18">[<expr pos:start="49:17" pos:end="49:17"><name pos:start="49:17" pos:end="49:17">i</name></expr>]</index></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <operator pos:start="49:22" pos:end="49:22">-</operator><literal type="number" pos:start="49:23" pos:end="49:23">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:12">heap</name><index pos:start="53:13" pos:end="53:23">[<expr pos:start="53:14" pos:end="53:22"><operator pos:start="53:14" pos:end="53:15">++</operator><name pos:start="53:16" pos:end="53:22">nr_heap</name></expr>]</index></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:27">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><call pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:15">up_heap</name><argument_list pos:start="55:16" pos:end="55:39">(<argument pos:start="55:17" pos:end="55:23"><expr pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:23">nr_heap</name></expr></argument>, <argument pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:29"><name pos:start="55:26" pos:end="55:29">heap</name></expr></argument>, <argument pos:start="55:32" pos:end="55:38"><expr pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:38">weights</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="61:5" pos:end="61:24">/* Build the tree */</comment>

    <while pos:start="63:5" pos:end="103:5">while <condition pos:start="63:11" pos:end="63:23">(<expr pos:start="63:12" pos:end="63:22"><name pos:start="63:12" pos:end="63:18">nr_heap</name> <operator pos:start="63:20" pos:end="63:20">&gt;</operator> <literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr>)</condition> <block pos:start="63:25" pos:end="103:5">{<block_content pos:start="65:9" pos:end="101:40">

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:13">node1</name>   <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:25"><name pos:start="65:19" pos:end="65:22">heap</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:12">heap</name><index pos:start="67:13" pos:end="67:15">[<expr pos:start="67:14" pos:end="67:14"><literal type="number" pos:start="67:14" pos:end="67:14">1</literal></expr>]</index></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:33"><name pos:start="67:19" pos:end="67:22">heap</name><index pos:start="67:23" pos:end="67:33">[<expr pos:start="67:24" pos:end="67:32"><name pos:start="67:24" pos:end="67:30">nr_heap</name><operator pos:start="67:31" pos:end="67:32">--</operator></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><call pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:17">down_heap</name><argument_list pos:start="71:18" pos:end="71:41">(<argument pos:start="71:19" pos:end="71:25"><expr pos:start="71:19" pos:end="71:25"><name pos:start="71:19" pos:end="71:25">nr_heap</name></expr></argument>, <argument pos:start="71:28" pos:end="71:31"><expr pos:start="71:28" pos:end="71:31"><name pos:start="71:28" pos:end="71:31">heap</name></expr></argument>, <argument pos:start="71:34" pos:end="71:40"><expr pos:start="71:34" pos:end="71:40"><name pos:start="71:34" pos:end="71:40">weights</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:13">node2</name>   <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:25"><name pos:start="75:19" pos:end="75:22">heap</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><literal type="number" pos:start="75:24" pos:end="75:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:12">heap</name><index pos:start="77:13" pos:end="77:15">[<expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">1</literal></expr>]</index></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:33"><name pos:start="77:19" pos:end="77:22">heap</name><index pos:start="77:23" pos:end="77:33">[<expr pos:start="77:24" pos:end="77:32"><name pos:start="77:24" pos:end="77:30">nr_heap</name><operator pos:start="77:31" pos:end="77:32">--</operator></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><call pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:17">down_heap</name><argument_list pos:start="81:18" pos:end="81:41">(<argument pos:start="81:19" pos:end="81:25"><expr pos:start="81:19" pos:end="81:25"><name pos:start="81:19" pos:end="81:25">nr_heap</name></expr></argument>, <argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><name pos:start="81:28" pos:end="81:31">heap</name></expr></argument>, <argument pos:start="81:34" pos:end="81:40"><expr pos:start="81:34" pos:end="81:40"><name pos:start="81:34" pos:end="81:40">weights</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:19"><expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:16">nr_nodes</name><operator pos:start="85:17" pos:end="85:18">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:54"><expr pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:15">parents</name><index pos:start="89:16" pos:end="89:22">[<expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:21">node1</name></expr>]</index></name>    <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:42"><name pos:start="89:29" pos:end="89:35">parents</name><index pos:start="89:36" pos:end="89:42">[<expr pos:start="89:37" pos:end="89:41"><name pos:start="89:37" pos:end="89:41">node2</name></expr>]</index></name> <operator pos:start="89:44" pos:end="89:44">=</operator> <name pos:start="89:46" pos:end="89:53">nr_nodes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:72"><expr pos:start="91:9" pos:end="91:71"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:15">weights</name><index pos:start="91:16" pos:end="91:25">[<expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:24">nr_nodes</name></expr>]</index></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <call pos:start="91:29" pos:end="91:71"><name pos:start="91:29" pos:end="91:39">add_weights</name><argument_list pos:start="91:40" pos:end="91:71">(<argument pos:start="91:41" pos:end="91:54"><expr pos:start="91:41" pos:end="91:54"><name pos:start="91:41" pos:end="91:54"><name pos:start="91:41" pos:end="91:47">weights</name><index pos:start="91:48" pos:end="91:54">[<expr pos:start="91:49" pos:end="91:53"><name pos:start="91:49" pos:end="91:53">node1</name></expr>]</index></name></expr></argument>, <argument pos:start="91:57" pos:end="91:70"><expr pos:start="91:57" pos:end="91:70"><name pos:start="91:57" pos:end="91:70"><name pos:start="91:57" pos:end="91:63">weights</name><index pos:start="91:64" pos:end="91:70">[<expr pos:start="91:65" pos:end="91:69"><name pos:start="91:65" pos:end="91:69">node2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:15">parents</name><index pos:start="93:16" pos:end="93:25">[<expr pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:24">nr_nodes</name></expr>]</index></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <operator pos:start="93:29" pos:end="93:29">-</operator><literal type="number" pos:start="93:30" pos:end="93:30">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:35"><expr pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:12">heap</name><index pos:start="97:13" pos:end="97:23">[<expr pos:start="97:14" pos:end="97:22"><operator pos:start="97:14" pos:end="97:15">++</operator><name pos:start="97:16" pos:end="97:22">nr_heap</name></expr>]</index></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:34">nr_nodes</name></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:40"><expr pos:start="101:9" pos:end="101:39"><call pos:start="101:9" pos:end="101:39"><name pos:start="101:9" pos:end="101:15">up_heap</name><argument_list pos:start="101:16" pos:end="101:39">(<argument pos:start="101:17" pos:end="101:23"><expr pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:23">nr_heap</name></expr></argument>, <argument pos:start="101:26" pos:end="101:29"><expr pos:start="101:26" pos:end="101:29"><name pos:start="101:26" pos:end="101:29">heap</name></expr></argument>, <argument pos:start="101:32" pos:end="101:38"><expr pos:start="101:32" pos:end="101:38"><name pos:start="101:32" pos:end="101:38">weights</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="107:5" pos:end="107:26">/* Generate lengths */</comment>

    <for pos:start="109:5" pos:end="129:5">for <control pos:start="109:9" pos:end="109:30">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">1</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:25"><expr pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:20">&lt;=</operator> <literal type="number" pos:start="109:22" pos:end="109:24">256</literal></expr>;</condition> <incr pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:27">i</name><operator pos:start="109:28" pos:end="109:29">++</operator></expr></incr>)</control> <block pos:start="109:32" pos:end="129:5">{<block_content pos:start="111:9" pos:end="127:27">

        <expr_stmt pos:start="111:9" pos:end="111:14"><expr pos:start="111:9" pos:end="111:13"><name pos:start="111:9" pos:end="111:9">j</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <literal type="number" pos:start="111:13" pos:end="111:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:14"><expr pos:start="113:9" pos:end="113:13"><name pos:start="113:9" pos:end="113:9">k</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <name pos:start="113:13" pos:end="113:13">i</name></expr>;</expr_stmt>



        <while pos:start="117:9" pos:end="123:9">while <condition pos:start="117:15" pos:end="117:31">(<expr pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:25"><name pos:start="117:16" pos:end="117:22">parents</name><index pos:start="117:23" pos:end="117:25">[<expr pos:start="117:24" pos:end="117:24"><name pos:start="117:24" pos:end="117:24">k</name></expr>]</index></name> <operator pos:start="117:27" pos:end="117:28">&gt;=</operator> <literal type="number" pos:start="117:30" pos:end="117:30">0</literal></expr>)</condition> <block pos:start="117:33" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:16">

            <expr_stmt pos:start="119:13" pos:end="119:27"><expr pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:13">k</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:23">parents</name><index pos:start="119:24" pos:end="119:26">[<expr pos:start="119:25" pos:end="119:25"><name pos:start="119:25" pos:end="119:25">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:16"><expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:13">j</name><operator pos:start="121:14" pos:end="121:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="127:9" pos:end="127:27"><expr pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:15">lengths</name><index pos:start="127:16" pos:end="127:22">[<expr pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">-</operator> <literal type="number" pos:start="127:21" pos:end="127:21">1</literal></expr>]</index></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <name pos:start="127:26" pos:end="127:26">j</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
