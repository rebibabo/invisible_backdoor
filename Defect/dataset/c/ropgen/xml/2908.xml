<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2908.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">helper_sysret</name><parameter_list pos:start="1:19" pos:end="1:29">(<parameter pos:start="1:20" pos:end="1:28"><decl pos:start="1:20" pos:end="1:28"><type pos:start="1:20" pos:end="1:22"><name pos:start="1:20" pos:end="1:22">int</name></type> <name pos:start="1:24" pos:end="1:28">dflag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="120:0">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">cpl</name></decl>, <decl pos:start="5:14" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:21">selector</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><operator pos:start="9:9" pos:end="9:9">!</operator><operator pos:start="9:10" pos:end="9:10">(</operator><name pos:start="9:11" pos:end="9:19"><name pos:start="9:11" pos:end="9:13">env</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:19">efer</name></name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <name pos:start="9:23" pos:end="9:34">MSR_EFER_SCE</name><operator pos:start="9:35" pos:end="9:35">)</operator></expr>)</condition> <block pos:start="9:38" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:45">

        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><call pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:27">raise_exception_err</name><argument_list pos:start="11:28" pos:end="11:44">(<argument pos:start="11:29" pos:end="11:40"><expr pos:start="11:29" pos:end="11:40"><name pos:start="11:29" pos:end="11:40">EXCP06_ILLOP</name></expr></argument>, <argument pos:start="11:43" pos:end="11:43"><expr pos:start="11:43" pos:end="11:43"><literal type="number" pos:start="11:43" pos:end="11:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:7">cpl</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:21"><name pos:start="15:11" pos:end="15:13">env</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:21">hflags</name></name> <operator pos:start="15:23" pos:end="15:23">&amp;</operator> <name pos:start="15:25" pos:end="15:35">HF_CPL_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:48">(<expr pos:start="17:9" pos:end="17:47"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:20"><name pos:start="17:11" pos:end="17:13">env</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:17">cr</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>]</index></name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <name pos:start="17:24" pos:end="17:34">CR0_PE_MASK</name><operator pos:start="17:35" pos:end="17:35">)</operator> <operator pos:start="17:37" pos:end="17:38">||</operator> <name pos:start="17:40" pos:end="17:42">cpl</name> <operator pos:start="17:44" pos:end="17:45">!=</operator> <literal type="number" pos:start="17:47" pos:end="17:47">0</literal></expr>)</condition> <block pos:start="17:50" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:43">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:27">raise_exception_err</name><argument_list pos:start="19:28" pos:end="19:42">(<argument pos:start="19:29" pos:end="19:38"><expr pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:12">selector</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:19">env</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:25">star</name></name> <operator pos:start="23:27" pos:end="23:28">&gt;&gt;</operator> <literal type="number" pos:start="23:30" pos:end="23:31">48</literal><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <literal type="number" pos:start="23:36" pos:end="23:41">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="106:0"><if pos:start="25:5" pos:end="75:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">hflags</name></name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:33">HF_LMA_MASK</name></expr>)</condition> <block pos:start="25:36" pos:end="75:5">{<block_content pos:start="27:9" pos:end="73:32">

        <if_stmt pos:start="27:9" pos:end="57:9"><if pos:start="27:9" pos:end="43:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:17">dflag</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <literal type="number" pos:start="27:22" pos:end="27:22">2</literal></expr>)</condition> <block pos:start="27:25" pos:end="43:9">{<block_content pos:start="29:13" pos:end="41:27">

            <expr_stmt pos:start="29:13" pos:end="39:48"><expr pos:start="29:13" pos:end="39:47"><call pos:start="29:13" pos:end="39:47"><name pos:start="29:13" pos:end="29:34">cpu_x86_load_seg_cache</name><argument_list pos:start="29:35" pos:end="39:47">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">env</name></expr></argument>, <argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">R_CS</name></expr></argument>, <argument pos:start="29:47" pos:end="29:65"><expr pos:start="29:47" pos:end="29:65"><operator pos:start="29:47" pos:end="29:47">(</operator><name pos:start="29:48" pos:end="29:55">selector</name> <operator pos:start="29:57" pos:end="29:57">+</operator> <literal type="number" pos:start="29:59" pos:end="29:60">16</literal><operator pos:start="29:61" pos:end="29:61">)</operator> <operator pos:start="29:63" pos:end="29:63">|</operator> <literal type="number" pos:start="29:65" pos:end="29:65">3</literal></expr></argument>,

                                   <argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">0</literal></expr></argument>, <argument pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:48"><literal type="number" pos:start="31:39" pos:end="31:48">0xffffffff</literal></expr></argument>,

                                   <argument pos:start="33:36" pos:end="39:46"><expr pos:start="33:36" pos:end="39:46"><name pos:start="33:36" pos:end="33:46">DESC_G_MASK</name> <operator pos:start="33:48" pos:end="33:48">|</operator> <name pos:start="33:50" pos:end="33:60">DESC_P_MASK</name> <operator pos:start="33:62" pos:end="33:62">|</operator>

                                   <name pos:start="35:36" pos:end="35:46">DESC_S_MASK</name> <operator pos:start="35:48" pos:end="35:48">|</operator> <operator pos:start="35:50" pos:end="35:50">(</operator><literal type="number" pos:start="35:51" pos:end="35:51">3</literal> <operator pos:start="35:53" pos:end="35:54">&lt;&lt;</operator> <name pos:start="35:56" pos:end="35:69">DESC_DPL_SHIFT</name><operator pos:start="35:70" pos:end="35:70">)</operator> <operator pos:start="35:72" pos:end="35:72">|</operator>

                                   <name pos:start="37:36" pos:end="37:47">DESC_CS_MASK</name> <operator pos:start="37:49" pos:end="37:49">|</operator> <name pos:start="37:51" pos:end="37:61">DESC_R_MASK</name> <operator pos:start="37:63" pos:end="37:63">|</operator> <name pos:start="37:65" pos:end="37:75">DESC_A_MASK</name> <operator pos:start="37:77" pos:end="37:77">|</operator>

                                   <name pos:start="39:36" pos:end="39:46">DESC_L_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:27"><expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">env</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:20">eip</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:26">ECX</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="57:9">else <block pos:start="43:16" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:37">

            <expr_stmt pos:start="45:13" pos:end="53:77"><expr pos:start="45:13" pos:end="53:76"><call pos:start="45:13" pos:end="53:76"><name pos:start="45:13" pos:end="45:34">cpu_x86_load_seg_cache</name><argument_list pos:start="45:35" pos:end="53:76">(<argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:38">env</name></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:44">R_CS</name></expr></argument>, <argument pos:start="45:47" pos:end="45:58"><expr pos:start="45:47" pos:end="45:58"><name pos:start="45:47" pos:end="45:54">selector</name> <operator pos:start="45:56" pos:end="45:56">|</operator> <literal type="number" pos:start="45:58" pos:end="45:58">3</literal></expr></argument>,

                                   <argument pos:start="47:36" pos:end="47:36"><expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">0</literal></expr></argument>, <argument pos:start="47:39" pos:end="47:48"><expr pos:start="47:39" pos:end="47:48"><literal type="number" pos:start="47:39" pos:end="47:48">0xffffffff</literal></expr></argument>,

                                   <argument pos:start="49:36" pos:end="53:75"><expr pos:start="49:36" pos:end="53:75"><name pos:start="49:36" pos:end="49:46">DESC_G_MASK</name> <operator pos:start="49:48" pos:end="49:48">|</operator> <name pos:start="49:50" pos:end="49:60">DESC_B_MASK</name> <operator pos:start="49:62" pos:end="49:62">|</operator> <name pos:start="49:64" pos:end="49:74">DESC_P_MASK</name> <operator pos:start="49:76" pos:end="49:76">|</operator>

                                   <name pos:start="51:36" pos:end="51:46">DESC_S_MASK</name> <operator pos:start="51:48" pos:end="51:48">|</operator> <operator pos:start="51:50" pos:end="51:50">(</operator><literal type="number" pos:start="51:51" pos:end="51:51">3</literal> <operator pos:start="51:53" pos:end="51:54">&lt;&lt;</operator> <name pos:start="51:56" pos:end="51:69">DESC_DPL_SHIFT</name><operator pos:start="51:70" pos:end="51:70">)</operator> <operator pos:start="51:72" pos:end="51:72">|</operator>

                                   <name pos:start="53:36" pos:end="53:47">DESC_CS_MASK</name> <operator pos:start="53:49" pos:end="53:49">|</operator> <name pos:start="53:51" pos:end="53:61">DESC_R_MASK</name> <operator pos:start="53:63" pos:end="53:63">|</operator> <name pos:start="53:65" pos:end="53:75">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:37"><expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:15">env</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:20">eip</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <operator pos:start="55:24" pos:end="55:24">(</operator><name pos:start="55:25" pos:end="55:32">uint32_t</name><operator pos:start="55:33" pos:end="55:33">)</operator><name pos:start="55:34" pos:end="55:36">ECX</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="67:58"><expr pos:start="59:9" pos:end="67:57"><call pos:start="59:9" pos:end="67:57"><name pos:start="59:9" pos:end="59:30">cpu_x86_load_seg_cache</name><argument_list pos:start="59:31" pos:end="67:57">(<argument pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:34">env</name></expr></argument>, <argument pos:start="59:37" pos:end="59:40"><expr pos:start="59:37" pos:end="59:40"><name pos:start="59:37" pos:end="59:40">R_SS</name></expr></argument>, <argument pos:start="59:43" pos:end="59:54"><expr pos:start="59:43" pos:end="59:54"><name pos:start="59:43" pos:end="59:50">selector</name> <operator pos:start="59:52" pos:end="59:52">+</operator> <literal type="number" pos:start="59:54" pos:end="59:54">8</literal></expr></argument>,

                               <argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">0</literal></expr></argument>, <argument pos:start="61:35" pos:end="61:44"><expr pos:start="61:35" pos:end="61:44"><literal type="number" pos:start="61:35" pos:end="61:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="63:32" pos:end="67:56"><expr pos:start="63:32" pos:end="67:56"><name pos:start="63:32" pos:end="63:42">DESC_G_MASK</name> <operator pos:start="63:44" pos:end="63:44">|</operator> <name pos:start="63:46" pos:end="63:56">DESC_B_MASK</name> <operator pos:start="63:58" pos:end="63:58">|</operator> <name pos:start="63:60" pos:end="63:70">DESC_P_MASK</name> <operator pos:start="63:72" pos:end="63:72">|</operator>

                               <name pos:start="65:32" pos:end="65:42">DESC_S_MASK</name> <operator pos:start="65:44" pos:end="65:44">|</operator> <operator pos:start="65:46" pos:end="65:46">(</operator><literal type="number" pos:start="65:47" pos:end="65:47">3</literal> <operator pos:start="65:49" pos:end="65:50">&lt;&lt;</operator> <name pos:start="65:52" pos:end="65:65">DESC_DPL_SHIFT</name><operator pos:start="65:66" pos:end="65:66">)</operator> <operator pos:start="65:68" pos:end="65:68">|</operator>

                               <name pos:start="67:32" pos:end="67:42">DESC_W_MASK</name> <operator pos:start="67:44" pos:end="67:44">|</operator> <name pos:start="67:46" pos:end="67:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:71"><expr pos:start="69:9" pos:end="71:70"><call pos:start="69:9" pos:end="71:70"><name pos:start="69:9" pos:end="69:19">load_eflags</name><argument_list pos:start="69:20" pos:end="71:70">(<argument pos:start="69:21" pos:end="69:45"><expr pos:start="69:21" pos:end="69:45"><operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:29">uint32_t</name><operator pos:start="69:30" pos:end="69:30">)</operator><operator pos:start="69:31" pos:end="69:31">(</operator><name pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:34">env</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:40">regs</name><index pos:start="69:41" pos:end="69:44">[<expr pos:start="69:42" pos:end="69:43"><literal type="number" pos:start="69:42" pos:end="69:43">11</literal></expr>]</index></name><operator pos:start="69:45" pos:end="69:45">)</operator></expr></argument>, <argument pos:start="69:48" pos:end="71:69"><expr pos:start="69:48" pos:end="71:69"><name pos:start="69:48" pos:end="69:54">TF_MASK</name> <operator pos:start="69:56" pos:end="69:56">|</operator> <name pos:start="69:58" pos:end="69:64">AC_MASK</name> <operator pos:start="69:66" pos:end="69:66">|</operator> <name pos:start="69:68" pos:end="69:74">ID_MASK</name> <operator pos:start="69:76" pos:end="69:76">|</operator>

                    <name pos:start="71:21" pos:end="71:27">IF_MASK</name> <operator pos:start="71:29" pos:end="71:29">|</operator> <name pos:start="71:31" pos:end="71:39">IOPL_MASK</name> <operator pos:start="71:41" pos:end="71:41">|</operator> <name pos:start="71:43" pos:end="71:49">VM_MASK</name> <operator pos:start="71:51" pos:end="71:51">|</operator> <name pos:start="71:53" pos:end="71:59">RF_MASK</name> <operator pos:start="71:61" pos:end="71:61">|</operator> <name pos:start="71:63" pos:end="71:69">NT_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:32"><expr pos:start="73:9" pos:end="73:31"><call pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:23">cpu_x86_set_cpl</name><argument_list pos:start="73:24" pos:end="73:31">(<argument pos:start="73:25" pos:end="73:27"><expr pos:start="73:25" pos:end="73:27"><name pos:start="73:25" pos:end="73:27">env</name></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="106:0">else <block pos:start="75:12" pos:end="106:0">{<block_content pos:start="77:9" pos:end="101:32">

        <expr_stmt pos:start="77:9" pos:end="85:73"><expr pos:start="77:9" pos:end="85:72"><call pos:start="77:9" pos:end="85:72"><name pos:start="77:9" pos:end="77:30">cpu_x86_load_seg_cache</name><argument_list pos:start="77:31" pos:end="85:72">(<argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">env</name></expr></argument>, <argument pos:start="77:37" pos:end="77:40"><expr pos:start="77:37" pos:end="77:40"><name pos:start="77:37" pos:end="77:40">R_CS</name></expr></argument>, <argument pos:start="77:43" pos:end="77:54"><expr pos:start="77:43" pos:end="77:54"><name pos:start="77:43" pos:end="77:50">selector</name> <operator pos:start="77:52" pos:end="77:52">|</operator> <literal type="number" pos:start="77:54" pos:end="77:54">3</literal></expr></argument>,

                               <argument pos:start="79:32" pos:end="79:32"><expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">0</literal></expr></argument>, <argument pos:start="79:35" pos:end="79:44"><expr pos:start="79:35" pos:end="79:44"><literal type="number" pos:start="79:35" pos:end="79:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="81:32" pos:end="85:71"><expr pos:start="81:32" pos:end="85:71"><name pos:start="81:32" pos:end="81:42">DESC_G_MASK</name> <operator pos:start="81:44" pos:end="81:44">|</operator> <name pos:start="81:46" pos:end="81:56">DESC_B_MASK</name> <operator pos:start="81:58" pos:end="81:58">|</operator> <name pos:start="81:60" pos:end="81:70">DESC_P_MASK</name> <operator pos:start="81:72" pos:end="81:72">|</operator>

                               <name pos:start="83:32" pos:end="83:42">DESC_S_MASK</name> <operator pos:start="83:44" pos:end="83:44">|</operator> <operator pos:start="83:46" pos:end="83:46">(</operator><literal type="number" pos:start="83:47" pos:end="83:47">3</literal> <operator pos:start="83:49" pos:end="83:50">&lt;&lt;</operator> <name pos:start="83:52" pos:end="83:65">DESC_DPL_SHIFT</name><operator pos:start="83:66" pos:end="83:66">)</operator> <operator pos:start="83:68" pos:end="83:68">|</operator>

                               <name pos:start="85:32" pos:end="85:43">DESC_CS_MASK</name> <operator pos:start="85:45" pos:end="85:45">|</operator> <name pos:start="85:47" pos:end="85:57">DESC_R_MASK</name> <operator pos:start="85:59" pos:end="85:59">|</operator> <name pos:start="85:61" pos:end="85:71">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:11">env</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:16">eip</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <operator pos:start="87:20" pos:end="87:20">(</operator><name pos:start="87:21" pos:end="87:28">uint32_t</name><operator pos:start="87:29" pos:end="87:29">)</operator><name pos:start="87:30" pos:end="87:32">ECX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="97:58"><expr pos:start="89:9" pos:end="97:57"><call pos:start="89:9" pos:end="97:57"><name pos:start="89:9" pos:end="89:30">cpu_x86_load_seg_cache</name><argument_list pos:start="89:31" pos:end="97:57">(<argument pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:34">env</name></expr></argument>, <argument pos:start="89:37" pos:end="89:40"><expr pos:start="89:37" pos:end="89:40"><name pos:start="89:37" pos:end="89:40">R_SS</name></expr></argument>, <argument pos:start="89:43" pos:end="89:54"><expr pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:50">selector</name> <operator pos:start="89:52" pos:end="89:52">+</operator> <literal type="number" pos:start="89:54" pos:end="89:54">8</literal></expr></argument>,

                               <argument pos:start="91:32" pos:end="91:32"><expr pos:start="91:32" pos:end="91:32"><literal type="number" pos:start="91:32" pos:end="91:32">0</literal></expr></argument>, <argument pos:start="91:35" pos:end="91:44"><expr pos:start="91:35" pos:end="91:44"><literal type="number" pos:start="91:35" pos:end="91:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="93:32" pos:end="97:56"><expr pos:start="93:32" pos:end="97:56"><name pos:start="93:32" pos:end="93:42">DESC_G_MASK</name> <operator pos:start="93:44" pos:end="93:44">|</operator> <name pos:start="93:46" pos:end="93:56">DESC_B_MASK</name> <operator pos:start="93:58" pos:end="93:58">|</operator> <name pos:start="93:60" pos:end="93:70">DESC_P_MASK</name> <operator pos:start="93:72" pos:end="93:72">|</operator>

                               <name pos:start="95:32" pos:end="95:42">DESC_S_MASK</name> <operator pos:start="95:44" pos:end="95:44">|</operator> <operator pos:start="95:46" pos:end="95:46">(</operator><literal type="number" pos:start="95:47" pos:end="95:47">3</literal> <operator pos:start="95:49" pos:end="95:50">&lt;&lt;</operator> <name pos:start="95:52" pos:end="95:65">DESC_DPL_SHIFT</name><operator pos:start="95:66" pos:end="95:66">)</operator> <operator pos:start="95:68" pos:end="95:68">|</operator>

                               <name pos:start="97:32" pos:end="97:42">DESC_W_MASK</name> <operator pos:start="97:44" pos:end="97:44">|</operator> <name pos:start="97:46" pos:end="97:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:11">env</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:19">eflags</name></name> <operator pos:start="99:21" pos:end="99:22">|=</operator> <name pos:start="99:24" pos:end="99:30">IF_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><call pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:23">cpu_x86_set_cpl</name><argument_list pos:start="101:24" pos:end="101:31">(<argument pos:start="101:25" pos:end="101:27"><expr pos:start="101:25" pos:end="101:27"><name pos:start="101:25" pos:end="101:27">env</name></expr></argument>, <argument pos:start="101:30" pos:end="101:30"><expr pos:start="101:30" pos:end="101:30"><literal type="number" pos:start="101:30" pos:end="101:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="105:1" pos:end="105:19">#<cpp:directive pos:start="105:2" pos:end="105:6">ifdef</cpp:directive> <name pos:start="105:8" pos:end="105:19">CONFIG_KQEMU</name></cpp:ifdef>

    <if_stmt pos:start="107:5" pos:end="120:0"><if pos:start="107:5" pos:end="120:0">if <condition pos:start="107:8" pos:end="107:25">(<expr pos:start="107:9" pos:end="107:24"><call pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:19">kqemu_is_ok</name><argument_list pos:start="107:20" pos:end="107:24">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:27" pos:end="120:0">{<block_content pos:start="109:9" pos:end="115:24">

        <if_stmt pos:start="109:9" pos:end="111:33"><if pos:start="109:9" pos:end="111:33">if <condition pos:start="109:12" pos:end="109:38">(<expr pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:15">env</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:23">hflags</name></name> <operator pos:start="109:25" pos:end="109:25">&amp;</operator> <name pos:start="109:27" pos:end="109:37">HF_LMA_MASK</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:33"><block_content pos:start="111:13" pos:end="111:33">

            <expr_stmt pos:start="111:13" pos:end="111:33"><expr pos:start="111:13" pos:end="111:32"><name pos:start="111:13" pos:end="111:17">CC_OP</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:32">CC_OP_EFLAGS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:34"><expr pos:start="113:9" pos:end="113:33"><name pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:11">env</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:28">exception_index</name></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <operator pos:start="113:32" pos:end="113:32">-</operator><literal type="number" pos:start="113:33" pos:end="113:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:24"><expr pos:start="115:9" pos:end="115:23"><call pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:21">cpu_loop_exit</name><argument_list pos:start="115:22" pos:end="115:23">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
