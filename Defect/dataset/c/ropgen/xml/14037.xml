<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14037.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">target_munmap</name><parameter_list pos:start="1:18" pos:end="1:55">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:30">target_ulong</name></type> <name pos:start="1:32" pos:end="1:36">start</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:50">target_ulong</name></type> <name pos:start="1:52" pos:end="1:54">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">target_ulong</name></type> <name pos:start="5:18" pos:end="5:20">end</name></decl>, <decl pos:start="5:23" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:23" pos:end="5:32">real_start</name></decl>, <decl pos:start="5:35" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:35" pos:end="5:42">real_end</name></decl>, <decl pos:start="5:45" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:45" pos:end="5:48">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">prot</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">ret</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="11:1" pos:end="11:17">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:17">DEBUG_MMAP</name></cpp:ifdef>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:57"><call pos:start="13:5" pos:end="13:57"><name pos:start="13:5" pos:end="13:10">printf</name><argument_list pos:start="13:11" pos:end="13:57">(<argument pos:start="13:12" pos:end="13:44"><expr pos:start="13:12" pos:end="13:44"><literal type="string" pos:start="13:12" pos:end="13:44">"munmap: start=0x%lx len=0x%lx\n"</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:51"><expr pos:start="13:47" pos:end="13:51"><name pos:start="13:47" pos:end="13:51">start</name></expr></argument>, <argument pos:start="13:54" pos:end="13:56"><expr pos:start="13:54" pos:end="13:56"><name pos:start="13:54" pos:end="13:56">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="17:5" pos:end="19:23"><if pos:start="17:5" pos:end="19:23">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:13">start</name> <operator pos:start="17:15" pos:end="17:15">&amp;</operator> <operator pos:start="17:17" pos:end="17:17">~</operator><name pos:start="17:18" pos:end="17:33">TARGET_PAGE_MASK</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:23"><block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">len</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:32"><name pos:start="21:11" pos:end="21:27">TARGET_PAGE_ALIGN</name><argument_list pos:start="21:28" pos:end="21:32">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:23"><if pos:start="23:5" pos:end="25:23">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:23"><block_content pos:start="25:9" pos:end="25:23">

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:7">end</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:15">start</name> <operator pos:start="27:17" pos:end="27:17">+</operator> <name pos:start="27:19" pos:end="27:21">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:14">real_start</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:22">start</name> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <name pos:start="29:26" pos:end="29:44">qemu_host_page_mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:12">real_end</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:35"><name pos:start="31:16" pos:end="31:30">HOST_PAGE_ALIGN</name><argument_list pos:start="31:31" pos:end="31:35">(<argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="63:5">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:13">start</name> <operator pos:start="35:15" pos:end="35:15">&gt;</operator> <name pos:start="35:17" pos:end="35:26">real_start</name></expr>)</condition> <block pos:start="35:29" pos:end="63:5">{<block_content pos:start="39:9" pos:end="61:46">

        <comment type="block" pos:start="37:9" pos:end="37:47">/* handle host page containing start */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:17"><expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:12">prot</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</expr_stmt>

        <for pos:start="41:9" pos:end="45:9">for<control pos:start="41:12" pos:end="41:70">(<init pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:16">addr</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:29">real_start</name></expr>;</init> <condition pos:start="41:32" pos:end="41:44"><expr pos:start="41:32" pos:end="41:43"><name pos:start="41:32" pos:end="41:35">addr</name> <operator pos:start="41:37" pos:end="41:37">&lt;</operator> <name pos:start="41:39" pos:end="41:43">start</name></expr>;</condition> <incr pos:start="41:46" pos:end="41:69"><expr pos:start="41:46" pos:end="41:69"><name pos:start="41:46" pos:end="41:49">addr</name> <operator pos:start="41:51" pos:end="41:52">+=</operator> <name pos:start="41:54" pos:end="41:69">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="41:72" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:41">

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:16">prot</name> <operator pos:start="43:18" pos:end="43:19">|=</operator> <call pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:34">page_get_flags</name><argument_list pos:start="43:35" pos:end="43:40">(<argument pos:start="43:36" pos:end="43:39"><expr pos:start="43:36" pos:end="43:39"><name pos:start="43:36" pos:end="43:39">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:57">(<expr pos:start="47:13" pos:end="47:56"><name pos:start="47:13" pos:end="47:20">real_end</name> <operator pos:start="47:22" pos:end="47:23">==</operator> <name pos:start="47:25" pos:end="47:34">real_start</name> <operator pos:start="47:36" pos:end="47:36">+</operator> <name pos:start="47:38" pos:end="47:56">qemu_host_page_size</name></expr>)</condition> <block pos:start="47:59" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:27">

            <for pos:start="49:13" pos:end="53:13">for<control pos:start="49:16" pos:end="49:70">(<init pos:start="49:17" pos:end="49:27"><expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:20">addr</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:26">end</name></expr>;</init> <condition pos:start="49:29" pos:end="49:44"><expr pos:start="49:29" pos:end="49:43"><name pos:start="49:29" pos:end="49:32">addr</name> <operator pos:start="49:34" pos:end="49:34">&lt;</operator> <name pos:start="49:36" pos:end="49:43">real_end</name></expr>;</condition> <incr pos:start="49:46" pos:end="49:69"><expr pos:start="49:46" pos:end="49:69"><name pos:start="49:46" pos:end="49:49">addr</name> <operator pos:start="49:51" pos:end="49:52">+=</operator> <name pos:start="49:54" pos:end="49:69">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="49:72" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:45">

                <expr_stmt pos:start="51:17" pos:end="51:45"><expr pos:start="51:17" pos:end="51:44"><name pos:start="51:17" pos:end="51:20">prot</name> <operator pos:start="51:22" pos:end="51:23">|=</operator> <call pos:start="51:25" pos:end="51:44"><name pos:start="51:25" pos:end="51:38">page_get_flags</name><argument_list pos:start="51:39" pos:end="51:44">(<argument pos:start="51:40" pos:end="51:43"><expr pos:start="51:40" pos:end="51:43"><name pos:start="51:40" pos:end="51:43">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:15">end</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:26">real_end</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="61:46"><if pos:start="59:9" pos:end="61:46">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:16">prot</name> <operator pos:start="59:18" pos:end="59:19">!=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:46"><block_content pos:start="61:13" pos:end="61:46">

            <expr_stmt pos:start="61:13" pos:end="61:46"><expr pos:start="61:13" pos:end="61:45"><name pos:start="61:13" pos:end="61:22">real_start</name> <operator pos:start="61:24" pos:end="61:25">+=</operator> <name pos:start="61:27" pos:end="61:45">qemu_host_page_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:11">end</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <name pos:start="65:15" pos:end="65:22">real_end</name></expr>)</condition> <block pos:start="65:25" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:44">

        <expr_stmt pos:start="67:9" pos:end="67:17"><expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:12">prot</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="73:9">for<control pos:start="69:12" pos:end="69:66">(<init pos:start="69:13" pos:end="69:23"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:16">addr</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:22">end</name></expr>;</init> <condition pos:start="69:25" pos:end="69:40"><expr pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:28">addr</name> <operator pos:start="69:30" pos:end="69:30">&lt;</operator> <name pos:start="69:32" pos:end="69:39">real_end</name></expr>;</condition> <incr pos:start="69:42" pos:end="69:65"><expr pos:start="69:42" pos:end="69:65"><name pos:start="69:42" pos:end="69:45">addr</name> <operator pos:start="69:47" pos:end="69:48">+=</operator> <name pos:start="69:50" pos:end="69:65">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="69:68" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:41">

            <expr_stmt pos:start="71:13" pos:end="71:41"><expr pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:16">prot</name> <operator pos:start="71:18" pos:end="71:19">|=</operator> <call pos:start="71:21" pos:end="71:40"><name pos:start="71:21" pos:end="71:34">page_get_flags</name><argument_list pos:start="71:35" pos:end="71:40">(<argument pos:start="71:36" pos:end="71:39"><expr pos:start="71:36" pos:end="71:39"><name pos:start="71:36" pos:end="71:39">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="75:9" pos:end="77:44"><if pos:start="75:9" pos:end="77:44">if <condition pos:start="75:12" pos:end="75:22">(<expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:16">prot</name> <operator pos:start="75:18" pos:end="75:19">!=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:44"><block_content pos:start="77:13" pos:end="77:44">

            <expr_stmt pos:start="77:13" pos:end="77:44"><expr pos:start="77:13" pos:end="77:43"><name pos:start="77:13" pos:end="77:20">real_end</name> <operator pos:start="77:22" pos:end="77:23">-=</operator> <name pos:start="77:25" pos:end="77:43">qemu_host_page_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:27">/* unmap what we can */</comment>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:30">(<expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:18">real_start</name> <operator pos:start="85:20" pos:end="85:20">&lt;</operator> <name pos:start="85:22" pos:end="85:29">real_end</name></expr>)</condition> <block pos:start="85:32" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:23">

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:63"><name pos:start="87:15" pos:end="87:20">munmap</name><argument_list pos:start="87:21" pos:end="87:63">(<argument pos:start="87:22" pos:end="87:39"><expr pos:start="87:22" pos:end="87:39"><operator pos:start="87:22" pos:end="87:22">(</operator><name pos:start="87:23" pos:end="87:26">void</name> <operator pos:start="87:28" pos:end="87:28">*</operator><operator pos:start="87:29" pos:end="87:29">)</operator><name pos:start="87:30" pos:end="87:39">real_start</name></expr></argument>, <argument pos:start="87:42" pos:end="87:62"><expr pos:start="87:42" pos:end="87:62"><name pos:start="87:42" pos:end="87:49">real_end</name> <operator pos:start="87:51" pos:end="87:51">-</operator> <name pos:start="87:53" pos:end="87:62">real_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:23"><if pos:start="89:9" pos:end="91:23">if <condition pos:start="89:12" pos:end="89:21">(<expr pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:18">!=</operator> <literal type="number" pos:start="89:20" pos:end="89:20">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:23"><block_content pos:start="91:13" pos:end="91:23">

            <return pos:start="91:13" pos:end="91:23">return <expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:42"><expr pos:start="97:5" pos:end="97:41"><call pos:start="97:5" pos:end="97:41"><name pos:start="97:5" pos:end="97:18">page_set_flags</name><argument_list pos:start="97:19" pos:end="97:41">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24">start</name></expr></argument>, <argument pos:start="97:27" pos:end="97:37"><expr pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:31">start</name> <operator pos:start="97:33" pos:end="97:33">+</operator> <name pos:start="97:35" pos:end="97:37">len</name></expr></argument>, <argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><literal type="number" pos:start="97:40" pos:end="97:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
