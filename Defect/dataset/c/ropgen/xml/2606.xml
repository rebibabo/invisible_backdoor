<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2606.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">latm_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:65">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">out</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:47">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:57">AVPacket</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:64">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:21">

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">LATMContext</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:31">latmctx</name> <init pos:start="7:33" pos:end="7:50">= <expr pos:start="7:35" pos:end="7:50"><name pos:start="7:35" pos:end="7:50"><name pos:start="7:35" pos:end="7:39">avctx</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:50">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type>                 <name pos:start="9:25" pos:end="9:33">muxlength</name></decl>, <decl pos:start="9:36" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:36" pos:end="9:38">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">GetBitContext</name></type>       <name pos:start="11:25" pos:end="11:26">gb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><call pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:17">init_get_bits</name><argument_list pos:start="15:18" pos:end="15:52">(<argument pos:start="15:19" pos:end="15:21"><expr pos:start="15:19" pos:end="15:21"><operator pos:start="15:19" pos:end="15:19">&amp;</operator><name pos:start="15:20" pos:end="15:21">gb</name></expr></argument>, <argument pos:start="15:24" pos:end="15:34"><expr pos:start="15:24" pos:end="15:34"><name pos:start="15:24" pos:end="15:34"><name pos:start="15:24" pos:end="15:28">avpkt</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:34">data</name></name></expr></argument>, <argument pos:start="15:37" pos:end="15:51"><expr pos:start="15:37" pos:end="15:51"><name pos:start="15:37" pos:end="15:47"><name pos:start="15:37" pos:end="15:41">avpkt</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:47">size</name></name> <operator pos:start="15:49" pos:end="15:49">*</operator> <literal type="number" pos:start="15:51" pos:end="15:51">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:31">// check for LOAS sync word</comment>

    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:16">get_bits</name><argument_list pos:start="21:17" pos:end="21:25">(<argument pos:start="21:18" pos:end="21:20"><expr pos:start="21:18" pos:end="21:20"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:20">gb</name></expr></argument>, <argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><literal type="number" pos:start="21:23" pos:end="21:24">11</literal></expr></argument>)</argument_list></call> <operator pos:start="21:27" pos:end="21:28">!=</operator> <name pos:start="21:30" pos:end="21:43">LOAS_SYNC_WORD</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:13">muxlength</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:24">get_bits</name><argument_list pos:start="27:25" pos:end="27:33">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:28">gb</name></expr></argument>, <argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><literal type="number" pos:start="27:31" pos:end="27:32">13</literal></expr></argument>)</argument_list></call> <operator pos:start="27:35" pos:end="27:35">+</operator> <literal type="number" pos:start="27:37" pos:end="27:37">3</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="29:5" pos:end="29:58">// not enough data, the parser should have sorted this</comment>

    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:17">muxlength</name> <operator pos:start="31:19" pos:end="31:19">&gt;</operator> <name pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:25">avpkt</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">size</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:19"><if pos:start="37:5" pos:end="39:19">if <condition pos:start="37:8" pos:end="37:57">(<expr pos:start="37:9" pos:end="37:56"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:12">err</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:51"><name pos:start="37:16" pos:end="37:37">read_audio_mux_element</name><argument_list pos:start="37:38" pos:end="37:51">(<argument pos:start="37:39" pos:end="37:45"><expr pos:start="37:39" pos:end="37:45"><name pos:start="37:39" pos:end="37:45">latmctx</name></expr></argument>, <argument pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><operator pos:start="37:48" pos:end="37:48">&amp;</operator><name pos:start="37:49" pos:end="37:50">gb</name></expr></argument>)</argument_list></call><operator pos:start="37:52" pos:end="37:52">)</operator> <operator pos:start="37:54" pos:end="37:54">&lt;</operator> <literal type="number" pos:start="37:56" pos:end="37:56">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:19"><block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="71:5"><if pos:start="43:5" pos:end="71:5">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:29"><name pos:start="43:10" pos:end="43:16">latmctx</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:29">initialized</name></name></expr>)</condition> <block pos:start="43:32" pos:end="71:5">{<block_content pos:start="45:9" pos:end="69:9">

        <if_stmt pos:start="45:9" pos:end="69:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:30">(<expr pos:start="45:13" pos:end="45:29"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:29"><name pos:start="45:14" pos:end="45:18">avctx</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:29">extradata</name></name></expr>)</condition> <block pos:start="45:32" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:31">

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:26">got_frame_ptr</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:31">return <expr pos:start="49:20" pos:end="49:30"><name pos:start="49:20" pos:end="49:30"><name pos:start="49:20" pos:end="49:24">avpkt</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:30">size</name></name></expr>;</return>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="69:9">else <block pos:start="51:16" pos:end="69:9">{<block_content pos:start="53:13" pos:end="67:37">

            <expr_stmt pos:start="53:13" pos:end="53:57"><expr pos:start="53:13" pos:end="53:56"><call pos:start="53:13" pos:end="53:56"><name pos:start="53:13" pos:end="53:37">push_output_configuration</name><argument_list pos:start="53:38" pos:end="53:56">(<argument pos:start="53:39" pos:end="53:55"><expr pos:start="53:39" pos:end="53:55"><operator pos:start="53:39" pos:end="53:39">&amp;</operator><name pos:start="53:40" pos:end="53:55"><name pos:start="53:40" pos:end="53:46">latmctx</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:55">aac_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="65:13"><if pos:start="55:13" pos:end="65:13">if <condition pos:start="55:16" pos:end="59:71">(<expr pos:start="55:17" pos:end="59:70"><operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:20">err</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="59:65"><name pos:start="55:24" pos:end="55:51">decode_audio_specific_config</name><argument_list pos:start="55:52" pos:end="59:65">(

                    <argument pos:start="57:21" pos:end="57:37"><expr pos:start="57:21" pos:end="57:37"><operator pos:start="57:21" pos:end="57:21">&amp;</operator><name pos:start="57:22" pos:end="57:37"><name pos:start="57:22" pos:end="57:28">latmctx</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:37">aac_ctx</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:44"><expr pos:start="57:40" pos:end="57:44"><name pos:start="57:40" pos:end="57:44">avctx</name></expr></argument>, <argument pos:start="57:47" pos:end="57:74"><expr pos:start="57:47" pos:end="57:74"><operator pos:start="57:47" pos:end="57:47">&amp;</operator><name pos:start="57:48" pos:end="57:69"><name pos:start="57:48" pos:end="57:54">latmctx</name><operator pos:start="57:55" pos:end="57:56">-&gt;</operator><name pos:start="57:57" pos:end="57:63">aac_ctx</name><operator pos:start="57:64" pos:end="57:64">.</operator><name pos:start="57:65" pos:end="57:66">oc</name><index pos:start="57:67" pos:end="57:69">[<expr pos:start="57:68" pos:end="57:68"><literal type="number" pos:start="57:68" pos:end="57:68">1</literal></expr>]</index></name><operator pos:start="57:70" pos:end="57:70">.</operator><name pos:start="57:71" pos:end="57:74">m4ac</name></expr></argument>,

                    <argument pos:start="59:21" pos:end="59:36"><expr pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:25">avctx</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:36">extradata</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:61"><expr pos:start="59:39" pos:end="59:61"><name pos:start="59:39" pos:end="59:59"><name pos:start="59:39" pos:end="59:43">avctx</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:59">extradata_size</name></name><operator pos:start="59:60" pos:end="59:60">*</operator><literal type="number" pos:start="59:61" pos:end="59:61">8</literal></expr></argument>, <argument pos:start="59:64" pos:end="59:64"><expr pos:start="59:64" pos:end="59:64"><literal type="number" pos:start="59:64" pos:end="59:64">1</literal></expr></argument>)</argument_list></call><operator pos:start="59:66" pos:end="59:66">)</operator> <operator pos:start="59:68" pos:end="59:68">&lt;</operator> <literal type="number" pos:start="59:70" pos:end="59:70">0</literal></expr>)</condition> <block pos:start="59:73" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:27">

                <expr_stmt pos:start="61:17" pos:end="61:60"><expr pos:start="61:17" pos:end="61:59"><call pos:start="61:17" pos:end="61:59"><name pos:start="61:17" pos:end="61:40">pop_output_configuration</name><argument_list pos:start="61:41" pos:end="61:59">(<argument pos:start="61:42" pos:end="61:58"><expr pos:start="61:42" pos:end="61:58"><operator pos:start="61:42" pos:end="61:42">&amp;</operator><name pos:start="61:43" pos:end="61:58"><name pos:start="61:43" pos:end="61:49">latmctx</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:58">aac_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:27">return <expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:19">latmctx</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:32">initialized</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <literal type="number" pos:start="67:36" pos:end="67:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="85:5"><if pos:start="75:5" pos:end="85:5">if <condition pos:start="75:8" pos:end="75:36">(<expr pos:start="75:9" pos:end="75:35"><call pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:17">show_bits</name><argument_list pos:start="75:18" pos:end="75:26">(<argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><operator pos:start="75:19" pos:end="75:19">&amp;</operator><name pos:start="75:20" pos:end="75:21">gb</name></expr></argument>, <argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><literal type="number" pos:start="75:24" pos:end="75:25">12</literal></expr></argument>)</argument_list></call> <operator pos:start="75:28" pos:end="75:29">==</operator> <literal type="number" pos:start="75:31" pos:end="75:35">0xfff</literal></expr>)</condition> <block pos:start="75:38" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:35">

        <expr_stmt pos:start="77:9" pos:end="81:31"><expr pos:start="77:9" pos:end="81:30"><call pos:start="77:9" pos:end="81:30"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="81:30">(<argument pos:start="77:16" pos:end="77:37"><expr pos:start="77:16" pos:end="77:37"><name pos:start="77:16" pos:end="77:37"><name pos:start="77:16" pos:end="77:22">latmctx</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:31">aac_ctx</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:37">avctx</name></name></expr></argument>, <argument pos:start="77:40" pos:end="77:51"><expr pos:start="77:40" pos:end="77:51"><name pos:start="77:40" pos:end="77:51">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="79:16" pos:end="81:29"><expr pos:start="79:16" pos:end="81:29"><literal type="string" pos:start="79:16" pos:end="79:75">"ADTS header detected, probably as result of configuration "</literal>

               <literal type="string" pos:start="81:16" pos:end="81:29">"misparsing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:19"><if pos:start="89:5" pos:end="91:19">if <condition pos:start="89:8" pos:end="89:73">(<expr pos:start="89:9" pos:end="89:72"><operator pos:start="89:9" pos:end="89:9">(</operator><name pos:start="89:10" pos:end="89:12">err</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:67"><name pos:start="89:16" pos:end="89:35">aac_decode_frame_int</name><argument_list pos:start="89:36" pos:end="89:67">(<argument pos:start="89:37" pos:end="89:41"><expr pos:start="89:37" pos:end="89:41"><name pos:start="89:37" pos:end="89:41">avctx</name></expr></argument>, <argument pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:46">out</name></expr></argument>, <argument pos:start="89:49" pos:end="89:61"><expr pos:start="89:49" pos:end="89:61"><name pos:start="89:49" pos:end="89:61">got_frame_ptr</name></expr></argument>, <argument pos:start="89:64" pos:end="89:66"><expr pos:start="89:64" pos:end="89:66"><operator pos:start="89:64" pos:end="89:64">&amp;</operator><name pos:start="89:65" pos:end="89:66">gb</name></expr></argument>)</argument_list></call><operator pos:start="89:68" pos:end="89:68">)</operator> <operator pos:start="89:70" pos:end="89:70">&lt;</operator> <literal type="number" pos:start="89:72" pos:end="89:72">0</literal></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:19"><block_content pos:start="91:9" pos:end="91:19">

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="95:5" pos:end="95:21">return <expr pos:start="95:12" pos:end="95:20"><name pos:start="95:12" pos:end="95:20">muxlength</name></expr>;</return>

</block_content>}</block></function>
</unit>
