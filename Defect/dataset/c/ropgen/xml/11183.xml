<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11183.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_dec3</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:27">AVAudioServiceType</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:32">ast</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">eac3info</name></decl>, <decl pos:start="9:19" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:23">acmod</name></decl>, <decl pos:start="9:26" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:30">lfeon</name></decl>, <decl pos:start="9:33" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:37">bsmod</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:44"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:44">[<expr pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name><operator pos:start="17:42" pos:end="17:42">-</operator><literal type="number" pos:start="17:43" pos:end="17:43">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:74"><expr pos:start="21:5" pos:end="23:73"><name pos:start="21:5" pos:end="21:7">ast</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator>enum <name pos:start="21:17" pos:end="21:34">AVAudioServiceType</name><operator pos:start="21:35" pos:end="21:35">*</operator><operator pos:start="21:36" pos:end="21:36">)</operator><call pos:start="21:37" pos:end="23:73"><name pos:start="21:37" pos:end="21:59">ff_stream_new_side_data</name><argument_list pos:start="21:60" pos:end="23:73">(<argument pos:start="21:61" pos:end="21:62"><expr pos:start="21:61" pos:end="21:62"><name pos:start="21:61" pos:end="21:62">st</name></expr></argument>, <argument pos:start="21:65" pos:end="21:94"><expr pos:start="21:65" pos:end="21:94"><name pos:start="21:65" pos:end="21:94">AV_PKT_DATA_AUDIO_SERVICE_TYPE</name></expr></argument>,

                                                            <argument pos:start="23:61" pos:end="23:72"><expr pos:start="23:61" pos:end="23:72"><sizeof pos:start="23:61" pos:end="23:72">sizeof<argument_list pos:start="23:67" pos:end="23:72">(<argument pos:start="23:68" pos:end="23:71"><expr pos:start="23:68" pos:end="23:71"><operator pos:start="23:68" pos:end="23:68">*</operator><name pos:start="23:69" pos:end="23:71">ast</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">ast</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="35:36">/* No need to parse fields for additional independent substreams and its

     * associated dependent substreams since libavcodec's E-AC-3 decoder

     * does not support them yet. */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><call pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:13">avio_rb16</name><argument_list pos:start="37:14" pos:end="37:17">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:20" pos:end="37:50">/* data_rate and num_ind_sub */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:12">eac3info</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:24">avio_rb24</name><argument_list pos:start="39:25" pos:end="39:28">(<argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:9">bsmod</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:21">eac3info</name> <operator pos:start="41:23" pos:end="41:24">&gt;&gt;</operator> <literal type="number" pos:start="41:26" pos:end="41:27">12</literal><operator pos:start="41:28" pos:end="41:28">)</operator> <operator pos:start="41:30" pos:end="41:30">&amp;</operator> <literal type="number" pos:start="41:32" pos:end="41:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:9">acmod</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:21">eac3info</name> <operator pos:start="43:23" pos:end="43:24">&gt;&gt;</operator>  <literal type="number" pos:start="43:27" pos:end="43:27">9</literal><operator pos:start="43:28" pos:end="43:28">)</operator> <operator pos:start="43:30" pos:end="43:30">&amp;</operator> <literal type="number" pos:start="43:32" pos:end="43:34">0x7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:9">lfeon</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:21">eac3info</name> <operator pos:start="45:23" pos:end="45:24">&gt;&gt;</operator>  <literal type="number" pos:start="45:27" pos:end="45:27">8</literal><operator pos:start="45:28" pos:end="45:28">)</operator> <operator pos:start="45:30" pos:end="45:30">&amp;</operator> <literal type="number" pos:start="45:32" pos:end="45:34">0x1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:69"><expr pos:start="47:5" pos:end="47:68"><name pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:6">st</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:13">codec</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:29">channel_layout</name></name> <operator pos:start="47:31" pos:end="47:31">=</operator> <name pos:start="47:33" pos:end="47:68"><name pos:start="47:33" pos:end="47:61">avpriv_ac3_channel_layout_tab</name><index pos:start="47:62" pos:end="47:68">[<expr pos:start="47:63" pos:end="47:67"><name pos:start="47:63" pos:end="47:67">acmod</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:57"><if pos:start="49:5" pos:end="51:57">if <condition pos:start="49:8" pos:end="49:14">(<expr pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:13">lfeon</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:57"><block_content pos:start="51:9" pos:end="51:57">

        <expr_stmt pos:start="51:9" pos:end="51:57"><expr pos:start="51:9" pos:end="51:56"><name pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:10">st</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">codec</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:33">channel_layout</name></name> <operator pos:start="51:35" pos:end="51:36">|=</operator> <name pos:start="51:38" pos:end="51:56">AV_CH_LOW_FREQUENCY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:87"><expr pos:start="53:5" pos:end="53:86"><name pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">codec</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:23">channels</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:86"><name pos:start="53:27" pos:end="53:59">av_get_channel_layout_nb_channels</name><argument_list pos:start="53:60" pos:end="53:86">(<argument pos:start="53:61" pos:end="53:85"><expr pos:start="53:61" pos:end="53:85"><name pos:start="53:61" pos:end="53:85"><name pos:start="53:61" pos:end="53:62">st</name><operator pos:start="53:63" pos:end="53:64">-&gt;</operator><name pos:start="53:65" pos:end="53:69">codec</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:85">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><operator pos:start="55:5" pos:end="55:5">*</operator><name pos:start="55:6" pos:end="55:8">ast</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:16">bsmod</name></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:45"><if pos:start="57:5" pos:end="59:45">if <condition pos:start="57:8" pos:end="57:48">(<expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:10">st</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">channels</name></name> <operator pos:start="57:29" pos:end="57:29">&gt;</operator> <literal type="number" pos:start="57:31" pos:end="57:31">1</literal> <operator pos:start="57:33" pos:end="57:34">&amp;&amp;</operator> <name pos:start="57:36" pos:end="57:40">bsmod</name> <operator pos:start="57:42" pos:end="57:43">==</operator> <literal type="number" pos:start="57:45" pos:end="57:47">0x7</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:45"><block_content pos:start="59:9" pos:end="59:45">

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:12">ast</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:44">AV_AUDIO_SERVICE_TYPE_KARAOKE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:41"><expr pos:start="63:5" pos:end="63:40"><name pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:6">st</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:13">codec</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:33">audio_service_type</name></name> <operator pos:start="63:35" pos:end="63:35">=</operator> <operator pos:start="63:37" pos:end="63:37">*</operator><name pos:start="63:38" pos:end="63:40">ast</name></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
