<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5952.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:5">GList</name> <modifier pos:start="1:7" pos:end="1:7">*</modifier></type><name pos:start="1:8" pos:end="1:34">g_list_insert_sorted_merged</name><parameter_list pos:start="1:35" pos:end="3:53">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:40">GList</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">list</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">gpointer</name></type> <name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:52"><decl pos:start="3:36" pos:end="3:52"><type pos:start="3:36" pos:end="3:52"><name pos:start="3:36" pos:end="3:47">GCompareFunc</name></type> <name pos:start="3:49" pos:end="3:52">func</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:16">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">GList</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:12">l</name></decl>, <decl pos:start="7:15" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">next</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Range</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:12">r</name></decl>, <decl pos:start="9:15" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">nextr</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">list</name></expr>)</condition> <block pos:start="13:16" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:54"><expr pos:start="15:9" pos:end="15:53"><name pos:start="15:9" pos:end="15:12">list</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:53"><name pos:start="15:16" pos:end="15:35">g_list_insert_sorted</name><argument_list pos:start="15:36" pos:end="15:53">(<argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">list</name></expr></argument>, <argument pos:start="15:43" pos:end="15:46"><expr pos:start="15:43" pos:end="15:46"><name pos:start="15:43" pos:end="15:46">data</name></expr></argument>, <argument pos:start="15:49" pos:end="15:52"><expr pos:start="15:49" pos:end="15:52"><name pos:start="15:49" pos:end="15:52">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">list</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:9">nextr</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:16">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:13"><expr pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">l</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <name pos:start="25:9" pos:end="25:12">list</name></expr>;</expr_stmt>

    <while pos:start="27:5" pos:end="55:5">while <condition pos:start="27:11" pos:end="27:35">(<expr pos:start="27:12" pos:end="27:34"><name pos:start="27:12" pos:end="27:12">l</name> <operator pos:start="27:14" pos:end="27:15">&amp;&amp;</operator> <name pos:start="27:17" pos:end="27:17">l</name> <operator pos:start="27:19" pos:end="27:20">!=</operator> <name pos:start="27:22" pos:end="27:25">next</name> <operator pos:start="27:27" pos:end="27:28">&amp;&amp;</operator> <name pos:start="27:30" pos:end="27:34">nextr</name></expr>)</condition> <block pos:start="27:37" pos:end="55:5">{<block_content pos:start="29:9" pos:end="53:9">

        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">r</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:13">l</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">data</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="53:9"><if pos:start="31:9" pos:end="49:9">if <condition pos:start="31:12" pos:end="31:39">(<expr pos:start="31:13" pos:end="31:38"><call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:28">ranges_can_merge</name><argument_list pos:start="31:29" pos:end="31:38">(<argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">r</name></expr></argument>, <argument pos:start="31:33" pos:end="31:37"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:37">nextr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:41" pos:end="49:9">{<block_content pos:start="33:13" pos:end="47:13">

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><call pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:23">range_merge</name><argument_list pos:start="33:24" pos:end="33:33">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">r</name></expr></argument>, <argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">nextr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:13">l</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:43"><name pos:start="35:17" pos:end="35:34">g_list_remove_link</name><argument_list pos:start="35:35" pos:end="35:43">(<argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">l</name></expr></argument>, <argument pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:42"><name pos:start="35:39" pos:end="35:42">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:16">next</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:33"><name pos:start="37:20" pos:end="37:30">g_list_next</name><argument_list pos:start="37:31" pos:end="37:33">(<argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:21">(<expr pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:20">next</name></expr>)</condition> <block pos:start="39:23" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:35">

                <expr_stmt pos:start="41:17" pos:end="41:35"><expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:21">nextr</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:34"><name pos:start="41:25" pos:end="41:28">next</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">data</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="47:13">else <block pos:start="43:20" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:29">

                <expr_stmt pos:start="45:17" pos:end="45:29"><expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:21">nextr</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:28">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="53:9">else <block pos:start="49:16" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:31">

            <expr_stmt pos:start="51:13" pos:end="51:31"><expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:13">l</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:27">g_list_next</name><argument_list pos:start="51:28" pos:end="51:30">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:11">(<expr pos:start="59:9" pos:end="59:10"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:10">l</name></expr>)</condition> <block pos:start="59:13" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:54">

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:12">list</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:53"><name pos:start="61:16" pos:end="61:35">g_list_insert_sorted</name><argument_list pos:start="61:36" pos:end="61:53">(<argument pos:start="61:37" pos:end="61:40"><expr pos:start="61:37" pos:end="61:40"><name pos:start="61:37" pos:end="61:40">list</name></expr></argument>, <argument pos:start="61:43" pos:end="61:46"><expr pos:start="61:43" pos:end="61:46"><name pos:start="61:43" pos:end="61:46">data</name></expr></argument>, <argument pos:start="61:49" pos:end="61:52"><expr pos:start="61:49" pos:end="61:52"><name pos:start="61:49" pos:end="61:52">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:16">return <expr pos:start="67:12" pos:end="67:15"><name pos:start="67:12" pos:end="67:15">list</name></expr>;</return>

</block_content>}</block></function>
</unit>
