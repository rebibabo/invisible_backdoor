<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25440.c" pos:tabs="8"><function pos:start="1:1" pos:end="202:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">kempf_decode_tile</name><parameter_list pos:start="1:29" pos:end="3:62">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">G2MContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:54">tile_x</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">tile_y</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">src</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:61">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="202:1">{<block_content pos:start="7:5" pos:end="200:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">hdr</name></decl>, <decl pos:start="9:14" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:18">zsize</name></decl>, <decl pos:start="9:21" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:24">npal</name></decl>, <decl pos:start="9:27" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:30">tidx</name> <init pos:start="9:32" pos:end="9:35">= <expr pos:start="9:34" pos:end="9:35"><operator pos:start="9:34" pos:end="9:34">-</operator><literal type="number" pos:start="9:35" pos:end="9:35">1</literal></expr></init></decl>, <decl pos:start="9:38" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:40">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">src_end</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:32">src</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:43">src_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:15">pal</name><index pos:start="15:16" pos:end="15:20">[<expr pos:start="15:17" pos:end="15:19"><literal type="number" pos:start="15:17" pos:end="15:19">768</literal></expr>]</index></name></decl>, <decl pos:start="15:23" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:23" pos:end="15:31"><name pos:start="15:23" pos:end="15:28">transp</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:54"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">uLongf</name></type> <name pos:start="17:12" pos:end="17:15">dlen</name> <init pos:start="17:17" pos:end="17:54">= <expr pos:start="17:19" pos:end="17:54"><operator pos:start="17:19" pos:end="17:19">(</operator><name pos:start="17:20" pos:end="17:32"><name pos:start="17:20" pos:end="17:20">c</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:32">tile_width</name></name> <operator pos:start="17:34" pos:end="17:34">+</operator> <literal type="number" pos:start="17:36" pos:end="17:36">1</literal><operator pos:start="17:37" pos:end="17:37">)</operator> <operator pos:start="17:39" pos:end="17:39">*</operator> <name pos:start="17:41" pos:end="17:54"><name pos:start="17:41" pos:end="17:41">c</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:54">tile_height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">sub_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">nblocks</name></decl>, <decl pos:start="21:18" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:18" pos:end="21:24">cblocks</name></decl>, <decl pos:start="21:27" pos:end="21:33"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:27" pos:end="21:33">bstride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">bits</name></decl>, <decl pos:start="23:15" pos:end="23:20"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:20">bitbuf</name></decl>, <decl pos:start="23:23" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:23" pos:end="23:27">coded</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="27:64"><decl pos:start="25:5" pos:end="27:63"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">uint8_t</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:16">dst</name> <init pos:start="25:18" pos:end="27:63">= <expr pos:start="25:20" pos:end="27:63"><name pos:start="25:20" pos:end="25:30"><name pos:start="25:20" pos:end="25:20">c</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:30">framebuf</name></name> <operator pos:start="25:32" pos:end="25:32">+</operator> <name pos:start="25:34" pos:end="25:39">tile_x</name> <operator pos:start="25:41" pos:end="25:41">*</operator> <name pos:start="25:43" pos:end="25:55"><name pos:start="25:43" pos:end="25:43">c</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:55">tile_width</name></name> <operator pos:start="25:57" pos:end="25:57">*</operator> <literal type="number" pos:start="25:59" pos:end="25:61">3</literal> <operator pos:start="25:61" pos:end="25:61">+</operator>

                   <name pos:start="27:20" pos:end="27:25">tile_y</name> <operator pos:start="27:27" pos:end="27:27">*</operator> <name pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:29">c</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:42">tile_height</name></name> <operator pos:start="27:44" pos:end="27:44">*</operator> <name pos:start="27:46" pos:end="27:63"><name pos:start="27:46" pos:end="27:46">c</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:63">framebuf_stride</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="36:71"><if pos:start="31:5" pos:end="36:71">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:16">src_size</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:20">2</literal></expr>)</condition><block type="pseudo" pos:start="36:5" pos:end="36:71"><block_content pos:start="36:5" pos:end="36:71">




    <expr_stmt pos:start="36:5" pos:end="36:71"><expr pos:start="36:5" pos:end="36:70"><name pos:start="36:5" pos:end="36:9">width</name>  <operator pos:start="36:12" pos:end="36:12">=</operator> <call pos:start="36:14" pos:end="36:70"><name pos:start="36:14" pos:end="36:18">FFMIN</name><argument_list pos:start="36:19" pos:end="36:70">(<argument pos:start="36:20" pos:end="36:53"><expr pos:start="36:20" pos:end="36:53"><name pos:start="36:20" pos:end="36:27"><name pos:start="36:20" pos:end="36:20">c</name><operator pos:start="36:21" pos:end="36:22">-&gt;</operator><name pos:start="36:23" pos:end="36:27">width</name></name>  <operator pos:start="36:30" pos:end="36:30">-</operator> <name pos:start="36:32" pos:end="36:37">tile_x</name> <operator pos:start="36:39" pos:end="36:39">*</operator> <name pos:start="36:41" pos:end="36:53"><name pos:start="36:41" pos:end="36:41">c</name><operator pos:start="36:42" pos:end="36:43">-&gt;</operator><name pos:start="36:44" pos:end="36:53">tile_width</name></name></expr></argument>,  <argument pos:start="36:57" pos:end="36:69"><expr pos:start="36:57" pos:end="36:69"><name pos:start="36:57" pos:end="36:69"><name pos:start="36:57" pos:end="36:57">c</name><operator pos:start="36:58" pos:end="36:59">-&gt;</operator><name pos:start="36:60" pos:end="36:69">tile_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:72"><expr pos:start="38:5" pos:end="38:71"><name pos:start="38:5" pos:end="38:10">height</name> <operator pos:start="38:12" pos:end="38:12">=</operator> <call pos:start="38:14" pos:end="38:71"><name pos:start="38:14" pos:end="38:18">FFMIN</name><argument_list pos:start="38:19" pos:end="38:71">(<argument pos:start="38:20" pos:end="38:54"><expr pos:start="38:20" pos:end="38:54"><name pos:start="38:20" pos:end="38:28"><name pos:start="38:20" pos:end="38:20">c</name><operator pos:start="38:21" pos:end="38:22">-&gt;</operator><name pos:start="38:23" pos:end="38:28">height</name></name> <operator pos:start="38:30" pos:end="38:30">-</operator> <name pos:start="38:32" pos:end="38:37">tile_y</name> <operator pos:start="38:39" pos:end="38:39">*</operator> <name pos:start="38:41" pos:end="38:54"><name pos:start="38:41" pos:end="38:41">c</name><operator pos:start="38:42" pos:end="38:43">-&gt;</operator><name pos:start="38:44" pos:end="38:54">tile_height</name></name></expr></argument>, <argument pos:start="38:57" pos:end="38:70"><expr pos:start="38:57" pos:end="38:70"><name pos:start="38:57" pos:end="38:70"><name pos:start="38:57" pos:end="38:57">c</name><operator pos:start="38:58" pos:end="38:59">-&gt;</operator><name pos:start="38:60" pos:end="38:70">tile_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="42:5" pos:end="42:17"><expr pos:start="42:5" pos:end="42:16"><name pos:start="42:5" pos:end="42:7">hdr</name> <operator pos:start="42:9" pos:end="42:9">=</operator> <operator pos:start="42:11" pos:end="42:11">*</operator><name pos:start="42:12" pos:end="42:14">src</name><operator pos:start="42:15" pos:end="42:16">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="44:5" pos:end="44:24"><expr pos:start="44:5" pos:end="44:23"><name pos:start="44:5" pos:end="44:12">sub_type</name> <operator pos:start="44:14" pos:end="44:14">=</operator> <name pos:start="44:16" pos:end="44:18">hdr</name> <operator pos:start="44:20" pos:end="44:21">&gt;&gt;</operator> <literal type="number" pos:start="44:23" pos:end="44:23">5</literal></expr>;</expr_stmt>

    <if_stmt pos:start="46:5" pos:end="68:5"><if pos:start="46:5" pos:end="62:5">if <condition pos:start="46:8" pos:end="46:22">(<expr pos:start="46:9" pos:end="46:21"><name pos:start="46:9" pos:end="46:16">sub_type</name> <operator pos:start="46:18" pos:end="46:19">==</operator> <literal type="number" pos:start="46:21" pos:end="46:21">0</literal></expr>)</condition> <block pos:start="46:24" pos:end="62:5">{<block_content pos:start="48:9" pos:end="60:17">

        <decl_stmt pos:start="48:9" pos:end="48:14"><decl pos:start="48:9" pos:end="48:13"><type pos:start="48:9" pos:end="48:11"><name pos:start="48:9" pos:end="48:11">int</name></type> <name pos:start="48:13" pos:end="48:13">j</name></decl>;</decl_stmt>

        <expr_stmt pos:start="50:9" pos:end="50:31"><expr pos:start="50:9" pos:end="50:30"><call pos:start="50:9" pos:end="50:30"><name pos:start="50:9" pos:end="50:14">memcpy</name><argument_list pos:start="50:15" pos:end="50:30">(<argument pos:start="50:16" pos:end="50:21"><expr pos:start="50:16" pos:end="50:21"><name pos:start="50:16" pos:end="50:21">transp</name></expr></argument>, <argument pos:start="50:24" pos:end="50:26"><expr pos:start="50:24" pos:end="50:26"><name pos:start="50:24" pos:end="50:26">src</name></expr></argument>, <argument pos:start="50:29" pos:end="50:29"><expr pos:start="50:29" pos:end="50:29"><literal type="number" pos:start="50:29" pos:end="50:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="52:9" pos:end="52:17"><expr pos:start="52:9" pos:end="52:16"><name pos:start="52:9" pos:end="52:11">src</name> <operator pos:start="52:13" pos:end="52:14">+=</operator> <literal type="number" pos:start="52:16" pos:end="52:16">3</literal></expr>;</expr_stmt>

        <for pos:start="54:9" pos:end="58:47">for <control pos:start="54:13" pos:end="54:63">(<init pos:start="54:14" pos:end="54:19"><expr pos:start="54:14" pos:end="54:18"><name pos:start="54:14" pos:end="54:14">j</name> <operator pos:start="54:16" pos:end="54:16">=</operator> <literal type="number" pos:start="54:18" pos:end="54:18">0</literal></expr>;</init> <condition pos:start="54:21" pos:end="54:31"><expr pos:start="54:21" pos:end="54:30"><name pos:start="54:21" pos:end="54:21">j</name> <operator pos:start="54:23" pos:end="54:23">&lt;</operator> <name pos:start="54:25" pos:end="54:30">height</name></expr>;</condition> <incr pos:start="54:33" pos:end="54:62"><expr pos:start="54:33" pos:end="54:35"><name pos:start="54:33" pos:end="54:33">j</name><operator pos:start="54:34" pos:end="54:35">++</operator></expr><operator pos:start="54:36" pos:end="54:36">,</operator> <expr pos:start="54:38" pos:end="54:62"><name pos:start="54:38" pos:end="54:40">dst</name> <operator pos:start="54:42" pos:end="54:43">+=</operator> <name pos:start="54:45" pos:end="54:62"><name pos:start="54:45" pos:end="54:45">c</name><operator pos:start="54:46" pos:end="54:47">-&gt;</operator><name pos:start="54:48" pos:end="54:62">framebuf_stride</name></name></expr></incr>)</control><block type="pseudo" pos:start="56:13" pos:end="58:47"><block_content pos:start="56:13" pos:end="58:47">

            <for pos:start="56:13" pos:end="58:47">for <control pos:start="56:17" pos:end="56:39">(<init pos:start="56:18" pos:end="56:23"><expr pos:start="56:18" pos:end="56:22"><name pos:start="56:18" pos:end="56:18">i</name> <operator pos:start="56:20" pos:end="56:20">=</operator> <literal type="number" pos:start="56:22" pos:end="56:22">0</literal></expr>;</init> <condition pos:start="56:25" pos:end="56:34"><expr pos:start="56:25" pos:end="56:33"><name pos:start="56:25" pos:end="56:25">i</name> <operator pos:start="56:27" pos:end="56:27">&lt;</operator> <name pos:start="56:29" pos:end="56:33">width</name></expr>;</condition> <incr pos:start="56:36" pos:end="56:38"><expr pos:start="56:36" pos:end="56:38"><name pos:start="56:36" pos:end="56:36">i</name><operator pos:start="56:37" pos:end="56:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="58:17" pos:end="58:47"><block_content pos:start="58:17" pos:end="58:47">

                <expr_stmt pos:start="58:17" pos:end="58:47"><expr pos:start="58:17" pos:end="58:46"><call pos:start="58:17" pos:end="58:46"><name pos:start="58:17" pos:end="58:22">memcpy</name><argument_list pos:start="58:23" pos:end="58:46">(<argument pos:start="58:24" pos:end="58:34"><expr pos:start="58:24" pos:end="58:34"><name pos:start="58:24" pos:end="58:26">dst</name> <operator pos:start="58:28" pos:end="58:28">+</operator> <name pos:start="58:30" pos:end="58:30">i</name> <operator pos:start="58:32" pos:end="58:32">*</operator> <literal type="number" pos:start="58:34" pos:end="58:34">3</literal></expr></argument>, <argument pos:start="58:37" pos:end="58:42"><expr pos:start="58:37" pos:end="58:42"><name pos:start="58:37" pos:end="58:42">transp</name></expr></argument>, <argument pos:start="58:45" pos:end="58:45"><expr pos:start="58:45" pos:end="58:45"><literal type="number" pos:start="58:45" pos:end="58:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <return pos:start="60:9" pos:end="60:17">return <expr pos:start="60:16" pos:end="60:16"><literal type="number" pos:start="60:16" pos:end="60:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="62:7" pos:end="68:5">else if <condition pos:start="62:15" pos:end="62:29">(<expr pos:start="62:16" pos:end="62:28"><name pos:start="62:16" pos:end="62:23">sub_type</name> <operator pos:start="62:25" pos:end="62:26">==</operator> <literal type="number" pos:start="62:28" pos:end="62:28">1</literal></expr>)</condition> <block pos:start="62:31" pos:end="68:5">{<block_content pos:start="64:9" pos:end="66:71">

        <return pos:start="64:9" pos:end="66:71">return <expr pos:start="64:16" pos:end="66:70"><call pos:start="64:16" pos:end="66:70"><name pos:start="64:16" pos:end="64:30">jpg_decode_data</name><argument_list pos:start="64:31" pos:end="66:70">(<argument pos:start="64:32" pos:end="64:37"><expr pos:start="64:32" pos:end="64:37"><operator pos:start="64:32" pos:end="64:32">&amp;</operator><name pos:start="64:33" pos:end="64:37"><name pos:start="64:33" pos:end="64:33">c</name><operator pos:start="64:34" pos:end="64:35">-&gt;</operator><name pos:start="64:36" pos:end="64:37">jc</name></name></expr></argument>, <argument pos:start="64:40" pos:end="64:44"><expr pos:start="64:40" pos:end="64:44"><name pos:start="64:40" pos:end="64:44">width</name></expr></argument>, <argument pos:start="64:47" pos:end="64:52"><expr pos:start="64:47" pos:end="64:52"><name pos:start="64:47" pos:end="64:52">height</name></expr></argument>, <argument pos:start="64:55" pos:end="64:57"><expr pos:start="64:55" pos:end="64:57"><name pos:start="64:55" pos:end="64:57">src</name></expr></argument>, <argument pos:start="64:60" pos:end="64:72"><expr pos:start="64:60" pos:end="64:72"><name pos:start="64:60" pos:end="64:66">src_end</name> <operator pos:start="64:68" pos:end="64:68">-</operator> <name pos:start="64:70" pos:end="64:72">src</name></expr></argument>,

                               <argument pos:start="66:32" pos:end="66:34"><expr pos:start="66:32" pos:end="66:34"><name pos:start="66:32" pos:end="66:34">dst</name></expr></argument>, <argument pos:start="66:37" pos:end="66:54"><expr pos:start="66:37" pos:end="66:54"><name pos:start="66:37" pos:end="66:54"><name pos:start="66:37" pos:end="66:37">c</name><operator pos:start="66:38" pos:end="66:39">-&gt;</operator><name pos:start="66:40" pos:end="66:54">framebuf_stride</name></name></expr></argument>, <argument pos:start="66:57" pos:end="66:60"><expr pos:start="66:57" pos:end="66:60"><name pos:start="66:57" pos:end="66:60">NULL</name></expr></argument>, <argument pos:start="66:63" pos:end="66:63"><expr pos:start="66:63" pos:end="66:63"><literal type="number" pos:start="66:63" pos:end="66:63">0</literal></expr></argument>, <argument pos:start="66:66" pos:end="66:66"><expr pos:start="66:66" pos:end="66:66"><literal type="number" pos:start="66:66" pos:end="66:66">0</literal></expr></argument>, <argument pos:start="66:69" pos:end="66:69"><expr pos:start="66:69" pos:end="66:69"><literal type="number" pos:start="66:69" pos:end="66:69">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="72:5" pos:end="78:5"><if pos:start="72:5" pos:end="78:5">if <condition pos:start="72:8" pos:end="72:22">(<expr pos:start="72:9" pos:end="72:21"><name pos:start="72:9" pos:end="72:16">sub_type</name> <operator pos:start="72:18" pos:end="72:19">!=</operator> <literal type="number" pos:start="72:21" pos:end="72:21">2</literal></expr>)</condition> <block pos:start="72:24" pos:end="78:5">{<block_content pos:start="74:9" pos:end="76:17">

        <expr_stmt pos:start="74:9" pos:end="74:31"><expr pos:start="74:9" pos:end="74:30"><call pos:start="74:9" pos:end="74:30"><name pos:start="74:9" pos:end="74:14">memcpy</name><argument_list pos:start="74:15" pos:end="74:30">(<argument pos:start="74:16" pos:end="74:21"><expr pos:start="74:16" pos:end="74:21"><name pos:start="74:16" pos:end="74:21">transp</name></expr></argument>, <argument pos:start="74:24" pos:end="74:26"><expr pos:start="74:24" pos:end="74:26"><name pos:start="74:24" pos:end="74:26">src</name></expr></argument>, <argument pos:start="74:29" pos:end="74:29"><expr pos:start="74:29" pos:end="74:29"><literal type="number" pos:start="74:29" pos:end="74:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="76:9" pos:end="76:17"><expr pos:start="76:9" pos:end="76:16"><name pos:start="76:9" pos:end="76:11">src</name> <operator pos:start="76:13" pos:end="76:14">+=</operator> <literal type="number" pos:start="76:16" pos:end="76:16">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="80:5" pos:end="80:22"><expr pos:start="80:5" pos:end="80:21"><name pos:start="80:5" pos:end="80:8">npal</name> <operator pos:start="80:10" pos:end="80:10">=</operator> <operator pos:start="80:12" pos:end="80:12">*</operator><name pos:start="80:13" pos:end="80:15">src</name><operator pos:start="80:16" pos:end="80:17">++</operator> <operator pos:start="80:19" pos:end="80:19">+</operator> <literal type="number" pos:start="80:21" pos:end="80:21">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="84:5" pos:end="84:31"><expr pos:start="84:5" pos:end="84:30"><call pos:start="84:5" pos:end="84:30"><name pos:start="84:5" pos:end="84:10">memcpy</name><argument_list pos:start="84:11" pos:end="84:30">(<argument pos:start="84:12" pos:end="84:14"><expr pos:start="84:12" pos:end="84:14"><name pos:start="84:12" pos:end="84:14">pal</name></expr></argument>, <argument pos:start="84:17" pos:end="84:19"><expr pos:start="84:17" pos:end="84:19"><name pos:start="84:17" pos:end="84:19">src</name></expr></argument>, <argument pos:start="84:22" pos:end="84:29"><expr pos:start="84:22" pos:end="84:29"><name pos:start="84:22" pos:end="84:25">npal</name> <operator pos:start="84:27" pos:end="84:27">*</operator> <literal type="number" pos:start="84:29" pos:end="84:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="84:33" pos:end="84:48"><expr pos:start="84:33" pos:end="84:47"><name pos:start="84:33" pos:end="84:35">src</name> <operator pos:start="84:37" pos:end="84:38">+=</operator> <name pos:start="84:40" pos:end="84:43">npal</name> <operator pos:start="84:45" pos:end="84:45">*</operator> <literal type="number" pos:start="84:47" pos:end="84:47">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="86:5" pos:end="100:5"><if pos:start="86:5" pos:end="100:5">if <condition pos:start="86:8" pos:end="86:22">(<expr pos:start="86:9" pos:end="86:21"><name pos:start="86:9" pos:end="86:16">sub_type</name> <operator pos:start="86:18" pos:end="86:19">!=</operator> <literal type="number" pos:start="86:21" pos:end="86:21">2</literal></expr>)</condition> <block pos:start="86:24" pos:end="100:5">{<block_content pos:start="88:9" pos:end="98:9">

        <for pos:start="88:9" pos:end="98:9">for <control pos:start="88:13" pos:end="88:34">(<init pos:start="88:14" pos:end="88:19"><expr pos:start="88:14" pos:end="88:18"><name pos:start="88:14" pos:end="88:14">i</name> <operator pos:start="88:16" pos:end="88:16">=</operator> <literal type="number" pos:start="88:18" pos:end="88:18">0</literal></expr>;</init> <condition pos:start="88:21" pos:end="88:29"><expr pos:start="88:21" pos:end="88:28"><name pos:start="88:21" pos:end="88:21">i</name> <operator pos:start="88:23" pos:end="88:23">&lt;</operator> <name pos:start="88:25" pos:end="88:28">npal</name></expr>;</condition> <incr pos:start="88:31" pos:end="88:33"><expr pos:start="88:31" pos:end="88:33"><name pos:start="88:31" pos:end="88:31">i</name><operator pos:start="88:32" pos:end="88:33">++</operator></expr></incr>)</control> <block pos:start="88:36" pos:end="98:9">{<block_content pos:start="90:13" pos:end="96:13">

            <if_stmt pos:start="90:13" pos:end="96:13"><if pos:start="90:13" pos:end="96:13">if <condition pos:start="90:16" pos:end="90:48">(<expr pos:start="90:17" pos:end="90:47"><operator pos:start="90:17" pos:end="90:17">!</operator><call pos:start="90:18" pos:end="90:47"><name pos:start="90:18" pos:end="90:23">memcmp</name><argument_list pos:start="90:24" pos:end="90:47">(<argument pos:start="90:25" pos:end="90:35"><expr pos:start="90:25" pos:end="90:35"><name pos:start="90:25" pos:end="90:27">pal</name> <operator pos:start="90:29" pos:end="90:29">+</operator> <name pos:start="90:31" pos:end="90:31">i</name> <operator pos:start="90:33" pos:end="90:33">*</operator> <literal type="number" pos:start="90:35" pos:end="90:35">3</literal></expr></argument>, <argument pos:start="90:38" pos:end="90:43"><expr pos:start="90:38" pos:end="90:43"><name pos:start="90:38" pos:end="90:43">transp</name></expr></argument>, <argument pos:start="90:46" pos:end="90:46"><expr pos:start="90:46" pos:end="90:46"><literal type="number" pos:start="90:46" pos:end="90:46">3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="90:50" pos:end="96:13">{<block_content pos:start="92:16" pos:end="94:21">

               <expr_stmt pos:start="92:16" pos:end="92:24"><expr pos:start="92:16" pos:end="92:23"><name pos:start="92:16" pos:end="92:19">tidx</name> <operator pos:start="92:21" pos:end="92:21">=</operator> <name pos:start="92:23" pos:end="92:23">i</name></expr>;</expr_stmt>

               <break pos:start="94:16" pos:end="94:21">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="104:5" pos:end="106:17"><if pos:start="104:5" pos:end="106:17">if <condition pos:start="104:8" pos:end="104:26">(<expr pos:start="104:9" pos:end="104:25"><name pos:start="104:9" pos:end="104:15">src_end</name> <operator pos:start="104:17" pos:end="104:17">-</operator> <name pos:start="104:19" pos:end="104:21">src</name> <operator pos:start="104:23" pos:end="104:23">&lt;</operator> <literal type="number" pos:start="104:25" pos:end="104:25">2</literal></expr>)</condition><block type="pseudo" pos:start="106:9" pos:end="106:17"><block_content pos:start="106:9" pos:end="106:17">

        <return pos:start="106:9" pos:end="106:17">return <expr pos:start="106:16" pos:end="106:16"><literal type="number" pos:start="106:16" pos:end="106:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="108:5" pos:end="108:35"><expr pos:start="108:5" pos:end="108:34"><name pos:start="108:5" pos:end="108:9">zsize</name> <operator pos:start="108:11" pos:end="108:11">=</operator> <operator pos:start="108:13" pos:end="108:13">(</operator><name pos:start="108:14" pos:end="108:19"><name pos:start="108:14" pos:end="108:16">src</name><index pos:start="108:17" pos:end="108:19">[<expr pos:start="108:18" pos:end="108:18"><literal type="number" pos:start="108:18" pos:end="108:18">0</literal></expr>]</index></name> <operator pos:start="108:21" pos:end="108:22">&lt;&lt;</operator> <literal type="number" pos:start="108:24" pos:end="108:24">8</literal><operator pos:start="108:25" pos:end="108:25">)</operator> <operator pos:start="108:27" pos:end="108:27">|</operator> <name pos:start="108:29" pos:end="108:34"><name pos:start="108:29" pos:end="108:31">src</name><index pos:start="108:32" pos:end="108:34">[<expr pos:start="108:33" pos:end="108:33"><literal type="number" pos:start="108:33" pos:end="108:33">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="108:37" pos:end="108:45"><expr pos:start="108:37" pos:end="108:44"><name pos:start="108:37" pos:end="108:39">src</name> <operator pos:start="108:41" pos:end="108:42">+=</operator> <literal type="number" pos:start="108:44" pos:end="108:44">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="112:5" pos:end="117:54"><if pos:start="112:5" pos:end="117:54">if <condition pos:start="112:8" pos:end="112:48">(<expr pos:start="112:9" pos:end="112:47"><name pos:start="112:9" pos:end="112:15">src_end</name> <operator pos:start="112:17" pos:end="112:17">-</operator> <name pos:start="112:19" pos:end="112:21">src</name> <operator pos:start="112:23" pos:end="112:23">&lt;</operator> <name pos:start="112:25" pos:end="112:29">zsize</name> <operator pos:start="112:31" pos:end="112:31">+</operator> <operator pos:start="112:33" pos:end="112:33">(</operator><name pos:start="112:34" pos:end="112:41">sub_type</name> <operator pos:start="112:43" pos:end="112:44">!=</operator> <literal type="number" pos:start="112:46" pos:end="112:46">2</literal><operator pos:start="112:47" pos:end="112:47">)</operator></expr>)</condition><block type="pseudo" pos:start="117:5" pos:end="117:54"><block_content pos:start="117:5" pos:end="117:54">




    <expr_stmt pos:start="117:5" pos:end="117:54"><expr pos:start="117:5" pos:end="117:53"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:53"><name pos:start="117:11" pos:end="117:20">uncompress</name><argument_list pos:start="117:21" pos:end="117:53">(<argument pos:start="117:22" pos:end="117:33"><expr pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:22">c</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:33">kempf_buf</name></name></expr></argument>, <argument pos:start="117:36" pos:end="117:40"><expr pos:start="117:36" pos:end="117:40"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:40">dlen</name></expr></argument>, <argument pos:start="117:43" pos:end="117:45"><expr pos:start="117:43" pos:end="117:45"><name pos:start="117:43" pos:end="117:45">src</name></expr></argument>, <argument pos:start="117:48" pos:end="117:52"><expr pos:start="117:48" pos:end="117:52"><name pos:start="117:48" pos:end="117:52">zsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="119:5" pos:end="122:17"><if pos:start="119:5" pos:end="122:17">if <condition pos:start="119:8" pos:end="119:12">(<expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">ret</name></expr>)</condition><block type="pseudo" pos:start="122:5" pos:end="122:17"><block_content pos:start="122:5" pos:end="122:17">


    <expr_stmt pos:start="122:5" pos:end="122:17"><expr pos:start="122:5" pos:end="122:16"><name pos:start="122:5" pos:end="122:7">src</name> <operator pos:start="122:9" pos:end="122:10">+=</operator> <name pos:start="122:12" pos:end="122:16">zsize</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="126:5" pos:end="134:5"><if pos:start="126:5" pos:end="134:5">if <condition pos:start="126:8" pos:end="126:22">(<expr pos:start="126:9" pos:end="126:21"><name pos:start="126:9" pos:end="126:16">sub_type</name> <operator pos:start="126:18" pos:end="126:19">==</operator> <literal type="number" pos:start="126:21" pos:end="126:21">2</literal></expr>)</condition> <block pos:start="126:24" pos:end="134:5">{<block_content pos:start="128:9" pos:end="132:17">

        <expr_stmt pos:start="128:9" pos:end="130:67"><expr pos:start="128:9" pos:end="130:66"><call pos:start="128:9" pos:end="130:66"><name pos:start="128:9" pos:end="128:25">kempf_restore_buf</name><argument_list pos:start="128:26" pos:end="130:66">(<argument pos:start="128:27" pos:end="128:38"><expr pos:start="128:27" pos:end="128:38"><name pos:start="128:27" pos:end="128:38"><name pos:start="128:27" pos:end="128:27">c</name><operator pos:start="128:28" pos:end="128:29">-&gt;</operator><name pos:start="128:30" pos:end="128:38">kempf_buf</name></name></expr></argument>, <argument pos:start="128:41" pos:end="128:44"><expr pos:start="128:41" pos:end="128:44"><name pos:start="128:41" pos:end="128:44">dlen</name></expr></argument>, <argument pos:start="128:47" pos:end="128:49"><expr pos:start="128:47" pos:end="128:49"><name pos:start="128:47" pos:end="128:49">dst</name></expr></argument>, <argument pos:start="128:52" pos:end="128:69"><expr pos:start="128:52" pos:end="128:69"><name pos:start="128:52" pos:end="128:69"><name pos:start="128:52" pos:end="128:52">c</name><operator pos:start="128:53" pos:end="128:54">-&gt;</operator><name pos:start="128:55" pos:end="128:69">framebuf_stride</name></name></expr></argument>,

                          <argument pos:start="130:27" pos:end="130:30"><expr pos:start="130:27" pos:end="130:30"><name pos:start="130:27" pos:end="130:30">NULL</name></expr></argument>, <argument pos:start="130:33" pos:end="130:33"><expr pos:start="130:33" pos:end="130:33"><literal type="number" pos:start="130:33" pos:end="130:33">0</literal></expr></argument>, <argument pos:start="130:36" pos:end="130:40"><expr pos:start="130:36" pos:end="130:40"><name pos:start="130:36" pos:end="130:40">width</name></expr></argument>, <argument pos:start="130:43" pos:end="130:48"><expr pos:start="130:43" pos:end="130:48"><name pos:start="130:43" pos:end="130:48">height</name></expr></argument>, <argument pos:start="130:51" pos:end="130:53"><expr pos:start="130:51" pos:end="130:53"><name pos:start="130:51" pos:end="130:53">pal</name></expr></argument>, <argument pos:start="130:56" pos:end="130:59"><expr pos:start="130:56" pos:end="130:59"><name pos:start="130:56" pos:end="130:59">npal</name></expr></argument>, <argument pos:start="130:62" pos:end="130:65"><expr pos:start="130:62" pos:end="130:65"><name pos:start="130:62" pos:end="130:65">tidx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="132:9" pos:end="132:17">return <expr pos:start="132:16" pos:end="132:16"><literal type="number" pos:start="132:16" pos:end="132:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="138:5" pos:end="138:25"><expr pos:start="138:5" pos:end="138:24"><name pos:start="138:5" pos:end="138:11">nblocks</name> <operator pos:start="138:13" pos:end="138:13">=</operator> <operator pos:start="138:15" pos:end="138:15">*</operator><name pos:start="138:16" pos:end="138:18">src</name><operator pos:start="138:19" pos:end="138:20">++</operator> <operator pos:start="138:22" pos:end="138:22">+</operator> <literal type="number" pos:start="138:24" pos:end="138:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="140:5" pos:end="140:16"><expr pos:start="140:5" pos:end="140:15"><name pos:start="140:5" pos:end="140:11">cblocks</name> <operator pos:start="140:13" pos:end="140:13">=</operator> <literal type="number" pos:start="140:15" pos:end="140:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="142:5" pos:end="142:38"><expr pos:start="142:5" pos:end="142:37"><name pos:start="142:5" pos:end="142:11">bstride</name> <operator pos:start="142:13" pos:end="142:13">=</operator> <call pos:start="142:15" pos:end="142:32"><name pos:start="142:15" pos:end="142:21">FFALIGN</name><argument_list pos:start="142:22" pos:end="142:32">(<argument pos:start="142:23" pos:end="142:27"><expr pos:start="142:23" pos:end="142:27"><name pos:start="142:23" pos:end="142:27">width</name></expr></argument>, <argument pos:start="142:30" pos:end="142:31"><expr pos:start="142:30" pos:end="142:31"><literal type="number" pos:start="142:30" pos:end="142:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="142:34" pos:end="142:35">&gt;&gt;</operator> <literal type="number" pos:start="142:37" pos:end="142:37">4</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="144:5" pos:end="144:70">// blocks are coded LSB and we need normal bitreader for JPEG data</comment>

    <expr_stmt pos:start="146:5" pos:end="146:13"><expr pos:start="146:5" pos:end="146:12"><name pos:start="146:5" pos:end="146:8">bits</name> <operator pos:start="146:10" pos:end="146:10">=</operator> <literal type="number" pos:start="146:12" pos:end="146:12">0</literal></expr>;</expr_stmt>

    <for pos:start="148:5" pos:end="178:5">for <control pos:start="148:9" pos:end="148:52">(<init pos:start="148:10" pos:end="148:15"><expr pos:start="148:10" pos:end="148:14"><name pos:start="148:10" pos:end="148:10">i</name> <operator pos:start="148:12" pos:end="148:12">=</operator> <literal type="number" pos:start="148:14" pos:end="148:14">0</literal></expr>;</init> <condition pos:start="148:17" pos:end="148:47"><expr pos:start="148:17" pos:end="148:46"><name pos:start="148:17" pos:end="148:17">i</name> <operator pos:start="148:19" pos:end="148:19">&lt;</operator> <operator pos:start="148:21" pos:end="148:21">(</operator><call pos:start="148:22" pos:end="148:40"><name pos:start="148:22" pos:end="148:28">FFALIGN</name><argument_list pos:start="148:29" pos:end="148:40">(<argument pos:start="148:30" pos:end="148:35"><expr pos:start="148:30" pos:end="148:35"><name pos:start="148:30" pos:end="148:35">height</name></expr></argument>, <argument pos:start="148:38" pos:end="148:39"><expr pos:start="148:38" pos:end="148:39"><literal type="number" pos:start="148:38" pos:end="148:39">16</literal></expr></argument>)</argument_list></call> <operator pos:start="148:42" pos:end="148:43">&gt;&gt;</operator> <literal type="number" pos:start="148:45" pos:end="148:45">4</literal><operator pos:start="148:46" pos:end="148:46">)</operator></expr>;</condition> <incr pos:start="148:49" pos:end="148:51"><expr pos:start="148:49" pos:end="148:51"><name pos:start="148:49" pos:end="148:49">i</name><operator pos:start="148:50" pos:end="148:51">++</operator></expr></incr>)</control> <block pos:start="148:54" pos:end="178:5">{<block_content pos:start="150:9" pos:end="176:9">

        <for pos:start="150:9" pos:end="176:9">for <control pos:start="150:13" pos:end="150:55">(<init pos:start="150:14" pos:end="150:19"><expr pos:start="150:14" pos:end="150:18"><name pos:start="150:14" pos:end="150:14">j</name> <operator pos:start="150:16" pos:end="150:16">=</operator> <literal type="number" pos:start="150:18" pos:end="150:18">0</literal></expr>;</init> <condition pos:start="150:21" pos:end="150:50"><expr pos:start="150:21" pos:end="150:49"><name pos:start="150:21" pos:end="150:21">j</name> <operator pos:start="150:23" pos:end="150:23">&lt;</operator> <operator pos:start="150:25" pos:end="150:25">(</operator><call pos:start="150:26" pos:end="150:43"><name pos:start="150:26" pos:end="150:32">FFALIGN</name><argument_list pos:start="150:33" pos:end="150:43">(<argument pos:start="150:34" pos:end="150:38"><expr pos:start="150:34" pos:end="150:38"><name pos:start="150:34" pos:end="150:38">width</name></expr></argument>, <argument pos:start="150:41" pos:end="150:42"><expr pos:start="150:41" pos:end="150:42"><literal type="number" pos:start="150:41" pos:end="150:42">16</literal></expr></argument>)</argument_list></call> <operator pos:start="150:45" pos:end="150:46">&gt;&gt;</operator> <literal type="number" pos:start="150:48" pos:end="150:48">4</literal><operator pos:start="150:49" pos:end="150:49">)</operator></expr>;</condition> <incr pos:start="150:52" pos:end="150:54"><expr pos:start="150:52" pos:end="150:54"><name pos:start="150:52" pos:end="150:52">j</name><operator pos:start="150:53" pos:end="150:54">++</operator></expr></incr>)</control> <block pos:start="150:57" pos:end="176:9">{<block_content pos:start="152:13" pos:end="174:52">

            <if_stmt pos:start="152:13" pos:end="161:13"><if pos:start="152:13" pos:end="161:13">if <condition pos:start="152:16" pos:end="152:22">(<expr pos:start="152:17" pos:end="152:21"><operator pos:start="152:17" pos:end="152:17">!</operator><name pos:start="152:18" pos:end="152:21">bits</name></expr>)</condition> <block pos:start="152:24" pos:end="161:13">{<block_content pos:start="154:17" pos:end="159:27">

                <if_stmt pos:start="154:17" pos:end="157:32"><if pos:start="154:17" pos:end="157:32">if <condition pos:start="154:20" pos:end="154:35">(<expr pos:start="154:21" pos:end="154:34"><name pos:start="154:21" pos:end="154:23">src</name> <operator pos:start="154:25" pos:end="154:26">&gt;=</operator> <name pos:start="154:28" pos:end="154:34">src_end</name></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:32"><block_content pos:start="157:17" pos:end="157:32">


                <expr_stmt pos:start="157:17" pos:end="157:32"><expr pos:start="157:17" pos:end="157:31"><name pos:start="157:17" pos:end="157:22">bitbuf</name> <operator pos:start="157:24" pos:end="157:24">=</operator> <operator pos:start="157:26" pos:end="157:26">*</operator><name pos:start="157:27" pos:end="157:29">src</name><operator pos:start="157:30" pos:end="157:31">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:27"><expr pos:start="159:17" pos:end="159:26"><name pos:start="159:17" pos:end="159:20">bits</name>   <operator pos:start="159:24" pos:end="159:24">=</operator> <literal type="number" pos:start="159:26" pos:end="159:26">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:17">coded</name> <operator pos:start="163:19" pos:end="163:19">=</operator> <name pos:start="163:21" pos:end="163:26">bitbuf</name> <operator pos:start="163:28" pos:end="163:28">&amp;</operator> <literal type="number" pos:start="163:30" pos:end="163:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:19"><expr pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:16">bits</name><operator pos:start="165:17" pos:end="165:18">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:25"><expr pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:18">bitbuf</name> <operator pos:start="167:20" pos:end="167:22">&gt;&gt;=</operator> <literal type="number" pos:start="167:24" pos:end="167:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:29"><expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:19">cblocks</name> <operator pos:start="169:21" pos:end="169:22">+=</operator> <name pos:start="169:24" pos:end="169:28">coded</name></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="174:52"><if pos:start="171:13" pos:end="174:52">if <condition pos:start="171:16" pos:end="171:34">(<expr pos:start="171:17" pos:end="171:33"><name pos:start="171:17" pos:end="171:23">cblocks</name> <operator pos:start="171:25" pos:end="171:25">&gt;</operator> <name pos:start="171:27" pos:end="171:33">nblocks</name></expr>)</condition><block type="pseudo" pos:start="174:13" pos:end="174:52"><block_content pos:start="174:13" pos:end="174:52">


            <expr_stmt pos:start="174:13" pos:end="174:52"><expr pos:start="174:13" pos:end="174:51"><name pos:start="174:13" pos:end="174:43"><name pos:start="174:13" pos:end="174:13">c</name><operator pos:start="174:14" pos:end="174:15">-&gt;</operator><name pos:start="174:16" pos:end="174:26">kempf_flags</name><index pos:start="174:27" pos:end="174:43">[<expr pos:start="174:28" pos:end="174:42"><name pos:start="174:28" pos:end="174:28">j</name> <operator pos:start="174:30" pos:end="174:30">+</operator> <name pos:start="174:32" pos:end="174:32">i</name> <operator pos:start="174:34" pos:end="174:34">*</operator> <name pos:start="174:36" pos:end="174:42">bstride</name></expr>]</index></name> <operator pos:start="174:45" pos:end="174:45">=</operator> <name pos:start="174:47" pos:end="174:51">coded</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="182:5" pos:end="182:53"><expr pos:start="182:5" pos:end="182:52"><call pos:start="182:5" pos:end="182:52"><name pos:start="182:5" pos:end="182:10">memset</name><argument_list pos:start="182:11" pos:end="182:52">(<argument pos:start="182:12" pos:end="182:23"><expr pos:start="182:12" pos:end="182:23"><name pos:start="182:12" pos:end="182:23"><name pos:start="182:12" pos:end="182:12">c</name><operator pos:start="182:13" pos:end="182:14">-&gt;</operator><name pos:start="182:15" pos:end="182:23">jpeg_tile</name></name></expr></argument>, <argument pos:start="182:26" pos:end="182:26"><expr pos:start="182:26" pos:end="182:26"><literal type="number" pos:start="182:26" pos:end="182:26">0</literal></expr></argument>, <argument pos:start="182:29" pos:end="182:51"><expr pos:start="182:29" pos:end="182:51"><name pos:start="182:29" pos:end="182:42"><name pos:start="182:29" pos:end="182:29">c</name><operator pos:start="182:30" pos:end="182:31">-&gt;</operator><name pos:start="182:32" pos:end="182:42">tile_stride</name></name> <operator pos:start="182:44" pos:end="182:44">*</operator> <name pos:start="182:46" pos:end="182:51">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="184:5" pos:end="188:57"><expr pos:start="184:5" pos:end="188:56"><call pos:start="184:5" pos:end="188:56"><name pos:start="184:5" pos:end="184:19">jpg_decode_data</name><argument_list pos:start="184:20" pos:end="188:56">(<argument pos:start="184:21" pos:end="184:26"><expr pos:start="184:21" pos:end="184:26"><operator pos:start="184:21" pos:end="184:21">&amp;</operator><name pos:start="184:22" pos:end="184:26"><name pos:start="184:22" pos:end="184:22">c</name><operator pos:start="184:23" pos:end="184:24">-&gt;</operator><name pos:start="184:25" pos:end="184:26">jc</name></name></expr></argument>, <argument pos:start="184:29" pos:end="184:33"><expr pos:start="184:29" pos:end="184:33"><name pos:start="184:29" pos:end="184:33">width</name></expr></argument>, <argument pos:start="184:36" pos:end="184:41"><expr pos:start="184:36" pos:end="184:41"><name pos:start="184:36" pos:end="184:41">height</name></expr></argument>, <argument pos:start="184:44" pos:end="184:46"><expr pos:start="184:44" pos:end="184:46"><name pos:start="184:44" pos:end="184:46">src</name></expr></argument>, <argument pos:start="184:49" pos:end="184:61"><expr pos:start="184:49" pos:end="184:61"><name pos:start="184:49" pos:end="184:55">src_end</name> <operator pos:start="184:57" pos:end="184:57">-</operator> <name pos:start="184:59" pos:end="184:61">src</name></expr></argument>,

                    <argument pos:start="186:21" pos:end="186:32"><expr pos:start="186:21" pos:end="186:32"><name pos:start="186:21" pos:end="186:32"><name pos:start="186:21" pos:end="186:21">c</name><operator pos:start="186:22" pos:end="186:23">-&gt;</operator><name pos:start="186:24" pos:end="186:32">jpeg_tile</name></name></expr></argument>, <argument pos:start="186:35" pos:end="186:48"><expr pos:start="186:35" pos:end="186:48"><name pos:start="186:35" pos:end="186:48"><name pos:start="186:35" pos:end="186:35">c</name><operator pos:start="186:36" pos:end="186:37">-&gt;</operator><name pos:start="186:38" pos:end="186:48">tile_stride</name></name></expr></argument>,

                    <argument pos:start="188:21" pos:end="188:34"><expr pos:start="188:21" pos:end="188:34"><name pos:start="188:21" pos:end="188:34"><name pos:start="188:21" pos:end="188:21">c</name><operator pos:start="188:22" pos:end="188:23">-&gt;</operator><name pos:start="188:24" pos:end="188:34">kempf_flags</name></name></expr></argument>, <argument pos:start="188:37" pos:end="188:43"><expr pos:start="188:37" pos:end="188:43"><name pos:start="188:37" pos:end="188:43">bstride</name></expr></argument>, <argument pos:start="188:46" pos:end="188:52"><expr pos:start="188:46" pos:end="188:52"><name pos:start="188:46" pos:end="188:52">nblocks</name></expr></argument>, <argument pos:start="188:55" pos:end="188:55"><expr pos:start="188:55" pos:end="188:55"><literal type="number" pos:start="188:55" pos:end="188:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="192:5" pos:end="196:54"><expr pos:start="192:5" pos:end="196:53"><call pos:start="192:5" pos:end="196:53"><name pos:start="192:5" pos:end="192:21">kempf_restore_buf</name><argument_list pos:start="192:22" pos:end="196:53">(<argument pos:start="192:23" pos:end="192:34"><expr pos:start="192:23" pos:end="192:34"><name pos:start="192:23" pos:end="192:34"><name pos:start="192:23" pos:end="192:23">c</name><operator pos:start="192:24" pos:end="192:25">-&gt;</operator><name pos:start="192:26" pos:end="192:34">kempf_buf</name></name></expr></argument>, <argument pos:start="192:37" pos:end="192:40"><expr pos:start="192:37" pos:end="192:40"><name pos:start="192:37" pos:end="192:40">dlen</name></expr></argument>, <argument pos:start="192:43" pos:end="192:45"><expr pos:start="192:43" pos:end="192:45"><name pos:start="192:43" pos:end="192:45">dst</name></expr></argument>, <argument pos:start="192:48" pos:end="192:65"><expr pos:start="192:48" pos:end="192:65"><name pos:start="192:48" pos:end="192:65"><name pos:start="192:48" pos:end="192:48">c</name><operator pos:start="192:49" pos:end="192:50">-&gt;</operator><name pos:start="192:51" pos:end="192:65">framebuf_stride</name></name></expr></argument>,

                      <argument pos:start="194:23" pos:end="194:34"><expr pos:start="194:23" pos:end="194:34"><name pos:start="194:23" pos:end="194:34"><name pos:start="194:23" pos:end="194:23">c</name><operator pos:start="194:24" pos:end="194:25">-&gt;</operator><name pos:start="194:26" pos:end="194:34">jpeg_tile</name></name></expr></argument>, <argument pos:start="194:37" pos:end="194:50"><expr pos:start="194:37" pos:end="194:50"><name pos:start="194:37" pos:end="194:50"><name pos:start="194:37" pos:end="194:37">c</name><operator pos:start="194:38" pos:end="194:39">-&gt;</operator><name pos:start="194:40" pos:end="194:50">tile_stride</name></name></expr></argument>,

                      <argument pos:start="196:23" pos:end="196:27"><expr pos:start="196:23" pos:end="196:27"><name pos:start="196:23" pos:end="196:27">width</name></expr></argument>, <argument pos:start="196:30" pos:end="196:35"><expr pos:start="196:30" pos:end="196:35"><name pos:start="196:30" pos:end="196:35">height</name></expr></argument>, <argument pos:start="196:38" pos:end="196:40"><expr pos:start="196:38" pos:end="196:40"><name pos:start="196:38" pos:end="196:40">pal</name></expr></argument>, <argument pos:start="196:43" pos:end="196:46"><expr pos:start="196:43" pos:end="196:46"><name pos:start="196:43" pos:end="196:46">npal</name></expr></argument>, <argument pos:start="196:49" pos:end="196:52"><expr pos:start="196:49" pos:end="196:52"><name pos:start="196:49" pos:end="196:52">tidx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="200:5" pos:end="200:13">return <expr pos:start="200:12" pos:end="200:12"><literal type="number" pos:start="200:12" pos:end="200:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
