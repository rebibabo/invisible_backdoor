<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1934.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">usage</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:12">

    <macro pos:start="5:5" pos:end="79:25"><name pos:start="5:5" pos:end="5:10">printf</name><argument_list pos:start="5:11" pos:end="79:25">(<argument pos:start="5:12" pos:end="69:47"><literal type="string" pos:start="5:12" pos:end="5:18">"qemu-"</literal> TARGET_ARCH <literal type="string" pos:start="5:32" pos:end="5:42">" version "</literal> QEMU_VERSION QEMU_PKGVERSION <literal type="string" pos:start="5:73" pos:end="5:117">", Copyright (c) 2003-2008 Fabrice Bellard\n"</literal>

           <literal type="string" pos:start="7:12" pos:end="7:25">"usage: qemu-"</literal> TARGET_ARCH <literal type="string" pos:start="7:39" pos:end="7:75">" [options] program [arguments...]\n"</literal>

           <literal type="string" pos:start="9:12" pos:end="9:61">"Linux CPU emulator (compiled for %s emulation)\n"</literal>

           <literal type="string" pos:start="11:12" pos:end="11:15">"\n"</literal>

           <literal type="string" pos:start="13:12" pos:end="13:32">"Standard options:\n"</literal>

           <literal type="string" pos:start="15:12" pos:end="15:48">"-h                print this help\n"</literal>

           <literal type="string" pos:start="17:12" pos:end="17:60">"-g port           wait gdb connection to port\n"</literal>

           <literal type="string" pos:start="19:12" pos:end="19:76">"-L path           set the elf interpreter prefix (default=%s)\n"</literal>

           <literal type="string" pos:start="21:12" pos:end="21:74">"-s size           set the stack size in bytes (default=%ld)\n"</literal>

           <literal type="string" pos:start="23:12" pos:end="23:61">"-cpu model        select CPU (-cpu ? for list)\n"</literal>

           <literal type="string" pos:start="25:12" pos:end="25:67">"-drop-ld-preload  drop LD_PRELOAD for target process\n"</literal>

           <literal type="string" pos:start="27:12" pos:end="27:78">"-E var=value      sets/modifies targets environment variable(s)\n"</literal>

           <literal type="string" pos:start="29:12" pos:end="29:71">"-U var            unsets targets environment variable(s)\n"</literal>

           <literal type="string" pos:start="31:12" pos:end="34:0">"-0 argv0          forces target process argv[0] to be argv0\n"</literal>

<cpp:if pos:start="33:1" pos:end="33:34">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:34">(<argument pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:33">CONFIG_USE_GUEST_BASE</name></expr></argument>)</argument_list></call></expr></cpp:if>

           <literal type="string" pos:start="35:12" pos:end="38:0">"-B address        set guest_base address to address\n"</literal>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

           <literal type="string" pos:start="39:12" pos:end="39:15">"\n"</literal>

           <literal type="string" pos:start="41:12" pos:end="41:29">"Debug options:\n"</literal>

           <literal type="string" pos:start="43:12" pos:end="43:53">"-d options   activate log (logfile=%s)\n"</literal>

           <literal type="string" pos:start="45:12" pos:end="45:64">"-p pagesize  set the host page size to 'pagesize'\n"</literal>

           <literal type="string" pos:start="47:12" pos:end="47:57">"-singlestep  always run in singlestep mode\n"</literal>

           <literal type="string" pos:start="49:12" pos:end="49:44">"-strace      log system calls\n"</literal>

           <literal type="string" pos:start="51:12" pos:end="51:15">"\n"</literal>

           <literal type="string" pos:start="53:12" pos:end="53:37">"Environment variables:\n"</literal>

           <literal type="string" pos:start="55:12" pos:end="55:80">"QEMU_STRACE       Print system calls and arguments similar to the\n"</literal>

           <literal type="string" pos:start="57:12" pos:end="57:83">"                  'strace' program.  Enable by setting to any value.\n"</literal>

           <literal type="string" pos:start="59:12" pos:end="59:79">"You can use -E and -U options to set/unset environment variables\n"</literal>

           <literal type="string" pos:start="61:12" pos:end="61:79">"for target process.  It is possible to provide several variables\n"</literal>

           <literal type="string" pos:start="63:12" pos:end="63:53">"by repeating the option.  For example:\n"</literal>

           <literal type="string" pos:start="65:12" pos:end="65:70">"    -E var1=val2 -E var2=val2 -U LD_PRELOAD -U LD_DEBUG\n"</literal>

           <literal type="string" pos:start="67:12" pos:end="67:74">"Note that if you provide several changes to single variable\n"</literal>

           <literal type="string" pos:start="69:12" pos:end="69:47">"last change will stay in effect.\n"</literal></argument>

           ,

           <argument pos:start="73:12" pos:end="73:22">TARGET_ARCH</argument>,

           <argument pos:start="75:12" pos:end="75:24">interp_prefix</argument>,

           <argument pos:start="77:12" pos:end="77:25">x86_stack_size</argument>,

           <argument pos:start="79:12" pos:end="79:24">DEBUG_LOGFILE</argument>)</argument_list></macro><empty_stmt pos:start="79:26" pos:end="79:26">;</empty_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:12"><expr pos:start="81:5" pos:end="81:11"><call pos:start="81:5" pos:end="81:11"><name pos:start="81:5" pos:end="81:8">exit</name><argument_list pos:start="81:9" pos:end="81:11">(<argument pos:start="81:10" pos:end="81:10"><expr pos:start="81:10" pos:end="81:10"><literal type="number" pos:start="81:10" pos:end="81:10">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
