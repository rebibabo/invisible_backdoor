<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22674.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:50">vaapi_encode_h265_init_fixed_qp</name><parameter_list pos:start="1:51" pos:end="1:73">(<parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:65">AVCodecContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:22">VAAPIEncodeContext</name>      <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:32">ctx</name> <init pos:start="5:34" pos:end="5:51">= <expr pos:start="5:36" pos:end="5:51"><name pos:start="5:36" pos:end="5:51"><name pos:start="5:36" pos:end="5:40">avctx</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">VAAPIEncodeH265Context</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:32">priv</name> <init pos:start="7:34" pos:end="7:49">= <expr pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:38">ctx</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:26">VAAPIEncodeH265Options</name>  <modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:32">opt</name> <init pos:start="9:34" pos:end="9:53">= <expr pos:start="9:36" pos:end="9:53"><name pos:start="9:36" pos:end="9:53"><name pos:start="9:36" pos:end="9:38">ctx</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:53">codec_options</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:8">priv</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:20">fixed_qp_p</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:26">opt</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:30">qp</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:46"><if pos:start="15:5" pos:end="19:66">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:29">i_quant_factor</name></name> <operator pos:start="15:31" pos:end="15:31">&gt;</operator> <literal type="number" pos:start="15:33" pos:end="15:35">0.0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="19:66"><block_content pos:start="17:9" pos:end="19:66">

        <expr_stmt pos:start="17:9" pos:end="19:66"><expr pos:start="17:9" pos:end="19:65"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:12">priv</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:26">fixed_qp_idr</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <operator pos:start="17:30" pos:end="17:30">(</operator><name pos:start="17:31" pos:end="17:33">int</name><operator pos:start="17:34" pos:end="17:34">)</operator><operator pos:start="17:35" pos:end="17:35">(</operator><operator pos:start="17:36" pos:end="17:36">(</operator><name pos:start="17:37" pos:end="17:52"><name pos:start="17:37" pos:end="17:40">priv</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:52">fixed_qp_p</name></name> <operator pos:start="17:54" pos:end="17:54">*</operator> <name pos:start="17:56" pos:end="17:76"><name pos:start="17:56" pos:end="17:60">avctx</name><operator pos:start="17:61" pos:end="17:62">-&gt;</operator><name pos:start="17:63" pos:end="17:76">i_quant_factor</name></name> <operator pos:start="17:78" pos:end="17:78">+</operator>

                                    <name pos:start="19:37" pos:end="19:57"><name pos:start="19:37" pos:end="19:41">avctx</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:57">i_quant_offset</name></name><operator pos:start="19:58" pos:end="19:58">)</operator> <operator pos:start="19:60" pos:end="19:60">+</operator> <literal type="number" pos:start="19:62" pos:end="19:64">0.5</literal><operator pos:start="19:65" pos:end="19:65">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="23:46">else<block type="pseudo" pos:start="23:9" pos:end="23:46"><block_content pos:start="23:9" pos:end="23:46">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:12">priv</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:26">fixed_qp_idr</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <name pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:33">priv</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:45">fixed_qp_p</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="25:5" pos:end="33:44"><if pos:start="25:5" pos:end="29:64">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">b_quant_factor</name></name> <operator pos:start="25:31" pos:end="25:31">&gt;</operator> <literal type="number" pos:start="25:33" pos:end="25:35">0.0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="29:64"><block_content pos:start="27:9" pos:end="29:64">

        <expr_stmt pos:start="27:9" pos:end="29:64"><expr pos:start="27:9" pos:end="29:63"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:12">priv</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:24">fixed_qp_b</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <operator pos:start="27:28" pos:end="27:28">(</operator><name pos:start="27:29" pos:end="27:31">int</name><operator pos:start="27:32" pos:end="27:32">)</operator><operator pos:start="27:33" pos:end="27:33">(</operator><operator pos:start="27:34" pos:end="27:34">(</operator><name pos:start="27:35" pos:end="27:50"><name pos:start="27:35" pos:end="27:38">priv</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:50">fixed_qp_p</name></name> <operator pos:start="27:52" pos:end="27:52">*</operator> <name pos:start="27:54" pos:end="27:74"><name pos:start="27:54" pos:end="27:58">avctx</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:74">b_quant_factor</name></name> <operator pos:start="27:76" pos:end="27:76">+</operator>

                                  <name pos:start="29:35" pos:end="29:55"><name pos:start="29:35" pos:end="29:39">avctx</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:55">b_quant_offset</name></name><operator pos:start="29:56" pos:end="29:56">)</operator> <operator pos:start="29:58" pos:end="29:58">+</operator> <literal type="number" pos:start="29:60" pos:end="29:62">0.5</literal><operator pos:start="29:63" pos:end="29:63">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="31:5" pos:end="33:44">else<block type="pseudo" pos:start="33:9" pos:end="33:44"><block_content pos:start="33:9" pos:end="33:44">

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:12">priv</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:24">fixed_qp_b</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:43"><name pos:start="33:28" pos:end="33:31">priv</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:43">fixed_qp_p</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="41:67"><expr pos:start="37:5" pos:end="41:66"><call pos:start="37:5" pos:end="41:66"><name pos:start="37:5" pos:end="37:10">av_log</name><argument_list pos:start="37:11" pos:end="41:66">(<argument pos:start="37:12" pos:end="37:16"><expr pos:start="37:12" pos:end="37:16"><name pos:start="37:12" pos:end="37:16">avctx</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:33" pos:end="39:53"><expr pos:start="37:33" pos:end="39:53"><literal type="string" pos:start="37:33" pos:end="37:51">"Using fixed QP = "</literal>

           <literal type="string" pos:start="39:12" pos:end="39:53">"%d / %d / %d for IDR- / P- / B-frames.\n"</literal></expr></argument>,

           <argument pos:start="41:12" pos:end="41:29"><expr pos:start="41:12" pos:end="41:29"><name pos:start="41:12" pos:end="41:29"><name pos:start="41:12" pos:end="41:15">priv</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:29">fixed_qp_idr</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:47"><expr pos:start="41:32" pos:end="41:47"><name pos:start="41:32" pos:end="41:47"><name pos:start="41:32" pos:end="41:35">priv</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:47">fixed_qp_p</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:65"><expr pos:start="41:50" pos:end="41:65"><name pos:start="41:50" pos:end="41:65"><name pos:start="41:50" pos:end="41:53">priv</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:65">fixed_qp_b</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
