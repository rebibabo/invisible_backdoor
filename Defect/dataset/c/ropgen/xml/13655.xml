<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13655.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:16">diag</name>)<parameter_list pos:start="1:18" pos:end="1:77">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:31">CPUS390XState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:49">r1</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:62">r3</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:72">uint32_t</name></type> <name pos:start="1:74" pos:end="1:76">num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:14">r</name></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="55:5">switch <condition pos:start="9:12" pos:end="9:16">(<expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">num</name></expr>)</condition> <block pos:start="9:18" pos:end="55:5">{<block_content pos:start="11:5" pos:end="53:14">

    <case pos:start="11:5" pos:end="11:15">case <expr pos:start="11:10" pos:end="11:14"><literal type="number" pos:start="11:10" pos:end="11:14">0x500</literal></expr>:</case>

        <comment type="block" pos:start="13:9" pos:end="13:27">/* KVM hypercall */</comment>


        <expr_stmt pos:start="16:9" pos:end="16:39"><expr pos:start="16:9" pos:end="16:38"><name pos:start="16:9" pos:end="16:9">r</name> <operator pos:start="16:11" pos:end="16:11">=</operator> <call pos:start="16:13" pos:end="16:38"><name pos:start="16:13" pos:end="16:33">s390_virtio_hypercall</name><argument_list pos:start="16:34" pos:end="16:38">(<argument pos:start="16:35" pos:end="16:37"><expr pos:start="16:35" pos:end="16:37"><name pos:start="16:35" pos:end="16:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x44</literal></expr>:</case>

        <comment type="block" pos:start="23:9" pos:end="23:19">/* yield */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:15">case <expr pos:start="29:10" pos:end="29:14"><literal type="number" pos:start="29:10" pos:end="29:14">0x308</literal></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:17">/* ipl */</comment>


        <expr_stmt pos:start="34:9" pos:end="34:37"><expr pos:start="34:9" pos:end="34:36"><call pos:start="34:9" pos:end="34:36"><name pos:start="34:9" pos:end="34:23">handle_diag_308</name><argument_list pos:start="34:24" pos:end="34:36">(<argument pos:start="34:25" pos:end="34:27"><expr pos:start="34:25" pos:end="34:27"><name pos:start="34:25" pos:end="34:27">env</name></expr></argument>, <argument pos:start="34:30" pos:end="34:31"><expr pos:start="34:30" pos:end="34:31"><name pos:start="34:30" pos:end="34:31">r1</name></expr></argument>, <argument pos:start="34:34" pos:end="34:35"><expr pos:start="34:34" pos:end="34:35"><name pos:start="34:34" pos:end="34:35">r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="37:9" pos:end="37:14"><expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">r</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:15">case <expr pos:start="41:10" pos:end="41:14"><literal type="number" pos:start="41:10" pos:end="41:14">0x288</literal></expr>:</case>

        <comment type="block" pos:start="43:9" pos:end="43:34">/* time bomb (watchdog) */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:9">r</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:27">handle_diag_288</name><argument_list pos:start="45:28" pos:end="45:40">(<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">env</name></expr></argument>, <argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">r1</name></expr></argument>, <argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><name pos:start="45:38" pos:end="45:39">r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <default pos:start="49:5" pos:end="49:12">default:</default>

        <expr_stmt pos:start="51:9" pos:end="51:15"><expr pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">r</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <operator pos:start="51:13" pos:end="51:13">-</operator><literal type="number" pos:start="51:14" pos:end="51:14">1</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:10">(<expr pos:start="59:9" pos:end="59:9"><name pos:start="59:9" pos:end="59:9">r</name></expr>)</condition> <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:61">

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><call pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:25">program_interrupt</name><argument_list pos:start="61:26" pos:end="61:60">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">env</name></expr></argument>, <argument pos:start="61:32" pos:end="61:48"><expr pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:48">PGM_SPECIFICATION</name></expr></argument>, <argument pos:start="61:51" pos:end="61:59"><expr pos:start="61:51" pos:end="61:59"><name pos:start="61:51" pos:end="61:59">ILEN_AUTO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
