<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14805.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">pci_cmd646_ide_initfn</name><parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PCIIDEState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">d</name> <init pos:start="5:20" pos:end="5:53">= <expr pos:start="5:22" pos:end="5:53"><call pos:start="5:22" pos:end="5:53"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:53">(<argument pos:start="5:32" pos:end="5:42"><expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42">PCIIDEState</name></expr></argument>, <argument pos:start="5:45" pos:end="5:47"><expr pos:start="5:45" pos:end="5:47"><name pos:start="5:45" pos:end="5:47">dev</name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name> <init pos:start="7:23" pos:end="7:37">= <expr pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">dev</name><operator pos:start="7:31" pos:end="7:31">.</operator><name pos:start="7:32" pos:end="7:37">config</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">qemu_irq</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">irq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:58"><expr pos:start="15:5" pos:end="15:57"><call pos:start="15:5" pos:end="15:57"><name pos:start="15:5" pos:end="15:28">pci_config_set_vendor_id</name><argument_list pos:start="15:29" pos:end="15:57">(<argument pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:37"><name pos:start="15:30" pos:end="15:37">pci_conf</name></expr></argument>, <argument pos:start="15:40" pos:end="15:56"><expr pos:start="15:40" pos:end="15:56"><name pos:start="15:40" pos:end="15:56">PCI_VENDOR_ID_CMD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><call pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:28">pci_config_set_device_id</name><argument_list pos:start="17:29" pos:end="17:61">(<argument pos:start="17:30" pos:end="17:37"><expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37">pci_conf</name></expr></argument>, <argument pos:start="17:40" pos:end="17:60"><expr pos:start="17:40" pos:end="17:60"><name pos:start="17:40" pos:end="17:60">PCI_DEVICE_ID_CMD_646</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:12">pci_conf</name><index pos:start="21:13" pos:end="21:29">[<expr pos:start="21:14" pos:end="21:28"><name pos:start="21:14" pos:end="21:28">PCI_REVISION_ID</name></expr>]</index></name> <operator pos:start="21:31" pos:end="21:31">=</operator> <literal type="number" pos:start="21:33" pos:end="21:36">0x07</literal></expr>;</expr_stmt> <comment type="line" pos:start="21:39" pos:end="21:64">// IDE controller revision</comment>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:12">pci_conf</name><index pos:start="23:13" pos:end="23:28">[<expr pos:start="23:14" pos:end="23:27"><name pos:start="23:14" pos:end="23:27">PCI_CLASS_PROG</name></expr>]</index></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <literal type="number" pos:start="23:32" pos:end="23:35">0x8f</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><call pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:24">pci_config_set_class</name><argument_list pos:start="27:25" pos:end="27:57">(<argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><name pos:start="27:26" pos:end="27:33">pci_conf</name></expr></argument>, <argument pos:start="27:36" pos:end="27:56"><expr pos:start="27:36" pos:end="27:56"><name pos:start="27:36" pos:end="27:56">PCI_CLASS_STORAGE_IDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:12">pci_conf</name><index pos:start="31:13" pos:end="31:18">[<expr pos:start="31:14" pos:end="31:17"><literal type="number" pos:start="31:14" pos:end="31:17">0x51</literal></expr>]</index></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:25">0x04</literal></expr>;</expr_stmt> <comment type="line" pos:start="31:28" pos:end="31:41">// enable IDE0</comment>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">d</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">secondary</name></name></expr>)</condition> <block pos:start="33:23" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:31">

        <comment type="block" pos:start="35:9" pos:end="35:77">/* XXX: if not enabled, really disable the seconday IDE controller */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:16">pci_conf</name><index pos:start="37:17" pos:end="37:22">[<expr pos:start="37:18" pos:end="37:21"><literal type="number" pos:start="37:18" pos:end="37:21">0x51</literal></expr>]</index></name> <operator pos:start="37:24" pos:end="37:25">|=</operator> <literal type="number" pos:start="37:27" pos:end="37:30">0x08</literal></expr>;</expr_stmt> <comment type="block" pos:start="37:33" pos:end="37:49">/* enable IDE1 */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:70"><expr pos:start="43:5" pos:end="43:69"><call pos:start="43:5" pos:end="43:69"><name pos:start="43:5" pos:end="43:20">pci_register_bar</name><argument_list pos:start="43:21" pos:end="43:69">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">dev</name></expr></argument>, <argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr></argument>, <argument pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><literal type="number" pos:start="43:30" pos:end="43:32">0x8</literal></expr></argument>, <argument pos:start="43:35" pos:end="43:59"><expr pos:start="43:35" pos:end="43:59"><name pos:start="43:35" pos:end="43:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="43:62" pos:end="43:68"><expr pos:start="43:62" pos:end="43:68"><name pos:start="43:62" pos:end="43:68">ide_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:70"><expr pos:start="45:5" pos:end="45:69"><call pos:start="45:5" pos:end="45:69"><name pos:start="45:5" pos:end="45:20">pci_register_bar</name><argument_list pos:start="45:21" pos:end="45:69">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24">dev</name></expr></argument>, <argument pos:start="45:27" pos:end="45:27"><expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr></argument>, <argument pos:start="45:30" pos:end="45:32"><expr pos:start="45:30" pos:end="45:32"><literal type="number" pos:start="45:30" pos:end="45:32">0x4</literal></expr></argument>, <argument pos:start="45:35" pos:end="45:59"><expr pos:start="45:35" pos:end="45:59"><name pos:start="45:35" pos:end="45:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="45:62" pos:end="45:68"><expr pos:start="45:62" pos:end="45:68"><name pos:start="45:62" pos:end="45:68">ide_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><call pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:20">pci_register_bar</name><argument_list pos:start="47:21" pos:end="47:69">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">dev</name></expr></argument>, <argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">2</literal></expr></argument>, <argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><literal type="number" pos:start="47:30" pos:end="47:32">0x8</literal></expr></argument>, <argument pos:start="47:35" pos:end="47:59"><expr pos:start="47:35" pos:end="47:59"><name pos:start="47:35" pos:end="47:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="47:62" pos:end="47:68"><expr pos:start="47:62" pos:end="47:68"><name pos:start="47:62" pos:end="47:68">ide_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:70"><expr pos:start="49:5" pos:end="49:69"><call pos:start="49:5" pos:end="49:69"><name pos:start="49:5" pos:end="49:20">pci_register_bar</name><argument_list pos:start="49:21" pos:end="49:69">(<argument pos:start="49:22" pos:end="49:24"><expr pos:start="49:22" pos:end="49:24"><name pos:start="49:22" pos:end="49:24">dev</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">3</literal></expr></argument>, <argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><literal type="number" pos:start="49:30" pos:end="49:32">0x4</literal></expr></argument>, <argument pos:start="49:35" pos:end="49:59"><expr pos:start="49:35" pos:end="49:59"><name pos:start="49:35" pos:end="49:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="49:62" pos:end="49:68"><expr pos:start="49:62" pos:end="49:68"><name pos:start="49:62" pos:end="49:68">ide_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:73"><expr pos:start="51:5" pos:end="51:72"><call pos:start="51:5" pos:end="51:72"><name pos:start="51:5" pos:end="51:20">pci_register_bar</name><argument_list pos:start="51:21" pos:end="51:72">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">dev</name></expr></argument>, <argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><literal type="number" pos:start="51:27" pos:end="51:27">4</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:33"><expr pos:start="51:30" pos:end="51:33"><literal type="number" pos:start="51:30" pos:end="51:33">0x10</literal></expr></argument>, <argument pos:start="51:36" pos:end="51:60"><expr pos:start="51:36" pos:end="51:60"><name pos:start="51:36" pos:end="51:60">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="51:63" pos:end="51:71"><expr pos:start="51:63" pos:end="51:71"><name pos:start="51:63" pos:end="51:71">bmdma_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:38">/* TODO: RST# value should be 0 */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:12">pci_conf</name><index pos:start="57:13" pos:end="57:31">[<expr pos:start="57:14" pos:end="57:30"><name pos:start="57:14" pos:end="57:30">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <literal type="number" pos:start="57:35" pos:end="57:38">0x01</literal></expr>;</expr_stmt> <comment type="line" pos:start="57:41" pos:end="57:61">// interrupt on pin 1</comment>



    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:7">irq</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:50"><name pos:start="61:11" pos:end="61:28">qemu_allocate_irqs</name><argument_list pos:start="61:29" pos:end="61:50">(<argument pos:start="61:30" pos:end="61:43"><expr pos:start="61:30" pos:end="61:43"><name pos:start="61:30" pos:end="61:43">cmd646_set_irq</name></expr></argument>, <argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><name pos:start="61:46" pos:end="61:46">d</name></expr></argument>, <argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="79:5">for <control pos:start="63:9" pos:end="63:27">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <literal type="number" pos:start="63:21" pos:end="63:21">2</literal></expr>;</condition> <incr pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:24">i</name><operator pos:start="63:25" pos:end="63:26">++</operator></expr></incr>)</control> <block pos:start="63:29" pos:end="79:5">{<block_content pos:start="65:9" pos:end="77:59">

        <expr_stmt pos:start="65:9" pos:end="65:49"><expr pos:start="65:9" pos:end="65:48"><call pos:start="65:9" pos:end="65:48"><name pos:start="65:9" pos:end="65:19">ide_bus_new</name><argument_list pos:start="65:20" pos:end="65:48">(<argument pos:start="65:21" pos:end="65:30"><expr pos:start="65:21" pos:end="65:30"><operator pos:start="65:21" pos:end="65:21">&amp;</operator><name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:22">d</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:27">bus</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:33" pos:end="65:44"><expr pos:start="65:33" pos:end="65:44"><operator pos:start="65:33" pos:end="65:33">&amp;</operator><name pos:start="65:34" pos:end="65:44"><name pos:start="65:34" pos:end="65:34">d</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:39">dev</name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:44">qdev</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:47"><expr pos:start="65:47" pos:end="65:47"><name pos:start="65:47" pos:end="65:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><call pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:17">ide_init2</name><argument_list pos:start="67:18" pos:end="67:37">(<argument pos:start="67:19" pos:end="67:28"><expr pos:start="67:19" pos:end="67:28"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:28"><name pos:start="67:20" pos:end="67:20">d</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:25">bus</name><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><name pos:start="67:27" pos:end="67:27">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:31" pos:end="67:36"><expr pos:start="67:31" pos:end="67:36"><name pos:start="67:31" pos:end="67:36"><name pos:start="67:31" pos:end="67:33">irq</name><index pos:start="67:34" pos:end="67:36">[<expr pos:start="67:35" pos:end="67:35"><name pos:start="67:35" pos:end="67:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:18">bmdma_init</name><argument_list pos:start="71:19" pos:end="71:44">(<argument pos:start="71:20" pos:end="71:29"><expr pos:start="71:20" pos:end="71:29"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:21">d</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:26">bus</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr>]</index></name></expr></argument>, <argument pos:start="71:32" pos:end="71:43"><expr pos:start="71:32" pos:end="71:43"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:43"><name pos:start="71:33" pos:end="71:33">d</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:40">bmdma</name><index pos:start="71:41" pos:end="71:43">[<expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:37"><expr pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">d</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:16">bmdma</name><index pos:start="73:17" pos:end="73:19">[<expr pos:start="73:18" pos:end="73:18"><name pos:start="73:18" pos:end="73:18">i</name></expr>]</index></name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:23">bus</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:36"><name pos:start="73:28" pos:end="73:28">d</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:33">bus</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:59"><expr pos:start="75:9" pos:end="77:58"><call pos:start="75:9" pos:end="77:58"><name pos:start="75:9" pos:end="75:40">qemu_add_vm_change_state_handler</name><argument_list pos:start="75:41" pos:end="77:58">(<argument pos:start="75:42" pos:end="75:71"><expr pos:start="75:42" pos:end="75:71"><name pos:start="75:42" pos:end="75:50"><name pos:start="75:42" pos:end="75:42">d</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:47">bus</name><index pos:start="75:48" pos:end="75:50">[<expr pos:start="75:49" pos:end="75:49"><name pos:start="75:49" pos:end="75:49">i</name></expr>]</index></name><operator pos:start="75:51" pos:end="75:51">.</operator><name pos:start="75:52" pos:end="75:71"><name pos:start="75:52" pos:end="75:54">dma</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:59">ops</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:71">restart_cb</name></name></expr></argument>,

                                         <argument pos:start="77:42" pos:end="77:57"><expr pos:start="77:42" pos:end="77:57"><operator pos:start="77:42" pos:end="77:42">&amp;</operator><name pos:start="77:43" pos:end="77:53"><name pos:start="77:43" pos:end="77:43">d</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:50">bmdma</name><index pos:start="77:51" pos:end="77:53">[<expr pos:start="77:52" pos:end="77:52"><name pos:start="77:52" pos:end="77:52">i</name></expr>]</index></name><operator pos:start="77:54" pos:end="77:54">.</operator><name pos:start="77:55" pos:end="77:57">dma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="83:5" pos:end="83:57"><expr pos:start="83:5" pos:end="83:56"><call pos:start="83:5" pos:end="83:56"><name pos:start="83:5" pos:end="83:20">vmstate_register</name><argument_list pos:start="83:21" pos:end="83:56">(<argument pos:start="83:22" pos:end="83:31"><expr pos:start="83:22" pos:end="83:31"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:25">dev</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:31">qdev</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:34"><expr pos:start="83:34" pos:end="83:34"><literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr></argument>, <argument pos:start="83:37" pos:end="83:52"><expr pos:start="83:37" pos:end="83:52"><operator pos:start="83:37" pos:end="83:37">&amp;</operator><name pos:start="83:38" pos:end="83:52">vmstate_ide_pci</name></expr></argument>, <argument pos:start="83:55" pos:end="83:55"><expr pos:start="83:55" pos:end="83:55"><name pos:start="83:55" pos:end="83:55">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:41"><expr pos:start="85:5" pos:end="85:40"><call pos:start="85:5" pos:end="85:40"><name pos:start="85:5" pos:end="85:23">qemu_register_reset</name><argument_list pos:start="85:24" pos:end="85:40">(<argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">cmd646_reset</name></expr></argument>, <argument pos:start="85:39" pos:end="85:39"><expr pos:start="85:39" pos:end="85:39"><name pos:start="85:39" pos:end="85:39">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
