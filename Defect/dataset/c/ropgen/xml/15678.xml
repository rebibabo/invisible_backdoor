<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15678.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">h261_decode_picture_header</name><parameter_list pos:start="1:38" pos:end="1:53">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:49">H261Context</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><specifier pos:start="5:21" pos:end="5:25">const</specifier></type> <name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="5:35">= <expr pos:start="5:31" pos:end="5:35"><operator pos:start="5:31" pos:end="5:31">&amp;</operator><name pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:32">h</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:35">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">format</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22">startcode</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="23:5">for <control pos:start="13:9" pos:end="13:51">(<init pos:start="13:10" pos:end="13:35"><expr pos:start="13:10" pos:end="13:34"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:34"><name pos:start="13:14" pos:end="13:26">get_bits_left</name><argument_list pos:start="13:27" pos:end="13:34">(<argument pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:33"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="13:37" pos:end="13:43"><expr pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:37">i</name> <operator pos:start="13:39" pos:end="13:39">&gt;</operator> <literal type="number" pos:start="13:41" pos:end="13:42">24</literal></expr>;</condition> <incr pos:start="13:45" pos:end="13:50"><expr pos:start="13:45" pos:end="13:50"><name pos:start="13:45" pos:end="13:45">i</name> <operator pos:start="13:47" pos:end="13:48">-=</operator> <literal type="number" pos:start="13:50" pos:end="13:50">1</literal></expr></incr>)</control> <block pos:start="13:53" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:18">

        <expr_stmt pos:start="15:9" pos:end="15:74"><expr pos:start="15:9" pos:end="15:73"><name pos:start="15:9" pos:end="15:17">startcode</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <operator pos:start="15:21" pos:end="15:21">(</operator><operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:31">startcode</name> <operator pos:start="15:33" pos:end="15:34">&lt;&lt;</operator> <literal type="number" pos:start="15:36" pos:end="15:36">1</literal><operator pos:start="15:37" pos:end="15:37">)</operator> <operator pos:start="15:39" pos:end="15:39">|</operator> <call pos:start="15:41" pos:end="15:59"><name pos:start="15:41" pos:end="15:48">get_bits</name><argument_list pos:start="15:49" pos:end="15:59">(<argument pos:start="15:50" pos:end="15:55"><expr pos:start="15:50" pos:end="15:55"><operator pos:start="15:50" pos:end="15:50">&amp;</operator><name pos:start="15:51" pos:end="15:55"><name pos:start="15:51" pos:end="15:51">s</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:55">gb</name></name></expr></argument>, <argument pos:start="15:58" pos:end="15:58"><expr pos:start="15:58" pos:end="15:58"><literal type="number" pos:start="15:58" pos:end="15:58">1</literal></expr></argument>)</argument_list></call><operator pos:start="15:60" pos:end="15:60">)</operator> <operator pos:start="15:62" pos:end="15:62">&amp;</operator> <literal type="number" pos:start="15:64" pos:end="15:73">0x000FFFFF</literal></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="21:18"><if pos:start="19:9" pos:end="21:18">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:21">startcode</name> <operator pos:start="19:23" pos:end="19:24">==</operator> <literal type="number" pos:start="19:26" pos:end="19:29">0x10</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:26">(<expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:17">startcode</name> <operator pos:start="27:19" pos:end="27:20">!=</operator> <literal type="number" pos:start="27:22" pos:end="27:25">0x10</literal></expr>)</condition> <block pos:start="27:28" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:66">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:40" pos:end="29:65"><expr pos:start="29:40" pos:end="29:65"><literal type="string" pos:start="29:40" pos:end="29:65">"Bad picture start code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:28">/* temporal reference */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:5">i</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:16">get_bits</name><argument_list pos:start="39:17" pos:end="39:27">(<argument pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:23"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:23"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:23">gb</name></name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:30" pos:end="39:52">/* picture timestamp */</comment>

    <if_stmt pos:start="41:5" pos:end="43:16"><if pos:start="41:5" pos:end="43:16">if <condition pos:start="41:8" pos:end="41:37">(<expr pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">&lt;</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:30"><name pos:start="41:14" pos:end="41:14">s</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:30">picture_number</name></name> <operator pos:start="41:32" pos:end="41:32">&amp;</operator> <literal type="number" pos:start="41:34" pos:end="41:35">31</literal><operator pos:start="41:36" pos:end="41:36">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:16"><block_content pos:start="43:9" pos:end="43:16">

        <expr_stmt pos:start="43:9" pos:end="43:16"><expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:12">+=</operator> <literal type="number" pos:start="43:14" pos:end="43:15">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:21">picture_number</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:42"><name pos:start="45:26" pos:end="45:26">s</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:42">picture_number</name></name> <operator pos:start="45:44" pos:end="45:44">&amp;</operator> <operator pos:start="45:46" pos:end="45:46">~</operator><literal type="number" pos:start="45:47" pos:end="45:48">31</literal><operator pos:start="45:49" pos:end="45:49">)</operator> <operator pos:start="45:51" pos:end="45:51">+</operator> <name pos:start="45:53" pos:end="45:53">i</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:60"><expr pos:start="49:5" pos:end="49:59"><name pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:12">avctx</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:23">time_base</name></name>      <operator pos:start="49:30" pos:end="49:30">=</operator> <operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:42">AVRational</name><operator pos:start="49:43" pos:end="49:43">)</operator> <block pos:start="49:45" pos:end="49:59">{ <expr pos:start="49:47" pos:end="49:50"><literal type="number" pos:start="49:47" pos:end="49:50">1001</literal></expr>, <expr pos:start="49:53" pos:end="49:57"><literal type="number" pos:start="49:53" pos:end="49:57">30000</literal></expr> }</block></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:27">/* PTYPE starts here */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><call pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:14">skip_bits1</name><argument_list pos:start="55:15" pos:end="55:22">(<argument pos:start="55:16" pos:end="55:21"><expr pos:start="55:16" pos:end="55:21"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:25" pos:end="55:46">/* split screen off */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><call pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:14">skip_bits1</name><argument_list pos:start="57:15" pos:end="57:22">(<argument pos:start="57:16" pos:end="57:21"><expr pos:start="57:16" pos:end="57:21"><operator pos:start="57:16" pos:end="57:16">&amp;</operator><name pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:25" pos:end="57:41">/* camera  off */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><call pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:14">skip_bits1</name><argument_list pos:start="59:15" pos:end="59:22">(<argument pos:start="59:16" pos:end="59:21"><expr pos:start="59:16" pos:end="59:21"><operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:25" pos:end="59:56">/* freeze picture release off */</comment>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:10">format</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:30"><name pos:start="63:14" pos:end="63:22">get_bits1</name><argument_list pos:start="63:23" pos:end="63:30">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><operator pos:start="63:24" pos:end="63:24">&amp;</operator><name pos:start="63:25" pos:end="63:29"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="67:5" pos:end="67:30">// only 2 formats possible</comment>

    <if_stmt pos:start="69:5" pos:end="89:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:14">format</name> <operator pos:start="69:16" pos:end="69:17">==</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition> <block pos:start="69:22" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:25"> <comment type="line" pos:start="69:24" pos:end="69:30">// QCIF</comment>

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:16">width</name></name>     <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:26">176</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:17">height</name></name>    <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:26">144</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:19">mb_width</name></name>  <operator pos:start="75:22" pos:end="75:22">=</operator> <literal type="number" pos:start="75:24" pos:end="75:25">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:25"><expr pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">mb_height</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:24">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="89:5">else <block pos:start="79:12" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:26"> <comment type="line" pos:start="79:14" pos:end="79:19">// CIF</comment>

        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:16">width</name></name>     <operator pos:start="81:22" pos:end="81:22">=</operator> <literal type="number" pos:start="81:24" pos:end="81:26">352</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:27"><expr pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:17">height</name></name>    <operator pos:start="83:22" pos:end="83:22">=</operator> <literal type="number" pos:start="83:24" pos:end="83:26">288</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:19">mb_width</name></name>  <operator pos:start="85:22" pos:end="85:22">=</operator> <literal type="number" pos:start="85:24" pos:end="85:25">22</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:26"><expr pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">mb_height</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <literal type="number" pos:start="87:24" pos:end="87:25">18</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:43"><expr pos:start="93:5" pos:end="93:42"><name pos:start="93:5" pos:end="93:13"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:13">mb_num</name></name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:27">mb_width</name></name> <operator pos:start="93:29" pos:end="93:29">*</operator> <name pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:31">s</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:42">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:23"><expr pos:start="97:5" pos:end="97:22"><call pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:14">skip_bits1</name><argument_list pos:start="97:15" pos:end="97:22">(<argument pos:start="97:16" pos:end="97:21"><expr pos:start="97:16" pos:end="97:21"><operator pos:start="97:16" pos:end="97:16">&amp;</operator><name pos:start="97:17" pos:end="97:21"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:25" pos:end="97:50">/* still image mode off */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><call pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:14">skip_bits1</name><argument_list pos:start="99:15" pos:end="99:22">(<argument pos:start="99:16" pos:end="99:21"><expr pos:start="99:16" pos:end="99:21"><operator pos:start="99:16" pos:end="99:16">&amp;</operator><name pos:start="99:17" pos:end="99:21"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="99:25" pos:end="99:38">/* Reserved */</comment>



    <comment type="block" pos:start="103:5" pos:end="103:13">/* PEI */</comment>

    <while pos:start="105:5" pos:end="107:29">while <condition pos:start="105:11" pos:end="105:34">(<expr pos:start="105:12" pos:end="105:33"><call pos:start="105:12" pos:end="105:28"><name pos:start="105:12" pos:end="105:20">get_bits1</name><argument_list pos:start="105:21" pos:end="105:28">(<argument pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:27"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:27"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="105:30" pos:end="105:31">!=</operator> <literal type="number" pos:start="105:33" pos:end="105:33">0</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:29"><block_content pos:start="107:9" pos:end="107:29">

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><call pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:17">skip_bits</name><argument_list pos:start="107:18" pos:end="107:28">(<argument pos:start="107:19" pos:end="107:24"><expr pos:start="107:19" pos:end="107:24"><operator pos:start="107:19" pos:end="107:19">&amp;</operator><name pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:20">s</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:24">gb</name></name></expr></argument>, <argument pos:start="107:27" pos:end="107:27"><expr pos:start="107:27" pos:end="107:27"><literal type="number" pos:start="107:27" pos:end="107:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="111:5" pos:end="115:39">/* H.261 has no I-frames, but if we pass AV_PICTURE_TYPE_I for the first

     * frame, the codec crashes if it does not contain all I-blocks

     * (e.g. when a packet is lost). */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:37"><expr pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:16"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:16">pict_type</name></name> <operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:36">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:22"><expr pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:17"><name pos:start="121:5" pos:end="121:5">h</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:17">gob_number</name></name> <operator pos:start="121:19" pos:end="121:19">=</operator> <literal type="number" pos:start="121:21" pos:end="121:21">0</literal></expr>;</expr_stmt>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
