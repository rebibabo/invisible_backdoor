<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7453.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qemu_chr_parse_udp</name><parameter_list pos:start="1:31" pos:end="3:44">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:39">QemuOpts</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">opts</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:70"><decl pos:start="1:48" pos:end="1:70"><type pos:start="1:48" pos:end="1:70"><name pos:start="1:48" pos:end="1:61">ChardevBackend</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">backend</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:36">Error</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier><modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:5">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">host</name> <init pos:start="7:22" pos:end="7:49">= <expr pos:start="7:24" pos:end="7:49"><call pos:start="7:24" pos:end="7:49"><name pos:start="7:24" pos:end="7:35">qemu_opt_get</name><argument_list pos:start="7:36" pos:end="7:49">(<argument pos:start="7:37" pos:end="7:40"><expr pos:start="7:37" pos:end="7:40"><name pos:start="7:37" pos:end="7:40">opts</name></expr></argument>, <argument pos:start="7:43" pos:end="7:48"><expr pos:start="7:43" pos:end="7:48"><literal type="string" pos:start="7:43" pos:end="7:48">"host"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">port</name> <init pos:start="9:22" pos:end="9:49">= <expr pos:start="9:24" pos:end="9:49"><call pos:start="9:24" pos:end="9:49"><name pos:start="9:24" pos:end="9:35">qemu_opt_get</name><argument_list pos:start="9:36" pos:end="9:49">(<argument pos:start="9:37" pos:end="9:40"><expr pos:start="9:37" pos:end="9:40"><name pos:start="9:37" pos:end="9:40">opts</name></expr></argument>, <argument pos:start="9:43" pos:end="9:48"><expr pos:start="9:43" pos:end="9:48"><literal type="string" pos:start="9:43" pos:end="9:48">"port"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:25">localaddr</name> <init pos:start="11:27" pos:end="11:59">= <expr pos:start="11:29" pos:end="11:59"><call pos:start="11:29" pos:end="11:59"><name pos:start="11:29" pos:end="11:40">qemu_opt_get</name><argument_list pos:start="11:41" pos:end="11:59">(<argument pos:start="11:42" pos:end="11:45"><expr pos:start="11:42" pos:end="11:45"><name pos:start="11:42" pos:end="11:45">opts</name></expr></argument>, <argument pos:start="11:48" pos:end="11:58"><expr pos:start="11:48" pos:end="11:58"><literal type="string" pos:start="11:48" pos:end="11:58">"localaddr"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:59"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:25">localport</name> <init pos:start="13:27" pos:end="13:59">= <expr pos:start="13:29" pos:end="13:59"><call pos:start="13:29" pos:end="13:59"><name pos:start="13:29" pos:end="13:40">qemu_opt_get</name><argument_list pos:start="13:41" pos:end="13:59">(<argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">opts</name></expr></argument>, <argument pos:start="13:48" pos:end="13:58"><expr pos:start="13:48" pos:end="13:58"><literal type="string" pos:start="13:48" pos:end="13:58">"localport"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:18">has_local</name> <init pos:start="15:20" pos:end="15:26">= <expr pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:26">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">SocketAddress</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:23">addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:12">host</name> <operator pos:start="21:14" pos:end="21:15">==</operator> <name pos:start="21:17" pos:end="21:20">NULL</name> <operator pos:start="21:22" pos:end="21:23">||</operator> <call pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:30">strlen</name><argument_list pos:start="21:31" pos:end="21:36">(<argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">host</name></expr></argument>)</argument_list></call> <operator pos:start="21:38" pos:end="21:39">==</operator> <literal type="number" pos:start="21:41" pos:end="21:41">0</literal></expr>)</condition> <block pos:start="21:44" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:27">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:12">host</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="string" pos:start="23:16" pos:end="23:26">"localhost"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:42">(<expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:12">port</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <name pos:start="27:17" pos:end="27:20">NULL</name> <operator pos:start="27:22" pos:end="27:23">||</operator> <call pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:30">strlen</name><argument_list pos:start="27:31" pos:end="27:36">(<argument pos:start="27:32" pos:end="27:35"><expr pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:35">port</name></expr></argument>)</argument_list></call> <operator pos:start="27:38" pos:end="27:39">==</operator> <literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr>)</condition> <block pos:start="27:44" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:68"><expr pos:start="29:9" pos:end="29:67"><call pos:start="29:9" pos:end="29:67"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:67">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:66"><expr pos:start="29:26" pos:end="29:66"><literal type="string" pos:start="29:26" pos:end="29:66">"chardev: udp: remote port not specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:52">(<expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:17">localport</name> <operator pos:start="35:19" pos:end="35:20">==</operator> <name pos:start="35:22" pos:end="35:25">NULL</name> <operator pos:start="35:27" pos:end="35:28">||</operator> <call pos:start="35:30" pos:end="35:46"><name pos:start="35:30" pos:end="35:35">strlen</name><argument_list pos:start="35:36" pos:end="35:46">(<argument pos:start="35:37" pos:end="35:45"><expr pos:start="35:37" pos:end="35:45"><name pos:start="35:37" pos:end="35:45">localport</name></expr></argument>)</argument_list></call> <operator pos:start="35:48" pos:end="35:49">==</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>)</condition> <block pos:start="35:54" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:24">

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:17">localport</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="string" pos:start="37:21" pos:end="37:23">"0"</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:25">

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:17">has_local</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:24">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:52">(<expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:17">localaddr</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <name pos:start="45:22" pos:end="45:25">NULL</name> <operator pos:start="45:27" pos:end="45:28">||</operator> <call pos:start="45:30" pos:end="45:46"><name pos:start="45:30" pos:end="45:35">strlen</name><argument_list pos:start="45:36" pos:end="45:46">(<argument pos:start="45:37" pos:end="45:45"><expr pos:start="45:37" pos:end="45:45"><name pos:start="45:37" pos:end="45:45">localaddr</name></expr></argument>)</argument_list></call> <operator pos:start="45:48" pos:end="45:49">==</operator> <literal type="number" pos:start="45:51" pos:end="45:51">0</literal></expr>)</condition> <block pos:start="45:54" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:23">

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:17">localaddr</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="string" pos:start="47:21" pos:end="47:22">""</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:25">

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:17">has_local</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:24">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:11">backend</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:16">udp</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:40"><name pos:start="57:20" pos:end="57:25">g_new0</name><argument_list pos:start="57:26" pos:end="57:40">(<argument pos:start="57:27" pos:end="57:36"><expr pos:start="57:27" pos:end="57:36"><name pos:start="57:27" pos:end="57:36">ChardevUdp</name></expr></argument>, <argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><literal type="number" pos:start="57:39" pos:end="57:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:8">addr</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="61:35"><name pos:start="61:12" pos:end="61:17">g_new0</name><argument_list pos:start="61:18" pos:end="61:35">(<argument pos:start="61:19" pos:end="61:31"><expr pos:start="61:19" pos:end="61:31"><name pos:start="61:19" pos:end="61:31">SocketAddress</name></expr></argument>, <argument pos:start="61:34" pos:end="61:34"><expr pos:start="61:34" pos:end="61:34"><literal type="number" pos:start="61:34" pos:end="61:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:14"><name pos:start="63:5" pos:end="63:8">addr</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:14">kind</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:41">SOCKET_ADDRESS_KIND_INET</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:46"><expr pos:start="65:5" pos:end="65:45"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:8">addr</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:14">inet</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:45"><name pos:start="65:18" pos:end="65:23">g_new0</name><argument_list pos:start="65:24" pos:end="65:45">(<argument pos:start="65:25" pos:end="65:41"><expr pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:41">InetSocketAddress</name></expr></argument>, <argument pos:start="65:44" pos:end="65:44"><expr pos:start="65:44" pos:end="65:44"><literal type="number" pos:start="65:44" pos:end="65:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:38"><expr pos:start="67:5" pos:end="67:37"><name pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:8">addr</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:14">inet</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:20">host</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <call pos:start="67:24" pos:end="67:37"><name pos:start="67:24" pos:end="67:31">g_strdup</name><argument_list pos:start="67:32" pos:end="67:37">(<argument pos:start="67:33" pos:end="67:36"><expr pos:start="67:33" pos:end="67:36"><name pos:start="67:33" pos:end="67:36">host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:38"><expr pos:start="69:5" pos:end="69:37"><name pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:8">addr</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:14">inet</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:20">port</name></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <call pos:start="69:24" pos:end="69:37"><name pos:start="69:24" pos:end="69:31">g_strdup</name><argument_list pos:start="69:32" pos:end="69:37">(<argument pos:start="69:33" pos:end="69:36"><expr pos:start="69:33" pos:end="69:36"><name pos:start="69:33" pos:end="69:36">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:8">addr</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:14">inet</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:24">has_ipv4</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <call pos:start="71:28" pos:end="71:53"><name pos:start="71:28" pos:end="71:39">qemu_opt_get</name><argument_list pos:start="71:40" pos:end="71:53">(<argument pos:start="71:41" pos:end="71:44"><expr pos:start="71:41" pos:end="71:44"><name pos:start="71:41" pos:end="71:44">opts</name></expr></argument>, <argument pos:start="71:47" pos:end="71:52"><expr pos:start="71:47" pos:end="71:52"><literal type="string" pos:start="71:47" pos:end="71:52">"ipv4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:58"><expr pos:start="73:5" pos:end="73:57"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:8">addr</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:14">inet</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:20">ipv4</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:57"><name pos:start="73:24" pos:end="73:40">qemu_opt_get_bool</name><argument_list pos:start="73:41" pos:end="73:57">(<argument pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:45"><name pos:start="73:42" pos:end="73:45">opts</name></expr></argument>, <argument pos:start="73:48" pos:end="73:53"><expr pos:start="73:48" pos:end="73:53"><literal type="string" pos:start="73:48" pos:end="73:53">"ipv4"</literal></expr></argument>, <argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><literal type="number" pos:start="73:56" pos:end="73:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:54"><expr pos:start="75:5" pos:end="75:53"><name pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:8">addr</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:14">inet</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:24">has_ipv6</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <call pos:start="75:28" pos:end="75:53"><name pos:start="75:28" pos:end="75:39">qemu_opt_get</name><argument_list pos:start="75:40" pos:end="75:53">(<argument pos:start="75:41" pos:end="75:44"><expr pos:start="75:41" pos:end="75:44"><name pos:start="75:41" pos:end="75:44">opts</name></expr></argument>, <argument pos:start="75:47" pos:end="75:52"><expr pos:start="75:47" pos:end="75:52"><literal type="string" pos:start="75:47" pos:end="75:52">"ipv6"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:58"><expr pos:start="77:5" pos:end="77:57"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:8">addr</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:14">inet</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:20">ipv6</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:57"><name pos:start="77:24" pos:end="77:40">qemu_opt_get_bool</name><argument_list pos:start="77:41" pos:end="77:57">(<argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><name pos:start="77:42" pos:end="77:45">opts</name></expr></argument>, <argument pos:start="77:48" pos:end="77:53"><expr pos:start="77:48" pos:end="77:53"><literal type="string" pos:start="77:48" pos:end="77:53">"ipv6"</literal></expr></argument>, <argument pos:start="77:56" pos:end="77:56"><expr pos:start="77:56" pos:end="77:56"><literal type="number" pos:start="77:56" pos:end="77:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:32"><expr pos:start="79:5" pos:end="79:31"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:11">backend</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:16">udp</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:24">remote</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:31">addr</name></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="99:5"><if pos:start="83:5" pos:end="99:5">if <condition pos:start="83:8" pos:end="83:18">(<expr pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:17">has_local</name></expr>)</condition> <block pos:start="83:20" pos:end="99:5">{<block_content pos:start="85:9" pos:end="97:35">

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:15">backend</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:20">udp</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:31">has_local</name></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:38">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:12">addr</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="87:39"><name pos:start="87:16" pos:end="87:21">g_new0</name><argument_list pos:start="87:22" pos:end="87:39">(<argument pos:start="87:23" pos:end="87:35"><expr pos:start="87:23" pos:end="87:35"><name pos:start="87:23" pos:end="87:35">SocketAddress</name></expr></argument>, <argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:46"><expr pos:start="89:9" pos:end="89:45"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:12">addr</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:18">kind</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:45">SOCKET_ADDRESS_KIND_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:12">addr</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:18">inet</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <call pos:start="91:22" pos:end="91:49"><name pos:start="91:22" pos:end="91:27">g_new0</name><argument_list pos:start="91:28" pos:end="91:49">(<argument pos:start="91:29" pos:end="91:45"><expr pos:start="91:29" pos:end="91:45"><name pos:start="91:29" pos:end="91:45">InetSocketAddress</name></expr></argument>, <argument pos:start="91:48" pos:end="91:48"><expr pos:start="91:48" pos:end="91:48"><literal type="number" pos:start="91:48" pos:end="91:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:47"><expr pos:start="93:9" pos:end="93:46"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:12">addr</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:18">inet</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:24">host</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <call pos:start="93:28" pos:end="93:46"><name pos:start="93:28" pos:end="93:35">g_strdup</name><argument_list pos:start="93:36" pos:end="93:46">(<argument pos:start="93:37" pos:end="93:45"><expr pos:start="93:37" pos:end="93:45"><name pos:start="93:37" pos:end="93:45">localaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:12">addr</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:18">inet</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:24">port</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:46"><name pos:start="95:28" pos:end="95:35">g_strdup</name><argument_list pos:start="95:36" pos:end="95:46">(<argument pos:start="95:37" pos:end="95:45"><expr pos:start="95:37" pos:end="95:45"><name pos:start="95:37" pos:end="95:45">localport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:35"><expr pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:15">backend</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:20">udp</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:27">local</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <name pos:start="97:31" pos:end="97:34">addr</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
