<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3808.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">SerialState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:27">serial_mm_init</name><parameter_list pos:start="1:28" pos:end="7:73">(<parameter pos:start="1:29" pos:end="1:55"><decl pos:start="1:29" pos:end="1:55"><type pos:start="1:29" pos:end="1:55"><name pos:start="1:29" pos:end="1:40">MemoryRegion</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:55">address_space</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:39"><decl pos:start="3:29" pos:end="3:39"><type pos:start="3:29" pos:end="3:39"><name pos:start="3:29" pos:end="3:34">hwaddr</name></type> <name pos:start="3:36" pos:end="3:39">base</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">it_shift</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:36">qemu_irq</name></type> <name pos:start="5:38" pos:end="5:40">irq</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">baudbase</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:48"><decl pos:start="7:29" pos:end="7:48"><type pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:43">CharDriverState</name> <modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:48">chr</name></decl></parameter>, <parameter pos:start="7:51" pos:end="7:72"><decl pos:start="7:51" pos:end="7:72"><type pos:start="7:51" pos:end="7:72"><name pos:start="7:51" pos:end="7:68"><name pos:start="7:51" pos:end="7:54">enum</name> <name pos:start="7:56" pos:end="7:68">device_endian</name></name></type> <name pos:start="7:70" pos:end="7:72">end</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="59:1">{<block_content pos:start="11:5" pos:end="57:13">

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">SerialState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:5">s</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:17">g_malloc0</name><argument_list pos:start="17:18" pos:end="17:38">(<argument pos:start="17:19" pos:end="17:37"><expr pos:start="17:19" pos:end="17:37"><sizeof pos:start="17:19" pos:end="17:37">sizeof<argument_list pos:start="17:25" pos:end="17:37">(<argument pos:start="17:26" pos:end="17:36"><expr pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:36">SerialState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:15">it_shift</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:26">it_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:10">irq</name></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">baudbase</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:26">baudbase</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">chr</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:16">chr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:23">serial_realize_core</name><argument_list pos:start="31:24" pos:end="31:32">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:31">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:14">!=</operator> <name pos:start="33:16" pos:end="33:19">NULL</name></expr>)</condition> <block pos:start="33:22" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:16">

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:20">error_report</name><argument_list pos:start="35:21" pos:end="35:49">(<argument pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:25"><literal type="string" pos:start="35:22" pos:end="35:25">"%s"</literal></expr></argument>, <argument pos:start="35:28" pos:end="35:48"><expr pos:start="35:28" pos:end="35:48"><call pos:start="35:28" pos:end="35:48"><name pos:start="35:28" pos:end="35:43">error_get_pretty</name><argument_list pos:start="35:44" pos:end="35:48">(<argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:47">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:18">error_free</name><argument_list pos:start="37:19" pos:end="37:23">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">exit</name><argument_list pos:start="39:13" pos:end="39:15">(<argument pos:start="39:14" pos:end="39:14"><expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><call pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:20">vmstate_register</name><argument_list pos:start="43:21" pos:end="43:52">(<argument pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">NULL</name></expr></argument>, <argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">base</name></expr></argument>, <argument pos:start="43:34" pos:end="43:48"><expr pos:start="43:34" pos:end="43:48"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:48">vmstate_serial</name></expr></argument>, <argument pos:start="43:51" pos:end="43:51"><expr pos:start="43:51" pos:end="43:51"><name pos:start="43:51" pos:end="43:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:51"><expr pos:start="47:5" pos:end="49:50"><call pos:start="47:5" pos:end="49:50"><name pos:start="47:5" pos:end="47:25">memory_region_init_io</name><argument_list pos:start="47:26" pos:end="49:50">(<argument pos:start="47:27" pos:end="47:32"><expr pos:start="47:27" pos:end="47:32"><operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:32"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:32">io</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">NULL</name></expr></argument>, <argument pos:start="47:41" pos:end="47:59"><expr pos:start="47:41" pos:end="47:59"><operator pos:start="47:41" pos:end="47:41">&amp;</operator><name pos:start="47:42" pos:end="47:59"><name pos:start="47:42" pos:end="47:54">serial_mm_ops</name><index pos:start="47:55" pos:end="47:59">[<expr pos:start="47:56" pos:end="47:58"><name pos:start="47:56" pos:end="47:58">end</name></expr>]</index></name></expr></argument>, <argument pos:start="47:62" pos:end="47:62"><expr pos:start="47:62" pos:end="47:62"><name pos:start="47:62" pos:end="47:62">s</name></expr></argument>,

                          <argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><literal type="string" pos:start="49:27" pos:end="49:34">"serial"</literal></expr></argument>, <argument pos:start="49:37" pos:end="49:49"><expr pos:start="49:37" pos:end="49:49"><literal type="number" pos:start="49:37" pos:end="49:37">8</literal> <operator pos:start="49:39" pos:end="49:40">&lt;&lt;</operator> <name pos:start="49:42" pos:end="49:49">it_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:61"><expr pos:start="51:5" pos:end="51:60"><call pos:start="51:5" pos:end="51:60"><name pos:start="51:5" pos:end="51:31">memory_region_add_subregion</name><argument_list pos:start="51:32" pos:end="51:60">(<argument pos:start="51:33" pos:end="51:45"><expr pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:45">address_space</name></expr></argument>, <argument pos:start="51:48" pos:end="51:51"><expr pos:start="51:48" pos:end="51:51"><name pos:start="51:48" pos:end="51:51">base</name></expr></argument>, <argument pos:start="51:54" pos:end="51:59"><expr pos:start="51:54" pos:end="51:59"><operator pos:start="51:54" pos:end="51:54">&amp;</operator><name pos:start="51:55" pos:end="51:59"><name pos:start="51:55" pos:end="51:55">s</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:59">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:21">serial_update_msl</name><argument_list pos:start="55:22" pos:end="55:24">(<argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><name pos:start="57:12" pos:end="57:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
