<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1155.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:27">av_always_inline</name></type> <name pos:start="1:29" pos:end="1:41">mlp_thd_probe</name><parameter_list pos:start="1:42" pos:end="1:72">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">AVProbeData</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">p</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:71">sync</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:72"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name></decl>, <decl pos:start="5:25" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:33">last_buf</name> <init pos:start="5:35" pos:end="5:42">= <expr pos:start="5:37" pos:end="5:42"><name pos:start="5:37" pos:end="5:42"><name pos:start="5:37" pos:end="5:37">p</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:42">buf</name></name></expr></init></decl>, <decl pos:start="5:45" pos:end="5:71"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:48">end</name> <init pos:start="5:50" pos:end="5:71">= <expr pos:start="5:52" pos:end="5:71"><name pos:start="5:52" pos:end="5:57"><name pos:start="5:52" pos:end="5:52">p</name><operator pos:start="5:53" pos:end="5:54">-&gt;</operator><name pos:start="5:55" pos:end="5:57">buf</name></name> <operator pos:start="5:59" pos:end="5:59">+</operator> <name pos:start="5:61" pos:end="5:71"><name pos:start="5:61" pos:end="5:61">p</name><operator pos:start="5:62" pos:end="5:63">-&gt;</operator><name pos:start="5:64" pos:end="5:71">buf_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">frames</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:25">valid</name> <init pos:start="7:27" pos:end="7:29">= <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr></init></decl>, <decl pos:start="7:32" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:35">size</name> <init pos:start="7:37" pos:end="7:39">= <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="33:5">for <control pos:start="11:9" pos:end="11:45">(<init pos:start="11:10" pos:end="11:22"><expr pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:12">buf</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:21"><name pos:start="11:16" pos:end="11:16">p</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:21">buf</name></name></expr>;</init> <condition pos:start="11:24" pos:end="11:38"><expr pos:start="11:24" pos:end="11:37"><name pos:start="11:24" pos:end="11:26">buf</name> <operator pos:start="11:28" pos:end="11:28">+</operator> <literal type="number" pos:start="11:30" pos:end="11:30">8</literal> <operator pos:start="11:32" pos:end="11:33">&lt;=</operator> <name pos:start="11:35" pos:end="11:37">end</name></expr>;</condition> <incr pos:start="11:40" pos:end="11:44"><expr pos:start="11:40" pos:end="11:44"><name pos:start="11:40" pos:end="11:42">buf</name><operator pos:start="11:43" pos:end="11:44">++</operator></expr></incr>)</control> <block pos:start="11:47" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="27:9">if <condition pos:start="13:12" pos:end="13:37">(<expr pos:start="13:13" pos:end="13:36"><call pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:19">AV_RB32</name><argument_list pos:start="13:20" pos:end="13:28">(<argument pos:start="13:21" pos:end="13:27"><expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:23">buf</name> <operator pos:start="13:25" pos:end="13:25">+</operator> <literal type="number" pos:start="13:27" pos:end="13:27">4</literal></expr></argument>)</argument_list></call> <operator pos:start="13:30" pos:end="13:31">==</operator> <name pos:start="13:33" pos:end="13:36">sync</name></expr>)</condition> <block pos:start="13:39" pos:end="27:9">{<block_content pos:start="15:13" pos:end="25:46">

            <expr_stmt pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:18">frames</name><operator pos:start="15:19" pos:end="15:20">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="17:13" pos:end="21:13"><if pos:start="17:13" pos:end="21:13">if <condition pos:start="17:16" pos:end="17:39">(<expr pos:start="17:17" pos:end="17:38"><name pos:start="17:17" pos:end="17:24">last_buf</name> <operator pos:start="17:26" pos:end="17:26">+</operator> <name pos:start="17:28" pos:end="17:31">size</name> <operator pos:start="17:33" pos:end="17:34">==</operator> <name pos:start="17:36" pos:end="17:38">buf</name></expr>)</condition> <block pos:start="17:41" pos:end="21:13">{<block_content pos:start="19:17" pos:end="19:24">

                <expr_stmt pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:21">valid</name><operator pos:start="19:22" pos:end="19:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:27"><expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:20">last_buf</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:26">buf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:46"><expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:16">size</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><call pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:27">AV_RB16</name><argument_list pos:start="25:28" pos:end="25:32">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="25:34" pos:end="25:34">&amp;</operator> <literal type="number" pos:start="25:36" pos:end="25:40">0xfff</literal><operator pos:start="25:41" pos:end="25:41">)</operator> <operator pos:start="25:43" pos:end="25:43">*</operator> <literal type="number" pos:start="25:45" pos:end="25:45">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="27:11" pos:end="31:9">else if <condition pos:start="27:19" pos:end="27:42">(<expr pos:start="27:20" pos:end="27:41"><name pos:start="27:20" pos:end="27:22">buf</name> <operator pos:start="27:24" pos:end="27:24">-</operator> <name pos:start="27:26" pos:end="27:33">last_buf</name> <operator pos:start="27:35" pos:end="27:36">==</operator> <name pos:start="27:38" pos:end="27:41">size</name></expr>)</condition> <block pos:start="27:44" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:47">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:16">size</name> <operator pos:start="29:18" pos:end="29:19">+=</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><call pos:start="29:22" pos:end="29:33"><name pos:start="29:22" pos:end="29:28">AV_RB16</name><argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">buf</name></expr></argument>)</argument_list></call> <operator pos:start="29:35" pos:end="29:35">&amp;</operator> <literal type="number" pos:start="29:37" pos:end="29:41">0xfff</literal><operator pos:start="29:42" pos:end="29:42">)</operator> <operator pos:start="29:44" pos:end="29:44">*</operator> <literal type="number" pos:start="29:46" pos:end="29:46">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="35:5" pos:end="37:33"><if pos:start="35:5" pos:end="37:33">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:13">valid</name> <operator pos:start="35:15" pos:end="35:16">&gt;=</operator> <literal type="number" pos:start="35:18" pos:end="35:20">100</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:33"><block_content pos:start="37:9" pos:end="37:33">

        <return pos:start="37:9" pos:end="37:33">return <expr pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:32">AVPROBE_SCORE_MAX</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
