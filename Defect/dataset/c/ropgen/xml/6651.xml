<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6651.c" pos:tabs="8"><function pos:start="1:1" pos:end="479:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">make_setup_request</name><parameter_list pos:start="1:30" pos:end="3:78">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">host</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:76"><decl pos:start="1:69" pos:end="1:76"><type pos:start="1:69" pos:end="1:76"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:76">port</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:49"><decl pos:start="3:31" pos:end="3:49"><type pos:start="3:31" pos:end="3:49"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:49">lower_transport</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:77"><decl pos:start="3:52" pos:end="3:77"><type pos:start="3:52" pos:end="3:77"><specifier pos:start="3:52" pos:end="3:56">const</specifier> <name pos:start="3:58" pos:end="3:61">char</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:77">real_challenge</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="479:1">{<block_content pos:start="7:5" pos:end="477:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">rtx</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">j</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:17">i</name></decl>, <decl pos:start="9:20" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:22">err</name></decl>, <decl pos:start="9:25" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:34">interleave</name> <init pos:start="9:36" pos:end="9:38">= <expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">RTSPStream</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:21">RTSPMessageHeader</name></type> <name pos:start="13:23" pos:end="13:28">reply1</name></decl>, <decl pos:start="13:31" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:21"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:36">reply</name> <init pos:start="13:38" pos:end="13:46">= <expr pos:start="13:40" pos:end="13:46"><operator pos:start="13:40" pos:end="13:40">&amp;</operator><name pos:start="13:41" pos:end="13:46">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:12">cmd</name><index pos:start="15:13" pos:end="15:18">[<expr pos:start="15:14" pos:end="15:17"><literal type="number" pos:start="15:14" pos:end="15:17">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:26">trans_pref</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:31"><if pos:start="21:5" pos:end="23:32">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:10">rt</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:21">transport</name></name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:43">RTSP_TRANSPORT_RDT</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:32"><block_content pos:start="23:9" pos:end="23:32">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:18">trans_pref</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="string" pos:start="23:22" pos:end="23:31">"x-pn-tng"</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:31">else<block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:18">trans_pref</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="string" pos:start="27:22" pos:end="27:30">"RTP/AVP"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:35">/* default timeout: 1 minute */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:6">rt</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:15">timeout</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:20">60</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:49">/* for each stream, make the setup request */</comment>

    <comment type="block" pos:start="39:5" pos:end="41:21">/* XXX: we assume the same server is used for the control of each

     * RTSP stream */</comment>



    <for pos:start="45:5" pos:end="443:5">for <control pos:start="45:9" pos:end="45:68">(<init pos:start="45:10" pos:end="45:38"><expr pos:start="45:10" pos:end="45:30"><name pos:start="45:10" pos:end="45:10">j</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:30">RTSP_RTP_PORT_MIN</name></expr><operator pos:start="45:31" pos:end="45:31">,</operator> <expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:33">i</name> <operator pos:start="45:35" pos:end="45:35">=</operator> <literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr>;</init> <condition pos:start="45:40" pos:end="45:63"><expr pos:start="45:40" pos:end="45:62"><name pos:start="45:40" pos:end="45:40">i</name> <operator pos:start="45:42" pos:end="45:42">&lt;</operator> <name pos:start="45:44" pos:end="45:62"><name pos:start="45:44" pos:end="45:45">rt</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:62">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="45:65" pos:end="45:67"><expr pos:start="45:65" pos:end="45:67"><operator pos:start="45:65" pos:end="45:66">++</operator><name pos:start="45:67" pos:end="45:67">i</name></expr></incr>)</control> <block pos:start="45:70" pos:end="443:5">{<block_content pos:start="47:9" pos:end="441:22">

        <decl_stmt pos:start="47:9" pos:end="47:29"><decl pos:start="47:9" pos:end="47:28"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">char</name></type> <name pos:start="47:14" pos:end="47:28"><name pos:start="47:14" pos:end="47:22">transport</name><index pos:start="47:23" pos:end="47:28">[<expr pos:start="47:24" pos:end="47:27"><literal type="number" pos:start="47:24" pos:end="47:27">2048</literal></expr>]</index></name></decl>;</decl_stmt>



        <comment type="block" format="doxygen" pos:start="51:9" pos:end="59:11">/**

         * WMS serves all UDP data over a single connection, the RTX, which

         * isn't necessarily the first in the SDP but has to be the first

         * to be set up, else the second/third SETUP will fail with a 461.

         */</comment>

        <if_stmt pos:start="61:9" pos:end="95:42"><if pos:start="61:9" pos:end="93:9">if <condition pos:start="61:12" pos:end="63:48">(<expr pos:start="61:13" pos:end="63:47"><name pos:start="61:13" pos:end="61:27">lower_transport</name> <operator pos:start="61:29" pos:end="61:30">==</operator> <name pos:start="61:32" pos:end="61:55">RTSP_LOWER_TRANSPORT_UDP</name> <operator pos:start="61:57" pos:end="61:58">&amp;&amp;</operator>

             <name pos:start="63:14" pos:end="63:28"><name pos:start="63:14" pos:end="63:15">rt</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:28">server_type</name></name> <operator pos:start="63:30" pos:end="63:31">==</operator> <name pos:start="63:33" pos:end="63:47">RTSP_SERVER_WMS</name></expr>)</condition> <block pos:start="63:50" pos:end="93:9">{<block_content pos:start="65:13" pos:end="91:64">

            <if_stmt pos:start="65:13" pos:end="91:64"><if pos:start="65:13" pos:end="89:13">if <condition pos:start="65:16" pos:end="65:23">(<expr pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>)</condition> <block pos:start="65:25" pos:end="89:13">{<block_content pos:start="69:17" pos:end="87:48">

                <comment type="block" pos:start="67:17" pos:end="67:31">/* rtx first */</comment>

                <for pos:start="69:17" pos:end="81:17">for <control pos:start="69:21" pos:end="69:63">(<init pos:start="69:22" pos:end="69:29"><expr pos:start="69:22" pos:end="69:28"><name pos:start="69:22" pos:end="69:24">rtx</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</init> <condition pos:start="69:31" pos:end="69:56"><expr pos:start="69:31" pos:end="69:55"><name pos:start="69:31" pos:end="69:33">rtx</name> <operator pos:start="69:35" pos:end="69:35">&lt;</operator> <name pos:start="69:37" pos:end="69:55"><name pos:start="69:37" pos:end="69:38">rt</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:55">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="69:58" pos:end="69:62"><expr pos:start="69:58" pos:end="69:62"><name pos:start="69:58" pos:end="69:60">rtx</name><operator pos:start="69:61" pos:end="69:62">++</operator></expr></incr>)</control> <block pos:start="69:65" pos:end="81:17">{<block_content pos:start="71:21" pos:end="79:30">

                    <decl_stmt pos:start="71:21" pos:end="71:73"><decl pos:start="71:21" pos:end="71:72"><type pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:23">int</name></type> <name pos:start="71:25" pos:end="71:27">len</name> <init pos:start="71:29" pos:end="71:72">= <expr pos:start="71:31" pos:end="71:72"><call pos:start="71:31" pos:end="71:72"><name pos:start="71:31" pos:end="71:36">strlen</name><argument_list pos:start="71:37" pos:end="71:72">(<argument pos:start="71:38" pos:end="71:71"><expr pos:start="71:38" pos:end="71:71"><name pos:start="71:38" pos:end="71:58"><name pos:start="71:38" pos:end="71:39">rt</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:53">rtsp_streams</name><index pos:start="71:54" pos:end="71:58">[<expr pos:start="71:55" pos:end="71:57"><name pos:start="71:55" pos:end="71:57">rtx</name></expr>]</index></name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:71">control_url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="73:21" pos:end="79:30"><if pos:start="73:21" pos:end="79:30">if <condition pos:start="73:24" pos:end="77:40">(<expr pos:start="73:25" pos:end="77:39"><name pos:start="73:25" pos:end="73:27">len</name> <operator pos:start="73:29" pos:end="73:30">&gt;=</operator> <literal type="number" pos:start="73:32" pos:end="73:32">4</literal> <operator pos:start="73:34" pos:end="73:35">&amp;&amp;</operator>

                        <operator pos:start="75:25" pos:end="75:25">!</operator><call pos:start="75:26" pos:end="77:39"><name pos:start="75:26" pos:end="75:31">strcmp</name><argument_list pos:start="75:32" pos:end="77:39">(<argument pos:start="75:33" pos:end="75:76"><expr pos:start="75:33" pos:end="75:76"><name pos:start="75:33" pos:end="75:53"><name pos:start="75:33" pos:end="75:34">rt</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:48">rtsp_streams</name><index pos:start="75:49" pos:end="75:53">[<expr pos:start="75:50" pos:end="75:52"><name pos:start="75:50" pos:end="75:52">rtx</name></expr>]</index></name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:66">control_url</name> <operator pos:start="75:68" pos:end="75:68">+</operator> <name pos:start="75:70" pos:end="75:72">len</name> <operator pos:start="75:74" pos:end="75:74">-</operator> <literal type="number" pos:start="75:76" pos:end="75:76">4</literal></expr></argument>,

                                <argument pos:start="77:33" pos:end="77:38"><expr pos:start="77:33" pos:end="77:38"><literal type="string" pos:start="77:33" pos:end="77:38">"/rtx"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:25" pos:end="79:30"><block_content pos:start="79:25" pos:end="79:30">

                        <break pos:start="79:25" pos:end="79:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="83:17" pos:end="85:30"><if pos:start="83:17" pos:end="85:30">if <condition pos:start="83:20" pos:end="83:47">(<expr pos:start="83:21" pos:end="83:46"><name pos:start="83:21" pos:end="83:23">rtx</name> <operator pos:start="83:25" pos:end="83:26">==</operator> <name pos:start="83:28" pos:end="83:46"><name pos:start="83:28" pos:end="83:29">rt</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:46">nb_rtsp_streams</name></name></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:30"><block_content pos:start="85:21" pos:end="85:30">

                    <return pos:start="85:21" pos:end="85:30">return <expr pos:start="85:28" pos:end="85:29"><operator pos:start="85:28" pos:end="85:28">-</operator><literal type="number" pos:start="85:29" pos:end="85:29">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="85:32" pos:end="85:49">/* no RTX found */</comment>

                <expr_stmt pos:start="87:17" pos:end="87:48"><expr pos:start="87:17" pos:end="87:47"><name pos:start="87:17" pos:end="87:23">rtsp_st</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:47"><name pos:start="87:27" pos:end="87:28">rt</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:42">rtsp_streams</name><index pos:start="87:43" pos:end="87:47">[<expr pos:start="87:44" pos:end="87:46"><name pos:start="87:44" pos:end="87:46">rtx</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="91:64">else<block type="pseudo" pos:start="91:17" pos:end="91:64"><block_content pos:start="91:17" pos:end="91:64">

                <expr_stmt pos:start="91:17" pos:end="91:64"><expr pos:start="91:17" pos:end="91:63"><name pos:start="91:17" pos:end="91:23">rtsp_st</name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:63"><name pos:start="91:27" pos:end="91:28">rt</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:42">rtsp_streams</name><index pos:start="91:43" pos:end="91:63">[<expr pos:start="91:44" pos:end="91:62"><ternary pos:start="91:44" pos:end="91:62"><condition pos:start="91:44" pos:end="91:52"><expr pos:start="91:44" pos:end="91:50"><name pos:start="91:44" pos:end="91:44">i</name> <operator pos:start="91:46" pos:end="91:46">&gt;</operator> <name pos:start="91:48" pos:end="91:50">rtx</name></expr> ?</condition><then pos:start="91:54" pos:end="91:54"> <expr pos:start="91:54" pos:end="91:54"><name pos:start="91:54" pos:end="91:54">i</name></expr> </then><else pos:start="91:56" pos:end="91:62">: <expr pos:start="91:58" pos:end="91:62"><name pos:start="91:58" pos:end="91:58">i</name> <operator pos:start="91:60" pos:end="91:60">-</operator> <literal type="number" pos:start="91:62" pos:end="91:62">1</literal></expr></else></ternary></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="95:42">else<block type="pseudo" pos:start="95:13" pos:end="95:42"><block_content pos:start="95:13" pos:end="95:42">

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:19">rtsp_st</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:41"><name pos:start="95:23" pos:end="95:24">rt</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:38">rtsp_streams</name><index pos:start="95:39" pos:end="95:41">[<expr pos:start="95:40" pos:end="95:40"><name pos:start="95:40" pos:end="95:40">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:21">/* RTP/UDP */</comment>

        <if_stmt pos:start="101:9" pos:end="229:9"><if pos:start="101:9" pos:end="181:9">if <condition pos:start="101:12" pos:end="101:56">(<expr pos:start="101:13" pos:end="101:55"><name pos:start="101:13" pos:end="101:27">lower_transport</name> <operator pos:start="101:29" pos:end="101:30">==</operator> <name pos:start="101:32" pos:end="101:55">RTSP_LOWER_TRANSPORT_UDP</name></expr>)</condition> <block pos:start="101:58" pos:end="181:9">{<block_content pos:start="103:13" pos:end="179:75">

            <decl_stmt pos:start="103:13" pos:end="103:26"><decl pos:start="103:13" pos:end="103:25"><type pos:start="103:13" pos:end="103:16"><name pos:start="103:13" pos:end="103:16">char</name></type> <name pos:start="103:18" pos:end="103:25"><name pos:start="103:18" pos:end="103:20">buf</name><index pos:start="103:21" pos:end="103:25">[<expr pos:start="103:22" pos:end="103:24"><literal type="number" pos:start="103:22" pos:end="103:24">256</literal></expr>]</index></name></decl>;</decl_stmt>



            <if_stmt pos:start="107:13" pos:end="113:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:60">(<expr pos:start="107:17" pos:end="107:59"><name pos:start="107:17" pos:end="107:31"><name pos:start="107:17" pos:end="107:18">rt</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:31">server_type</name></name> <operator pos:start="107:33" pos:end="107:34">==</operator> <name pos:start="107:36" pos:end="107:50">RTSP_SERVER_WMS</name> <operator pos:start="107:52" pos:end="107:53">&amp;&amp;</operator> <name pos:start="107:55" pos:end="107:55">i</name> <operator pos:start="107:57" pos:end="107:57">&gt;</operator> <literal type="number" pos:start="107:59" pos:end="107:59">1</literal></expr>)</condition> <block pos:start="107:62" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:31">

                <expr_stmt pos:start="109:17" pos:end="109:60"><expr pos:start="109:17" pos:end="109:59"><name pos:start="109:17" pos:end="109:20">port</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:43"><name pos:start="109:24" pos:end="109:28">reply</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:40">transports</name><index pos:start="109:41" pos:end="109:43">[<expr pos:start="109:42" pos:end="109:42"><literal type="number" pos:start="109:42" pos:end="109:42">0</literal></expr>]</index></name><operator pos:start="109:44" pos:end="109:44">.</operator><name pos:start="109:45" pos:end="109:59">client_port_min</name></expr>;</expr_stmt>

                <goto pos:start="111:17" pos:end="111:31">goto <name pos:start="111:22" pos:end="111:30">have_port</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="117:13" pos:end="117:51">/* first try in specified port range */</comment>

            <if_stmt pos:start="119:13" pos:end="154:0"><if pos:start="119:13" pos:end="154:0">if <condition pos:start="119:16" pos:end="119:39">(<expr pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:33">RTSP_RTP_PORT_MIN</name> <operator pos:start="119:35" pos:end="119:36">!=</operator> <literal type="number" pos:start="119:38" pos:end="119:38">0</literal></expr>)</condition> <block pos:start="119:41" pos:end="154:0">{<block_content pos:start="121:17" pos:end="135:17">

                <while pos:start="121:17" pos:end="135:17">while <condition pos:start="121:23" pos:end="121:46">(<expr pos:start="121:24" pos:end="121:45"><name pos:start="121:24" pos:end="121:24">j</name> <operator pos:start="121:26" pos:end="121:27">&lt;=</operator> <name pos:start="121:29" pos:end="121:45">RTSP_RTP_PORT_MAX</name></expr>)</condition> <block pos:start="121:48" pos:end="135:17">{<block_content pos:start="123:21" pos:end="133:40">

                    <expr_stmt pos:start="123:21" pos:end="125:52"><expr pos:start="123:21" pos:end="125:51"><call pos:start="123:21" pos:end="125:51"><name pos:start="123:21" pos:end="123:31">ff_url_join</name><argument_list pos:start="123:32" pos:end="125:51">(<argument pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:35">buf</name></expr></argument>, <argument pos:start="123:38" pos:end="123:48"><expr pos:start="123:38" pos:end="123:48"><sizeof pos:start="123:38" pos:end="123:48">sizeof<argument_list pos:start="123:44" pos:end="123:48">(<argument pos:start="123:45" pos:end="123:47"><expr pos:start="123:45" pos:end="123:47"><name pos:start="123:45" pos:end="123:47">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="123:51" pos:end="123:55"><expr pos:start="123:51" pos:end="123:55"><literal type="string" pos:start="123:51" pos:end="123:55">"rtp"</literal></expr></argument>, <argument pos:start="123:58" pos:end="123:61"><expr pos:start="123:58" pos:end="123:61"><name pos:start="123:58" pos:end="123:61">NULL</name></expr></argument>, <argument pos:start="123:64" pos:end="123:67"><expr pos:start="123:64" pos:end="123:67"><name pos:start="123:64" pos:end="123:67">host</name></expr></argument>, <argument pos:start="123:70" pos:end="123:71"><expr pos:start="123:70" pos:end="123:71"><operator pos:start="123:70" pos:end="123:70">-</operator><literal type="number" pos:start="123:71" pos:end="123:71">1</literal></expr></argument>,

                                <argument pos:start="125:33" pos:end="125:47"><expr pos:start="125:33" pos:end="125:47"><literal type="string" pos:start="125:33" pos:end="125:47">"?localport=%d"</literal></expr></argument>, <argument pos:start="125:50" pos:end="125:50"><expr pos:start="125:50" pos:end="125:50"><name pos:start="125:50" pos:end="125:50">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="127:21" pos:end="127:77">/* we will use two ports per rtp stream (rtp and rtcp) */</comment>

                    <expr_stmt pos:start="129:21" pos:end="129:27"><expr pos:start="129:21" pos:end="129:26"><name pos:start="129:21" pos:end="129:21">j</name> <operator pos:start="129:23" pos:end="129:24">+=</operator> <literal type="number" pos:start="129:26" pos:end="129:26">2</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="131:21" pos:end="133:40"><if pos:start="131:21" pos:end="133:40">if <condition pos:start="131:24" pos:end="131:75">(<expr pos:start="131:25" pos:end="131:74"><call pos:start="131:25" pos:end="131:69"><name pos:start="131:25" pos:end="131:32">url_open</name><argument_list pos:start="131:33" pos:end="131:69">(<argument pos:start="131:34" pos:end="131:53"><expr pos:start="131:34" pos:end="131:53"><operator pos:start="131:34" pos:end="131:34">&amp;</operator><name pos:start="131:35" pos:end="131:53"><name pos:start="131:35" pos:end="131:41">rtsp_st</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:53">rtp_handle</name></name></expr></argument>, <argument pos:start="131:56" pos:end="131:58"><expr pos:start="131:56" pos:end="131:58"><name pos:start="131:56" pos:end="131:58">buf</name></expr></argument>, <argument pos:start="131:61" pos:end="131:68"><expr pos:start="131:61" pos:end="131:68"><name pos:start="131:61" pos:end="131:68">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="131:71" pos:end="131:72">==</operator> <literal type="number" pos:start="131:74" pos:end="131:74">0</literal></expr>)</condition><block type="pseudo" pos:start="133:25" pos:end="133:40"><block_content pos:start="133:25" pos:end="133:40">

                        <goto pos:start="133:25" pos:end="133:40">goto <name pos:start="133:30" pos:end="133:39">rtp_opened</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>



<cpp:if pos:start="141:1" pos:end="141:5">#<cpp:directive pos:start="141:2" pos:end="141:3">if</cpp:directive> <expr pos:start="141:5" pos:end="141:5"><literal type="number" pos:start="141:5" pos:end="141:5">0</literal></expr></cpp:if>

            <comment type="block" pos:start="143:13" pos:end="143:38">/* then try on any port */</comment>

            if (url_open(&amp;rtsp_st-&gt;rtp_handle, "rtp://", URL_RDONLY) &lt; 0) {

                err = AVERROR_INVALIDDATA;

                goto fail;

            }

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>



        <label pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:18">rtp_opened</name>:</label>

            <expr_stmt pos:start="159:13" pos:end="159:63"><expr pos:start="159:13" pos:end="159:62"><name pos:start="159:13" pos:end="159:16">port</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:62"><name pos:start="159:20" pos:end="159:41">rtp_get_local_rtp_port</name><argument_list pos:start="159:42" pos:end="159:62">(<argument pos:start="159:43" pos:end="159:61"><expr pos:start="159:43" pos:end="159:61"><name pos:start="159:43" pos:end="159:61"><name pos:start="159:43" pos:end="159:49">rtsp_st</name><operator pos:start="159:50" pos:end="159:51">-&gt;</operator><name pos:start="159:52" pos:end="159:61">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:17">have_port</name>:</label>

            <expr_stmt pos:start="163:13" pos:end="165:44"><expr pos:start="163:13" pos:end="165:43"><call pos:start="163:13" pos:end="165:43"><name pos:start="163:13" pos:end="163:20">snprintf</name><argument_list pos:start="163:21" pos:end="165:43">(<argument pos:start="163:22" pos:end="163:30"><expr pos:start="163:22" pos:end="163:30"><name pos:start="163:22" pos:end="163:30">transport</name></expr></argument>, <argument pos:start="163:33" pos:end="163:53"><expr pos:start="163:33" pos:end="163:53"><sizeof pos:start="163:33" pos:end="163:49">sizeof<argument_list pos:start="163:39" pos:end="163:49">(<argument pos:start="163:40" pos:end="163:48"><expr pos:start="163:40" pos:end="163:48"><name pos:start="163:40" pos:end="163:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="163:51" pos:end="163:51">-</operator> <literal type="number" pos:start="163:53" pos:end="163:53">1</literal></expr></argument>,

                     <argument pos:start="165:22" pos:end="165:30"><expr pos:start="165:22" pos:end="165:30"><literal type="string" pos:start="165:22" pos:end="165:30">"%s/UDP;"</literal></expr></argument>, <argument pos:start="165:33" pos:end="165:42"><expr pos:start="165:33" pos:end="165:42"><name pos:start="165:33" pos:end="165:42">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="169:69"><if pos:start="167:13" pos:end="169:69">if <condition pos:start="167:16" pos:end="167:52">(<expr pos:start="167:17" pos:end="167:51"><name pos:start="167:17" pos:end="167:31"><name pos:start="167:17" pos:end="167:18">rt</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:31">server_type</name></name> <operator pos:start="167:33" pos:end="167:34">!=</operator> <name pos:start="167:36" pos:end="167:51">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:69"><block_content pos:start="169:17" pos:end="169:69">

                <expr_stmt pos:start="169:17" pos:end="169:69"><expr pos:start="169:17" pos:end="169:68"><call pos:start="169:17" pos:end="169:68"><name pos:start="169:17" pos:end="169:26">av_strlcat</name><argument_list pos:start="169:27" pos:end="169:68">(<argument pos:start="169:28" pos:end="169:36"><expr pos:start="169:28" pos:end="169:36"><name pos:start="169:28" pos:end="169:36">transport</name></expr></argument>, <argument pos:start="169:39" pos:end="169:48"><expr pos:start="169:39" pos:end="169:48"><literal type="string" pos:start="169:39" pos:end="169:48">"unicast;"</literal></expr></argument>, <argument pos:start="169:51" pos:end="169:67"><expr pos:start="169:51" pos:end="169:67"><sizeof pos:start="169:51" pos:end="169:67">sizeof<argument_list pos:start="169:57" pos:end="169:67">(<argument pos:start="169:58" pos:end="169:66"><expr pos:start="169:58" pos:end="169:66"><name pos:start="169:58" pos:end="169:66">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="173:45"><expr pos:start="171:13" pos:end="173:44"><call pos:start="171:13" pos:end="173:44"><name pos:start="171:13" pos:end="171:23">av_strlcatf</name><argument_list pos:start="171:24" pos:end="173:44">(<argument pos:start="171:25" pos:end="171:33"><expr pos:start="171:25" pos:end="171:33"><name pos:start="171:25" pos:end="171:33">transport</name></expr></argument>, <argument pos:start="171:36" pos:end="171:52"><expr pos:start="171:36" pos:end="171:52"><sizeof pos:start="171:36" pos:end="171:52">sizeof<argument_list pos:start="171:42" pos:end="171:52">(<argument pos:start="171:43" pos:end="171:51"><expr pos:start="171:43" pos:end="171:51"><name pos:start="171:43" pos:end="171:51">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="173:22" pos:end="173:37"><expr pos:start="173:22" pos:end="173:37"><literal type="string" pos:start="173:22" pos:end="173:37">"client_port=%d"</literal></expr></argument>, <argument pos:start="173:40" pos:end="173:43"><expr pos:start="173:40" pos:end="173:43"><name pos:start="173:40" pos:end="173:43">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="179:75"><if pos:start="175:13" pos:end="179:75">if <condition pos:start="175:16" pos:end="177:63">(<expr pos:start="175:17" pos:end="177:62"><name pos:start="175:17" pos:end="175:29"><name pos:start="175:17" pos:end="175:18">rt</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:29">transport</name></name> <operator pos:start="175:31" pos:end="175:32">==</operator> <name pos:start="175:34" pos:end="175:51">RTSP_TRANSPORT_RTP</name> <operator pos:start="175:53" pos:end="175:54">&amp;&amp;</operator>

                <operator pos:start="177:17" pos:end="177:17">!</operator><operator pos:start="177:18" pos:end="177:18">(</operator><name pos:start="177:19" pos:end="177:33"><name pos:start="177:19" pos:end="177:20">rt</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:33">server_type</name></name> <operator pos:start="177:35" pos:end="177:36">==</operator> <name pos:start="177:38" pos:end="177:52">RTSP_SERVER_WMS</name> <operator pos:start="177:54" pos:end="177:55">&amp;&amp;</operator> <name pos:start="177:57" pos:end="177:57">i</name> <operator pos:start="177:59" pos:end="177:59">&gt;</operator> <literal type="number" pos:start="177:61" pos:end="177:61">0</literal><operator pos:start="177:62" pos:end="177:62">)</operator></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:75"><block_content pos:start="179:17" pos:end="179:75">

                <expr_stmt pos:start="179:17" pos:end="179:75"><expr pos:start="179:17" pos:end="179:74"><call pos:start="179:17" pos:end="179:74"><name pos:start="179:17" pos:end="179:27">av_strlcatf</name><argument_list pos:start="179:28" pos:end="179:74">(<argument pos:start="179:29" pos:end="179:37"><expr pos:start="179:29" pos:end="179:37"><name pos:start="179:29" pos:end="179:37">transport</name></expr></argument>, <argument pos:start="179:40" pos:end="179:56"><expr pos:start="179:40" pos:end="179:56"><sizeof pos:start="179:40" pos:end="179:56">sizeof<argument_list pos:start="179:46" pos:end="179:56">(<argument pos:start="179:47" pos:end="179:55"><expr pos:start="179:47" pos:end="179:55"><name pos:start="179:47" pos:end="179:55">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="179:59" pos:end="179:63"><expr pos:start="179:59" pos:end="179:63"><literal type="string" pos:start="179:59" pos:end="179:63">"-%d"</literal></expr></argument>, <argument pos:start="179:66" pos:end="179:73"><expr pos:start="179:66" pos:end="179:73"><name pos:start="179:66" pos:end="179:69">port</name> <operator pos:start="179:71" pos:end="179:71">+</operator> <literal type="number" pos:start="179:73" pos:end="179:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if>



        <comment type="block" pos:start="185:9" pos:end="185:21">/* RTP/TCP */</comment>

        <if type="elseif" pos:start="187:9" pos:end="219:9">else if <condition pos:start="187:17" pos:end="187:61">(<expr pos:start="187:18" pos:end="187:60"><name pos:start="187:18" pos:end="187:32">lower_transport</name> <operator pos:start="187:34" pos:end="187:35">==</operator> <name pos:start="187:37" pos:end="187:60">RTSP_LOWER_TRANSPORT_TCP</name></expr>)</condition> <block pos:start="187:63" pos:end="219:9">{<block_content pos:start="195:13" pos:end="217:28">

            <comment type="block" format="doxygen" pos:start="189:13" pos:end="193:73">/** For WMS streams, the application streams are only used for

             * UDP. When trying to set it up for TCP streams, the server

             * will return an error. Therefore, we skip those streams. */</comment>

            <if_stmt pos:start="195:13" pos:end="201:25"><if pos:start="195:13" pos:end="201:25">if <condition pos:start="195:16" pos:end="199:38">(<expr pos:start="195:17" pos:end="199:37"><name pos:start="195:17" pos:end="195:31"><name pos:start="195:17" pos:end="195:18">rt</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:31">server_type</name></name> <operator pos:start="195:33" pos:end="195:34">==</operator> <name pos:start="195:36" pos:end="195:50">RTSP_SERVER_WMS</name> <operator pos:start="195:52" pos:end="195:53">&amp;&amp;</operator>

                <name pos:start="197:17" pos:end="197:49"><name pos:start="197:17" pos:end="197:17">s</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:26">streams</name><index pos:start="197:27" pos:end="197:49">[<expr pos:start="197:28" pos:end="197:48"><name pos:start="197:28" pos:end="197:48"><name pos:start="197:28" pos:end="197:34">rtsp_st</name><operator pos:start="197:35" pos:end="197:36">-&gt;</operator><name pos:start="197:37" pos:end="197:48">stream_index</name></name></expr>]</index></name><operator pos:start="197:50" pos:end="197:51">-&gt;</operator><name pos:start="197:52" pos:end="197:68"><name pos:start="197:52" pos:end="197:56">codec</name><operator pos:start="197:57" pos:end="197:58">-&gt;</operator><name pos:start="197:59" pos:end="197:68">codec_type</name></name> <operator pos:start="197:70" pos:end="197:71">==</operator>

                    <name pos:start="199:21" pos:end="199:37">AVMEDIA_TYPE_DATA</name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:25"><block_content pos:start="201:17" pos:end="201:25">

                <continue pos:start="201:17" pos:end="201:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="203:13" pos:end="205:44"><expr pos:start="203:13" pos:end="205:43"><call pos:start="203:13" pos:end="205:43"><name pos:start="203:13" pos:end="203:20">snprintf</name><argument_list pos:start="203:21" pos:end="205:43">(<argument pos:start="203:22" pos:end="203:30"><expr pos:start="203:22" pos:end="203:30"><name pos:start="203:22" pos:end="203:30">transport</name></expr></argument>, <argument pos:start="203:33" pos:end="203:53"><expr pos:start="203:33" pos:end="203:53"><sizeof pos:start="203:33" pos:end="203:49">sizeof<argument_list pos:start="203:39" pos:end="203:49">(<argument pos:start="203:40" pos:end="203:48"><expr pos:start="203:40" pos:end="203:48"><name pos:start="203:40" pos:end="203:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="203:51" pos:end="203:51">-</operator> <literal type="number" pos:start="203:53" pos:end="203:53">1</literal></expr></argument>,

                     <argument pos:start="205:22" pos:end="205:30"><expr pos:start="205:22" pos:end="205:30"><literal type="string" pos:start="205:22" pos:end="205:30">"%s/TCP;"</literal></expr></argument>, <argument pos:start="205:33" pos:end="205:42"><expr pos:start="205:33" pos:end="205:42"><name pos:start="205:33" pos:end="205:42">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="209:69"><if pos:start="207:13" pos:end="209:69">if <condition pos:start="207:16" pos:end="207:51">(<expr pos:start="207:17" pos:end="207:50"><name pos:start="207:17" pos:end="207:31"><name pos:start="207:17" pos:end="207:18">rt</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:31">server_type</name></name> <operator pos:start="207:33" pos:end="207:34">==</operator> <name pos:start="207:36" pos:end="207:50">RTSP_SERVER_WMS</name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:69"><block_content pos:start="209:17" pos:end="209:69">

                <expr_stmt pos:start="209:17" pos:end="209:69"><expr pos:start="209:17" pos:end="209:68"><call pos:start="209:17" pos:end="209:68"><name pos:start="209:17" pos:end="209:26">av_strlcat</name><argument_list pos:start="209:27" pos:end="209:68">(<argument pos:start="209:28" pos:end="209:36"><expr pos:start="209:28" pos:end="209:36"><name pos:start="209:28" pos:end="209:36">transport</name></expr></argument>, <argument pos:start="209:39" pos:end="209:48"><expr pos:start="209:39" pos:end="209:48"><literal type="string" pos:start="209:39" pos:end="209:48">"unicast;"</literal></expr></argument>, <argument pos:start="209:51" pos:end="209:67"><expr pos:start="209:51" pos:end="209:67"><sizeof pos:start="209:51" pos:end="209:67">sizeof<argument_list pos:start="209:57" pos:end="209:67">(<argument pos:start="209:58" pos:end="209:66"><expr pos:start="209:58" pos:end="209:66"><name pos:start="209:58" pos:end="209:66">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="215:52"><expr pos:start="211:13" pos:end="215:51"><call pos:start="211:13" pos:end="215:51"><name pos:start="211:13" pos:end="211:23">av_strlcatf</name><argument_list pos:start="211:24" pos:end="215:51">(<argument pos:start="211:25" pos:end="211:33"><expr pos:start="211:25" pos:end="211:33"><name pos:start="211:25" pos:end="211:33">transport</name></expr></argument>, <argument pos:start="211:36" pos:end="211:52"><expr pos:start="211:36" pos:end="211:52"><sizeof pos:start="211:36" pos:end="211:52">sizeof<argument_list pos:start="211:42" pos:end="211:52">(<argument pos:start="211:43" pos:end="211:51"><expr pos:start="211:43" pos:end="211:51"><name pos:start="211:43" pos:end="211:51">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="213:25" pos:end="213:43"><expr pos:start="213:25" pos:end="213:43"><literal type="string" pos:start="213:25" pos:end="213:43">"interleaved=%d-%d"</literal></expr></argument>,

                        <argument pos:start="215:25" pos:end="215:34"><expr pos:start="215:25" pos:end="215:34"><name pos:start="215:25" pos:end="215:34">interleave</name></expr></argument>, <argument pos:start="215:37" pos:end="215:50"><expr pos:start="215:37" pos:end="215:50"><name pos:start="215:37" pos:end="215:46">interleave</name> <operator pos:start="215:48" pos:end="215:48">+</operator> <literal type="number" pos:start="215:50" pos:end="215:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:28"><expr pos:start="217:13" pos:end="217:27"><name pos:start="217:13" pos:end="217:22">interleave</name> <operator pos:start="217:24" pos:end="217:25">+=</operator> <literal type="number" pos:start="217:27" pos:end="217:27">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if>



        <if type="elseif" pos:start="223:9" pos:end="229:9">else if <condition pos:start="223:17" pos:end="223:71">(<expr pos:start="223:18" pos:end="223:70"><name pos:start="223:18" pos:end="223:32">lower_transport</name> <operator pos:start="223:34" pos:end="223:35">==</operator> <name pos:start="223:37" pos:end="223:70">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>)</condition> <block pos:start="223:73" pos:end="229:9">{<block_content pos:start="225:13" pos:end="227:53">

            <expr_stmt pos:start="225:13" pos:end="227:53"><expr pos:start="225:13" pos:end="227:52"><call pos:start="225:13" pos:end="227:52"><name pos:start="225:13" pos:end="225:20">snprintf</name><argument_list pos:start="225:21" pos:end="227:52">(<argument pos:start="225:22" pos:end="225:30"><expr pos:start="225:22" pos:end="225:30"><name pos:start="225:22" pos:end="225:30">transport</name></expr></argument>, <argument pos:start="225:33" pos:end="225:53"><expr pos:start="225:33" pos:end="225:53"><sizeof pos:start="225:33" pos:end="225:49">sizeof<argument_list pos:start="225:39" pos:end="225:49">(<argument pos:start="225:40" pos:end="225:48"><expr pos:start="225:40" pos:end="225:48"><name pos:start="225:40" pos:end="225:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="225:51" pos:end="225:51">-</operator> <literal type="number" pos:start="225:53" pos:end="225:53">1</literal></expr></argument>,

                     <argument pos:start="227:22" pos:end="227:39"><expr pos:start="227:22" pos:end="227:39"><literal type="string" pos:start="227:22" pos:end="227:39">"%s/UDP;multicast"</literal></expr></argument>, <argument pos:start="227:42" pos:end="227:51"><expr pos:start="227:42" pos:end="227:51"><name pos:start="227:42" pos:end="227:51">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="231:9" pos:end="239:67"><if pos:start="231:9" pos:end="235:9">if <condition pos:start="231:12" pos:end="231:23">(<expr pos:start="231:13" pos:end="231:22"><name pos:start="231:13" pos:end="231:22"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:22">oformat</name></name></expr>)</condition> <block pos:start="231:25" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:70">

            <expr_stmt pos:start="233:13" pos:end="233:70"><expr pos:start="233:13" pos:end="233:69"><call pos:start="233:13" pos:end="233:69"><name pos:start="233:13" pos:end="233:22">av_strlcat</name><argument_list pos:start="233:23" pos:end="233:69">(<argument pos:start="233:24" pos:end="233:32"><expr pos:start="233:24" pos:end="233:32"><name pos:start="233:24" pos:end="233:32">transport</name></expr></argument>, <argument pos:start="233:35" pos:end="233:49"><expr pos:start="233:35" pos:end="233:49"><literal type="string" pos:start="233:35" pos:end="233:49">";mode=receive"</literal></expr></argument>, <argument pos:start="233:52" pos:end="233:68"><expr pos:start="233:52" pos:end="233:68"><sizeof pos:start="233:52" pos:end="233:68">sizeof<argument_list pos:start="233:58" pos:end="233:68">(<argument pos:start="233:59" pos:end="233:67"><expr pos:start="233:59" pos:end="233:67"><name pos:start="233:59" pos:end="233:67">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="235:11" pos:end="239:67">else if <condition pos:start="235:19" pos:end="237:54">(<expr pos:start="235:20" pos:end="237:53"><name pos:start="235:20" pos:end="235:34"><name pos:start="235:20" pos:end="235:21">rt</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:34">server_type</name></name> <operator pos:start="235:36" pos:end="235:37">==</operator> <name pos:start="235:39" pos:end="235:54">RTSP_SERVER_REAL</name> <operator pos:start="235:56" pos:end="235:57">||</operator>

                   <name pos:start="237:20" pos:end="237:34"><name pos:start="237:20" pos:end="237:21">rt</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:34">server_type</name></name> <operator pos:start="237:36" pos:end="237:37">==</operator> <name pos:start="237:39" pos:end="237:53">RTSP_SERVER_WMS</name></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:67"><block_content pos:start="239:13" pos:end="239:67">

            <expr_stmt pos:start="239:13" pos:end="239:67"><expr pos:start="239:13" pos:end="239:66"><call pos:start="239:13" pos:end="239:66"><name pos:start="239:13" pos:end="239:22">av_strlcat</name><argument_list pos:start="239:23" pos:end="239:66">(<argument pos:start="239:24" pos:end="239:32"><expr pos:start="239:24" pos:end="239:32"><name pos:start="239:24" pos:end="239:32">transport</name></expr></argument>, <argument pos:start="239:35" pos:end="239:46"><expr pos:start="239:35" pos:end="239:46"><literal type="string" pos:start="239:35" pos:end="239:46">";mode=play"</literal></expr></argument>, <argument pos:start="239:49" pos:end="239:65"><expr pos:start="239:49" pos:end="239:65"><sizeof pos:start="239:49" pos:end="239:65">sizeof<argument_list pos:start="239:55" pos:end="239:65">(<argument pos:start="239:56" pos:end="239:64"><expr pos:start="239:56" pos:end="239:64"><name pos:start="239:56" pos:end="239:64">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="245:28"><expr pos:start="241:9" pos:end="245:27"><call pos:start="241:9" pos:end="245:27"><name pos:start="241:9" pos:end="241:16">snprintf</name><argument_list pos:start="241:17" pos:end="245:27">(<argument pos:start="241:18" pos:end="241:20"><expr pos:start="241:18" pos:end="241:20"><name pos:start="241:18" pos:end="241:20">cmd</name></expr></argument>, <argument pos:start="241:23" pos:end="241:33"><expr pos:start="241:23" pos:end="241:33"><sizeof pos:start="241:23" pos:end="241:33">sizeof<argument_list pos:start="241:29" pos:end="241:33">(<argument pos:start="241:30" pos:end="241:32"><expr pos:start="241:30" pos:end="241:32"><name pos:start="241:30" pos:end="241:32">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="243:18" pos:end="243:36"><expr pos:start="243:18" pos:end="243:36"><literal type="string" pos:start="243:18" pos:end="243:36">"Transport: %s\r\n"</literal></expr></argument>,

                 <argument pos:start="245:18" pos:end="245:26"><expr pos:start="245:18" pos:end="245:26"><name pos:start="245:18" pos:end="245:26">transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="263:9"><if pos:start="247:9" pos:end="263:9">if <condition pos:start="247:12" pos:end="247:75">(<expr pos:start="247:13" pos:end="247:74"><name pos:start="247:13" pos:end="247:13">i</name> <operator pos:start="247:15" pos:end="247:16">==</operator> <literal type="number" pos:start="247:18" pos:end="247:18">0</literal> <operator pos:start="247:20" pos:end="247:21">&amp;&amp;</operator> <name pos:start="247:23" pos:end="247:37"><name pos:start="247:23" pos:end="247:24">rt</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:37">server_type</name></name> <operator pos:start="247:39" pos:end="247:40">==</operator> <name pos:start="247:42" pos:end="247:57">RTSP_SERVER_REAL</name> <operator pos:start="247:59" pos:end="247:60">&amp;&amp;</operator> <name pos:start="247:62" pos:end="247:74">CONFIG_RTPDEC</name></expr>)</condition> <block pos:start="247:77" pos:end="263:9">{<block_content pos:start="249:13" pos:end="261:61">

            <decl_stmt pos:start="249:13" pos:end="249:44"><decl pos:start="249:13" pos:end="249:29"><type pos:start="249:13" pos:end="249:16"><name pos:start="249:13" pos:end="249:16">char</name></type> <name pos:start="249:18" pos:end="249:29"><name pos:start="249:18" pos:end="249:25">real_res</name><index pos:start="249:26" pos:end="249:29">[<expr pos:start="249:27" pos:end="249:28"><literal type="number" pos:start="249:27" pos:end="249:28">41</literal></expr>]</index></name></decl>, <decl pos:start="249:32" pos:end="249:43"><type ref="prev" pos:start="249:13" pos:end="249:16"/><name pos:start="249:32" pos:end="249:43"><name pos:start="249:32" pos:end="249:40">real_csum</name><index pos:start="249:41" pos:end="249:43">[<expr pos:start="249:42" pos:end="249:42"><literal type="number" pos:start="249:42" pos:end="249:42">9</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="251:13" pos:end="253:62"><expr pos:start="251:13" pos:end="253:61"><call pos:start="251:13" pos:end="253:61"><name pos:start="251:13" pos:end="251:45">ff_rdt_calc_response_and_checksum</name><argument_list pos:start="251:46" pos:end="253:61">(<argument pos:start="251:47" pos:end="251:54"><expr pos:start="251:47" pos:end="251:54"><name pos:start="251:47" pos:end="251:54">real_res</name></expr></argument>, <argument pos:start="251:57" pos:end="251:65"><expr pos:start="251:57" pos:end="251:65"><name pos:start="251:57" pos:end="251:65">real_csum</name></expr></argument>,

                                              <argument pos:start="253:47" pos:end="253:60"><expr pos:start="253:47" pos:end="253:60"><name pos:start="253:47" pos:end="253:60">real_challenge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="261:61"><expr pos:start="255:13" pos:end="261:60"><call pos:start="255:13" pos:end="261:60"><name pos:start="255:13" pos:end="255:23">av_strlcatf</name><argument_list pos:start="255:24" pos:end="261:60">(<argument pos:start="255:25" pos:end="255:27"><expr pos:start="255:25" pos:end="255:27"><name pos:start="255:25" pos:end="255:27">cmd</name></expr></argument>, <argument pos:start="255:30" pos:end="255:40"><expr pos:start="255:30" pos:end="255:40"><sizeof pos:start="255:30" pos:end="255:40">sizeof<argument_list pos:start="255:36" pos:end="255:40">(<argument pos:start="255:37" pos:end="255:39"><expr pos:start="255:37" pos:end="255:39"><name pos:start="255:37" pos:end="255:39">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="257:25" pos:end="259:55"><expr pos:start="257:25" pos:end="259:55"><literal type="string" pos:start="257:25" pos:end="257:42">"If-Match: %s\r\n"</literal>

                        <literal type="string" pos:start="259:25" pos:end="259:55">"RealChallenge2: %s, sd=%s\r\n"</literal></expr></argument>,

                        <argument pos:start="261:25" pos:end="261:38"><expr pos:start="261:25" pos:end="261:38"><name pos:start="261:25" pos:end="261:38"><name pos:start="261:25" pos:end="261:26">rt</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:38">session_id</name></name></expr></argument>, <argument pos:start="261:41" pos:end="261:48"><expr pos:start="261:41" pos:end="261:48"><name pos:start="261:41" pos:end="261:48">real_res</name></expr></argument>, <argument pos:start="261:51" pos:end="261:59"><expr pos:start="261:51" pos:end="261:59"><name pos:start="261:51" pos:end="261:59">real_csum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:77"><expr pos:start="265:9" pos:end="265:76"><call pos:start="265:9" pos:end="265:76"><name pos:start="265:9" pos:end="265:24">ff_rtsp_send_cmd</name><argument_list pos:start="265:25" pos:end="265:76">(<argument pos:start="265:26" pos:end="265:26"><expr pos:start="265:26" pos:end="265:26"><name pos:start="265:26" pos:end="265:26">s</name></expr></argument>, <argument pos:start="265:29" pos:end="265:35"><expr pos:start="265:29" pos:end="265:35"><literal type="string" pos:start="265:29" pos:end="265:35">"SETUP"</literal></expr></argument>, <argument pos:start="265:38" pos:end="265:57"><expr pos:start="265:38" pos:end="265:57"><name pos:start="265:38" pos:end="265:57"><name pos:start="265:38" pos:end="265:44">rtsp_st</name><operator pos:start="265:45" pos:end="265:46">-&gt;</operator><name pos:start="265:47" pos:end="265:57">control_url</name></name></expr></argument>, <argument pos:start="265:60" pos:end="265:62"><expr pos:start="265:60" pos:end="265:62"><name pos:start="265:60" pos:end="265:62">cmd</name></expr></argument>, <argument pos:start="265:65" pos:end="265:69"><expr pos:start="265:65" pos:end="265:69"><name pos:start="265:65" pos:end="265:69">reply</name></expr></argument>, <argument pos:start="265:72" pos:end="265:75"><expr pos:start="265:72" pos:end="265:75"><name pos:start="265:72" pos:end="265:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="281:9"><if pos:start="267:9" pos:end="273:9">if <condition pos:start="267:12" pos:end="267:75">(<expr pos:start="267:13" pos:end="267:74"><name pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:17">reply</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:30">status_code</name></name> <operator pos:start="267:32" pos:end="267:33">==</operator> <literal type="number" pos:start="267:35" pos:end="267:37">461</literal> <comment type="block" pos:start="267:39" pos:end="267:64">/* Unsupported protocol */</comment> <operator pos:start="267:66" pos:end="267:67">&amp;&amp;</operator> <name pos:start="267:69" pos:end="267:69">i</name> <operator pos:start="267:71" pos:end="267:72">==</operator> <literal type="number" pos:start="267:74" pos:end="267:74">0</literal></expr>)</condition> <block pos:start="267:77" pos:end="273:9">{<block_content pos:start="269:13" pos:end="271:22">

            <expr_stmt pos:start="269:13" pos:end="269:20"><expr pos:start="269:13" pos:end="269:19"><name pos:start="269:13" pos:end="269:15">err</name> <operator pos:start="269:17" pos:end="269:17">=</operator> <literal type="number" pos:start="269:19" pos:end="269:19">1</literal></expr>;</expr_stmt>

            <goto pos:start="271:13" pos:end="271:22">goto <name pos:start="271:18" pos:end="271:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="273:11" pos:end="281:9">else if <condition pos:start="273:19" pos:end="275:45">(<expr pos:start="273:20" pos:end="275:44"><name pos:start="273:20" pos:end="273:37"><name pos:start="273:20" pos:end="273:24">reply</name><operator pos:start="273:25" pos:end="273:26">-&gt;</operator><name pos:start="273:27" pos:end="273:37">status_code</name></name> <operator pos:start="273:39" pos:end="273:40">!=</operator> <name pos:start="273:42" pos:end="273:55">RTSP_STATUS_OK</name> <operator pos:start="273:57" pos:end="273:58">||</operator>

                   <name pos:start="275:20" pos:end="275:39"><name pos:start="275:20" pos:end="275:24">reply</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:39">nb_transports</name></name> <operator pos:start="275:41" pos:end="275:42">!=</operator> <literal type="number" pos:start="275:44" pos:end="275:44">1</literal></expr>)</condition> <block pos:start="275:47" pos:end="281:9">{<block_content pos:start="277:13" pos:end="279:22">

            <expr_stmt pos:start="277:13" pos:end="277:38"><expr pos:start="277:13" pos:end="277:37"><name pos:start="277:13" pos:end="277:15">err</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <name pos:start="277:19" pos:end="277:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="279:13" pos:end="279:22">goto <name pos:start="279:18" pos:end="279:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="285:9" pos:end="285:60">/* XXX: same protocol for all streams is required */</comment>

        <if_stmt pos:start="287:9" pos:end="305:9"><if pos:start="287:9" pos:end="299:9">if <condition pos:start="287:12" pos:end="287:18">(<expr pos:start="287:13" pos:end="287:17"><name pos:start="287:13" pos:end="287:13">i</name> <operator pos:start="287:15" pos:end="287:15">&gt;</operator> <literal type="number" pos:start="287:17" pos:end="287:17">0</literal></expr>)</condition> <block pos:start="287:20" pos:end="299:9">{<block_content pos:start="289:13" pos:end="297:13">

            <if_stmt pos:start="289:13" pos:end="297:13"><if pos:start="289:13" pos:end="297:13">if <condition pos:start="289:16" pos:end="291:64">(<expr pos:start="289:17" pos:end="291:63"><name pos:start="289:17" pos:end="289:36"><name pos:start="289:17" pos:end="289:21">reply</name><operator pos:start="289:22" pos:end="289:23">-&gt;</operator><name pos:start="289:24" pos:end="289:33">transports</name><index pos:start="289:34" pos:end="289:36">[<expr pos:start="289:35" pos:end="289:35"><literal type="number" pos:start="289:35" pos:end="289:35">0</literal></expr>]</index></name><operator pos:start="289:37" pos:end="289:37">.</operator><name pos:start="289:38" pos:end="289:52">lower_transport</name> <operator pos:start="289:54" pos:end="289:55">!=</operator> <name pos:start="289:57" pos:end="289:75"><name pos:start="289:57" pos:end="289:58">rt</name><operator pos:start="289:59" pos:end="289:60">-&gt;</operator><name pos:start="289:61" pos:end="289:75">lower_transport</name></name> <operator pos:start="289:77" pos:end="289:78">||</operator>

                <name pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:21">reply</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:33">transports</name><index pos:start="291:34" pos:end="291:36">[<expr pos:start="291:35" pos:end="291:35"><literal type="number" pos:start="291:35" pos:end="291:35">0</literal></expr>]</index></name><operator pos:start="291:37" pos:end="291:37">.</operator><name pos:start="291:38" pos:end="291:46">transport</name> <operator pos:start="291:48" pos:end="291:49">!=</operator> <name pos:start="291:51" pos:end="291:63"><name pos:start="291:51" pos:end="291:52">rt</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:63">transport</name></name></expr>)</condition> <block pos:start="291:66" pos:end="297:13">{<block_content pos:start="293:17" pos:end="295:26">

                <expr_stmt pos:start="293:17" pos:end="293:42"><expr pos:start="293:17" pos:end="293:41"><name pos:start="293:17" pos:end="293:19">err</name> <operator pos:start="293:21" pos:end="293:21">=</operator> <name pos:start="293:23" pos:end="293:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="295:17" pos:end="295:26">goto <name pos:start="295:22" pos:end="295:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="299:11" pos:end="305:9">else <block pos:start="299:16" pos:end="305:9">{<block_content pos:start="301:13" pos:end="303:59">

            <expr_stmt pos:start="301:13" pos:end="301:71"><expr pos:start="301:13" pos:end="301:70"><name pos:start="301:13" pos:end="301:31"><name pos:start="301:13" pos:end="301:14">rt</name><operator pos:start="301:15" pos:end="301:16">-&gt;</operator><name pos:start="301:17" pos:end="301:31">lower_transport</name></name> <operator pos:start="301:33" pos:end="301:33">=</operator> <name pos:start="301:35" pos:end="301:54"><name pos:start="301:35" pos:end="301:39">reply</name><operator pos:start="301:40" pos:end="301:41">-&gt;</operator><name pos:start="301:42" pos:end="301:51">transports</name><index pos:start="301:52" pos:end="301:54">[<expr pos:start="301:53" pos:end="301:53"><literal type="number" pos:start="301:53" pos:end="301:53">0</literal></expr>]</index></name><operator pos:start="301:55" pos:end="301:55">.</operator><name pos:start="301:56" pos:end="301:70">lower_transport</name></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:59"><expr pos:start="303:13" pos:end="303:58"><name pos:start="303:13" pos:end="303:25"><name pos:start="303:13" pos:end="303:14">rt</name><operator pos:start="303:15" pos:end="303:16">-&gt;</operator><name pos:start="303:17" pos:end="303:25">transport</name></name> <operator pos:start="303:27" pos:end="303:27">=</operator> <name pos:start="303:29" pos:end="303:48"><name pos:start="303:29" pos:end="303:33">reply</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:45">transports</name><index pos:start="303:46" pos:end="303:48">[<expr pos:start="303:47" pos:end="303:47"><literal type="number" pos:start="303:47" pos:end="303:47">0</literal></expr>]</index></name><operator pos:start="303:49" pos:end="303:49">.</operator><name pos:start="303:50" pos:end="303:58">transport</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="309:9" pos:end="309:48">/* close RTP connection if not chosen */</comment>

        <if_stmt pos:start="311:9" pos:end="319:9"><if pos:start="311:9" pos:end="319:9">if <condition pos:start="311:12" pos:end="313:58">(<expr pos:start="311:13" pos:end="313:57"><name pos:start="311:13" pos:end="311:32"><name pos:start="311:13" pos:end="311:17">reply</name><operator pos:start="311:18" pos:end="311:19">-&gt;</operator><name pos:start="311:20" pos:end="311:29">transports</name><index pos:start="311:30" pos:end="311:32">[<expr pos:start="311:31" pos:end="311:31"><literal type="number" pos:start="311:31" pos:end="311:31">0</literal></expr>]</index></name><operator pos:start="311:33" pos:end="311:33">.</operator><name pos:start="311:34" pos:end="311:48">lower_transport</name> <operator pos:start="311:50" pos:end="311:51">!=</operator> <name pos:start="311:53" pos:end="311:76">RTSP_LOWER_TRANSPORT_UDP</name> <operator pos:start="311:78" pos:end="311:79">&amp;&amp;</operator>

            <operator pos:start="313:13" pos:end="313:13">(</operator><name pos:start="313:14" pos:end="313:28">lower_transport</name> <operator pos:start="313:30" pos:end="313:31">==</operator> <name pos:start="313:33" pos:end="313:56">RTSP_LOWER_TRANSPORT_UDP</name><operator pos:start="313:57" pos:end="313:57">)</operator></expr>)</condition> <block pos:start="313:60" pos:end="319:9">{<block_content pos:start="315:13" pos:end="317:39">

            <expr_stmt pos:start="315:13" pos:end="315:43"><expr pos:start="315:13" pos:end="315:42"><call pos:start="315:13" pos:end="315:42"><name pos:start="315:13" pos:end="315:21">url_close</name><argument_list pos:start="315:22" pos:end="315:42">(<argument pos:start="315:23" pos:end="315:41"><expr pos:start="315:23" pos:end="315:41"><name pos:start="315:23" pos:end="315:41"><name pos:start="315:23" pos:end="315:29">rtsp_st</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:41">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:39"><expr pos:start="317:13" pos:end="317:38"><name pos:start="317:13" pos:end="317:31"><name pos:start="317:13" pos:end="317:19">rtsp_st</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:31">rtp_handle</name></name> <operator pos:start="317:33" pos:end="317:33">=</operator> <name pos:start="317:35" pos:end="317:38">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="323:9" pos:end="435:9">switch<condition pos:start="323:15" pos:end="323:52">(<expr pos:start="323:16" pos:end="323:51"><name pos:start="323:16" pos:end="323:35"><name pos:start="323:16" pos:end="323:20">reply</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:32">transports</name><index pos:start="323:33" pos:end="323:35">[<expr pos:start="323:34" pos:end="323:34"><literal type="number" pos:start="323:34" pos:end="323:34">0</literal></expr>]</index></name><operator pos:start="323:36" pos:end="323:36">.</operator><name pos:start="323:37" pos:end="323:51">lower_transport</name></expr>)</condition> <block pos:start="323:54" pos:end="435:9">{<block_content pos:start="325:9" pos:end="433:9">

        <case pos:start="325:9" pos:end="325:38">case <expr pos:start="325:14" pos:end="325:37"><name pos:start="325:14" pos:end="325:37">RTSP_LOWER_TRANSPORT_TCP</name></expr>:</case>

            <expr_stmt pos:start="327:13" pos:end="327:76"><expr pos:start="327:13" pos:end="327:75"><name pos:start="327:13" pos:end="327:36"><name pos:start="327:13" pos:end="327:19">rtsp_st</name><operator pos:start="327:20" pos:end="327:21">-&gt;</operator><name pos:start="327:22" pos:end="327:36">interleaved_min</name></name> <operator pos:start="327:38" pos:end="327:38">=</operator> <name pos:start="327:40" pos:end="327:59"><name pos:start="327:40" pos:end="327:44">reply</name><operator pos:start="327:45" pos:end="327:46">-&gt;</operator><name pos:start="327:47" pos:end="327:56">transports</name><index pos:start="327:57" pos:end="327:59">[<expr pos:start="327:58" pos:end="327:58"><literal type="number" pos:start="327:58" pos:end="327:58">0</literal></expr>]</index></name><operator pos:start="327:60" pos:end="327:60">.</operator><name pos:start="327:61" pos:end="327:75">interleaved_min</name></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:76"><expr pos:start="329:13" pos:end="329:75"><name pos:start="329:13" pos:end="329:36"><name pos:start="329:13" pos:end="329:19">rtsp_st</name><operator pos:start="329:20" pos:end="329:21">-&gt;</operator><name pos:start="329:22" pos:end="329:36">interleaved_max</name></name> <operator pos:start="329:38" pos:end="329:38">=</operator> <name pos:start="329:40" pos:end="329:59"><name pos:start="329:40" pos:end="329:44">reply</name><operator pos:start="329:45" pos:end="329:46">-&gt;</operator><name pos:start="329:47" pos:end="329:56">transports</name><index pos:start="329:57" pos:end="329:59">[<expr pos:start="329:58" pos:end="329:58"><literal type="number" pos:start="329:58" pos:end="329:58">0</literal></expr>]</index></name><operator pos:start="329:60" pos:end="329:60">.</operator><name pos:start="329:61" pos:end="329:75">interleaved_max</name></expr>;</expr_stmt>

            <break pos:start="331:13" pos:end="331:18">break;</break>



        <case pos:start="335:9" pos:end="335:38">case <expr pos:start="335:14" pos:end="335:37"><name pos:start="335:14" pos:end="335:37">RTSP_LOWER_TRANSPORT_UDP</name></expr>:</case> <block pos:start="335:40" pos:end="385:9">{<block_content pos:start="337:13" pos:end="383:18">

            <decl_stmt pos:start="337:13" pos:end="337:27"><decl pos:start="337:13" pos:end="337:26"><type pos:start="337:13" pos:end="337:16"><name pos:start="337:13" pos:end="337:16">char</name></type> <name pos:start="337:18" pos:end="337:26"><name pos:start="337:18" pos:end="337:20">url</name><index pos:start="337:21" pos:end="337:26">[<expr pos:start="337:22" pos:end="337:25"><literal type="number" pos:start="337:22" pos:end="337:25">1024</literal></expr>]</index></name></decl>;</decl_stmt>



            <comment type="block" pos:start="341:13" pos:end="341:49">/* Use source address if specified */</comment>

            <if_stmt pos:start="343:13" pos:end="357:13"><if pos:start="343:13" pos:end="351:13">if <condition pos:start="343:16" pos:end="343:47">(<expr pos:start="343:17" pos:end="343:46"><name pos:start="343:17" pos:end="343:36"><name pos:start="343:17" pos:end="343:21">reply</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:33">transports</name><index pos:start="343:34" pos:end="343:36">[<expr pos:start="343:35" pos:end="343:35"><literal type="number" pos:start="343:35" pos:end="343:35">0</literal></expr>]</index></name><operator pos:start="343:37" pos:end="343:37">.</operator><name pos:start="343:38" pos:end="343:46"><name pos:start="343:38" pos:end="343:43">source</name><index pos:start="343:44" pos:end="343:46">[<expr pos:start="343:45" pos:end="343:45"><literal type="number" pos:start="343:45" pos:end="343:45">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="343:49" pos:end="351:13">{<block_content pos:start="345:17" pos:end="349:72">

                <expr_stmt pos:start="345:17" pos:end="349:72"><expr pos:start="345:17" pos:end="349:71"><call pos:start="345:17" pos:end="349:71"><name pos:start="345:17" pos:end="345:27">ff_url_join</name><argument_list pos:start="345:28" pos:end="349:71">(<argument pos:start="345:29" pos:end="345:31"><expr pos:start="345:29" pos:end="345:31"><name pos:start="345:29" pos:end="345:31">url</name></expr></argument>, <argument pos:start="345:34" pos:end="345:44"><expr pos:start="345:34" pos:end="345:44"><sizeof pos:start="345:34" pos:end="345:44">sizeof<argument_list pos:start="345:40" pos:end="345:44">(<argument pos:start="345:41" pos:end="345:43"><expr pos:start="345:41" pos:end="345:43"><name pos:start="345:41" pos:end="345:43">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="345:47" pos:end="345:51"><expr pos:start="345:47" pos:end="345:51"><literal type="string" pos:start="345:47" pos:end="345:51">"rtp"</literal></expr></argument>, <argument pos:start="345:54" pos:end="345:57"><expr pos:start="345:54" pos:end="345:57"><name pos:start="345:54" pos:end="345:57">NULL</name></expr></argument>,

                            <argument pos:start="347:29" pos:end="347:55"><expr pos:start="347:29" pos:end="347:55"><name pos:start="347:29" pos:end="347:48"><name pos:start="347:29" pos:end="347:33">reply</name><operator pos:start="347:34" pos:end="347:35">-&gt;</operator><name pos:start="347:36" pos:end="347:45">transports</name><index pos:start="347:46" pos:end="347:48">[<expr pos:start="347:47" pos:end="347:47"><literal type="number" pos:start="347:47" pos:end="347:47">0</literal></expr>]</index></name><operator pos:start="347:49" pos:end="347:49">.</operator><name pos:start="347:50" pos:end="347:55">source</name></expr></argument>,

                            <argument pos:start="349:29" pos:end="349:64"><expr pos:start="349:29" pos:end="349:64"><name pos:start="349:29" pos:end="349:48"><name pos:start="349:29" pos:end="349:33">reply</name><operator pos:start="349:34" pos:end="349:35">-&gt;</operator><name pos:start="349:36" pos:end="349:45">transports</name><index pos:start="349:46" pos:end="349:48">[<expr pos:start="349:47" pos:end="349:47"><literal type="number" pos:start="349:47" pos:end="349:47">0</literal></expr>]</index></name><operator pos:start="349:49" pos:end="349:49">.</operator><name pos:start="349:50" pos:end="349:64">server_port_min</name></expr></argument>, <argument pos:start="349:67" pos:end="349:70"><expr pos:start="349:67" pos:end="349:70"><name pos:start="349:67" pos:end="349:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="351:15" pos:end="357:13">else <block pos:start="351:20" pos:end="357:13">{<block_content pos:start="353:17" pos:end="355:72">

                <expr_stmt pos:start="353:17" pos:end="355:72"><expr pos:start="353:17" pos:end="355:71"><call pos:start="353:17" pos:end="355:71"><name pos:start="353:17" pos:end="353:27">ff_url_join</name><argument_list pos:start="353:28" pos:end="355:71">(<argument pos:start="353:29" pos:end="353:31"><expr pos:start="353:29" pos:end="353:31"><name pos:start="353:29" pos:end="353:31">url</name></expr></argument>, <argument pos:start="353:34" pos:end="353:44"><expr pos:start="353:34" pos:end="353:44"><sizeof pos:start="353:34" pos:end="353:44">sizeof<argument_list pos:start="353:40" pos:end="353:44">(<argument pos:start="353:41" pos:end="353:43"><expr pos:start="353:41" pos:end="353:43"><name pos:start="353:41" pos:end="353:43">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="353:47" pos:end="353:51"><expr pos:start="353:47" pos:end="353:51"><literal type="string" pos:start="353:47" pos:end="353:51">"rtp"</literal></expr></argument>, <argument pos:start="353:54" pos:end="353:57"><expr pos:start="353:54" pos:end="353:57"><name pos:start="353:54" pos:end="353:57">NULL</name></expr></argument>, <argument pos:start="353:60" pos:end="353:63"><expr pos:start="353:60" pos:end="353:63"><name pos:start="353:60" pos:end="353:63">host</name></expr></argument>,

                            <argument pos:start="355:29" pos:end="355:64"><expr pos:start="355:29" pos:end="355:64"><name pos:start="355:29" pos:end="355:48"><name pos:start="355:29" pos:end="355:33">reply</name><operator pos:start="355:34" pos:end="355:35">-&gt;</operator><name pos:start="355:36" pos:end="355:45">transports</name><index pos:start="355:46" pos:end="355:48">[<expr pos:start="355:47" pos:end="355:47"><literal type="number" pos:start="355:47" pos:end="355:47">0</literal></expr>]</index></name><operator pos:start="355:49" pos:end="355:49">.</operator><name pos:start="355:50" pos:end="355:64">server_port_min</name></expr></argument>, <argument pos:start="355:67" pos:end="355:70"><expr pos:start="355:67" pos:end="355:70"><name pos:start="355:67" pos:end="355:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="359:13" pos:end="367:13"><if pos:start="359:13" pos:end="367:13">if <condition pos:start="359:16" pos:end="361:65">(<expr pos:start="359:17" pos:end="361:64"><operator pos:start="359:17" pos:end="359:17">!</operator><operator pos:start="359:18" pos:end="359:18">(</operator><name pos:start="359:19" pos:end="359:33"><name pos:start="359:19" pos:end="359:20">rt</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:33">server_type</name></name> <operator pos:start="359:35" pos:end="359:36">==</operator> <name pos:start="359:38" pos:end="359:52">RTSP_SERVER_WMS</name> <operator pos:start="359:54" pos:end="359:55">&amp;&amp;</operator> <name pos:start="359:57" pos:end="359:57">i</name> <operator pos:start="359:59" pos:end="359:59">&gt;</operator> <literal type="number" pos:start="359:61" pos:end="359:61">1</literal><operator pos:start="359:62" pos:end="359:62">)</operator> <operator pos:start="359:64" pos:end="359:65">&amp;&amp;</operator>

                <call pos:start="361:17" pos:end="361:60"><name pos:start="361:17" pos:end="361:34">rtp_set_remote_url</name><argument_list pos:start="361:35" pos:end="361:60">(<argument pos:start="361:36" pos:end="361:54"><expr pos:start="361:36" pos:end="361:54"><name pos:start="361:36" pos:end="361:54"><name pos:start="361:36" pos:end="361:42">rtsp_st</name><operator pos:start="361:43" pos:end="361:44">-&gt;</operator><name pos:start="361:45" pos:end="361:54">rtp_handle</name></name></expr></argument>, <argument pos:start="361:57" pos:end="361:59"><expr pos:start="361:57" pos:end="361:59"><name pos:start="361:57" pos:end="361:59">url</name></expr></argument>)</argument_list></call> <operator pos:start="361:62" pos:end="361:62">&lt;</operator> <literal type="number" pos:start="361:64" pos:end="361:64">0</literal></expr>)</condition> <block pos:start="361:67" pos:end="367:13">{<block_content pos:start="363:17" pos:end="365:26">

                <expr_stmt pos:start="363:17" pos:end="363:42"><expr pos:start="363:17" pos:end="363:41"><name pos:start="363:17" pos:end="363:19">err</name> <operator pos:start="363:21" pos:end="363:21">=</operator> <name pos:start="363:23" pos:end="363:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="365:17" pos:end="365:26">goto <name pos:start="365:22" pos:end="365:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="369:13" pos:end="375:15">/* Try to initialize the connection state in a

             * potential NAT router by sending dummy packets.

             * RTP/RTCP dummy packets are used for RDT, too.

             */</comment>

            <if_stmt pos:start="377:13" pos:end="381:60"><if pos:start="377:13" pos:end="381:60">if <condition pos:start="377:16" pos:end="379:30">(<expr pos:start="377:17" pos:end="379:29"><operator pos:start="377:17" pos:end="377:17">!</operator><operator pos:start="377:18" pos:end="377:18">(</operator><name pos:start="377:19" pos:end="377:33"><name pos:start="377:19" pos:end="377:20">rt</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:33">server_type</name></name> <operator pos:start="377:35" pos:end="377:36">==</operator> <name pos:start="377:38" pos:end="377:52">RTSP_SERVER_WMS</name> <operator pos:start="377:54" pos:end="377:55">&amp;&amp;</operator> <name pos:start="377:57" pos:end="377:57">i</name> <operator pos:start="377:59" pos:end="377:59">&gt;</operator> <literal type="number" pos:start="377:61" pos:end="377:61">1</literal><operator pos:start="377:62" pos:end="377:62">)</operator> <operator pos:start="377:64" pos:end="377:65">&amp;&amp;</operator> <name pos:start="377:67" pos:end="377:76"><name pos:start="377:67" pos:end="377:67">s</name><operator pos:start="377:68" pos:end="377:69">-&gt;</operator><name pos:start="377:70" pos:end="377:76">iformat</name></name> <operator pos:start="377:78" pos:end="377:79">&amp;&amp;</operator>

                <name pos:start="379:17" pos:end="379:29">CONFIG_RTPDEC</name></expr>)</condition><block type="pseudo" pos:start="381:17" pos:end="381:60"><block_content pos:start="381:17" pos:end="381:60">

                <expr_stmt pos:start="381:17" pos:end="381:60"><expr pos:start="381:17" pos:end="381:59"><call pos:start="381:17" pos:end="381:59"><name pos:start="381:17" pos:end="381:38">rtp_send_punch_packets</name><argument_list pos:start="381:39" pos:end="381:59">(<argument pos:start="381:40" pos:end="381:58"><expr pos:start="381:40" pos:end="381:58"><name pos:start="381:40" pos:end="381:58"><name pos:start="381:40" pos:end="381:46">rtsp_st</name><operator pos:start="381:47" pos:end="381:48">-&gt;</operator><name pos:start="381:49" pos:end="381:58">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="383:13" pos:end="383:18">break;</break>

        </block_content>}</block>

        <case pos:start="387:9" pos:end="387:48">case <expr pos:start="387:14" pos:end="387:47"><name pos:start="387:14" pos:end="387:47">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>:</case> <block pos:start="387:50" pos:end="433:9">{<block_content pos:start="389:13" pos:end="431:18">

            <decl_stmt pos:start="389:13" pos:end="389:40"><decl pos:start="389:13" pos:end="389:26"><type pos:start="389:13" pos:end="389:16"><name pos:start="389:13" pos:end="389:16">char</name></type> <name pos:start="389:18" pos:end="389:26"><name pos:start="389:18" pos:end="389:20">url</name><index pos:start="389:21" pos:end="389:26">[<expr pos:start="389:22" pos:end="389:25"><literal type="number" pos:start="389:22" pos:end="389:25">1024</literal></expr>]</index></name></decl>, <decl pos:start="389:29" pos:end="389:39"><type ref="prev" pos:start="389:13" pos:end="389:16"/><name pos:start="389:29" pos:end="389:39"><name pos:start="389:29" pos:end="389:35">namebuf</name><index pos:start="389:36" pos:end="389:39">[<expr pos:start="389:37" pos:end="389:38"><literal type="number" pos:start="389:37" pos:end="389:38">50</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="391:13" pos:end="391:41"><decl pos:start="391:13" pos:end="391:40"><type pos:start="391:13" pos:end="391:35"><name pos:start="391:13" pos:end="391:35"><name pos:start="391:13" pos:end="391:18">struct</name> <name pos:start="391:20" pos:end="391:35">sockaddr_storage</name></name></type> <name pos:start="391:37" pos:end="391:40">addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="393:13" pos:end="393:26"><decl pos:start="393:13" pos:end="393:20"><type pos:start="393:13" pos:end="393:15"><name pos:start="393:13" pos:end="393:15">int</name></type> <name pos:start="393:17" pos:end="393:20">port</name></decl>, <decl pos:start="393:23" pos:end="393:25"><type ref="prev" pos:start="393:13" pos:end="393:15"/><name pos:start="393:23" pos:end="393:25">ttl</name></decl>;</decl_stmt>



            <if_stmt pos:start="397:13" pos:end="413:13"><if pos:start="397:13" pos:end="405:13">if <condition pos:start="397:16" pos:end="397:59">(<expr pos:start="397:17" pos:end="397:58"><name pos:start="397:17" pos:end="397:36"><name pos:start="397:17" pos:end="397:21">reply</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:33">transports</name><index pos:start="397:34" pos:end="397:36">[<expr pos:start="397:35" pos:end="397:35"><literal type="number" pos:start="397:35" pos:end="397:35">0</literal></expr>]</index></name><operator pos:start="397:37" pos:end="397:37">.</operator><name pos:start="397:38" pos:end="397:58"><name pos:start="397:38" pos:end="397:48">destination</name><operator pos:start="397:49" pos:end="397:49">.</operator><name pos:start="397:50" pos:end="397:58">ss_family</name></name></expr>)</condition> <block pos:start="397:61" pos:end="405:13">{<block_content pos:start="399:17" pos:end="403:53">

                <expr_stmt pos:start="399:17" pos:end="399:61"><expr pos:start="399:17" pos:end="399:60"><name pos:start="399:17" pos:end="399:20">addr</name>      <operator pos:start="399:27" pos:end="399:27">=</operator> <name pos:start="399:29" pos:end="399:48"><name pos:start="399:29" pos:end="399:33">reply</name><operator pos:start="399:34" pos:end="399:35">-&gt;</operator><name pos:start="399:36" pos:end="399:45">transports</name><index pos:start="399:46" pos:end="399:48">[<expr pos:start="399:47" pos:end="399:47"><literal type="number" pos:start="399:47" pos:end="399:47">0</literal></expr>]</index></name><operator pos:start="399:49" pos:end="399:49">.</operator><name pos:start="399:50" pos:end="399:60">destination</name></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:58"><expr pos:start="401:17" pos:end="401:57"><name pos:start="401:17" pos:end="401:20">port</name>      <operator pos:start="401:27" pos:end="401:27">=</operator> <name pos:start="401:29" pos:end="401:48"><name pos:start="401:29" pos:end="401:33">reply</name><operator pos:start="401:34" pos:end="401:35">-&gt;</operator><name pos:start="401:36" pos:end="401:45">transports</name><index pos:start="401:46" pos:end="401:48">[<expr pos:start="401:47" pos:end="401:47"><literal type="number" pos:start="401:47" pos:end="401:47">0</literal></expr>]</index></name><operator pos:start="401:49" pos:end="401:49">.</operator><name pos:start="401:50" pos:end="401:57">port_min</name></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="403:53"><expr pos:start="403:17" pos:end="403:52"><name pos:start="403:17" pos:end="403:19">ttl</name>       <operator pos:start="403:27" pos:end="403:27">=</operator> <name pos:start="403:29" pos:end="403:48"><name pos:start="403:29" pos:end="403:33">reply</name><operator pos:start="403:34" pos:end="403:35">-&gt;</operator><name pos:start="403:36" pos:end="403:45">transports</name><index pos:start="403:46" pos:end="403:48">[<expr pos:start="403:47" pos:end="403:47"><literal type="number" pos:start="403:47" pos:end="403:47">0</literal></expr>]</index></name><operator pos:start="403:49" pos:end="403:49">.</operator><name pos:start="403:50" pos:end="403:52">ttl</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="405:15" pos:end="413:13">else <block pos:start="405:20" pos:end="413:13">{<block_content pos:start="407:17" pos:end="411:45">

                <expr_stmt pos:start="407:17" pos:end="407:44"><expr pos:start="407:17" pos:end="407:43"><name pos:start="407:17" pos:end="407:20">addr</name>      <operator pos:start="407:27" pos:end="407:27">=</operator> <name pos:start="407:29" pos:end="407:43"><name pos:start="407:29" pos:end="407:35">rtsp_st</name><operator pos:start="407:36" pos:end="407:37">-&gt;</operator><name pos:start="407:38" pos:end="407:43">sdp_ip</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="409:46"><expr pos:start="409:17" pos:end="409:45"><name pos:start="409:17" pos:end="409:20">port</name>      <operator pos:start="409:27" pos:end="409:27">=</operator> <name pos:start="409:29" pos:end="409:45"><name pos:start="409:29" pos:end="409:35">rtsp_st</name><operator pos:start="409:36" pos:end="409:37">-&gt;</operator><name pos:start="409:38" pos:end="409:45">sdp_port</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:45"><expr pos:start="411:17" pos:end="411:44"><name pos:start="411:17" pos:end="411:19">ttl</name>       <operator pos:start="411:27" pos:end="411:27">=</operator> <name pos:start="411:29" pos:end="411:44"><name pos:start="411:29" pos:end="411:35">rtsp_st</name><operator pos:start="411:36" pos:end="411:37">-&gt;</operator><name pos:start="411:38" pos:end="411:44">sdp_ttl</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="415:13" pos:end="417:75"><expr pos:start="415:13" pos:end="417:74"><call pos:start="415:13" pos:end="417:74"><name pos:start="415:13" pos:end="415:23">getnameinfo</name><argument_list pos:start="415:24" pos:end="417:74">(<argument pos:start="415:25" pos:end="415:48"><expr pos:start="415:25" pos:end="415:48"><operator pos:start="415:25" pos:end="415:25">(</operator>struct <name pos:start="415:33" pos:end="415:40">sockaddr</name><operator pos:start="415:41" pos:end="415:41">*</operator><operator pos:start="415:42" pos:end="415:42">)</operator> <operator pos:start="415:44" pos:end="415:44">&amp;</operator><name pos:start="415:45" pos:end="415:48">addr</name></expr></argument>, <argument pos:start="415:51" pos:end="415:62"><expr pos:start="415:51" pos:end="415:62"><sizeof pos:start="415:51" pos:end="415:62">sizeof<argument_list pos:start="415:57" pos:end="415:62">(<argument pos:start="415:58" pos:end="415:61"><expr pos:start="415:58" pos:end="415:61"><name pos:start="415:58" pos:end="415:61">addr</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="417:25" pos:end="417:31"><expr pos:start="417:25" pos:end="417:31"><name pos:start="417:25" pos:end="417:31">namebuf</name></expr></argument>, <argument pos:start="417:34" pos:end="417:48"><expr pos:start="417:34" pos:end="417:48"><sizeof pos:start="417:34" pos:end="417:48">sizeof<argument_list pos:start="417:40" pos:end="417:48">(<argument pos:start="417:41" pos:end="417:47"><expr pos:start="417:41" pos:end="417:47"><name pos:start="417:41" pos:end="417:47">namebuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="417:51" pos:end="417:54"><expr pos:start="417:51" pos:end="417:54"><name pos:start="417:51" pos:end="417:54">NULL</name></expr></argument>, <argument pos:start="417:57" pos:end="417:57"><expr pos:start="417:57" pos:end="417:57"><literal type="number" pos:start="417:57" pos:end="417:57">0</literal></expr></argument>, <argument pos:start="417:60" pos:end="417:73"><expr pos:start="417:60" pos:end="417:73"><name pos:start="417:60" pos:end="417:73">NI_NUMERICHOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="421:46"><expr pos:start="419:13" pos:end="421:45"><call pos:start="419:13" pos:end="421:45"><name pos:start="419:13" pos:end="419:23">ff_url_join</name><argument_list pos:start="419:24" pos:end="421:45">(<argument pos:start="419:25" pos:end="419:27"><expr pos:start="419:25" pos:end="419:27"><name pos:start="419:25" pos:end="419:27">url</name></expr></argument>, <argument pos:start="419:30" pos:end="419:40"><expr pos:start="419:30" pos:end="419:40"><sizeof pos:start="419:30" pos:end="419:40">sizeof<argument_list pos:start="419:36" pos:end="419:40">(<argument pos:start="419:37" pos:end="419:39"><expr pos:start="419:37" pos:end="419:39"><name pos:start="419:37" pos:end="419:39">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="419:43" pos:end="419:47"><expr pos:start="419:43" pos:end="419:47"><literal type="string" pos:start="419:43" pos:end="419:47">"rtp"</literal></expr></argument>, <argument pos:start="419:50" pos:end="419:53"><expr pos:start="419:50" pos:end="419:53"><name pos:start="419:50" pos:end="419:53">NULL</name></expr></argument>, <argument pos:start="419:56" pos:end="419:62"><expr pos:start="419:56" pos:end="419:62"><name pos:start="419:56" pos:end="419:62">namebuf</name></expr></argument>,

                        <argument pos:start="421:25" pos:end="421:28"><expr pos:start="421:25" pos:end="421:28"><name pos:start="421:25" pos:end="421:28">port</name></expr></argument>, <argument pos:start="421:31" pos:end="421:39"><expr pos:start="421:31" pos:end="421:39"><literal type="string" pos:start="421:31" pos:end="421:39">"?ttl=%d"</literal></expr></argument>, <argument pos:start="421:42" pos:end="421:44"><expr pos:start="421:42" pos:end="421:44"><name pos:start="421:42" pos:end="421:44">ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="423:13" pos:end="429:13"><if pos:start="423:13" pos:end="429:13">if <condition pos:start="423:16" pos:end="423:66">(<expr pos:start="423:17" pos:end="423:65"><call pos:start="423:17" pos:end="423:61"><name pos:start="423:17" pos:end="423:24">url_open</name><argument_list pos:start="423:25" pos:end="423:61">(<argument pos:start="423:26" pos:end="423:45"><expr pos:start="423:26" pos:end="423:45"><operator pos:start="423:26" pos:end="423:26">&amp;</operator><name pos:start="423:27" pos:end="423:45"><name pos:start="423:27" pos:end="423:33">rtsp_st</name><operator pos:start="423:34" pos:end="423:35">-&gt;</operator><name pos:start="423:36" pos:end="423:45">rtp_handle</name></name></expr></argument>, <argument pos:start="423:48" pos:end="423:50"><expr pos:start="423:48" pos:end="423:50"><name pos:start="423:48" pos:end="423:50">url</name></expr></argument>, <argument pos:start="423:53" pos:end="423:60"><expr pos:start="423:53" pos:end="423:60"><name pos:start="423:53" pos:end="423:60">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="423:63" pos:end="423:63">&lt;</operator> <literal type="number" pos:start="423:65" pos:end="423:65">0</literal></expr>)</condition> <block pos:start="423:68" pos:end="429:13">{<block_content pos:start="425:17" pos:end="427:26">

                <expr_stmt pos:start="425:17" pos:end="425:42"><expr pos:start="425:17" pos:end="425:41"><name pos:start="425:17" pos:end="425:19">err</name> <operator pos:start="425:21" pos:end="425:21">=</operator> <name pos:start="425:23" pos:end="425:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="427:17" pos:end="427:26">goto <name pos:start="427:22" pos:end="427:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="431:13" pos:end="431:18">break;</break>

        </block_content>}</block>

        </block_content>}</block></switch>



        <if_stmt pos:start="439:9" pos:end="441:22"><if pos:start="439:9" pos:end="441:22">if <condition pos:start="439:12" pos:end="439:56">(<expr pos:start="439:13" pos:end="439:55"><operator pos:start="439:13" pos:end="439:13">(</operator><name pos:start="439:14" pos:end="439:16">err</name> <operator pos:start="439:18" pos:end="439:18">=</operator> <call pos:start="439:20" pos:end="439:54"><name pos:start="439:20" pos:end="439:42">rtsp_open_transport_ctx</name><argument_list pos:start="439:43" pos:end="439:54">(<argument pos:start="439:44" pos:end="439:44"><expr pos:start="439:44" pos:end="439:44"><name pos:start="439:44" pos:end="439:44">s</name></expr></argument>, <argument pos:start="439:47" pos:end="439:53"><expr pos:start="439:47" pos:end="439:53"><name pos:start="439:47" pos:end="439:53">rtsp_st</name></expr></argument>)</argument_list></call><operator pos:start="439:55" pos:end="439:55">)</operator></expr>)</condition><block type="pseudo" pos:start="441:13" pos:end="441:22"><block_content pos:start="441:13" pos:end="441:22">

            <goto pos:start="441:13" pos:end="441:22">goto <name pos:start="441:18" pos:end="441:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="447:5" pos:end="449:37"><if pos:start="447:5" pos:end="449:37">if <condition pos:start="447:8" pos:end="447:27">(<expr pos:start="447:9" pos:end="447:26"><name pos:start="447:9" pos:end="447:22"><name pos:start="447:9" pos:end="447:13">reply</name><operator pos:start="447:14" pos:end="447:15">-&gt;</operator><name pos:start="447:16" pos:end="447:22">timeout</name></name> <operator pos:start="447:24" pos:end="447:24">&gt;</operator> <literal type="number" pos:start="447:26" pos:end="447:26">0</literal></expr>)</condition><block type="pseudo" pos:start="449:9" pos:end="449:37"><block_content pos:start="449:9" pos:end="449:37">

        <expr_stmt pos:start="449:9" pos:end="449:37"><expr pos:start="449:9" pos:end="449:36"><name pos:start="449:9" pos:end="449:19"><name pos:start="449:9" pos:end="449:10">rt</name><operator pos:start="449:11" pos:end="449:12">-&gt;</operator><name pos:start="449:13" pos:end="449:19">timeout</name></name> <operator pos:start="449:21" pos:end="449:21">=</operator> <name pos:start="449:23" pos:end="449:36"><name pos:start="449:23" pos:end="449:27">reply</name><operator pos:start="449:28" pos:end="449:29">-&gt;</operator><name pos:start="449:30" pos:end="449:36">timeout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="453:5" pos:end="455:34"><if pos:start="453:5" pos:end="455:34">if <condition pos:start="453:8" pos:end="453:44">(<expr pos:start="453:9" pos:end="453:43"><name pos:start="453:9" pos:end="453:23"><name pos:start="453:9" pos:end="453:10">rt</name><operator pos:start="453:11" pos:end="453:12">-&gt;</operator><name pos:start="453:13" pos:end="453:23">server_type</name></name> <operator pos:start="453:25" pos:end="453:26">==</operator> <name pos:start="453:28" pos:end="453:43">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="455:9" pos:end="455:34"><block_content pos:start="455:9" pos:end="455:34">

        <expr_stmt pos:start="455:9" pos:end="455:34"><expr pos:start="455:9" pos:end="455:33"><name pos:start="455:9" pos:end="455:29"><name pos:start="455:9" pos:end="455:10">rt</name><operator pos:start="455:11" pos:end="455:12">-&gt;</operator><name pos:start="455:13" pos:end="455:29">need_subscription</name></name> <operator pos:start="455:31" pos:end="455:31">=</operator> <literal type="number" pos:start="455:33" pos:end="455:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="459:5" pos:end="459:13">return <expr pos:start="459:12" pos:end="459:12"><literal type="number" pos:start="459:12" pos:end="459:12">0</literal></expr>;</return>



<label pos:start="463:1" pos:end="463:5"><name pos:start="463:1" pos:end="463:4">fail</name>:</label>

    <for pos:start="465:5" pos:end="475:5">for <control pos:start="465:9" pos:end="465:45">(<init pos:start="465:10" pos:end="465:15"><expr pos:start="465:10" pos:end="465:14"><name pos:start="465:10" pos:end="465:10">i</name> <operator pos:start="465:12" pos:end="465:12">=</operator> <literal type="number" pos:start="465:14" pos:end="465:14">0</literal></expr>;</init> <condition pos:start="465:17" pos:end="465:40"><expr pos:start="465:17" pos:end="465:39"><name pos:start="465:17" pos:end="465:17">i</name> <operator pos:start="465:19" pos:end="465:19">&lt;</operator> <name pos:start="465:21" pos:end="465:39"><name pos:start="465:21" pos:end="465:22">rt</name><operator pos:start="465:23" pos:end="465:24">-&gt;</operator><name pos:start="465:25" pos:end="465:39">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="465:42" pos:end="465:44"><expr pos:start="465:42" pos:end="465:44"><name pos:start="465:42" pos:end="465:42">i</name><operator pos:start="465:43" pos:end="465:44">++</operator></expr></incr>)</control> <block pos:start="465:47" pos:end="475:5">{<block_content pos:start="467:9" pos:end="473:9">

        <if_stmt pos:start="467:9" pos:end="473:9"><if pos:start="467:9" pos:end="473:9">if <condition pos:start="467:12" pos:end="467:44">(<expr pos:start="467:13" pos:end="467:43"><name pos:start="467:13" pos:end="467:31"><name pos:start="467:13" pos:end="467:14">rt</name><operator pos:start="467:15" pos:end="467:16">-&gt;</operator><name pos:start="467:17" pos:end="467:28">rtsp_streams</name><index pos:start="467:29" pos:end="467:31">[<expr pos:start="467:30" pos:end="467:30"><name pos:start="467:30" pos:end="467:30">i</name></expr>]</index></name><operator pos:start="467:32" pos:end="467:33">-&gt;</operator><name pos:start="467:34" pos:end="467:43">rtp_handle</name></expr>)</condition> <block pos:start="467:46" pos:end="473:9">{<block_content pos:start="469:13" pos:end="471:51">

            <expr_stmt pos:start="469:13" pos:end="469:55"><expr pos:start="469:13" pos:end="469:54"><call pos:start="469:13" pos:end="469:54"><name pos:start="469:13" pos:end="469:21">url_close</name><argument_list pos:start="469:22" pos:end="469:54">(<argument pos:start="469:23" pos:end="469:53"><expr pos:start="469:23" pos:end="469:53"><name pos:start="469:23" pos:end="469:41"><name pos:start="469:23" pos:end="469:24">rt</name><operator pos:start="469:25" pos:end="469:26">-&gt;</operator><name pos:start="469:27" pos:end="469:38">rtsp_streams</name><index pos:start="469:39" pos:end="469:41">[<expr pos:start="469:40" pos:end="469:40"><name pos:start="469:40" pos:end="469:40">i</name></expr>]</index></name><operator pos:start="469:42" pos:end="469:43">-&gt;</operator><name pos:start="469:44" pos:end="469:53">rtp_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:51"><expr pos:start="471:13" pos:end="471:50"><name pos:start="471:13" pos:end="471:31"><name pos:start="471:13" pos:end="471:14">rt</name><operator pos:start="471:15" pos:end="471:16">-&gt;</operator><name pos:start="471:17" pos:end="471:28">rtsp_streams</name><index pos:start="471:29" pos:end="471:31">[<expr pos:start="471:30" pos:end="471:30"><name pos:start="471:30" pos:end="471:30">i</name></expr>]</index></name><operator pos:start="471:32" pos:end="471:33">-&gt;</operator><name pos:start="471:34" pos:end="471:43">rtp_handle</name> <operator pos:start="471:45" pos:end="471:45">=</operator> <name pos:start="471:47" pos:end="471:50">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="477:5" pos:end="477:15">return <expr pos:start="477:12" pos:end="477:14"><name pos:start="477:12" pos:end="477:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
