<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24344.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">powerpc_display_perf_report</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:3" pos:end="73:3">

  <decl_stmt pos:start="5:3" pos:end="8:0"><decl pos:start="5:3" pos:end="5:7"><type pos:start="5:3" pos:end="5:5"><name pos:start="5:3" pos:end="5:5">int</name></type> <name pos:start="5:7" pos:end="5:7">i</name></decl>;</decl_stmt>

<cpp:ifndef pos:start="7:1" pos:end="7:28">#<cpp:directive pos:start="7:2" pos:end="7:7">ifndef</cpp:directive> <name pos:start="7:9" pos:end="7:28">POWERPC_PERF_USE_PMC</name></cpp:ifndef>

  <expr_stmt pos:start="9:3" pos:end="12:0"><expr pos:start="9:3" pos:end="9:119"><call pos:start="9:3" pos:end="9:119"><name pos:start="9:3" pos:end="9:9">fprintf</name><argument_list pos:start="9:10" pos:end="9:119">(<argument pos:start="9:11" pos:end="9:16"><expr pos:start="9:11" pos:end="9:16"><name pos:start="9:11" pos:end="9:16">stderr</name></expr></argument>, <argument pos:start="9:19" pos:end="9:118"><expr pos:start="9:19" pos:end="9:118"><literal type="string" pos:start="9:19" pos:end="9:118">"PowerPC performance report\n Values are from the Time Base register, and represent 4 bus cycles.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="11:1" pos:end="11:5">#<cpp:directive pos:start="11:2" pos:end="11:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="11:7" pos:end="11:32">/* POWERPC_PERF_USE_PMC */</comment>

  <expr_stmt pos:start="13:3" pos:end="16:0"><expr pos:start="13:3" pos:end="13:142"><call pos:start="13:3" pos:end="13:142"><name pos:start="13:3" pos:end="13:9">fprintf</name><argument_list pos:start="13:10" pos:end="13:142">(<argument pos:start="13:11" pos:end="13:16"><expr pos:start="13:11" pos:end="13:16"><name pos:start="13:11" pos:end="13:16">stderr</name></expr></argument>, <argument pos:start="13:19" pos:end="13:141"><expr pos:start="13:19" pos:end="13:141"><literal type="string" pos:start="13:19" pos:end="13:141">"PowerPC performance report\n Values are from the PMC registers, and represent whatever the registers are set to record.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="15:8" pos:end="15:33">/* POWERPC_PERF_USE_PMC */</comment>

  <for pos:start="17:3" pos:end="73:3">for<control pos:start="17:6" pos:end="17:43">(<init pos:start="17:7" pos:end="17:13"><expr pos:start="17:7" pos:end="17:11"><name pos:start="17:7" pos:end="17:7">i</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr> ;</init> <condition pos:start="17:15" pos:end="17:38"><expr pos:start="17:15" pos:end="17:36"><name pos:start="17:15" pos:end="17:15">i</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <name pos:start="17:19" pos:end="17:36">powerpc_perf_total</name></expr> ;</condition> <incr pos:start="17:40" pos:end="17:42"><expr pos:start="17:40" pos:end="17:42"><name pos:start="17:40" pos:end="17:40">i</name><operator pos:start="17:41" pos:end="17:42">++</operator></expr></incr>)</control>

  <block pos:start="19:3" pos:end="73:3">{<block_content pos:start="21:5" pos:end="72:0">

    <if_stmt pos:start="21:5" pos:end="38:0"><if pos:start="21:5" pos:end="38:0">if <condition pos:start="21:8" pos:end="21:63">(<expr pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:16">perfdata</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">i</name></expr>]</index><index pos:start="21:20" pos:end="21:37">[<expr pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:36">powerpc_data_num</name></expr>]</index></name> <operator pos:start="21:39" pos:end="21:40">!=</operator> <operator pos:start="21:42" pos:end="21:42">(</operator><name pos:start="21:43" pos:end="21:50">unsigned</name> <name pos:start="21:52" pos:end="21:55">long</name> <name pos:start="21:57" pos:end="21:60">long</name><operator pos:start="21:61" pos:end="21:61">)</operator><literal type="number" pos:start="21:62" pos:end="21:62">0</literal></expr>)</condition><block type="pseudo" pos:start="23:7" pos:end="38:0"><block_content pos:start="23:7" pos:end="38:0">

      <expr_stmt pos:start="23:7" pos:end="38:0"><expr pos:start="23:7" pos:end="35:44"><call pos:start="23:7" pos:end="35:44"><name pos:start="23:7" pos:end="23:13">fprintf</name><argument_list pos:start="23:14" pos:end="35:44">(<argument pos:start="23:15" pos:end="23:20"><expr pos:start="23:15" pos:end="23:20"><name pos:start="23:15" pos:end="23:20">stderr</name></expr></argument>, <argument pos:start="23:23" pos:end="23:98"><expr pos:start="23:23" pos:end="23:98"><literal type="string" pos:start="23:23" pos:end="23:98">" Function \"%s\" (pmc1):\n\tmin: %llu\n\tmax: %llu\n\tavg: %1.2lf (%llu)\n"</literal></expr></argument>,

              <argument pos:start="25:15" pos:end="25:25"><expr pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:22">perfname</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name></expr></argument>,

              <argument pos:start="27:15" pos:end="27:43"><expr pos:start="27:15" pos:end="27:43"><name pos:start="27:15" pos:end="27:43"><name pos:start="27:15" pos:end="27:22">perfdata</name><index pos:start="27:23" pos:end="27:25">[<expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">i</name></expr>]</index><index pos:start="27:26" pos:end="27:43">[<expr pos:start="27:27" pos:end="27:42"><name pos:start="27:27" pos:end="27:42">powerpc_data_min</name></expr>]</index></name></expr></argument>,

              <argument pos:start="29:15" pos:end="29:43"><expr pos:start="29:15" pos:end="29:43"><name pos:start="29:15" pos:end="29:43"><name pos:start="29:15" pos:end="29:22">perfdata</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index><index pos:start="29:26" pos:end="29:43">[<expr pos:start="29:27" pos:end="29:42"><name pos:start="29:27" pos:end="29:42">powerpc_data_max</name></expr>]</index></name></expr></argument>,

              <argument pos:start="31:15" pos:end="33:51"><expr pos:start="31:15" pos:end="33:51"><operator pos:start="31:15" pos:end="31:15">(</operator><name pos:start="31:16" pos:end="31:21">double</name><operator pos:start="31:22" pos:end="31:22">)</operator><name pos:start="31:23" pos:end="31:51"><name pos:start="31:23" pos:end="31:30">perfdata</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">i</name></expr>]</index><index pos:start="31:34" pos:end="31:51">[<expr pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:50">powerpc_data_sum</name></expr>]</index></name> <operator pos:start="31:53" pos:end="31:53">/</operator>

              <operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:21">double</name><operator pos:start="33:22" pos:end="33:22">)</operator><name pos:start="33:23" pos:end="33:51"><name pos:start="33:23" pos:end="33:30">perfdata</name><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">i</name></expr>]</index><index pos:start="33:34" pos:end="33:51">[<expr pos:start="33:35" pos:end="33:50"><name pos:start="33:35" pos:end="33:50">powerpc_data_num</name></expr>]</index></name></expr></argument>,

              <argument pos:start="35:15" pos:end="35:43"><expr pos:start="35:15" pos:end="35:43"><name pos:start="35:15" pos:end="35:43"><name pos:start="35:15" pos:end="35:22">perfdata</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">i</name></expr>]</index><index pos:start="35:26" pos:end="35:43">[<expr pos:start="35:27" pos:end="35:42"><name pos:start="35:27" pos:end="35:42">powerpc_data_num</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="37:1" pos:end="37:27">#<cpp:directive pos:start="37:2" pos:end="37:6">ifdef</cpp:directive> <name pos:start="37:8" pos:end="37:27">POWERPC_PERF_USE_PMC</name></cpp:ifdef>

    <if_stmt pos:start="39:5" pos:end="53:50"><if pos:start="39:5" pos:end="53:50">if <condition pos:start="39:8" pos:end="39:68">(<expr pos:start="39:9" pos:end="39:67"><name pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:21">perfdata_pmc2</name><index pos:start="39:22" pos:end="39:24">[<expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">i</name></expr>]</index><index pos:start="39:25" pos:end="39:42">[<expr pos:start="39:26" pos:end="39:41"><name pos:start="39:26" pos:end="39:41">powerpc_data_num</name></expr>]</index></name> <operator pos:start="39:44" pos:end="39:45">!=</operator> <operator pos:start="39:47" pos:end="39:47">(</operator><name pos:start="39:48" pos:end="39:55">unsigned</name> <name pos:start="39:57" pos:end="39:60">long</name> <name pos:start="39:62" pos:end="39:65">long</name><operator pos:start="39:66" pos:end="39:66">)</operator><literal type="number" pos:start="39:67" pos:end="39:67">0</literal></expr>)</condition><block type="pseudo" pos:start="41:7" pos:end="53:50"><block_content pos:start="41:7" pos:end="53:50">

      <expr_stmt pos:start="41:7" pos:end="53:50"><expr pos:start="41:7" pos:end="53:49"><call pos:start="41:7" pos:end="53:49"><name pos:start="41:7" pos:end="41:13">fprintf</name><argument_list pos:start="41:14" pos:end="53:49">(<argument pos:start="41:15" pos:end="41:20"><expr pos:start="41:15" pos:end="41:20"><name pos:start="41:15" pos:end="41:20">stderr</name></expr></argument>, <argument pos:start="41:23" pos:end="41:98"><expr pos:start="41:23" pos:end="41:98"><literal type="string" pos:start="41:23" pos:end="41:98">" Function \"%s\" (pmc2):\n\tmin: %llu\n\tmax: %llu\n\tavg: %1.2lf (%llu)\n"</literal></expr></argument>,

              <argument pos:start="43:15" pos:end="43:25"><expr pos:start="43:15" pos:end="43:25"><name pos:start="43:15" pos:end="43:25"><name pos:start="43:15" pos:end="43:22">perfname</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">i</name></expr>]</index></name></expr></argument>,

              <argument pos:start="45:15" pos:end="45:48"><expr pos:start="45:15" pos:end="45:48"><name pos:start="45:15" pos:end="45:48"><name pos:start="45:15" pos:end="45:27">perfdata_pmc2</name><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">i</name></expr>]</index><index pos:start="45:31" pos:end="45:48">[<expr pos:start="45:32" pos:end="45:47"><name pos:start="45:32" pos:end="45:47">powerpc_data_min</name></expr>]</index></name></expr></argument>,

              <argument pos:start="47:15" pos:end="47:48"><expr pos:start="47:15" pos:end="47:48"><name pos:start="47:15" pos:end="47:48"><name pos:start="47:15" pos:end="47:27">perfdata_pmc2</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">i</name></expr>]</index><index pos:start="47:31" pos:end="47:48">[<expr pos:start="47:32" pos:end="47:47"><name pos:start="47:32" pos:end="47:47">powerpc_data_max</name></expr>]</index></name></expr></argument>,

              <argument pos:start="49:15" pos:end="51:56"><expr pos:start="49:15" pos:end="51:56"><operator pos:start="49:15" pos:end="49:15">(</operator><name pos:start="49:16" pos:end="49:21">double</name><operator pos:start="49:22" pos:end="49:22">)</operator><name pos:start="49:23" pos:end="49:56"><name pos:start="49:23" pos:end="49:35">perfdata_pmc2</name><index pos:start="49:36" pos:end="49:38">[<expr pos:start="49:37" pos:end="49:37"><name pos:start="49:37" pos:end="49:37">i</name></expr>]</index><index pos:start="49:39" pos:end="49:56">[<expr pos:start="49:40" pos:end="49:55"><name pos:start="49:40" pos:end="49:55">powerpc_data_sum</name></expr>]</index></name> <operator pos:start="49:58" pos:end="49:58">/</operator>

              <operator pos:start="51:15" pos:end="51:15">(</operator><name pos:start="51:16" pos:end="51:21">double</name><operator pos:start="51:22" pos:end="51:22">)</operator><name pos:start="51:23" pos:end="51:56"><name pos:start="51:23" pos:end="51:35">perfdata_pmc2</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">i</name></expr>]</index><index pos:start="51:39" pos:end="51:56">[<expr pos:start="51:40" pos:end="51:55"><name pos:start="51:40" pos:end="51:55">powerpc_data_num</name></expr>]</index></name></expr></argument>,

              <argument pos:start="53:15" pos:end="53:48"><expr pos:start="53:15" pos:end="53:48"><name pos:start="53:15" pos:end="53:48"><name pos:start="53:15" pos:end="53:27">perfdata_pmc2</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">i</name></expr>]</index><index pos:start="53:31" pos:end="53:48">[<expr pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:47">powerpc_data_num</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="72:0"><if pos:start="55:5" pos:end="72:0">if <condition pos:start="55:8" pos:end="55:68">(<expr pos:start="55:9" pos:end="55:67"><name pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:21">perfdata_pmc3</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr>]</index><index pos:start="55:25" pos:end="55:42">[<expr pos:start="55:26" pos:end="55:41"><name pos:start="55:26" pos:end="55:41">powerpc_data_num</name></expr>]</index></name> <operator pos:start="55:44" pos:end="55:45">!=</operator> <operator pos:start="55:47" pos:end="55:47">(</operator><name pos:start="55:48" pos:end="55:55">unsigned</name> <name pos:start="55:57" pos:end="55:60">long</name> <name pos:start="55:62" pos:end="55:65">long</name><operator pos:start="55:66" pos:end="55:66">)</operator><literal type="number" pos:start="55:67" pos:end="55:67">0</literal></expr>)</condition><block type="pseudo" pos:start="57:7" pos:end="72:0"><block_content pos:start="57:7" pos:end="72:0">

      <expr_stmt pos:start="57:7" pos:end="72:0"><expr pos:start="57:7" pos:end="69:49"><call pos:start="57:7" pos:end="69:49"><name pos:start="57:7" pos:end="57:13">fprintf</name><argument_list pos:start="57:14" pos:end="69:49">(<argument pos:start="57:15" pos:end="57:20"><expr pos:start="57:15" pos:end="57:20"><name pos:start="57:15" pos:end="57:20">stderr</name></expr></argument>, <argument pos:start="57:23" pos:end="57:98"><expr pos:start="57:23" pos:end="57:98"><literal type="string" pos:start="57:23" pos:end="57:98">" Function \"%s\" (pmc3):\n\tmin: %llu\n\tmax: %llu\n\tavg: %1.2lf (%llu)\n"</literal></expr></argument>,

              <argument pos:start="59:15" pos:end="59:25"><expr pos:start="59:15" pos:end="59:25"><name pos:start="59:15" pos:end="59:25"><name pos:start="59:15" pos:end="59:22">perfname</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">i</name></expr>]</index></name></expr></argument>,

              <argument pos:start="61:15" pos:end="61:48"><expr pos:start="61:15" pos:end="61:48"><name pos:start="61:15" pos:end="61:48"><name pos:start="61:15" pos:end="61:27">perfdata_pmc3</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">i</name></expr>]</index><index pos:start="61:31" pos:end="61:48">[<expr pos:start="61:32" pos:end="61:47"><name pos:start="61:32" pos:end="61:47">powerpc_data_min</name></expr>]</index></name></expr></argument>,

              <argument pos:start="63:15" pos:end="63:48"><expr pos:start="63:15" pos:end="63:48"><name pos:start="63:15" pos:end="63:48"><name pos:start="63:15" pos:end="63:27">perfdata_pmc3</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><name pos:start="63:29" pos:end="63:29">i</name></expr>]</index><index pos:start="63:31" pos:end="63:48">[<expr pos:start="63:32" pos:end="63:47"><name pos:start="63:32" pos:end="63:47">powerpc_data_max</name></expr>]</index></name></expr></argument>,

              <argument pos:start="65:15" pos:end="67:56"><expr pos:start="65:15" pos:end="67:56"><operator pos:start="65:15" pos:end="65:15">(</operator><name pos:start="65:16" pos:end="65:21">double</name><operator pos:start="65:22" pos:end="65:22">)</operator><name pos:start="65:23" pos:end="65:56"><name pos:start="65:23" pos:end="65:35">perfdata_pmc3</name><index pos:start="65:36" pos:end="65:38">[<expr pos:start="65:37" pos:end="65:37"><name pos:start="65:37" pos:end="65:37">i</name></expr>]</index><index pos:start="65:39" pos:end="65:56">[<expr pos:start="65:40" pos:end="65:55"><name pos:start="65:40" pos:end="65:55">powerpc_data_sum</name></expr>]</index></name> <operator pos:start="65:58" pos:end="65:58">/</operator>

              <operator pos:start="67:15" pos:end="67:15">(</operator><name pos:start="67:16" pos:end="67:21">double</name><operator pos:start="67:22" pos:end="67:22">)</operator><name pos:start="67:23" pos:end="67:56"><name pos:start="67:23" pos:end="67:35">perfdata_pmc3</name><index pos:start="67:36" pos:end="67:38">[<expr pos:start="67:37" pos:end="67:37"><name pos:start="67:37" pos:end="67:37">i</name></expr>]</index><index pos:start="67:39" pos:end="67:56">[<expr pos:start="67:40" pos:end="67:55"><name pos:start="67:40" pos:end="67:55">powerpc_data_num</name></expr>]</index></name></expr></argument>,

              <argument pos:start="69:15" pos:end="69:48"><expr pos:start="69:15" pos:end="69:48"><name pos:start="69:15" pos:end="69:48"><name pos:start="69:15" pos:end="69:27">perfdata_pmc3</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><name pos:start="69:29" pos:end="69:29">i</name></expr>]</index><index pos:start="69:31" pos:end="69:48">[<expr pos:start="69:32" pos:end="69:47"><name pos:start="69:32" pos:end="69:47">powerpc_data_num</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

  </block_content>}</block></for>

</block_content>}</block></function>
</unit>
