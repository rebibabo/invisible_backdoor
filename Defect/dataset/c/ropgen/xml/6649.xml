<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6649.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">mig_save_device_bulk</name><parameter_list pos:start="1:32" pos:end="1:66">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:40">QEMUFile</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">f</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><name pos:start="1:46" pos:end="1:59">BlkMigDevState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">bmds</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:47">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:25">total_sectors</name> <init pos:start="5:27" pos:end="5:47">= <expr pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:32">bmds</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:47">total_sectors</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:22">cur_sector</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:29">bmds</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:41">cur_sector</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">bs</name> <init pos:start="9:26" pos:end="9:35">= <expr pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:31">bmds</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:35">bs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">BlkMigBlock</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">nr_sectors</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:12">bmds</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:25">shared_base</name></name></expr>)</condition> <block pos:start="17:28" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:37">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:32">qemu_mutex_lock_iothread</name><argument_list pos:start="19:33" pos:end="19:34">()</argument_list></call></expr>;</expr_stmt>

        <while pos:start="21:9" pos:end="29:9">while <condition pos:start="21:15" pos:end="25:47">(<expr pos:start="21:16" pos:end="25:46"><name pos:start="21:16" pos:end="21:25">cur_sector</name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <name pos:start="21:29" pos:end="21:41">total_sectors</name> <operator pos:start="21:43" pos:end="21:44">&amp;&amp;</operator>

               <operator pos:start="23:16" pos:end="23:16">!</operator><call pos:start="23:17" pos:end="25:46"><name pos:start="23:17" pos:end="23:33">bdrv_is_allocated</name><argument_list pos:start="23:34" pos:end="25:46">(<argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><name pos:start="23:35" pos:end="23:36">bs</name></expr></argument>, <argument pos:start="23:39" pos:end="23:48"><expr pos:start="23:39" pos:end="23:48"><name pos:start="23:39" pos:end="23:48">cur_sector</name></expr></argument>, <argument pos:start="23:51" pos:end="23:73"><expr pos:start="23:51" pos:end="23:73"><name pos:start="23:51" pos:end="23:73">MAX_IS_ALLOCATED_SEARCH</name></expr></argument>,

                                  <argument pos:start="25:35" pos:end="25:45"><expr pos:start="25:35" pos:end="25:45"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:45">nr_sectors</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:49" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:37">

            <expr_stmt pos:start="27:13" pos:end="27:37"><expr pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:22">cur_sector</name> <operator pos:start="27:24" pos:end="27:25">+=</operator> <name pos:start="27:27" pos:end="27:36">nr_sectors</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><call pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:34">qemu_mutex_unlock_iothread</name><argument_list pos:start="31:35" pos:end="31:36">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:36">(<expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:18">cur_sector</name> <operator pos:start="37:20" pos:end="37:21">&gt;=</operator> <name pos:start="37:23" pos:end="37:35">total_sectors</name></expr>)</condition> <block pos:start="37:38" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:67"><expr pos:start="39:9" pos:end="39:66"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:12">bmds</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:24">cur_sector</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:50"><name pos:start="39:28" pos:end="39:31">bmds</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:50">completed_sectors</name></name> <operator pos:start="39:52" pos:end="39:52">=</operator> <name pos:start="39:54" pos:end="39:66">total_sectors</name></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:8">bmds</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:27">completed_sectors</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:40">cur_sector</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:63"><expr pos:start="51:5" pos:end="51:62"><name pos:start="51:5" pos:end="51:14">cur_sector</name> <operator pos:start="51:16" pos:end="51:17">&amp;=</operator> <operator pos:start="51:19" pos:end="51:19">~</operator><operator pos:start="51:20" pos:end="51:20">(</operator><operator pos:start="51:21" pos:end="51:21">(</operator><name pos:start="51:22" pos:end="51:28">int64_t</name><operator pos:start="51:29" pos:end="51:29">)</operator><name pos:start="51:30" pos:end="51:57">BDRV_SECTORS_PER_DIRTY_CHUNK</name> <operator pos:start="51:59" pos:end="51:59">-</operator> <literal type="number" pos:start="51:61" pos:end="51:61">1</literal><operator pos:start="51:62" pos:end="51:62">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:75">/* we are going to transfer a full block even if it is not allocated */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:14">nr_sectors</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:45">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:66">(<expr pos:start="61:9" pos:end="61:65"><name pos:start="61:9" pos:end="61:21">total_sectors</name> <operator pos:start="61:23" pos:end="61:23">-</operator> <name pos:start="61:25" pos:end="61:34">cur_sector</name> <operator pos:start="61:36" pos:end="61:36">&lt;</operator> <name pos:start="61:38" pos:end="61:65">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>)</condition> <block pos:start="61:68" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:48">

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:18">nr_sectors</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:34">total_sectors</name> <operator pos:start="63:36" pos:end="63:36">-</operator> <name pos:start="63:38" pos:end="63:47">cur_sector</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:40"><expr pos:start="69:5" pos:end="69:39"><name pos:start="69:5" pos:end="69:7">blk</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:39"><name pos:start="69:11" pos:end="69:18">g_malloc</name><argument_list pos:start="69:19" pos:end="69:39">(<argument pos:start="69:20" pos:end="69:38"><expr pos:start="69:20" pos:end="69:38"><sizeof pos:start="69:20" pos:end="69:38">sizeof<argument_list pos:start="69:26" pos:end="69:38">(<argument pos:start="69:27" pos:end="69:37"><expr pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:37">BlkMigBlock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:12"><name pos:start="71:5" pos:end="71:7">blk</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:12">buf</name></name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:35"><name pos:start="71:16" pos:end="71:23">g_malloc</name><argument_list pos:start="71:24" pos:end="71:35">(<argument pos:start="71:25" pos:end="71:34"><expr pos:start="71:25" pos:end="71:34"><name pos:start="71:25" pos:end="71:34">BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:7">blk</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:13">bmds</name></name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:20">bmds</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:29"><expr pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:7">blk</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:15">sector</name></name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:28">cur_sector</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:7">blk</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:19">nr_sectors</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:32">nr_sectors</name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:33"><expr pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:7">blk</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:12">iov</name><operator pos:start="81:13" pos:end="81:13">.</operator><name pos:start="81:14" pos:end="81:21">iov_base</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:32"><name pos:start="81:25" pos:end="81:27">blk</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:32">buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:53"><expr pos:start="83:5" pos:end="83:52"><name pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:7">blk</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:12">iov</name><operator pos:start="83:13" pos:end="83:13">.</operator><name pos:start="83:14" pos:end="83:20">iov_len</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:33">nr_sectors</name> <operator pos:start="83:35" pos:end="83:35">*</operator> <name pos:start="83:37" pos:end="83:52">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:55"><expr pos:start="85:5" pos:end="85:54"><call pos:start="85:5" pos:end="85:54"><name pos:start="85:5" pos:end="85:28">qemu_iovec_init_external</name><argument_list pos:start="85:29" pos:end="85:54">(<argument pos:start="85:30" pos:end="85:39"><expr pos:start="85:30" pos:end="85:39"><operator pos:start="85:30" pos:end="85:30">&amp;</operator><name pos:start="85:31" pos:end="85:39"><name pos:start="85:31" pos:end="85:33">blk</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:39">qiov</name></name></expr></argument>, <argument pos:start="85:42" pos:end="85:50"><expr pos:start="85:42" pos:end="85:50"><operator pos:start="85:42" pos:end="85:42">&amp;</operator><name pos:start="85:43" pos:end="85:50"><name pos:start="85:43" pos:end="85:45">blk</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:50">iov</name></name></expr></argument>, <argument pos:start="85:53" pos:end="85:53"><expr pos:start="85:53" pos:end="85:53"><literal type="number" pos:start="85:53" pos:end="85:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:19"><expr pos:start="89:5" pos:end="89:18"><call pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:16">blk_mig_lock</name><argument_list pos:start="89:17" pos:end="89:18">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><name pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:19">block_mig_state</name><operator pos:start="91:20" pos:end="91:20">.</operator><name pos:start="91:21" pos:end="91:29">submitted</name></name><operator pos:start="91:30" pos:end="91:31">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:21"><expr pos:start="93:5" pos:end="93:20"><call pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:18">blk_mig_unlock</name><argument_list pos:start="93:19" pos:end="93:20">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:31"><expr pos:start="97:5" pos:end="97:30"><call pos:start="97:5" pos:end="97:30"><name pos:start="97:5" pos:end="97:28">qemu_mutex_lock_iothread</name><argument_list pos:start="97:29" pos:end="97:30">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="101:66"><expr pos:start="99:5" pos:end="101:65"><name pos:start="99:5" pos:end="99:14"><name pos:start="99:5" pos:end="99:7">blk</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:14">aiocb</name></name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="101:65"><name pos:start="99:18" pos:end="99:31">bdrv_aio_readv</name><argument_list pos:start="99:32" pos:end="101:65">(<argument pos:start="99:33" pos:end="99:34"><expr pos:start="99:33" pos:end="99:34"><name pos:start="99:33" pos:end="99:34">bs</name></expr></argument>, <argument pos:start="99:37" pos:end="99:46"><expr pos:start="99:37" pos:end="99:46"><name pos:start="99:37" pos:end="99:46">cur_sector</name></expr></argument>, <argument pos:start="99:49" pos:end="99:58"><expr pos:start="99:49" pos:end="99:58"><operator pos:start="99:49" pos:end="99:49">&amp;</operator><name pos:start="99:50" pos:end="99:58"><name pos:start="99:50" pos:end="99:52">blk</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:58">qiov</name></name></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:42"><expr pos:start="101:33" pos:end="101:42"><name pos:start="101:33" pos:end="101:42">nr_sectors</name></expr></argument>, <argument pos:start="101:45" pos:end="101:59"><expr pos:start="101:45" pos:end="101:59"><name pos:start="101:45" pos:end="101:59">blk_mig_read_cb</name></expr></argument>, <argument pos:start="101:62" pos:end="101:64"><expr pos:start="101:62" pos:end="101:64"><name pos:start="101:62" pos:end="101:64">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:49"><expr pos:start="105:5" pos:end="105:48"><call pos:start="105:5" pos:end="105:48"><name pos:start="105:5" pos:end="105:20">bdrv_reset_dirty</name><argument_list pos:start="105:21" pos:end="105:48">(<argument pos:start="105:22" pos:end="105:23"><expr pos:start="105:22" pos:end="105:23"><name pos:start="105:22" pos:end="105:23">bs</name></expr></argument>, <argument pos:start="105:26" pos:end="105:35"><expr pos:start="105:26" pos:end="105:35"><name pos:start="105:26" pos:end="105:35">cur_sector</name></expr></argument>, <argument pos:start="105:38" pos:end="105:47"><expr pos:start="105:38" pos:end="105:47"><name pos:start="105:38" pos:end="105:47">nr_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:33"><expr pos:start="107:5" pos:end="107:32"><call pos:start="107:5" pos:end="107:32"><name pos:start="107:5" pos:end="107:30">qemu_mutex_unlock_iothread</name><argument_list pos:start="107:31" pos:end="107:32">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:47"><expr pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:8">bmds</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:20">cur_sector</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:33">cur_sector</name> <operator pos:start="111:35" pos:end="111:35">+</operator> <name pos:start="111:37" pos:end="111:46">nr_sectors</name></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:47">return <expr pos:start="113:12" pos:end="113:46"><operator pos:start="113:12" pos:end="113:12">(</operator><name pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:16">bmds</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:28">cur_sector</name></name> <operator pos:start="113:30" pos:end="113:31">&gt;=</operator> <name pos:start="113:33" pos:end="113:45">total_sectors</name><operator pos:start="113:46" pos:end="113:46">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
