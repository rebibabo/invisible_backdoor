<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4501.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">get_physical_address</name> <parameter_list pos:start="1:33" pos:end="5:69">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:45">CPUMIPSState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:58">hwaddr</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">physical</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:41"><decl pos:start="3:33" pos:end="3:41"><type pos:start="3:33" pos:end="3:41"><name pos:start="3:33" pos:end="3:35">int</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">prot</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:68"><decl pos:start="3:44" pos:end="3:68"><type pos:start="3:44" pos:end="3:68"><name pos:start="3:44" pos:end="3:55">target_ulong</name></type> <name pos:start="3:57" pos:end="3:68">real_address</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:38"><decl pos:start="5:33" pos:end="5:38"><type pos:start="5:33" pos:end="5:38"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:38">rw</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:55"><decl pos:start="5:41" pos:end="5:55"><type pos:start="5:41" pos:end="5:55"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:55">access_type</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:68"><decl pos:start="5:58" pos:end="5:68"><type pos:start="5:58" pos:end="5:68"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:68">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="229:1">{<block_content pos:start="11:5" pos:end="227:15">

    <comment type="block" pos:start="9:5" pos:end="9:46">/* User mode can only access useg/xuseg */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">user_mode</name> <init pos:start="11:19" pos:end="11:44">= <expr pos:start="11:21" pos:end="11:44"><name pos:start="11:21" pos:end="11:27">mmu_idx</name> <operator pos:start="11:29" pos:end="11:30">==</operator> <name pos:start="11:32" pos:end="11:44">MIPS_HFLAG_UM</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:23">supervisor_mode</name> <init pos:start="13:25" pos:end="13:50">= <expr pos:start="13:27" pos:end="13:50"><name pos:start="13:27" pos:end="13:33">mmu_idx</name> <operator pos:start="13:35" pos:end="13:36">==</operator> <name pos:start="13:38" pos:end="13:50">MIPS_HFLAG_SM</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">kernel_mode</name> <init pos:start="15:21" pos:end="15:52">= <expr pos:start="15:23" pos:end="15:52"><operator pos:start="15:23" pos:end="15:23">!</operator><name pos:start="15:24" pos:end="15:32">user_mode</name> <operator pos:start="15:34" pos:end="15:35">&amp;&amp;</operator> <operator pos:start="15:37" pos:end="15:37">!</operator><name pos:start="15:38" pos:end="15:52">supervisor_mode</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:26">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:26">(<argument pos:start="17:13" pos:end="17:25"><expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:10">UX</name> <init pos:start="19:12" pos:end="19:53">= <expr pos:start="19:14" pos:end="19:53"><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:29"><name pos:start="19:15" pos:end="19:17">env</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:29">CP0_Status</name></name> <operator pos:start="19:31" pos:end="19:31">&amp;</operator> <operator pos:start="19:33" pos:end="19:33">(</operator><literal type="number" pos:start="19:34" pos:end="19:34">1</literal> <operator pos:start="19:36" pos:end="19:37">&lt;&lt;</operator> <name pos:start="19:39" pos:end="19:46">CP0St_UX</name><operator pos:start="19:47" pos:end="19:47">)</operator><operator pos:start="19:48" pos:end="19:48">)</operator> <operator pos:start="19:50" pos:end="19:51">!=</operator> <literal type="number" pos:start="19:53" pos:end="19:53">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:54"><decl pos:start="21:5" pos:end="21:53"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:10">SX</name> <init pos:start="21:12" pos:end="21:53">= <expr pos:start="21:14" pos:end="21:53"><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:17">env</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:29">CP0_Status</name></name> <operator pos:start="21:31" pos:end="21:31">&amp;</operator> <operator pos:start="21:33" pos:end="21:33">(</operator><literal type="number" pos:start="21:34" pos:end="21:34">1</literal> <operator pos:start="21:36" pos:end="21:37">&lt;&lt;</operator> <name pos:start="21:39" pos:end="21:46">CP0St_SX</name><operator pos:start="21:47" pos:end="21:47">)</operator><operator pos:start="21:48" pos:end="21:48">)</operator> <operator pos:start="21:50" pos:end="21:51">!=</operator> <literal type="number" pos:start="21:53" pos:end="21:53">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="26:0"><decl pos:start="23:5" pos:end="23:53"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">KX</name> <init pos:start="23:12" pos:end="23:53">= <expr pos:start="23:14" pos:end="23:53"><operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:17">env</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:29">CP0_Status</name></name> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <operator pos:start="23:33" pos:end="23:33">(</operator><literal type="number" pos:start="23:34" pos:end="23:34">1</literal> <operator pos:start="23:36" pos:end="23:37">&lt;&lt;</operator> <name pos:start="23:39" pos:end="23:46">CP0St_KX</name><operator pos:start="23:47" pos:end="23:47">)</operator><operator pos:start="23:48" pos:end="23:48">)</operator> <operator pos:start="23:50" pos:end="23:51">!=</operator> <literal type="number" pos:start="23:53" pos:end="23:53">0</literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="27:5" pos:end="27:27"><decl pos:start="27:5" pos:end="27:26"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name> <init pos:start="27:13" pos:end="27:26">= <expr pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:26">TLBRET_MATCH</name></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:66">/* effective address (modified for KVM T&amp;E kernel segments) */</comment>

    <decl_stmt pos:start="31:5" pos:end="50:0"><decl pos:start="31:5" pos:end="31:39"><type pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:16">target_ulong</name></type> <name pos:start="31:18" pos:end="31:24">address</name> <init pos:start="31:26" pos:end="31:39">= <expr pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:39">real_address</name></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="35:1" pos:end="35:36">#<cpp:directive pos:start="35:2" pos:end="35:7">define</cpp:directive> <cpp:macro pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:18">USEG_LIMIT</name></cpp:macro>      <cpp:value pos:start="35:25" pos:end="35:36">0x7FFFFFFFUL</cpp:value></cpp:define>

<cpp:define pos:start="37:1" pos:end="37:36">#<cpp:directive pos:start="37:2" pos:end="37:7">define</cpp:directive> <cpp:macro pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:18">KSEG0_BASE</name></cpp:macro>      <cpp:value pos:start="37:25" pos:end="37:36">0x80000000UL</cpp:value></cpp:define>

<cpp:define pos:start="39:1" pos:end="39:36">#<cpp:directive pos:start="39:2" pos:end="39:7">define</cpp:directive> <cpp:macro pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:18">KSEG1_BASE</name></cpp:macro>      <cpp:value pos:start="39:25" pos:end="39:36">0xA0000000UL</cpp:value></cpp:define>

<cpp:define pos:start="41:1" pos:end="41:36">#<cpp:directive pos:start="41:2" pos:end="41:7">define</cpp:directive> <cpp:macro pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:18">KSEG2_BASE</name></cpp:macro>      <cpp:value pos:start="41:25" pos:end="41:36">0xC0000000UL</cpp:value></cpp:define>

<cpp:define pos:start="43:1" pos:end="43:36">#<cpp:directive pos:start="43:2" pos:end="43:7">define</cpp:directive> <cpp:macro pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:18">KSEG3_BASE</name></cpp:macro>      <cpp:value pos:start="43:25" pos:end="43:36">0xE0000000UL</cpp:value></cpp:define>



<cpp:define pos:start="47:1" pos:end="47:36">#<cpp:directive pos:start="47:2" pos:end="47:7">define</cpp:directive> <cpp:macro pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:22">KVM_KSEG0_BASE</name></cpp:macro>  <cpp:value pos:start="47:25" pos:end="47:36">0x40000000UL</cpp:value></cpp:define>

<cpp:define pos:start="49:1" pos:end="49:36">#<cpp:directive pos:start="49:2" pos:end="49:7">define</cpp:directive> <cpp:macro pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:22">KVM_KSEG2_BASE</name></cpp:macro>  <cpp:value pos:start="49:25" pos:end="49:36">0x60000000UL</cpp:value></cpp:define>



    <if_stmt pos:start="53:5" pos:end="75:5"><if pos:start="53:5" pos:end="75:5">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:19">kvm_enabled</name><argument_list pos:start="53:20" pos:end="53:21">()</argument_list></call></expr>)</condition> <block pos:start="53:24" pos:end="75:5">{<block_content pos:start="57:9" pos:end="73:9">

        <comment type="block" pos:start="55:9" pos:end="55:56">/* KVM T&amp;E adds guest kernel segments in useg */</comment>

        <if_stmt pos:start="57:9" pos:end="73:9"><if pos:start="57:9" pos:end="73:9">if <condition pos:start="57:12" pos:end="57:43">(<expr pos:start="57:13" pos:end="57:42"><name pos:start="57:13" pos:end="57:24">real_address</name> <operator pos:start="57:26" pos:end="57:27">&gt;=</operator> <name pos:start="57:29" pos:end="57:42">KVM_KSEG0_BASE</name></expr>)</condition> <block pos:start="57:45" pos:end="73:9">{<block_content pos:start="59:13" pos:end="71:13">

            <if_stmt pos:start="59:13" pos:end="71:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:46">(<expr pos:start="59:17" pos:end="59:45"><name pos:start="59:17" pos:end="59:28">real_address</name> <operator pos:start="59:30" pos:end="59:30">&lt;</operator> <name pos:start="59:32" pos:end="59:45">KVM_KSEG2_BASE</name></expr>)</condition> <block pos:start="59:48" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:55">

                <comment type="block" pos:start="61:17" pos:end="61:27">/* kseg0 */</comment>

                <expr_stmt pos:start="63:17" pos:end="63:55"><expr pos:start="63:17" pos:end="63:54"><name pos:start="63:17" pos:end="63:23">address</name> <operator pos:start="63:25" pos:end="63:26">+=</operator> <name pos:start="63:28" pos:end="63:37">KSEG0_BASE</name> <operator pos:start="63:39" pos:end="63:39">-</operator> <name pos:start="63:41" pos:end="63:54">KVM_KSEG0_BASE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="65:15" pos:end="71:13">else if <condition pos:start="65:23" pos:end="65:50">(<expr pos:start="65:24" pos:end="65:49"><name pos:start="65:24" pos:end="65:35">real_address</name> <operator pos:start="65:37" pos:end="65:38">&lt;=</operator> <name pos:start="65:40" pos:end="65:49">USEG_LIMIT</name></expr>)</condition> <block pos:start="65:52" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:55">

                <comment type="block" pos:start="67:17" pos:end="67:29">/* kseg2/3 */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:55"><expr pos:start="69:17" pos:end="69:54"><name pos:start="69:17" pos:end="69:23">address</name> <operator pos:start="69:25" pos:end="69:26">+=</operator> <name pos:start="69:28" pos:end="69:37">KSEG2_BASE</name> <operator pos:start="69:39" pos:end="69:39">-</operator> <name pos:start="69:41" pos:end="69:54">KVM_KSEG2_BASE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="225:5"><if pos:start="79:5" pos:end="97:5">if <condition pos:start="79:8" pos:end="79:30">(<expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:15">address</name> <operator pos:start="79:17" pos:end="79:18">&lt;=</operator> <name pos:start="79:20" pos:end="79:29">USEG_LIMIT</name></expr>)</condition> <block pos:start="79:32" pos:end="97:5">{<block_content pos:start="83:9" pos:end="96:0">

        <comment type="block" pos:start="81:9" pos:end="81:18">/* useg */</comment>

        <if_stmt pos:start="83:9" pos:end="96:0"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:47">(<expr pos:start="83:13" pos:end="83:46"><name pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:15">env</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:27">CP0_Status</name></name> <operator pos:start="83:29" pos:end="83:29">&amp;</operator> <operator pos:start="83:31" pos:end="83:31">(</operator><literal type="number" pos:start="83:32" pos:end="83:32">1</literal> <operator pos:start="83:34" pos:end="83:35">&lt;&lt;</operator> <name pos:start="83:37" pos:end="83:45">CP0St_ERL</name><operator pos:start="83:46" pos:end="83:46">)</operator></expr>)</condition> <block pos:start="83:49" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:43">

            <expr_stmt pos:start="85:13" pos:end="85:45"><expr pos:start="85:13" pos:end="85:44"><operator pos:start="85:13" pos:end="85:13">*</operator><name pos:start="85:14" pos:end="85:21">physical</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <name pos:start="85:25" pos:end="85:31">address</name> <operator pos:start="85:33" pos:end="85:33">&amp;</operator> <literal type="number" pos:start="85:35" pos:end="85:44">0xFFFFFFFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><operator pos:start="87:13" pos:end="87:13">*</operator><name pos:start="87:14" pos:end="87:17">prot</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:29">PAGE_READ</name> <operator pos:start="87:31" pos:end="87:31">|</operator> <name pos:start="87:33" pos:end="87:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="96:0">else <block pos:start="89:16" pos:end="96:0">{<block_content pos:start="91:13" pos:end="91:92">

            <expr_stmt pos:start="91:13" pos:end="91:92"><expr pos:start="91:13" pos:end="91:91"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:91"><name pos:start="91:19" pos:end="91:39"><name pos:start="91:19" pos:end="91:21">env</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:26">tlb</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:39">map_address</name></name><argument_list pos:start="91:40" pos:end="91:91">(<argument pos:start="91:41" pos:end="91:43"><expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:43">env</name></expr></argument>, <argument pos:start="91:46" pos:end="91:53"><expr pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:53">physical</name></expr></argument>, <argument pos:start="91:56" pos:end="91:59"><expr pos:start="91:56" pos:end="91:59"><name pos:start="91:56" pos:end="91:59">prot</name></expr></argument>, <argument pos:start="91:62" pos:end="91:73"><expr pos:start="91:62" pos:end="91:73"><name pos:start="91:62" pos:end="91:73">real_address</name></expr></argument>, <argument pos:start="91:76" pos:end="91:77"><expr pos:start="91:76" pos:end="91:77"><name pos:start="91:76" pos:end="91:77">rw</name></expr></argument>, <argument pos:start="91:80" pos:end="91:90"><expr pos:start="91:80" pos:end="91:90"><name pos:start="91:80" pos:end="91:90">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="95:1" pos:end="95:26">#<cpp:directive pos:start="95:2" pos:end="95:3">if</cpp:directive> <expr pos:start="95:5" pos:end="95:26"><call pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:11">defined</name><argument_list pos:start="95:12" pos:end="95:26">(<argument pos:start="95:13" pos:end="95:25"><expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="111:5">else if <condition pos:start="97:15" pos:end="97:47">(<expr pos:start="97:16" pos:end="97:46"><name pos:start="97:16" pos:end="97:22">address</name> <operator pos:start="97:24" pos:end="97:24">&lt;</operator> <literal type="number" pos:start="97:26" pos:end="97:46">0x4000000000000000ULL</literal></expr>)</condition> <block pos:start="97:49" pos:end="111:5">{<block_content pos:start="101:9" pos:end="109:9">

        <comment type="block" pos:start="99:9" pos:end="99:19">/* xuseg */</comment>

        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:68">(<expr pos:start="101:13" pos:end="101:67"><name pos:start="101:13" pos:end="101:14">UX</name> <operator pos:start="101:16" pos:end="101:17">&amp;&amp;</operator> <name pos:start="101:19" pos:end="101:25">address</name> <operator pos:start="101:27" pos:end="101:28">&lt;=</operator> <operator pos:start="101:30" pos:end="101:30">(</operator><literal type="number" pos:start="101:31" pos:end="101:51">0x3FFFFFFFFFFFFFFFULL</literal> <operator pos:start="101:53" pos:end="101:53">&amp;</operator> <name pos:start="101:55" pos:end="101:66"><name pos:start="101:55" pos:end="101:57">env</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:66">SEGMask</name></name><operator pos:start="101:67" pos:end="101:67">)</operator></expr>)</condition> <block pos:start="101:70" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:92">

            <expr_stmt pos:start="103:13" pos:end="103:92"><expr pos:start="103:13" pos:end="103:91"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:91"><name pos:start="103:19" pos:end="103:39"><name pos:start="103:19" pos:end="103:21">env</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:26">tlb</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:39">map_address</name></name><argument_list pos:start="103:40" pos:end="103:91">(<argument pos:start="103:41" pos:end="103:43"><expr pos:start="103:41" pos:end="103:43"><name pos:start="103:41" pos:end="103:43">env</name></expr></argument>, <argument pos:start="103:46" pos:end="103:53"><expr pos:start="103:46" pos:end="103:53"><name pos:start="103:46" pos:end="103:53">physical</name></expr></argument>, <argument pos:start="103:56" pos:end="103:59"><expr pos:start="103:56" pos:end="103:59"><name pos:start="103:56" pos:end="103:59">prot</name></expr></argument>, <argument pos:start="103:62" pos:end="103:73"><expr pos:start="103:62" pos:end="103:73"><name pos:start="103:62" pos:end="103:73">real_address</name></expr></argument>, <argument pos:start="103:76" pos:end="103:77"><expr pos:start="103:76" pos:end="103:77"><name pos:start="103:76" pos:end="103:77">rw</name></expr></argument>, <argument pos:start="103:80" pos:end="103:90"><expr pos:start="103:80" pos:end="103:90"><name pos:start="103:80" pos:end="103:90">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="109:9">else <block pos:start="105:16" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:33">

            <expr_stmt pos:start="107:13" pos:end="107:33"><expr pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="111:7" pos:end="127:5">else if <condition pos:start="111:15" pos:end="111:47">(<expr pos:start="111:16" pos:end="111:46"><name pos:start="111:16" pos:end="111:22">address</name> <operator pos:start="111:24" pos:end="111:24">&lt;</operator> <literal type="number" pos:start="111:26" pos:end="111:46">0x8000000000000000ULL</literal></expr>)</condition> <block pos:start="111:49" pos:end="127:5">{<block_content pos:start="115:9" pos:end="125:9">

        <comment type="block" pos:start="113:9" pos:end="113:19">/* xsseg */</comment>

        <if_stmt pos:start="115:9" pos:end="125:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="117:68">(<expr pos:start="115:13" pos:end="117:67"><operator pos:start="115:13" pos:end="115:13">(</operator><name pos:start="115:14" pos:end="115:28">supervisor_mode</name> <operator pos:start="115:30" pos:end="115:31">||</operator> <name pos:start="115:33" pos:end="115:43">kernel_mode</name><operator pos:start="115:44" pos:end="115:44">)</operator> <operator pos:start="115:46" pos:end="115:47">&amp;&amp;</operator>

            <name pos:start="117:13" pos:end="117:14">SX</name> <operator pos:start="117:16" pos:end="117:17">&amp;&amp;</operator> <name pos:start="117:19" pos:end="117:25">address</name> <operator pos:start="117:27" pos:end="117:28">&lt;=</operator> <operator pos:start="117:30" pos:end="117:30">(</operator><literal type="number" pos:start="117:31" pos:end="117:51">0x7FFFFFFFFFFFFFFFULL</literal> <operator pos:start="117:53" pos:end="117:53">&amp;</operator> <name pos:start="117:55" pos:end="117:66"><name pos:start="117:55" pos:end="117:57">env</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:66">SEGMask</name></name><operator pos:start="117:67" pos:end="117:67">)</operator></expr>)</condition> <block pos:start="117:70" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:92">

            <expr_stmt pos:start="119:13" pos:end="119:92"><expr pos:start="119:13" pos:end="119:91"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:91"><name pos:start="119:19" pos:end="119:39"><name pos:start="119:19" pos:end="119:21">env</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:26">tlb</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:39">map_address</name></name><argument_list pos:start="119:40" pos:end="119:91">(<argument pos:start="119:41" pos:end="119:43"><expr pos:start="119:41" pos:end="119:43"><name pos:start="119:41" pos:end="119:43">env</name></expr></argument>, <argument pos:start="119:46" pos:end="119:53"><expr pos:start="119:46" pos:end="119:53"><name pos:start="119:46" pos:end="119:53">physical</name></expr></argument>, <argument pos:start="119:56" pos:end="119:59"><expr pos:start="119:56" pos:end="119:59"><name pos:start="119:56" pos:end="119:59">prot</name></expr></argument>, <argument pos:start="119:62" pos:end="119:73"><expr pos:start="119:62" pos:end="119:73"><name pos:start="119:62" pos:end="119:73">real_address</name></expr></argument>, <argument pos:start="119:76" pos:end="119:77"><expr pos:start="119:76" pos:end="119:77"><name pos:start="119:76" pos:end="119:77">rw</name></expr></argument>, <argument pos:start="119:80" pos:end="119:90"><expr pos:start="119:80" pos:end="119:90"><name pos:start="119:80" pos:end="119:90">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:33">

            <expr_stmt pos:start="123:13" pos:end="123:33"><expr pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <name pos:start="123:19" pos:end="123:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="127:7" pos:end="145:5">else if <condition pos:start="127:15" pos:end="127:47">(<expr pos:start="127:16" pos:end="127:46"><name pos:start="127:16" pos:end="127:22">address</name> <operator pos:start="127:24" pos:end="127:24">&lt;</operator> <literal type="number" pos:start="127:26" pos:end="127:46">0xC000000000000000ULL</literal></expr>)</condition> <block pos:start="127:49" pos:end="145:5">{<block_content pos:start="131:9" pos:end="143:9">

        <comment type="block" pos:start="129:9" pos:end="129:20">/* xkphys */</comment>

        <if_stmt pos:start="131:9" pos:end="143:9"><if pos:start="131:9" pos:end="139:9">if <condition pos:start="131:12" pos:end="133:61">(<expr pos:start="131:13" pos:end="133:60"><name pos:start="131:13" pos:end="131:23">kernel_mode</name> <operator pos:start="131:25" pos:end="131:26">&amp;&amp;</operator> <name pos:start="131:28" pos:end="131:29">KX</name> <operator pos:start="131:31" pos:end="131:32">&amp;&amp;</operator>

            <operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:20">address</name> <operator pos:start="133:22" pos:end="133:22">&amp;</operator> <literal type="number" pos:start="133:24" pos:end="133:44">0x07FFFFFFFFFFFFFFULL</literal><operator pos:start="133:45" pos:end="133:45">)</operator> <operator pos:start="133:47" pos:end="133:48">&lt;=</operator> <name pos:start="133:50" pos:end="133:60"><name pos:start="133:50" pos:end="133:52">env</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:60">PAMask</name></name></expr>)</condition> <block pos:start="133:63" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:43">

            <expr_stmt pos:start="135:13" pos:end="135:46"><expr pos:start="135:13" pos:end="135:45"><operator pos:start="135:13" pos:end="135:13">*</operator><name pos:start="135:14" pos:end="135:21">physical</name> <operator pos:start="135:23" pos:end="135:23">=</operator> <name pos:start="135:25" pos:end="135:31">address</name> <operator pos:start="135:33" pos:end="135:33">&amp;</operator> <name pos:start="135:35" pos:end="135:45"><name pos:start="135:35" pos:end="135:37">env</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:45">PAMask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:43"><expr pos:start="137:13" pos:end="137:42"><operator pos:start="137:13" pos:end="137:13">*</operator><name pos:start="137:14" pos:end="137:17">prot</name> <operator pos:start="137:19" pos:end="137:19">=</operator> <name pos:start="137:21" pos:end="137:29">PAGE_READ</name> <operator pos:start="137:31" pos:end="137:31">|</operator> <name pos:start="137:33" pos:end="137:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="143:9">else <block pos:start="139:16" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:33">

            <expr_stmt pos:start="141:13" pos:end="141:33"><expr pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="145:7" pos:end="163:5">else if <condition pos:start="145:15" pos:end="145:47">(<expr pos:start="145:16" pos:end="145:46"><name pos:start="145:16" pos:end="145:22">address</name> <operator pos:start="145:24" pos:end="145:24">&lt;</operator> <literal type="number" pos:start="145:26" pos:end="145:46">0xFFFFFFFF80000000ULL</literal></expr>)</condition> <block pos:start="145:49" pos:end="163:5">{<block_content pos:start="149:9" pos:end="162:0">

        <comment type="block" pos:start="147:9" pos:end="147:19">/* xkseg */</comment>

        <if_stmt pos:start="149:9" pos:end="162:0"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="151:62">(<expr pos:start="149:13" pos:end="151:61"><name pos:start="149:13" pos:end="149:23">kernel_mode</name> <operator pos:start="149:25" pos:end="149:26">&amp;&amp;</operator> <name pos:start="149:28" pos:end="149:29">KX</name> <operator pos:start="149:31" pos:end="149:32">&amp;&amp;</operator>

            <name pos:start="151:13" pos:end="151:19">address</name> <operator pos:start="151:21" pos:end="151:22">&lt;=</operator> <operator pos:start="151:24" pos:end="151:24">(</operator><literal type="number" pos:start="151:25" pos:end="151:45">0xFFFFFFFF7FFFFFFFULL</literal> <operator pos:start="151:47" pos:end="151:47">&amp;</operator> <name pos:start="151:49" pos:end="151:60"><name pos:start="151:49" pos:end="151:51">env</name><operator pos:start="151:52" pos:end="151:53">-&gt;</operator><name pos:start="151:54" pos:end="151:60">SEGMask</name></name><operator pos:start="151:61" pos:end="151:61">)</operator></expr>)</condition> <block pos:start="151:64" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:92">

            <expr_stmt pos:start="153:13" pos:end="153:92"><expr pos:start="153:13" pos:end="153:91"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <call pos:start="153:19" pos:end="153:91"><name pos:start="153:19" pos:end="153:39"><name pos:start="153:19" pos:end="153:21">env</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:26">tlb</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:39">map_address</name></name><argument_list pos:start="153:40" pos:end="153:91">(<argument pos:start="153:41" pos:end="153:43"><expr pos:start="153:41" pos:end="153:43"><name pos:start="153:41" pos:end="153:43">env</name></expr></argument>, <argument pos:start="153:46" pos:end="153:53"><expr pos:start="153:46" pos:end="153:53"><name pos:start="153:46" pos:end="153:53">physical</name></expr></argument>, <argument pos:start="153:56" pos:end="153:59"><expr pos:start="153:56" pos:end="153:59"><name pos:start="153:56" pos:end="153:59">prot</name></expr></argument>, <argument pos:start="153:62" pos:end="153:73"><expr pos:start="153:62" pos:end="153:73"><name pos:start="153:62" pos:end="153:73">real_address</name></expr></argument>, <argument pos:start="153:76" pos:end="153:77"><expr pos:start="153:76" pos:end="153:77"><name pos:start="153:76" pos:end="153:77">rw</name></expr></argument>, <argument pos:start="153:80" pos:end="153:90"><expr pos:start="153:80" pos:end="153:90"><name pos:start="153:80" pos:end="153:90">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="162:0">else <block pos:start="155:16" pos:end="162:0">{<block_content pos:start="157:13" pos:end="157:33">

            <expr_stmt pos:start="157:13" pos:end="157:33"><expr pos:start="157:13" pos:end="157:32"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <name pos:start="157:19" pos:end="157:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="161:1" pos:end="161:6">#<cpp:directive pos:start="161:2" pos:end="161:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <if type="elseif" pos:start="163:7" pos:end="179:5">else if <condition pos:start="163:15" pos:end="163:45">(<expr pos:start="163:16" pos:end="163:44"><name pos:start="163:16" pos:end="163:22">address</name> <operator pos:start="163:24" pos:end="163:24">&lt;</operator> <operator pos:start="163:26" pos:end="163:26">(</operator><name pos:start="163:27" pos:end="163:33">int32_t</name><operator pos:start="163:34" pos:end="163:34">)</operator><name pos:start="163:35" pos:end="163:44">KSEG1_BASE</name></expr>)</condition> <block pos:start="163:47" pos:end="179:5">{<block_content pos:start="167:9" pos:end="177:9">

        <comment type="block" pos:start="165:9" pos:end="165:19">/* kseg0 */</comment>

        <if_stmt pos:start="167:9" pos:end="177:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:24">(<expr pos:start="167:13" pos:end="167:23"><name pos:start="167:13" pos:end="167:23">kernel_mode</name></expr>)</condition> <block pos:start="167:26" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:43">

            <expr_stmt pos:start="169:13" pos:end="169:54"><expr pos:start="169:13" pos:end="169:53"><operator pos:start="169:13" pos:end="169:13">*</operator><name pos:start="169:14" pos:end="169:21">physical</name> <operator pos:start="169:23" pos:end="169:23">=</operator> <name pos:start="169:25" pos:end="169:31">address</name> <operator pos:start="169:33" pos:end="169:33">-</operator> <operator pos:start="169:35" pos:end="169:35">(</operator><name pos:start="169:36" pos:end="169:42">int32_t</name><operator pos:start="169:43" pos:end="169:43">)</operator><name pos:start="169:44" pos:end="169:53">KSEG0_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:43"><expr pos:start="171:13" pos:end="171:42"><operator pos:start="171:13" pos:end="171:13">*</operator><name pos:start="171:14" pos:end="171:17">prot</name> <operator pos:start="171:19" pos:end="171:19">=</operator> <name pos:start="171:21" pos:end="171:29">PAGE_READ</name> <operator pos:start="171:31" pos:end="171:31">|</operator> <name pos:start="171:33" pos:end="171:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="173:11" pos:end="177:9">else <block pos:start="173:16" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:33">

            <expr_stmt pos:start="175:13" pos:end="175:33"><expr pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="179:7" pos:end="195:5">else if <condition pos:start="179:15" pos:end="179:45">(<expr pos:start="179:16" pos:end="179:44"><name pos:start="179:16" pos:end="179:22">address</name> <operator pos:start="179:24" pos:end="179:24">&lt;</operator> <operator pos:start="179:26" pos:end="179:26">(</operator><name pos:start="179:27" pos:end="179:33">int32_t</name><operator pos:start="179:34" pos:end="179:34">)</operator><name pos:start="179:35" pos:end="179:44">KSEG2_BASE</name></expr>)</condition> <block pos:start="179:47" pos:end="195:5">{<block_content pos:start="183:9" pos:end="193:9">

        <comment type="block" pos:start="181:9" pos:end="181:19">/* kseg1 */</comment>

        <if_stmt pos:start="183:9" pos:end="193:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:24">(<expr pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:23">kernel_mode</name></expr>)</condition> <block pos:start="183:26" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:43">

            <expr_stmt pos:start="185:13" pos:end="185:54"><expr pos:start="185:13" pos:end="185:53"><operator pos:start="185:13" pos:end="185:13">*</operator><name pos:start="185:14" pos:end="185:21">physical</name> <operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:31">address</name> <operator pos:start="185:33" pos:end="185:33">-</operator> <operator pos:start="185:35" pos:end="185:35">(</operator><name pos:start="185:36" pos:end="185:42">int32_t</name><operator pos:start="185:43" pos:end="185:43">)</operator><name pos:start="185:44" pos:end="185:53">KSEG1_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:43"><expr pos:start="187:13" pos:end="187:42"><operator pos:start="187:13" pos:end="187:13">*</operator><name pos:start="187:14" pos:end="187:17">prot</name> <operator pos:start="187:19" pos:end="187:19">=</operator> <name pos:start="187:21" pos:end="187:29">PAGE_READ</name> <operator pos:start="187:31" pos:end="187:31">|</operator> <name pos:start="187:33" pos:end="187:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="189:11" pos:end="193:9">else <block pos:start="189:16" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:33">

            <expr_stmt pos:start="191:13" pos:end="191:33"><expr pos:start="191:13" pos:end="191:32"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <name pos:start="191:19" pos:end="191:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="195:7" pos:end="209:5">else if <condition pos:start="195:15" pos:end="195:45">(<expr pos:start="195:16" pos:end="195:44"><name pos:start="195:16" pos:end="195:22">address</name> <operator pos:start="195:24" pos:end="195:24">&lt;</operator> <operator pos:start="195:26" pos:end="195:26">(</operator><name pos:start="195:27" pos:end="195:33">int32_t</name><operator pos:start="195:34" pos:end="195:34">)</operator><name pos:start="195:35" pos:end="195:44">KSEG3_BASE</name></expr>)</condition> <block pos:start="195:47" pos:end="209:5">{<block_content pos:start="199:9" pos:end="207:9">

        <comment type="block" pos:start="197:9" pos:end="197:26">/* sseg (kseg2) */</comment>

        <if_stmt pos:start="199:9" pos:end="207:9"><if pos:start="199:9" pos:end="203:9">if <condition pos:start="199:12" pos:end="199:43">(<expr pos:start="199:13" pos:end="199:42"><name pos:start="199:13" pos:end="199:27">supervisor_mode</name> <operator pos:start="199:29" pos:end="199:30">||</operator> <name pos:start="199:32" pos:end="199:42">kernel_mode</name></expr>)</condition> <block pos:start="199:45" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:92">

            <expr_stmt pos:start="201:13" pos:end="201:92"><expr pos:start="201:13" pos:end="201:91"><name pos:start="201:13" pos:end="201:15">ret</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <call pos:start="201:19" pos:end="201:91"><name pos:start="201:19" pos:end="201:39"><name pos:start="201:19" pos:end="201:21">env</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:26">tlb</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:39">map_address</name></name><argument_list pos:start="201:40" pos:end="201:91">(<argument pos:start="201:41" pos:end="201:43"><expr pos:start="201:41" pos:end="201:43"><name pos:start="201:41" pos:end="201:43">env</name></expr></argument>, <argument pos:start="201:46" pos:end="201:53"><expr pos:start="201:46" pos:end="201:53"><name pos:start="201:46" pos:end="201:53">physical</name></expr></argument>, <argument pos:start="201:56" pos:end="201:59"><expr pos:start="201:56" pos:end="201:59"><name pos:start="201:56" pos:end="201:59">prot</name></expr></argument>, <argument pos:start="201:62" pos:end="201:73"><expr pos:start="201:62" pos:end="201:73"><name pos:start="201:62" pos:end="201:73">real_address</name></expr></argument>, <argument pos:start="201:76" pos:end="201:77"><expr pos:start="201:76" pos:end="201:77"><name pos:start="201:76" pos:end="201:77">rw</name></expr></argument>, <argument pos:start="201:80" pos:end="201:90"><expr pos:start="201:80" pos:end="201:90"><name pos:start="201:80" pos:end="201:90">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="207:9">else <block pos:start="203:16" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:33">

            <expr_stmt pos:start="205:13" pos:end="205:33"><expr pos:start="205:13" pos:end="205:32"><name pos:start="205:13" pos:end="205:15">ret</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <name pos:start="205:19" pos:end="205:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="225:5">else <block pos:start="209:12" pos:end="225:5">{<block_content pos:start="215:9" pos:end="223:9">

        <comment type="block" pos:start="211:9" pos:end="211:19">/* kseg3 */</comment>

        <comment type="block" pos:start="213:9" pos:end="213:48">/* XXX: debug segment is not emulated */</comment>

        <if_stmt pos:start="215:9" pos:end="223:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:24">(<expr pos:start="215:13" pos:end="215:23"><name pos:start="215:13" pos:end="215:23">kernel_mode</name></expr>)</condition> <block pos:start="215:26" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:92">

            <expr_stmt pos:start="217:13" pos:end="217:92"><expr pos:start="217:13" pos:end="217:91"><name pos:start="217:13" pos:end="217:15">ret</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <call pos:start="217:19" pos:end="217:91"><name pos:start="217:19" pos:end="217:39"><name pos:start="217:19" pos:end="217:21">env</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:26">tlb</name><operator pos:start="217:27" pos:end="217:28">-&gt;</operator><name pos:start="217:29" pos:end="217:39">map_address</name></name><argument_list pos:start="217:40" pos:end="217:91">(<argument pos:start="217:41" pos:end="217:43"><expr pos:start="217:41" pos:end="217:43"><name pos:start="217:41" pos:end="217:43">env</name></expr></argument>, <argument pos:start="217:46" pos:end="217:53"><expr pos:start="217:46" pos:end="217:53"><name pos:start="217:46" pos:end="217:53">physical</name></expr></argument>, <argument pos:start="217:56" pos:end="217:59"><expr pos:start="217:56" pos:end="217:59"><name pos:start="217:56" pos:end="217:59">prot</name></expr></argument>, <argument pos:start="217:62" pos:end="217:73"><expr pos:start="217:62" pos:end="217:73"><name pos:start="217:62" pos:end="217:73">real_address</name></expr></argument>, <argument pos:start="217:76" pos:end="217:77"><expr pos:start="217:76" pos:end="217:77"><name pos:start="217:76" pos:end="217:77">rw</name></expr></argument>, <argument pos:start="217:80" pos:end="217:90"><expr pos:start="217:80" pos:end="217:90"><name pos:start="217:80" pos:end="217:90">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="219:11" pos:end="223:9">else <block pos:start="219:16" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:33">

            <expr_stmt pos:start="221:13" pos:end="221:33"><expr pos:start="221:13" pos:end="221:32"><name pos:start="221:13" pos:end="221:15">ret</name> <operator pos:start="221:17" pos:end="221:17">=</operator> <name pos:start="221:19" pos:end="221:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="227:5" pos:end="227:15">return <expr pos:start="227:12" pos:end="227:14"><name pos:start="227:12" pos:end="227:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
