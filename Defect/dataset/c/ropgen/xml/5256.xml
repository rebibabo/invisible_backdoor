<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5256.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">xvid_strip_vol_header</name><parameter_list pos:start="1:33" pos:end="5:56">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">AVPacket</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">pkt</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:56"><decl pos:start="3:34" pos:end="3:56"><type pos:start="3:34" pos:end="3:56"><name pos:start="3:34" pos:end="3:41">unsigned</name> <name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:56">header_len</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:55"><decl pos:start="5:34" pos:end="5:55"><type pos:start="5:34" pos:end="5:55"><name pos:start="5:34" pos:end="5:41">unsigned</name> <name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:55">frame_len</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="61:1">{<block_content pos:start="9:5" pos:end="59:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">vo_len</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="29:5">for <control pos:start="13:9" pos:end="13:40">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:35"><expr pos:start="13:17" pos:end="13:34"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:30">header_len</name> <operator pos:start="13:32" pos:end="13:32">-</operator> <literal type="number" pos:start="13:34" pos:end="13:34">3</literal></expr>;</condition> <incr pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:37">i</name><operator pos:start="13:38" pos:end="13:39">++</operator></expr></incr>)</control> <block pos:start="13:42" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:9">

        <if_stmt pos:start="15:9" pos:end="27:9"><if pos:start="15:9" pos:end="27:9">if <condition pos:start="15:12" pos:end="21:37">(<expr pos:start="15:13" pos:end="21:36"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:15">pkt</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">data</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">i</name></expr>]</index></name>     <operator pos:start="15:30" pos:end="15:31">==</operator> <literal type="number" pos:start="15:33" pos:end="15:36">0x00</literal> <operator pos:start="15:38" pos:end="15:39">&amp;&amp;</operator>

            <name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:15">pkt</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">data</name><index pos:start="17:22" pos:end="17:28">[<expr pos:start="17:23" pos:end="17:27"><name pos:start="17:23" pos:end="17:23">i</name> <operator pos:start="17:25" pos:end="17:25">+</operator> <literal type="number" pos:start="17:27" pos:end="17:27">1</literal></expr>]</index></name> <operator pos:start="17:30" pos:end="17:31">==</operator> <literal type="number" pos:start="17:33" pos:end="17:36">0x00</literal> <operator pos:start="17:38" pos:end="17:39">&amp;&amp;</operator>

            <name pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:15">pkt</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:21">data</name><index pos:start="19:22" pos:end="19:28">[<expr pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:23">i</name> <operator pos:start="19:25" pos:end="19:25">+</operator> <literal type="number" pos:start="19:27" pos:end="19:27">2</literal></expr>]</index></name> <operator pos:start="19:30" pos:end="19:31">==</operator> <literal type="number" pos:start="19:33" pos:end="19:36">0x01</literal> <operator pos:start="19:38" pos:end="19:39">&amp;&amp;</operator>

            <name pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:15">pkt</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">data</name><index pos:start="21:22" pos:end="21:28">[<expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">i</name> <operator pos:start="21:25" pos:end="21:25">+</operator> <literal type="number" pos:start="21:27" pos:end="21:27">3</literal></expr>]</index></name> <operator pos:start="21:30" pos:end="21:31">==</operator> <literal type="number" pos:start="21:33" pos:end="21:36">0xB6</literal></expr>)</condition> <block pos:start="21:39" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:18">

            <expr_stmt pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:18">vo_len</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:22">i</name></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="57:5"><if pos:start="33:5" pos:end="57:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:14">vo_len</name> <operator pos:start="33:16" pos:end="33:16">&gt;</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>)</condition> <block pos:start="33:21" pos:end="57:5">{<block_content pos:start="37:9" pos:end="55:39">

        <comment type="block" pos:start="35:9" pos:end="35:56">/* We need to store the header, so extract it */</comment>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:30">(<expr pos:start="37:13" pos:end="37:29"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:29"><name pos:start="37:14" pos:end="37:18">avctx</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:29">extradata</name></name></expr>)</condition> <block pos:start="37:32" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:43">

            <expr_stmt pos:start="39:13" pos:end="39:49"><expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:17">avctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:28">extradata</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <call pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:40">av_malloc</name><argument_list pos:start="39:41" pos:end="39:48">(<argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47">vo_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:56"><expr pos:start="43:13" pos:end="43:55"><call pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:18">memcpy</name><argument_list pos:start="43:19" pos:end="43:55">(<argument pos:start="43:20" pos:end="43:35"><expr pos:start="43:20" pos:end="43:35"><name pos:start="43:20" pos:end="43:35"><name pos:start="43:20" pos:end="43:24">avctx</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:35">extradata</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:46"><expr pos:start="43:38" pos:end="43:46"><name pos:start="43:38" pos:end="43:46"><name pos:start="43:38" pos:end="43:40">pkt</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:46">data</name></name></expr></argument>, <argument pos:start="43:49" pos:end="43:54"><expr pos:start="43:49" pos:end="43:54"><name pos:start="43:49" pos:end="43:54">vo_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:33">extradata_size</name></name> <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:42">vo_len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="49:9" pos:end="51:40">/* Less dangerous now, memmove properly copies the two

         * chunks of overlapping data */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:67"><expr pos:start="53:9" pos:end="53:66"><call pos:start="53:9" pos:end="53:66"><name pos:start="53:9" pos:end="53:15">memmove</name><argument_list pos:start="53:16" pos:end="53:66">(<argument pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:19">pkt</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">data</name></name></expr></argument>, <argument pos:start="53:28" pos:end="53:45"><expr pos:start="53:28" pos:end="53:45"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:45"><name pos:start="53:29" pos:end="53:31">pkt</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:37">data</name><index pos:start="53:38" pos:end="53:45">[<expr pos:start="53:39" pos:end="53:44"><name pos:start="53:39" pos:end="53:44">vo_len</name></expr>]</index></name></expr></argument>, <argument pos:start="53:48" pos:end="53:65"><expr pos:start="53:48" pos:end="53:65"><name pos:start="53:48" pos:end="53:56">frame_len</name> <operator pos:start="53:58" pos:end="53:58">-</operator> <name pos:start="53:60" pos:end="53:65">vo_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">size</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:29">frame_len</name> <operator pos:start="55:31" pos:end="55:31">-</operator> <name pos:start="55:33" pos:end="55:38">vo_len</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
