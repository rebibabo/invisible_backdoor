<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22585.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">aasc_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:46">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,
                              <parameter pos:start="2:31" pos:end="2:40"><decl pos:start="2:31" pos:end="2:40"><type pos:start="2:31" pos:end="2:40"><name pos:start="2:31" pos:end="2:34">void</name> <modifier pos:start="2:36" pos:end="2:36">*</modifier></type><name pos:start="2:37" pos:end="2:40">data</name></decl></parameter>, <parameter pos:start="2:43" pos:end="2:56"><decl pos:start="2:43" pos:end="2:56"><type pos:start="2:43" pos:end="2:56"><name pos:start="2:43" pos:end="2:45">int</name> <modifier pos:start="2:47" pos:end="2:47">*</modifier></type><name pos:start="2:48" pos:end="2:56">got_frame</name></decl></parameter>,
                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:38">AVPacket</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:45">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="36:20">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:37"><decl pos:start="6:5" pos:end="6:36"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name>       <init pos:start="6:24" pos:end="6:36">= <expr pos:start="6:26" pos:end="6:36"><name pos:start="6:26" pos:end="6:36"><name pos:start="6:26" pos:end="6:30">avpkt</name><operator pos:start="6:31" pos:end="6:32">-&gt;</operator><name pos:start="6:33" pos:end="6:36">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AascContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name>     <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:30"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:13">compr</name></decl>, <decl pos:start="8:16" pos:end="8:16"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:16" pos:end="8:16">i</name></decl>, <decl pos:start="8:19" pos:end="8:24"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:19" pos:end="8:24">stride</name></decl>, <decl pos:start="8:27" pos:end="8:29"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:27" pos:end="8:29">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:53">(<expr pos:start="9:9" pos:end="9:52"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:12">ret</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:47"><name pos:start="9:16" pos:end="9:30">ff_reget_buffer</name><argument_list pos:start="9:31" pos:end="9:47">(<argument pos:start="9:32" pos:end="9:36"><expr pos:start="9:32" pos:end="9:36"><name pos:start="9:32" pos:end="9:36">avctx</name></expr></argument>, <argument pos:start="9:39" pos:end="9:46"><expr pos:start="9:39" pos:end="9:46"><name pos:start="9:39" pos:end="9:46"><name pos:start="9:39" pos:end="9:39">s</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:46">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="9:48" pos:end="9:48">)</operator> <operator pos:start="9:50" pos:end="9:50">&lt;</operator> <literal type="number" pos:start="9:52" pos:end="9:52">0</literal></expr>)</condition> <block pos:start="9:55" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:19">
        <expr_stmt pos:start="10:9" pos:end="10:63"><expr pos:start="10:9" pos:end="10:62"><call pos:start="10:9" pos:end="10:62"><name pos:start="10:9" pos:end="10:14">av_log</name><argument_list pos:start="10:15" pos:end="10:62">(<argument pos:start="10:16" pos:end="10:20"><expr pos:start="10:16" pos:end="10:20"><name pos:start="10:16" pos:end="10:20">avctx</name></expr></argument>, <argument pos:start="10:23" pos:end="10:34"><expr pos:start="10:23" pos:end="10:34"><name pos:start="10:23" pos:end="10:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="10:37" pos:end="10:61"><expr pos:start="10:37" pos:end="10:61"><literal type="string" pos:start="10:37" pos:end="10:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:19">return <expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">ret</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:9">compr</name>     <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:28"><name pos:start="13:17" pos:end="13:23">AV_RL32</name><argument_list pos:start="13:24" pos:end="13:28">(<argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:18"><expr pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:7">buf</name>      <operator pos:start="14:14" pos:end="14:15">+=</operator> <literal type="number" pos:start="14:17" pos:end="14:17">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:18"><expr pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">buf_size</name> <operator pos:start="15:14" pos:end="15:15">-=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">4</literal></expr>;</expr_stmt>
    <switch pos:start="16:5" pos:end="31:5">switch <condition pos:start="16:12" pos:end="16:18">(<expr pos:start="16:13" pos:end="16:17"><name pos:start="16:13" pos:end="16:17">compr</name></expr>)</condition> <block pos:start="16:20" pos:end="31:5">{<block_content pos:start="17:5" pos:end="30:76">
    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>
        <expr_stmt pos:start="18:9" pos:end="18:45"><expr pos:start="18:9" pos:end="18:44"><name pos:start="18:9" pos:end="18:14">stride</name> <operator pos:start="18:16" pos:end="18:16">=</operator> <operator pos:start="18:18" pos:end="18:18">(</operator><name pos:start="18:19" pos:end="18:30"><name pos:start="18:19" pos:end="18:23">avctx</name><operator pos:start="18:24" pos:end="18:25">-&gt;</operator><name pos:start="18:26" pos:end="18:30">width</name></name> <operator pos:start="18:32" pos:end="18:32">*</operator> <literal type="number" pos:start="18:34" pos:end="18:36">3</literal> <operator pos:start="18:36" pos:end="18:36">+</operator> <literal type="number" pos:start="18:38" pos:end="18:38">3</literal><operator pos:start="18:39" pos:end="18:39">)</operator> <operator pos:start="18:41" pos:end="18:41">&amp;</operator> <operator pos:start="18:43" pos:end="18:43">~</operator><literal type="number" pos:start="18:44" pos:end="18:44">3</literal></expr>;</expr_stmt>
        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:46">(<expr pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:20">buf_size</name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:29">stride</name> <operator pos:start="19:31" pos:end="19:31">*</operator> <name pos:start="19:33" pos:end="19:45"><name pos:start="19:33" pos:end="19:37">avctx</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:45">height</name></name></expr>)</condition><block type="pseudo" pos:start="20:9" pos:end="23:9"><block_content pos:start="20:9" pos:end="23:9">
        <for pos:start="20:9" pos:end="23:9">for <control pos:start="20:13" pos:end="20:48">(<init pos:start="20:14" pos:end="20:35"><expr pos:start="20:14" pos:end="20:34"><name pos:start="20:14" pos:end="20:14">i</name> <operator pos:start="20:16" pos:end="20:16">=</operator> <name pos:start="20:18" pos:end="20:30"><name pos:start="20:18" pos:end="20:22">avctx</name><operator pos:start="20:23" pos:end="20:24">-&gt;</operator><name pos:start="20:25" pos:end="20:30">height</name></name> <operator pos:start="20:32" pos:end="20:32">-</operator> <literal type="number" pos:start="20:34" pos:end="20:34">1</literal></expr>;</init> <condition pos:start="20:37" pos:end="20:43"><expr pos:start="20:37" pos:end="20:42"><name pos:start="20:37" pos:end="20:37">i</name> <operator pos:start="20:39" pos:end="20:40">&gt;=</operator> <literal type="number" pos:start="20:42" pos:end="20:42">0</literal></expr>;</condition> <incr pos:start="20:45" pos:end="20:47"><expr pos:start="20:45" pos:end="20:47"><name pos:start="20:45" pos:end="20:45">i</name><operator pos:start="20:46" pos:end="20:47">--</operator></expr></incr>)</control> <block pos:start="20:50" pos:end="23:9">{<block_content pos:start="21:13" pos:end="22:26">
            <expr_stmt pos:start="21:13" pos:end="21:89"><expr pos:start="21:13" pos:end="21:88"><call pos:start="21:13" pos:end="21:88"><name pos:start="21:13" pos:end="21:18">memcpy</name><argument_list pos:start="21:19" pos:end="21:88">(<argument pos:start="21:20" pos:end="21:64"><expr pos:start="21:20" pos:end="21:64"><name pos:start="21:20" pos:end="21:36"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:27">frame</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:33">data</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>]</index></name> <operator pos:start="21:38" pos:end="21:38">+</operator> <name pos:start="21:40" pos:end="21:40">i</name> <operator pos:start="21:42" pos:end="21:42">*</operator> <name pos:start="21:44" pos:end="21:64"><name pos:start="21:44" pos:end="21:44">s</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:51">frame</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:61">linesize</name><index pos:start="21:62" pos:end="21:64">[<expr pos:start="21:63" pos:end="21:63"><literal type="number" pos:start="21:63" pos:end="21:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:67" pos:end="21:69"><expr pos:start="21:67" pos:end="21:69"><name pos:start="21:67" pos:end="21:69">buf</name></expr></argument>, <argument pos:start="21:72" pos:end="21:87"><expr pos:start="21:72" pos:end="21:87"><name pos:start="21:72" pos:end="21:83"><name pos:start="21:72" pos:end="21:76">avctx</name><operator pos:start="21:77" pos:end="21:78">-&gt;</operator><name pos:start="21:79" pos:end="21:83">width</name></name> <operator pos:start="21:85" pos:end="21:85">*</operator> <literal type="number" pos:start="21:87" pos:end="21:87">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:26"><expr pos:start="22:13" pos:end="22:25"><name pos:start="22:13" pos:end="22:15">buf</name> <operator pos:start="22:17" pos:end="22:18">+=</operator> <name pos:start="22:20" pos:end="22:25">stride</name></expr>;</expr_stmt>
        </block_content>}</block></for></block_content></block></if></if_stmt>
        <break pos:start="24:9" pos:end="24:14">break;</break>
    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">1</literal></expr>:</case>
        <expr_stmt pos:start="26:9" pos:end="26:48"><expr pos:start="26:9" pos:end="26:47"><call pos:start="26:9" pos:end="26:47"><name pos:start="26:9" pos:end="26:24">bytestream2_init</name><argument_list pos:start="26:25" pos:end="26:47">(<argument pos:start="26:26" pos:end="26:31"><expr pos:start="26:26" pos:end="26:31"><operator pos:start="26:26" pos:end="26:26">&amp;</operator><name pos:start="26:27" pos:end="26:31"><name pos:start="26:27" pos:end="26:27">s</name><operator pos:start="26:28" pos:end="26:29">-&gt;</operator><name pos:start="26:30" pos:end="26:31">gb</name></name></expr></argument>, <argument pos:start="26:34" pos:end="26:36"><expr pos:start="26:34" pos:end="26:36"><name pos:start="26:34" pos:end="26:36">buf</name></expr></argument>, <argument pos:start="26:39" pos:end="26:46"><expr pos:start="26:39" pos:end="26:46"><name pos:start="26:39" pos:end="26:46">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:64"><expr pos:start="27:9" pos:end="27:63"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:23">ff_msrle_decode</name><argument_list pos:start="27:24" pos:end="27:63">(<argument pos:start="27:25" pos:end="27:29"><expr pos:start="27:25" pos:end="27:29"><name pos:start="27:25" pos:end="27:29">avctx</name></expr></argument>, <argument pos:start="27:32" pos:end="27:51"><expr pos:start="27:32" pos:end="27:51"><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:41">AVPicture</name><operator pos:start="27:42" pos:end="27:42">*</operator><operator pos:start="27:43" pos:end="27:43">)</operator><name pos:start="27:44" pos:end="27:51"><name pos:start="27:44" pos:end="27:44">s</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:51">frame</name></name></expr></argument>, <argument pos:start="27:54" pos:end="27:54"><expr pos:start="27:54" pos:end="27:54"><literal type="number" pos:start="27:54" pos:end="27:54">8</literal></expr></argument>, <argument pos:start="27:57" pos:end="27:62"><expr pos:start="27:57" pos:end="27:62"><operator pos:start="27:57" pos:end="27:57">&amp;</operator><name pos:start="27:58" pos:end="27:62"><name pos:start="27:58" pos:end="27:58">s</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:62">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="28:9" pos:end="28:14">break;</break>
    <default pos:start="29:5" pos:end="29:12">default:</default>
        <expr_stmt pos:start="30:9" pos:end="30:76"><expr pos:start="30:9" pos:end="30:75"><call pos:start="30:9" pos:end="30:75"><name pos:start="30:9" pos:end="30:14">av_log</name><argument_list pos:start="30:15" pos:end="30:75">(<argument pos:start="30:16" pos:end="30:20"><expr pos:start="30:16" pos:end="30:20"><name pos:start="30:16" pos:end="30:20">avctx</name></expr></argument>, <argument pos:start="30:23" pos:end="30:34"><expr pos:start="30:23" pos:end="30:34"><name pos:start="30:23" pos:end="30:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="30:37" pos:end="30:67"><expr pos:start="30:37" pos:end="30:67"><literal type="string" pos:start="30:37" pos:end="30:67">"Unknown compression type %d\n"</literal></expr></argument>, <argument pos:start="30:70" pos:end="30:74"><expr pos:start="30:70" pos:end="30:74"><name pos:start="30:70" pos:end="30:74">compr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></switch>
    <expr_stmt pos:start="32:5" pos:end="32:19"><expr pos:start="32:5" pos:end="32:18"><operator pos:start="32:5" pos:end="32:5">*</operator><name pos:start="32:6" pos:end="32:14">got_frame</name> <operator pos:start="32:16" pos:end="32:16">=</operator> <literal type="number" pos:start="32:18" pos:end="32:18">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="33:5" pos:end="34:19"><if pos:start="33:5" pos:end="34:19">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">ret</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:43"><name pos:start="33:16" pos:end="33:27">av_frame_ref</name><argument_list pos:start="33:28" pos:end="33:43">(<argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">data</name></expr></argument>, <argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="33:44" pos:end="33:44">)</operator> <operator pos:start="33:46" pos:end="33:46">&lt;</operator> <literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>)</condition><block type="pseudo" pos:start="34:9" pos:end="34:19"><block_content pos:start="34:9" pos:end="34:19">
        <return pos:start="34:9" pos:end="34:19">return <expr pos:start="34:16" pos:end="34:18"><name pos:start="34:16" pos:end="34:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="35:5" pos:end="35:56">/* report that the buffer was completely consumed */</comment>
    <return pos:start="36:5" pos:end="36:20">return <expr pos:start="36:12" pos:end="36:19"><name pos:start="36:12" pos:end="36:19">buf_size</name></expr>;</return>
</block_content>}</block></function></unit>
