<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22700.c" pos:tabs="8"><function pos:start="1:1" pos:end="1999:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">disas_iwmmxt_insn</name><parameter_list pos:start="1:29" pos:end="1:75">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:56">DisasContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:69">uint32_t</name></type> <name pos:start="1:71" pos:end="1:74">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1999:1">{<block_content pos:start="5:5" pos:end="1997:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rd</name></decl>, <decl pos:start="5:13" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:15">wrd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">rdhi</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">rdlo</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">rd0</name></decl>, <decl pos:start="7:26" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:28">rd1</name></decl>, <decl pos:start="7:31" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:31">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:13">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:12">tmp</name></decl>, <decl pos:start="11:15" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:15" pos:end="11:18">tmp2</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:21" pos:end="11:24">tmp3</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="171:5"><if pos:start="15:5" pos:end="171:5">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:13">insn</name> <operator pos:start="15:15" pos:end="15:15">&amp;</operator> <literal type="number" pos:start="15:17" pos:end="15:26">0x0e000e00</literal><operator pos:start="15:27" pos:end="15:27">)</operator> <operator pos:start="15:29" pos:end="15:30">==</operator> <literal type="number" pos:start="15:32" pos:end="15:41">0x0c000000</literal></expr>)</condition> <block pos:start="15:44" pos:end="171:5">{<block_content pos:start="17:9" pos:end="169:17">

        <if_stmt pos:start="17:9" pos:end="47:9"><if pos:start="17:9" pos:end="47:9">if <condition pos:start="17:12" pos:end="17:46">(<expr pos:start="17:13" pos:end="17:45"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:17">insn</name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <literal type="number" pos:start="17:21" pos:end="17:30">0x0fe00ff0</literal><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:34">==</operator> <literal type="number" pos:start="17:36" pos:end="17:45">0x0c400000</literal></expr>)</condition> <block pos:start="17:48" pos:end="47:9">{<block_content pos:start="19:13" pos:end="45:21">

            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:15">wrd</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:22">insn</name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <literal type="number" pos:start="19:26" pos:end="19:28">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:38"><expr pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:16">rdlo</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">(</operator><name pos:start="21:21" pos:end="21:24">insn</name> <operator pos:start="21:26" pos:end="21:27">&gt;&gt;</operator> <literal type="number" pos:start="21:29" pos:end="21:30">12</literal><operator pos:start="21:31" pos:end="21:31">)</operator> <operator pos:start="21:33" pos:end="21:33">&amp;</operator> <literal type="number" pos:start="21:35" pos:end="21:37">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:38"><expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:16">rdhi</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:24">insn</name> <operator pos:start="23:26" pos:end="23:27">&gt;&gt;</operator> <literal type="number" pos:start="23:29" pos:end="23:30">16</literal><operator pos:start="23:31" pos:end="23:31">)</operator> <operator pos:start="23:33" pos:end="23:33">&amp;</operator> <literal type="number" pos:start="23:35" pos:end="23:37">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="43:13"><if pos:start="25:13" pos:end="35:13">if <condition pos:start="25:16" pos:end="25:37">(<expr pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:20">insn</name> <operator pos:start="25:22" pos:end="25:22">&amp;</operator> <name pos:start="25:24" pos:end="25:36">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="25:39" pos:end="35:13">{<block_content pos:start="27:17" pos:end="33:59">			<comment type="block" pos:start="25:57" pos:end="25:67">/* TMRRC */</comment>

                <expr_stmt pos:start="27:17" pos:end="27:45"><expr pos:start="27:17" pos:end="27:44"><call pos:start="27:17" pos:end="27:44"><name pos:start="27:17" pos:end="27:31">iwmmxt_load_reg</name><argument_list pos:start="27:32" pos:end="27:44">(<argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><name pos:start="27:33" pos:end="27:38">cpu_V0</name></expr></argument>, <argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:59"><expr pos:start="29:17" pos:end="29:58"><call pos:start="29:17" pos:end="29:58"><name pos:start="29:17" pos:end="29:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="29:38" pos:end="29:58">(<argument pos:start="29:39" pos:end="29:49"><expr pos:start="29:39" pos:end="29:49"><name pos:start="29:39" pos:end="29:49"><name pos:start="29:39" pos:end="29:43">cpu_R</name><index pos:start="29:44" pos:end="29:49">[<expr pos:start="29:45" pos:end="29:48"><name pos:start="29:45" pos:end="29:48">rdlo</name></expr>]</index></name></expr></argument>, <argument pos:start="29:52" pos:end="29:57"><expr pos:start="29:52" pos:end="29:57"><name pos:start="29:52" pos:end="29:57">cpu_V0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:53"><expr pos:start="31:17" pos:end="31:52"><call pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:32">tcg_gen_shri_i64</name><argument_list pos:start="31:33" pos:end="31:52">(<argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39">cpu_V0</name></expr></argument>, <argument pos:start="31:42" pos:end="31:47"><expr pos:start="31:42" pos:end="31:47"><name pos:start="31:42" pos:end="31:47">cpu_V0</name></expr></argument>, <argument pos:start="31:50" pos:end="31:51"><expr pos:start="31:50" pos:end="31:51"><literal type="number" pos:start="31:50" pos:end="31:51">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:59"><expr pos:start="33:17" pos:end="33:58"><call pos:start="33:17" pos:end="33:58"><name pos:start="33:17" pos:end="33:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="33:38" pos:end="33:58">(<argument pos:start="33:39" pos:end="33:49"><expr pos:start="33:39" pos:end="33:49"><name pos:start="33:39" pos:end="33:49"><name pos:start="33:39" pos:end="33:43">cpu_R</name><index pos:start="33:44" pos:end="33:49">[<expr pos:start="33:45" pos:end="33:48"><name pos:start="33:45" pos:end="33:48">rdhi</name></expr>]</index></name></expr></argument>, <argument pos:start="33:52" pos:end="33:57"><expr pos:start="33:52" pos:end="33:57"><name pos:start="33:52" pos:end="33:57">cpu_V0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="35:15" pos:end="43:13">else <block pos:start="35:20" pos:end="43:13">{<block_content pos:start="37:17" pos:end="41:40">					<comment type="block" pos:start="35:57" pos:end="35:67">/* TMCRR */</comment>

                <expr_stmt pos:start="37:17" pos:end="37:73"><expr pos:start="37:17" pos:end="37:72"><call pos:start="37:17" pos:end="37:72"><name pos:start="37:17" pos:end="37:38">tcg_gen_concat_i32_i64</name><argument_list pos:start="37:39" pos:end="37:72">(<argument pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><name pos:start="37:40" pos:end="37:45">cpu_V0</name></expr></argument>, <argument pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:52">cpu_R</name><index pos:start="37:53" pos:end="37:58">[<expr pos:start="37:54" pos:end="37:57"><name pos:start="37:54" pos:end="37:57">rdlo</name></expr>]</index></name></expr></argument>, <argument pos:start="37:61" pos:end="37:71"><expr pos:start="37:61" pos:end="37:71"><name pos:start="37:61" pos:end="37:71"><name pos:start="37:61" pos:end="37:65">cpu_R</name><index pos:start="37:66" pos:end="37:71">[<expr pos:start="37:67" pos:end="37:70"><name pos:start="37:67" pos:end="37:70">rdhi</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:46"><expr pos:start="39:17" pos:end="39:45"><call pos:start="39:17" pos:end="39:45"><name pos:start="39:17" pos:end="39:32">iwmmxt_store_reg</name><argument_list pos:start="39:33" pos:end="39:45">(<argument pos:start="39:34" pos:end="39:39"><expr pos:start="39:34" pos:end="39:39"><name pos:start="39:34" pos:end="39:39">cpu_V0</name></expr></argument>, <argument pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:44">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:40"><expr pos:start="41:17" pos:end="41:39"><call pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:37">gen_op_iwmmxt_set_mup</name><argument_list pos:start="41:38" pos:end="41:39">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="45:13" pos:end="45:21">return <expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:11">wrd</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">(</operator><name pos:start="51:16" pos:end="51:19">insn</name> <operator pos:start="51:21" pos:end="51:22">&gt;&gt;</operator> <literal type="number" pos:start="51:24" pos:end="51:25">12</literal><operator pos:start="51:26" pos:end="51:26">)</operator> <operator pos:start="51:28" pos:end="51:28">&amp;</operator> <literal type="number" pos:start="51:30" pos:end="51:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:12">addr</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:22">new_tmp</name><argument_list pos:start="53:23" pos:end="53:24">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="60:9"><if pos:start="55:9" pos:end="60:9">if <condition pos:start="55:12" pos:end="55:46">(<expr pos:start="55:13" pos:end="55:45"><call pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:30">gen_iwmmxt_address</name><argument_list pos:start="55:31" pos:end="55:45">(<argument pos:start="55:32" pos:end="55:32"><expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">s</name></expr></argument>, <argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:38">insn</name></expr></argument>, <argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">addr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:48" pos:end="60:9">{<block_content pos:start="58:13" pos:end="58:21">


            <return pos:start="58:13" pos:end="58:21">return <expr pos:start="58:20" pos:end="58:20"><literal type="number" pos:start="58:20" pos:end="58:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="62:9" pos:end="166:9"><if pos:start="62:9" pos:end="116:9">if <condition pos:start="62:12" pos:end="62:33">(<expr pos:start="62:13" pos:end="62:32"><name pos:start="62:13" pos:end="62:16">insn</name> <operator pos:start="62:18" pos:end="62:18">&amp;</operator> <name pos:start="62:20" pos:end="62:32">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="62:35" pos:end="116:9">{<block_content pos:start="64:13" pos:end="114:13">

            <if_stmt pos:start="64:13" pos:end="114:13"><if pos:start="64:13" pos:end="72:13">if <condition pos:start="64:16" pos:end="64:36">(<expr pos:start="64:17" pos:end="64:35"><operator pos:start="64:17" pos:end="64:17">(</operator><name pos:start="64:18" pos:end="64:21">insn</name> <operator pos:start="64:23" pos:end="64:24">&gt;&gt;</operator> <literal type="number" pos:start="64:26" pos:end="64:27">28</literal><operator pos:start="64:28" pos:end="64:28">)</operator> <operator pos:start="64:30" pos:end="64:31">==</operator> <literal type="number" pos:start="64:33" pos:end="64:35">0xf</literal></expr>)</condition> <block pos:start="64:38" pos:end="72:13">{<block_content pos:start="66:17" pos:end="70:44">			<comment type="block" pos:start="64:57" pos:end="64:71">/* WLDRW wCx */</comment>

                <expr_stmt pos:start="66:17" pos:end="66:32"><expr pos:start="66:17" pos:end="66:31"><name pos:start="66:17" pos:end="66:19">tmp</name> <operator pos:start="66:21" pos:end="66:21">=</operator> <call pos:start="66:23" pos:end="66:31"><name pos:start="66:23" pos:end="66:29">new_tmp</name><argument_list pos:start="66:30" pos:end="66:31">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="68:17" pos:end="68:58"><expr pos:start="68:17" pos:end="68:57"><call pos:start="68:17" pos:end="68:57"><name pos:start="68:17" pos:end="68:34">tcg_gen_qemu_ld32u</name><argument_list pos:start="68:35" pos:end="68:57">(<argument pos:start="68:36" pos:end="68:38"><expr pos:start="68:36" pos:end="68:38"><name pos:start="68:36" pos:end="68:38">tmp</name></expr></argument>, <argument pos:start="68:41" pos:end="68:44"><expr pos:start="68:41" pos:end="68:44"><name pos:start="68:41" pos:end="68:44">addr</name></expr></argument>, <argument pos:start="68:47" pos:end="68:56"><expr pos:start="68:47" pos:end="68:56"><call pos:start="68:47" pos:end="68:56"><name pos:start="68:47" pos:end="68:53">IS_USER</name><argument_list pos:start="68:54" pos:end="68:56">(<argument pos:start="68:55" pos:end="68:55"><expr pos:start="68:55" pos:end="68:55"><name pos:start="68:55" pos:end="68:55">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="70:17" pos:end="70:44"><expr pos:start="70:17" pos:end="70:43"><call pos:start="70:17" pos:end="70:43"><name pos:start="70:17" pos:end="70:33">iwmmxt_store_creg</name><argument_list pos:start="70:34" pos:end="70:43">(<argument pos:start="70:35" pos:end="70:37"><expr pos:start="70:35" pos:end="70:37"><name pos:start="70:35" pos:end="70:37">wrd</name></expr></argument>, <argument pos:start="70:40" pos:end="70:42"><expr pos:start="70:40" pos:end="70:42"><name pos:start="70:40" pos:end="70:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="72:15" pos:end="114:13">else <block pos:start="72:20" pos:end="114:13">{<block_content pos:start="74:17" pos:end="112:47">

                <expr_stmt pos:start="74:17" pos:end="74:22"><expr pos:start="74:17" pos:end="74:21"><name pos:start="74:17" pos:end="74:17">i</name> <operator pos:start="74:19" pos:end="74:19">=</operator> <literal type="number" pos:start="74:21" pos:end="74:21">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="76:17" pos:end="102:17"><if pos:start="76:17" pos:end="90:17">if <condition pos:start="76:20" pos:end="76:36">(<expr pos:start="76:21" pos:end="76:35"><name pos:start="76:21" pos:end="76:24">insn</name> <operator pos:start="76:26" pos:end="76:26">&amp;</operator> <operator pos:start="76:28" pos:end="76:28">(</operator><literal type="number" pos:start="76:29" pos:end="76:29">1</literal> <operator pos:start="76:31" pos:end="76:32">&lt;&lt;</operator> <literal type="number" pos:start="76:34" pos:end="76:34">8</literal><operator pos:start="76:35" pos:end="76:35">)</operator></expr>)</condition> <block pos:start="76:38" pos:end="90:17">{<block_content pos:start="78:21" pos:end="88:21">

                    <if_stmt pos:start="78:21" pos:end="88:21"><if pos:start="78:21" pos:end="84:21">if <condition pos:start="78:24" pos:end="78:41">(<expr pos:start="78:25" pos:end="78:40"><name pos:start="78:25" pos:end="78:28">insn</name> <operator pos:start="78:30" pos:end="78:30">&amp;</operator> <operator pos:start="78:32" pos:end="78:32">(</operator><literal type="number" pos:start="78:33" pos:end="78:33">1</literal> <operator pos:start="78:35" pos:end="78:36">&lt;&lt;</operator> <literal type="number" pos:start="78:38" pos:end="78:39">22</literal><operator pos:start="78:40" pos:end="78:40">)</operator></expr>)</condition> <block pos:start="78:43" pos:end="84:21">{<block_content pos:start="80:25" pos:end="82:30">		<comment type="block" pos:start="78:57" pos:end="78:67">/* WLDRD */</comment>

                        <expr_stmt pos:start="80:25" pos:end="80:68"><expr pos:start="80:25" pos:end="80:67"><call pos:start="80:25" pos:end="80:67"><name pos:start="80:25" pos:end="80:41">tcg_gen_qemu_ld64</name><argument_list pos:start="80:42" pos:end="80:67">(<argument pos:start="80:43" pos:end="80:48"><expr pos:start="80:43" pos:end="80:48"><name pos:start="80:43" pos:end="80:48">cpu_M0</name></expr></argument>, <argument pos:start="80:51" pos:end="80:54"><expr pos:start="80:51" pos:end="80:54"><name pos:start="80:51" pos:end="80:54">addr</name></expr></argument>, <argument pos:start="80:57" pos:end="80:66"><expr pos:start="80:57" pos:end="80:66"><call pos:start="80:57" pos:end="80:66"><name pos:start="80:57" pos:end="80:63">IS_USER</name><argument_list pos:start="80:64" pos:end="80:66">(<argument pos:start="80:65" pos:end="80:65"><expr pos:start="80:65" pos:end="80:65"><name pos:start="80:65" pos:end="80:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="82:25" pos:end="82:30"><expr pos:start="82:25" pos:end="82:29"><name pos:start="82:25" pos:end="82:25">i</name> <operator pos:start="82:27" pos:end="82:27">=</operator> <literal type="number" pos:start="82:29" pos:end="82:29">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="84:23" pos:end="88:21">else <block pos:start="84:28" pos:end="88:21">{<block_content pos:start="86:25" pos:end="86:57">				<comment type="block" pos:start="84:57" pos:end="84:71">/* WLDRW wRd */</comment>

                        <expr_stmt pos:start="86:25" pos:end="86:57"><expr pos:start="86:25" pos:end="86:56"><name pos:start="86:25" pos:end="86:27">tmp</name> <operator pos:start="86:29" pos:end="86:29">=</operator> <call pos:start="86:31" pos:end="86:56"><name pos:start="86:31" pos:end="86:38">gen_ld32</name><argument_list pos:start="86:39" pos:end="86:56">(<argument pos:start="86:40" pos:end="86:43"><expr pos:start="86:40" pos:end="86:43"><name pos:start="86:40" pos:end="86:43">addr</name></expr></argument>, <argument pos:start="86:46" pos:end="86:55"><expr pos:start="86:46" pos:end="86:55"><call pos:start="86:46" pos:end="86:55"><name pos:start="86:46" pos:end="86:52">IS_USER</name><argument_list pos:start="86:53" pos:end="86:55">(<argument pos:start="86:54" pos:end="86:54"><expr pos:start="86:54" pos:end="86:54"><name pos:start="86:54" pos:end="86:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="90:19" pos:end="102:17">else <block pos:start="90:24" pos:end="102:17">{<block_content pos:start="92:21" pos:end="100:21">

                    <if_stmt pos:start="92:21" pos:end="100:21"><if pos:start="92:21" pos:end="96:21">if <condition pos:start="92:24" pos:end="92:41">(<expr pos:start="92:25" pos:end="92:40"><name pos:start="92:25" pos:end="92:28">insn</name> <operator pos:start="92:30" pos:end="92:30">&amp;</operator> <operator pos:start="92:32" pos:end="92:32">(</operator><literal type="number" pos:start="92:33" pos:end="92:33">1</literal> <operator pos:start="92:35" pos:end="92:36">&lt;&lt;</operator> <literal type="number" pos:start="92:38" pos:end="92:39">22</literal><operator pos:start="92:40" pos:end="92:40">)</operator></expr>)</condition> <block pos:start="92:43" pos:end="96:21">{<block_content pos:start="94:25" pos:end="94:58">		<comment type="block" pos:start="92:57" pos:end="92:67">/* WLDRH */</comment>

                        <expr_stmt pos:start="94:25" pos:end="94:58"><expr pos:start="94:25" pos:end="94:57"><name pos:start="94:25" pos:end="94:27">tmp</name> <operator pos:start="94:29" pos:end="94:29">=</operator> <call pos:start="94:31" pos:end="94:57"><name pos:start="94:31" pos:end="94:39">gen_ld16u</name><argument_list pos:start="94:40" pos:end="94:57">(<argument pos:start="94:41" pos:end="94:44"><expr pos:start="94:41" pos:end="94:44"><name pos:start="94:41" pos:end="94:44">addr</name></expr></argument>, <argument pos:start="94:47" pos:end="94:56"><expr pos:start="94:47" pos:end="94:56"><call pos:start="94:47" pos:end="94:56"><name pos:start="94:47" pos:end="94:53">IS_USER</name><argument_list pos:start="94:54" pos:end="94:56">(<argument pos:start="94:55" pos:end="94:55"><expr pos:start="94:55" pos:end="94:55"><name pos:start="94:55" pos:end="94:55">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="96:23" pos:end="100:21">else <block pos:start="96:28" pos:end="100:21">{<block_content pos:start="98:25" pos:end="98:57">				<comment type="block" pos:start="96:57" pos:end="96:67">/* WLDRB */</comment>

                        <expr_stmt pos:start="98:25" pos:end="98:57"><expr pos:start="98:25" pos:end="98:56"><name pos:start="98:25" pos:end="98:27">tmp</name> <operator pos:start="98:29" pos:end="98:29">=</operator> <call pos:start="98:31" pos:end="98:56"><name pos:start="98:31" pos:end="98:38">gen_ld8u</name><argument_list pos:start="98:39" pos:end="98:56">(<argument pos:start="98:40" pos:end="98:43"><expr pos:start="98:40" pos:end="98:43"><name pos:start="98:40" pos:end="98:43">addr</name></expr></argument>, <argument pos:start="98:46" pos:end="98:55"><expr pos:start="98:46" pos:end="98:55"><call pos:start="98:46" pos:end="98:55"><name pos:start="98:46" pos:end="98:52">IS_USER</name><argument_list pos:start="98:53" pos:end="98:55">(<argument pos:start="98:54" pos:end="98:54"><expr pos:start="98:54" pos:end="98:54"><name pos:start="98:54" pos:end="98:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="104:17" pos:end="110:17"><if pos:start="104:17" pos:end="110:17">if <condition pos:start="104:20" pos:end="104:22">(<expr pos:start="104:21" pos:end="104:21"><name pos:start="104:21" pos:end="104:21">i</name></expr>)</condition> <block pos:start="104:24" pos:end="110:17">{<block_content pos:start="106:21" pos:end="108:34">

                    <expr_stmt pos:start="106:21" pos:end="106:54"><expr pos:start="106:21" pos:end="106:53"><call pos:start="106:21" pos:end="106:53"><name pos:start="106:21" pos:end="106:40">tcg_gen_extu_i32_i64</name><argument_list pos:start="106:41" pos:end="106:53">(<argument pos:start="106:42" pos:end="106:47"><expr pos:start="106:42" pos:end="106:47"><name pos:start="106:42" pos:end="106:47">cpu_M0</name></expr></argument>, <argument pos:start="106:50" pos:end="106:52"><expr pos:start="106:50" pos:end="106:52"><name pos:start="106:50" pos:end="106:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="108:21" pos:end="108:34"><expr pos:start="108:21" pos:end="108:33"><call pos:start="108:21" pos:end="108:33"><name pos:start="108:21" pos:end="108:28">dead_tmp</name><argument_list pos:start="108:29" pos:end="108:33">(<argument pos:start="108:30" pos:end="108:32"><expr pos:start="108:30" pos:end="108:32"><name pos:start="108:30" pos:end="108:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="112:17" pos:end="112:47"><expr pos:start="112:17" pos:end="112:46"><call pos:start="112:17" pos:end="112:46"><name pos:start="112:17" pos:end="112:41">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="112:42" pos:end="112:46">(<argument pos:start="112:43" pos:end="112:45"><expr pos:start="112:43" pos:end="112:45"><name pos:start="112:43" pos:end="112:45">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="116:11" pos:end="166:9">else <block pos:start="116:16" pos:end="166:9">{<block_content pos:start="118:13" pos:end="164:13">

            <if_stmt pos:start="118:13" pos:end="164:13"><if pos:start="118:13" pos:end="124:13">if <condition pos:start="118:16" pos:end="118:36">(<expr pos:start="118:17" pos:end="118:35"><operator pos:start="118:17" pos:end="118:17">(</operator><name pos:start="118:18" pos:end="118:21">insn</name> <operator pos:start="118:23" pos:end="118:24">&gt;&gt;</operator> <literal type="number" pos:start="118:26" pos:end="118:27">28</literal><operator pos:start="118:28" pos:end="118:28">)</operator> <operator pos:start="118:30" pos:end="118:31">==</operator> <literal type="number" pos:start="118:33" pos:end="118:35">0xf</literal></expr>)</condition> <block pos:start="118:38" pos:end="124:13">{<block_content pos:start="120:17" pos:end="122:48">			<comment type="block" pos:start="118:57" pos:end="118:71">/* WSTRW wCx */</comment>

                <expr_stmt pos:start="120:17" pos:end="120:44"><expr pos:start="120:17" pos:end="120:43"><name pos:start="120:17" pos:end="120:19">tmp</name> <operator pos:start="120:21" pos:end="120:21">=</operator> <call pos:start="120:23" pos:end="120:43"><name pos:start="120:23" pos:end="120:38">iwmmxt_load_creg</name><argument_list pos:start="120:39" pos:end="120:43">(<argument pos:start="120:40" pos:end="120:42"><expr pos:start="120:40" pos:end="120:42"><name pos:start="120:40" pos:end="120:42">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="122:17" pos:end="122:48"><expr pos:start="122:17" pos:end="122:47"><call pos:start="122:17" pos:end="122:47"><name pos:start="122:17" pos:end="122:24">gen_st32</name><argument_list pos:start="122:25" pos:end="122:47">(<argument pos:start="122:26" pos:end="122:28"><expr pos:start="122:26" pos:end="122:28"><name pos:start="122:26" pos:end="122:28">tmp</name></expr></argument>, <argument pos:start="122:31" pos:end="122:34"><expr pos:start="122:31" pos:end="122:34"><name pos:start="122:31" pos:end="122:34">addr</name></expr></argument>, <argument pos:start="122:37" pos:end="122:46"><expr pos:start="122:37" pos:end="122:46"><call pos:start="122:37" pos:end="122:46"><name pos:start="122:37" pos:end="122:43">IS_USER</name><argument_list pos:start="122:44" pos:end="122:46">(<argument pos:start="122:45" pos:end="122:45"><expr pos:start="122:45" pos:end="122:45"><name pos:start="122:45" pos:end="122:45">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="124:15" pos:end="164:13">else <block pos:start="124:20" pos:end="164:13">{<block_content pos:start="126:17" pos:end="162:17">

                <expr_stmt pos:start="126:17" pos:end="126:47"><expr pos:start="126:17" pos:end="126:46"><call pos:start="126:17" pos:end="126:46"><name pos:start="126:17" pos:end="126:41">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="126:42" pos:end="126:46">(<argument pos:start="126:43" pos:end="126:45"><expr pos:start="126:43" pos:end="126:45"><name pos:start="126:43" pos:end="126:45">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="128:17" pos:end="128:32"><expr pos:start="128:17" pos:end="128:31"><name pos:start="128:17" pos:end="128:19">tmp</name> <operator pos:start="128:21" pos:end="128:21">=</operator> <call pos:start="128:23" pos:end="128:31"><name pos:start="128:23" pos:end="128:29">new_tmp</name><argument_list pos:start="128:30" pos:end="128:31">()</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="130:17" pos:end="162:17"><if pos:start="130:17" pos:end="146:17">if <condition pos:start="130:20" pos:end="130:36">(<expr pos:start="130:21" pos:end="130:35"><name pos:start="130:21" pos:end="130:24">insn</name> <operator pos:start="130:26" pos:end="130:26">&amp;</operator> <operator pos:start="130:28" pos:end="130:28">(</operator><literal type="number" pos:start="130:29" pos:end="130:29">1</literal> <operator pos:start="130:31" pos:end="130:32">&lt;&lt;</operator> <literal type="number" pos:start="130:34" pos:end="130:34">8</literal><operator pos:start="130:35" pos:end="130:35">)</operator></expr>)</condition> <block pos:start="130:38" pos:end="146:17">{<block_content pos:start="132:21" pos:end="144:21">

                    <if_stmt pos:start="132:21" pos:end="144:21"><if pos:start="132:21" pos:end="138:21">if <condition pos:start="132:24" pos:end="132:41">(<expr pos:start="132:25" pos:end="132:40"><name pos:start="132:25" pos:end="132:28">insn</name> <operator pos:start="132:30" pos:end="132:30">&amp;</operator> <operator pos:start="132:32" pos:end="132:32">(</operator><literal type="number" pos:start="132:33" pos:end="132:33">1</literal> <operator pos:start="132:35" pos:end="132:36">&lt;&lt;</operator> <literal type="number" pos:start="132:38" pos:end="132:39">22</literal><operator pos:start="132:40" pos:end="132:40">)</operator></expr>)</condition> <block pos:start="132:43" pos:end="138:21">{<block_content pos:start="134:25" pos:end="136:68">		<comment type="block" pos:start="132:57" pos:end="132:67">/* WSTRD */</comment>

                        <expr_stmt pos:start="134:25" pos:end="134:38"><expr pos:start="134:25" pos:end="134:37"><call pos:start="134:25" pos:end="134:37"><name pos:start="134:25" pos:end="134:32">dead_tmp</name><argument_list pos:start="134:33" pos:end="134:37">(<argument pos:start="134:34" pos:end="134:36"><expr pos:start="134:34" pos:end="134:36"><name pos:start="134:34" pos:end="134:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="136:25" pos:end="136:68"><expr pos:start="136:25" pos:end="136:67"><call pos:start="136:25" pos:end="136:67"><name pos:start="136:25" pos:end="136:41">tcg_gen_qemu_st64</name><argument_list pos:start="136:42" pos:end="136:67">(<argument pos:start="136:43" pos:end="136:48"><expr pos:start="136:43" pos:end="136:48"><name pos:start="136:43" pos:end="136:48">cpu_M0</name></expr></argument>, <argument pos:start="136:51" pos:end="136:54"><expr pos:start="136:51" pos:end="136:54"><name pos:start="136:51" pos:end="136:54">addr</name></expr></argument>, <argument pos:start="136:57" pos:end="136:66"><expr pos:start="136:57" pos:end="136:66"><call pos:start="136:57" pos:end="136:66"><name pos:start="136:57" pos:end="136:63">IS_USER</name><argument_list pos:start="136:64" pos:end="136:66">(<argument pos:start="136:65" pos:end="136:65"><expr pos:start="136:65" pos:end="136:65"><name pos:start="136:65" pos:end="136:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="138:23" pos:end="144:21">else <block pos:start="138:28" pos:end="144:21">{<block_content pos:start="140:25" pos:end="142:56">				<comment type="block" pos:start="138:57" pos:end="138:71">/* WSTRW wRd */</comment>

                        <expr_stmt pos:start="140:25" pos:end="140:59"><expr pos:start="140:25" pos:end="140:58"><call pos:start="140:25" pos:end="140:58"><name pos:start="140:25" pos:end="140:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="140:46" pos:end="140:58">(<argument pos:start="140:47" pos:end="140:49"><expr pos:start="140:47" pos:end="140:49"><name pos:start="140:47" pos:end="140:49">tmp</name></expr></argument>, <argument pos:start="140:52" pos:end="140:57"><expr pos:start="140:52" pos:end="140:57"><name pos:start="140:52" pos:end="140:57">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="142:25" pos:end="142:56"><expr pos:start="142:25" pos:end="142:55"><call pos:start="142:25" pos:end="142:55"><name pos:start="142:25" pos:end="142:32">gen_st32</name><argument_list pos:start="142:33" pos:end="142:55">(<argument pos:start="142:34" pos:end="142:36"><expr pos:start="142:34" pos:end="142:36"><name pos:start="142:34" pos:end="142:36">tmp</name></expr></argument>, <argument pos:start="142:39" pos:end="142:42"><expr pos:start="142:39" pos:end="142:42"><name pos:start="142:39" pos:end="142:42">addr</name></expr></argument>, <argument pos:start="142:45" pos:end="142:54"><expr pos:start="142:45" pos:end="142:54"><call pos:start="142:45" pos:end="142:54"><name pos:start="142:45" pos:end="142:51">IS_USER</name><argument_list pos:start="142:52" pos:end="142:54">(<argument pos:start="142:53" pos:end="142:53"><expr pos:start="142:53" pos:end="142:53"><name pos:start="142:53" pos:end="142:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="146:19" pos:end="162:17">else <block pos:start="146:24" pos:end="162:17">{<block_content pos:start="148:21" pos:end="160:21">

                    <if_stmt pos:start="148:21" pos:end="160:21"><if pos:start="148:21" pos:end="154:21">if <condition pos:start="148:24" pos:end="148:41">(<expr pos:start="148:25" pos:end="148:40"><name pos:start="148:25" pos:end="148:28">insn</name> <operator pos:start="148:30" pos:end="148:30">&amp;</operator> <operator pos:start="148:32" pos:end="148:32">(</operator><literal type="number" pos:start="148:33" pos:end="148:33">1</literal> <operator pos:start="148:35" pos:end="148:36">&lt;&lt;</operator> <literal type="number" pos:start="148:38" pos:end="148:39">22</literal><operator pos:start="148:40" pos:end="148:40">)</operator></expr>)</condition> <block pos:start="148:43" pos:end="154:21">{<block_content pos:start="150:25" pos:end="152:56">		<comment type="block" pos:start="148:57" pos:end="148:67">/* WSTRH */</comment>

                        <expr_stmt pos:start="150:25" pos:end="150:59"><expr pos:start="150:25" pos:end="150:58"><call pos:start="150:25" pos:end="150:58"><name pos:start="150:25" pos:end="150:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="150:46" pos:end="150:58">(<argument pos:start="150:47" pos:end="150:49"><expr pos:start="150:47" pos:end="150:49"><name pos:start="150:47" pos:end="150:49">tmp</name></expr></argument>, <argument pos:start="150:52" pos:end="150:57"><expr pos:start="150:52" pos:end="150:57"><name pos:start="150:52" pos:end="150:57">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="152:25" pos:end="152:56"><expr pos:start="152:25" pos:end="152:55"><call pos:start="152:25" pos:end="152:55"><name pos:start="152:25" pos:end="152:32">gen_st16</name><argument_list pos:start="152:33" pos:end="152:55">(<argument pos:start="152:34" pos:end="152:36"><expr pos:start="152:34" pos:end="152:36"><name pos:start="152:34" pos:end="152:36">tmp</name></expr></argument>, <argument pos:start="152:39" pos:end="152:42"><expr pos:start="152:39" pos:end="152:42"><name pos:start="152:39" pos:end="152:42">addr</name></expr></argument>, <argument pos:start="152:45" pos:end="152:54"><expr pos:start="152:45" pos:end="152:54"><call pos:start="152:45" pos:end="152:54"><name pos:start="152:45" pos:end="152:51">IS_USER</name><argument_list pos:start="152:52" pos:end="152:54">(<argument pos:start="152:53" pos:end="152:53"><expr pos:start="152:53" pos:end="152:53"><name pos:start="152:53" pos:end="152:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="154:23" pos:end="160:21">else <block pos:start="154:28" pos:end="160:21">{<block_content pos:start="156:25" pos:end="158:55">				<comment type="block" pos:start="154:57" pos:end="154:67">/* WSTRB */</comment>

                        <expr_stmt pos:start="156:25" pos:end="156:59"><expr pos:start="156:25" pos:end="156:58"><call pos:start="156:25" pos:end="156:58"><name pos:start="156:25" pos:end="156:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="156:46" pos:end="156:58">(<argument pos:start="156:47" pos:end="156:49"><expr pos:start="156:47" pos:end="156:49"><name pos:start="156:47" pos:end="156:49">tmp</name></expr></argument>, <argument pos:start="156:52" pos:end="156:57"><expr pos:start="156:52" pos:end="156:57"><name pos:start="156:52" pos:end="156:57">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="158:25" pos:end="158:55"><expr pos:start="158:25" pos:end="158:54"><call pos:start="158:25" pos:end="158:54"><name pos:start="158:25" pos:end="158:31">gen_st8</name><argument_list pos:start="158:32" pos:end="158:54">(<argument pos:start="158:33" pos:end="158:35"><expr pos:start="158:33" pos:end="158:35"><name pos:start="158:33" pos:end="158:35">tmp</name></expr></argument>, <argument pos:start="158:38" pos:end="158:41"><expr pos:start="158:38" pos:end="158:41"><name pos:start="158:38" pos:end="158:41">addr</name></expr></argument>, <argument pos:start="158:44" pos:end="158:53"><expr pos:start="158:44" pos:end="158:53"><call pos:start="158:44" pos:end="158:53"><name pos:start="158:44" pos:end="158:50">IS_USER</name><argument_list pos:start="158:51" pos:end="158:53">(<argument pos:start="158:52" pos:end="158:52"><expr pos:start="158:52" pos:end="158:52"><name pos:start="158:52" pos:end="158:52">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>


        <return pos:start="169:9" pos:end="169:17">return <expr pos:start="169:16" pos:end="169:16"><literal type="number" pos:start="169:16" pos:end="169:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="177:17"><if pos:start="175:5" pos:end="177:17">if <condition pos:start="175:8" pos:end="175:42">(<expr pos:start="175:9" pos:end="175:41"><operator pos:start="175:9" pos:end="175:9">(</operator><name pos:start="175:10" pos:end="175:13">insn</name> <operator pos:start="175:15" pos:end="175:15">&amp;</operator> <literal type="number" pos:start="175:17" pos:end="175:26">0x0f000000</literal><operator pos:start="175:27" pos:end="175:27">)</operator> <operator pos:start="175:29" pos:end="175:30">!=</operator> <literal type="number" pos:start="175:32" pos:end="175:41">0x0e000000</literal></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:17"><block_content pos:start="177:9" pos:end="177:17">

        <return pos:start="177:9" pos:end="177:17">return <expr pos:start="177:16" pos:end="177:16"><literal type="number" pos:start="177:16" pos:end="177:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="181:5" pos:end="1993:5">switch <condition pos:start="181:12" pos:end="181:58">(<expr pos:start="181:13" pos:end="181:57"><operator pos:start="181:13" pos:end="181:13">(</operator><operator pos:start="181:14" pos:end="181:14">(</operator><name pos:start="181:15" pos:end="181:18">insn</name> <operator pos:start="181:20" pos:end="181:21">&gt;&gt;</operator> <literal type="number" pos:start="181:23" pos:end="181:24">12</literal><operator pos:start="181:25" pos:end="181:25">)</operator> <operator pos:start="181:27" pos:end="181:27">&amp;</operator> <literal type="number" pos:start="181:29" pos:end="181:33">0xf00</literal><operator pos:start="181:34" pos:end="181:34">)</operator> <operator pos:start="181:36" pos:end="181:36">|</operator> <operator pos:start="181:38" pos:end="181:38">(</operator><operator pos:start="181:39" pos:end="181:39">(</operator><name pos:start="181:40" pos:end="181:43">insn</name> <operator pos:start="181:45" pos:end="181:46">&gt;&gt;</operator> <literal type="number" pos:start="181:48" pos:end="181:48">4</literal><operator pos:start="181:49" pos:end="181:49">)</operator> <operator pos:start="181:51" pos:end="181:51">&amp;</operator> <literal type="number" pos:start="181:53" pos:end="181:56">0xff</literal><operator pos:start="181:57" pos:end="181:57">)</operator></expr>)</condition> <block pos:start="181:60" pos:end="1993:5">{<block_content pos:start="183:5" pos:end="1991:17">

    <case pos:start="183:5" pos:end="183:15">case <expr pos:start="183:10" pos:end="183:14"><literal type="number" pos:start="183:10" pos:end="183:14">0x000</literal></expr>:</case>						<comment type="block" pos:start="183:57" pos:end="183:65">/* WOR */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:33"><expr pos:start="185:9" pos:end="185:32"><name pos:start="185:9" pos:end="185:11">wrd</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <operator pos:start="185:15" pos:end="185:15">(</operator><name pos:start="185:16" pos:end="185:19">insn</name> <operator pos:start="185:21" pos:end="185:22">&gt;&gt;</operator> <literal type="number" pos:start="185:24" pos:end="185:25">12</literal><operator pos:start="185:26" pos:end="185:26">)</operator> <operator pos:start="185:28" pos:end="185:28">&amp;</operator> <literal type="number" pos:start="185:30" pos:end="185:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:32"><expr pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:11">rd0</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <operator pos:start="187:15" pos:end="187:15">(</operator><name pos:start="187:16" pos:end="187:19">insn</name> <operator pos:start="187:21" pos:end="187:22">&gt;&gt;</operator> <literal type="number" pos:start="187:24" pos:end="187:24">0</literal><operator pos:start="187:25" pos:end="187:25">)</operator> <operator pos:start="187:27" pos:end="187:27">&amp;</operator> <literal type="number" pos:start="187:29" pos:end="187:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:33"><expr pos:start="189:9" pos:end="189:32"><name pos:start="189:9" pos:end="189:11">rd1</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <operator pos:start="189:15" pos:end="189:15">(</operator><name pos:start="189:16" pos:end="189:19">insn</name> <operator pos:start="189:21" pos:end="189:22">&gt;&gt;</operator> <literal type="number" pos:start="189:24" pos:end="189:25">16</literal><operator pos:start="189:26" pos:end="189:26">)</operator> <operator pos:start="189:28" pos:end="189:28">&amp;</operator> <literal type="number" pos:start="189:30" pos:end="189:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:39"><expr pos:start="191:9" pos:end="191:38"><call pos:start="191:9" pos:end="191:38"><name pos:start="191:9" pos:end="191:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="191:34" pos:end="191:38">(<argument pos:start="191:35" pos:end="191:37"><expr pos:start="191:35" pos:end="191:37"><name pos:start="191:35" pos:end="191:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:38"><expr pos:start="193:9" pos:end="193:37"><call pos:start="193:9" pos:end="193:37"><name pos:start="193:9" pos:end="193:32">gen_op_iwmmxt_orq_M0_wRn</name><argument_list pos:start="193:33" pos:end="193:37">(<argument pos:start="193:34" pos:end="193:36"><expr pos:start="193:34" pos:end="193:36"><name pos:start="193:34" pos:end="193:36">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:34"><expr pos:start="195:9" pos:end="195:33"><call pos:start="195:9" pos:end="195:33"><name pos:start="195:9" pos:end="195:31">gen_op_iwmmxt_setpsr_nz</name><argument_list pos:start="195:32" pos:end="195:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:39"><expr pos:start="197:9" pos:end="197:38"><call pos:start="197:9" pos:end="197:38"><name pos:start="197:9" pos:end="197:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="197:34" pos:end="197:38">(<argument pos:start="197:35" pos:end="197:37"><expr pos:start="197:35" pos:end="197:37"><name pos:start="197:35" pos:end="197:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:32"><expr pos:start="199:9" pos:end="199:31"><call pos:start="199:9" pos:end="199:31"><name pos:start="199:9" pos:end="199:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="199:30" pos:end="199:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:32"><expr pos:start="201:9" pos:end="201:31"><call pos:start="201:9" pos:end="201:31"><name pos:start="201:9" pos:end="201:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="201:30" pos:end="201:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:15">case <expr pos:start="205:10" pos:end="205:14"><literal type="number" pos:start="205:10" pos:end="205:14">0x011</literal></expr>:</case>						<comment type="block" pos:start="205:57" pos:end="205:66">/* TMCR */</comment>

        <if_stmt pos:start="207:9" pos:end="209:21"><if pos:start="207:9" pos:end="209:21">if <condition pos:start="207:12" pos:end="207:23">(<expr pos:start="207:13" pos:end="207:22"><name pos:start="207:13" pos:end="207:16">insn</name> <operator pos:start="207:18" pos:end="207:18">&amp;</operator> <literal type="number" pos:start="207:20" pos:end="207:22">0xf</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:21"><block_content pos:start="209:13" pos:end="209:21">

            <return pos:start="209:13" pos:end="209:21">return <expr pos:start="209:20" pos:end="209:20"><literal type="number" pos:start="209:20" pos:end="209:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:32"><expr pos:start="211:9" pos:end="211:31"><name pos:start="211:9" pos:end="211:10">rd</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <operator pos:start="211:14" pos:end="211:14">(</operator><name pos:start="211:15" pos:end="211:18">insn</name> <operator pos:start="211:20" pos:end="211:21">&gt;&gt;</operator> <literal type="number" pos:start="211:23" pos:end="211:24">12</literal><operator pos:start="211:25" pos:end="211:25">)</operator> <operator pos:start="211:27" pos:end="211:27">&amp;</operator> <literal type="number" pos:start="211:29" pos:end="211:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:33"><expr pos:start="213:9" pos:end="213:32"><name pos:start="213:9" pos:end="213:11">wrd</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <operator pos:start="213:15" pos:end="213:15">(</operator><name pos:start="213:16" pos:end="213:19">insn</name> <operator pos:start="213:21" pos:end="213:22">&gt;&gt;</operator> <literal type="number" pos:start="213:24" pos:end="213:25">16</literal><operator pos:start="213:26" pos:end="213:26">)</operator> <operator pos:start="213:28" pos:end="213:28">&amp;</operator> <literal type="number" pos:start="213:30" pos:end="213:32">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="215:9" pos:end="263:9">switch <condition pos:start="215:16" pos:end="215:20">(<expr pos:start="215:17" pos:end="215:19"><name pos:start="215:17" pos:end="215:19">wrd</name></expr>)</condition> <block pos:start="215:22" pos:end="263:9">{<block_content pos:start="217:9" pos:end="261:21">

        <case pos:start="217:9" pos:end="217:29">case <expr pos:start="217:14" pos:end="217:28"><name pos:start="217:14" pos:end="217:28">ARM_IWMMXT_wCID</name></expr>:</case>

        <case pos:start="219:9" pos:end="219:30">case <expr pos:start="219:14" pos:end="219:29"><name pos:start="219:14" pos:end="219:29">ARM_IWMMXT_wCASF</name></expr>:</case>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        <case pos:start="223:9" pos:end="223:29">case <expr pos:start="223:14" pos:end="223:28"><name pos:start="223:14" pos:end="223:28">ARM_IWMMXT_wCon</name></expr>:</case>

            <expr_stmt pos:start="225:13" pos:end="225:36"><expr pos:start="225:13" pos:end="225:35"><call pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:33">gen_op_iwmmxt_set_cup</name><argument_list pos:start="225:34" pos:end="225:35">()</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="227:13" pos:end="227:32">/* Fall through.  */</comment>

        <case pos:start="229:9" pos:end="229:30">case <expr pos:start="229:14" pos:end="229:29"><name pos:start="229:14" pos:end="229:29">ARM_IWMMXT_wCSSF</name></expr>:</case>

            <expr_stmt pos:start="231:13" pos:end="231:40"><expr pos:start="231:13" pos:end="231:39"><name pos:start="231:13" pos:end="231:15">tmp</name> <operator pos:start="231:17" pos:end="231:17">=</operator> <call pos:start="231:19" pos:end="231:39"><name pos:start="231:19" pos:end="231:34">iwmmxt_load_creg</name><argument_list pos:start="231:35" pos:end="231:39">(<argument pos:start="231:36" pos:end="231:38"><expr pos:start="231:36" pos:end="231:38"><name pos:start="231:36" pos:end="231:38">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:35"><expr pos:start="233:13" pos:end="233:34"><name pos:start="233:13" pos:end="233:16">tmp2</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <call pos:start="233:20" pos:end="233:34"><name pos:start="233:20" pos:end="233:27">load_reg</name><argument_list pos:start="233:28" pos:end="233:34">(<argument pos:start="233:29" pos:end="233:29"><expr pos:start="233:29" pos:end="233:29"><name pos:start="233:29" pos:end="233:29">s</name></expr></argument>, <argument pos:start="233:32" pos:end="233:33"><expr pos:start="233:32" pos:end="233:33"><name pos:start="233:32" pos:end="233:33">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:45"><expr pos:start="235:13" pos:end="235:44"><call pos:start="235:13" pos:end="235:44"><name pos:start="235:13" pos:end="235:28">tcg_gen_andc_i32</name><argument_list pos:start="235:29" pos:end="235:44">(<argument pos:start="235:30" pos:end="235:32"><expr pos:start="235:30" pos:end="235:32"><name pos:start="235:30" pos:end="235:32">tmp</name></expr></argument>, <argument pos:start="235:35" pos:end="235:37"><expr pos:start="235:35" pos:end="235:37"><name pos:start="235:35" pos:end="235:37">tmp</name></expr></argument>, <argument pos:start="235:40" pos:end="235:43"><expr pos:start="235:40" pos:end="235:43"><name pos:start="235:40" pos:end="235:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:27"><expr pos:start="237:13" pos:end="237:26"><call pos:start="237:13" pos:end="237:26"><name pos:start="237:13" pos:end="237:20">dead_tmp</name><argument_list pos:start="237:21" pos:end="237:26">(<argument pos:start="237:22" pos:end="237:25"><expr pos:start="237:22" pos:end="237:25"><name pos:start="237:22" pos:end="237:25">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:40"><expr pos:start="239:13" pos:end="239:39"><call pos:start="239:13" pos:end="239:39"><name pos:start="239:13" pos:end="239:29">iwmmxt_store_creg</name><argument_list pos:start="239:30" pos:end="239:39">(<argument pos:start="239:31" pos:end="239:33"><expr pos:start="239:31" pos:end="239:33"><name pos:start="239:31" pos:end="239:33">wrd</name></expr></argument>, <argument pos:start="239:36" pos:end="239:38"><expr pos:start="239:36" pos:end="239:38"><name pos:start="239:36" pos:end="239:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="243:30">case <expr pos:start="243:14" pos:end="243:29"><name pos:start="243:14" pos:end="243:29">ARM_IWMMXT_wCGR0</name></expr>:</case>

        <case pos:start="245:9" pos:end="245:30">case <expr pos:start="245:14" pos:end="245:29"><name pos:start="245:14" pos:end="245:29">ARM_IWMMXT_wCGR1</name></expr>:</case>

        <case pos:start="247:9" pos:end="247:30">case <expr pos:start="247:14" pos:end="247:29"><name pos:start="247:14" pos:end="247:29">ARM_IWMMXT_wCGR2</name></expr>:</case>

        <case pos:start="249:9" pos:end="249:30">case <expr pos:start="249:14" pos:end="249:29"><name pos:start="249:14" pos:end="249:29">ARM_IWMMXT_wCGR3</name></expr>:</case>

            <expr_stmt pos:start="251:13" pos:end="251:36"><expr pos:start="251:13" pos:end="251:35"><call pos:start="251:13" pos:end="251:35"><name pos:start="251:13" pos:end="251:33">gen_op_iwmmxt_set_cup</name><argument_list pos:start="251:34" pos:end="251:35">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:34"><expr pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:15">tmp</name> <operator pos:start="253:17" pos:end="253:17">=</operator> <call pos:start="253:19" pos:end="253:33"><name pos:start="253:19" pos:end="253:26">load_reg</name><argument_list pos:start="253:27" pos:end="253:33">(<argument pos:start="253:28" pos:end="253:28"><expr pos:start="253:28" pos:end="253:28"><name pos:start="253:28" pos:end="253:28">s</name></expr></argument>, <argument pos:start="253:31" pos:end="253:32"><expr pos:start="253:31" pos:end="253:32"><name pos:start="253:31" pos:end="253:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:40"><expr pos:start="255:13" pos:end="255:39"><call pos:start="255:13" pos:end="255:39"><name pos:start="255:13" pos:end="255:29">iwmmxt_store_creg</name><argument_list pos:start="255:30" pos:end="255:39">(<argument pos:start="255:31" pos:end="255:33"><expr pos:start="255:31" pos:end="255:33"><name pos:start="255:31" pos:end="255:33">wrd</name></expr></argument>, <argument pos:start="255:36" pos:end="255:38"><expr pos:start="255:36" pos:end="255:38"><name pos:start="255:36" pos:end="255:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="257:13" pos:end="257:18">break;</break>

        <default pos:start="259:9" pos:end="259:16">default:</default>

            <return pos:start="261:13" pos:end="261:21">return <expr pos:start="261:20" pos:end="261:20"><literal type="number" pos:start="261:20" pos:end="261:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <case pos:start="267:5" pos:end="267:15">case <expr pos:start="267:10" pos:end="267:14"><literal type="number" pos:start="267:10" pos:end="267:14">0x100</literal></expr>:</case>						<comment type="block" pos:start="267:57" pos:end="267:66">/* WXOR */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:33"><expr pos:start="269:9" pos:end="269:32"><name pos:start="269:9" pos:end="269:11">wrd</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <operator pos:start="269:15" pos:end="269:15">(</operator><name pos:start="269:16" pos:end="269:19">insn</name> <operator pos:start="269:21" pos:end="269:22">&gt;&gt;</operator> <literal type="number" pos:start="269:24" pos:end="269:25">12</literal><operator pos:start="269:26" pos:end="269:26">)</operator> <operator pos:start="269:28" pos:end="269:28">&amp;</operator> <literal type="number" pos:start="269:30" pos:end="269:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:32"><expr pos:start="271:9" pos:end="271:31"><name pos:start="271:9" pos:end="271:11">rd0</name> <operator pos:start="271:13" pos:end="271:13">=</operator> <operator pos:start="271:15" pos:end="271:15">(</operator><name pos:start="271:16" pos:end="271:19">insn</name> <operator pos:start="271:21" pos:end="271:22">&gt;&gt;</operator> <literal type="number" pos:start="271:24" pos:end="271:24">0</literal><operator pos:start="271:25" pos:end="271:25">)</operator> <operator pos:start="271:27" pos:end="271:27">&amp;</operator> <literal type="number" pos:start="271:29" pos:end="271:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:33"><expr pos:start="273:9" pos:end="273:32"><name pos:start="273:9" pos:end="273:11">rd1</name> <operator pos:start="273:13" pos:end="273:13">=</operator> <operator pos:start="273:15" pos:end="273:15">(</operator><name pos:start="273:16" pos:end="273:19">insn</name> <operator pos:start="273:21" pos:end="273:22">&gt;&gt;</operator> <literal type="number" pos:start="273:24" pos:end="273:25">16</literal><operator pos:start="273:26" pos:end="273:26">)</operator> <operator pos:start="273:28" pos:end="273:28">&amp;</operator> <literal type="number" pos:start="273:30" pos:end="273:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:39"><expr pos:start="275:9" pos:end="275:38"><call pos:start="275:9" pos:end="275:38"><name pos:start="275:9" pos:end="275:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="275:34" pos:end="275:38">(<argument pos:start="275:35" pos:end="275:37"><expr pos:start="275:35" pos:end="275:37"><name pos:start="275:35" pos:end="275:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:39"><expr pos:start="277:9" pos:end="277:38"><call pos:start="277:9" pos:end="277:38"><name pos:start="277:9" pos:end="277:33">gen_op_iwmmxt_xorq_M0_wRn</name><argument_list pos:start="277:34" pos:end="277:38">(<argument pos:start="277:35" pos:end="277:37"><expr pos:start="277:35" pos:end="277:37"><name pos:start="277:35" pos:end="277:37">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:34"><expr pos:start="279:9" pos:end="279:33"><call pos:start="279:9" pos:end="279:33"><name pos:start="279:9" pos:end="279:31">gen_op_iwmmxt_setpsr_nz</name><argument_list pos:start="279:32" pos:end="279:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:39"><expr pos:start="281:9" pos:end="281:38"><call pos:start="281:9" pos:end="281:38"><name pos:start="281:9" pos:end="281:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="281:34" pos:end="281:38">(<argument pos:start="281:35" pos:end="281:37"><expr pos:start="281:35" pos:end="281:37"><name pos:start="281:35" pos:end="281:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:32"><expr pos:start="283:9" pos:end="283:31"><call pos:start="283:9" pos:end="283:31"><name pos:start="283:9" pos:end="283:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="283:30" pos:end="283:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:32"><expr pos:start="285:9" pos:end="285:31"><call pos:start="285:9" pos:end="285:31"><name pos:start="285:9" pos:end="285:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="285:30" pos:end="285:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="287:9" pos:end="287:14">break;</break>

    <case pos:start="289:5" pos:end="289:15">case <expr pos:start="289:10" pos:end="289:14"><literal type="number" pos:start="289:10" pos:end="289:14">0x111</literal></expr>:</case>						<comment type="block" pos:start="289:57" pos:end="289:66">/* TMRC */</comment>

        <if_stmt pos:start="291:9" pos:end="293:21"><if pos:start="291:9" pos:end="293:21">if <condition pos:start="291:12" pos:end="291:23">(<expr pos:start="291:13" pos:end="291:22"><name pos:start="291:13" pos:end="291:16">insn</name> <operator pos:start="291:18" pos:end="291:18">&amp;</operator> <literal type="number" pos:start="291:20" pos:end="291:22">0xf</literal></expr>)</condition><block type="pseudo" pos:start="293:13" pos:end="293:21"><block_content pos:start="293:13" pos:end="293:21">

            <return pos:start="293:13" pos:end="293:21">return <expr pos:start="293:20" pos:end="293:20"><literal type="number" pos:start="293:20" pos:end="293:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:32"><expr pos:start="295:9" pos:end="295:31"><name pos:start="295:9" pos:end="295:10">rd</name> <operator pos:start="295:12" pos:end="295:12">=</operator> <operator pos:start="295:14" pos:end="295:14">(</operator><name pos:start="295:15" pos:end="295:18">insn</name> <operator pos:start="295:20" pos:end="295:21">&gt;&gt;</operator> <literal type="number" pos:start="295:23" pos:end="295:24">12</literal><operator pos:start="295:25" pos:end="295:25">)</operator> <operator pos:start="295:27" pos:end="295:27">&amp;</operator> <literal type="number" pos:start="295:29" pos:end="295:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:33"><expr pos:start="297:9" pos:end="297:32"><name pos:start="297:9" pos:end="297:11">wrd</name> <operator pos:start="297:13" pos:end="297:13">=</operator> <operator pos:start="297:15" pos:end="297:15">(</operator><name pos:start="297:16" pos:end="297:19">insn</name> <operator pos:start="297:21" pos:end="297:22">&gt;&gt;</operator> <literal type="number" pos:start="297:24" pos:end="297:25">16</literal><operator pos:start="297:26" pos:end="297:26">)</operator> <operator pos:start="297:28" pos:end="297:28">&amp;</operator> <literal type="number" pos:start="297:30" pos:end="297:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:36"><expr pos:start="299:9" pos:end="299:35"><name pos:start="299:9" pos:end="299:11">tmp</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <call pos:start="299:15" pos:end="299:35"><name pos:start="299:15" pos:end="299:30">iwmmxt_load_creg</name><argument_list pos:start="299:31" pos:end="299:35">(<argument pos:start="299:32" pos:end="299:34"><expr pos:start="299:32" pos:end="299:34"><name pos:start="299:32" pos:end="299:34">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:30"><expr pos:start="301:9" pos:end="301:29"><call pos:start="301:9" pos:end="301:29"><name pos:start="301:9" pos:end="301:17">store_reg</name><argument_list pos:start="301:18" pos:end="301:29">(<argument pos:start="301:19" pos:end="301:19"><expr pos:start="301:19" pos:end="301:19"><name pos:start="301:19" pos:end="301:19">s</name></expr></argument>, <argument pos:start="301:22" pos:end="301:23"><expr pos:start="301:22" pos:end="301:23"><name pos:start="301:22" pos:end="301:23">rd</name></expr></argument>, <argument pos:start="301:26" pos:end="301:28"><expr pos:start="301:26" pos:end="301:28"><name pos:start="301:26" pos:end="301:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="303:9" pos:end="303:14">break;</break>

    <case pos:start="305:5" pos:end="305:15">case <expr pos:start="305:10" pos:end="305:14"><literal type="number" pos:start="305:10" pos:end="305:14">0x300</literal></expr>:</case>						<comment type="block" pos:start="305:57" pos:end="305:67">/* WANDN */</comment>

        <expr_stmt pos:start="307:9" pos:end="307:33"><expr pos:start="307:9" pos:end="307:32"><name pos:start="307:9" pos:end="307:11">wrd</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <operator pos:start="307:15" pos:end="307:15">(</operator><name pos:start="307:16" pos:end="307:19">insn</name> <operator pos:start="307:21" pos:end="307:22">&gt;&gt;</operator> <literal type="number" pos:start="307:24" pos:end="307:25">12</literal><operator pos:start="307:26" pos:end="307:26">)</operator> <operator pos:start="307:28" pos:end="307:28">&amp;</operator> <literal type="number" pos:start="307:30" pos:end="307:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:32"><expr pos:start="309:9" pos:end="309:31"><name pos:start="309:9" pos:end="309:11">rd0</name> <operator pos:start="309:13" pos:end="309:13">=</operator> <operator pos:start="309:15" pos:end="309:15">(</operator><name pos:start="309:16" pos:end="309:19">insn</name> <operator pos:start="309:21" pos:end="309:22">&gt;&gt;</operator> <literal type="number" pos:start="309:24" pos:end="309:24">0</literal><operator pos:start="309:25" pos:end="309:25">)</operator> <operator pos:start="309:27" pos:end="309:27">&amp;</operator> <literal type="number" pos:start="309:29" pos:end="309:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:33"><expr pos:start="311:9" pos:end="311:32"><name pos:start="311:9" pos:end="311:11">rd1</name> <operator pos:start="311:13" pos:end="311:13">=</operator> <operator pos:start="311:15" pos:end="311:15">(</operator><name pos:start="311:16" pos:end="311:19">insn</name> <operator pos:start="311:21" pos:end="311:22">&gt;&gt;</operator> <literal type="number" pos:start="311:24" pos:end="311:25">16</literal><operator pos:start="311:26" pos:end="311:26">)</operator> <operator pos:start="311:28" pos:end="311:28">&amp;</operator> <literal type="number" pos:start="311:30" pos:end="311:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:39"><expr pos:start="313:9" pos:end="313:38"><call pos:start="313:9" pos:end="313:38"><name pos:start="313:9" pos:end="313:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="313:34" pos:end="313:38">(<argument pos:start="313:35" pos:end="313:37"><expr pos:start="313:35" pos:end="313:37"><name pos:start="313:35" pos:end="313:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:40"><expr pos:start="315:9" pos:end="315:39"><call pos:start="315:9" pos:end="315:39"><name pos:start="315:9" pos:end="315:23">tcg_gen_neg_i64</name><argument_list pos:start="315:24" pos:end="315:39">(<argument pos:start="315:25" pos:end="315:30"><expr pos:start="315:25" pos:end="315:30"><name pos:start="315:25" pos:end="315:30">cpu_M0</name></expr></argument>, <argument pos:start="315:33" pos:end="315:38"><expr pos:start="315:33" pos:end="315:38"><name pos:start="315:33" pos:end="315:38">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:39"><expr pos:start="317:9" pos:end="317:38"><call pos:start="317:9" pos:end="317:38"><name pos:start="317:9" pos:end="317:33">gen_op_iwmmxt_andq_M0_wRn</name><argument_list pos:start="317:34" pos:end="317:38">(<argument pos:start="317:35" pos:end="317:37"><expr pos:start="317:35" pos:end="317:37"><name pos:start="317:35" pos:end="317:37">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:34"><expr pos:start="319:9" pos:end="319:33"><call pos:start="319:9" pos:end="319:33"><name pos:start="319:9" pos:end="319:31">gen_op_iwmmxt_setpsr_nz</name><argument_list pos:start="319:32" pos:end="319:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:39"><expr pos:start="321:9" pos:end="321:38"><call pos:start="321:9" pos:end="321:38"><name pos:start="321:9" pos:end="321:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="321:34" pos:end="321:38">(<argument pos:start="321:35" pos:end="321:37"><expr pos:start="321:35" pos:end="321:37"><name pos:start="321:35" pos:end="321:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:32"><expr pos:start="323:9" pos:end="323:31"><call pos:start="323:9" pos:end="323:31"><name pos:start="323:9" pos:end="323:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="323:30" pos:end="323:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:32"><expr pos:start="325:9" pos:end="325:31"><call pos:start="325:9" pos:end="325:31"><name pos:start="325:9" pos:end="325:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="325:30" pos:end="325:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="327:9" pos:end="327:14">break;</break>

    <case pos:start="329:5" pos:end="329:15">case <expr pos:start="329:10" pos:end="329:14"><literal type="number" pos:start="329:10" pos:end="329:14">0x200</literal></expr>:</case>						<comment type="block" pos:start="329:57" pos:end="329:66">/* WAND */</comment>

        <expr_stmt pos:start="331:9" pos:end="331:33"><expr pos:start="331:9" pos:end="331:32"><name pos:start="331:9" pos:end="331:11">wrd</name> <operator pos:start="331:13" pos:end="331:13">=</operator> <operator pos:start="331:15" pos:end="331:15">(</operator><name pos:start="331:16" pos:end="331:19">insn</name> <operator pos:start="331:21" pos:end="331:22">&gt;&gt;</operator> <literal type="number" pos:start="331:24" pos:end="331:25">12</literal><operator pos:start="331:26" pos:end="331:26">)</operator> <operator pos:start="331:28" pos:end="331:28">&amp;</operator> <literal type="number" pos:start="331:30" pos:end="331:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:32"><expr pos:start="333:9" pos:end="333:31"><name pos:start="333:9" pos:end="333:11">rd0</name> <operator pos:start="333:13" pos:end="333:13">=</operator> <operator pos:start="333:15" pos:end="333:15">(</operator><name pos:start="333:16" pos:end="333:19">insn</name> <operator pos:start="333:21" pos:end="333:22">&gt;&gt;</operator> <literal type="number" pos:start="333:24" pos:end="333:24">0</literal><operator pos:start="333:25" pos:end="333:25">)</operator> <operator pos:start="333:27" pos:end="333:27">&amp;</operator> <literal type="number" pos:start="333:29" pos:end="333:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:33"><expr pos:start="335:9" pos:end="335:32"><name pos:start="335:9" pos:end="335:11">rd1</name> <operator pos:start="335:13" pos:end="335:13">=</operator> <operator pos:start="335:15" pos:end="335:15">(</operator><name pos:start="335:16" pos:end="335:19">insn</name> <operator pos:start="335:21" pos:end="335:22">&gt;&gt;</operator> <literal type="number" pos:start="335:24" pos:end="335:25">16</literal><operator pos:start="335:26" pos:end="335:26">)</operator> <operator pos:start="335:28" pos:end="335:28">&amp;</operator> <literal type="number" pos:start="335:30" pos:end="335:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:39"><expr pos:start="337:9" pos:end="337:38"><call pos:start="337:9" pos:end="337:38"><name pos:start="337:9" pos:end="337:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="337:34" pos:end="337:38">(<argument pos:start="337:35" pos:end="337:37"><expr pos:start="337:35" pos:end="337:37"><name pos:start="337:35" pos:end="337:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:39"><expr pos:start="339:9" pos:end="339:38"><call pos:start="339:9" pos:end="339:38"><name pos:start="339:9" pos:end="339:33">gen_op_iwmmxt_andq_M0_wRn</name><argument_list pos:start="339:34" pos:end="339:38">(<argument pos:start="339:35" pos:end="339:37"><expr pos:start="339:35" pos:end="339:37"><name pos:start="339:35" pos:end="339:37">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:34"><expr pos:start="341:9" pos:end="341:33"><call pos:start="341:9" pos:end="341:33"><name pos:start="341:9" pos:end="341:31">gen_op_iwmmxt_setpsr_nz</name><argument_list pos:start="341:32" pos:end="341:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:39"><expr pos:start="343:9" pos:end="343:38"><call pos:start="343:9" pos:end="343:38"><name pos:start="343:9" pos:end="343:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="343:34" pos:end="343:38">(<argument pos:start="343:35" pos:end="343:37"><expr pos:start="343:35" pos:end="343:37"><name pos:start="343:35" pos:end="343:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:32"><expr pos:start="345:9" pos:end="345:31"><call pos:start="345:9" pos:end="345:31"><name pos:start="345:9" pos:end="345:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="345:30" pos:end="345:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:32"><expr pos:start="347:9" pos:end="347:31"><call pos:start="347:9" pos:end="347:31"><name pos:start="347:9" pos:end="347:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="347:30" pos:end="347:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="349:9" pos:end="349:14">break;</break>

    <case pos:start="351:5" pos:end="351:15">case <expr pos:start="351:10" pos:end="351:14"><literal type="number" pos:start="351:10" pos:end="351:14">0x810</literal></expr>:</case> <case pos:start="351:17" pos:end="351:27">case <expr pos:start="351:22" pos:end="351:26"><literal type="number" pos:start="351:22" pos:end="351:26">0xa10</literal></expr>:</case>				<comment type="block" pos:start="351:57" pos:end="351:67">/* WMADD */</comment>

        <expr_stmt pos:start="353:9" pos:end="353:33"><expr pos:start="353:9" pos:end="353:32"><name pos:start="353:9" pos:end="353:11">wrd</name> <operator pos:start="353:13" pos:end="353:13">=</operator> <operator pos:start="353:15" pos:end="353:15">(</operator><name pos:start="353:16" pos:end="353:19">insn</name> <operator pos:start="353:21" pos:end="353:22">&gt;&gt;</operator> <literal type="number" pos:start="353:24" pos:end="353:25">12</literal><operator pos:start="353:26" pos:end="353:26">)</operator> <operator pos:start="353:28" pos:end="353:28">&amp;</operator> <literal type="number" pos:start="353:30" pos:end="353:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:32"><expr pos:start="355:9" pos:end="355:31"><name pos:start="355:9" pos:end="355:11">rd0</name> <operator pos:start="355:13" pos:end="355:13">=</operator> <operator pos:start="355:15" pos:end="355:15">(</operator><name pos:start="355:16" pos:end="355:19">insn</name> <operator pos:start="355:21" pos:end="355:22">&gt;&gt;</operator> <literal type="number" pos:start="355:24" pos:end="355:24">0</literal><operator pos:start="355:25" pos:end="355:25">)</operator> <operator pos:start="355:27" pos:end="355:27">&amp;</operator> <literal type="number" pos:start="355:29" pos:end="355:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:33"><expr pos:start="357:9" pos:end="357:32"><name pos:start="357:9" pos:end="357:11">rd1</name> <operator pos:start="357:13" pos:end="357:13">=</operator> <operator pos:start="357:15" pos:end="357:15">(</operator><name pos:start="357:16" pos:end="357:19">insn</name> <operator pos:start="357:21" pos:end="357:22">&gt;&gt;</operator> <literal type="number" pos:start="357:24" pos:end="357:25">16</literal><operator pos:start="357:26" pos:end="357:26">)</operator> <operator pos:start="357:28" pos:end="357:28">&amp;</operator> <literal type="number" pos:start="357:30" pos:end="357:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:39"><expr pos:start="359:9" pos:end="359:38"><call pos:start="359:9" pos:end="359:38"><name pos:start="359:9" pos:end="359:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="359:34" pos:end="359:38">(<argument pos:start="359:35" pos:end="359:37"><expr pos:start="359:35" pos:end="359:37"><name pos:start="359:35" pos:end="359:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="367:45"><if pos:start="361:9" pos:end="363:45">if <condition pos:start="361:12" pos:end="361:29">(<expr pos:start="361:13" pos:end="361:28"><name pos:start="361:13" pos:end="361:16">insn</name> <operator pos:start="361:18" pos:end="361:18">&amp;</operator> <operator pos:start="361:20" pos:end="361:20">(</operator><literal type="number" pos:start="361:21" pos:end="361:21">1</literal> <operator pos:start="361:23" pos:end="361:24">&lt;&lt;</operator> <literal type="number" pos:start="361:26" pos:end="361:27">21</literal><operator pos:start="361:28" pos:end="361:28">)</operator></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:45"><block_content pos:start="363:13" pos:end="363:45">

            <expr_stmt pos:start="363:13" pos:end="363:45"><expr pos:start="363:13" pos:end="363:44"><call pos:start="363:13" pos:end="363:44"><name pos:start="363:13" pos:end="363:39">gen_op_iwmmxt_maddsq_M0_wRn</name><argument_list pos:start="363:40" pos:end="363:44">(<argument pos:start="363:41" pos:end="363:43"><expr pos:start="363:41" pos:end="363:43"><name pos:start="363:41" pos:end="363:43">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="365:9" pos:end="367:45">else<block type="pseudo" pos:start="367:13" pos:end="367:45"><block_content pos:start="367:13" pos:end="367:45">

            <expr_stmt pos:start="367:13" pos:end="367:45"><expr pos:start="367:13" pos:end="367:44"><call pos:start="367:13" pos:end="367:44"><name pos:start="367:13" pos:end="367:39">gen_op_iwmmxt_madduq_M0_wRn</name><argument_list pos:start="367:40" pos:end="367:44">(<argument pos:start="367:41" pos:end="367:43"><expr pos:start="367:41" pos:end="367:43"><name pos:start="367:41" pos:end="367:43">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:39"><expr pos:start="369:9" pos:end="369:38"><call pos:start="369:9" pos:end="369:38"><name pos:start="369:9" pos:end="369:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="369:34" pos:end="369:38">(<argument pos:start="369:35" pos:end="369:37"><expr pos:start="369:35" pos:end="369:37"><name pos:start="369:35" pos:end="369:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:32"><expr pos:start="371:9" pos:end="371:31"><call pos:start="371:9" pos:end="371:31"><name pos:start="371:9" pos:end="371:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="371:30" pos:end="371:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="373:9" pos:end="373:14">break;</break>

    <case pos:start="375:5" pos:end="375:15">case <expr pos:start="375:10" pos:end="375:14"><literal type="number" pos:start="375:10" pos:end="375:14">0x10e</literal></expr>:</case> <case pos:start="375:17" pos:end="375:27">case <expr pos:start="375:22" pos:end="375:26"><literal type="number" pos:start="375:22" pos:end="375:26">0x50e</literal></expr>:</case> <case pos:start="375:29" pos:end="375:39">case <expr pos:start="375:34" pos:end="375:38"><literal type="number" pos:start="375:34" pos:end="375:38">0x90e</literal></expr>:</case> <case pos:start="375:41" pos:end="375:51">case <expr pos:start="375:46" pos:end="375:50"><literal type="number" pos:start="375:46" pos:end="375:50">0xd0e</literal></expr>:</case>	<comment type="block" pos:start="375:57" pos:end="375:70">/* WUNPCKIL */</comment>

        <expr_stmt pos:start="377:9" pos:end="377:33"><expr pos:start="377:9" pos:end="377:32"><name pos:start="377:9" pos:end="377:11">wrd</name> <operator pos:start="377:13" pos:end="377:13">=</operator> <operator pos:start="377:15" pos:end="377:15">(</operator><name pos:start="377:16" pos:end="377:19">insn</name> <operator pos:start="377:21" pos:end="377:22">&gt;&gt;</operator> <literal type="number" pos:start="377:24" pos:end="377:25">12</literal><operator pos:start="377:26" pos:end="377:26">)</operator> <operator pos:start="377:28" pos:end="377:28">&amp;</operator> <literal type="number" pos:start="377:30" pos:end="377:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:33"><expr pos:start="379:9" pos:end="379:32"><name pos:start="379:9" pos:end="379:11">rd0</name> <operator pos:start="379:13" pos:end="379:13">=</operator> <operator pos:start="379:15" pos:end="379:15">(</operator><name pos:start="379:16" pos:end="379:19">insn</name> <operator pos:start="379:21" pos:end="379:22">&gt;&gt;</operator> <literal type="number" pos:start="379:24" pos:end="379:25">16</literal><operator pos:start="379:26" pos:end="379:26">)</operator> <operator pos:start="379:28" pos:end="379:28">&amp;</operator> <literal type="number" pos:start="379:30" pos:end="379:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:32"><expr pos:start="381:9" pos:end="381:31"><name pos:start="381:9" pos:end="381:11">rd1</name> <operator pos:start="381:13" pos:end="381:13">=</operator> <operator pos:start="381:15" pos:end="381:15">(</operator><name pos:start="381:16" pos:end="381:19">insn</name> <operator pos:start="381:21" pos:end="381:22">&gt;&gt;</operator> <literal type="number" pos:start="381:24" pos:end="381:24">0</literal><operator pos:start="381:25" pos:end="381:25">)</operator> <operator pos:start="381:27" pos:end="381:27">&amp;</operator> <literal type="number" pos:start="381:29" pos:end="381:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:39"><expr pos:start="383:9" pos:end="383:38"><call pos:start="383:9" pos:end="383:38"><name pos:start="383:9" pos:end="383:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="383:34" pos:end="383:38">(<argument pos:start="383:35" pos:end="383:37"><expr pos:start="383:35" pos:end="383:37"><name pos:start="383:35" pos:end="383:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="385:9" pos:end="409:9">switch <condition pos:start="385:16" pos:end="385:33">(<expr pos:start="385:17" pos:end="385:32"><operator pos:start="385:17" pos:end="385:17">(</operator><name pos:start="385:18" pos:end="385:21">insn</name> <operator pos:start="385:23" pos:end="385:24">&gt;&gt;</operator> <literal type="number" pos:start="385:26" pos:end="385:27">22</literal><operator pos:start="385:28" pos:end="385:28">)</operator> <operator pos:start="385:30" pos:end="385:30">&amp;</operator> <literal type="number" pos:start="385:32" pos:end="385:32">3</literal></expr>)</condition> <block pos:start="385:35" pos:end="409:9">{<block_content pos:start="387:9" pos:end="407:21">

        <case pos:start="387:9" pos:end="387:15">case <expr pos:start="387:14" pos:end="387:14"><literal type="number" pos:start="387:14" pos:end="387:14">0</literal></expr>:</case>

            <expr_stmt pos:start="389:13" pos:end="389:47"><expr pos:start="389:13" pos:end="389:46"><call pos:start="389:13" pos:end="389:46"><name pos:start="389:13" pos:end="389:41">gen_op_iwmmxt_unpacklb_M0_wRn</name><argument_list pos:start="389:42" pos:end="389:46">(<argument pos:start="389:43" pos:end="389:45"><expr pos:start="389:43" pos:end="389:45"><name pos:start="389:43" pos:end="389:45">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:15">case <expr pos:start="393:14" pos:end="393:14"><literal type="number" pos:start="393:14" pos:end="393:14">1</literal></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:47"><expr pos:start="395:13" pos:end="395:46"><call pos:start="395:13" pos:end="395:46"><name pos:start="395:13" pos:end="395:41">gen_op_iwmmxt_unpacklw_M0_wRn</name><argument_list pos:start="395:42" pos:end="395:46">(<argument pos:start="395:43" pos:end="395:45"><expr pos:start="395:43" pos:end="395:45"><name pos:start="395:43" pos:end="395:45">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <case pos:start="399:9" pos:end="399:15">case <expr pos:start="399:14" pos:end="399:14"><literal type="number" pos:start="399:14" pos:end="399:14">2</literal></expr>:</case>

            <expr_stmt pos:start="401:13" pos:end="401:47"><expr pos:start="401:13" pos:end="401:46"><call pos:start="401:13" pos:end="401:46"><name pos:start="401:13" pos:end="401:41">gen_op_iwmmxt_unpackll_M0_wRn</name><argument_list pos:start="401:42" pos:end="401:46">(<argument pos:start="401:43" pos:end="401:45"><expr pos:start="401:43" pos:end="401:45"><name pos:start="401:43" pos:end="401:45">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="403:13" pos:end="403:18">break;</break>

        <case pos:start="405:9" pos:end="405:15">case <expr pos:start="405:14" pos:end="405:14"><literal type="number" pos:start="405:14" pos:end="405:14">3</literal></expr>:</case>

            <return pos:start="407:13" pos:end="407:21">return <expr pos:start="407:20" pos:end="407:20"><literal type="number" pos:start="407:20" pos:end="407:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="411:9" pos:end="411:39"><expr pos:start="411:9" pos:end="411:38"><call pos:start="411:9" pos:end="411:38"><name pos:start="411:9" pos:end="411:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="411:34" pos:end="411:38">(<argument pos:start="411:35" pos:end="411:37"><expr pos:start="411:35" pos:end="411:37"><name pos:start="411:35" pos:end="411:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:32"><expr pos:start="413:9" pos:end="413:31"><call pos:start="413:9" pos:end="413:31"><name pos:start="413:9" pos:end="413:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="413:30" pos:end="413:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:32"><expr pos:start="415:9" pos:end="415:31"><call pos:start="415:9" pos:end="415:31"><name pos:start="415:9" pos:end="415:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="415:30" pos:end="415:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="417:9" pos:end="417:14">break;</break>

    <case pos:start="419:5" pos:end="419:15">case <expr pos:start="419:10" pos:end="419:14"><literal type="number" pos:start="419:10" pos:end="419:14">0x10c</literal></expr>:</case> <case pos:start="419:17" pos:end="419:27">case <expr pos:start="419:22" pos:end="419:26"><literal type="number" pos:start="419:22" pos:end="419:26">0x50c</literal></expr>:</case> <case pos:start="419:29" pos:end="419:39">case <expr pos:start="419:34" pos:end="419:38"><literal type="number" pos:start="419:34" pos:end="419:38">0x90c</literal></expr>:</case> <case pos:start="419:41" pos:end="419:51">case <expr pos:start="419:46" pos:end="419:50"><literal type="number" pos:start="419:46" pos:end="419:50">0xd0c</literal></expr>:</case>	<comment type="block" pos:start="419:57" pos:end="419:70">/* WUNPCKIH */</comment>

        <expr_stmt pos:start="421:9" pos:end="421:33"><expr pos:start="421:9" pos:end="421:32"><name pos:start="421:9" pos:end="421:11">wrd</name> <operator pos:start="421:13" pos:end="421:13">=</operator> <operator pos:start="421:15" pos:end="421:15">(</operator><name pos:start="421:16" pos:end="421:19">insn</name> <operator pos:start="421:21" pos:end="421:22">&gt;&gt;</operator> <literal type="number" pos:start="421:24" pos:end="421:25">12</literal><operator pos:start="421:26" pos:end="421:26">)</operator> <operator pos:start="421:28" pos:end="421:28">&amp;</operator> <literal type="number" pos:start="421:30" pos:end="421:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:33"><expr pos:start="423:9" pos:end="423:32"><name pos:start="423:9" pos:end="423:11">rd0</name> <operator pos:start="423:13" pos:end="423:13">=</operator> <operator pos:start="423:15" pos:end="423:15">(</operator><name pos:start="423:16" pos:end="423:19">insn</name> <operator pos:start="423:21" pos:end="423:22">&gt;&gt;</operator> <literal type="number" pos:start="423:24" pos:end="423:25">16</literal><operator pos:start="423:26" pos:end="423:26">)</operator> <operator pos:start="423:28" pos:end="423:28">&amp;</operator> <literal type="number" pos:start="423:30" pos:end="423:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:32"><expr pos:start="425:9" pos:end="425:31"><name pos:start="425:9" pos:end="425:11">rd1</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <operator pos:start="425:15" pos:end="425:15">(</operator><name pos:start="425:16" pos:end="425:19">insn</name> <operator pos:start="425:21" pos:end="425:22">&gt;&gt;</operator> <literal type="number" pos:start="425:24" pos:end="425:24">0</literal><operator pos:start="425:25" pos:end="425:25">)</operator> <operator pos:start="425:27" pos:end="425:27">&amp;</operator> <literal type="number" pos:start="425:29" pos:end="425:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:39"><expr pos:start="427:9" pos:end="427:38"><call pos:start="427:9" pos:end="427:38"><name pos:start="427:9" pos:end="427:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="427:34" pos:end="427:38">(<argument pos:start="427:35" pos:end="427:37"><expr pos:start="427:35" pos:end="427:37"><name pos:start="427:35" pos:end="427:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="429:9" pos:end="453:9">switch <condition pos:start="429:16" pos:end="429:33">(<expr pos:start="429:17" pos:end="429:32"><operator pos:start="429:17" pos:end="429:17">(</operator><name pos:start="429:18" pos:end="429:21">insn</name> <operator pos:start="429:23" pos:end="429:24">&gt;&gt;</operator> <literal type="number" pos:start="429:26" pos:end="429:27">22</literal><operator pos:start="429:28" pos:end="429:28">)</operator> <operator pos:start="429:30" pos:end="429:30">&amp;</operator> <literal type="number" pos:start="429:32" pos:end="429:32">3</literal></expr>)</condition> <block pos:start="429:35" pos:end="453:9">{<block_content pos:start="431:9" pos:end="451:21">

        <case pos:start="431:9" pos:end="431:15">case <expr pos:start="431:14" pos:end="431:14"><literal type="number" pos:start="431:14" pos:end="431:14">0</literal></expr>:</case>

            <expr_stmt pos:start="433:13" pos:end="433:47"><expr pos:start="433:13" pos:end="433:46"><call pos:start="433:13" pos:end="433:46"><name pos:start="433:13" pos:end="433:41">gen_op_iwmmxt_unpackhb_M0_wRn</name><argument_list pos:start="433:42" pos:end="433:46">(<argument pos:start="433:43" pos:end="433:45"><expr pos:start="433:43" pos:end="433:45"><name pos:start="433:43" pos:end="433:45">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="435:13" pos:end="435:18">break;</break>

        <case pos:start="437:9" pos:end="437:15">case <expr pos:start="437:14" pos:end="437:14"><literal type="number" pos:start="437:14" pos:end="437:14">1</literal></expr>:</case>

            <expr_stmt pos:start="439:13" pos:end="439:47"><expr pos:start="439:13" pos:end="439:46"><call pos:start="439:13" pos:end="439:46"><name pos:start="439:13" pos:end="439:41">gen_op_iwmmxt_unpackhw_M0_wRn</name><argument_list pos:start="439:42" pos:end="439:46">(<argument pos:start="439:43" pos:end="439:45"><expr pos:start="439:43" pos:end="439:45"><name pos:start="439:43" pos:end="439:45">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="441:13" pos:end="441:18">break;</break>

        <case pos:start="443:9" pos:end="443:15">case <expr pos:start="443:14" pos:end="443:14"><literal type="number" pos:start="443:14" pos:end="443:14">2</literal></expr>:</case>

            <expr_stmt pos:start="445:13" pos:end="445:47"><expr pos:start="445:13" pos:end="445:46"><call pos:start="445:13" pos:end="445:46"><name pos:start="445:13" pos:end="445:41">gen_op_iwmmxt_unpackhl_M0_wRn</name><argument_list pos:start="445:42" pos:end="445:46">(<argument pos:start="445:43" pos:end="445:45"><expr pos:start="445:43" pos:end="445:45"><name pos:start="445:43" pos:end="445:45">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="447:13" pos:end="447:18">break;</break>

        <case pos:start="449:9" pos:end="449:15">case <expr pos:start="449:14" pos:end="449:14"><literal type="number" pos:start="449:14" pos:end="449:14">3</literal></expr>:</case>

            <return pos:start="451:13" pos:end="451:21">return <expr pos:start="451:20" pos:end="451:20"><literal type="number" pos:start="451:20" pos:end="451:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="455:9" pos:end="455:39"><expr pos:start="455:9" pos:end="455:38"><call pos:start="455:9" pos:end="455:38"><name pos:start="455:9" pos:end="455:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="455:34" pos:end="455:38">(<argument pos:start="455:35" pos:end="455:37"><expr pos:start="455:35" pos:end="455:37"><name pos:start="455:35" pos:end="455:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="457:9" pos:end="457:32"><expr pos:start="457:9" pos:end="457:31"><call pos:start="457:9" pos:end="457:31"><name pos:start="457:9" pos:end="457:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="457:30" pos:end="457:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:32"><expr pos:start="459:9" pos:end="459:31"><call pos:start="459:9" pos:end="459:31"><name pos:start="459:9" pos:end="459:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="459:30" pos:end="459:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="461:9" pos:end="461:14">break;</break>

    <case pos:start="463:5" pos:end="463:15">case <expr pos:start="463:10" pos:end="463:14"><literal type="number" pos:start="463:10" pos:end="463:14">0x012</literal></expr>:</case> <case pos:start="463:17" pos:end="463:27">case <expr pos:start="463:22" pos:end="463:26"><literal type="number" pos:start="463:22" pos:end="463:26">0x112</literal></expr>:</case> <case pos:start="463:29" pos:end="463:39">case <expr pos:start="463:34" pos:end="463:38"><literal type="number" pos:start="463:34" pos:end="463:38">0x412</literal></expr>:</case> <case pos:start="463:41" pos:end="463:51">case <expr pos:start="463:46" pos:end="463:50"><literal type="number" pos:start="463:46" pos:end="463:50">0x512</literal></expr>:</case>	<comment type="block" pos:start="463:57" pos:end="463:66">/* WSAD */</comment>

        <expr_stmt pos:start="465:9" pos:end="465:33"><expr pos:start="465:9" pos:end="465:32"><name pos:start="465:9" pos:end="465:11">wrd</name> <operator pos:start="465:13" pos:end="465:13">=</operator> <operator pos:start="465:15" pos:end="465:15">(</operator><name pos:start="465:16" pos:end="465:19">insn</name> <operator pos:start="465:21" pos:end="465:22">&gt;&gt;</operator> <literal type="number" pos:start="465:24" pos:end="465:25">12</literal><operator pos:start="465:26" pos:end="465:26">)</operator> <operator pos:start="465:28" pos:end="465:28">&amp;</operator> <literal type="number" pos:start="465:30" pos:end="465:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:33"><expr pos:start="467:9" pos:end="467:32"><name pos:start="467:9" pos:end="467:11">rd0</name> <operator pos:start="467:13" pos:end="467:13">=</operator> <operator pos:start="467:15" pos:end="467:15">(</operator><name pos:start="467:16" pos:end="467:19">insn</name> <operator pos:start="467:21" pos:end="467:22">&gt;&gt;</operator> <literal type="number" pos:start="467:24" pos:end="467:25">16</literal><operator pos:start="467:26" pos:end="467:26">)</operator> <operator pos:start="467:28" pos:end="467:28">&amp;</operator> <literal type="number" pos:start="467:30" pos:end="467:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:32"><expr pos:start="469:9" pos:end="469:31"><name pos:start="469:9" pos:end="469:11">rd1</name> <operator pos:start="469:13" pos:end="469:13">=</operator> <operator pos:start="469:15" pos:end="469:15">(</operator><name pos:start="469:16" pos:end="469:19">insn</name> <operator pos:start="469:21" pos:end="469:22">&gt;&gt;</operator> <literal type="number" pos:start="469:24" pos:end="469:24">0</literal><operator pos:start="469:25" pos:end="469:25">)</operator> <operator pos:start="469:27" pos:end="469:27">&amp;</operator> <literal type="number" pos:start="469:29" pos:end="469:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:39"><expr pos:start="471:9" pos:end="471:38"><call pos:start="471:9" pos:end="471:38"><name pos:start="471:9" pos:end="471:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="471:34" pos:end="471:38">(<argument pos:start="471:35" pos:end="471:37"><expr pos:start="471:35" pos:end="471:37"><name pos:start="471:35" pos:end="471:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="473:9" pos:end="479:43"><if pos:start="473:9" pos:end="475:43">if <condition pos:start="473:12" pos:end="473:29">(<expr pos:start="473:13" pos:end="473:28"><name pos:start="473:13" pos:end="473:16">insn</name> <operator pos:start="473:18" pos:end="473:18">&amp;</operator> <operator pos:start="473:20" pos:end="473:20">(</operator><literal type="number" pos:start="473:21" pos:end="473:21">1</literal> <operator pos:start="473:23" pos:end="473:24">&lt;&lt;</operator> <literal type="number" pos:start="473:26" pos:end="473:27">22</literal><operator pos:start="473:28" pos:end="473:28">)</operator></expr>)</condition><block type="pseudo" pos:start="475:13" pos:end="475:43"><block_content pos:start="475:13" pos:end="475:43">

            <expr_stmt pos:start="475:13" pos:end="475:43"><expr pos:start="475:13" pos:end="475:42"><call pos:start="475:13" pos:end="475:42"><name pos:start="475:13" pos:end="475:37">gen_op_iwmmxt_sadw_M0_wRn</name><argument_list pos:start="475:38" pos:end="475:42">(<argument pos:start="475:39" pos:end="475:41"><expr pos:start="475:39" pos:end="475:41"><name pos:start="475:39" pos:end="475:41">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="477:9" pos:end="479:43">else<block type="pseudo" pos:start="479:13" pos:end="479:43"><block_content pos:start="479:13" pos:end="479:43">

            <expr_stmt pos:start="479:13" pos:end="479:43"><expr pos:start="479:13" pos:end="479:42"><call pos:start="479:13" pos:end="479:42"><name pos:start="479:13" pos:end="479:37">gen_op_iwmmxt_sadb_M0_wRn</name><argument_list pos:start="479:38" pos:end="479:42">(<argument pos:start="479:39" pos:end="479:41"><expr pos:start="479:39" pos:end="479:41"><name pos:start="479:39" pos:end="479:41">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="481:9" pos:end="483:43"><if pos:start="481:9" pos:end="483:43">if <condition pos:start="481:12" pos:end="481:32">(<expr pos:start="481:13" pos:end="481:31"><operator pos:start="481:13" pos:end="481:13">!</operator><operator pos:start="481:14" pos:end="481:14">(</operator><name pos:start="481:15" pos:end="481:18">insn</name> <operator pos:start="481:20" pos:end="481:20">&amp;</operator> <operator pos:start="481:22" pos:end="481:22">(</operator><literal type="number" pos:start="481:23" pos:end="481:23">1</literal> <operator pos:start="481:25" pos:end="481:26">&lt;&lt;</operator> <literal type="number" pos:start="481:28" pos:end="481:29">20</literal><operator pos:start="481:30" pos:end="481:30">)</operator><operator pos:start="481:31" pos:end="481:31">)</operator></expr>)</condition><block type="pseudo" pos:start="483:13" pos:end="483:43"><block_content pos:start="483:13" pos:end="483:43">

            <expr_stmt pos:start="483:13" pos:end="483:43"><expr pos:start="483:13" pos:end="483:42"><call pos:start="483:13" pos:end="483:42"><name pos:start="483:13" pos:end="483:37">gen_op_iwmmxt_addl_M0_wRn</name><argument_list pos:start="483:38" pos:end="483:42">(<argument pos:start="483:39" pos:end="483:41"><expr pos:start="483:39" pos:end="483:41"><name pos:start="483:39" pos:end="483:41">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:39"><expr pos:start="485:9" pos:end="485:38"><call pos:start="485:9" pos:end="485:38"><name pos:start="485:9" pos:end="485:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="485:34" pos:end="485:38">(<argument pos:start="485:35" pos:end="485:37"><expr pos:start="485:35" pos:end="485:37"><name pos:start="485:35" pos:end="485:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:32"><expr pos:start="487:9" pos:end="487:31"><call pos:start="487:9" pos:end="487:31"><name pos:start="487:9" pos:end="487:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="487:30" pos:end="487:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="489:9" pos:end="489:14">break;</break>

    <case pos:start="491:5" pos:end="491:15">case <expr pos:start="491:10" pos:end="491:14"><literal type="number" pos:start="491:10" pos:end="491:14">0x010</literal></expr>:</case> <case pos:start="491:17" pos:end="491:27">case <expr pos:start="491:22" pos:end="491:26"><literal type="number" pos:start="491:22" pos:end="491:26">0x110</literal></expr>:</case> <case pos:start="491:29" pos:end="491:39">case <expr pos:start="491:34" pos:end="491:38"><literal type="number" pos:start="491:34" pos:end="491:38">0x210</literal></expr>:</case> <case pos:start="491:41" pos:end="491:51">case <expr pos:start="491:46" pos:end="491:50"><literal type="number" pos:start="491:46" pos:end="491:50">0x310</literal></expr>:</case>	<comment type="block" pos:start="491:57" pos:end="491:66">/* WMUL */</comment>

        <expr_stmt pos:start="493:9" pos:end="493:33"><expr pos:start="493:9" pos:end="493:32"><name pos:start="493:9" pos:end="493:11">wrd</name> <operator pos:start="493:13" pos:end="493:13">=</operator> <operator pos:start="493:15" pos:end="493:15">(</operator><name pos:start="493:16" pos:end="493:19">insn</name> <operator pos:start="493:21" pos:end="493:22">&gt;&gt;</operator> <literal type="number" pos:start="493:24" pos:end="493:25">12</literal><operator pos:start="493:26" pos:end="493:26">)</operator> <operator pos:start="493:28" pos:end="493:28">&amp;</operator> <literal type="number" pos:start="493:30" pos:end="493:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="495:9" pos:end="495:33"><expr pos:start="495:9" pos:end="495:32"><name pos:start="495:9" pos:end="495:11">rd0</name> <operator pos:start="495:13" pos:end="495:13">=</operator> <operator pos:start="495:15" pos:end="495:15">(</operator><name pos:start="495:16" pos:end="495:19">insn</name> <operator pos:start="495:21" pos:end="495:22">&gt;&gt;</operator> <literal type="number" pos:start="495:24" pos:end="495:25">16</literal><operator pos:start="495:26" pos:end="495:26">)</operator> <operator pos:start="495:28" pos:end="495:28">&amp;</operator> <literal type="number" pos:start="495:30" pos:end="495:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:32"><expr pos:start="497:9" pos:end="497:31"><name pos:start="497:9" pos:end="497:11">rd1</name> <operator pos:start="497:13" pos:end="497:13">=</operator> <operator pos:start="497:15" pos:end="497:15">(</operator><name pos:start="497:16" pos:end="497:19">insn</name> <operator pos:start="497:21" pos:end="497:22">&gt;&gt;</operator> <literal type="number" pos:start="497:24" pos:end="497:24">0</literal><operator pos:start="497:25" pos:end="497:25">)</operator> <operator pos:start="497:27" pos:end="497:27">&amp;</operator> <literal type="number" pos:start="497:29" pos:end="497:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="499:9" pos:end="499:39"><expr pos:start="499:9" pos:end="499:38"><call pos:start="499:9" pos:end="499:38"><name pos:start="499:9" pos:end="499:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="499:34" pos:end="499:38">(<argument pos:start="499:35" pos:end="499:37"><expr pos:start="499:35" pos:end="499:37"><name pos:start="499:35" pos:end="499:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="501:9" pos:end="521:9"><if pos:start="501:9" pos:end="511:9">if <condition pos:start="501:12" pos:end="501:29">(<expr pos:start="501:13" pos:end="501:28"><name pos:start="501:13" pos:end="501:16">insn</name> <operator pos:start="501:18" pos:end="501:18">&amp;</operator> <operator pos:start="501:20" pos:end="501:20">(</operator><literal type="number" pos:start="501:21" pos:end="501:21">1</literal> <operator pos:start="501:23" pos:end="501:24">&lt;&lt;</operator> <literal type="number" pos:start="501:26" pos:end="501:27">21</literal><operator pos:start="501:28" pos:end="501:28">)</operator></expr>)</condition> <block pos:start="501:31" pos:end="511:9">{<block_content pos:start="503:13" pos:end="509:49">

            <if_stmt pos:start="503:13" pos:end="509:49"><if pos:start="503:13" pos:end="505:49">if <condition pos:start="503:16" pos:end="503:33">(<expr pos:start="503:17" pos:end="503:32"><name pos:start="503:17" pos:end="503:20">insn</name> <operator pos:start="503:22" pos:end="503:22">&amp;</operator> <operator pos:start="503:24" pos:end="503:24">(</operator><literal type="number" pos:start="503:25" pos:end="503:25">1</literal> <operator pos:start="503:27" pos:end="503:28">&lt;&lt;</operator> <literal type="number" pos:start="503:30" pos:end="503:31">20</literal><operator pos:start="503:32" pos:end="503:32">)</operator></expr>)</condition><block type="pseudo" pos:start="505:17" pos:end="505:49"><block_content pos:start="505:17" pos:end="505:49">

                <expr_stmt pos:start="505:17" pos:end="505:49"><expr pos:start="505:17" pos:end="505:48"><call pos:start="505:17" pos:end="505:48"><name pos:start="505:17" pos:end="505:43">gen_op_iwmmxt_mulshw_M0_wRn</name><argument_list pos:start="505:44" pos:end="505:48">(<argument pos:start="505:45" pos:end="505:47"><expr pos:start="505:45" pos:end="505:47"><name pos:start="505:45" pos:end="505:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="507:13" pos:end="509:49">else<block type="pseudo" pos:start="509:17" pos:end="509:49"><block_content pos:start="509:17" pos:end="509:49">

                <expr_stmt pos:start="509:17" pos:end="509:49"><expr pos:start="509:17" pos:end="509:48"><call pos:start="509:17" pos:end="509:48"><name pos:start="509:17" pos:end="509:43">gen_op_iwmmxt_mulslw_M0_wRn</name><argument_list pos:start="509:44" pos:end="509:48">(<argument pos:start="509:45" pos:end="509:47"><expr pos:start="509:45" pos:end="509:47"><name pos:start="509:45" pos:end="509:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="511:11" pos:end="521:9">else <block pos:start="511:16" pos:end="521:9">{<block_content pos:start="513:13" pos:end="519:49">

            <if_stmt pos:start="513:13" pos:end="519:49"><if pos:start="513:13" pos:end="515:49">if <condition pos:start="513:16" pos:end="513:33">(<expr pos:start="513:17" pos:end="513:32"><name pos:start="513:17" pos:end="513:20">insn</name> <operator pos:start="513:22" pos:end="513:22">&amp;</operator> <operator pos:start="513:24" pos:end="513:24">(</operator><literal type="number" pos:start="513:25" pos:end="513:25">1</literal> <operator pos:start="513:27" pos:end="513:28">&lt;&lt;</operator> <literal type="number" pos:start="513:30" pos:end="513:31">20</literal><operator pos:start="513:32" pos:end="513:32">)</operator></expr>)</condition><block type="pseudo" pos:start="515:17" pos:end="515:49"><block_content pos:start="515:17" pos:end="515:49">

                <expr_stmt pos:start="515:17" pos:end="515:49"><expr pos:start="515:17" pos:end="515:48"><call pos:start="515:17" pos:end="515:48"><name pos:start="515:17" pos:end="515:43">gen_op_iwmmxt_muluhw_M0_wRn</name><argument_list pos:start="515:44" pos:end="515:48">(<argument pos:start="515:45" pos:end="515:47"><expr pos:start="515:45" pos:end="515:47"><name pos:start="515:45" pos:end="515:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="517:13" pos:end="519:49">else<block type="pseudo" pos:start="519:17" pos:end="519:49"><block_content pos:start="519:17" pos:end="519:49">

                <expr_stmt pos:start="519:17" pos:end="519:49"><expr pos:start="519:17" pos:end="519:48"><call pos:start="519:17" pos:end="519:48"><name pos:start="519:17" pos:end="519:43">gen_op_iwmmxt_mululw_M0_wRn</name><argument_list pos:start="519:44" pos:end="519:48">(<argument pos:start="519:45" pos:end="519:47"><expr pos:start="519:45" pos:end="519:47"><name pos:start="519:45" pos:end="519:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="523:9" pos:end="523:39"><expr pos:start="523:9" pos:end="523:38"><call pos:start="523:9" pos:end="523:38"><name pos:start="523:9" pos:end="523:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="523:34" pos:end="523:38">(<argument pos:start="523:35" pos:end="523:37"><expr pos:start="523:35" pos:end="523:37"><name pos:start="523:35" pos:end="523:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:32"><expr pos:start="525:9" pos:end="525:31"><call pos:start="525:9" pos:end="525:31"><name pos:start="525:9" pos:end="525:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="525:30" pos:end="525:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="527:9" pos:end="527:14">break;</break>

    <case pos:start="529:5" pos:end="529:15">case <expr pos:start="529:10" pos:end="529:14"><literal type="number" pos:start="529:10" pos:end="529:14">0x410</literal></expr>:</case> <case pos:start="529:17" pos:end="529:27">case <expr pos:start="529:22" pos:end="529:26"><literal type="number" pos:start="529:22" pos:end="529:26">0x510</literal></expr>:</case> <case pos:start="529:29" pos:end="529:39">case <expr pos:start="529:34" pos:end="529:38"><literal type="number" pos:start="529:34" pos:end="529:38">0x610</literal></expr>:</case> <case pos:start="529:41" pos:end="529:51">case <expr pos:start="529:46" pos:end="529:50"><literal type="number" pos:start="529:46" pos:end="529:50">0x710</literal></expr>:</case>	<comment type="block" pos:start="529:57" pos:end="529:66">/* WMAC */</comment>

        <expr_stmt pos:start="531:9" pos:end="531:33"><expr pos:start="531:9" pos:end="531:32"><name pos:start="531:9" pos:end="531:11">wrd</name> <operator pos:start="531:13" pos:end="531:13">=</operator> <operator pos:start="531:15" pos:end="531:15">(</operator><name pos:start="531:16" pos:end="531:19">insn</name> <operator pos:start="531:21" pos:end="531:22">&gt;&gt;</operator> <literal type="number" pos:start="531:24" pos:end="531:25">12</literal><operator pos:start="531:26" pos:end="531:26">)</operator> <operator pos:start="531:28" pos:end="531:28">&amp;</operator> <literal type="number" pos:start="531:30" pos:end="531:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:33"><expr pos:start="533:9" pos:end="533:32"><name pos:start="533:9" pos:end="533:11">rd0</name> <operator pos:start="533:13" pos:end="533:13">=</operator> <operator pos:start="533:15" pos:end="533:15">(</operator><name pos:start="533:16" pos:end="533:19">insn</name> <operator pos:start="533:21" pos:end="533:22">&gt;&gt;</operator> <literal type="number" pos:start="533:24" pos:end="533:25">16</literal><operator pos:start="533:26" pos:end="533:26">)</operator> <operator pos:start="533:28" pos:end="533:28">&amp;</operator> <literal type="number" pos:start="533:30" pos:end="533:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:32"><expr pos:start="535:9" pos:end="535:31"><name pos:start="535:9" pos:end="535:11">rd1</name> <operator pos:start="535:13" pos:end="535:13">=</operator> <operator pos:start="535:15" pos:end="535:15">(</operator><name pos:start="535:16" pos:end="535:19">insn</name> <operator pos:start="535:21" pos:end="535:22">&gt;&gt;</operator> <literal type="number" pos:start="535:24" pos:end="535:24">0</literal><operator pos:start="535:25" pos:end="535:25">)</operator> <operator pos:start="535:27" pos:end="535:27">&amp;</operator> <literal type="number" pos:start="535:29" pos:end="535:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="537:39"><expr pos:start="537:9" pos:end="537:38"><call pos:start="537:9" pos:end="537:38"><name pos:start="537:9" pos:end="537:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="537:34" pos:end="537:38">(<argument pos:start="537:35" pos:end="537:37"><expr pos:start="537:35" pos:end="537:37"><name pos:start="537:35" pos:end="537:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="539:9" pos:end="545:44"><if pos:start="539:9" pos:end="541:44">if <condition pos:start="539:12" pos:end="539:29">(<expr pos:start="539:13" pos:end="539:28"><name pos:start="539:13" pos:end="539:16">insn</name> <operator pos:start="539:18" pos:end="539:18">&amp;</operator> <operator pos:start="539:20" pos:end="539:20">(</operator><literal type="number" pos:start="539:21" pos:end="539:21">1</literal> <operator pos:start="539:23" pos:end="539:24">&lt;&lt;</operator> <literal type="number" pos:start="539:26" pos:end="539:27">21</literal><operator pos:start="539:28" pos:end="539:28">)</operator></expr>)</condition><block type="pseudo" pos:start="541:13" pos:end="541:44"><block_content pos:start="541:13" pos:end="541:44">

            <expr_stmt pos:start="541:13" pos:end="541:44"><expr pos:start="541:13" pos:end="541:43"><call pos:start="541:13" pos:end="541:43"><name pos:start="541:13" pos:end="541:38">gen_op_iwmmxt_macsw_M0_wRn</name><argument_list pos:start="541:39" pos:end="541:43">(<argument pos:start="541:40" pos:end="541:42"><expr pos:start="541:40" pos:end="541:42"><name pos:start="541:40" pos:end="541:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="543:9" pos:end="545:44">else<block type="pseudo" pos:start="545:13" pos:end="545:44"><block_content pos:start="545:13" pos:end="545:44">

            <expr_stmt pos:start="545:13" pos:end="545:44"><expr pos:start="545:13" pos:end="545:43"><call pos:start="545:13" pos:end="545:43"><name pos:start="545:13" pos:end="545:38">gen_op_iwmmxt_macuw_M0_wRn</name><argument_list pos:start="545:39" pos:end="545:43">(<argument pos:start="545:40" pos:end="545:42"><expr pos:start="545:40" pos:end="545:42"><name pos:start="545:40" pos:end="545:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="547:9" pos:end="553:9"><if pos:start="547:9" pos:end="553:9">if <condition pos:start="547:12" pos:end="547:32">(<expr pos:start="547:13" pos:end="547:31"><operator pos:start="547:13" pos:end="547:13">!</operator><operator pos:start="547:14" pos:end="547:14">(</operator><name pos:start="547:15" pos:end="547:18">insn</name> <operator pos:start="547:20" pos:end="547:20">&amp;</operator> <operator pos:start="547:22" pos:end="547:22">(</operator><literal type="number" pos:start="547:23" pos:end="547:23">1</literal> <operator pos:start="547:25" pos:end="547:26">&lt;&lt;</operator> <literal type="number" pos:start="547:28" pos:end="547:29">20</literal><operator pos:start="547:30" pos:end="547:30">)</operator><operator pos:start="547:31" pos:end="547:31">)</operator></expr>)</condition> <block pos:start="547:34" pos:end="553:9">{<block_content pos:start="549:13" pos:end="551:52">

            <expr_stmt pos:start="549:13" pos:end="549:41"><expr pos:start="549:13" pos:end="549:40"><call pos:start="549:13" pos:end="549:40"><name pos:start="549:13" pos:end="549:27">iwmmxt_load_reg</name><argument_list pos:start="549:28" pos:end="549:40">(<argument pos:start="549:29" pos:end="549:34"><expr pos:start="549:29" pos:end="549:34"><name pos:start="549:29" pos:end="549:34">cpu_V1</name></expr></argument>, <argument pos:start="549:37" pos:end="549:39"><expr pos:start="549:37" pos:end="549:39"><name pos:start="549:37" pos:end="549:39">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:52"><expr pos:start="551:13" pos:end="551:51"><call pos:start="551:13" pos:end="551:51"><name pos:start="551:13" pos:end="551:27">tcg_gen_add_i64</name><argument_list pos:start="551:28" pos:end="551:51">(<argument pos:start="551:29" pos:end="551:34"><expr pos:start="551:29" pos:end="551:34"><name pos:start="551:29" pos:end="551:34">cpu_M0</name></expr></argument>, <argument pos:start="551:37" pos:end="551:42"><expr pos:start="551:37" pos:end="551:42"><name pos:start="551:37" pos:end="551:42">cpu_M0</name></expr></argument>, <argument pos:start="551:45" pos:end="551:50"><expr pos:start="551:45" pos:end="551:50"><name pos:start="551:45" pos:end="551:50">cpu_V1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="555:9" pos:end="555:39"><expr pos:start="555:9" pos:end="555:38"><call pos:start="555:9" pos:end="555:38"><name pos:start="555:9" pos:end="555:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="555:34" pos:end="555:38">(<argument pos:start="555:35" pos:end="555:37"><expr pos:start="555:35" pos:end="555:37"><name pos:start="555:35" pos:end="555:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="557:9" pos:end="557:32"><expr pos:start="557:9" pos:end="557:31"><call pos:start="557:9" pos:end="557:31"><name pos:start="557:9" pos:end="557:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="557:30" pos:end="557:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="559:9" pos:end="559:14">break;</break>

    <case pos:start="561:5" pos:end="561:15">case <expr pos:start="561:10" pos:end="561:14"><literal type="number" pos:start="561:10" pos:end="561:14">0x006</literal></expr>:</case> <case pos:start="561:17" pos:end="561:27">case <expr pos:start="561:22" pos:end="561:26"><literal type="number" pos:start="561:22" pos:end="561:26">0x406</literal></expr>:</case> <case pos:start="561:29" pos:end="561:39">case <expr pos:start="561:34" pos:end="561:38"><literal type="number" pos:start="561:34" pos:end="561:38">0x806</literal></expr>:</case> <case pos:start="561:41" pos:end="561:51">case <expr pos:start="561:46" pos:end="561:50"><literal type="number" pos:start="561:46" pos:end="561:50">0xc06</literal></expr>:</case>	<comment type="block" pos:start="561:57" pos:end="561:68">/* WCMPEQ */</comment>

        <expr_stmt pos:start="563:9" pos:end="563:33"><expr pos:start="563:9" pos:end="563:32"><name pos:start="563:9" pos:end="563:11">wrd</name> <operator pos:start="563:13" pos:end="563:13">=</operator> <operator pos:start="563:15" pos:end="563:15">(</operator><name pos:start="563:16" pos:end="563:19">insn</name> <operator pos:start="563:21" pos:end="563:22">&gt;&gt;</operator> <literal type="number" pos:start="563:24" pos:end="563:25">12</literal><operator pos:start="563:26" pos:end="563:26">)</operator> <operator pos:start="563:28" pos:end="563:28">&amp;</operator> <literal type="number" pos:start="563:30" pos:end="563:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="565:9" pos:end="565:33"><expr pos:start="565:9" pos:end="565:32"><name pos:start="565:9" pos:end="565:11">rd0</name> <operator pos:start="565:13" pos:end="565:13">=</operator> <operator pos:start="565:15" pos:end="565:15">(</operator><name pos:start="565:16" pos:end="565:19">insn</name> <operator pos:start="565:21" pos:end="565:22">&gt;&gt;</operator> <literal type="number" pos:start="565:24" pos:end="565:25">16</literal><operator pos:start="565:26" pos:end="565:26">)</operator> <operator pos:start="565:28" pos:end="565:28">&amp;</operator> <literal type="number" pos:start="565:30" pos:end="565:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="567:9" pos:end="567:32"><expr pos:start="567:9" pos:end="567:31"><name pos:start="567:9" pos:end="567:11">rd1</name> <operator pos:start="567:13" pos:end="567:13">=</operator> <operator pos:start="567:15" pos:end="567:15">(</operator><name pos:start="567:16" pos:end="567:19">insn</name> <operator pos:start="567:21" pos:end="567:22">&gt;&gt;</operator> <literal type="number" pos:start="567:24" pos:end="567:24">0</literal><operator pos:start="567:25" pos:end="567:25">)</operator> <operator pos:start="567:27" pos:end="567:27">&amp;</operator> <literal type="number" pos:start="567:29" pos:end="567:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="569:9" pos:end="569:39"><expr pos:start="569:9" pos:end="569:38"><call pos:start="569:9" pos:end="569:38"><name pos:start="569:9" pos:end="569:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="569:34" pos:end="569:38">(<argument pos:start="569:35" pos:end="569:37"><expr pos:start="569:35" pos:end="569:37"><name pos:start="569:35" pos:end="569:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="571:9" pos:end="595:9">switch <condition pos:start="571:16" pos:end="571:33">(<expr pos:start="571:17" pos:end="571:32"><operator pos:start="571:17" pos:end="571:17">(</operator><name pos:start="571:18" pos:end="571:21">insn</name> <operator pos:start="571:23" pos:end="571:24">&gt;&gt;</operator> <literal type="number" pos:start="571:26" pos:end="571:27">22</literal><operator pos:start="571:28" pos:end="571:28">)</operator> <operator pos:start="571:30" pos:end="571:30">&amp;</operator> <literal type="number" pos:start="571:32" pos:end="571:32">3</literal></expr>)</condition> <block pos:start="571:35" pos:end="595:9">{<block_content pos:start="573:9" pos:end="593:21">

        <case pos:start="573:9" pos:end="573:15">case <expr pos:start="573:14" pos:end="573:14"><literal type="number" pos:start="573:14" pos:end="573:14">0</literal></expr>:</case>

            <expr_stmt pos:start="575:13" pos:end="575:45"><expr pos:start="575:13" pos:end="575:44"><call pos:start="575:13" pos:end="575:44"><name pos:start="575:13" pos:end="575:39">gen_op_iwmmxt_cmpeqb_M0_wRn</name><argument_list pos:start="575:40" pos:end="575:44">(<argument pos:start="575:41" pos:end="575:43"><expr pos:start="575:41" pos:end="575:43"><name pos:start="575:41" pos:end="575:43">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="577:13" pos:end="577:18">break;</break>

        <case pos:start="579:9" pos:end="579:15">case <expr pos:start="579:14" pos:end="579:14"><literal type="number" pos:start="579:14" pos:end="579:14">1</literal></expr>:</case>

            <expr_stmt pos:start="581:13" pos:end="581:45"><expr pos:start="581:13" pos:end="581:44"><call pos:start="581:13" pos:end="581:44"><name pos:start="581:13" pos:end="581:39">gen_op_iwmmxt_cmpeqw_M0_wRn</name><argument_list pos:start="581:40" pos:end="581:44">(<argument pos:start="581:41" pos:end="581:43"><expr pos:start="581:41" pos:end="581:43"><name pos:start="581:41" pos:end="581:43">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="583:13" pos:end="583:18">break;</break>

        <case pos:start="585:9" pos:end="585:15">case <expr pos:start="585:14" pos:end="585:14"><literal type="number" pos:start="585:14" pos:end="585:14">2</literal></expr>:</case>

            <expr_stmt pos:start="587:13" pos:end="587:45"><expr pos:start="587:13" pos:end="587:44"><call pos:start="587:13" pos:end="587:44"><name pos:start="587:13" pos:end="587:39">gen_op_iwmmxt_cmpeql_M0_wRn</name><argument_list pos:start="587:40" pos:end="587:44">(<argument pos:start="587:41" pos:end="587:43"><expr pos:start="587:41" pos:end="587:43"><name pos:start="587:41" pos:end="587:43">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="589:13" pos:end="589:18">break;</break>

        <case pos:start="591:9" pos:end="591:15">case <expr pos:start="591:14" pos:end="591:14"><literal type="number" pos:start="591:14" pos:end="591:14">3</literal></expr>:</case>

            <return pos:start="593:13" pos:end="593:21">return <expr pos:start="593:20" pos:end="593:20"><literal type="number" pos:start="593:20" pos:end="593:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="597:9" pos:end="597:39"><expr pos:start="597:9" pos:end="597:38"><call pos:start="597:9" pos:end="597:38"><name pos:start="597:9" pos:end="597:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="597:34" pos:end="597:38">(<argument pos:start="597:35" pos:end="597:37"><expr pos:start="597:35" pos:end="597:37"><name pos:start="597:35" pos:end="597:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="599:9" pos:end="599:32"><expr pos:start="599:9" pos:end="599:31"><call pos:start="599:9" pos:end="599:31"><name pos:start="599:9" pos:end="599:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="599:30" pos:end="599:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="601:9" pos:end="601:32"><expr pos:start="601:9" pos:end="601:31"><call pos:start="601:9" pos:end="601:31"><name pos:start="601:9" pos:end="601:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="601:30" pos:end="601:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="603:9" pos:end="603:14">break;</break>

    <case pos:start="605:5" pos:end="605:15">case <expr pos:start="605:10" pos:end="605:14"><literal type="number" pos:start="605:10" pos:end="605:14">0x800</literal></expr>:</case> <case pos:start="605:17" pos:end="605:27">case <expr pos:start="605:22" pos:end="605:26"><literal type="number" pos:start="605:22" pos:end="605:26">0x900</literal></expr>:</case> <case pos:start="605:29" pos:end="605:39">case <expr pos:start="605:34" pos:end="605:38"><literal type="number" pos:start="605:34" pos:end="605:38">0xc00</literal></expr>:</case> <case pos:start="605:41" pos:end="605:51">case <expr pos:start="605:46" pos:end="605:50"><literal type="number" pos:start="605:46" pos:end="605:50">0xd00</literal></expr>:</case>	<comment type="block" pos:start="605:57" pos:end="605:67">/* WAVG2 */</comment>

        <expr_stmt pos:start="607:9" pos:end="607:33"><expr pos:start="607:9" pos:end="607:32"><name pos:start="607:9" pos:end="607:11">wrd</name> <operator pos:start="607:13" pos:end="607:13">=</operator> <operator pos:start="607:15" pos:end="607:15">(</operator><name pos:start="607:16" pos:end="607:19">insn</name> <operator pos:start="607:21" pos:end="607:22">&gt;&gt;</operator> <literal type="number" pos:start="607:24" pos:end="607:25">12</literal><operator pos:start="607:26" pos:end="607:26">)</operator> <operator pos:start="607:28" pos:end="607:28">&amp;</operator> <literal type="number" pos:start="607:30" pos:end="607:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="609:9" pos:end="609:33"><expr pos:start="609:9" pos:end="609:32"><name pos:start="609:9" pos:end="609:11">rd0</name> <operator pos:start="609:13" pos:end="609:13">=</operator> <operator pos:start="609:15" pos:end="609:15">(</operator><name pos:start="609:16" pos:end="609:19">insn</name> <operator pos:start="609:21" pos:end="609:22">&gt;&gt;</operator> <literal type="number" pos:start="609:24" pos:end="609:25">16</literal><operator pos:start="609:26" pos:end="609:26">)</operator> <operator pos:start="609:28" pos:end="609:28">&amp;</operator> <literal type="number" pos:start="609:30" pos:end="609:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="611:9" pos:end="611:32"><expr pos:start="611:9" pos:end="611:31"><name pos:start="611:9" pos:end="611:11">rd1</name> <operator pos:start="611:13" pos:end="611:13">=</operator> <operator pos:start="611:15" pos:end="611:15">(</operator><name pos:start="611:16" pos:end="611:19">insn</name> <operator pos:start="611:21" pos:end="611:22">&gt;&gt;</operator> <literal type="number" pos:start="611:24" pos:end="611:24">0</literal><operator pos:start="611:25" pos:end="611:25">)</operator> <operator pos:start="611:27" pos:end="611:27">&amp;</operator> <literal type="number" pos:start="611:29" pos:end="611:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="613:9" pos:end="613:39"><expr pos:start="613:9" pos:end="613:38"><call pos:start="613:9" pos:end="613:38"><name pos:start="613:9" pos:end="613:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="613:34" pos:end="613:38">(<argument pos:start="613:35" pos:end="613:37"><expr pos:start="613:35" pos:end="613:37"><name pos:start="613:35" pos:end="613:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="615:9" pos:end="635:9"><if pos:start="615:9" pos:end="625:9">if <condition pos:start="615:12" pos:end="615:29">(<expr pos:start="615:13" pos:end="615:28"><name pos:start="615:13" pos:end="615:16">insn</name> <operator pos:start="615:18" pos:end="615:18">&amp;</operator> <operator pos:start="615:20" pos:end="615:20">(</operator><literal type="number" pos:start="615:21" pos:end="615:21">1</literal> <operator pos:start="615:23" pos:end="615:24">&lt;&lt;</operator> <literal type="number" pos:start="615:26" pos:end="615:27">22</literal><operator pos:start="615:28" pos:end="615:28">)</operator></expr>)</condition> <block pos:start="615:31" pos:end="625:9">{<block_content pos:start="617:13" pos:end="623:48">

            <if_stmt pos:start="617:13" pos:end="623:48"><if pos:start="617:13" pos:end="619:48">if <condition pos:start="617:16" pos:end="617:33">(<expr pos:start="617:17" pos:end="617:32"><name pos:start="617:17" pos:end="617:20">insn</name> <operator pos:start="617:22" pos:end="617:22">&amp;</operator> <operator pos:start="617:24" pos:end="617:24">(</operator><literal type="number" pos:start="617:25" pos:end="617:25">1</literal> <operator pos:start="617:27" pos:end="617:28">&lt;&lt;</operator> <literal type="number" pos:start="617:30" pos:end="617:31">20</literal><operator pos:start="617:32" pos:end="617:32">)</operator></expr>)</condition><block type="pseudo" pos:start="619:17" pos:end="619:48"><block_content pos:start="619:17" pos:end="619:48">

                <expr_stmt pos:start="619:17" pos:end="619:48"><expr pos:start="619:17" pos:end="619:47"><call pos:start="619:17" pos:end="619:47"><name pos:start="619:17" pos:end="619:42">gen_op_iwmmxt_avgw1_M0_wRn</name><argument_list pos:start="619:43" pos:end="619:47">(<argument pos:start="619:44" pos:end="619:46"><expr pos:start="619:44" pos:end="619:46"><name pos:start="619:44" pos:end="619:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="621:13" pos:end="623:48">else<block type="pseudo" pos:start="623:17" pos:end="623:48"><block_content pos:start="623:17" pos:end="623:48">

                <expr_stmt pos:start="623:17" pos:end="623:48"><expr pos:start="623:17" pos:end="623:47"><call pos:start="623:17" pos:end="623:47"><name pos:start="623:17" pos:end="623:42">gen_op_iwmmxt_avgw0_M0_wRn</name><argument_list pos:start="623:43" pos:end="623:47">(<argument pos:start="623:44" pos:end="623:46"><expr pos:start="623:44" pos:end="623:46"><name pos:start="623:44" pos:end="623:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="625:11" pos:end="635:9">else <block pos:start="625:16" pos:end="635:9">{<block_content pos:start="627:13" pos:end="633:48">

            <if_stmt pos:start="627:13" pos:end="633:48"><if pos:start="627:13" pos:end="629:48">if <condition pos:start="627:16" pos:end="627:33">(<expr pos:start="627:17" pos:end="627:32"><name pos:start="627:17" pos:end="627:20">insn</name> <operator pos:start="627:22" pos:end="627:22">&amp;</operator> <operator pos:start="627:24" pos:end="627:24">(</operator><literal type="number" pos:start="627:25" pos:end="627:25">1</literal> <operator pos:start="627:27" pos:end="627:28">&lt;&lt;</operator> <literal type="number" pos:start="627:30" pos:end="627:31">20</literal><operator pos:start="627:32" pos:end="627:32">)</operator></expr>)</condition><block type="pseudo" pos:start="629:17" pos:end="629:48"><block_content pos:start="629:17" pos:end="629:48">

                <expr_stmt pos:start="629:17" pos:end="629:48"><expr pos:start="629:17" pos:end="629:47"><call pos:start="629:17" pos:end="629:47"><name pos:start="629:17" pos:end="629:42">gen_op_iwmmxt_avgb1_M0_wRn</name><argument_list pos:start="629:43" pos:end="629:47">(<argument pos:start="629:44" pos:end="629:46"><expr pos:start="629:44" pos:end="629:46"><name pos:start="629:44" pos:end="629:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="631:13" pos:end="633:48">else<block type="pseudo" pos:start="633:17" pos:end="633:48"><block_content pos:start="633:17" pos:end="633:48">

                <expr_stmt pos:start="633:17" pos:end="633:48"><expr pos:start="633:17" pos:end="633:47"><call pos:start="633:17" pos:end="633:47"><name pos:start="633:17" pos:end="633:42">gen_op_iwmmxt_avgb0_M0_wRn</name><argument_list pos:start="633:43" pos:end="633:47">(<argument pos:start="633:44" pos:end="633:46"><expr pos:start="633:44" pos:end="633:46"><name pos:start="633:44" pos:end="633:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="637:9" pos:end="637:39"><expr pos:start="637:9" pos:end="637:38"><call pos:start="637:9" pos:end="637:38"><name pos:start="637:9" pos:end="637:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="637:34" pos:end="637:38">(<argument pos:start="637:35" pos:end="637:37"><expr pos:start="637:35" pos:end="637:37"><name pos:start="637:35" pos:end="637:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="639:9" pos:end="639:32"><expr pos:start="639:9" pos:end="639:31"><call pos:start="639:9" pos:end="639:31"><name pos:start="639:9" pos:end="639:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="639:30" pos:end="639:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="641:9" pos:end="641:32"><expr pos:start="641:9" pos:end="641:31"><call pos:start="641:9" pos:end="641:31"><name pos:start="641:9" pos:end="641:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="641:30" pos:end="641:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:15">case <expr pos:start="645:10" pos:end="645:14"><literal type="number" pos:start="645:10" pos:end="645:14">0x802</literal></expr>:</case> <case pos:start="645:17" pos:end="645:27">case <expr pos:start="645:22" pos:end="645:26"><literal type="number" pos:start="645:22" pos:end="645:26">0x902</literal></expr>:</case> <case pos:start="645:29" pos:end="645:39">case <expr pos:start="645:34" pos:end="645:38"><literal type="number" pos:start="645:34" pos:end="645:38">0xa02</literal></expr>:</case> <case pos:start="645:41" pos:end="645:51">case <expr pos:start="645:46" pos:end="645:50"><literal type="number" pos:start="645:46" pos:end="645:50">0xb02</literal></expr>:</case>	<comment type="block" pos:start="645:57" pos:end="645:69">/* WALIGNR */</comment>

        <expr_stmt pos:start="647:9" pos:end="647:33"><expr pos:start="647:9" pos:end="647:32"><name pos:start="647:9" pos:end="647:11">wrd</name> <operator pos:start="647:13" pos:end="647:13">=</operator> <operator pos:start="647:15" pos:end="647:15">(</operator><name pos:start="647:16" pos:end="647:19">insn</name> <operator pos:start="647:21" pos:end="647:22">&gt;&gt;</operator> <literal type="number" pos:start="647:24" pos:end="647:25">12</literal><operator pos:start="647:26" pos:end="647:26">)</operator> <operator pos:start="647:28" pos:end="647:28">&amp;</operator> <literal type="number" pos:start="647:30" pos:end="647:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="649:9" pos:end="649:33"><expr pos:start="649:9" pos:end="649:32"><name pos:start="649:9" pos:end="649:11">rd0</name> <operator pos:start="649:13" pos:end="649:13">=</operator> <operator pos:start="649:15" pos:end="649:15">(</operator><name pos:start="649:16" pos:end="649:19">insn</name> <operator pos:start="649:21" pos:end="649:22">&gt;&gt;</operator> <literal type="number" pos:start="649:24" pos:end="649:25">16</literal><operator pos:start="649:26" pos:end="649:26">)</operator> <operator pos:start="649:28" pos:end="649:28">&amp;</operator> <literal type="number" pos:start="649:30" pos:end="649:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="651:9" pos:end="651:32"><expr pos:start="651:9" pos:end="651:31"><name pos:start="651:9" pos:end="651:11">rd1</name> <operator pos:start="651:13" pos:end="651:13">=</operator> <operator pos:start="651:15" pos:end="651:15">(</operator><name pos:start="651:16" pos:end="651:19">insn</name> <operator pos:start="651:21" pos:end="651:22">&gt;&gt;</operator> <literal type="number" pos:start="651:24" pos:end="651:24">0</literal><operator pos:start="651:25" pos:end="651:25">)</operator> <operator pos:start="651:27" pos:end="651:27">&amp;</operator> <literal type="number" pos:start="651:29" pos:end="651:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:39"><expr pos:start="653:9" pos:end="653:38"><call pos:start="653:9" pos:end="653:38"><name pos:start="653:9" pos:end="653:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="653:34" pos:end="653:38">(<argument pos:start="653:35" pos:end="653:37"><expr pos:start="653:35" pos:end="653:37"><name pos:start="653:35" pos:end="653:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="655:9" pos:end="655:70"><expr pos:start="655:9" pos:end="655:69"><name pos:start="655:9" pos:end="655:11">tmp</name> <operator pos:start="655:13" pos:end="655:13">=</operator> <call pos:start="655:15" pos:end="655:69"><name pos:start="655:15" pos:end="655:30">iwmmxt_load_creg</name><argument_list pos:start="655:31" pos:end="655:69">(<argument pos:start="655:32" pos:end="655:68"><expr pos:start="655:32" pos:end="655:68"><name pos:start="655:32" pos:end="655:47">ARM_IWMMXT_wCGR0</name> <operator pos:start="655:49" pos:end="655:49">+</operator> <operator pos:start="655:51" pos:end="655:51">(</operator><operator pos:start="655:52" pos:end="655:52">(</operator><name pos:start="655:53" pos:end="655:56">insn</name> <operator pos:start="655:58" pos:end="655:59">&gt;&gt;</operator> <literal type="number" pos:start="655:61" pos:end="655:62">20</literal><operator pos:start="655:63" pos:end="655:63">)</operator> <operator pos:start="655:65" pos:end="655:65">&amp;</operator> <literal type="number" pos:start="655:67" pos:end="655:67">3</literal><operator pos:start="655:68" pos:end="655:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="657:9" pos:end="657:38"><expr pos:start="657:9" pos:end="657:37"><call pos:start="657:9" pos:end="657:37"><name pos:start="657:9" pos:end="657:24">tcg_gen_andi_i32</name><argument_list pos:start="657:25" pos:end="657:37">(<argument pos:start="657:26" pos:end="657:28"><expr pos:start="657:26" pos:end="657:28"><name pos:start="657:26" pos:end="657:28">tmp</name></expr></argument>, <argument pos:start="657:31" pos:end="657:33"><expr pos:start="657:31" pos:end="657:33"><name pos:start="657:31" pos:end="657:33">tmp</name></expr></argument>, <argument pos:start="657:36" pos:end="657:36"><expr pos:start="657:36" pos:end="657:36"><literal type="number" pos:start="657:36" pos:end="657:36">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="659:9" pos:end="659:37"><expr pos:start="659:9" pos:end="659:36"><call pos:start="659:9" pos:end="659:36"><name pos:start="659:9" pos:end="659:23">iwmmxt_load_reg</name><argument_list pos:start="659:24" pos:end="659:36">(<argument pos:start="659:25" pos:end="659:30"><expr pos:start="659:25" pos:end="659:30"><name pos:start="659:25" pos:end="659:30">cpu_V1</name></expr></argument>, <argument pos:start="659:33" pos:end="659:35"><expr pos:start="659:33" pos:end="659:35"><name pos:start="659:33" pos:end="659:35">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:61"><expr pos:start="661:9" pos:end="661:60"><call pos:start="661:9" pos:end="661:60"><name pos:start="661:9" pos:end="661:31">gen_helper_iwmmxt_align</name><argument_list pos:start="661:32" pos:end="661:60">(<argument pos:start="661:33" pos:end="661:38"><expr pos:start="661:33" pos:end="661:38"><name pos:start="661:33" pos:end="661:38">cpu_M0</name></expr></argument>, <argument pos:start="661:41" pos:end="661:46"><expr pos:start="661:41" pos:end="661:46"><name pos:start="661:41" pos:end="661:46">cpu_M0</name></expr></argument>, <argument pos:start="661:49" pos:end="661:54"><expr pos:start="661:49" pos:end="661:54"><name pos:start="661:49" pos:end="661:54">cpu_V1</name></expr></argument>, <argument pos:start="661:57" pos:end="661:59"><expr pos:start="661:57" pos:end="661:59"><name pos:start="661:57" pos:end="661:59">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:22"><expr pos:start="663:9" pos:end="663:21"><call pos:start="663:9" pos:end="663:21"><name pos:start="663:9" pos:end="663:16">dead_tmp</name><argument_list pos:start="663:17" pos:end="663:21">(<argument pos:start="663:18" pos:end="663:20"><expr pos:start="663:18" pos:end="663:20"><name pos:start="663:18" pos:end="663:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:39"><expr pos:start="665:9" pos:end="665:38"><call pos:start="665:9" pos:end="665:38"><name pos:start="665:9" pos:end="665:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="665:34" pos:end="665:38">(<argument pos:start="665:35" pos:end="665:37"><expr pos:start="665:35" pos:end="665:37"><name pos:start="665:35" pos:end="665:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="667:9" pos:end="667:32"><expr pos:start="667:9" pos:end="667:31"><call pos:start="667:9" pos:end="667:31"><name pos:start="667:9" pos:end="667:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="667:30" pos:end="667:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="669:9" pos:end="669:14">break;</break>

    <case pos:start="671:5" pos:end="671:15">case <expr pos:start="671:10" pos:end="671:14"><literal type="number" pos:start="671:10" pos:end="671:14">0x601</literal></expr>:</case> <case pos:start="671:17" pos:end="671:27">case <expr pos:start="671:22" pos:end="671:26"><literal type="number" pos:start="671:22" pos:end="671:26">0x605</literal></expr>:</case> <case pos:start="671:29" pos:end="671:39">case <expr pos:start="671:34" pos:end="671:38"><literal type="number" pos:start="671:34" pos:end="671:38">0x609</literal></expr>:</case> <case pos:start="671:41" pos:end="671:51">case <expr pos:start="671:46" pos:end="671:50"><literal type="number" pos:start="671:46" pos:end="671:50">0x60d</literal></expr>:</case>	<comment type="block" pos:start="671:57" pos:end="671:67">/* TINSR */</comment>

        <if_stmt pos:start="673:9" pos:end="675:21"><if pos:start="673:9" pos:end="675:21">if <condition pos:start="673:12" pos:end="673:35">(<expr pos:start="673:13" pos:end="673:34"><operator pos:start="673:13" pos:end="673:13">(</operator><operator pos:start="673:14" pos:end="673:14">(</operator><name pos:start="673:15" pos:end="673:18">insn</name> <operator pos:start="673:20" pos:end="673:21">&gt;&gt;</operator> <literal type="number" pos:start="673:23" pos:end="673:23">6</literal><operator pos:start="673:24" pos:end="673:24">)</operator> <operator pos:start="673:26" pos:end="673:26">&amp;</operator> <literal type="number" pos:start="673:28" pos:end="673:28">3</literal><operator pos:start="673:29" pos:end="673:29">)</operator> <operator pos:start="673:31" pos:end="673:32">==</operator> <literal type="number" pos:start="673:34" pos:end="673:34">3</literal></expr>)</condition><block type="pseudo" pos:start="675:13" pos:end="675:21"><block_content pos:start="675:13" pos:end="675:21">

            <return pos:start="675:13" pos:end="675:21">return <expr pos:start="675:20" pos:end="675:20"><literal type="number" pos:start="675:20" pos:end="675:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="677:9" pos:end="677:32"><expr pos:start="677:9" pos:end="677:31"><name pos:start="677:9" pos:end="677:10">rd</name> <operator pos:start="677:12" pos:end="677:12">=</operator> <operator pos:start="677:14" pos:end="677:14">(</operator><name pos:start="677:15" pos:end="677:18">insn</name> <operator pos:start="677:20" pos:end="677:21">&gt;&gt;</operator> <literal type="number" pos:start="677:23" pos:end="677:24">12</literal><operator pos:start="677:25" pos:end="677:25">)</operator> <operator pos:start="677:27" pos:end="677:27">&amp;</operator> <literal type="number" pos:start="677:29" pos:end="677:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="679:9" pos:end="679:33"><expr pos:start="679:9" pos:end="679:32"><name pos:start="679:9" pos:end="679:11">wrd</name> <operator pos:start="679:13" pos:end="679:13">=</operator> <operator pos:start="679:15" pos:end="679:15">(</operator><name pos:start="679:16" pos:end="679:19">insn</name> <operator pos:start="679:21" pos:end="679:22">&gt;&gt;</operator> <literal type="number" pos:start="679:24" pos:end="679:25">16</literal><operator pos:start="679:26" pos:end="679:26">)</operator> <operator pos:start="679:28" pos:end="679:28">&amp;</operator> <literal type="number" pos:start="679:30" pos:end="679:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="681:9" pos:end="681:30"><expr pos:start="681:9" pos:end="681:29"><name pos:start="681:9" pos:end="681:11">tmp</name> <operator pos:start="681:13" pos:end="681:13">=</operator> <call pos:start="681:15" pos:end="681:29"><name pos:start="681:15" pos:end="681:22">load_reg</name><argument_list pos:start="681:23" pos:end="681:29">(<argument pos:start="681:24" pos:end="681:24"><expr pos:start="681:24" pos:end="681:24"><name pos:start="681:24" pos:end="681:24">s</name></expr></argument>, <argument pos:start="681:27" pos:end="681:28"><expr pos:start="681:27" pos:end="681:28"><name pos:start="681:27" pos:end="681:28">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="683:9" pos:end="683:39"><expr pos:start="683:9" pos:end="683:38"><call pos:start="683:9" pos:end="683:38"><name pos:start="683:9" pos:end="683:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="683:34" pos:end="683:38">(<argument pos:start="683:35" pos:end="683:37"><expr pos:start="683:35" pos:end="683:37"><name pos:start="683:35" pos:end="683:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="685:9" pos:end="717:9">switch <condition pos:start="685:16" pos:end="685:32">(<expr pos:start="685:17" pos:end="685:31"><operator pos:start="685:17" pos:end="685:17">(</operator><name pos:start="685:18" pos:end="685:21">insn</name> <operator pos:start="685:23" pos:end="685:24">&gt;&gt;</operator> <literal type="number" pos:start="685:26" pos:end="685:26">6</literal><operator pos:start="685:27" pos:end="685:27">)</operator> <operator pos:start="685:29" pos:end="685:29">&amp;</operator> <literal type="number" pos:start="685:31" pos:end="685:31">3</literal></expr>)</condition> <block pos:start="685:34" pos:end="717:9">{<block_content pos:start="687:9" pos:end="715:30">

        <case pos:start="687:9" pos:end="687:15">case <expr pos:start="687:14" pos:end="687:14"><literal type="number" pos:start="687:14" pos:end="687:14">0</literal></expr>:</case>

            <expr_stmt pos:start="689:13" pos:end="689:39"><expr pos:start="689:13" pos:end="689:38"><name pos:start="689:13" pos:end="689:16">tmp2</name> <operator pos:start="689:18" pos:end="689:18">=</operator> <call pos:start="689:20" pos:end="689:38"><name pos:start="689:20" pos:end="689:32">tcg_const_i32</name><argument_list pos:start="689:33" pos:end="689:38">(<argument pos:start="689:34" pos:end="689:37"><expr pos:start="689:34" pos:end="689:37"><literal type="number" pos:start="689:34" pos:end="689:37">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:50"><expr pos:start="691:13" pos:end="691:49"><name pos:start="691:13" pos:end="691:16">tmp3</name> <operator pos:start="691:18" pos:end="691:18">=</operator> <call pos:start="691:20" pos:end="691:49"><name pos:start="691:20" pos:end="691:32">tcg_const_i32</name><argument_list pos:start="691:33" pos:end="691:49">(<argument pos:start="691:34" pos:end="691:48"><expr pos:start="691:34" pos:end="691:48"><operator pos:start="691:34" pos:end="691:34">(</operator><name pos:start="691:35" pos:end="691:38">insn</name> <operator pos:start="691:40" pos:end="691:40">&amp;</operator> <literal type="number" pos:start="691:42" pos:end="691:42">7</literal><operator pos:start="691:43" pos:end="691:43">)</operator> <operator pos:start="691:45" pos:end="691:46">&lt;&lt;</operator> <literal type="number" pos:start="691:48" pos:end="691:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="693:13" pos:end="693:18">break;</break>

        <case pos:start="695:9" pos:end="695:15">case <expr pos:start="695:14" pos:end="695:14"><literal type="number" pos:start="695:14" pos:end="695:14">1</literal></expr>:</case>

            <expr_stmt pos:start="697:13" pos:end="697:41"><expr pos:start="697:13" pos:end="697:40"><name pos:start="697:13" pos:end="697:16">tmp2</name> <operator pos:start="697:18" pos:end="697:18">=</operator> <call pos:start="697:20" pos:end="697:40"><name pos:start="697:20" pos:end="697:32">tcg_const_i32</name><argument_list pos:start="697:33" pos:end="697:40">(<argument pos:start="697:34" pos:end="697:39"><expr pos:start="697:34" pos:end="697:39"><literal type="number" pos:start="697:34" pos:end="697:39">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:50"><expr pos:start="699:13" pos:end="699:49"><name pos:start="699:13" pos:end="699:16">tmp3</name> <operator pos:start="699:18" pos:end="699:18">=</operator> <call pos:start="699:20" pos:end="699:49"><name pos:start="699:20" pos:end="699:32">tcg_const_i32</name><argument_list pos:start="699:33" pos:end="699:49">(<argument pos:start="699:34" pos:end="699:48"><expr pos:start="699:34" pos:end="699:48"><operator pos:start="699:34" pos:end="699:34">(</operator><name pos:start="699:35" pos:end="699:38">insn</name> <operator pos:start="699:40" pos:end="699:40">&amp;</operator> <literal type="number" pos:start="699:42" pos:end="699:42">3</literal><operator pos:start="699:43" pos:end="699:43">)</operator> <operator pos:start="699:45" pos:end="699:46">&lt;&lt;</operator> <literal type="number" pos:start="699:48" pos:end="699:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="701:13" pos:end="701:18">break;</break>

        <case pos:start="703:9" pos:end="703:15">case <expr pos:start="703:14" pos:end="703:14"><literal type="number" pos:start="703:14" pos:end="703:14">2</literal></expr>:</case>

            <expr_stmt pos:start="705:13" pos:end="705:45"><expr pos:start="705:13" pos:end="705:44"><name pos:start="705:13" pos:end="705:16">tmp2</name> <operator pos:start="705:18" pos:end="705:18">=</operator> <call pos:start="705:20" pos:end="705:44"><name pos:start="705:20" pos:end="705:32">tcg_const_i32</name><argument_list pos:start="705:33" pos:end="705:44">(<argument pos:start="705:34" pos:end="705:43"><expr pos:start="705:34" pos:end="705:43"><literal type="number" pos:start="705:34" pos:end="705:43">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:50"><expr pos:start="707:13" pos:end="707:49"><name pos:start="707:13" pos:end="707:16">tmp3</name> <operator pos:start="707:18" pos:end="707:18">=</operator> <call pos:start="707:20" pos:end="707:49"><name pos:start="707:20" pos:end="707:32">tcg_const_i32</name><argument_list pos:start="707:33" pos:end="707:49">(<argument pos:start="707:34" pos:end="707:48"><expr pos:start="707:34" pos:end="707:48"><operator pos:start="707:34" pos:end="707:34">(</operator><name pos:start="707:35" pos:end="707:38">insn</name> <operator pos:start="707:40" pos:end="707:40">&amp;</operator> <literal type="number" pos:start="707:42" pos:end="707:42">1</literal><operator pos:start="707:43" pos:end="707:43">)</operator> <operator pos:start="707:45" pos:end="707:46">&lt;&lt;</operator> <literal type="number" pos:start="707:48" pos:end="707:48">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="709:13" pos:end="709:18">break;</break>

        <default pos:start="711:9" pos:end="711:16">default:</default>

            <expr_stmt pos:start="713:13" pos:end="713:30"><expr pos:start="713:13" pos:end="713:29"><call pos:start="713:13" pos:end="713:29"><name pos:start="713:13" pos:end="713:23">TCGV_UNUSED</name><argument_list pos:start="713:24" pos:end="713:29">(<argument pos:start="713:25" pos:end="713:28"><expr pos:start="713:25" pos:end="713:28"><name pos:start="713:25" pos:end="713:28">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="715:13" pos:end="715:30"><expr pos:start="715:13" pos:end="715:29"><call pos:start="715:13" pos:end="715:29"><name pos:start="715:13" pos:end="715:23">TCGV_UNUSED</name><argument_list pos:start="715:24" pos:end="715:29">(<argument pos:start="715:25" pos:end="715:28"><expr pos:start="715:25" pos:end="715:28"><name pos:start="715:25" pos:end="715:28">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="719:9" pos:end="719:64"><expr pos:start="719:9" pos:end="719:63"><call pos:start="719:9" pos:end="719:63"><name pos:start="719:9" pos:end="719:30">gen_helper_iwmmxt_insr</name><argument_list pos:start="719:31" pos:end="719:63">(<argument pos:start="719:32" pos:end="719:37"><expr pos:start="719:32" pos:end="719:37"><name pos:start="719:32" pos:end="719:37">cpu_M0</name></expr></argument>, <argument pos:start="719:40" pos:end="719:45"><expr pos:start="719:40" pos:end="719:45"><name pos:start="719:40" pos:end="719:45">cpu_M0</name></expr></argument>, <argument pos:start="719:48" pos:end="719:50"><expr pos:start="719:48" pos:end="719:50"><name pos:start="719:48" pos:end="719:50">tmp</name></expr></argument>, <argument pos:start="719:53" pos:end="719:56"><expr pos:start="719:53" pos:end="719:56"><name pos:start="719:53" pos:end="719:56">tmp2</name></expr></argument>, <argument pos:start="719:59" pos:end="719:62"><expr pos:start="719:59" pos:end="719:62"><name pos:start="719:59" pos:end="719:62">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:28"><expr pos:start="721:9" pos:end="721:27"><call pos:start="721:9" pos:end="721:27"><name pos:start="721:9" pos:end="721:21">tcg_temp_free</name><argument_list pos:start="721:22" pos:end="721:27">(<argument pos:start="721:23" pos:end="721:26"><expr pos:start="721:23" pos:end="721:26"><name pos:start="721:23" pos:end="721:26">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="723:9" pos:end="723:28"><expr pos:start="723:9" pos:end="723:27"><call pos:start="723:9" pos:end="723:27"><name pos:start="723:9" pos:end="723:21">tcg_temp_free</name><argument_list pos:start="723:22" pos:end="723:27">(<argument pos:start="723:23" pos:end="723:26"><expr pos:start="723:23" pos:end="723:26"><name pos:start="723:23" pos:end="723:26">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="725:9" pos:end="725:22"><expr pos:start="725:9" pos:end="725:21"><call pos:start="725:9" pos:end="725:21"><name pos:start="725:9" pos:end="725:16">dead_tmp</name><argument_list pos:start="725:17" pos:end="725:21">(<argument pos:start="725:18" pos:end="725:20"><expr pos:start="725:18" pos:end="725:20"><name pos:start="725:18" pos:end="725:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="727:9" pos:end="727:39"><expr pos:start="727:9" pos:end="727:38"><call pos:start="727:9" pos:end="727:38"><name pos:start="727:9" pos:end="727:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="727:34" pos:end="727:38">(<argument pos:start="727:35" pos:end="727:37"><expr pos:start="727:35" pos:end="727:37"><name pos:start="727:35" pos:end="727:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="729:9" pos:end="729:32"><expr pos:start="729:9" pos:end="729:31"><call pos:start="729:9" pos:end="729:31"><name pos:start="729:9" pos:end="729:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="729:30" pos:end="729:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="731:9" pos:end="731:14">break;</break>

    <case pos:start="733:5" pos:end="733:15">case <expr pos:start="733:10" pos:end="733:14"><literal type="number" pos:start="733:10" pos:end="733:14">0x107</literal></expr>:</case> <case pos:start="733:17" pos:end="733:27">case <expr pos:start="733:22" pos:end="733:26"><literal type="number" pos:start="733:22" pos:end="733:26">0x507</literal></expr>:</case> <case pos:start="733:29" pos:end="733:39">case <expr pos:start="733:34" pos:end="733:38"><literal type="number" pos:start="733:34" pos:end="733:38">0x907</literal></expr>:</case> <case pos:start="733:41" pos:end="733:51">case <expr pos:start="733:46" pos:end="733:50"><literal type="number" pos:start="733:46" pos:end="733:50">0xd07</literal></expr>:</case>	<comment type="block" pos:start="733:57" pos:end="733:68">/* TEXTRM */</comment>

        <expr_stmt pos:start="735:9" pos:end="735:32"><expr pos:start="735:9" pos:end="735:31"><name pos:start="735:9" pos:end="735:10">rd</name> <operator pos:start="735:12" pos:end="735:12">=</operator> <operator pos:start="735:14" pos:end="735:14">(</operator><name pos:start="735:15" pos:end="735:18">insn</name> <operator pos:start="735:20" pos:end="735:21">&gt;&gt;</operator> <literal type="number" pos:start="735:23" pos:end="735:24">12</literal><operator pos:start="735:25" pos:end="735:25">)</operator> <operator pos:start="735:27" pos:end="735:27">&amp;</operator> <literal type="number" pos:start="735:29" pos:end="735:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="737:9" pos:end="737:33"><expr pos:start="737:9" pos:end="737:32"><name pos:start="737:9" pos:end="737:11">wrd</name> <operator pos:start="737:13" pos:end="737:13">=</operator> <operator pos:start="737:15" pos:end="737:15">(</operator><name pos:start="737:16" pos:end="737:19">insn</name> <operator pos:start="737:21" pos:end="737:22">&gt;&gt;</operator> <literal type="number" pos:start="737:24" pos:end="737:25">16</literal><operator pos:start="737:26" pos:end="737:26">)</operator> <operator pos:start="737:28" pos:end="737:28">&amp;</operator> <literal type="number" pos:start="737:30" pos:end="737:32">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="739:9" pos:end="741:21"><if pos:start="739:9" pos:end="741:21">if <condition pos:start="739:12" pos:end="739:48">(<expr pos:start="739:13" pos:end="739:47"><name pos:start="739:13" pos:end="739:14">rd</name> <operator pos:start="739:16" pos:end="739:17">==</operator> <literal type="number" pos:start="739:19" pos:end="739:20">15</literal> <operator pos:start="739:22" pos:end="739:23">||</operator> <operator pos:start="739:25" pos:end="739:25">(</operator><operator pos:start="739:26" pos:end="739:26">(</operator><name pos:start="739:27" pos:end="739:30">insn</name> <operator pos:start="739:32" pos:end="739:33">&gt;&gt;</operator> <literal type="number" pos:start="739:35" pos:end="739:36">22</literal><operator pos:start="739:37" pos:end="739:37">)</operator> <operator pos:start="739:39" pos:end="739:39">&amp;</operator> <literal type="number" pos:start="739:41" pos:end="739:41">3</literal><operator pos:start="739:42" pos:end="739:42">)</operator> <operator pos:start="739:44" pos:end="739:45">==</operator> <literal type="number" pos:start="739:47" pos:end="739:47">3</literal></expr>)</condition><block type="pseudo" pos:start="741:13" pos:end="741:21"><block_content pos:start="741:13" pos:end="741:21">

            <return pos:start="741:13" pos:end="741:21">return <expr pos:start="741:20" pos:end="741:20"><literal type="number" pos:start="741:20" pos:end="741:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="743:9" pos:end="743:39"><expr pos:start="743:9" pos:end="743:38"><call pos:start="743:9" pos:end="743:38"><name pos:start="743:9" pos:end="743:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="743:34" pos:end="743:38">(<argument pos:start="743:35" pos:end="743:37"><expr pos:start="743:35" pos:end="743:37"><name pos:start="743:35" pos:end="743:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="745:9" pos:end="745:24"><expr pos:start="745:9" pos:end="745:23"><name pos:start="745:9" pos:end="745:11">tmp</name> <operator pos:start="745:13" pos:end="745:13">=</operator> <call pos:start="745:15" pos:end="745:23"><name pos:start="745:15" pos:end="745:21">new_tmp</name><argument_list pos:start="745:22" pos:end="745:23">()</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="747:9" pos:end="793:9">switch <condition pos:start="747:16" pos:end="747:33">(<expr pos:start="747:17" pos:end="747:32"><operator pos:start="747:17" pos:end="747:17">(</operator><name pos:start="747:18" pos:end="747:21">insn</name> <operator pos:start="747:23" pos:end="747:24">&gt;&gt;</operator> <literal type="number" pos:start="747:26" pos:end="747:27">22</literal><operator pos:start="747:28" pos:end="747:28">)</operator> <operator pos:start="747:30" pos:end="747:30">&amp;</operator> <literal type="number" pos:start="747:32" pos:end="747:32">3</literal></expr>)</condition> <block pos:start="747:35" pos:end="793:9">{<block_content pos:start="749:9" pos:end="791:18">

        <case pos:start="749:9" pos:end="749:15">case <expr pos:start="749:14" pos:end="749:14"><literal type="number" pos:start="749:14" pos:end="749:14">0</literal></expr>:</case>

            <expr_stmt pos:start="751:13" pos:end="751:62"><expr pos:start="751:13" pos:end="751:61"><call pos:start="751:13" pos:end="751:61"><name pos:start="751:13" pos:end="751:28">tcg_gen_shri_i64</name><argument_list pos:start="751:29" pos:end="751:61">(<argument pos:start="751:30" pos:end="751:35"><expr pos:start="751:30" pos:end="751:35"><name pos:start="751:30" pos:end="751:35">cpu_M0</name></expr></argument>, <argument pos:start="751:38" pos:end="751:43"><expr pos:start="751:38" pos:end="751:43"><name pos:start="751:38" pos:end="751:43">cpu_M0</name></expr></argument>, <argument pos:start="751:46" pos:end="751:60"><expr pos:start="751:46" pos:end="751:60"><operator pos:start="751:46" pos:end="751:46">(</operator><name pos:start="751:47" pos:end="751:50">insn</name> <operator pos:start="751:52" pos:end="751:52">&amp;</operator> <literal type="number" pos:start="751:54" pos:end="751:54">7</literal><operator pos:start="751:55" pos:end="751:55">)</operator> <operator pos:start="751:57" pos:end="751:58">&lt;&lt;</operator> <literal type="number" pos:start="751:60" pos:end="751:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:47"><expr pos:start="753:13" pos:end="753:46"><call pos:start="753:13" pos:end="753:46"><name pos:start="753:13" pos:end="753:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="753:34" pos:end="753:46">(<argument pos:start="753:35" pos:end="753:37"><expr pos:start="753:35" pos:end="753:37"><name pos:start="753:35" pos:end="753:37">tmp</name></expr></argument>, <argument pos:start="753:40" pos:end="753:45"><expr pos:start="753:40" pos:end="753:45"><name pos:start="753:40" pos:end="753:45">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="755:13" pos:end="763:13"><if pos:start="755:13" pos:end="759:13">if <condition pos:start="755:16" pos:end="755:25">(<expr pos:start="755:17" pos:end="755:24"><name pos:start="755:17" pos:end="755:20">insn</name> <operator pos:start="755:22" pos:end="755:22">&amp;</operator> <literal type="number" pos:start="755:24" pos:end="755:24">8</literal></expr>)</condition> <block pos:start="755:27" pos:end="759:13">{<block_content pos:start="757:17" pos:end="757:44">

                <expr_stmt pos:start="757:17" pos:end="757:44"><expr pos:start="757:17" pos:end="757:43"><call pos:start="757:17" pos:end="757:43"><name pos:start="757:17" pos:end="757:33">tcg_gen_ext8s_i32</name><argument_list pos:start="757:34" pos:end="757:43">(<argument pos:start="757:35" pos:end="757:37"><expr pos:start="757:35" pos:end="757:37"><name pos:start="757:35" pos:end="757:37">tmp</name></expr></argument>, <argument pos:start="757:40" pos:end="757:42"><expr pos:start="757:40" pos:end="757:42"><name pos:start="757:40" pos:end="757:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="759:15" pos:end="763:13">else <block pos:start="759:20" pos:end="763:13">{<block_content pos:start="761:17" pos:end="761:49">

                <expr_stmt pos:start="761:17" pos:end="761:49"><expr pos:start="761:17" pos:end="761:48"><call pos:start="761:17" pos:end="761:48"><name pos:start="761:17" pos:end="761:32">tcg_gen_andi_i32</name><argument_list pos:start="761:33" pos:end="761:48">(<argument pos:start="761:34" pos:end="761:36"><expr pos:start="761:34" pos:end="761:36"><name pos:start="761:34" pos:end="761:36">tmp</name></expr></argument>, <argument pos:start="761:39" pos:end="761:41"><expr pos:start="761:39" pos:end="761:41"><name pos:start="761:39" pos:end="761:41">tmp</name></expr></argument>, <argument pos:start="761:44" pos:end="761:47"><expr pos:start="761:44" pos:end="761:47"><literal type="number" pos:start="761:44" pos:end="761:47">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="765:13" pos:end="765:18">break;</break>

        <case pos:start="767:9" pos:end="767:15">case <expr pos:start="767:14" pos:end="767:14"><literal type="number" pos:start="767:14" pos:end="767:14">1</literal></expr>:</case>

            <expr_stmt pos:start="769:13" pos:end="769:62"><expr pos:start="769:13" pos:end="769:61"><call pos:start="769:13" pos:end="769:61"><name pos:start="769:13" pos:end="769:28">tcg_gen_shri_i64</name><argument_list pos:start="769:29" pos:end="769:61">(<argument pos:start="769:30" pos:end="769:35"><expr pos:start="769:30" pos:end="769:35"><name pos:start="769:30" pos:end="769:35">cpu_M0</name></expr></argument>, <argument pos:start="769:38" pos:end="769:43"><expr pos:start="769:38" pos:end="769:43"><name pos:start="769:38" pos:end="769:43">cpu_M0</name></expr></argument>, <argument pos:start="769:46" pos:end="769:60"><expr pos:start="769:46" pos:end="769:60"><operator pos:start="769:46" pos:end="769:46">(</operator><name pos:start="769:47" pos:end="769:50">insn</name> <operator pos:start="769:52" pos:end="769:52">&amp;</operator> <literal type="number" pos:start="769:54" pos:end="769:54">3</literal><operator pos:start="769:55" pos:end="769:55">)</operator> <operator pos:start="769:57" pos:end="769:58">&lt;&lt;</operator> <literal type="number" pos:start="769:60" pos:end="769:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="771:13" pos:end="771:47"><expr pos:start="771:13" pos:end="771:46"><call pos:start="771:13" pos:end="771:46"><name pos:start="771:13" pos:end="771:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="771:34" pos:end="771:46">(<argument pos:start="771:35" pos:end="771:37"><expr pos:start="771:35" pos:end="771:37"><name pos:start="771:35" pos:end="771:37">tmp</name></expr></argument>, <argument pos:start="771:40" pos:end="771:45"><expr pos:start="771:40" pos:end="771:45"><name pos:start="771:40" pos:end="771:45">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="773:13" pos:end="781:13"><if pos:start="773:13" pos:end="777:13">if <condition pos:start="773:16" pos:end="773:25">(<expr pos:start="773:17" pos:end="773:24"><name pos:start="773:17" pos:end="773:20">insn</name> <operator pos:start="773:22" pos:end="773:22">&amp;</operator> <literal type="number" pos:start="773:24" pos:end="773:24">8</literal></expr>)</condition> <block pos:start="773:27" pos:end="777:13">{<block_content pos:start="775:17" pos:end="775:45">

                <expr_stmt pos:start="775:17" pos:end="775:45"><expr pos:start="775:17" pos:end="775:44"><call pos:start="775:17" pos:end="775:44"><name pos:start="775:17" pos:end="775:34">tcg_gen_ext16s_i32</name><argument_list pos:start="775:35" pos:end="775:44">(<argument pos:start="775:36" pos:end="775:38"><expr pos:start="775:36" pos:end="775:38"><name pos:start="775:36" pos:end="775:38">tmp</name></expr></argument>, <argument pos:start="775:41" pos:end="775:43"><expr pos:start="775:41" pos:end="775:43"><name pos:start="775:41" pos:end="775:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="777:15" pos:end="781:13">else <block pos:start="777:20" pos:end="781:13">{<block_content pos:start="779:17" pos:end="779:51">

                <expr_stmt pos:start="779:17" pos:end="779:51"><expr pos:start="779:17" pos:end="779:50"><call pos:start="779:17" pos:end="779:50"><name pos:start="779:17" pos:end="779:32">tcg_gen_andi_i32</name><argument_list pos:start="779:33" pos:end="779:50">(<argument pos:start="779:34" pos:end="779:36"><expr pos:start="779:34" pos:end="779:36"><name pos:start="779:34" pos:end="779:36">tmp</name></expr></argument>, <argument pos:start="779:39" pos:end="779:41"><expr pos:start="779:39" pos:end="779:41"><name pos:start="779:39" pos:end="779:41">tmp</name></expr></argument>, <argument pos:start="779:44" pos:end="779:49"><expr pos:start="779:44" pos:end="779:49"><literal type="number" pos:start="779:44" pos:end="779:49">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="783:13" pos:end="783:18">break;</break>

        <case pos:start="785:9" pos:end="785:15">case <expr pos:start="785:14" pos:end="785:14"><literal type="number" pos:start="785:14" pos:end="785:14">2</literal></expr>:</case>

            <expr_stmt pos:start="787:13" pos:end="787:62"><expr pos:start="787:13" pos:end="787:61"><call pos:start="787:13" pos:end="787:61"><name pos:start="787:13" pos:end="787:28">tcg_gen_shri_i64</name><argument_list pos:start="787:29" pos:end="787:61">(<argument pos:start="787:30" pos:end="787:35"><expr pos:start="787:30" pos:end="787:35"><name pos:start="787:30" pos:end="787:35">cpu_M0</name></expr></argument>, <argument pos:start="787:38" pos:end="787:43"><expr pos:start="787:38" pos:end="787:43"><name pos:start="787:38" pos:end="787:43">cpu_M0</name></expr></argument>, <argument pos:start="787:46" pos:end="787:60"><expr pos:start="787:46" pos:end="787:60"><operator pos:start="787:46" pos:end="787:46">(</operator><name pos:start="787:47" pos:end="787:50">insn</name> <operator pos:start="787:52" pos:end="787:52">&amp;</operator> <literal type="number" pos:start="787:54" pos:end="787:54">1</literal><operator pos:start="787:55" pos:end="787:55">)</operator> <operator pos:start="787:57" pos:end="787:58">&lt;&lt;</operator> <literal type="number" pos:start="787:60" pos:end="787:60">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="789:13" pos:end="789:47"><expr pos:start="789:13" pos:end="789:46"><call pos:start="789:13" pos:end="789:46"><name pos:start="789:13" pos:end="789:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="789:34" pos:end="789:46">(<argument pos:start="789:35" pos:end="789:37"><expr pos:start="789:35" pos:end="789:37"><name pos:start="789:35" pos:end="789:37">tmp</name></expr></argument>, <argument pos:start="789:40" pos:end="789:45"><expr pos:start="789:40" pos:end="789:45"><name pos:start="789:40" pos:end="789:45">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="791:13" pos:end="791:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="795:9" pos:end="795:30"><expr pos:start="795:9" pos:end="795:29"><call pos:start="795:9" pos:end="795:29"><name pos:start="795:9" pos:end="795:17">store_reg</name><argument_list pos:start="795:18" pos:end="795:29">(<argument pos:start="795:19" pos:end="795:19"><expr pos:start="795:19" pos:end="795:19"><name pos:start="795:19" pos:end="795:19">s</name></expr></argument>, <argument pos:start="795:22" pos:end="795:23"><expr pos:start="795:22" pos:end="795:23"><name pos:start="795:22" pos:end="795:23">rd</name></expr></argument>, <argument pos:start="795:26" pos:end="795:28"><expr pos:start="795:26" pos:end="795:28"><name pos:start="795:26" pos:end="795:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="797:9" pos:end="797:14">break;</break>

    <case pos:start="799:5" pos:end="799:15">case <expr pos:start="799:10" pos:end="799:14"><literal type="number" pos:start="799:10" pos:end="799:14">0x117</literal></expr>:</case> <case pos:start="799:17" pos:end="799:27">case <expr pos:start="799:22" pos:end="799:26"><literal type="number" pos:start="799:22" pos:end="799:26">0x517</literal></expr>:</case> <case pos:start="799:29" pos:end="799:39">case <expr pos:start="799:34" pos:end="799:38"><literal type="number" pos:start="799:34" pos:end="799:38">0x917</literal></expr>:</case> <case pos:start="799:41" pos:end="799:51">case <expr pos:start="799:46" pos:end="799:50"><literal type="number" pos:start="799:46" pos:end="799:50">0xd17</literal></expr>:</case>	<comment type="block" pos:start="799:57" pos:end="799:68">/* TEXTRC */</comment>

        <if_stmt pos:start="801:9" pos:end="803:21"><if pos:start="801:9" pos:end="803:21">if <condition pos:start="801:12" pos:end="801:73">(<expr pos:start="801:13" pos:end="801:72"><operator pos:start="801:13" pos:end="801:13">(</operator><name pos:start="801:14" pos:end="801:17">insn</name> <operator pos:start="801:19" pos:end="801:19">&amp;</operator> <literal type="number" pos:start="801:21" pos:end="801:30">0x000ff008</literal><operator pos:start="801:31" pos:end="801:31">)</operator> <operator pos:start="801:33" pos:end="801:34">!=</operator> <literal type="number" pos:start="801:36" pos:end="801:45">0x0003f000</literal> <operator pos:start="801:47" pos:end="801:48">||</operator> <operator pos:start="801:50" pos:end="801:50">(</operator><operator pos:start="801:51" pos:end="801:51">(</operator><name pos:start="801:52" pos:end="801:55">insn</name> <operator pos:start="801:57" pos:end="801:58">&gt;&gt;</operator> <literal type="number" pos:start="801:60" pos:end="801:61">22</literal><operator pos:start="801:62" pos:end="801:62">)</operator> <operator pos:start="801:64" pos:end="801:64">&amp;</operator> <literal type="number" pos:start="801:66" pos:end="801:66">3</literal><operator pos:start="801:67" pos:end="801:67">)</operator> <operator pos:start="801:69" pos:end="801:70">==</operator> <literal type="number" pos:start="801:72" pos:end="801:72">3</literal></expr>)</condition><block type="pseudo" pos:start="803:13" pos:end="803:21"><block_content pos:start="803:13" pos:end="803:21">

            <return pos:start="803:13" pos:end="803:21">return <expr pos:start="803:20" pos:end="803:20"><literal type="number" pos:start="803:20" pos:end="803:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:49"><expr pos:start="805:9" pos:end="805:48"><name pos:start="805:9" pos:end="805:11">tmp</name> <operator pos:start="805:13" pos:end="805:13">=</operator> <call pos:start="805:15" pos:end="805:48"><name pos:start="805:15" pos:end="805:30">iwmmxt_load_creg</name><argument_list pos:start="805:31" pos:end="805:48">(<argument pos:start="805:32" pos:end="805:47"><expr pos:start="805:32" pos:end="805:47"><name pos:start="805:32" pos:end="805:47">ARM_IWMMXT_wCASF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="807:9" pos:end="827:9">switch <condition pos:start="807:16" pos:end="807:33">(<expr pos:start="807:17" pos:end="807:32"><operator pos:start="807:17" pos:end="807:17">(</operator><name pos:start="807:18" pos:end="807:21">insn</name> <operator pos:start="807:23" pos:end="807:24">&gt;&gt;</operator> <literal type="number" pos:start="807:26" pos:end="807:27">22</literal><operator pos:start="807:28" pos:end="807:28">)</operator> <operator pos:start="807:30" pos:end="807:30">&amp;</operator> <literal type="number" pos:start="807:32" pos:end="807:32">3</literal></expr>)</condition> <block pos:start="807:35" pos:end="827:9">{<block_content pos:start="809:9" pos:end="825:18">

        <case pos:start="809:9" pos:end="809:15">case <expr pos:start="809:14" pos:end="809:14"><literal type="number" pos:start="809:14" pos:end="809:14">0</literal></expr>:</case>

            <expr_stmt pos:start="811:13" pos:end="811:62"><expr pos:start="811:13" pos:end="811:61"><call pos:start="811:13" pos:end="811:61"><name pos:start="811:13" pos:end="811:28">tcg_gen_shri_i32</name><argument_list pos:start="811:29" pos:end="811:61">(<argument pos:start="811:30" pos:end="811:32"><expr pos:start="811:30" pos:end="811:32"><name pos:start="811:30" pos:end="811:32">tmp</name></expr></argument>, <argument pos:start="811:35" pos:end="811:37"><expr pos:start="811:35" pos:end="811:37"><name pos:start="811:35" pos:end="811:37">tmp</name></expr></argument>, <argument pos:start="811:40" pos:end="811:60"><expr pos:start="811:40" pos:end="811:60"><operator pos:start="811:40" pos:end="811:40">(</operator><operator pos:start="811:41" pos:end="811:41">(</operator><name pos:start="811:42" pos:end="811:45">insn</name> <operator pos:start="811:47" pos:end="811:47">&amp;</operator> <literal type="number" pos:start="811:49" pos:end="811:49">7</literal><operator pos:start="811:50" pos:end="811:50">)</operator> <operator pos:start="811:52" pos:end="811:53">&lt;&lt;</operator> <literal type="number" pos:start="811:55" pos:end="811:55">2</literal><operator pos:start="811:56" pos:end="811:56">)</operator> <operator pos:start="811:58" pos:end="811:58">+</operator> <literal type="number" pos:start="811:60" pos:end="811:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="813:13" pos:end="813:18">break;</break>

        <case pos:start="815:9" pos:end="815:15">case <expr pos:start="815:14" pos:end="815:14"><literal type="number" pos:start="815:14" pos:end="815:14">1</literal></expr>:</case>

            <expr_stmt pos:start="817:13" pos:end="817:62"><expr pos:start="817:13" pos:end="817:61"><call pos:start="817:13" pos:end="817:61"><name pos:start="817:13" pos:end="817:28">tcg_gen_shri_i32</name><argument_list pos:start="817:29" pos:end="817:61">(<argument pos:start="817:30" pos:end="817:32"><expr pos:start="817:30" pos:end="817:32"><name pos:start="817:30" pos:end="817:32">tmp</name></expr></argument>, <argument pos:start="817:35" pos:end="817:37"><expr pos:start="817:35" pos:end="817:37"><name pos:start="817:35" pos:end="817:37">tmp</name></expr></argument>, <argument pos:start="817:40" pos:end="817:60"><expr pos:start="817:40" pos:end="817:60"><operator pos:start="817:40" pos:end="817:40">(</operator><operator pos:start="817:41" pos:end="817:41">(</operator><name pos:start="817:42" pos:end="817:45">insn</name> <operator pos:start="817:47" pos:end="817:47">&amp;</operator> <literal type="number" pos:start="817:49" pos:end="817:49">3</literal><operator pos:start="817:50" pos:end="817:50">)</operator> <operator pos:start="817:52" pos:end="817:53">&lt;&lt;</operator> <literal type="number" pos:start="817:55" pos:end="817:55">3</literal><operator pos:start="817:56" pos:end="817:56">)</operator> <operator pos:start="817:58" pos:end="817:58">+</operator> <literal type="number" pos:start="817:60" pos:end="817:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="819:13" pos:end="819:18">break;</break>

        <case pos:start="821:9" pos:end="821:15">case <expr pos:start="821:14" pos:end="821:14"><literal type="number" pos:start="821:14" pos:end="821:14">2</literal></expr>:</case>

            <expr_stmt pos:start="823:13" pos:end="823:63"><expr pos:start="823:13" pos:end="823:62"><call pos:start="823:13" pos:end="823:62"><name pos:start="823:13" pos:end="823:28">tcg_gen_shri_i32</name><argument_list pos:start="823:29" pos:end="823:62">(<argument pos:start="823:30" pos:end="823:32"><expr pos:start="823:30" pos:end="823:32"><name pos:start="823:30" pos:end="823:32">tmp</name></expr></argument>, <argument pos:start="823:35" pos:end="823:37"><expr pos:start="823:35" pos:end="823:37"><name pos:start="823:35" pos:end="823:37">tmp</name></expr></argument>, <argument pos:start="823:40" pos:end="823:61"><expr pos:start="823:40" pos:end="823:61"><operator pos:start="823:40" pos:end="823:40">(</operator><operator pos:start="823:41" pos:end="823:41">(</operator><name pos:start="823:42" pos:end="823:45">insn</name> <operator pos:start="823:47" pos:end="823:47">&amp;</operator> <literal type="number" pos:start="823:49" pos:end="823:49">1</literal><operator pos:start="823:50" pos:end="823:50">)</operator> <operator pos:start="823:52" pos:end="823:53">&lt;&lt;</operator> <literal type="number" pos:start="823:55" pos:end="823:55">4</literal><operator pos:start="823:56" pos:end="823:56">)</operator> <operator pos:start="823:58" pos:end="823:58">+</operator> <literal type="number" pos:start="823:60" pos:end="823:61">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="825:13" pos:end="825:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="829:9" pos:end="829:39"><expr pos:start="829:9" pos:end="829:38"><call pos:start="829:9" pos:end="829:38"><name pos:start="829:9" pos:end="829:24">tcg_gen_shli_i32</name><argument_list pos:start="829:25" pos:end="829:38">(<argument pos:start="829:26" pos:end="829:28"><expr pos:start="829:26" pos:end="829:28"><name pos:start="829:26" pos:end="829:28">tmp</name></expr></argument>, <argument pos:start="829:31" pos:end="829:33"><expr pos:start="829:31" pos:end="829:33"><name pos:start="829:31" pos:end="829:33">tmp</name></expr></argument>, <argument pos:start="829:36" pos:end="829:37"><expr pos:start="829:36" pos:end="829:37"><literal type="number" pos:start="829:36" pos:end="829:37">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:26"><expr pos:start="831:9" pos:end="831:25"><call pos:start="831:9" pos:end="831:25"><name pos:start="831:9" pos:end="831:20">gen_set_nzcv</name><argument_list pos:start="831:21" pos:end="831:25">(<argument pos:start="831:22" pos:end="831:24"><expr pos:start="831:22" pos:end="831:24"><name pos:start="831:22" pos:end="831:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="833:9" pos:end="833:22"><expr pos:start="833:9" pos:end="833:21"><call pos:start="833:9" pos:end="833:21"><name pos:start="833:9" pos:end="833:16">dead_tmp</name><argument_list pos:start="833:17" pos:end="833:21">(<argument pos:start="833:18" pos:end="833:20"><expr pos:start="833:18" pos:end="833:20"><name pos:start="833:18" pos:end="833:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="835:9" pos:end="835:14">break;</break>

    <case pos:start="837:5" pos:end="837:15">case <expr pos:start="837:10" pos:end="837:14"><literal type="number" pos:start="837:10" pos:end="837:14">0x401</literal></expr>:</case> <case pos:start="837:17" pos:end="837:27">case <expr pos:start="837:22" pos:end="837:26"><literal type="number" pos:start="837:22" pos:end="837:26">0x405</literal></expr>:</case> <case pos:start="837:29" pos:end="837:39">case <expr pos:start="837:34" pos:end="837:38"><literal type="number" pos:start="837:34" pos:end="837:38">0x409</literal></expr>:</case> <case pos:start="837:41" pos:end="837:51">case <expr pos:start="837:46" pos:end="837:50"><literal type="number" pos:start="837:46" pos:end="837:50">0x40d</literal></expr>:</case>	<comment type="block" pos:start="837:57" pos:end="837:67">/* TBCST */</comment>

        <if_stmt pos:start="839:9" pos:end="841:21"><if pos:start="839:9" pos:end="841:21">if <condition pos:start="839:12" pos:end="839:35">(<expr pos:start="839:13" pos:end="839:34"><operator pos:start="839:13" pos:end="839:13">(</operator><operator pos:start="839:14" pos:end="839:14">(</operator><name pos:start="839:15" pos:end="839:18">insn</name> <operator pos:start="839:20" pos:end="839:21">&gt;&gt;</operator> <literal type="number" pos:start="839:23" pos:end="839:23">6</literal><operator pos:start="839:24" pos:end="839:24">)</operator> <operator pos:start="839:26" pos:end="839:26">&amp;</operator> <literal type="number" pos:start="839:28" pos:end="839:28">3</literal><operator pos:start="839:29" pos:end="839:29">)</operator> <operator pos:start="839:31" pos:end="839:32">==</operator> <literal type="number" pos:start="839:34" pos:end="839:34">3</literal></expr>)</condition><block type="pseudo" pos:start="841:13" pos:end="841:21"><block_content pos:start="841:13" pos:end="841:21">

            <return pos:start="841:13" pos:end="841:21">return <expr pos:start="841:20" pos:end="841:20"><literal type="number" pos:start="841:20" pos:end="841:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="843:9" pos:end="843:32"><expr pos:start="843:9" pos:end="843:31"><name pos:start="843:9" pos:end="843:10">rd</name> <operator pos:start="843:12" pos:end="843:12">=</operator> <operator pos:start="843:14" pos:end="843:14">(</operator><name pos:start="843:15" pos:end="843:18">insn</name> <operator pos:start="843:20" pos:end="843:21">&gt;&gt;</operator> <literal type="number" pos:start="843:23" pos:end="843:24">12</literal><operator pos:start="843:25" pos:end="843:25">)</operator> <operator pos:start="843:27" pos:end="843:27">&amp;</operator> <literal type="number" pos:start="843:29" pos:end="843:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="845:9" pos:end="845:33"><expr pos:start="845:9" pos:end="845:32"><name pos:start="845:9" pos:end="845:11">wrd</name> <operator pos:start="845:13" pos:end="845:13">=</operator> <operator pos:start="845:15" pos:end="845:15">(</operator><name pos:start="845:16" pos:end="845:19">insn</name> <operator pos:start="845:21" pos:end="845:22">&gt;&gt;</operator> <literal type="number" pos:start="845:24" pos:end="845:25">16</literal><operator pos:start="845:26" pos:end="845:26">)</operator> <operator pos:start="845:28" pos:end="845:28">&amp;</operator> <literal type="number" pos:start="845:30" pos:end="845:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="847:9" pos:end="847:30"><expr pos:start="847:9" pos:end="847:29"><name pos:start="847:9" pos:end="847:11">tmp</name> <operator pos:start="847:13" pos:end="847:13">=</operator> <call pos:start="847:15" pos:end="847:29"><name pos:start="847:15" pos:end="847:22">load_reg</name><argument_list pos:start="847:23" pos:end="847:29">(<argument pos:start="847:24" pos:end="847:24"><expr pos:start="847:24" pos:end="847:24"><name pos:start="847:24" pos:end="847:24">s</name></expr></argument>, <argument pos:start="847:27" pos:end="847:28"><expr pos:start="847:27" pos:end="847:28"><name pos:start="847:27" pos:end="847:28">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="849:9" pos:end="869:9">switch <condition pos:start="849:16" pos:end="849:32">(<expr pos:start="849:17" pos:end="849:31"><operator pos:start="849:17" pos:end="849:17">(</operator><name pos:start="849:18" pos:end="849:21">insn</name> <operator pos:start="849:23" pos:end="849:24">&gt;&gt;</operator> <literal type="number" pos:start="849:26" pos:end="849:26">6</literal><operator pos:start="849:27" pos:end="849:27">)</operator> <operator pos:start="849:29" pos:end="849:29">&amp;</operator> <literal type="number" pos:start="849:31" pos:end="849:31">3</literal></expr>)</condition> <block pos:start="849:34" pos:end="869:9">{<block_content pos:start="851:9" pos:end="867:18">

        <case pos:start="851:9" pos:end="851:15">case <expr pos:start="851:14" pos:end="851:14"><literal type="number" pos:start="851:14" pos:end="851:14">0</literal></expr>:</case>

            <expr_stmt pos:start="853:13" pos:end="853:49"><expr pos:start="853:13" pos:end="853:48"><call pos:start="853:13" pos:end="853:48"><name pos:start="853:13" pos:end="853:35">gen_helper_iwmmxt_bcstb</name><argument_list pos:start="853:36" pos:end="853:48">(<argument pos:start="853:37" pos:end="853:42"><expr pos:start="853:37" pos:end="853:42"><name pos:start="853:37" pos:end="853:42">cpu_M0</name></expr></argument>, <argument pos:start="853:45" pos:end="853:47"><expr pos:start="853:45" pos:end="853:47"><name pos:start="853:45" pos:end="853:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="855:13" pos:end="855:18">break;</break>

        <case pos:start="857:9" pos:end="857:15">case <expr pos:start="857:14" pos:end="857:14"><literal type="number" pos:start="857:14" pos:end="857:14">1</literal></expr>:</case>

            <expr_stmt pos:start="859:13" pos:end="859:49"><expr pos:start="859:13" pos:end="859:48"><call pos:start="859:13" pos:end="859:48"><name pos:start="859:13" pos:end="859:35">gen_helper_iwmmxt_bcstw</name><argument_list pos:start="859:36" pos:end="859:48">(<argument pos:start="859:37" pos:end="859:42"><expr pos:start="859:37" pos:end="859:42"><name pos:start="859:37" pos:end="859:42">cpu_M0</name></expr></argument>, <argument pos:start="859:45" pos:end="859:47"><expr pos:start="859:45" pos:end="859:47"><name pos:start="859:45" pos:end="859:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="861:13" pos:end="861:18">break;</break>

        <case pos:start="863:9" pos:end="863:15">case <expr pos:start="863:14" pos:end="863:14"><literal type="number" pos:start="863:14" pos:end="863:14">2</literal></expr>:</case>

            <expr_stmt pos:start="865:13" pos:end="865:49"><expr pos:start="865:13" pos:end="865:48"><call pos:start="865:13" pos:end="865:48"><name pos:start="865:13" pos:end="865:35">gen_helper_iwmmxt_bcstl</name><argument_list pos:start="865:36" pos:end="865:48">(<argument pos:start="865:37" pos:end="865:42"><expr pos:start="865:37" pos:end="865:42"><name pos:start="865:37" pos:end="865:42">cpu_M0</name></expr></argument>, <argument pos:start="865:45" pos:end="865:47"><expr pos:start="865:45" pos:end="865:47"><name pos:start="865:45" pos:end="865:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="867:13" pos:end="867:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="871:9" pos:end="871:22"><expr pos:start="871:9" pos:end="871:21"><call pos:start="871:9" pos:end="871:21"><name pos:start="871:9" pos:end="871:16">dead_tmp</name><argument_list pos:start="871:17" pos:end="871:21">(<argument pos:start="871:18" pos:end="871:20"><expr pos:start="871:18" pos:end="871:20"><name pos:start="871:18" pos:end="871:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="873:9" pos:end="873:39"><expr pos:start="873:9" pos:end="873:38"><call pos:start="873:9" pos:end="873:38"><name pos:start="873:9" pos:end="873:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="873:34" pos:end="873:38">(<argument pos:start="873:35" pos:end="873:37"><expr pos:start="873:35" pos:end="873:37"><name pos:start="873:35" pos:end="873:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="875:9" pos:end="875:32"><expr pos:start="875:9" pos:end="875:31"><call pos:start="875:9" pos:end="875:31"><name pos:start="875:9" pos:end="875:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="875:30" pos:end="875:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="877:9" pos:end="877:14">break;</break>

    <case pos:start="879:5" pos:end="879:15">case <expr pos:start="879:10" pos:end="879:14"><literal type="number" pos:start="879:10" pos:end="879:14">0x113</literal></expr>:</case> <case pos:start="879:17" pos:end="879:27">case <expr pos:start="879:22" pos:end="879:26"><literal type="number" pos:start="879:22" pos:end="879:26">0x513</literal></expr>:</case> <case pos:start="879:29" pos:end="879:39">case <expr pos:start="879:34" pos:end="879:38"><literal type="number" pos:start="879:34" pos:end="879:38">0x913</literal></expr>:</case> <case pos:start="879:41" pos:end="879:51">case <expr pos:start="879:46" pos:end="879:50"><literal type="number" pos:start="879:46" pos:end="879:50">0xd13</literal></expr>:</case>	<comment type="block" pos:start="879:57" pos:end="879:67">/* TANDC */</comment>

        <if_stmt pos:start="881:9" pos:end="883:21"><if pos:start="881:9" pos:end="883:21">if <condition pos:start="881:12" pos:end="881:73">(<expr pos:start="881:13" pos:end="881:72"><operator pos:start="881:13" pos:end="881:13">(</operator><name pos:start="881:14" pos:end="881:17">insn</name> <operator pos:start="881:19" pos:end="881:19">&amp;</operator> <literal type="number" pos:start="881:21" pos:end="881:30">0x000ff00f</literal><operator pos:start="881:31" pos:end="881:31">)</operator> <operator pos:start="881:33" pos:end="881:34">!=</operator> <literal type="number" pos:start="881:36" pos:end="881:45">0x0003f000</literal> <operator pos:start="881:47" pos:end="881:48">||</operator> <operator pos:start="881:50" pos:end="881:50">(</operator><operator pos:start="881:51" pos:end="881:51">(</operator><name pos:start="881:52" pos:end="881:55">insn</name> <operator pos:start="881:57" pos:end="881:58">&gt;&gt;</operator> <literal type="number" pos:start="881:60" pos:end="881:61">22</literal><operator pos:start="881:62" pos:end="881:62">)</operator> <operator pos:start="881:64" pos:end="881:64">&amp;</operator> <literal type="number" pos:start="881:66" pos:end="881:66">3</literal><operator pos:start="881:67" pos:end="881:67">)</operator> <operator pos:start="881:69" pos:end="881:70">==</operator> <literal type="number" pos:start="881:72" pos:end="881:72">3</literal></expr>)</condition><block type="pseudo" pos:start="883:13" pos:end="883:21"><block_content pos:start="883:13" pos:end="883:21">

            <return pos:start="883:13" pos:end="883:21">return <expr pos:start="883:20" pos:end="883:20"><literal type="number" pos:start="883:20" pos:end="883:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:49"><expr pos:start="885:9" pos:end="885:48"><name pos:start="885:9" pos:end="885:11">tmp</name> <operator pos:start="885:13" pos:end="885:13">=</operator> <call pos:start="885:15" pos:end="885:48"><name pos:start="885:15" pos:end="885:30">iwmmxt_load_creg</name><argument_list pos:start="885:31" pos:end="885:48">(<argument pos:start="885:32" pos:end="885:47"><expr pos:start="885:32" pos:end="885:47"><name pos:start="885:32" pos:end="885:47">ARM_IWMMXT_wCASF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="887:9" pos:end="887:25"><expr pos:start="887:9" pos:end="887:24"><name pos:start="887:9" pos:end="887:12">tmp2</name> <operator pos:start="887:14" pos:end="887:14">=</operator> <call pos:start="887:16" pos:end="887:24"><name pos:start="887:16" pos:end="887:22">new_tmp</name><argument_list pos:start="887:23" pos:end="887:24">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="889:9" pos:end="889:35"><expr pos:start="889:9" pos:end="889:34"><call pos:start="889:9" pos:end="889:34"><name pos:start="889:9" pos:end="889:23">tcg_gen_mov_i32</name><argument_list pos:start="889:24" pos:end="889:34">(<argument pos:start="889:25" pos:end="889:28"><expr pos:start="889:25" pos:end="889:28"><name pos:start="889:25" pos:end="889:28">tmp2</name></expr></argument>, <argument pos:start="889:31" pos:end="889:33"><expr pos:start="889:31" pos:end="889:33"><name pos:start="889:31" pos:end="889:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="891:9" pos:end="925:9">switch <condition pos:start="891:16" pos:end="891:33">(<expr pos:start="891:17" pos:end="891:32"><operator pos:start="891:17" pos:end="891:17">(</operator><name pos:start="891:18" pos:end="891:21">insn</name> <operator pos:start="891:23" pos:end="891:24">&gt;&gt;</operator> <literal type="number" pos:start="891:26" pos:end="891:27">22</literal><operator pos:start="891:28" pos:end="891:28">)</operator> <operator pos:start="891:30" pos:end="891:30">&amp;</operator> <literal type="number" pos:start="891:32" pos:end="891:32">3</literal></expr>)</condition> <block pos:start="891:35" pos:end="925:9">{<block_content pos:start="893:9" pos:end="923:18">

        <case pos:start="893:9" pos:end="893:15">case <expr pos:start="893:14" pos:end="893:14"><literal type="number" pos:start="893:14" pos:end="893:14">0</literal></expr>:</case>

            <for pos:start="895:13" pos:end="901:13">for <control pos:start="895:17" pos:end="895:36">(<init pos:start="895:18" pos:end="895:23"><expr pos:start="895:18" pos:end="895:22"><name pos:start="895:18" pos:end="895:18">i</name> <operator pos:start="895:20" pos:end="895:20">=</operator> <literal type="number" pos:start="895:22" pos:end="895:22">0</literal></expr>;</init> <condition pos:start="895:25" pos:end="895:30"><expr pos:start="895:25" pos:end="895:29"><name pos:start="895:25" pos:end="895:25">i</name> <operator pos:start="895:27" pos:end="895:27">&lt;</operator> <literal type="number" pos:start="895:29" pos:end="895:29">7</literal></expr>;</condition> <incr pos:start="895:32" pos:end="895:35"><expr pos:start="895:32" pos:end="895:35"><name pos:start="895:32" pos:end="895:32">i</name> <operator pos:start="895:34" pos:end="895:35">++</operator></expr></incr>)</control> <block pos:start="895:38" pos:end="901:13">{<block_content pos:start="897:17" pos:end="899:48">

                <expr_stmt pos:start="897:17" pos:end="897:48"><expr pos:start="897:17" pos:end="897:47"><call pos:start="897:17" pos:end="897:47"><name pos:start="897:17" pos:end="897:32">tcg_gen_shli_i32</name><argument_list pos:start="897:33" pos:end="897:47">(<argument pos:start="897:34" pos:end="897:37"><expr pos:start="897:34" pos:end="897:37"><name pos:start="897:34" pos:end="897:37">tmp2</name></expr></argument>, <argument pos:start="897:40" pos:end="897:43"><expr pos:start="897:40" pos:end="897:43"><name pos:start="897:40" pos:end="897:43">tmp2</name></expr></argument>, <argument pos:start="897:46" pos:end="897:46"><expr pos:start="897:46" pos:end="897:46"><literal type="number" pos:start="897:46" pos:end="897:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="899:17" pos:end="899:48"><expr pos:start="899:17" pos:end="899:47"><call pos:start="899:17" pos:end="899:47"><name pos:start="899:17" pos:end="899:31">tcg_gen_and_i32</name><argument_list pos:start="899:32" pos:end="899:47">(<argument pos:start="899:33" pos:end="899:35"><expr pos:start="899:33" pos:end="899:35"><name pos:start="899:33" pos:end="899:35">tmp</name></expr></argument>, <argument pos:start="899:38" pos:end="899:40"><expr pos:start="899:38" pos:end="899:40"><name pos:start="899:38" pos:end="899:40">tmp</name></expr></argument>, <argument pos:start="899:43" pos:end="899:46"><expr pos:start="899:43" pos:end="899:46"><name pos:start="899:43" pos:end="899:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="903:13" pos:end="903:18">break;</break>

        <case pos:start="905:9" pos:end="905:15">case <expr pos:start="905:14" pos:end="905:14"><literal type="number" pos:start="905:14" pos:end="905:14">1</literal></expr>:</case>

            <for pos:start="907:13" pos:end="913:13">for <control pos:start="907:17" pos:end="907:36">(<init pos:start="907:18" pos:end="907:23"><expr pos:start="907:18" pos:end="907:22"><name pos:start="907:18" pos:end="907:18">i</name> <operator pos:start="907:20" pos:end="907:20">=</operator> <literal type="number" pos:start="907:22" pos:end="907:22">0</literal></expr>;</init> <condition pos:start="907:25" pos:end="907:30"><expr pos:start="907:25" pos:end="907:29"><name pos:start="907:25" pos:end="907:25">i</name> <operator pos:start="907:27" pos:end="907:27">&lt;</operator> <literal type="number" pos:start="907:29" pos:end="907:29">3</literal></expr>;</condition> <incr pos:start="907:32" pos:end="907:35"><expr pos:start="907:32" pos:end="907:35"><name pos:start="907:32" pos:end="907:32">i</name> <operator pos:start="907:34" pos:end="907:35">++</operator></expr></incr>)</control> <block pos:start="907:38" pos:end="913:13">{<block_content pos:start="909:17" pos:end="911:48">

                <expr_stmt pos:start="909:17" pos:end="909:48"><expr pos:start="909:17" pos:end="909:47"><call pos:start="909:17" pos:end="909:47"><name pos:start="909:17" pos:end="909:32">tcg_gen_shli_i32</name><argument_list pos:start="909:33" pos:end="909:47">(<argument pos:start="909:34" pos:end="909:37"><expr pos:start="909:34" pos:end="909:37"><name pos:start="909:34" pos:end="909:37">tmp2</name></expr></argument>, <argument pos:start="909:40" pos:end="909:43"><expr pos:start="909:40" pos:end="909:43"><name pos:start="909:40" pos:end="909:43">tmp2</name></expr></argument>, <argument pos:start="909:46" pos:end="909:46"><expr pos:start="909:46" pos:end="909:46"><literal type="number" pos:start="909:46" pos:end="909:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="911:17" pos:end="911:48"><expr pos:start="911:17" pos:end="911:47"><call pos:start="911:17" pos:end="911:47"><name pos:start="911:17" pos:end="911:31">tcg_gen_and_i32</name><argument_list pos:start="911:32" pos:end="911:47">(<argument pos:start="911:33" pos:end="911:35"><expr pos:start="911:33" pos:end="911:35"><name pos:start="911:33" pos:end="911:35">tmp</name></expr></argument>, <argument pos:start="911:38" pos:end="911:40"><expr pos:start="911:38" pos:end="911:40"><name pos:start="911:38" pos:end="911:40">tmp</name></expr></argument>, <argument pos:start="911:43" pos:end="911:46"><expr pos:start="911:43" pos:end="911:46"><name pos:start="911:43" pos:end="911:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="915:13" pos:end="915:18">break;</break>

        <case pos:start="917:9" pos:end="917:15">case <expr pos:start="917:14" pos:end="917:14"><literal type="number" pos:start="917:14" pos:end="917:14">2</literal></expr>:</case>

            <expr_stmt pos:start="919:13" pos:end="919:45"><expr pos:start="919:13" pos:end="919:44"><call pos:start="919:13" pos:end="919:44"><name pos:start="919:13" pos:end="919:28">tcg_gen_shli_i32</name><argument_list pos:start="919:29" pos:end="919:44">(<argument pos:start="919:30" pos:end="919:33"><expr pos:start="919:30" pos:end="919:33"><name pos:start="919:30" pos:end="919:33">tmp2</name></expr></argument>, <argument pos:start="919:36" pos:end="919:39"><expr pos:start="919:36" pos:end="919:39"><name pos:start="919:36" pos:end="919:39">tmp2</name></expr></argument>, <argument pos:start="919:42" pos:end="919:43"><expr pos:start="919:42" pos:end="919:43"><literal type="number" pos:start="919:42" pos:end="919:43">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="921:13" pos:end="921:44"><expr pos:start="921:13" pos:end="921:43"><call pos:start="921:13" pos:end="921:43"><name pos:start="921:13" pos:end="921:27">tcg_gen_and_i32</name><argument_list pos:start="921:28" pos:end="921:43">(<argument pos:start="921:29" pos:end="921:31"><expr pos:start="921:29" pos:end="921:31"><name pos:start="921:29" pos:end="921:31">tmp</name></expr></argument>, <argument pos:start="921:34" pos:end="921:36"><expr pos:start="921:34" pos:end="921:36"><name pos:start="921:34" pos:end="921:36">tmp</name></expr></argument>, <argument pos:start="921:39" pos:end="921:42"><expr pos:start="921:39" pos:end="921:42"><name pos:start="921:39" pos:end="921:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="923:13" pos:end="923:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="927:9" pos:end="927:26"><expr pos:start="927:9" pos:end="927:25"><call pos:start="927:9" pos:end="927:25"><name pos:start="927:9" pos:end="927:20">gen_set_nzcv</name><argument_list pos:start="927:21" pos:end="927:25">(<argument pos:start="927:22" pos:end="927:24"><expr pos:start="927:22" pos:end="927:24"><name pos:start="927:22" pos:end="927:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:23"><expr pos:start="929:9" pos:end="929:22"><call pos:start="929:9" pos:end="929:22"><name pos:start="929:9" pos:end="929:16">dead_tmp</name><argument_list pos:start="929:17" pos:end="929:22">(<argument pos:start="929:18" pos:end="929:21"><expr pos:start="929:18" pos:end="929:21"><name pos:start="929:18" pos:end="929:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="931:9" pos:end="931:22"><expr pos:start="931:9" pos:end="931:21"><call pos:start="931:9" pos:end="931:21"><name pos:start="931:9" pos:end="931:16">dead_tmp</name><argument_list pos:start="931:17" pos:end="931:21">(<argument pos:start="931:18" pos:end="931:20"><expr pos:start="931:18" pos:end="931:20"><name pos:start="931:18" pos:end="931:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="933:9" pos:end="933:14">break;</break>

    <case pos:start="935:5" pos:end="935:15">case <expr pos:start="935:10" pos:end="935:14"><literal type="number" pos:start="935:10" pos:end="935:14">0x01c</literal></expr>:</case> <case pos:start="935:17" pos:end="935:27">case <expr pos:start="935:22" pos:end="935:26"><literal type="number" pos:start="935:22" pos:end="935:26">0x41c</literal></expr>:</case> <case pos:start="935:29" pos:end="935:39">case <expr pos:start="935:34" pos:end="935:38"><literal type="number" pos:start="935:34" pos:end="935:38">0x81c</literal></expr>:</case> <case pos:start="935:41" pos:end="935:51">case <expr pos:start="935:46" pos:end="935:50"><literal type="number" pos:start="935:46" pos:end="935:50">0xc1c</literal></expr>:</case>	<comment type="block" pos:start="935:57" pos:end="935:66">/* WACC */</comment>

        <expr_stmt pos:start="937:9" pos:end="937:33"><expr pos:start="937:9" pos:end="937:32"><name pos:start="937:9" pos:end="937:11">wrd</name> <operator pos:start="937:13" pos:end="937:13">=</operator> <operator pos:start="937:15" pos:end="937:15">(</operator><name pos:start="937:16" pos:end="937:19">insn</name> <operator pos:start="937:21" pos:end="937:22">&gt;&gt;</operator> <literal type="number" pos:start="937:24" pos:end="937:25">12</literal><operator pos:start="937:26" pos:end="937:26">)</operator> <operator pos:start="937:28" pos:end="937:28">&amp;</operator> <literal type="number" pos:start="937:30" pos:end="937:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="939:9" pos:end="939:33"><expr pos:start="939:9" pos:end="939:32"><name pos:start="939:9" pos:end="939:11">rd0</name> <operator pos:start="939:13" pos:end="939:13">=</operator> <operator pos:start="939:15" pos:end="939:15">(</operator><name pos:start="939:16" pos:end="939:19">insn</name> <operator pos:start="939:21" pos:end="939:22">&gt;&gt;</operator> <literal type="number" pos:start="939:24" pos:end="939:25">16</literal><operator pos:start="939:26" pos:end="939:26">)</operator> <operator pos:start="939:28" pos:end="939:28">&amp;</operator> <literal type="number" pos:start="939:30" pos:end="939:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="941:9" pos:end="941:39"><expr pos:start="941:9" pos:end="941:38"><call pos:start="941:9" pos:end="941:38"><name pos:start="941:9" pos:end="941:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="941:34" pos:end="941:38">(<argument pos:start="941:35" pos:end="941:37"><expr pos:start="941:35" pos:end="941:37"><name pos:start="941:35" pos:end="941:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="943:9" pos:end="967:9">switch <condition pos:start="943:16" pos:end="943:33">(<expr pos:start="943:17" pos:end="943:32"><operator pos:start="943:17" pos:end="943:17">(</operator><name pos:start="943:18" pos:end="943:21">insn</name> <operator pos:start="943:23" pos:end="943:24">&gt;&gt;</operator> <literal type="number" pos:start="943:26" pos:end="943:27">22</literal><operator pos:start="943:28" pos:end="943:28">)</operator> <operator pos:start="943:30" pos:end="943:30">&amp;</operator> <literal type="number" pos:start="943:32" pos:end="943:32">3</literal></expr>)</condition> <block pos:start="943:35" pos:end="967:9">{<block_content pos:start="945:9" pos:end="965:21">

        <case pos:start="945:9" pos:end="945:15">case <expr pos:start="945:14" pos:end="945:14"><literal type="number" pos:start="945:14" pos:end="945:14">0</literal></expr>:</case>

            <expr_stmt pos:start="947:13" pos:end="947:52"><expr pos:start="947:13" pos:end="947:51"><call pos:start="947:13" pos:end="947:51"><name pos:start="947:13" pos:end="947:35">gen_helper_iwmmxt_addcb</name><argument_list pos:start="947:36" pos:end="947:51">(<argument pos:start="947:37" pos:end="947:42"><expr pos:start="947:37" pos:end="947:42"><name pos:start="947:37" pos:end="947:42">cpu_M0</name></expr></argument>, <argument pos:start="947:45" pos:end="947:50"><expr pos:start="947:45" pos:end="947:50"><name pos:start="947:45" pos:end="947:50">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="949:13" pos:end="949:18">break;</break>

        <case pos:start="951:9" pos:end="951:15">case <expr pos:start="951:14" pos:end="951:14"><literal type="number" pos:start="951:14" pos:end="951:14">1</literal></expr>:</case>

            <expr_stmt pos:start="953:13" pos:end="953:52"><expr pos:start="953:13" pos:end="953:51"><call pos:start="953:13" pos:end="953:51"><name pos:start="953:13" pos:end="953:35">gen_helper_iwmmxt_addcw</name><argument_list pos:start="953:36" pos:end="953:51">(<argument pos:start="953:37" pos:end="953:42"><expr pos:start="953:37" pos:end="953:42"><name pos:start="953:37" pos:end="953:42">cpu_M0</name></expr></argument>, <argument pos:start="953:45" pos:end="953:50"><expr pos:start="953:45" pos:end="953:50"><name pos:start="953:45" pos:end="953:50">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="955:13" pos:end="955:18">break;</break>

        <case pos:start="957:9" pos:end="957:15">case <expr pos:start="957:14" pos:end="957:14"><literal type="number" pos:start="957:14" pos:end="957:14">2</literal></expr>:</case>

            <expr_stmt pos:start="959:13" pos:end="959:52"><expr pos:start="959:13" pos:end="959:51"><call pos:start="959:13" pos:end="959:51"><name pos:start="959:13" pos:end="959:35">gen_helper_iwmmxt_addcl</name><argument_list pos:start="959:36" pos:end="959:51">(<argument pos:start="959:37" pos:end="959:42"><expr pos:start="959:37" pos:end="959:42"><name pos:start="959:37" pos:end="959:42">cpu_M0</name></expr></argument>, <argument pos:start="959:45" pos:end="959:50"><expr pos:start="959:45" pos:end="959:50"><name pos:start="959:45" pos:end="959:50">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="961:13" pos:end="961:18">break;</break>

        <case pos:start="963:9" pos:end="963:15">case <expr pos:start="963:14" pos:end="963:14"><literal type="number" pos:start="963:14" pos:end="963:14">3</literal></expr>:</case>

            <return pos:start="965:13" pos:end="965:21">return <expr pos:start="965:20" pos:end="965:20"><literal type="number" pos:start="965:20" pos:end="965:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="969:9" pos:end="969:39"><expr pos:start="969:9" pos:end="969:38"><call pos:start="969:9" pos:end="969:38"><name pos:start="969:9" pos:end="969:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="969:34" pos:end="969:38">(<argument pos:start="969:35" pos:end="969:37"><expr pos:start="969:35" pos:end="969:37"><name pos:start="969:35" pos:end="969:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="971:9" pos:end="971:32"><expr pos:start="971:9" pos:end="971:31"><call pos:start="971:9" pos:end="971:31"><name pos:start="971:9" pos:end="971:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="971:30" pos:end="971:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="973:9" pos:end="973:14">break;</break>

    <case pos:start="975:5" pos:end="975:15">case <expr pos:start="975:10" pos:end="975:14"><literal type="number" pos:start="975:10" pos:end="975:14">0x115</literal></expr>:</case> <case pos:start="975:17" pos:end="975:27">case <expr pos:start="975:22" pos:end="975:26"><literal type="number" pos:start="975:22" pos:end="975:26">0x515</literal></expr>:</case> <case pos:start="975:29" pos:end="975:39">case <expr pos:start="975:34" pos:end="975:38"><literal type="number" pos:start="975:34" pos:end="975:38">0x915</literal></expr>:</case> <case pos:start="975:41" pos:end="975:51">case <expr pos:start="975:46" pos:end="975:50"><literal type="number" pos:start="975:46" pos:end="975:50">0xd15</literal></expr>:</case>	<comment type="block" pos:start="975:57" pos:end="975:66">/* TORC */</comment>

        <if_stmt pos:start="977:9" pos:end="979:21"><if pos:start="977:9" pos:end="979:21">if <condition pos:start="977:12" pos:end="977:73">(<expr pos:start="977:13" pos:end="977:72"><operator pos:start="977:13" pos:end="977:13">(</operator><name pos:start="977:14" pos:end="977:17">insn</name> <operator pos:start="977:19" pos:end="977:19">&amp;</operator> <literal type="number" pos:start="977:21" pos:end="977:30">0x000ff00f</literal><operator pos:start="977:31" pos:end="977:31">)</operator> <operator pos:start="977:33" pos:end="977:34">!=</operator> <literal type="number" pos:start="977:36" pos:end="977:45">0x0003f000</literal> <operator pos:start="977:47" pos:end="977:48">||</operator> <operator pos:start="977:50" pos:end="977:50">(</operator><operator pos:start="977:51" pos:end="977:51">(</operator><name pos:start="977:52" pos:end="977:55">insn</name> <operator pos:start="977:57" pos:end="977:58">&gt;&gt;</operator> <literal type="number" pos:start="977:60" pos:end="977:61">22</literal><operator pos:start="977:62" pos:end="977:62">)</operator> <operator pos:start="977:64" pos:end="977:64">&amp;</operator> <literal type="number" pos:start="977:66" pos:end="977:66">3</literal><operator pos:start="977:67" pos:end="977:67">)</operator> <operator pos:start="977:69" pos:end="977:70">==</operator> <literal type="number" pos:start="977:72" pos:end="977:72">3</literal></expr>)</condition><block type="pseudo" pos:start="979:13" pos:end="979:21"><block_content pos:start="979:13" pos:end="979:21">

            <return pos:start="979:13" pos:end="979:21">return <expr pos:start="979:20" pos:end="979:20"><literal type="number" pos:start="979:20" pos:end="979:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="981:9" pos:end="981:49"><expr pos:start="981:9" pos:end="981:48"><name pos:start="981:9" pos:end="981:11">tmp</name> <operator pos:start="981:13" pos:end="981:13">=</operator> <call pos:start="981:15" pos:end="981:48"><name pos:start="981:15" pos:end="981:30">iwmmxt_load_creg</name><argument_list pos:start="981:31" pos:end="981:48">(<argument pos:start="981:32" pos:end="981:47"><expr pos:start="981:32" pos:end="981:47"><name pos:start="981:32" pos:end="981:47">ARM_IWMMXT_wCASF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="983:9" pos:end="983:25"><expr pos:start="983:9" pos:end="983:24"><name pos:start="983:9" pos:end="983:12">tmp2</name> <operator pos:start="983:14" pos:end="983:14">=</operator> <call pos:start="983:16" pos:end="983:24"><name pos:start="983:16" pos:end="983:22">new_tmp</name><argument_list pos:start="983:23" pos:end="983:24">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="985:9" pos:end="985:35"><expr pos:start="985:9" pos:end="985:34"><call pos:start="985:9" pos:end="985:34"><name pos:start="985:9" pos:end="985:23">tcg_gen_mov_i32</name><argument_list pos:start="985:24" pos:end="985:34">(<argument pos:start="985:25" pos:end="985:28"><expr pos:start="985:25" pos:end="985:28"><name pos:start="985:25" pos:end="985:28">tmp2</name></expr></argument>, <argument pos:start="985:31" pos:end="985:33"><expr pos:start="985:31" pos:end="985:33"><name pos:start="985:31" pos:end="985:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="987:9" pos:end="1021:9">switch <condition pos:start="987:16" pos:end="987:33">(<expr pos:start="987:17" pos:end="987:32"><operator pos:start="987:17" pos:end="987:17">(</operator><name pos:start="987:18" pos:end="987:21">insn</name> <operator pos:start="987:23" pos:end="987:24">&gt;&gt;</operator> <literal type="number" pos:start="987:26" pos:end="987:27">22</literal><operator pos:start="987:28" pos:end="987:28">)</operator> <operator pos:start="987:30" pos:end="987:30">&amp;</operator> <literal type="number" pos:start="987:32" pos:end="987:32">3</literal></expr>)</condition> <block pos:start="987:35" pos:end="1021:9">{<block_content pos:start="989:9" pos:end="1019:18">

        <case pos:start="989:9" pos:end="989:15">case <expr pos:start="989:14" pos:end="989:14"><literal type="number" pos:start="989:14" pos:end="989:14">0</literal></expr>:</case>

            <for pos:start="991:13" pos:end="997:13">for <control pos:start="991:17" pos:end="991:36">(<init pos:start="991:18" pos:end="991:23"><expr pos:start="991:18" pos:end="991:22"><name pos:start="991:18" pos:end="991:18">i</name> <operator pos:start="991:20" pos:end="991:20">=</operator> <literal type="number" pos:start="991:22" pos:end="991:22">0</literal></expr>;</init> <condition pos:start="991:25" pos:end="991:30"><expr pos:start="991:25" pos:end="991:29"><name pos:start="991:25" pos:end="991:25">i</name> <operator pos:start="991:27" pos:end="991:27">&lt;</operator> <literal type="number" pos:start="991:29" pos:end="991:29">7</literal></expr>;</condition> <incr pos:start="991:32" pos:end="991:35"><expr pos:start="991:32" pos:end="991:35"><name pos:start="991:32" pos:end="991:32">i</name> <operator pos:start="991:34" pos:end="991:35">++</operator></expr></incr>)</control> <block pos:start="991:38" pos:end="997:13">{<block_content pos:start="993:17" pos:end="995:47">

                <expr_stmt pos:start="993:17" pos:end="993:48"><expr pos:start="993:17" pos:end="993:47"><call pos:start="993:17" pos:end="993:47"><name pos:start="993:17" pos:end="993:32">tcg_gen_shli_i32</name><argument_list pos:start="993:33" pos:end="993:47">(<argument pos:start="993:34" pos:end="993:37"><expr pos:start="993:34" pos:end="993:37"><name pos:start="993:34" pos:end="993:37">tmp2</name></expr></argument>, <argument pos:start="993:40" pos:end="993:43"><expr pos:start="993:40" pos:end="993:43"><name pos:start="993:40" pos:end="993:43">tmp2</name></expr></argument>, <argument pos:start="993:46" pos:end="993:46"><expr pos:start="993:46" pos:end="993:46"><literal type="number" pos:start="993:46" pos:end="993:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="995:17" pos:end="995:47"><expr pos:start="995:17" pos:end="995:46"><call pos:start="995:17" pos:end="995:46"><name pos:start="995:17" pos:end="995:30">tcg_gen_or_i32</name><argument_list pos:start="995:31" pos:end="995:46">(<argument pos:start="995:32" pos:end="995:34"><expr pos:start="995:32" pos:end="995:34"><name pos:start="995:32" pos:end="995:34">tmp</name></expr></argument>, <argument pos:start="995:37" pos:end="995:39"><expr pos:start="995:37" pos:end="995:39"><name pos:start="995:37" pos:end="995:39">tmp</name></expr></argument>, <argument pos:start="995:42" pos:end="995:45"><expr pos:start="995:42" pos:end="995:45"><name pos:start="995:42" pos:end="995:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="999:13" pos:end="999:18">break;</break>

        <case pos:start="1001:9" pos:end="1001:15">case <expr pos:start="1001:14" pos:end="1001:14"><literal type="number" pos:start="1001:14" pos:end="1001:14">1</literal></expr>:</case>

            <for pos:start="1003:13" pos:end="1009:13">for <control pos:start="1003:17" pos:end="1003:36">(<init pos:start="1003:18" pos:end="1003:23"><expr pos:start="1003:18" pos:end="1003:22"><name pos:start="1003:18" pos:end="1003:18">i</name> <operator pos:start="1003:20" pos:end="1003:20">=</operator> <literal type="number" pos:start="1003:22" pos:end="1003:22">0</literal></expr>;</init> <condition pos:start="1003:25" pos:end="1003:30"><expr pos:start="1003:25" pos:end="1003:29"><name pos:start="1003:25" pos:end="1003:25">i</name> <operator pos:start="1003:27" pos:end="1003:27">&lt;</operator> <literal type="number" pos:start="1003:29" pos:end="1003:29">3</literal></expr>;</condition> <incr pos:start="1003:32" pos:end="1003:35"><expr pos:start="1003:32" pos:end="1003:35"><name pos:start="1003:32" pos:end="1003:32">i</name> <operator pos:start="1003:34" pos:end="1003:35">++</operator></expr></incr>)</control> <block pos:start="1003:38" pos:end="1009:13">{<block_content pos:start="1005:17" pos:end="1007:47">

                <expr_stmt pos:start="1005:17" pos:end="1005:48"><expr pos:start="1005:17" pos:end="1005:47"><call pos:start="1005:17" pos:end="1005:47"><name pos:start="1005:17" pos:end="1005:32">tcg_gen_shli_i32</name><argument_list pos:start="1005:33" pos:end="1005:47">(<argument pos:start="1005:34" pos:end="1005:37"><expr pos:start="1005:34" pos:end="1005:37"><name pos:start="1005:34" pos:end="1005:37">tmp2</name></expr></argument>, <argument pos:start="1005:40" pos:end="1005:43"><expr pos:start="1005:40" pos:end="1005:43"><name pos:start="1005:40" pos:end="1005:43">tmp2</name></expr></argument>, <argument pos:start="1005:46" pos:end="1005:46"><expr pos:start="1005:46" pos:end="1005:46"><literal type="number" pos:start="1005:46" pos:end="1005:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1007:17" pos:end="1007:47"><expr pos:start="1007:17" pos:end="1007:46"><call pos:start="1007:17" pos:end="1007:46"><name pos:start="1007:17" pos:end="1007:30">tcg_gen_or_i32</name><argument_list pos:start="1007:31" pos:end="1007:46">(<argument pos:start="1007:32" pos:end="1007:34"><expr pos:start="1007:32" pos:end="1007:34"><name pos:start="1007:32" pos:end="1007:34">tmp</name></expr></argument>, <argument pos:start="1007:37" pos:end="1007:39"><expr pos:start="1007:37" pos:end="1007:39"><name pos:start="1007:37" pos:end="1007:39">tmp</name></expr></argument>, <argument pos:start="1007:42" pos:end="1007:45"><expr pos:start="1007:42" pos:end="1007:45"><name pos:start="1007:42" pos:end="1007:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="1011:13" pos:end="1011:18">break;</break>

        <case pos:start="1013:9" pos:end="1013:15">case <expr pos:start="1013:14" pos:end="1013:14"><literal type="number" pos:start="1013:14" pos:end="1013:14">2</literal></expr>:</case>

            <expr_stmt pos:start="1015:13" pos:end="1015:45"><expr pos:start="1015:13" pos:end="1015:44"><call pos:start="1015:13" pos:end="1015:44"><name pos:start="1015:13" pos:end="1015:28">tcg_gen_shli_i32</name><argument_list pos:start="1015:29" pos:end="1015:44">(<argument pos:start="1015:30" pos:end="1015:33"><expr pos:start="1015:30" pos:end="1015:33"><name pos:start="1015:30" pos:end="1015:33">tmp2</name></expr></argument>, <argument pos:start="1015:36" pos:end="1015:39"><expr pos:start="1015:36" pos:end="1015:39"><name pos:start="1015:36" pos:end="1015:39">tmp2</name></expr></argument>, <argument pos:start="1015:42" pos:end="1015:43"><expr pos:start="1015:42" pos:end="1015:43"><literal type="number" pos:start="1015:42" pos:end="1015:43">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1017:13" pos:end="1017:43"><expr pos:start="1017:13" pos:end="1017:42"><call pos:start="1017:13" pos:end="1017:42"><name pos:start="1017:13" pos:end="1017:26">tcg_gen_or_i32</name><argument_list pos:start="1017:27" pos:end="1017:42">(<argument pos:start="1017:28" pos:end="1017:30"><expr pos:start="1017:28" pos:end="1017:30"><name pos:start="1017:28" pos:end="1017:30">tmp</name></expr></argument>, <argument pos:start="1017:33" pos:end="1017:35"><expr pos:start="1017:33" pos:end="1017:35"><name pos:start="1017:33" pos:end="1017:35">tmp</name></expr></argument>, <argument pos:start="1017:38" pos:end="1017:41"><expr pos:start="1017:38" pos:end="1017:41"><name pos:start="1017:38" pos:end="1017:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1019:13" pos:end="1019:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1023:9" pos:end="1023:26"><expr pos:start="1023:9" pos:end="1023:25"><call pos:start="1023:9" pos:end="1023:25"><name pos:start="1023:9" pos:end="1023:20">gen_set_nzcv</name><argument_list pos:start="1023:21" pos:end="1023:25">(<argument pos:start="1023:22" pos:end="1023:24"><expr pos:start="1023:22" pos:end="1023:24"><name pos:start="1023:22" pos:end="1023:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1025:9" pos:end="1025:23"><expr pos:start="1025:9" pos:end="1025:22"><call pos:start="1025:9" pos:end="1025:22"><name pos:start="1025:9" pos:end="1025:16">dead_tmp</name><argument_list pos:start="1025:17" pos:end="1025:22">(<argument pos:start="1025:18" pos:end="1025:21"><expr pos:start="1025:18" pos:end="1025:21"><name pos:start="1025:18" pos:end="1025:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1027:9" pos:end="1027:22"><expr pos:start="1027:9" pos:end="1027:21"><call pos:start="1027:9" pos:end="1027:21"><name pos:start="1027:9" pos:end="1027:16">dead_tmp</name><argument_list pos:start="1027:17" pos:end="1027:21">(<argument pos:start="1027:18" pos:end="1027:20"><expr pos:start="1027:18" pos:end="1027:20"><name pos:start="1027:18" pos:end="1027:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1029:9" pos:end="1029:14">break;</break>

    <case pos:start="1031:5" pos:end="1031:15">case <expr pos:start="1031:10" pos:end="1031:14"><literal type="number" pos:start="1031:10" pos:end="1031:14">0x103</literal></expr>:</case> <case pos:start="1031:17" pos:end="1031:27">case <expr pos:start="1031:22" pos:end="1031:26"><literal type="number" pos:start="1031:22" pos:end="1031:26">0x503</literal></expr>:</case> <case pos:start="1031:29" pos:end="1031:39">case <expr pos:start="1031:34" pos:end="1031:38"><literal type="number" pos:start="1031:34" pos:end="1031:38">0x903</literal></expr>:</case> <case pos:start="1031:41" pos:end="1031:51">case <expr pos:start="1031:46" pos:end="1031:50"><literal type="number" pos:start="1031:46" pos:end="1031:50">0xd03</literal></expr>:</case>	<comment type="block" pos:start="1031:57" pos:end="1031:69">/* TMOVMSK */</comment>

        <expr_stmt pos:start="1033:9" pos:end="1033:32"><expr pos:start="1033:9" pos:end="1033:31"><name pos:start="1033:9" pos:end="1033:10">rd</name> <operator pos:start="1033:12" pos:end="1033:12">=</operator> <operator pos:start="1033:14" pos:end="1033:14">(</operator><name pos:start="1033:15" pos:end="1033:18">insn</name> <operator pos:start="1033:20" pos:end="1033:21">&gt;&gt;</operator> <literal type="number" pos:start="1033:23" pos:end="1033:24">12</literal><operator pos:start="1033:25" pos:end="1033:25">)</operator> <operator pos:start="1033:27" pos:end="1033:27">&amp;</operator> <literal type="number" pos:start="1033:29" pos:end="1033:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1035:9" pos:end="1035:33"><expr pos:start="1035:9" pos:end="1035:32"><name pos:start="1035:9" pos:end="1035:11">rd0</name> <operator pos:start="1035:13" pos:end="1035:13">=</operator> <operator pos:start="1035:15" pos:end="1035:15">(</operator><name pos:start="1035:16" pos:end="1035:19">insn</name> <operator pos:start="1035:21" pos:end="1035:22">&gt;&gt;</operator> <literal type="number" pos:start="1035:24" pos:end="1035:25">16</literal><operator pos:start="1035:26" pos:end="1035:26">)</operator> <operator pos:start="1035:28" pos:end="1035:28">&amp;</operator> <literal type="number" pos:start="1035:30" pos:end="1035:32">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="1037:9" pos:end="1039:21"><if pos:start="1037:9" pos:end="1039:21">if <condition pos:start="1037:12" pos:end="1037:57">(<expr pos:start="1037:13" pos:end="1037:56"><operator pos:start="1037:13" pos:end="1037:13">(</operator><name pos:start="1037:14" pos:end="1037:17">insn</name> <operator pos:start="1037:19" pos:end="1037:19">&amp;</operator> <literal type="number" pos:start="1037:21" pos:end="1037:23">0xf</literal><operator pos:start="1037:24" pos:end="1037:24">)</operator> <operator pos:start="1037:26" pos:end="1037:27">!=</operator> <literal type="number" pos:start="1037:29" pos:end="1037:29">0</literal> <operator pos:start="1037:31" pos:end="1037:32">||</operator> <operator pos:start="1037:34" pos:end="1037:34">(</operator><operator pos:start="1037:35" pos:end="1037:35">(</operator><name pos:start="1037:36" pos:end="1037:39">insn</name> <operator pos:start="1037:41" pos:end="1037:42">&gt;&gt;</operator> <literal type="number" pos:start="1037:44" pos:end="1037:45">22</literal><operator pos:start="1037:46" pos:end="1037:46">)</operator> <operator pos:start="1037:48" pos:end="1037:48">&amp;</operator> <literal type="number" pos:start="1037:50" pos:end="1037:50">3</literal><operator pos:start="1037:51" pos:end="1037:51">)</operator> <operator pos:start="1037:53" pos:end="1037:54">==</operator> <literal type="number" pos:start="1037:56" pos:end="1037:56">3</literal></expr>)</condition><block type="pseudo" pos:start="1039:13" pos:end="1039:21"><block_content pos:start="1039:13" pos:end="1039:21">

            <return pos:start="1039:13" pos:end="1039:21">return <expr pos:start="1039:20" pos:end="1039:20"><literal type="number" pos:start="1039:20" pos:end="1039:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1041:9" pos:end="1041:39"><expr pos:start="1041:9" pos:end="1041:38"><call pos:start="1041:9" pos:end="1041:38"><name pos:start="1041:9" pos:end="1041:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1041:34" pos:end="1041:38">(<argument pos:start="1041:35" pos:end="1041:37"><expr pos:start="1041:35" pos:end="1041:37"><name pos:start="1041:35" pos:end="1041:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1043:9" pos:end="1043:24"><expr pos:start="1043:9" pos:end="1043:23"><name pos:start="1043:9" pos:end="1043:11">tmp</name> <operator pos:start="1043:13" pos:end="1043:13">=</operator> <call pos:start="1043:15" pos:end="1043:23"><name pos:start="1043:15" pos:end="1043:21">new_tmp</name><argument_list pos:start="1043:22" pos:end="1043:23">()</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1045:9" pos:end="1065:9">switch <condition pos:start="1045:16" pos:end="1045:33">(<expr pos:start="1045:17" pos:end="1045:32"><operator pos:start="1045:17" pos:end="1045:17">(</operator><name pos:start="1045:18" pos:end="1045:21">insn</name> <operator pos:start="1045:23" pos:end="1045:24">&gt;&gt;</operator> <literal type="number" pos:start="1045:26" pos:end="1045:27">22</literal><operator pos:start="1045:28" pos:end="1045:28">)</operator> <operator pos:start="1045:30" pos:end="1045:30">&amp;</operator> <literal type="number" pos:start="1045:32" pos:end="1045:32">3</literal></expr>)</condition> <block pos:start="1045:35" pos:end="1065:9">{<block_content pos:start="1047:9" pos:end="1063:18">

        <case pos:start="1047:9" pos:end="1047:15">case <expr pos:start="1047:14" pos:end="1047:14"><literal type="number" pos:start="1047:14" pos:end="1047:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1049:13" pos:end="1049:48"><expr pos:start="1049:13" pos:end="1049:47"><call pos:start="1049:13" pos:end="1049:47"><name pos:start="1049:13" pos:end="1049:34">gen_helper_iwmmxt_msbb</name><argument_list pos:start="1049:35" pos:end="1049:47">(<argument pos:start="1049:36" pos:end="1049:38"><expr pos:start="1049:36" pos:end="1049:38"><name pos:start="1049:36" pos:end="1049:38">tmp</name></expr></argument>, <argument pos:start="1049:41" pos:end="1049:46"><expr pos:start="1049:41" pos:end="1049:46"><name pos:start="1049:41" pos:end="1049:46">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1051:13" pos:end="1051:18">break;</break>

        <case pos:start="1053:9" pos:end="1053:15">case <expr pos:start="1053:14" pos:end="1053:14"><literal type="number" pos:start="1053:14" pos:end="1053:14">1</literal></expr>:</case>

            <expr_stmt pos:start="1055:13" pos:end="1055:48"><expr pos:start="1055:13" pos:end="1055:47"><call pos:start="1055:13" pos:end="1055:47"><name pos:start="1055:13" pos:end="1055:34">gen_helper_iwmmxt_msbw</name><argument_list pos:start="1055:35" pos:end="1055:47">(<argument pos:start="1055:36" pos:end="1055:38"><expr pos:start="1055:36" pos:end="1055:38"><name pos:start="1055:36" pos:end="1055:38">tmp</name></expr></argument>, <argument pos:start="1055:41" pos:end="1055:46"><expr pos:start="1055:41" pos:end="1055:46"><name pos:start="1055:41" pos:end="1055:46">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1057:13" pos:end="1057:18">break;</break>

        <case pos:start="1059:9" pos:end="1059:15">case <expr pos:start="1059:14" pos:end="1059:14"><literal type="number" pos:start="1059:14" pos:end="1059:14">2</literal></expr>:</case>

            <expr_stmt pos:start="1061:13" pos:end="1061:48"><expr pos:start="1061:13" pos:end="1061:47"><call pos:start="1061:13" pos:end="1061:47"><name pos:start="1061:13" pos:end="1061:34">gen_helper_iwmmxt_msbl</name><argument_list pos:start="1061:35" pos:end="1061:47">(<argument pos:start="1061:36" pos:end="1061:38"><expr pos:start="1061:36" pos:end="1061:38"><name pos:start="1061:36" pos:end="1061:38">tmp</name></expr></argument>, <argument pos:start="1061:41" pos:end="1061:46"><expr pos:start="1061:41" pos:end="1061:46"><name pos:start="1061:41" pos:end="1061:46">cpu_M0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1063:13" pos:end="1063:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1067:9" pos:end="1067:30"><expr pos:start="1067:9" pos:end="1067:29"><call pos:start="1067:9" pos:end="1067:29"><name pos:start="1067:9" pos:end="1067:17">store_reg</name><argument_list pos:start="1067:18" pos:end="1067:29">(<argument pos:start="1067:19" pos:end="1067:19"><expr pos:start="1067:19" pos:end="1067:19"><name pos:start="1067:19" pos:end="1067:19">s</name></expr></argument>, <argument pos:start="1067:22" pos:end="1067:23"><expr pos:start="1067:22" pos:end="1067:23"><name pos:start="1067:22" pos:end="1067:23">rd</name></expr></argument>, <argument pos:start="1067:26" pos:end="1067:28"><expr pos:start="1067:26" pos:end="1067:28"><name pos:start="1067:26" pos:end="1067:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1069:9" pos:end="1069:14">break;</break>

    <case pos:start="1071:5" pos:end="1071:15">case <expr pos:start="1071:10" pos:end="1071:14"><literal type="number" pos:start="1071:10" pos:end="1071:14">0x106</literal></expr>:</case> <case pos:start="1071:17" pos:end="1071:27">case <expr pos:start="1071:22" pos:end="1071:26"><literal type="number" pos:start="1071:22" pos:end="1071:26">0x306</literal></expr>:</case> <case pos:start="1071:29" pos:end="1071:39">case <expr pos:start="1071:34" pos:end="1071:38"><literal type="number" pos:start="1071:34" pos:end="1071:38">0x506</literal></expr>:</case> <case pos:start="1071:41" pos:end="1071:51">case <expr pos:start="1071:46" pos:end="1071:50"><literal type="number" pos:start="1071:46" pos:end="1071:50">0x706</literal></expr>:</case>	<comment type="block" pos:start="1071:57" pos:end="1071:68">/* WCMPGT */</comment>

    <case pos:start="1073:5" pos:end="1073:15">case <expr pos:start="1073:10" pos:end="1073:14"><literal type="number" pos:start="1073:10" pos:end="1073:14">0x906</literal></expr>:</case> <case pos:start="1073:17" pos:end="1073:27">case <expr pos:start="1073:22" pos:end="1073:26"><literal type="number" pos:start="1073:22" pos:end="1073:26">0xb06</literal></expr>:</case> <case pos:start="1073:29" pos:end="1073:39">case <expr pos:start="1073:34" pos:end="1073:38"><literal type="number" pos:start="1073:34" pos:end="1073:38">0xd06</literal></expr>:</case> <case pos:start="1073:41" pos:end="1073:51">case <expr pos:start="1073:46" pos:end="1073:50"><literal type="number" pos:start="1073:46" pos:end="1073:50">0xf06</literal></expr>:</case>

        <expr_stmt pos:start="1075:9" pos:end="1075:33"><expr pos:start="1075:9" pos:end="1075:32"><name pos:start="1075:9" pos:end="1075:11">wrd</name> <operator pos:start="1075:13" pos:end="1075:13">=</operator> <operator pos:start="1075:15" pos:end="1075:15">(</operator><name pos:start="1075:16" pos:end="1075:19">insn</name> <operator pos:start="1075:21" pos:end="1075:22">&gt;&gt;</operator> <literal type="number" pos:start="1075:24" pos:end="1075:25">12</literal><operator pos:start="1075:26" pos:end="1075:26">)</operator> <operator pos:start="1075:28" pos:end="1075:28">&amp;</operator> <literal type="number" pos:start="1075:30" pos:end="1075:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1077:9" pos:end="1077:33"><expr pos:start="1077:9" pos:end="1077:32"><name pos:start="1077:9" pos:end="1077:11">rd0</name> <operator pos:start="1077:13" pos:end="1077:13">=</operator> <operator pos:start="1077:15" pos:end="1077:15">(</operator><name pos:start="1077:16" pos:end="1077:19">insn</name> <operator pos:start="1077:21" pos:end="1077:22">&gt;&gt;</operator> <literal type="number" pos:start="1077:24" pos:end="1077:25">16</literal><operator pos:start="1077:26" pos:end="1077:26">)</operator> <operator pos:start="1077:28" pos:end="1077:28">&amp;</operator> <literal type="number" pos:start="1077:30" pos:end="1077:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1079:9" pos:end="1079:32"><expr pos:start="1079:9" pos:end="1079:31"><name pos:start="1079:9" pos:end="1079:11">rd1</name> <operator pos:start="1079:13" pos:end="1079:13">=</operator> <operator pos:start="1079:15" pos:end="1079:15">(</operator><name pos:start="1079:16" pos:end="1079:19">insn</name> <operator pos:start="1079:21" pos:end="1079:22">&gt;&gt;</operator> <literal type="number" pos:start="1079:24" pos:end="1079:24">0</literal><operator pos:start="1079:25" pos:end="1079:25">)</operator> <operator pos:start="1079:27" pos:end="1079:27">&amp;</operator> <literal type="number" pos:start="1079:29" pos:end="1079:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1081:9" pos:end="1081:39"><expr pos:start="1081:9" pos:end="1081:38"><call pos:start="1081:9" pos:end="1081:38"><name pos:start="1081:9" pos:end="1081:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1081:34" pos:end="1081:38">(<argument pos:start="1081:35" pos:end="1081:37"><expr pos:start="1081:35" pos:end="1081:37"><name pos:start="1081:35" pos:end="1081:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1083:9" pos:end="1125:9">switch <condition pos:start="1083:16" pos:end="1083:33">(<expr pos:start="1083:17" pos:end="1083:32"><operator pos:start="1083:17" pos:end="1083:17">(</operator><name pos:start="1083:18" pos:end="1083:21">insn</name> <operator pos:start="1083:23" pos:end="1083:24">&gt;&gt;</operator> <literal type="number" pos:start="1083:26" pos:end="1083:27">22</literal><operator pos:start="1083:28" pos:end="1083:28">)</operator> <operator pos:start="1083:30" pos:end="1083:30">&amp;</operator> <literal type="number" pos:start="1083:32" pos:end="1083:32">3</literal></expr>)</condition> <block pos:start="1083:35" pos:end="1125:9">{<block_content pos:start="1085:9" pos:end="1123:21">

        <case pos:start="1085:9" pos:end="1085:15">case <expr pos:start="1085:14" pos:end="1085:14"><literal type="number" pos:start="1085:14" pos:end="1085:14">0</literal></expr>:</case>

            <if_stmt pos:start="1087:13" pos:end="1093:50"><if pos:start="1087:13" pos:end="1089:50">if <condition pos:start="1087:16" pos:end="1087:33">(<expr pos:start="1087:17" pos:end="1087:32"><name pos:start="1087:17" pos:end="1087:20">insn</name> <operator pos:start="1087:22" pos:end="1087:22">&amp;</operator> <operator pos:start="1087:24" pos:end="1087:24">(</operator><literal type="number" pos:start="1087:25" pos:end="1087:25">1</literal> <operator pos:start="1087:27" pos:end="1087:28">&lt;&lt;</operator> <literal type="number" pos:start="1087:30" pos:end="1087:31">21</literal><operator pos:start="1087:32" pos:end="1087:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1089:17" pos:end="1089:50"><block_content pos:start="1089:17" pos:end="1089:50">

                <expr_stmt pos:start="1089:17" pos:end="1089:50"><expr pos:start="1089:17" pos:end="1089:49"><call pos:start="1089:17" pos:end="1089:49"><name pos:start="1089:17" pos:end="1089:44">gen_op_iwmmxt_cmpgtsb_M0_wRn</name><argument_list pos:start="1089:45" pos:end="1089:49">(<argument pos:start="1089:46" pos:end="1089:48"><expr pos:start="1089:46" pos:end="1089:48"><name pos:start="1089:46" pos:end="1089:48">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1091:13" pos:end="1093:50">else<block type="pseudo" pos:start="1093:17" pos:end="1093:50"><block_content pos:start="1093:17" pos:end="1093:50">

                <expr_stmt pos:start="1093:17" pos:end="1093:50"><expr pos:start="1093:17" pos:end="1093:49"><call pos:start="1093:17" pos:end="1093:49"><name pos:start="1093:17" pos:end="1093:44">gen_op_iwmmxt_cmpgtub_M0_wRn</name><argument_list pos:start="1093:45" pos:end="1093:49">(<argument pos:start="1093:46" pos:end="1093:48"><expr pos:start="1093:46" pos:end="1093:48"><name pos:start="1093:46" pos:end="1093:48">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1095:13" pos:end="1095:18">break;</break>

        <case pos:start="1097:9" pos:end="1097:15">case <expr pos:start="1097:14" pos:end="1097:14"><literal type="number" pos:start="1097:14" pos:end="1097:14">1</literal></expr>:</case>

            <if_stmt pos:start="1099:13" pos:end="1105:50"><if pos:start="1099:13" pos:end="1101:50">if <condition pos:start="1099:16" pos:end="1099:33">(<expr pos:start="1099:17" pos:end="1099:32"><name pos:start="1099:17" pos:end="1099:20">insn</name> <operator pos:start="1099:22" pos:end="1099:22">&amp;</operator> <operator pos:start="1099:24" pos:end="1099:24">(</operator><literal type="number" pos:start="1099:25" pos:end="1099:25">1</literal> <operator pos:start="1099:27" pos:end="1099:28">&lt;&lt;</operator> <literal type="number" pos:start="1099:30" pos:end="1099:31">21</literal><operator pos:start="1099:32" pos:end="1099:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1101:17" pos:end="1101:50"><block_content pos:start="1101:17" pos:end="1101:50">

                <expr_stmt pos:start="1101:17" pos:end="1101:50"><expr pos:start="1101:17" pos:end="1101:49"><call pos:start="1101:17" pos:end="1101:49"><name pos:start="1101:17" pos:end="1101:44">gen_op_iwmmxt_cmpgtsw_M0_wRn</name><argument_list pos:start="1101:45" pos:end="1101:49">(<argument pos:start="1101:46" pos:end="1101:48"><expr pos:start="1101:46" pos:end="1101:48"><name pos:start="1101:46" pos:end="1101:48">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1103:13" pos:end="1105:50">else<block type="pseudo" pos:start="1105:17" pos:end="1105:50"><block_content pos:start="1105:17" pos:end="1105:50">

                <expr_stmt pos:start="1105:17" pos:end="1105:50"><expr pos:start="1105:17" pos:end="1105:49"><call pos:start="1105:17" pos:end="1105:49"><name pos:start="1105:17" pos:end="1105:44">gen_op_iwmmxt_cmpgtuw_M0_wRn</name><argument_list pos:start="1105:45" pos:end="1105:49">(<argument pos:start="1105:46" pos:end="1105:48"><expr pos:start="1105:46" pos:end="1105:48"><name pos:start="1105:46" pos:end="1105:48">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1107:13" pos:end="1107:18">break;</break>

        <case pos:start="1109:9" pos:end="1109:15">case <expr pos:start="1109:14" pos:end="1109:14"><literal type="number" pos:start="1109:14" pos:end="1109:14">2</literal></expr>:</case>

            <if_stmt pos:start="1111:13" pos:end="1117:50"><if pos:start="1111:13" pos:end="1113:50">if <condition pos:start="1111:16" pos:end="1111:33">(<expr pos:start="1111:17" pos:end="1111:32"><name pos:start="1111:17" pos:end="1111:20">insn</name> <operator pos:start="1111:22" pos:end="1111:22">&amp;</operator> <operator pos:start="1111:24" pos:end="1111:24">(</operator><literal type="number" pos:start="1111:25" pos:end="1111:25">1</literal> <operator pos:start="1111:27" pos:end="1111:28">&lt;&lt;</operator> <literal type="number" pos:start="1111:30" pos:end="1111:31">21</literal><operator pos:start="1111:32" pos:end="1111:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1113:17" pos:end="1113:50"><block_content pos:start="1113:17" pos:end="1113:50">

                <expr_stmt pos:start="1113:17" pos:end="1113:50"><expr pos:start="1113:17" pos:end="1113:49"><call pos:start="1113:17" pos:end="1113:49"><name pos:start="1113:17" pos:end="1113:44">gen_op_iwmmxt_cmpgtsl_M0_wRn</name><argument_list pos:start="1113:45" pos:end="1113:49">(<argument pos:start="1113:46" pos:end="1113:48"><expr pos:start="1113:46" pos:end="1113:48"><name pos:start="1113:46" pos:end="1113:48">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1115:13" pos:end="1117:50">else<block type="pseudo" pos:start="1117:17" pos:end="1117:50"><block_content pos:start="1117:17" pos:end="1117:50">

                <expr_stmt pos:start="1117:17" pos:end="1117:50"><expr pos:start="1117:17" pos:end="1117:49"><call pos:start="1117:17" pos:end="1117:49"><name pos:start="1117:17" pos:end="1117:44">gen_op_iwmmxt_cmpgtul_M0_wRn</name><argument_list pos:start="1117:45" pos:end="1117:49">(<argument pos:start="1117:46" pos:end="1117:48"><expr pos:start="1117:46" pos:end="1117:48"><name pos:start="1117:46" pos:end="1117:48">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1119:13" pos:end="1119:18">break;</break>

        <case pos:start="1121:9" pos:end="1121:15">case <expr pos:start="1121:14" pos:end="1121:14"><literal type="number" pos:start="1121:14" pos:end="1121:14">3</literal></expr>:</case>

            <return pos:start="1123:13" pos:end="1123:21">return <expr pos:start="1123:20" pos:end="1123:20"><literal type="number" pos:start="1123:20" pos:end="1123:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1127:9" pos:end="1127:39"><expr pos:start="1127:9" pos:end="1127:38"><call pos:start="1127:9" pos:end="1127:38"><name pos:start="1127:9" pos:end="1127:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1127:34" pos:end="1127:38">(<argument pos:start="1127:35" pos:end="1127:37"><expr pos:start="1127:35" pos:end="1127:37"><name pos:start="1127:35" pos:end="1127:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1129:9" pos:end="1129:32"><expr pos:start="1129:9" pos:end="1129:31"><call pos:start="1129:9" pos:end="1129:31"><name pos:start="1129:9" pos:end="1129:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1129:30" pos:end="1129:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1131:9" pos:end="1131:32"><expr pos:start="1131:9" pos:end="1131:31"><call pos:start="1131:9" pos:end="1131:31"><name pos:start="1131:9" pos:end="1131:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1131:30" pos:end="1131:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1133:9" pos:end="1133:14">break;</break>

    <case pos:start="1135:5" pos:end="1135:15">case <expr pos:start="1135:10" pos:end="1135:14"><literal type="number" pos:start="1135:10" pos:end="1135:14">0x00e</literal></expr>:</case> <case pos:start="1135:17" pos:end="1135:27">case <expr pos:start="1135:22" pos:end="1135:26"><literal type="number" pos:start="1135:22" pos:end="1135:26">0x20e</literal></expr>:</case> <case pos:start="1135:29" pos:end="1135:39">case <expr pos:start="1135:34" pos:end="1135:38"><literal type="number" pos:start="1135:34" pos:end="1135:38">0x40e</literal></expr>:</case> <case pos:start="1135:41" pos:end="1135:51">case <expr pos:start="1135:46" pos:end="1135:50"><literal type="number" pos:start="1135:46" pos:end="1135:50">0x60e</literal></expr>:</case>	<comment type="block" pos:start="1135:57" pos:end="1135:70">/* WUNPCKEL */</comment>

    <case pos:start="1137:5" pos:end="1137:15">case <expr pos:start="1137:10" pos:end="1137:14"><literal type="number" pos:start="1137:10" pos:end="1137:14">0x80e</literal></expr>:</case> <case pos:start="1137:17" pos:end="1137:27">case <expr pos:start="1137:22" pos:end="1137:26"><literal type="number" pos:start="1137:22" pos:end="1137:26">0xa0e</literal></expr>:</case> <case pos:start="1137:29" pos:end="1137:39">case <expr pos:start="1137:34" pos:end="1137:38"><literal type="number" pos:start="1137:34" pos:end="1137:38">0xc0e</literal></expr>:</case> <case pos:start="1137:41" pos:end="1137:51">case <expr pos:start="1137:46" pos:end="1137:50"><literal type="number" pos:start="1137:46" pos:end="1137:50">0xe0e</literal></expr>:</case>

        <expr_stmt pos:start="1139:9" pos:end="1139:33"><expr pos:start="1139:9" pos:end="1139:32"><name pos:start="1139:9" pos:end="1139:11">wrd</name> <operator pos:start="1139:13" pos:end="1139:13">=</operator> <operator pos:start="1139:15" pos:end="1139:15">(</operator><name pos:start="1139:16" pos:end="1139:19">insn</name> <operator pos:start="1139:21" pos:end="1139:22">&gt;&gt;</operator> <literal type="number" pos:start="1139:24" pos:end="1139:25">12</literal><operator pos:start="1139:26" pos:end="1139:26">)</operator> <operator pos:start="1139:28" pos:end="1139:28">&amp;</operator> <literal type="number" pos:start="1139:30" pos:end="1139:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1141:9" pos:end="1141:33"><expr pos:start="1141:9" pos:end="1141:32"><name pos:start="1141:9" pos:end="1141:11">rd0</name> <operator pos:start="1141:13" pos:end="1141:13">=</operator> <operator pos:start="1141:15" pos:end="1141:15">(</operator><name pos:start="1141:16" pos:end="1141:19">insn</name> <operator pos:start="1141:21" pos:end="1141:22">&gt;&gt;</operator> <literal type="number" pos:start="1141:24" pos:end="1141:25">16</literal><operator pos:start="1141:26" pos:end="1141:26">)</operator> <operator pos:start="1141:28" pos:end="1141:28">&amp;</operator> <literal type="number" pos:start="1141:30" pos:end="1141:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1143:9" pos:end="1143:39"><expr pos:start="1143:9" pos:end="1143:38"><call pos:start="1143:9" pos:end="1143:38"><name pos:start="1143:9" pos:end="1143:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1143:34" pos:end="1143:38">(<argument pos:start="1143:35" pos:end="1143:37"><expr pos:start="1143:35" pos:end="1143:37"><name pos:start="1143:35" pos:end="1143:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1145:9" pos:end="1187:9">switch <condition pos:start="1145:16" pos:end="1145:33">(<expr pos:start="1145:17" pos:end="1145:32"><operator pos:start="1145:17" pos:end="1145:17">(</operator><name pos:start="1145:18" pos:end="1145:21">insn</name> <operator pos:start="1145:23" pos:end="1145:24">&gt;&gt;</operator> <literal type="number" pos:start="1145:26" pos:end="1145:27">22</literal><operator pos:start="1145:28" pos:end="1145:28">)</operator> <operator pos:start="1145:30" pos:end="1145:30">&amp;</operator> <literal type="number" pos:start="1145:32" pos:end="1145:32">3</literal></expr>)</condition> <block pos:start="1145:35" pos:end="1187:9">{<block_content pos:start="1147:9" pos:end="1185:21">

        <case pos:start="1147:9" pos:end="1147:15">case <expr pos:start="1147:14" pos:end="1147:14"><literal type="number" pos:start="1147:14" pos:end="1147:14">0</literal></expr>:</case>

            <if_stmt pos:start="1149:13" pos:end="1155:45"><if pos:start="1149:13" pos:end="1151:45">if <condition pos:start="1149:16" pos:end="1149:33">(<expr pos:start="1149:17" pos:end="1149:32"><name pos:start="1149:17" pos:end="1149:20">insn</name> <operator pos:start="1149:22" pos:end="1149:22">&amp;</operator> <operator pos:start="1149:24" pos:end="1149:24">(</operator><literal type="number" pos:start="1149:25" pos:end="1149:25">1</literal> <operator pos:start="1149:27" pos:end="1149:28">&lt;&lt;</operator> <literal type="number" pos:start="1149:30" pos:end="1149:31">21</literal><operator pos:start="1149:32" pos:end="1149:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1151:17" pos:end="1151:45"><block_content pos:start="1151:17" pos:end="1151:45">

                <expr_stmt pos:start="1151:17" pos:end="1151:45"><expr pos:start="1151:17" pos:end="1151:44"><call pos:start="1151:17" pos:end="1151:44"><name pos:start="1151:17" pos:end="1151:42">gen_op_iwmmxt_unpacklsb_M0</name><argument_list pos:start="1151:43" pos:end="1151:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1153:13" pos:end="1155:45">else<block type="pseudo" pos:start="1155:17" pos:end="1155:45"><block_content pos:start="1155:17" pos:end="1155:45">

                <expr_stmt pos:start="1155:17" pos:end="1155:45"><expr pos:start="1155:17" pos:end="1155:44"><call pos:start="1155:17" pos:end="1155:44"><name pos:start="1155:17" pos:end="1155:42">gen_op_iwmmxt_unpacklub_M0</name><argument_list pos:start="1155:43" pos:end="1155:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1157:13" pos:end="1157:18">break;</break>

        <case pos:start="1159:9" pos:end="1159:15">case <expr pos:start="1159:14" pos:end="1159:14"><literal type="number" pos:start="1159:14" pos:end="1159:14">1</literal></expr>:</case>

            <if_stmt pos:start="1161:13" pos:end="1167:45"><if pos:start="1161:13" pos:end="1163:45">if <condition pos:start="1161:16" pos:end="1161:33">(<expr pos:start="1161:17" pos:end="1161:32"><name pos:start="1161:17" pos:end="1161:20">insn</name> <operator pos:start="1161:22" pos:end="1161:22">&amp;</operator> <operator pos:start="1161:24" pos:end="1161:24">(</operator><literal type="number" pos:start="1161:25" pos:end="1161:25">1</literal> <operator pos:start="1161:27" pos:end="1161:28">&lt;&lt;</operator> <literal type="number" pos:start="1161:30" pos:end="1161:31">21</literal><operator pos:start="1161:32" pos:end="1161:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1163:17" pos:end="1163:45"><block_content pos:start="1163:17" pos:end="1163:45">

                <expr_stmt pos:start="1163:17" pos:end="1163:45"><expr pos:start="1163:17" pos:end="1163:44"><call pos:start="1163:17" pos:end="1163:44"><name pos:start="1163:17" pos:end="1163:42">gen_op_iwmmxt_unpacklsw_M0</name><argument_list pos:start="1163:43" pos:end="1163:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1165:13" pos:end="1167:45">else<block type="pseudo" pos:start="1167:17" pos:end="1167:45"><block_content pos:start="1167:17" pos:end="1167:45">

                <expr_stmt pos:start="1167:17" pos:end="1167:45"><expr pos:start="1167:17" pos:end="1167:44"><call pos:start="1167:17" pos:end="1167:44"><name pos:start="1167:17" pos:end="1167:42">gen_op_iwmmxt_unpackluw_M0</name><argument_list pos:start="1167:43" pos:end="1167:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1169:13" pos:end="1169:18">break;</break>

        <case pos:start="1171:9" pos:end="1171:15">case <expr pos:start="1171:14" pos:end="1171:14"><literal type="number" pos:start="1171:14" pos:end="1171:14">2</literal></expr>:</case>

            <if_stmt pos:start="1173:13" pos:end="1179:45"><if pos:start="1173:13" pos:end="1175:45">if <condition pos:start="1173:16" pos:end="1173:33">(<expr pos:start="1173:17" pos:end="1173:32"><name pos:start="1173:17" pos:end="1173:20">insn</name> <operator pos:start="1173:22" pos:end="1173:22">&amp;</operator> <operator pos:start="1173:24" pos:end="1173:24">(</operator><literal type="number" pos:start="1173:25" pos:end="1173:25">1</literal> <operator pos:start="1173:27" pos:end="1173:28">&lt;&lt;</operator> <literal type="number" pos:start="1173:30" pos:end="1173:31">21</literal><operator pos:start="1173:32" pos:end="1173:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1175:17" pos:end="1175:45"><block_content pos:start="1175:17" pos:end="1175:45">

                <expr_stmt pos:start="1175:17" pos:end="1175:45"><expr pos:start="1175:17" pos:end="1175:44"><call pos:start="1175:17" pos:end="1175:44"><name pos:start="1175:17" pos:end="1175:42">gen_op_iwmmxt_unpacklsl_M0</name><argument_list pos:start="1175:43" pos:end="1175:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1177:13" pos:end="1179:45">else<block type="pseudo" pos:start="1179:17" pos:end="1179:45"><block_content pos:start="1179:17" pos:end="1179:45">

                <expr_stmt pos:start="1179:17" pos:end="1179:45"><expr pos:start="1179:17" pos:end="1179:44"><call pos:start="1179:17" pos:end="1179:44"><name pos:start="1179:17" pos:end="1179:42">gen_op_iwmmxt_unpacklul_M0</name><argument_list pos:start="1179:43" pos:end="1179:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1181:13" pos:end="1181:18">break;</break>

        <case pos:start="1183:9" pos:end="1183:15">case <expr pos:start="1183:14" pos:end="1183:14"><literal type="number" pos:start="1183:14" pos:end="1183:14">3</literal></expr>:</case>

            <return pos:start="1185:13" pos:end="1185:21">return <expr pos:start="1185:20" pos:end="1185:20"><literal type="number" pos:start="1185:20" pos:end="1185:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1189:9" pos:end="1189:39"><expr pos:start="1189:9" pos:end="1189:38"><call pos:start="1189:9" pos:end="1189:38"><name pos:start="1189:9" pos:end="1189:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1189:34" pos:end="1189:38">(<argument pos:start="1189:35" pos:end="1189:37"><expr pos:start="1189:35" pos:end="1189:37"><name pos:start="1189:35" pos:end="1189:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1191:9" pos:end="1191:32"><expr pos:start="1191:9" pos:end="1191:31"><call pos:start="1191:9" pos:end="1191:31"><name pos:start="1191:9" pos:end="1191:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1191:30" pos:end="1191:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1193:9" pos:end="1193:32"><expr pos:start="1193:9" pos:end="1193:31"><call pos:start="1193:9" pos:end="1193:31"><name pos:start="1193:9" pos:end="1193:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1193:30" pos:end="1193:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1195:9" pos:end="1195:14">break;</break>

    <case pos:start="1197:5" pos:end="1197:15">case <expr pos:start="1197:10" pos:end="1197:14"><literal type="number" pos:start="1197:10" pos:end="1197:14">0x00c</literal></expr>:</case> <case pos:start="1197:17" pos:end="1197:27">case <expr pos:start="1197:22" pos:end="1197:26"><literal type="number" pos:start="1197:22" pos:end="1197:26">0x20c</literal></expr>:</case> <case pos:start="1197:29" pos:end="1197:39">case <expr pos:start="1197:34" pos:end="1197:38"><literal type="number" pos:start="1197:34" pos:end="1197:38">0x40c</literal></expr>:</case> <case pos:start="1197:41" pos:end="1197:51">case <expr pos:start="1197:46" pos:end="1197:50"><literal type="number" pos:start="1197:46" pos:end="1197:50">0x60c</literal></expr>:</case>	<comment type="block" pos:start="1197:57" pos:end="1197:70">/* WUNPCKEH */</comment>

    <case pos:start="1199:5" pos:end="1199:15">case <expr pos:start="1199:10" pos:end="1199:14"><literal type="number" pos:start="1199:10" pos:end="1199:14">0x80c</literal></expr>:</case> <case pos:start="1199:17" pos:end="1199:27">case <expr pos:start="1199:22" pos:end="1199:26"><literal type="number" pos:start="1199:22" pos:end="1199:26">0xa0c</literal></expr>:</case> <case pos:start="1199:29" pos:end="1199:39">case <expr pos:start="1199:34" pos:end="1199:38"><literal type="number" pos:start="1199:34" pos:end="1199:38">0xc0c</literal></expr>:</case> <case pos:start="1199:41" pos:end="1199:51">case <expr pos:start="1199:46" pos:end="1199:50"><literal type="number" pos:start="1199:46" pos:end="1199:50">0xe0c</literal></expr>:</case>

        <expr_stmt pos:start="1201:9" pos:end="1201:33"><expr pos:start="1201:9" pos:end="1201:32"><name pos:start="1201:9" pos:end="1201:11">wrd</name> <operator pos:start="1201:13" pos:end="1201:13">=</operator> <operator pos:start="1201:15" pos:end="1201:15">(</operator><name pos:start="1201:16" pos:end="1201:19">insn</name> <operator pos:start="1201:21" pos:end="1201:22">&gt;&gt;</operator> <literal type="number" pos:start="1201:24" pos:end="1201:25">12</literal><operator pos:start="1201:26" pos:end="1201:26">)</operator> <operator pos:start="1201:28" pos:end="1201:28">&amp;</operator> <literal type="number" pos:start="1201:30" pos:end="1201:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1203:9" pos:end="1203:33"><expr pos:start="1203:9" pos:end="1203:32"><name pos:start="1203:9" pos:end="1203:11">rd0</name> <operator pos:start="1203:13" pos:end="1203:13">=</operator> <operator pos:start="1203:15" pos:end="1203:15">(</operator><name pos:start="1203:16" pos:end="1203:19">insn</name> <operator pos:start="1203:21" pos:end="1203:22">&gt;&gt;</operator> <literal type="number" pos:start="1203:24" pos:end="1203:25">16</literal><operator pos:start="1203:26" pos:end="1203:26">)</operator> <operator pos:start="1203:28" pos:end="1203:28">&amp;</operator> <literal type="number" pos:start="1203:30" pos:end="1203:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1205:9" pos:end="1205:39"><expr pos:start="1205:9" pos:end="1205:38"><call pos:start="1205:9" pos:end="1205:38"><name pos:start="1205:9" pos:end="1205:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1205:34" pos:end="1205:38">(<argument pos:start="1205:35" pos:end="1205:37"><expr pos:start="1205:35" pos:end="1205:37"><name pos:start="1205:35" pos:end="1205:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1207:9" pos:end="1249:9">switch <condition pos:start="1207:16" pos:end="1207:33">(<expr pos:start="1207:17" pos:end="1207:32"><operator pos:start="1207:17" pos:end="1207:17">(</operator><name pos:start="1207:18" pos:end="1207:21">insn</name> <operator pos:start="1207:23" pos:end="1207:24">&gt;&gt;</operator> <literal type="number" pos:start="1207:26" pos:end="1207:27">22</literal><operator pos:start="1207:28" pos:end="1207:28">)</operator> <operator pos:start="1207:30" pos:end="1207:30">&amp;</operator> <literal type="number" pos:start="1207:32" pos:end="1207:32">3</literal></expr>)</condition> <block pos:start="1207:35" pos:end="1249:9">{<block_content pos:start="1209:9" pos:end="1247:21">

        <case pos:start="1209:9" pos:end="1209:15">case <expr pos:start="1209:14" pos:end="1209:14"><literal type="number" pos:start="1209:14" pos:end="1209:14">0</literal></expr>:</case>

            <if_stmt pos:start="1211:13" pos:end="1217:45"><if pos:start="1211:13" pos:end="1213:45">if <condition pos:start="1211:16" pos:end="1211:33">(<expr pos:start="1211:17" pos:end="1211:32"><name pos:start="1211:17" pos:end="1211:20">insn</name> <operator pos:start="1211:22" pos:end="1211:22">&amp;</operator> <operator pos:start="1211:24" pos:end="1211:24">(</operator><literal type="number" pos:start="1211:25" pos:end="1211:25">1</literal> <operator pos:start="1211:27" pos:end="1211:28">&lt;&lt;</operator> <literal type="number" pos:start="1211:30" pos:end="1211:31">21</literal><operator pos:start="1211:32" pos:end="1211:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1213:17" pos:end="1213:45"><block_content pos:start="1213:17" pos:end="1213:45">

                <expr_stmt pos:start="1213:17" pos:end="1213:45"><expr pos:start="1213:17" pos:end="1213:44"><call pos:start="1213:17" pos:end="1213:44"><name pos:start="1213:17" pos:end="1213:42">gen_op_iwmmxt_unpackhsb_M0</name><argument_list pos:start="1213:43" pos:end="1213:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1215:13" pos:end="1217:45">else<block type="pseudo" pos:start="1217:17" pos:end="1217:45"><block_content pos:start="1217:17" pos:end="1217:45">

                <expr_stmt pos:start="1217:17" pos:end="1217:45"><expr pos:start="1217:17" pos:end="1217:44"><call pos:start="1217:17" pos:end="1217:44"><name pos:start="1217:17" pos:end="1217:42">gen_op_iwmmxt_unpackhub_M0</name><argument_list pos:start="1217:43" pos:end="1217:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1219:13" pos:end="1219:18">break;</break>

        <case pos:start="1221:9" pos:end="1221:15">case <expr pos:start="1221:14" pos:end="1221:14"><literal type="number" pos:start="1221:14" pos:end="1221:14">1</literal></expr>:</case>

            <if_stmt pos:start="1223:13" pos:end="1229:45"><if pos:start="1223:13" pos:end="1225:45">if <condition pos:start="1223:16" pos:end="1223:33">(<expr pos:start="1223:17" pos:end="1223:32"><name pos:start="1223:17" pos:end="1223:20">insn</name> <operator pos:start="1223:22" pos:end="1223:22">&amp;</operator> <operator pos:start="1223:24" pos:end="1223:24">(</operator><literal type="number" pos:start="1223:25" pos:end="1223:25">1</literal> <operator pos:start="1223:27" pos:end="1223:28">&lt;&lt;</operator> <literal type="number" pos:start="1223:30" pos:end="1223:31">21</literal><operator pos:start="1223:32" pos:end="1223:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1225:17" pos:end="1225:45"><block_content pos:start="1225:17" pos:end="1225:45">

                <expr_stmt pos:start="1225:17" pos:end="1225:45"><expr pos:start="1225:17" pos:end="1225:44"><call pos:start="1225:17" pos:end="1225:44"><name pos:start="1225:17" pos:end="1225:42">gen_op_iwmmxt_unpackhsw_M0</name><argument_list pos:start="1225:43" pos:end="1225:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1227:13" pos:end="1229:45">else<block type="pseudo" pos:start="1229:17" pos:end="1229:45"><block_content pos:start="1229:17" pos:end="1229:45">

                <expr_stmt pos:start="1229:17" pos:end="1229:45"><expr pos:start="1229:17" pos:end="1229:44"><call pos:start="1229:17" pos:end="1229:44"><name pos:start="1229:17" pos:end="1229:42">gen_op_iwmmxt_unpackhuw_M0</name><argument_list pos:start="1229:43" pos:end="1229:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1231:13" pos:end="1231:18">break;</break>

        <case pos:start="1233:9" pos:end="1233:15">case <expr pos:start="1233:14" pos:end="1233:14"><literal type="number" pos:start="1233:14" pos:end="1233:14">2</literal></expr>:</case>

            <if_stmt pos:start="1235:13" pos:end="1241:45"><if pos:start="1235:13" pos:end="1237:45">if <condition pos:start="1235:16" pos:end="1235:33">(<expr pos:start="1235:17" pos:end="1235:32"><name pos:start="1235:17" pos:end="1235:20">insn</name> <operator pos:start="1235:22" pos:end="1235:22">&amp;</operator> <operator pos:start="1235:24" pos:end="1235:24">(</operator><literal type="number" pos:start="1235:25" pos:end="1235:25">1</literal> <operator pos:start="1235:27" pos:end="1235:28">&lt;&lt;</operator> <literal type="number" pos:start="1235:30" pos:end="1235:31">21</literal><operator pos:start="1235:32" pos:end="1235:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1237:17" pos:end="1237:45"><block_content pos:start="1237:17" pos:end="1237:45">

                <expr_stmt pos:start="1237:17" pos:end="1237:45"><expr pos:start="1237:17" pos:end="1237:44"><call pos:start="1237:17" pos:end="1237:44"><name pos:start="1237:17" pos:end="1237:42">gen_op_iwmmxt_unpackhsl_M0</name><argument_list pos:start="1237:43" pos:end="1237:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1239:13" pos:end="1241:45">else<block type="pseudo" pos:start="1241:17" pos:end="1241:45"><block_content pos:start="1241:17" pos:end="1241:45">

                <expr_stmt pos:start="1241:17" pos:end="1241:45"><expr pos:start="1241:17" pos:end="1241:44"><call pos:start="1241:17" pos:end="1241:44"><name pos:start="1241:17" pos:end="1241:42">gen_op_iwmmxt_unpackhul_M0</name><argument_list pos:start="1241:43" pos:end="1241:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1243:13" pos:end="1243:18">break;</break>

        <case pos:start="1245:9" pos:end="1245:15">case <expr pos:start="1245:14" pos:end="1245:14"><literal type="number" pos:start="1245:14" pos:end="1245:14">3</literal></expr>:</case>

            <return pos:start="1247:13" pos:end="1247:21">return <expr pos:start="1247:20" pos:end="1247:20"><literal type="number" pos:start="1247:20" pos:end="1247:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1251:9" pos:end="1251:39"><expr pos:start="1251:9" pos:end="1251:38"><call pos:start="1251:9" pos:end="1251:38"><name pos:start="1251:9" pos:end="1251:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1251:34" pos:end="1251:38">(<argument pos:start="1251:35" pos:end="1251:37"><expr pos:start="1251:35" pos:end="1251:37"><name pos:start="1251:35" pos:end="1251:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1253:9" pos:end="1253:32"><expr pos:start="1253:9" pos:end="1253:31"><call pos:start="1253:9" pos:end="1253:31"><name pos:start="1253:9" pos:end="1253:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1253:30" pos:end="1253:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1255:9" pos:end="1255:32"><expr pos:start="1255:9" pos:end="1255:31"><call pos:start="1255:9" pos:end="1255:31"><name pos:start="1255:9" pos:end="1255:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1255:30" pos:end="1255:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1257:9" pos:end="1257:14">break;</break>

    <case pos:start="1259:5" pos:end="1259:15">case <expr pos:start="1259:10" pos:end="1259:14"><literal type="number" pos:start="1259:10" pos:end="1259:14">0x204</literal></expr>:</case> <case pos:start="1259:17" pos:end="1259:27">case <expr pos:start="1259:22" pos:end="1259:26"><literal type="number" pos:start="1259:22" pos:end="1259:26">0x604</literal></expr>:</case> <case pos:start="1259:29" pos:end="1259:39">case <expr pos:start="1259:34" pos:end="1259:38"><literal type="number" pos:start="1259:34" pos:end="1259:38">0xa04</literal></expr>:</case> <case pos:start="1259:41" pos:end="1259:51">case <expr pos:start="1259:46" pos:end="1259:50"><literal type="number" pos:start="1259:46" pos:end="1259:50">0xe04</literal></expr>:</case>	<comment type="block" pos:start="1259:57" pos:end="1259:66">/* WSRL */</comment>

    <case pos:start="1261:5" pos:end="1261:15">case <expr pos:start="1261:10" pos:end="1261:14"><literal type="number" pos:start="1261:10" pos:end="1261:14">0x214</literal></expr>:</case> <case pos:start="1261:17" pos:end="1261:27">case <expr pos:start="1261:22" pos:end="1261:26"><literal type="number" pos:start="1261:22" pos:end="1261:26">0x614</literal></expr>:</case> <case pos:start="1261:29" pos:end="1261:39">case <expr pos:start="1261:34" pos:end="1261:38"><literal type="number" pos:start="1261:34" pos:end="1261:38">0xa14</literal></expr>:</case> <case pos:start="1261:41" pos:end="1261:51">case <expr pos:start="1261:46" pos:end="1261:50"><literal type="number" pos:start="1261:46" pos:end="1261:50">0xe14</literal></expr>:</case>

        <if_stmt pos:start="1263:9" pos:end="1265:21"><if pos:start="1263:9" pos:end="1265:21">if <condition pos:start="1263:12" pos:end="1263:36">(<expr pos:start="1263:13" pos:end="1263:35"><operator pos:start="1263:13" pos:end="1263:13">(</operator><operator pos:start="1263:14" pos:end="1263:14">(</operator><name pos:start="1263:15" pos:end="1263:18">insn</name> <operator pos:start="1263:20" pos:end="1263:21">&gt;&gt;</operator> <literal type="number" pos:start="1263:23" pos:end="1263:24">22</literal><operator pos:start="1263:25" pos:end="1263:25">)</operator> <operator pos:start="1263:27" pos:end="1263:27">&amp;</operator> <literal type="number" pos:start="1263:29" pos:end="1263:29">3</literal><operator pos:start="1263:30" pos:end="1263:30">)</operator> <operator pos:start="1263:32" pos:end="1263:33">==</operator> <literal type="number" pos:start="1263:35" pos:end="1263:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1265:13" pos:end="1265:21"><block_content pos:start="1265:13" pos:end="1265:21">

            <return pos:start="1265:13" pos:end="1265:21">return <expr pos:start="1265:20" pos:end="1265:20"><literal type="number" pos:start="1265:20" pos:end="1265:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1267:9" pos:end="1267:33"><expr pos:start="1267:9" pos:end="1267:32"><name pos:start="1267:9" pos:end="1267:11">wrd</name> <operator pos:start="1267:13" pos:end="1267:13">=</operator> <operator pos:start="1267:15" pos:end="1267:15">(</operator><name pos:start="1267:16" pos:end="1267:19">insn</name> <operator pos:start="1267:21" pos:end="1267:22">&gt;&gt;</operator> <literal type="number" pos:start="1267:24" pos:end="1267:25">12</literal><operator pos:start="1267:26" pos:end="1267:26">)</operator> <operator pos:start="1267:28" pos:end="1267:28">&amp;</operator> <literal type="number" pos:start="1267:30" pos:end="1267:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1269:9" pos:end="1269:33"><expr pos:start="1269:9" pos:end="1269:32"><name pos:start="1269:9" pos:end="1269:11">rd0</name> <operator pos:start="1269:13" pos:end="1269:13">=</operator> <operator pos:start="1269:15" pos:end="1269:15">(</operator><name pos:start="1269:16" pos:end="1269:19">insn</name> <operator pos:start="1269:21" pos:end="1269:22">&gt;&gt;</operator> <literal type="number" pos:start="1269:24" pos:end="1269:25">16</literal><operator pos:start="1269:26" pos:end="1269:26">)</operator> <operator pos:start="1269:28" pos:end="1269:28">&amp;</operator> <literal type="number" pos:start="1269:30" pos:end="1269:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1271:9" pos:end="1271:39"><expr pos:start="1271:9" pos:end="1271:38"><call pos:start="1271:9" pos:end="1271:38"><name pos:start="1271:9" pos:end="1271:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1271:34" pos:end="1271:38">(<argument pos:start="1271:35" pos:end="1271:37"><expr pos:start="1271:35" pos:end="1271:37"><name pos:start="1271:35" pos:end="1271:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1273:9" pos:end="1273:24"><expr pos:start="1273:9" pos:end="1273:23"><name pos:start="1273:9" pos:end="1273:11">tmp</name> <operator pos:start="1273:13" pos:end="1273:13">=</operator> <call pos:start="1273:15" pos:end="1273:23"><name pos:start="1273:15" pos:end="1273:21">new_tmp</name><argument_list pos:start="1273:22" pos:end="1273:23">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1275:9" pos:end="1281:9"><if pos:start="1275:9" pos:end="1281:9">if <condition pos:start="1275:12" pos:end="1275:46">(<expr pos:start="1275:13" pos:end="1275:45"><call pos:start="1275:13" pos:end="1275:45"><name pos:start="1275:13" pos:end="1275:28">gen_iwmmxt_shift</name><argument_list pos:start="1275:29" pos:end="1275:45">(<argument pos:start="1275:30" pos:end="1275:33"><expr pos:start="1275:30" pos:end="1275:33"><name pos:start="1275:30" pos:end="1275:33">insn</name></expr></argument>, <argument pos:start="1275:36" pos:end="1275:39"><expr pos:start="1275:36" pos:end="1275:39"><literal type="number" pos:start="1275:36" pos:end="1275:39">0xff</literal></expr></argument>, <argument pos:start="1275:42" pos:end="1275:44"><expr pos:start="1275:42" pos:end="1275:44"><name pos:start="1275:42" pos:end="1275:44">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1275:48" pos:end="1281:9">{<block_content pos:start="1277:13" pos:end="1279:21">

            <expr_stmt pos:start="1277:13" pos:end="1277:26"><expr pos:start="1277:13" pos:end="1277:25"><call pos:start="1277:13" pos:end="1277:25"><name pos:start="1277:13" pos:end="1277:20">dead_tmp</name><argument_list pos:start="1277:21" pos:end="1277:25">(<argument pos:start="1277:22" pos:end="1277:24"><expr pos:start="1277:22" pos:end="1277:24"><name pos:start="1277:22" pos:end="1277:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1279:13" pos:end="1279:21">return <expr pos:start="1279:20" pos:end="1279:20"><literal type="number" pos:start="1279:20" pos:end="1279:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="1283:9" pos:end="1303:9">switch <condition pos:start="1283:16" pos:end="1283:33">(<expr pos:start="1283:17" pos:end="1283:32"><operator pos:start="1283:17" pos:end="1283:17">(</operator><name pos:start="1283:18" pos:end="1283:21">insn</name> <operator pos:start="1283:23" pos:end="1283:24">&gt;&gt;</operator> <literal type="number" pos:start="1283:26" pos:end="1283:27">22</literal><operator pos:start="1283:28" pos:end="1283:28">)</operator> <operator pos:start="1283:30" pos:end="1283:30">&amp;</operator> <literal type="number" pos:start="1283:32" pos:end="1283:32">3</literal></expr>)</condition> <block pos:start="1283:35" pos:end="1303:9">{<block_content pos:start="1285:9" pos:end="1301:18">

        <case pos:start="1285:9" pos:end="1285:15">case <expr pos:start="1285:14" pos:end="1285:14"><literal type="number" pos:start="1285:14" pos:end="1285:14">1</literal></expr>:</case>

            <expr_stmt pos:start="1287:13" pos:end="1287:65"><expr pos:start="1287:13" pos:end="1287:64"><call pos:start="1287:13" pos:end="1287:64"><name pos:start="1287:13" pos:end="1287:34">gen_helper_iwmmxt_srlw</name><argument_list pos:start="1287:35" pos:end="1287:64">(<argument pos:start="1287:36" pos:end="1287:41"><expr pos:start="1287:36" pos:end="1287:41"><name pos:start="1287:36" pos:end="1287:41">cpu_M0</name></expr></argument>, <argument pos:start="1287:44" pos:end="1287:50"><expr pos:start="1287:44" pos:end="1287:50"><name pos:start="1287:44" pos:end="1287:50">cpu_env</name></expr></argument>, <argument pos:start="1287:53" pos:end="1287:58"><expr pos:start="1287:53" pos:end="1287:58"><name pos:start="1287:53" pos:end="1287:58">cpu_M0</name></expr></argument>, <argument pos:start="1287:61" pos:end="1287:63"><expr pos:start="1287:61" pos:end="1287:63"><name pos:start="1287:61" pos:end="1287:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1289:13" pos:end="1289:18">break;</break>

        <case pos:start="1291:9" pos:end="1291:15">case <expr pos:start="1291:14" pos:end="1291:14"><literal type="number" pos:start="1291:14" pos:end="1291:14">2</literal></expr>:</case>

            <expr_stmt pos:start="1293:13" pos:end="1293:65"><expr pos:start="1293:13" pos:end="1293:64"><call pos:start="1293:13" pos:end="1293:64"><name pos:start="1293:13" pos:end="1293:34">gen_helper_iwmmxt_srll</name><argument_list pos:start="1293:35" pos:end="1293:64">(<argument pos:start="1293:36" pos:end="1293:41"><expr pos:start="1293:36" pos:end="1293:41"><name pos:start="1293:36" pos:end="1293:41">cpu_M0</name></expr></argument>, <argument pos:start="1293:44" pos:end="1293:50"><expr pos:start="1293:44" pos:end="1293:50"><name pos:start="1293:44" pos:end="1293:50">cpu_env</name></expr></argument>, <argument pos:start="1293:53" pos:end="1293:58"><expr pos:start="1293:53" pos:end="1293:58"><name pos:start="1293:53" pos:end="1293:58">cpu_M0</name></expr></argument>, <argument pos:start="1293:61" pos:end="1293:63"><expr pos:start="1293:61" pos:end="1293:63"><name pos:start="1293:61" pos:end="1293:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1295:13" pos:end="1295:18">break;</break>

        <case pos:start="1297:9" pos:end="1297:15">case <expr pos:start="1297:14" pos:end="1297:14"><literal type="number" pos:start="1297:14" pos:end="1297:14">3</literal></expr>:</case>

            <expr_stmt pos:start="1299:13" pos:end="1299:65"><expr pos:start="1299:13" pos:end="1299:64"><call pos:start="1299:13" pos:end="1299:64"><name pos:start="1299:13" pos:end="1299:34">gen_helper_iwmmxt_srlq</name><argument_list pos:start="1299:35" pos:end="1299:64">(<argument pos:start="1299:36" pos:end="1299:41"><expr pos:start="1299:36" pos:end="1299:41"><name pos:start="1299:36" pos:end="1299:41">cpu_M0</name></expr></argument>, <argument pos:start="1299:44" pos:end="1299:50"><expr pos:start="1299:44" pos:end="1299:50"><name pos:start="1299:44" pos:end="1299:50">cpu_env</name></expr></argument>, <argument pos:start="1299:53" pos:end="1299:58"><expr pos:start="1299:53" pos:end="1299:58"><name pos:start="1299:53" pos:end="1299:58">cpu_M0</name></expr></argument>, <argument pos:start="1299:61" pos:end="1299:63"><expr pos:start="1299:61" pos:end="1299:63"><name pos:start="1299:61" pos:end="1299:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1301:13" pos:end="1301:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1305:9" pos:end="1305:22"><expr pos:start="1305:9" pos:end="1305:21"><call pos:start="1305:9" pos:end="1305:21"><name pos:start="1305:9" pos:end="1305:16">dead_tmp</name><argument_list pos:start="1305:17" pos:end="1305:21">(<argument pos:start="1305:18" pos:end="1305:20"><expr pos:start="1305:18" pos:end="1305:20"><name pos:start="1305:18" pos:end="1305:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1307:9" pos:end="1307:39"><expr pos:start="1307:9" pos:end="1307:38"><call pos:start="1307:9" pos:end="1307:38"><name pos:start="1307:9" pos:end="1307:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1307:34" pos:end="1307:38">(<argument pos:start="1307:35" pos:end="1307:37"><expr pos:start="1307:35" pos:end="1307:37"><name pos:start="1307:35" pos:end="1307:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1309:9" pos:end="1309:32"><expr pos:start="1309:9" pos:end="1309:31"><call pos:start="1309:9" pos:end="1309:31"><name pos:start="1309:9" pos:end="1309:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1309:30" pos:end="1309:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1311:9" pos:end="1311:32"><expr pos:start="1311:9" pos:end="1311:31"><call pos:start="1311:9" pos:end="1311:31"><name pos:start="1311:9" pos:end="1311:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1311:30" pos:end="1311:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1313:9" pos:end="1313:14">break;</break>

    <case pos:start="1315:5" pos:end="1315:15">case <expr pos:start="1315:10" pos:end="1315:14"><literal type="number" pos:start="1315:10" pos:end="1315:14">0x004</literal></expr>:</case> <case pos:start="1315:17" pos:end="1315:27">case <expr pos:start="1315:22" pos:end="1315:26"><literal type="number" pos:start="1315:22" pos:end="1315:26">0x404</literal></expr>:</case> <case pos:start="1315:29" pos:end="1315:39">case <expr pos:start="1315:34" pos:end="1315:38"><literal type="number" pos:start="1315:34" pos:end="1315:38">0x804</literal></expr>:</case> <case pos:start="1315:41" pos:end="1315:51">case <expr pos:start="1315:46" pos:end="1315:50"><literal type="number" pos:start="1315:46" pos:end="1315:50">0xc04</literal></expr>:</case>	<comment type="block" pos:start="1315:57" pos:end="1315:66">/* WSRA */</comment>

    <case pos:start="1317:5" pos:end="1317:15">case <expr pos:start="1317:10" pos:end="1317:14"><literal type="number" pos:start="1317:10" pos:end="1317:14">0x014</literal></expr>:</case> <case pos:start="1317:17" pos:end="1317:27">case <expr pos:start="1317:22" pos:end="1317:26"><literal type="number" pos:start="1317:22" pos:end="1317:26">0x414</literal></expr>:</case> <case pos:start="1317:29" pos:end="1317:39">case <expr pos:start="1317:34" pos:end="1317:38"><literal type="number" pos:start="1317:34" pos:end="1317:38">0x814</literal></expr>:</case> <case pos:start="1317:41" pos:end="1317:51">case <expr pos:start="1317:46" pos:end="1317:50"><literal type="number" pos:start="1317:46" pos:end="1317:50">0xc14</literal></expr>:</case>

        <if_stmt pos:start="1319:9" pos:end="1321:21"><if pos:start="1319:9" pos:end="1321:21">if <condition pos:start="1319:12" pos:end="1319:36">(<expr pos:start="1319:13" pos:end="1319:35"><operator pos:start="1319:13" pos:end="1319:13">(</operator><operator pos:start="1319:14" pos:end="1319:14">(</operator><name pos:start="1319:15" pos:end="1319:18">insn</name> <operator pos:start="1319:20" pos:end="1319:21">&gt;&gt;</operator> <literal type="number" pos:start="1319:23" pos:end="1319:24">22</literal><operator pos:start="1319:25" pos:end="1319:25">)</operator> <operator pos:start="1319:27" pos:end="1319:27">&amp;</operator> <literal type="number" pos:start="1319:29" pos:end="1319:29">3</literal><operator pos:start="1319:30" pos:end="1319:30">)</operator> <operator pos:start="1319:32" pos:end="1319:33">==</operator> <literal type="number" pos:start="1319:35" pos:end="1319:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1321:13" pos:end="1321:21"><block_content pos:start="1321:13" pos:end="1321:21">

            <return pos:start="1321:13" pos:end="1321:21">return <expr pos:start="1321:20" pos:end="1321:20"><literal type="number" pos:start="1321:20" pos:end="1321:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1323:9" pos:end="1323:33"><expr pos:start="1323:9" pos:end="1323:32"><name pos:start="1323:9" pos:end="1323:11">wrd</name> <operator pos:start="1323:13" pos:end="1323:13">=</operator> <operator pos:start="1323:15" pos:end="1323:15">(</operator><name pos:start="1323:16" pos:end="1323:19">insn</name> <operator pos:start="1323:21" pos:end="1323:22">&gt;&gt;</operator> <literal type="number" pos:start="1323:24" pos:end="1323:25">12</literal><operator pos:start="1323:26" pos:end="1323:26">)</operator> <operator pos:start="1323:28" pos:end="1323:28">&amp;</operator> <literal type="number" pos:start="1323:30" pos:end="1323:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1325:9" pos:end="1325:33"><expr pos:start="1325:9" pos:end="1325:32"><name pos:start="1325:9" pos:end="1325:11">rd0</name> <operator pos:start="1325:13" pos:end="1325:13">=</operator> <operator pos:start="1325:15" pos:end="1325:15">(</operator><name pos:start="1325:16" pos:end="1325:19">insn</name> <operator pos:start="1325:21" pos:end="1325:22">&gt;&gt;</operator> <literal type="number" pos:start="1325:24" pos:end="1325:25">16</literal><operator pos:start="1325:26" pos:end="1325:26">)</operator> <operator pos:start="1325:28" pos:end="1325:28">&amp;</operator> <literal type="number" pos:start="1325:30" pos:end="1325:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1327:9" pos:end="1327:39"><expr pos:start="1327:9" pos:end="1327:38"><call pos:start="1327:9" pos:end="1327:38"><name pos:start="1327:9" pos:end="1327:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1327:34" pos:end="1327:38">(<argument pos:start="1327:35" pos:end="1327:37"><expr pos:start="1327:35" pos:end="1327:37"><name pos:start="1327:35" pos:end="1327:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1329:9" pos:end="1329:24"><expr pos:start="1329:9" pos:end="1329:23"><name pos:start="1329:9" pos:end="1329:11">tmp</name> <operator pos:start="1329:13" pos:end="1329:13">=</operator> <call pos:start="1329:15" pos:end="1329:23"><name pos:start="1329:15" pos:end="1329:21">new_tmp</name><argument_list pos:start="1329:22" pos:end="1329:23">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1331:9" pos:end="1337:9"><if pos:start="1331:9" pos:end="1337:9">if <condition pos:start="1331:12" pos:end="1331:46">(<expr pos:start="1331:13" pos:end="1331:45"><call pos:start="1331:13" pos:end="1331:45"><name pos:start="1331:13" pos:end="1331:28">gen_iwmmxt_shift</name><argument_list pos:start="1331:29" pos:end="1331:45">(<argument pos:start="1331:30" pos:end="1331:33"><expr pos:start="1331:30" pos:end="1331:33"><name pos:start="1331:30" pos:end="1331:33">insn</name></expr></argument>, <argument pos:start="1331:36" pos:end="1331:39"><expr pos:start="1331:36" pos:end="1331:39"><literal type="number" pos:start="1331:36" pos:end="1331:39">0xff</literal></expr></argument>, <argument pos:start="1331:42" pos:end="1331:44"><expr pos:start="1331:42" pos:end="1331:44"><name pos:start="1331:42" pos:end="1331:44">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1331:48" pos:end="1337:9">{<block_content pos:start="1333:13" pos:end="1335:21">

            <expr_stmt pos:start="1333:13" pos:end="1333:26"><expr pos:start="1333:13" pos:end="1333:25"><call pos:start="1333:13" pos:end="1333:25"><name pos:start="1333:13" pos:end="1333:20">dead_tmp</name><argument_list pos:start="1333:21" pos:end="1333:25">(<argument pos:start="1333:22" pos:end="1333:24"><expr pos:start="1333:22" pos:end="1333:24"><name pos:start="1333:22" pos:end="1333:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1335:13" pos:end="1335:21">return <expr pos:start="1335:20" pos:end="1335:20"><literal type="number" pos:start="1335:20" pos:end="1335:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="1339:9" pos:end="1359:9">switch <condition pos:start="1339:16" pos:end="1339:33">(<expr pos:start="1339:17" pos:end="1339:32"><operator pos:start="1339:17" pos:end="1339:17">(</operator><name pos:start="1339:18" pos:end="1339:21">insn</name> <operator pos:start="1339:23" pos:end="1339:24">&gt;&gt;</operator> <literal type="number" pos:start="1339:26" pos:end="1339:27">22</literal><operator pos:start="1339:28" pos:end="1339:28">)</operator> <operator pos:start="1339:30" pos:end="1339:30">&amp;</operator> <literal type="number" pos:start="1339:32" pos:end="1339:32">3</literal></expr>)</condition> <block pos:start="1339:35" pos:end="1359:9">{<block_content pos:start="1341:9" pos:end="1357:18">

        <case pos:start="1341:9" pos:end="1341:15">case <expr pos:start="1341:14" pos:end="1341:14"><literal type="number" pos:start="1341:14" pos:end="1341:14">1</literal></expr>:</case>

            <expr_stmt pos:start="1343:13" pos:end="1343:65"><expr pos:start="1343:13" pos:end="1343:64"><call pos:start="1343:13" pos:end="1343:64"><name pos:start="1343:13" pos:end="1343:34">gen_helper_iwmmxt_sraw</name><argument_list pos:start="1343:35" pos:end="1343:64">(<argument pos:start="1343:36" pos:end="1343:41"><expr pos:start="1343:36" pos:end="1343:41"><name pos:start="1343:36" pos:end="1343:41">cpu_M0</name></expr></argument>, <argument pos:start="1343:44" pos:end="1343:50"><expr pos:start="1343:44" pos:end="1343:50"><name pos:start="1343:44" pos:end="1343:50">cpu_env</name></expr></argument>, <argument pos:start="1343:53" pos:end="1343:58"><expr pos:start="1343:53" pos:end="1343:58"><name pos:start="1343:53" pos:end="1343:58">cpu_M0</name></expr></argument>, <argument pos:start="1343:61" pos:end="1343:63"><expr pos:start="1343:61" pos:end="1343:63"><name pos:start="1343:61" pos:end="1343:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1345:13" pos:end="1345:18">break;</break>

        <case pos:start="1347:9" pos:end="1347:15">case <expr pos:start="1347:14" pos:end="1347:14"><literal type="number" pos:start="1347:14" pos:end="1347:14">2</literal></expr>:</case>

            <expr_stmt pos:start="1349:13" pos:end="1349:65"><expr pos:start="1349:13" pos:end="1349:64"><call pos:start="1349:13" pos:end="1349:64"><name pos:start="1349:13" pos:end="1349:34">gen_helper_iwmmxt_sral</name><argument_list pos:start="1349:35" pos:end="1349:64">(<argument pos:start="1349:36" pos:end="1349:41"><expr pos:start="1349:36" pos:end="1349:41"><name pos:start="1349:36" pos:end="1349:41">cpu_M0</name></expr></argument>, <argument pos:start="1349:44" pos:end="1349:50"><expr pos:start="1349:44" pos:end="1349:50"><name pos:start="1349:44" pos:end="1349:50">cpu_env</name></expr></argument>, <argument pos:start="1349:53" pos:end="1349:58"><expr pos:start="1349:53" pos:end="1349:58"><name pos:start="1349:53" pos:end="1349:58">cpu_M0</name></expr></argument>, <argument pos:start="1349:61" pos:end="1349:63"><expr pos:start="1349:61" pos:end="1349:63"><name pos:start="1349:61" pos:end="1349:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1351:13" pos:end="1351:18">break;</break>

        <case pos:start="1353:9" pos:end="1353:15">case <expr pos:start="1353:14" pos:end="1353:14"><literal type="number" pos:start="1353:14" pos:end="1353:14">3</literal></expr>:</case>

            <expr_stmt pos:start="1355:13" pos:end="1355:65"><expr pos:start="1355:13" pos:end="1355:64"><call pos:start="1355:13" pos:end="1355:64"><name pos:start="1355:13" pos:end="1355:34">gen_helper_iwmmxt_sraq</name><argument_list pos:start="1355:35" pos:end="1355:64">(<argument pos:start="1355:36" pos:end="1355:41"><expr pos:start="1355:36" pos:end="1355:41"><name pos:start="1355:36" pos:end="1355:41">cpu_M0</name></expr></argument>, <argument pos:start="1355:44" pos:end="1355:50"><expr pos:start="1355:44" pos:end="1355:50"><name pos:start="1355:44" pos:end="1355:50">cpu_env</name></expr></argument>, <argument pos:start="1355:53" pos:end="1355:58"><expr pos:start="1355:53" pos:end="1355:58"><name pos:start="1355:53" pos:end="1355:58">cpu_M0</name></expr></argument>, <argument pos:start="1355:61" pos:end="1355:63"><expr pos:start="1355:61" pos:end="1355:63"><name pos:start="1355:61" pos:end="1355:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1357:13" pos:end="1357:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1361:9" pos:end="1361:22"><expr pos:start="1361:9" pos:end="1361:21"><call pos:start="1361:9" pos:end="1361:21"><name pos:start="1361:9" pos:end="1361:16">dead_tmp</name><argument_list pos:start="1361:17" pos:end="1361:21">(<argument pos:start="1361:18" pos:end="1361:20"><expr pos:start="1361:18" pos:end="1361:20"><name pos:start="1361:18" pos:end="1361:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1363:9" pos:end="1363:39"><expr pos:start="1363:9" pos:end="1363:38"><call pos:start="1363:9" pos:end="1363:38"><name pos:start="1363:9" pos:end="1363:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1363:34" pos:end="1363:38">(<argument pos:start="1363:35" pos:end="1363:37"><expr pos:start="1363:35" pos:end="1363:37"><name pos:start="1363:35" pos:end="1363:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1365:9" pos:end="1365:32"><expr pos:start="1365:9" pos:end="1365:31"><call pos:start="1365:9" pos:end="1365:31"><name pos:start="1365:9" pos:end="1365:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1365:30" pos:end="1365:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1367:9" pos:end="1367:32"><expr pos:start="1367:9" pos:end="1367:31"><call pos:start="1367:9" pos:end="1367:31"><name pos:start="1367:9" pos:end="1367:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1367:30" pos:end="1367:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1369:9" pos:end="1369:14">break;</break>

    <case pos:start="1371:5" pos:end="1371:15">case <expr pos:start="1371:10" pos:end="1371:14"><literal type="number" pos:start="1371:10" pos:end="1371:14">0x104</literal></expr>:</case> <case pos:start="1371:17" pos:end="1371:27">case <expr pos:start="1371:22" pos:end="1371:26"><literal type="number" pos:start="1371:22" pos:end="1371:26">0x504</literal></expr>:</case> <case pos:start="1371:29" pos:end="1371:39">case <expr pos:start="1371:34" pos:end="1371:38"><literal type="number" pos:start="1371:34" pos:end="1371:38">0x904</literal></expr>:</case> <case pos:start="1371:41" pos:end="1371:51">case <expr pos:start="1371:46" pos:end="1371:50"><literal type="number" pos:start="1371:46" pos:end="1371:50">0xd04</literal></expr>:</case>	<comment type="block" pos:start="1371:57" pos:end="1371:66">/* WSLL */</comment>

    <case pos:start="1373:5" pos:end="1373:15">case <expr pos:start="1373:10" pos:end="1373:14"><literal type="number" pos:start="1373:10" pos:end="1373:14">0x114</literal></expr>:</case> <case pos:start="1373:17" pos:end="1373:27">case <expr pos:start="1373:22" pos:end="1373:26"><literal type="number" pos:start="1373:22" pos:end="1373:26">0x514</literal></expr>:</case> <case pos:start="1373:29" pos:end="1373:39">case <expr pos:start="1373:34" pos:end="1373:38"><literal type="number" pos:start="1373:34" pos:end="1373:38">0x914</literal></expr>:</case> <case pos:start="1373:41" pos:end="1373:51">case <expr pos:start="1373:46" pos:end="1373:50"><literal type="number" pos:start="1373:46" pos:end="1373:50">0xd14</literal></expr>:</case>

        <if_stmt pos:start="1375:9" pos:end="1377:21"><if pos:start="1375:9" pos:end="1377:21">if <condition pos:start="1375:12" pos:end="1375:36">(<expr pos:start="1375:13" pos:end="1375:35"><operator pos:start="1375:13" pos:end="1375:13">(</operator><operator pos:start="1375:14" pos:end="1375:14">(</operator><name pos:start="1375:15" pos:end="1375:18">insn</name> <operator pos:start="1375:20" pos:end="1375:21">&gt;&gt;</operator> <literal type="number" pos:start="1375:23" pos:end="1375:24">22</literal><operator pos:start="1375:25" pos:end="1375:25">)</operator> <operator pos:start="1375:27" pos:end="1375:27">&amp;</operator> <literal type="number" pos:start="1375:29" pos:end="1375:29">3</literal><operator pos:start="1375:30" pos:end="1375:30">)</operator> <operator pos:start="1375:32" pos:end="1375:33">==</operator> <literal type="number" pos:start="1375:35" pos:end="1375:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1377:13" pos:end="1377:21"><block_content pos:start="1377:13" pos:end="1377:21">

            <return pos:start="1377:13" pos:end="1377:21">return <expr pos:start="1377:20" pos:end="1377:20"><literal type="number" pos:start="1377:20" pos:end="1377:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1379:9" pos:end="1379:33"><expr pos:start="1379:9" pos:end="1379:32"><name pos:start="1379:9" pos:end="1379:11">wrd</name> <operator pos:start="1379:13" pos:end="1379:13">=</operator> <operator pos:start="1379:15" pos:end="1379:15">(</operator><name pos:start="1379:16" pos:end="1379:19">insn</name> <operator pos:start="1379:21" pos:end="1379:22">&gt;&gt;</operator> <literal type="number" pos:start="1379:24" pos:end="1379:25">12</literal><operator pos:start="1379:26" pos:end="1379:26">)</operator> <operator pos:start="1379:28" pos:end="1379:28">&amp;</operator> <literal type="number" pos:start="1379:30" pos:end="1379:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1381:9" pos:end="1381:33"><expr pos:start="1381:9" pos:end="1381:32"><name pos:start="1381:9" pos:end="1381:11">rd0</name> <operator pos:start="1381:13" pos:end="1381:13">=</operator> <operator pos:start="1381:15" pos:end="1381:15">(</operator><name pos:start="1381:16" pos:end="1381:19">insn</name> <operator pos:start="1381:21" pos:end="1381:22">&gt;&gt;</operator> <literal type="number" pos:start="1381:24" pos:end="1381:25">16</literal><operator pos:start="1381:26" pos:end="1381:26">)</operator> <operator pos:start="1381:28" pos:end="1381:28">&amp;</operator> <literal type="number" pos:start="1381:30" pos:end="1381:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1383:9" pos:end="1383:39"><expr pos:start="1383:9" pos:end="1383:38"><call pos:start="1383:9" pos:end="1383:38"><name pos:start="1383:9" pos:end="1383:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1383:34" pos:end="1383:38">(<argument pos:start="1383:35" pos:end="1383:37"><expr pos:start="1383:35" pos:end="1383:37"><name pos:start="1383:35" pos:end="1383:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1385:9" pos:end="1385:24"><expr pos:start="1385:9" pos:end="1385:23"><name pos:start="1385:9" pos:end="1385:11">tmp</name> <operator pos:start="1385:13" pos:end="1385:13">=</operator> <call pos:start="1385:15" pos:end="1385:23"><name pos:start="1385:15" pos:end="1385:21">new_tmp</name><argument_list pos:start="1385:22" pos:end="1385:23">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1387:9" pos:end="1393:9"><if pos:start="1387:9" pos:end="1393:9">if <condition pos:start="1387:12" pos:end="1387:46">(<expr pos:start="1387:13" pos:end="1387:45"><call pos:start="1387:13" pos:end="1387:45"><name pos:start="1387:13" pos:end="1387:28">gen_iwmmxt_shift</name><argument_list pos:start="1387:29" pos:end="1387:45">(<argument pos:start="1387:30" pos:end="1387:33"><expr pos:start="1387:30" pos:end="1387:33"><name pos:start="1387:30" pos:end="1387:33">insn</name></expr></argument>, <argument pos:start="1387:36" pos:end="1387:39"><expr pos:start="1387:36" pos:end="1387:39"><literal type="number" pos:start="1387:36" pos:end="1387:39">0xff</literal></expr></argument>, <argument pos:start="1387:42" pos:end="1387:44"><expr pos:start="1387:42" pos:end="1387:44"><name pos:start="1387:42" pos:end="1387:44">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1387:48" pos:end="1393:9">{<block_content pos:start="1389:13" pos:end="1391:21">

            <expr_stmt pos:start="1389:13" pos:end="1389:26"><expr pos:start="1389:13" pos:end="1389:25"><call pos:start="1389:13" pos:end="1389:25"><name pos:start="1389:13" pos:end="1389:20">dead_tmp</name><argument_list pos:start="1389:21" pos:end="1389:25">(<argument pos:start="1389:22" pos:end="1389:24"><expr pos:start="1389:22" pos:end="1389:24"><name pos:start="1389:22" pos:end="1389:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1391:13" pos:end="1391:21">return <expr pos:start="1391:20" pos:end="1391:20"><literal type="number" pos:start="1391:20" pos:end="1391:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="1395:9" pos:end="1415:9">switch <condition pos:start="1395:16" pos:end="1395:33">(<expr pos:start="1395:17" pos:end="1395:32"><operator pos:start="1395:17" pos:end="1395:17">(</operator><name pos:start="1395:18" pos:end="1395:21">insn</name> <operator pos:start="1395:23" pos:end="1395:24">&gt;&gt;</operator> <literal type="number" pos:start="1395:26" pos:end="1395:27">22</literal><operator pos:start="1395:28" pos:end="1395:28">)</operator> <operator pos:start="1395:30" pos:end="1395:30">&amp;</operator> <literal type="number" pos:start="1395:32" pos:end="1395:32">3</literal></expr>)</condition> <block pos:start="1395:35" pos:end="1415:9">{<block_content pos:start="1397:9" pos:end="1413:18">

        <case pos:start="1397:9" pos:end="1397:15">case <expr pos:start="1397:14" pos:end="1397:14"><literal type="number" pos:start="1397:14" pos:end="1397:14">1</literal></expr>:</case>

            <expr_stmt pos:start="1399:13" pos:end="1399:65"><expr pos:start="1399:13" pos:end="1399:64"><call pos:start="1399:13" pos:end="1399:64"><name pos:start="1399:13" pos:end="1399:34">gen_helper_iwmmxt_sllw</name><argument_list pos:start="1399:35" pos:end="1399:64">(<argument pos:start="1399:36" pos:end="1399:41"><expr pos:start="1399:36" pos:end="1399:41"><name pos:start="1399:36" pos:end="1399:41">cpu_M0</name></expr></argument>, <argument pos:start="1399:44" pos:end="1399:50"><expr pos:start="1399:44" pos:end="1399:50"><name pos:start="1399:44" pos:end="1399:50">cpu_env</name></expr></argument>, <argument pos:start="1399:53" pos:end="1399:58"><expr pos:start="1399:53" pos:end="1399:58"><name pos:start="1399:53" pos:end="1399:58">cpu_M0</name></expr></argument>, <argument pos:start="1399:61" pos:end="1399:63"><expr pos:start="1399:61" pos:end="1399:63"><name pos:start="1399:61" pos:end="1399:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1401:13" pos:end="1401:18">break;</break>

        <case pos:start="1403:9" pos:end="1403:15">case <expr pos:start="1403:14" pos:end="1403:14"><literal type="number" pos:start="1403:14" pos:end="1403:14">2</literal></expr>:</case>

            <expr_stmt pos:start="1405:13" pos:end="1405:65"><expr pos:start="1405:13" pos:end="1405:64"><call pos:start="1405:13" pos:end="1405:64"><name pos:start="1405:13" pos:end="1405:34">gen_helper_iwmmxt_slll</name><argument_list pos:start="1405:35" pos:end="1405:64">(<argument pos:start="1405:36" pos:end="1405:41"><expr pos:start="1405:36" pos:end="1405:41"><name pos:start="1405:36" pos:end="1405:41">cpu_M0</name></expr></argument>, <argument pos:start="1405:44" pos:end="1405:50"><expr pos:start="1405:44" pos:end="1405:50"><name pos:start="1405:44" pos:end="1405:50">cpu_env</name></expr></argument>, <argument pos:start="1405:53" pos:end="1405:58"><expr pos:start="1405:53" pos:end="1405:58"><name pos:start="1405:53" pos:end="1405:58">cpu_M0</name></expr></argument>, <argument pos:start="1405:61" pos:end="1405:63"><expr pos:start="1405:61" pos:end="1405:63"><name pos:start="1405:61" pos:end="1405:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1407:13" pos:end="1407:18">break;</break>

        <case pos:start="1409:9" pos:end="1409:15">case <expr pos:start="1409:14" pos:end="1409:14"><literal type="number" pos:start="1409:14" pos:end="1409:14">3</literal></expr>:</case>

            <expr_stmt pos:start="1411:13" pos:end="1411:65"><expr pos:start="1411:13" pos:end="1411:64"><call pos:start="1411:13" pos:end="1411:64"><name pos:start="1411:13" pos:end="1411:34">gen_helper_iwmmxt_sllq</name><argument_list pos:start="1411:35" pos:end="1411:64">(<argument pos:start="1411:36" pos:end="1411:41"><expr pos:start="1411:36" pos:end="1411:41"><name pos:start="1411:36" pos:end="1411:41">cpu_M0</name></expr></argument>, <argument pos:start="1411:44" pos:end="1411:50"><expr pos:start="1411:44" pos:end="1411:50"><name pos:start="1411:44" pos:end="1411:50">cpu_env</name></expr></argument>, <argument pos:start="1411:53" pos:end="1411:58"><expr pos:start="1411:53" pos:end="1411:58"><name pos:start="1411:53" pos:end="1411:58">cpu_M0</name></expr></argument>, <argument pos:start="1411:61" pos:end="1411:63"><expr pos:start="1411:61" pos:end="1411:63"><name pos:start="1411:61" pos:end="1411:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1413:13" pos:end="1413:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1417:9" pos:end="1417:22"><expr pos:start="1417:9" pos:end="1417:21"><call pos:start="1417:9" pos:end="1417:21"><name pos:start="1417:9" pos:end="1417:16">dead_tmp</name><argument_list pos:start="1417:17" pos:end="1417:21">(<argument pos:start="1417:18" pos:end="1417:20"><expr pos:start="1417:18" pos:end="1417:20"><name pos:start="1417:18" pos:end="1417:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1419:9" pos:end="1419:39"><expr pos:start="1419:9" pos:end="1419:38"><call pos:start="1419:9" pos:end="1419:38"><name pos:start="1419:9" pos:end="1419:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1419:34" pos:end="1419:38">(<argument pos:start="1419:35" pos:end="1419:37"><expr pos:start="1419:35" pos:end="1419:37"><name pos:start="1419:35" pos:end="1419:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1421:9" pos:end="1421:32"><expr pos:start="1421:9" pos:end="1421:31"><call pos:start="1421:9" pos:end="1421:31"><name pos:start="1421:9" pos:end="1421:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1421:30" pos:end="1421:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1423:9" pos:end="1423:32"><expr pos:start="1423:9" pos:end="1423:31"><call pos:start="1423:9" pos:end="1423:31"><name pos:start="1423:9" pos:end="1423:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1423:30" pos:end="1423:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1425:9" pos:end="1425:14">break;</break>

    <case pos:start="1427:5" pos:end="1427:15">case <expr pos:start="1427:10" pos:end="1427:14"><literal type="number" pos:start="1427:10" pos:end="1427:14">0x304</literal></expr>:</case> <case pos:start="1427:17" pos:end="1427:27">case <expr pos:start="1427:22" pos:end="1427:26"><literal type="number" pos:start="1427:22" pos:end="1427:26">0x704</literal></expr>:</case> <case pos:start="1427:29" pos:end="1427:39">case <expr pos:start="1427:34" pos:end="1427:38"><literal type="number" pos:start="1427:34" pos:end="1427:38">0xb04</literal></expr>:</case> <case pos:start="1427:41" pos:end="1427:51">case <expr pos:start="1427:46" pos:end="1427:50"><literal type="number" pos:start="1427:46" pos:end="1427:50">0xf04</literal></expr>:</case>	<comment type="block" pos:start="1427:57" pos:end="1427:66">/* WROR */</comment>

    <case pos:start="1429:5" pos:end="1429:15">case <expr pos:start="1429:10" pos:end="1429:14"><literal type="number" pos:start="1429:10" pos:end="1429:14">0x314</literal></expr>:</case> <case pos:start="1429:17" pos:end="1429:27">case <expr pos:start="1429:22" pos:end="1429:26"><literal type="number" pos:start="1429:22" pos:end="1429:26">0x714</literal></expr>:</case> <case pos:start="1429:29" pos:end="1429:39">case <expr pos:start="1429:34" pos:end="1429:38"><literal type="number" pos:start="1429:34" pos:end="1429:38">0xb14</literal></expr>:</case> <case pos:start="1429:41" pos:end="1429:51">case <expr pos:start="1429:46" pos:end="1429:50"><literal type="number" pos:start="1429:46" pos:end="1429:50">0xf14</literal></expr>:</case>

        <if_stmt pos:start="1431:9" pos:end="1433:21"><if pos:start="1431:9" pos:end="1433:21">if <condition pos:start="1431:12" pos:end="1431:36">(<expr pos:start="1431:13" pos:end="1431:35"><operator pos:start="1431:13" pos:end="1431:13">(</operator><operator pos:start="1431:14" pos:end="1431:14">(</operator><name pos:start="1431:15" pos:end="1431:18">insn</name> <operator pos:start="1431:20" pos:end="1431:21">&gt;&gt;</operator> <literal type="number" pos:start="1431:23" pos:end="1431:24">22</literal><operator pos:start="1431:25" pos:end="1431:25">)</operator> <operator pos:start="1431:27" pos:end="1431:27">&amp;</operator> <literal type="number" pos:start="1431:29" pos:end="1431:29">3</literal><operator pos:start="1431:30" pos:end="1431:30">)</operator> <operator pos:start="1431:32" pos:end="1431:33">==</operator> <literal type="number" pos:start="1431:35" pos:end="1431:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1433:13" pos:end="1433:21"><block_content pos:start="1433:13" pos:end="1433:21">

            <return pos:start="1433:13" pos:end="1433:21">return <expr pos:start="1433:20" pos:end="1433:20"><literal type="number" pos:start="1433:20" pos:end="1433:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1435:9" pos:end="1435:33"><expr pos:start="1435:9" pos:end="1435:32"><name pos:start="1435:9" pos:end="1435:11">wrd</name> <operator pos:start="1435:13" pos:end="1435:13">=</operator> <operator pos:start="1435:15" pos:end="1435:15">(</operator><name pos:start="1435:16" pos:end="1435:19">insn</name> <operator pos:start="1435:21" pos:end="1435:22">&gt;&gt;</operator> <literal type="number" pos:start="1435:24" pos:end="1435:25">12</literal><operator pos:start="1435:26" pos:end="1435:26">)</operator> <operator pos:start="1435:28" pos:end="1435:28">&amp;</operator> <literal type="number" pos:start="1435:30" pos:end="1435:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1437:9" pos:end="1437:33"><expr pos:start="1437:9" pos:end="1437:32"><name pos:start="1437:9" pos:end="1437:11">rd0</name> <operator pos:start="1437:13" pos:end="1437:13">=</operator> <operator pos:start="1437:15" pos:end="1437:15">(</operator><name pos:start="1437:16" pos:end="1437:19">insn</name> <operator pos:start="1437:21" pos:end="1437:22">&gt;&gt;</operator> <literal type="number" pos:start="1437:24" pos:end="1437:25">16</literal><operator pos:start="1437:26" pos:end="1437:26">)</operator> <operator pos:start="1437:28" pos:end="1437:28">&amp;</operator> <literal type="number" pos:start="1437:30" pos:end="1437:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1439:9" pos:end="1439:39"><expr pos:start="1439:9" pos:end="1439:38"><call pos:start="1439:9" pos:end="1439:38"><name pos:start="1439:9" pos:end="1439:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1439:34" pos:end="1439:38">(<argument pos:start="1439:35" pos:end="1439:37"><expr pos:start="1439:35" pos:end="1439:37"><name pos:start="1439:35" pos:end="1439:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1441:9" pos:end="1441:24"><expr pos:start="1441:9" pos:end="1441:23"><name pos:start="1441:9" pos:end="1441:11">tmp</name> <operator pos:start="1441:13" pos:end="1441:13">=</operator> <call pos:start="1441:15" pos:end="1441:23"><name pos:start="1441:15" pos:end="1441:21">new_tmp</name><argument_list pos:start="1441:22" pos:end="1441:23">()</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1443:9" pos:end="1487:9">switch <condition pos:start="1443:16" pos:end="1443:33">(<expr pos:start="1443:17" pos:end="1443:32"><operator pos:start="1443:17" pos:end="1443:17">(</operator><name pos:start="1443:18" pos:end="1443:21">insn</name> <operator pos:start="1443:23" pos:end="1443:24">&gt;&gt;</operator> <literal type="number" pos:start="1443:26" pos:end="1443:27">22</literal><operator pos:start="1443:28" pos:end="1443:28">)</operator> <operator pos:start="1443:30" pos:end="1443:30">&amp;</operator> <literal type="number" pos:start="1443:32" pos:end="1443:32">3</literal></expr>)</condition> <block pos:start="1443:35" pos:end="1487:9">{<block_content pos:start="1445:9" pos:end="1485:18">

        <case pos:start="1445:9" pos:end="1445:15">case <expr pos:start="1445:14" pos:end="1445:14"><literal type="number" pos:start="1445:14" pos:end="1445:14">1</literal></expr>:</case>

            <if_stmt pos:start="1447:13" pos:end="1453:13"><if pos:start="1447:13" pos:end="1453:13">if <condition pos:start="1447:16" pos:end="1447:49">(<expr pos:start="1447:17" pos:end="1447:48"><call pos:start="1447:17" pos:end="1447:48"><name pos:start="1447:17" pos:end="1447:32">gen_iwmmxt_shift</name><argument_list pos:start="1447:33" pos:end="1447:48">(<argument pos:start="1447:34" pos:end="1447:37"><expr pos:start="1447:34" pos:end="1447:37"><name pos:start="1447:34" pos:end="1447:37">insn</name></expr></argument>, <argument pos:start="1447:40" pos:end="1447:42"><expr pos:start="1447:40" pos:end="1447:42"><literal type="number" pos:start="1447:40" pos:end="1447:42">0xf</literal></expr></argument>, <argument pos:start="1447:45" pos:end="1447:47"><expr pos:start="1447:45" pos:end="1447:47"><name pos:start="1447:45" pos:end="1447:47">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1447:51" pos:end="1453:13">{<block_content pos:start="1449:17" pos:end="1451:25">

                <expr_stmt pos:start="1449:17" pos:end="1449:30"><expr pos:start="1449:17" pos:end="1449:29"><call pos:start="1449:17" pos:end="1449:29"><name pos:start="1449:17" pos:end="1449:24">dead_tmp</name><argument_list pos:start="1449:25" pos:end="1449:29">(<argument pos:start="1449:26" pos:end="1449:28"><expr pos:start="1449:26" pos:end="1449:28"><name pos:start="1449:26" pos:end="1449:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1451:17" pos:end="1451:25">return <expr pos:start="1451:24" pos:end="1451:24"><literal type="number" pos:start="1451:24" pos:end="1451:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1455:13" pos:end="1455:65"><expr pos:start="1455:13" pos:end="1455:64"><call pos:start="1455:13" pos:end="1455:64"><name pos:start="1455:13" pos:end="1455:34">gen_helper_iwmmxt_rorw</name><argument_list pos:start="1455:35" pos:end="1455:64">(<argument pos:start="1455:36" pos:end="1455:41"><expr pos:start="1455:36" pos:end="1455:41"><name pos:start="1455:36" pos:end="1455:41">cpu_M0</name></expr></argument>, <argument pos:start="1455:44" pos:end="1455:50"><expr pos:start="1455:44" pos:end="1455:50"><name pos:start="1455:44" pos:end="1455:50">cpu_env</name></expr></argument>, <argument pos:start="1455:53" pos:end="1455:58"><expr pos:start="1455:53" pos:end="1455:58"><name pos:start="1455:53" pos:end="1455:58">cpu_M0</name></expr></argument>, <argument pos:start="1455:61" pos:end="1455:63"><expr pos:start="1455:61" pos:end="1455:63"><name pos:start="1455:61" pos:end="1455:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1457:13" pos:end="1457:18">break;</break>

        <case pos:start="1459:9" pos:end="1459:15">case <expr pos:start="1459:14" pos:end="1459:14"><literal type="number" pos:start="1459:14" pos:end="1459:14">2</literal></expr>:</case>

            <if_stmt pos:start="1461:13" pos:end="1467:13"><if pos:start="1461:13" pos:end="1467:13">if <condition pos:start="1461:16" pos:end="1461:50">(<expr pos:start="1461:17" pos:end="1461:49"><call pos:start="1461:17" pos:end="1461:49"><name pos:start="1461:17" pos:end="1461:32">gen_iwmmxt_shift</name><argument_list pos:start="1461:33" pos:end="1461:49">(<argument pos:start="1461:34" pos:end="1461:37"><expr pos:start="1461:34" pos:end="1461:37"><name pos:start="1461:34" pos:end="1461:37">insn</name></expr></argument>, <argument pos:start="1461:40" pos:end="1461:43"><expr pos:start="1461:40" pos:end="1461:43"><literal type="number" pos:start="1461:40" pos:end="1461:43">0x1f</literal></expr></argument>, <argument pos:start="1461:46" pos:end="1461:48"><expr pos:start="1461:46" pos:end="1461:48"><name pos:start="1461:46" pos:end="1461:48">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1461:52" pos:end="1467:13">{<block_content pos:start="1463:17" pos:end="1465:25">

                <expr_stmt pos:start="1463:17" pos:end="1463:30"><expr pos:start="1463:17" pos:end="1463:29"><call pos:start="1463:17" pos:end="1463:29"><name pos:start="1463:17" pos:end="1463:24">dead_tmp</name><argument_list pos:start="1463:25" pos:end="1463:29">(<argument pos:start="1463:26" pos:end="1463:28"><expr pos:start="1463:26" pos:end="1463:28"><name pos:start="1463:26" pos:end="1463:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1465:17" pos:end="1465:25">return <expr pos:start="1465:24" pos:end="1465:24"><literal type="number" pos:start="1465:24" pos:end="1465:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1469:13" pos:end="1469:65"><expr pos:start="1469:13" pos:end="1469:64"><call pos:start="1469:13" pos:end="1469:64"><name pos:start="1469:13" pos:end="1469:34">gen_helper_iwmmxt_rorl</name><argument_list pos:start="1469:35" pos:end="1469:64">(<argument pos:start="1469:36" pos:end="1469:41"><expr pos:start="1469:36" pos:end="1469:41"><name pos:start="1469:36" pos:end="1469:41">cpu_M0</name></expr></argument>, <argument pos:start="1469:44" pos:end="1469:50"><expr pos:start="1469:44" pos:end="1469:50"><name pos:start="1469:44" pos:end="1469:50">cpu_env</name></expr></argument>, <argument pos:start="1469:53" pos:end="1469:58"><expr pos:start="1469:53" pos:end="1469:58"><name pos:start="1469:53" pos:end="1469:58">cpu_M0</name></expr></argument>, <argument pos:start="1469:61" pos:end="1469:63"><expr pos:start="1469:61" pos:end="1469:63"><name pos:start="1469:61" pos:end="1469:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1471:13" pos:end="1471:18">break;</break>

        <case pos:start="1473:9" pos:end="1473:15">case <expr pos:start="1473:14" pos:end="1473:14"><literal type="number" pos:start="1473:14" pos:end="1473:14">3</literal></expr>:</case>

            <if_stmt pos:start="1475:13" pos:end="1481:13"><if pos:start="1475:13" pos:end="1481:13">if <condition pos:start="1475:16" pos:end="1475:50">(<expr pos:start="1475:17" pos:end="1475:49"><call pos:start="1475:17" pos:end="1475:49"><name pos:start="1475:17" pos:end="1475:32">gen_iwmmxt_shift</name><argument_list pos:start="1475:33" pos:end="1475:49">(<argument pos:start="1475:34" pos:end="1475:37"><expr pos:start="1475:34" pos:end="1475:37"><name pos:start="1475:34" pos:end="1475:37">insn</name></expr></argument>, <argument pos:start="1475:40" pos:end="1475:43"><expr pos:start="1475:40" pos:end="1475:43"><literal type="number" pos:start="1475:40" pos:end="1475:43">0x3f</literal></expr></argument>, <argument pos:start="1475:46" pos:end="1475:48"><expr pos:start="1475:46" pos:end="1475:48"><name pos:start="1475:46" pos:end="1475:48">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1475:52" pos:end="1481:13">{<block_content pos:start="1477:17" pos:end="1479:25">

                <expr_stmt pos:start="1477:17" pos:end="1477:30"><expr pos:start="1477:17" pos:end="1477:29"><call pos:start="1477:17" pos:end="1477:29"><name pos:start="1477:17" pos:end="1477:24">dead_tmp</name><argument_list pos:start="1477:25" pos:end="1477:29">(<argument pos:start="1477:26" pos:end="1477:28"><expr pos:start="1477:26" pos:end="1477:28"><name pos:start="1477:26" pos:end="1477:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1479:17" pos:end="1479:25">return <expr pos:start="1479:24" pos:end="1479:24"><literal type="number" pos:start="1479:24" pos:end="1479:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1483:13" pos:end="1483:65"><expr pos:start="1483:13" pos:end="1483:64"><call pos:start="1483:13" pos:end="1483:64"><name pos:start="1483:13" pos:end="1483:34">gen_helper_iwmmxt_rorq</name><argument_list pos:start="1483:35" pos:end="1483:64">(<argument pos:start="1483:36" pos:end="1483:41"><expr pos:start="1483:36" pos:end="1483:41"><name pos:start="1483:36" pos:end="1483:41">cpu_M0</name></expr></argument>, <argument pos:start="1483:44" pos:end="1483:50"><expr pos:start="1483:44" pos:end="1483:50"><name pos:start="1483:44" pos:end="1483:50">cpu_env</name></expr></argument>, <argument pos:start="1483:53" pos:end="1483:58"><expr pos:start="1483:53" pos:end="1483:58"><name pos:start="1483:53" pos:end="1483:58">cpu_M0</name></expr></argument>, <argument pos:start="1483:61" pos:end="1483:63"><expr pos:start="1483:61" pos:end="1483:63"><name pos:start="1483:61" pos:end="1483:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1485:13" pos:end="1485:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1489:9" pos:end="1489:22"><expr pos:start="1489:9" pos:end="1489:21"><call pos:start="1489:9" pos:end="1489:21"><name pos:start="1489:9" pos:end="1489:16">dead_tmp</name><argument_list pos:start="1489:17" pos:end="1489:21">(<argument pos:start="1489:18" pos:end="1489:20"><expr pos:start="1489:18" pos:end="1489:20"><name pos:start="1489:18" pos:end="1489:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1491:9" pos:end="1491:39"><expr pos:start="1491:9" pos:end="1491:38"><call pos:start="1491:9" pos:end="1491:38"><name pos:start="1491:9" pos:end="1491:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1491:34" pos:end="1491:38">(<argument pos:start="1491:35" pos:end="1491:37"><expr pos:start="1491:35" pos:end="1491:37"><name pos:start="1491:35" pos:end="1491:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1493:9" pos:end="1493:32"><expr pos:start="1493:9" pos:end="1493:31"><call pos:start="1493:9" pos:end="1493:31"><name pos:start="1493:9" pos:end="1493:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1493:30" pos:end="1493:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1495:9" pos:end="1495:32"><expr pos:start="1495:9" pos:end="1495:31"><call pos:start="1495:9" pos:end="1495:31"><name pos:start="1495:9" pos:end="1495:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1495:30" pos:end="1495:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1497:9" pos:end="1497:14">break;</break>

    <case pos:start="1499:5" pos:end="1499:15">case <expr pos:start="1499:10" pos:end="1499:14"><literal type="number" pos:start="1499:10" pos:end="1499:14">0x116</literal></expr>:</case> <case pos:start="1499:17" pos:end="1499:27">case <expr pos:start="1499:22" pos:end="1499:26"><literal type="number" pos:start="1499:22" pos:end="1499:26">0x316</literal></expr>:</case> <case pos:start="1499:29" pos:end="1499:39">case <expr pos:start="1499:34" pos:end="1499:38"><literal type="number" pos:start="1499:34" pos:end="1499:38">0x516</literal></expr>:</case> <case pos:start="1499:41" pos:end="1499:51">case <expr pos:start="1499:46" pos:end="1499:50"><literal type="number" pos:start="1499:46" pos:end="1499:50">0x716</literal></expr>:</case>	<comment type="block" pos:start="1499:57" pos:end="1499:66">/* WMIN */</comment>

    <case pos:start="1501:5" pos:end="1501:15">case <expr pos:start="1501:10" pos:end="1501:14"><literal type="number" pos:start="1501:10" pos:end="1501:14">0x916</literal></expr>:</case> <case pos:start="1501:17" pos:end="1501:27">case <expr pos:start="1501:22" pos:end="1501:26"><literal type="number" pos:start="1501:22" pos:end="1501:26">0xb16</literal></expr>:</case> <case pos:start="1501:29" pos:end="1501:39">case <expr pos:start="1501:34" pos:end="1501:38"><literal type="number" pos:start="1501:34" pos:end="1501:38">0xd16</literal></expr>:</case> <case pos:start="1501:41" pos:end="1501:51">case <expr pos:start="1501:46" pos:end="1501:50"><literal type="number" pos:start="1501:46" pos:end="1501:50">0xf16</literal></expr>:</case>

        <expr_stmt pos:start="1503:9" pos:end="1503:33"><expr pos:start="1503:9" pos:end="1503:32"><name pos:start="1503:9" pos:end="1503:11">wrd</name> <operator pos:start="1503:13" pos:end="1503:13">=</operator> <operator pos:start="1503:15" pos:end="1503:15">(</operator><name pos:start="1503:16" pos:end="1503:19">insn</name> <operator pos:start="1503:21" pos:end="1503:22">&gt;&gt;</operator> <literal type="number" pos:start="1503:24" pos:end="1503:25">12</literal><operator pos:start="1503:26" pos:end="1503:26">)</operator> <operator pos:start="1503:28" pos:end="1503:28">&amp;</operator> <literal type="number" pos:start="1503:30" pos:end="1503:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1505:9" pos:end="1505:33"><expr pos:start="1505:9" pos:end="1505:32"><name pos:start="1505:9" pos:end="1505:11">rd0</name> <operator pos:start="1505:13" pos:end="1505:13">=</operator> <operator pos:start="1505:15" pos:end="1505:15">(</operator><name pos:start="1505:16" pos:end="1505:19">insn</name> <operator pos:start="1505:21" pos:end="1505:22">&gt;&gt;</operator> <literal type="number" pos:start="1505:24" pos:end="1505:25">16</literal><operator pos:start="1505:26" pos:end="1505:26">)</operator> <operator pos:start="1505:28" pos:end="1505:28">&amp;</operator> <literal type="number" pos:start="1505:30" pos:end="1505:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1507:9" pos:end="1507:32"><expr pos:start="1507:9" pos:end="1507:31"><name pos:start="1507:9" pos:end="1507:11">rd1</name> <operator pos:start="1507:13" pos:end="1507:13">=</operator> <operator pos:start="1507:15" pos:end="1507:15">(</operator><name pos:start="1507:16" pos:end="1507:19">insn</name> <operator pos:start="1507:21" pos:end="1507:22">&gt;&gt;</operator> <literal type="number" pos:start="1507:24" pos:end="1507:24">0</literal><operator pos:start="1507:25" pos:end="1507:25">)</operator> <operator pos:start="1507:27" pos:end="1507:27">&amp;</operator> <literal type="number" pos:start="1507:29" pos:end="1507:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1509:9" pos:end="1509:39"><expr pos:start="1509:9" pos:end="1509:38"><call pos:start="1509:9" pos:end="1509:38"><name pos:start="1509:9" pos:end="1509:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1509:34" pos:end="1509:38">(<argument pos:start="1509:35" pos:end="1509:37"><expr pos:start="1509:35" pos:end="1509:37"><name pos:start="1509:35" pos:end="1509:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1511:9" pos:end="1553:9">switch <condition pos:start="1511:16" pos:end="1511:33">(<expr pos:start="1511:17" pos:end="1511:32"><operator pos:start="1511:17" pos:end="1511:17">(</operator><name pos:start="1511:18" pos:end="1511:21">insn</name> <operator pos:start="1511:23" pos:end="1511:24">&gt;&gt;</operator> <literal type="number" pos:start="1511:26" pos:end="1511:27">22</literal><operator pos:start="1511:28" pos:end="1511:28">)</operator> <operator pos:start="1511:30" pos:end="1511:30">&amp;</operator> <literal type="number" pos:start="1511:32" pos:end="1511:32">3</literal></expr>)</condition> <block pos:start="1511:35" pos:end="1553:9">{<block_content pos:start="1513:9" pos:end="1551:21">

        <case pos:start="1513:9" pos:end="1513:15">case <expr pos:start="1513:14" pos:end="1513:14"><literal type="number" pos:start="1513:14" pos:end="1513:14">0</literal></expr>:</case>

            <if_stmt pos:start="1515:13" pos:end="1521:48"><if pos:start="1515:13" pos:end="1517:48">if <condition pos:start="1515:16" pos:end="1515:33">(<expr pos:start="1515:17" pos:end="1515:32"><name pos:start="1515:17" pos:end="1515:20">insn</name> <operator pos:start="1515:22" pos:end="1515:22">&amp;</operator> <operator pos:start="1515:24" pos:end="1515:24">(</operator><literal type="number" pos:start="1515:25" pos:end="1515:25">1</literal> <operator pos:start="1515:27" pos:end="1515:28">&lt;&lt;</operator> <literal type="number" pos:start="1515:30" pos:end="1515:31">21</literal><operator pos:start="1515:32" pos:end="1515:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1517:17" pos:end="1517:48"><block_content pos:start="1517:17" pos:end="1517:48">

                <expr_stmt pos:start="1517:17" pos:end="1517:48"><expr pos:start="1517:17" pos:end="1517:47"><call pos:start="1517:17" pos:end="1517:47"><name pos:start="1517:17" pos:end="1517:42">gen_op_iwmmxt_minsb_M0_wRn</name><argument_list pos:start="1517:43" pos:end="1517:47">(<argument pos:start="1517:44" pos:end="1517:46"><expr pos:start="1517:44" pos:end="1517:46"><name pos:start="1517:44" pos:end="1517:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1519:13" pos:end="1521:48">else<block type="pseudo" pos:start="1521:17" pos:end="1521:48"><block_content pos:start="1521:17" pos:end="1521:48">

                <expr_stmt pos:start="1521:17" pos:end="1521:48"><expr pos:start="1521:17" pos:end="1521:47"><call pos:start="1521:17" pos:end="1521:47"><name pos:start="1521:17" pos:end="1521:42">gen_op_iwmmxt_minub_M0_wRn</name><argument_list pos:start="1521:43" pos:end="1521:47">(<argument pos:start="1521:44" pos:end="1521:46"><expr pos:start="1521:44" pos:end="1521:46"><name pos:start="1521:44" pos:end="1521:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1523:13" pos:end="1523:18">break;</break>

        <case pos:start="1525:9" pos:end="1525:15">case <expr pos:start="1525:14" pos:end="1525:14"><literal type="number" pos:start="1525:14" pos:end="1525:14">1</literal></expr>:</case>

            <if_stmt pos:start="1527:13" pos:end="1533:48"><if pos:start="1527:13" pos:end="1529:48">if <condition pos:start="1527:16" pos:end="1527:33">(<expr pos:start="1527:17" pos:end="1527:32"><name pos:start="1527:17" pos:end="1527:20">insn</name> <operator pos:start="1527:22" pos:end="1527:22">&amp;</operator> <operator pos:start="1527:24" pos:end="1527:24">(</operator><literal type="number" pos:start="1527:25" pos:end="1527:25">1</literal> <operator pos:start="1527:27" pos:end="1527:28">&lt;&lt;</operator> <literal type="number" pos:start="1527:30" pos:end="1527:31">21</literal><operator pos:start="1527:32" pos:end="1527:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1529:17" pos:end="1529:48"><block_content pos:start="1529:17" pos:end="1529:48">

                <expr_stmt pos:start="1529:17" pos:end="1529:48"><expr pos:start="1529:17" pos:end="1529:47"><call pos:start="1529:17" pos:end="1529:47"><name pos:start="1529:17" pos:end="1529:42">gen_op_iwmmxt_minsw_M0_wRn</name><argument_list pos:start="1529:43" pos:end="1529:47">(<argument pos:start="1529:44" pos:end="1529:46"><expr pos:start="1529:44" pos:end="1529:46"><name pos:start="1529:44" pos:end="1529:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1531:13" pos:end="1533:48">else<block type="pseudo" pos:start="1533:17" pos:end="1533:48"><block_content pos:start="1533:17" pos:end="1533:48">

                <expr_stmt pos:start="1533:17" pos:end="1533:48"><expr pos:start="1533:17" pos:end="1533:47"><call pos:start="1533:17" pos:end="1533:47"><name pos:start="1533:17" pos:end="1533:42">gen_op_iwmmxt_minuw_M0_wRn</name><argument_list pos:start="1533:43" pos:end="1533:47">(<argument pos:start="1533:44" pos:end="1533:46"><expr pos:start="1533:44" pos:end="1533:46"><name pos:start="1533:44" pos:end="1533:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1535:13" pos:end="1535:18">break;</break>

        <case pos:start="1537:9" pos:end="1537:15">case <expr pos:start="1537:14" pos:end="1537:14"><literal type="number" pos:start="1537:14" pos:end="1537:14">2</literal></expr>:</case>

            <if_stmt pos:start="1539:13" pos:end="1545:48"><if pos:start="1539:13" pos:end="1541:48">if <condition pos:start="1539:16" pos:end="1539:33">(<expr pos:start="1539:17" pos:end="1539:32"><name pos:start="1539:17" pos:end="1539:20">insn</name> <operator pos:start="1539:22" pos:end="1539:22">&amp;</operator> <operator pos:start="1539:24" pos:end="1539:24">(</operator><literal type="number" pos:start="1539:25" pos:end="1539:25">1</literal> <operator pos:start="1539:27" pos:end="1539:28">&lt;&lt;</operator> <literal type="number" pos:start="1539:30" pos:end="1539:31">21</literal><operator pos:start="1539:32" pos:end="1539:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1541:17" pos:end="1541:48"><block_content pos:start="1541:17" pos:end="1541:48">

                <expr_stmt pos:start="1541:17" pos:end="1541:48"><expr pos:start="1541:17" pos:end="1541:47"><call pos:start="1541:17" pos:end="1541:47"><name pos:start="1541:17" pos:end="1541:42">gen_op_iwmmxt_minsl_M0_wRn</name><argument_list pos:start="1541:43" pos:end="1541:47">(<argument pos:start="1541:44" pos:end="1541:46"><expr pos:start="1541:44" pos:end="1541:46"><name pos:start="1541:44" pos:end="1541:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1543:13" pos:end="1545:48">else<block type="pseudo" pos:start="1545:17" pos:end="1545:48"><block_content pos:start="1545:17" pos:end="1545:48">

                <expr_stmt pos:start="1545:17" pos:end="1545:48"><expr pos:start="1545:17" pos:end="1545:47"><call pos:start="1545:17" pos:end="1545:47"><name pos:start="1545:17" pos:end="1545:42">gen_op_iwmmxt_minul_M0_wRn</name><argument_list pos:start="1545:43" pos:end="1545:47">(<argument pos:start="1545:44" pos:end="1545:46"><expr pos:start="1545:44" pos:end="1545:46"><name pos:start="1545:44" pos:end="1545:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1547:13" pos:end="1547:18">break;</break>

        <case pos:start="1549:9" pos:end="1549:15">case <expr pos:start="1549:14" pos:end="1549:14"><literal type="number" pos:start="1549:14" pos:end="1549:14">3</literal></expr>:</case>

            <return pos:start="1551:13" pos:end="1551:21">return <expr pos:start="1551:20" pos:end="1551:20"><literal type="number" pos:start="1551:20" pos:end="1551:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1555:9" pos:end="1555:39"><expr pos:start="1555:9" pos:end="1555:38"><call pos:start="1555:9" pos:end="1555:38"><name pos:start="1555:9" pos:end="1555:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1555:34" pos:end="1555:38">(<argument pos:start="1555:35" pos:end="1555:37"><expr pos:start="1555:35" pos:end="1555:37"><name pos:start="1555:35" pos:end="1555:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1557:9" pos:end="1557:32"><expr pos:start="1557:9" pos:end="1557:31"><call pos:start="1557:9" pos:end="1557:31"><name pos:start="1557:9" pos:end="1557:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1557:30" pos:end="1557:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1559:9" pos:end="1559:14">break;</break>

    <case pos:start="1561:5" pos:end="1561:15">case <expr pos:start="1561:10" pos:end="1561:14"><literal type="number" pos:start="1561:10" pos:end="1561:14">0x016</literal></expr>:</case> <case pos:start="1561:17" pos:end="1561:27">case <expr pos:start="1561:22" pos:end="1561:26"><literal type="number" pos:start="1561:22" pos:end="1561:26">0x216</literal></expr>:</case> <case pos:start="1561:29" pos:end="1561:39">case <expr pos:start="1561:34" pos:end="1561:38"><literal type="number" pos:start="1561:34" pos:end="1561:38">0x416</literal></expr>:</case> <case pos:start="1561:41" pos:end="1561:51">case <expr pos:start="1561:46" pos:end="1561:50"><literal type="number" pos:start="1561:46" pos:end="1561:50">0x616</literal></expr>:</case>	<comment type="block" pos:start="1561:57" pos:end="1561:66">/* WMAX */</comment>

    <case pos:start="1563:5" pos:end="1563:15">case <expr pos:start="1563:10" pos:end="1563:14"><literal type="number" pos:start="1563:10" pos:end="1563:14">0x816</literal></expr>:</case> <case pos:start="1563:17" pos:end="1563:27">case <expr pos:start="1563:22" pos:end="1563:26"><literal type="number" pos:start="1563:22" pos:end="1563:26">0xa16</literal></expr>:</case> <case pos:start="1563:29" pos:end="1563:39">case <expr pos:start="1563:34" pos:end="1563:38"><literal type="number" pos:start="1563:34" pos:end="1563:38">0xc16</literal></expr>:</case> <case pos:start="1563:41" pos:end="1563:51">case <expr pos:start="1563:46" pos:end="1563:50"><literal type="number" pos:start="1563:46" pos:end="1563:50">0xe16</literal></expr>:</case>

        <expr_stmt pos:start="1565:9" pos:end="1565:33"><expr pos:start="1565:9" pos:end="1565:32"><name pos:start="1565:9" pos:end="1565:11">wrd</name> <operator pos:start="1565:13" pos:end="1565:13">=</operator> <operator pos:start="1565:15" pos:end="1565:15">(</operator><name pos:start="1565:16" pos:end="1565:19">insn</name> <operator pos:start="1565:21" pos:end="1565:22">&gt;&gt;</operator> <literal type="number" pos:start="1565:24" pos:end="1565:25">12</literal><operator pos:start="1565:26" pos:end="1565:26">)</operator> <operator pos:start="1565:28" pos:end="1565:28">&amp;</operator> <literal type="number" pos:start="1565:30" pos:end="1565:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1567:9" pos:end="1567:33"><expr pos:start="1567:9" pos:end="1567:32"><name pos:start="1567:9" pos:end="1567:11">rd0</name> <operator pos:start="1567:13" pos:end="1567:13">=</operator> <operator pos:start="1567:15" pos:end="1567:15">(</operator><name pos:start="1567:16" pos:end="1567:19">insn</name> <operator pos:start="1567:21" pos:end="1567:22">&gt;&gt;</operator> <literal type="number" pos:start="1567:24" pos:end="1567:25">16</literal><operator pos:start="1567:26" pos:end="1567:26">)</operator> <operator pos:start="1567:28" pos:end="1567:28">&amp;</operator> <literal type="number" pos:start="1567:30" pos:end="1567:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1569:9" pos:end="1569:32"><expr pos:start="1569:9" pos:end="1569:31"><name pos:start="1569:9" pos:end="1569:11">rd1</name> <operator pos:start="1569:13" pos:end="1569:13">=</operator> <operator pos:start="1569:15" pos:end="1569:15">(</operator><name pos:start="1569:16" pos:end="1569:19">insn</name> <operator pos:start="1569:21" pos:end="1569:22">&gt;&gt;</operator> <literal type="number" pos:start="1569:24" pos:end="1569:24">0</literal><operator pos:start="1569:25" pos:end="1569:25">)</operator> <operator pos:start="1569:27" pos:end="1569:27">&amp;</operator> <literal type="number" pos:start="1569:29" pos:end="1569:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1571:9" pos:end="1571:39"><expr pos:start="1571:9" pos:end="1571:38"><call pos:start="1571:9" pos:end="1571:38"><name pos:start="1571:9" pos:end="1571:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1571:34" pos:end="1571:38">(<argument pos:start="1571:35" pos:end="1571:37"><expr pos:start="1571:35" pos:end="1571:37"><name pos:start="1571:35" pos:end="1571:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1573:9" pos:end="1615:9">switch <condition pos:start="1573:16" pos:end="1573:33">(<expr pos:start="1573:17" pos:end="1573:32"><operator pos:start="1573:17" pos:end="1573:17">(</operator><name pos:start="1573:18" pos:end="1573:21">insn</name> <operator pos:start="1573:23" pos:end="1573:24">&gt;&gt;</operator> <literal type="number" pos:start="1573:26" pos:end="1573:27">22</literal><operator pos:start="1573:28" pos:end="1573:28">)</operator> <operator pos:start="1573:30" pos:end="1573:30">&amp;</operator> <literal type="number" pos:start="1573:32" pos:end="1573:32">3</literal></expr>)</condition> <block pos:start="1573:35" pos:end="1615:9">{<block_content pos:start="1575:9" pos:end="1613:21">

        <case pos:start="1575:9" pos:end="1575:15">case <expr pos:start="1575:14" pos:end="1575:14"><literal type="number" pos:start="1575:14" pos:end="1575:14">0</literal></expr>:</case>

            <if_stmt pos:start="1577:13" pos:end="1583:48"><if pos:start="1577:13" pos:end="1579:48">if <condition pos:start="1577:16" pos:end="1577:33">(<expr pos:start="1577:17" pos:end="1577:32"><name pos:start="1577:17" pos:end="1577:20">insn</name> <operator pos:start="1577:22" pos:end="1577:22">&amp;</operator> <operator pos:start="1577:24" pos:end="1577:24">(</operator><literal type="number" pos:start="1577:25" pos:end="1577:25">1</literal> <operator pos:start="1577:27" pos:end="1577:28">&lt;&lt;</operator> <literal type="number" pos:start="1577:30" pos:end="1577:31">21</literal><operator pos:start="1577:32" pos:end="1577:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1579:17" pos:end="1579:48"><block_content pos:start="1579:17" pos:end="1579:48">

                <expr_stmt pos:start="1579:17" pos:end="1579:48"><expr pos:start="1579:17" pos:end="1579:47"><call pos:start="1579:17" pos:end="1579:47"><name pos:start="1579:17" pos:end="1579:42">gen_op_iwmmxt_maxsb_M0_wRn</name><argument_list pos:start="1579:43" pos:end="1579:47">(<argument pos:start="1579:44" pos:end="1579:46"><expr pos:start="1579:44" pos:end="1579:46"><name pos:start="1579:44" pos:end="1579:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1581:13" pos:end="1583:48">else<block type="pseudo" pos:start="1583:17" pos:end="1583:48"><block_content pos:start="1583:17" pos:end="1583:48">

                <expr_stmt pos:start="1583:17" pos:end="1583:48"><expr pos:start="1583:17" pos:end="1583:47"><call pos:start="1583:17" pos:end="1583:47"><name pos:start="1583:17" pos:end="1583:42">gen_op_iwmmxt_maxub_M0_wRn</name><argument_list pos:start="1583:43" pos:end="1583:47">(<argument pos:start="1583:44" pos:end="1583:46"><expr pos:start="1583:44" pos:end="1583:46"><name pos:start="1583:44" pos:end="1583:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1585:13" pos:end="1585:18">break;</break>

        <case pos:start="1587:9" pos:end="1587:15">case <expr pos:start="1587:14" pos:end="1587:14"><literal type="number" pos:start="1587:14" pos:end="1587:14">1</literal></expr>:</case>

            <if_stmt pos:start="1589:13" pos:end="1595:48"><if pos:start="1589:13" pos:end="1591:48">if <condition pos:start="1589:16" pos:end="1589:33">(<expr pos:start="1589:17" pos:end="1589:32"><name pos:start="1589:17" pos:end="1589:20">insn</name> <operator pos:start="1589:22" pos:end="1589:22">&amp;</operator> <operator pos:start="1589:24" pos:end="1589:24">(</operator><literal type="number" pos:start="1589:25" pos:end="1589:25">1</literal> <operator pos:start="1589:27" pos:end="1589:28">&lt;&lt;</operator> <literal type="number" pos:start="1589:30" pos:end="1589:31">21</literal><operator pos:start="1589:32" pos:end="1589:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1591:17" pos:end="1591:48"><block_content pos:start="1591:17" pos:end="1591:48">

                <expr_stmt pos:start="1591:17" pos:end="1591:48"><expr pos:start="1591:17" pos:end="1591:47"><call pos:start="1591:17" pos:end="1591:47"><name pos:start="1591:17" pos:end="1591:42">gen_op_iwmmxt_maxsw_M0_wRn</name><argument_list pos:start="1591:43" pos:end="1591:47">(<argument pos:start="1591:44" pos:end="1591:46"><expr pos:start="1591:44" pos:end="1591:46"><name pos:start="1591:44" pos:end="1591:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1593:13" pos:end="1595:48">else<block type="pseudo" pos:start="1595:17" pos:end="1595:48"><block_content pos:start="1595:17" pos:end="1595:48">

                <expr_stmt pos:start="1595:17" pos:end="1595:48"><expr pos:start="1595:17" pos:end="1595:47"><call pos:start="1595:17" pos:end="1595:47"><name pos:start="1595:17" pos:end="1595:42">gen_op_iwmmxt_maxuw_M0_wRn</name><argument_list pos:start="1595:43" pos:end="1595:47">(<argument pos:start="1595:44" pos:end="1595:46"><expr pos:start="1595:44" pos:end="1595:46"><name pos:start="1595:44" pos:end="1595:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1597:13" pos:end="1597:18">break;</break>

        <case pos:start="1599:9" pos:end="1599:15">case <expr pos:start="1599:14" pos:end="1599:14"><literal type="number" pos:start="1599:14" pos:end="1599:14">2</literal></expr>:</case>

            <if_stmt pos:start="1601:13" pos:end="1607:48"><if pos:start="1601:13" pos:end="1603:48">if <condition pos:start="1601:16" pos:end="1601:33">(<expr pos:start="1601:17" pos:end="1601:32"><name pos:start="1601:17" pos:end="1601:20">insn</name> <operator pos:start="1601:22" pos:end="1601:22">&amp;</operator> <operator pos:start="1601:24" pos:end="1601:24">(</operator><literal type="number" pos:start="1601:25" pos:end="1601:25">1</literal> <operator pos:start="1601:27" pos:end="1601:28">&lt;&lt;</operator> <literal type="number" pos:start="1601:30" pos:end="1601:31">21</literal><operator pos:start="1601:32" pos:end="1601:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1603:17" pos:end="1603:48"><block_content pos:start="1603:17" pos:end="1603:48">

                <expr_stmt pos:start="1603:17" pos:end="1603:48"><expr pos:start="1603:17" pos:end="1603:47"><call pos:start="1603:17" pos:end="1603:47"><name pos:start="1603:17" pos:end="1603:42">gen_op_iwmmxt_maxsl_M0_wRn</name><argument_list pos:start="1603:43" pos:end="1603:47">(<argument pos:start="1603:44" pos:end="1603:46"><expr pos:start="1603:44" pos:end="1603:46"><name pos:start="1603:44" pos:end="1603:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1605:13" pos:end="1607:48">else<block type="pseudo" pos:start="1607:17" pos:end="1607:48"><block_content pos:start="1607:17" pos:end="1607:48">

                <expr_stmt pos:start="1607:17" pos:end="1607:48"><expr pos:start="1607:17" pos:end="1607:47"><call pos:start="1607:17" pos:end="1607:47"><name pos:start="1607:17" pos:end="1607:42">gen_op_iwmmxt_maxul_M0_wRn</name><argument_list pos:start="1607:43" pos:end="1607:47">(<argument pos:start="1607:44" pos:end="1607:46"><expr pos:start="1607:44" pos:end="1607:46"><name pos:start="1607:44" pos:end="1607:46">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1609:13" pos:end="1609:18">break;</break>

        <case pos:start="1611:9" pos:end="1611:15">case <expr pos:start="1611:14" pos:end="1611:14"><literal type="number" pos:start="1611:14" pos:end="1611:14">3</literal></expr>:</case>

            <return pos:start="1613:13" pos:end="1613:21">return <expr pos:start="1613:20" pos:end="1613:20"><literal type="number" pos:start="1613:20" pos:end="1613:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1617:9" pos:end="1617:39"><expr pos:start="1617:9" pos:end="1617:38"><call pos:start="1617:9" pos:end="1617:38"><name pos:start="1617:9" pos:end="1617:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1617:34" pos:end="1617:38">(<argument pos:start="1617:35" pos:end="1617:37"><expr pos:start="1617:35" pos:end="1617:37"><name pos:start="1617:35" pos:end="1617:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1619:9" pos:end="1619:32"><expr pos:start="1619:9" pos:end="1619:31"><call pos:start="1619:9" pos:end="1619:31"><name pos:start="1619:9" pos:end="1619:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1619:30" pos:end="1619:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1621:9" pos:end="1621:14">break;</break>

    <case pos:start="1623:5" pos:end="1623:15">case <expr pos:start="1623:10" pos:end="1623:14"><literal type="number" pos:start="1623:10" pos:end="1623:14">0x002</literal></expr>:</case> <case pos:start="1623:17" pos:end="1623:27">case <expr pos:start="1623:22" pos:end="1623:26"><literal type="number" pos:start="1623:22" pos:end="1623:26">0x102</literal></expr>:</case> <case pos:start="1623:29" pos:end="1623:39">case <expr pos:start="1623:34" pos:end="1623:38"><literal type="number" pos:start="1623:34" pos:end="1623:38">0x202</literal></expr>:</case> <case pos:start="1623:41" pos:end="1623:51">case <expr pos:start="1623:46" pos:end="1623:50"><literal type="number" pos:start="1623:46" pos:end="1623:50">0x302</literal></expr>:</case>	<comment type="block" pos:start="1623:57" pos:end="1623:69">/* WALIGNI */</comment>

    <case pos:start="1625:5" pos:end="1625:15">case <expr pos:start="1625:10" pos:end="1625:14"><literal type="number" pos:start="1625:10" pos:end="1625:14">0x402</literal></expr>:</case> <case pos:start="1625:17" pos:end="1625:27">case <expr pos:start="1625:22" pos:end="1625:26"><literal type="number" pos:start="1625:22" pos:end="1625:26">0x502</literal></expr>:</case> <case pos:start="1625:29" pos:end="1625:39">case <expr pos:start="1625:34" pos:end="1625:38"><literal type="number" pos:start="1625:34" pos:end="1625:38">0x602</literal></expr>:</case> <case pos:start="1625:41" pos:end="1625:51">case <expr pos:start="1625:46" pos:end="1625:50"><literal type="number" pos:start="1625:46" pos:end="1625:50">0x702</literal></expr>:</case>

        <expr_stmt pos:start="1627:9" pos:end="1627:33"><expr pos:start="1627:9" pos:end="1627:32"><name pos:start="1627:9" pos:end="1627:11">wrd</name> <operator pos:start="1627:13" pos:end="1627:13">=</operator> <operator pos:start="1627:15" pos:end="1627:15">(</operator><name pos:start="1627:16" pos:end="1627:19">insn</name> <operator pos:start="1627:21" pos:end="1627:22">&gt;&gt;</operator> <literal type="number" pos:start="1627:24" pos:end="1627:25">12</literal><operator pos:start="1627:26" pos:end="1627:26">)</operator> <operator pos:start="1627:28" pos:end="1627:28">&amp;</operator> <literal type="number" pos:start="1627:30" pos:end="1627:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1629:9" pos:end="1629:33"><expr pos:start="1629:9" pos:end="1629:32"><name pos:start="1629:9" pos:end="1629:11">rd0</name> <operator pos:start="1629:13" pos:end="1629:13">=</operator> <operator pos:start="1629:15" pos:end="1629:15">(</operator><name pos:start="1629:16" pos:end="1629:19">insn</name> <operator pos:start="1629:21" pos:end="1629:22">&gt;&gt;</operator> <literal type="number" pos:start="1629:24" pos:end="1629:25">16</literal><operator pos:start="1629:26" pos:end="1629:26">)</operator> <operator pos:start="1629:28" pos:end="1629:28">&amp;</operator> <literal type="number" pos:start="1629:30" pos:end="1629:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1631:9" pos:end="1631:32"><expr pos:start="1631:9" pos:end="1631:31"><name pos:start="1631:9" pos:end="1631:11">rd1</name> <operator pos:start="1631:13" pos:end="1631:13">=</operator> <operator pos:start="1631:15" pos:end="1631:15">(</operator><name pos:start="1631:16" pos:end="1631:19">insn</name> <operator pos:start="1631:21" pos:end="1631:22">&gt;&gt;</operator> <literal type="number" pos:start="1631:24" pos:end="1631:24">0</literal><operator pos:start="1631:25" pos:end="1631:25">)</operator> <operator pos:start="1631:27" pos:end="1631:27">&amp;</operator> <literal type="number" pos:start="1631:29" pos:end="1631:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1633:9" pos:end="1633:39"><expr pos:start="1633:9" pos:end="1633:38"><call pos:start="1633:9" pos:end="1633:38"><name pos:start="1633:9" pos:end="1633:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1633:34" pos:end="1633:38">(<argument pos:start="1633:35" pos:end="1633:37"><expr pos:start="1633:35" pos:end="1633:37"><name pos:start="1633:35" pos:end="1633:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1635:9" pos:end="1635:46"><expr pos:start="1635:9" pos:end="1635:45"><name pos:start="1635:9" pos:end="1635:11">tmp</name> <operator pos:start="1635:13" pos:end="1635:13">=</operator> <call pos:start="1635:15" pos:end="1635:45"><name pos:start="1635:15" pos:end="1635:27">tcg_const_i32</name><argument_list pos:start="1635:28" pos:end="1635:45">(<argument pos:start="1635:29" pos:end="1635:44"><expr pos:start="1635:29" pos:end="1635:44"><operator pos:start="1635:29" pos:end="1635:29">(</operator><name pos:start="1635:30" pos:end="1635:33">insn</name> <operator pos:start="1635:35" pos:end="1635:36">&gt;&gt;</operator> <literal type="number" pos:start="1635:38" pos:end="1635:39">20</literal><operator pos:start="1635:40" pos:end="1635:40">)</operator> <operator pos:start="1635:42" pos:end="1635:42">&amp;</operator> <literal type="number" pos:start="1635:44" pos:end="1635:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1637:9" pos:end="1637:37"><expr pos:start="1637:9" pos:end="1637:36"><call pos:start="1637:9" pos:end="1637:36"><name pos:start="1637:9" pos:end="1637:23">iwmmxt_load_reg</name><argument_list pos:start="1637:24" pos:end="1637:36">(<argument pos:start="1637:25" pos:end="1637:30"><expr pos:start="1637:25" pos:end="1637:30"><name pos:start="1637:25" pos:end="1637:30">cpu_V1</name></expr></argument>, <argument pos:start="1637:33" pos:end="1637:35"><expr pos:start="1637:33" pos:end="1637:35"><name pos:start="1637:33" pos:end="1637:35">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1639:9" pos:end="1639:61"><expr pos:start="1639:9" pos:end="1639:60"><call pos:start="1639:9" pos:end="1639:60"><name pos:start="1639:9" pos:end="1639:31">gen_helper_iwmmxt_align</name><argument_list pos:start="1639:32" pos:end="1639:60">(<argument pos:start="1639:33" pos:end="1639:38"><expr pos:start="1639:33" pos:end="1639:38"><name pos:start="1639:33" pos:end="1639:38">cpu_M0</name></expr></argument>, <argument pos:start="1639:41" pos:end="1639:46"><expr pos:start="1639:41" pos:end="1639:46"><name pos:start="1639:41" pos:end="1639:46">cpu_M0</name></expr></argument>, <argument pos:start="1639:49" pos:end="1639:54"><expr pos:start="1639:49" pos:end="1639:54"><name pos:start="1639:49" pos:end="1639:54">cpu_V1</name></expr></argument>, <argument pos:start="1639:57" pos:end="1639:59"><expr pos:start="1639:57" pos:end="1639:59"><name pos:start="1639:57" pos:end="1639:59">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1641:9" pos:end="1641:27"><expr pos:start="1641:9" pos:end="1641:26"><call pos:start="1641:9" pos:end="1641:26"><name pos:start="1641:9" pos:end="1641:21">tcg_temp_free</name><argument_list pos:start="1641:22" pos:end="1641:26">(<argument pos:start="1641:23" pos:end="1641:25"><expr pos:start="1641:23" pos:end="1641:25"><name pos:start="1641:23" pos:end="1641:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1643:9" pos:end="1643:39"><expr pos:start="1643:9" pos:end="1643:38"><call pos:start="1643:9" pos:end="1643:38"><name pos:start="1643:9" pos:end="1643:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1643:34" pos:end="1643:38">(<argument pos:start="1643:35" pos:end="1643:37"><expr pos:start="1643:35" pos:end="1643:37"><name pos:start="1643:35" pos:end="1643:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1645:9" pos:end="1645:32"><expr pos:start="1645:9" pos:end="1645:31"><call pos:start="1645:9" pos:end="1645:31"><name pos:start="1645:9" pos:end="1645:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1645:30" pos:end="1645:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1647:9" pos:end="1647:14">break;</break>

    <case pos:start="1649:5" pos:end="1649:15">case <expr pos:start="1649:10" pos:end="1649:14"><literal type="number" pos:start="1649:10" pos:end="1649:14">0x01a</literal></expr>:</case> <case pos:start="1649:17" pos:end="1649:27">case <expr pos:start="1649:22" pos:end="1649:26"><literal type="number" pos:start="1649:22" pos:end="1649:26">0x11a</literal></expr>:</case> <case pos:start="1649:29" pos:end="1649:39">case <expr pos:start="1649:34" pos:end="1649:38"><literal type="number" pos:start="1649:34" pos:end="1649:38">0x21a</literal></expr>:</case> <case pos:start="1649:41" pos:end="1649:51">case <expr pos:start="1649:46" pos:end="1649:50"><literal type="number" pos:start="1649:46" pos:end="1649:50">0x31a</literal></expr>:</case>	<comment type="block" pos:start="1649:57" pos:end="1649:66">/* WSUB */</comment>

    <case pos:start="1651:5" pos:end="1651:15">case <expr pos:start="1651:10" pos:end="1651:14"><literal type="number" pos:start="1651:10" pos:end="1651:14">0x41a</literal></expr>:</case> <case pos:start="1651:17" pos:end="1651:27">case <expr pos:start="1651:22" pos:end="1651:26"><literal type="number" pos:start="1651:22" pos:end="1651:26">0x51a</literal></expr>:</case> <case pos:start="1651:29" pos:end="1651:39">case <expr pos:start="1651:34" pos:end="1651:38"><literal type="number" pos:start="1651:34" pos:end="1651:38">0x61a</literal></expr>:</case> <case pos:start="1651:41" pos:end="1651:51">case <expr pos:start="1651:46" pos:end="1651:50"><literal type="number" pos:start="1651:46" pos:end="1651:50">0x71a</literal></expr>:</case>

    <case pos:start="1653:5" pos:end="1653:15">case <expr pos:start="1653:10" pos:end="1653:14"><literal type="number" pos:start="1653:10" pos:end="1653:14">0x81a</literal></expr>:</case> <case pos:start="1653:17" pos:end="1653:27">case <expr pos:start="1653:22" pos:end="1653:26"><literal type="number" pos:start="1653:22" pos:end="1653:26">0x91a</literal></expr>:</case> <case pos:start="1653:29" pos:end="1653:39">case <expr pos:start="1653:34" pos:end="1653:38"><literal type="number" pos:start="1653:34" pos:end="1653:38">0xa1a</literal></expr>:</case> <case pos:start="1653:41" pos:end="1653:51">case <expr pos:start="1653:46" pos:end="1653:50"><literal type="number" pos:start="1653:46" pos:end="1653:50">0xb1a</literal></expr>:</case>

    <case pos:start="1655:5" pos:end="1655:15">case <expr pos:start="1655:10" pos:end="1655:14"><literal type="number" pos:start="1655:10" pos:end="1655:14">0xc1a</literal></expr>:</case> <case pos:start="1655:17" pos:end="1655:27">case <expr pos:start="1655:22" pos:end="1655:26"><literal type="number" pos:start="1655:22" pos:end="1655:26">0xd1a</literal></expr>:</case> <case pos:start="1655:29" pos:end="1655:39">case <expr pos:start="1655:34" pos:end="1655:38"><literal type="number" pos:start="1655:34" pos:end="1655:38">0xe1a</literal></expr>:</case> <case pos:start="1655:41" pos:end="1655:51">case <expr pos:start="1655:46" pos:end="1655:50"><literal type="number" pos:start="1655:46" pos:end="1655:50">0xf1a</literal></expr>:</case>

        <expr_stmt pos:start="1657:9" pos:end="1657:33"><expr pos:start="1657:9" pos:end="1657:32"><name pos:start="1657:9" pos:end="1657:11">wrd</name> <operator pos:start="1657:13" pos:end="1657:13">=</operator> <operator pos:start="1657:15" pos:end="1657:15">(</operator><name pos:start="1657:16" pos:end="1657:19">insn</name> <operator pos:start="1657:21" pos:end="1657:22">&gt;&gt;</operator> <literal type="number" pos:start="1657:24" pos:end="1657:25">12</literal><operator pos:start="1657:26" pos:end="1657:26">)</operator> <operator pos:start="1657:28" pos:end="1657:28">&amp;</operator> <literal type="number" pos:start="1657:30" pos:end="1657:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1659:9" pos:end="1659:33"><expr pos:start="1659:9" pos:end="1659:32"><name pos:start="1659:9" pos:end="1659:11">rd0</name> <operator pos:start="1659:13" pos:end="1659:13">=</operator> <operator pos:start="1659:15" pos:end="1659:15">(</operator><name pos:start="1659:16" pos:end="1659:19">insn</name> <operator pos:start="1659:21" pos:end="1659:22">&gt;&gt;</operator> <literal type="number" pos:start="1659:24" pos:end="1659:25">16</literal><operator pos:start="1659:26" pos:end="1659:26">)</operator> <operator pos:start="1659:28" pos:end="1659:28">&amp;</operator> <literal type="number" pos:start="1659:30" pos:end="1659:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1661:9" pos:end="1661:32"><expr pos:start="1661:9" pos:end="1661:31"><name pos:start="1661:9" pos:end="1661:11">rd1</name> <operator pos:start="1661:13" pos:end="1661:13">=</operator> <operator pos:start="1661:15" pos:end="1661:15">(</operator><name pos:start="1661:16" pos:end="1661:19">insn</name> <operator pos:start="1661:21" pos:end="1661:22">&gt;&gt;</operator> <literal type="number" pos:start="1661:24" pos:end="1661:24">0</literal><operator pos:start="1661:25" pos:end="1661:25">)</operator> <operator pos:start="1661:27" pos:end="1661:27">&amp;</operator> <literal type="number" pos:start="1661:29" pos:end="1661:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1663:9" pos:end="1663:39"><expr pos:start="1663:9" pos:end="1663:38"><call pos:start="1663:9" pos:end="1663:38"><name pos:start="1663:9" pos:end="1663:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1663:34" pos:end="1663:38">(<argument pos:start="1663:35" pos:end="1663:37"><expr pos:start="1663:35" pos:end="1663:37"><name pos:start="1663:35" pos:end="1663:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1665:9" pos:end="1725:9">switch <condition pos:start="1665:16" pos:end="1665:35">(<expr pos:start="1665:17" pos:end="1665:34"><operator pos:start="1665:17" pos:end="1665:17">(</operator><name pos:start="1665:18" pos:end="1665:21">insn</name> <operator pos:start="1665:23" pos:end="1665:24">&gt;&gt;</operator> <literal type="number" pos:start="1665:26" pos:end="1665:27">20</literal><operator pos:start="1665:28" pos:end="1665:28">)</operator> <operator pos:start="1665:30" pos:end="1665:30">&amp;</operator> <literal type="number" pos:start="1665:32" pos:end="1665:34">0xf</literal></expr>)</condition> <block pos:start="1665:37" pos:end="1725:9">{<block_content pos:start="1667:9" pos:end="1723:21">

        <case pos:start="1667:9" pos:end="1667:17">case <expr pos:start="1667:14" pos:end="1667:16"><literal type="number" pos:start="1667:14" pos:end="1667:16">0x0</literal></expr>:</case>

            <expr_stmt pos:start="1669:13" pos:end="1669:44"><expr pos:start="1669:13" pos:end="1669:43"><call pos:start="1669:13" pos:end="1669:43"><name pos:start="1669:13" pos:end="1669:38">gen_op_iwmmxt_subnb_M0_wRn</name><argument_list pos:start="1669:39" pos:end="1669:43">(<argument pos:start="1669:40" pos:end="1669:42"><expr pos:start="1669:40" pos:end="1669:42"><name pos:start="1669:40" pos:end="1669:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1671:13" pos:end="1671:18">break;</break>

        <case pos:start="1673:9" pos:end="1673:17">case <expr pos:start="1673:14" pos:end="1673:16"><literal type="number" pos:start="1673:14" pos:end="1673:16">0x1</literal></expr>:</case>

            <expr_stmt pos:start="1675:13" pos:end="1675:44"><expr pos:start="1675:13" pos:end="1675:43"><call pos:start="1675:13" pos:end="1675:43"><name pos:start="1675:13" pos:end="1675:38">gen_op_iwmmxt_subub_M0_wRn</name><argument_list pos:start="1675:39" pos:end="1675:43">(<argument pos:start="1675:40" pos:end="1675:42"><expr pos:start="1675:40" pos:end="1675:42"><name pos:start="1675:40" pos:end="1675:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1677:13" pos:end="1677:18">break;</break>

        <case pos:start="1679:9" pos:end="1679:17">case <expr pos:start="1679:14" pos:end="1679:16"><literal type="number" pos:start="1679:14" pos:end="1679:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="1681:13" pos:end="1681:44"><expr pos:start="1681:13" pos:end="1681:43"><call pos:start="1681:13" pos:end="1681:43"><name pos:start="1681:13" pos:end="1681:38">gen_op_iwmmxt_subsb_M0_wRn</name><argument_list pos:start="1681:39" pos:end="1681:43">(<argument pos:start="1681:40" pos:end="1681:42"><expr pos:start="1681:40" pos:end="1681:42"><name pos:start="1681:40" pos:end="1681:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1683:13" pos:end="1683:18">break;</break>

        <case pos:start="1685:9" pos:end="1685:17">case <expr pos:start="1685:14" pos:end="1685:16"><literal type="number" pos:start="1685:14" pos:end="1685:16">0x4</literal></expr>:</case>

            <expr_stmt pos:start="1687:13" pos:end="1687:44"><expr pos:start="1687:13" pos:end="1687:43"><call pos:start="1687:13" pos:end="1687:43"><name pos:start="1687:13" pos:end="1687:38">gen_op_iwmmxt_subnw_M0_wRn</name><argument_list pos:start="1687:39" pos:end="1687:43">(<argument pos:start="1687:40" pos:end="1687:42"><expr pos:start="1687:40" pos:end="1687:42"><name pos:start="1687:40" pos:end="1687:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1689:13" pos:end="1689:18">break;</break>

        <case pos:start="1691:9" pos:end="1691:17">case <expr pos:start="1691:14" pos:end="1691:16"><literal type="number" pos:start="1691:14" pos:end="1691:16">0x5</literal></expr>:</case>

            <expr_stmt pos:start="1693:13" pos:end="1693:44"><expr pos:start="1693:13" pos:end="1693:43"><call pos:start="1693:13" pos:end="1693:43"><name pos:start="1693:13" pos:end="1693:38">gen_op_iwmmxt_subuw_M0_wRn</name><argument_list pos:start="1693:39" pos:end="1693:43">(<argument pos:start="1693:40" pos:end="1693:42"><expr pos:start="1693:40" pos:end="1693:42"><name pos:start="1693:40" pos:end="1693:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1695:13" pos:end="1695:18">break;</break>

        <case pos:start="1697:9" pos:end="1697:17">case <expr pos:start="1697:14" pos:end="1697:16"><literal type="number" pos:start="1697:14" pos:end="1697:16">0x7</literal></expr>:</case>

            <expr_stmt pos:start="1699:13" pos:end="1699:44"><expr pos:start="1699:13" pos:end="1699:43"><call pos:start="1699:13" pos:end="1699:43"><name pos:start="1699:13" pos:end="1699:38">gen_op_iwmmxt_subsw_M0_wRn</name><argument_list pos:start="1699:39" pos:end="1699:43">(<argument pos:start="1699:40" pos:end="1699:42"><expr pos:start="1699:40" pos:end="1699:42"><name pos:start="1699:40" pos:end="1699:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1701:13" pos:end="1701:18">break;</break>

        <case pos:start="1703:9" pos:end="1703:17">case <expr pos:start="1703:14" pos:end="1703:16"><literal type="number" pos:start="1703:14" pos:end="1703:16">0x8</literal></expr>:</case>

            <expr_stmt pos:start="1705:13" pos:end="1705:44"><expr pos:start="1705:13" pos:end="1705:43"><call pos:start="1705:13" pos:end="1705:43"><name pos:start="1705:13" pos:end="1705:38">gen_op_iwmmxt_subnl_M0_wRn</name><argument_list pos:start="1705:39" pos:end="1705:43">(<argument pos:start="1705:40" pos:end="1705:42"><expr pos:start="1705:40" pos:end="1705:42"><name pos:start="1705:40" pos:end="1705:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1707:13" pos:end="1707:18">break;</break>

        <case pos:start="1709:9" pos:end="1709:17">case <expr pos:start="1709:14" pos:end="1709:16"><literal type="number" pos:start="1709:14" pos:end="1709:16">0x9</literal></expr>:</case>

            <expr_stmt pos:start="1711:13" pos:end="1711:44"><expr pos:start="1711:13" pos:end="1711:43"><call pos:start="1711:13" pos:end="1711:43"><name pos:start="1711:13" pos:end="1711:38">gen_op_iwmmxt_subul_M0_wRn</name><argument_list pos:start="1711:39" pos:end="1711:43">(<argument pos:start="1711:40" pos:end="1711:42"><expr pos:start="1711:40" pos:end="1711:42"><name pos:start="1711:40" pos:end="1711:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1713:13" pos:end="1713:18">break;</break>

        <case pos:start="1715:9" pos:end="1715:17">case <expr pos:start="1715:14" pos:end="1715:16"><literal type="number" pos:start="1715:14" pos:end="1715:16">0xb</literal></expr>:</case>

            <expr_stmt pos:start="1717:13" pos:end="1717:44"><expr pos:start="1717:13" pos:end="1717:43"><call pos:start="1717:13" pos:end="1717:43"><name pos:start="1717:13" pos:end="1717:38">gen_op_iwmmxt_subsl_M0_wRn</name><argument_list pos:start="1717:39" pos:end="1717:43">(<argument pos:start="1717:40" pos:end="1717:42"><expr pos:start="1717:40" pos:end="1717:42"><name pos:start="1717:40" pos:end="1717:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1719:13" pos:end="1719:18">break;</break>

        <default pos:start="1721:9" pos:end="1721:16">default:</default>

            <return pos:start="1723:13" pos:end="1723:21">return <expr pos:start="1723:20" pos:end="1723:20"><literal type="number" pos:start="1723:20" pos:end="1723:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1727:9" pos:end="1727:39"><expr pos:start="1727:9" pos:end="1727:38"><call pos:start="1727:9" pos:end="1727:38"><name pos:start="1727:9" pos:end="1727:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1727:34" pos:end="1727:38">(<argument pos:start="1727:35" pos:end="1727:37"><expr pos:start="1727:35" pos:end="1727:37"><name pos:start="1727:35" pos:end="1727:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1729:9" pos:end="1729:32"><expr pos:start="1729:9" pos:end="1729:31"><call pos:start="1729:9" pos:end="1729:31"><name pos:start="1729:9" pos:end="1729:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1729:30" pos:end="1729:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1731:9" pos:end="1731:32"><expr pos:start="1731:9" pos:end="1731:31"><call pos:start="1731:9" pos:end="1731:31"><name pos:start="1731:9" pos:end="1731:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1731:30" pos:end="1731:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1733:9" pos:end="1733:14">break;</break>

    <case pos:start="1735:5" pos:end="1735:15">case <expr pos:start="1735:10" pos:end="1735:14"><literal type="number" pos:start="1735:10" pos:end="1735:14">0x01e</literal></expr>:</case> <case pos:start="1735:17" pos:end="1735:27">case <expr pos:start="1735:22" pos:end="1735:26"><literal type="number" pos:start="1735:22" pos:end="1735:26">0x11e</literal></expr>:</case> <case pos:start="1735:29" pos:end="1735:39">case <expr pos:start="1735:34" pos:end="1735:38"><literal type="number" pos:start="1735:34" pos:end="1735:38">0x21e</literal></expr>:</case> <case pos:start="1735:41" pos:end="1735:51">case <expr pos:start="1735:46" pos:end="1735:50"><literal type="number" pos:start="1735:46" pos:end="1735:50">0x31e</literal></expr>:</case>	<comment type="block" pos:start="1735:57" pos:end="1735:68">/* WSHUFH */</comment>

    <case pos:start="1737:5" pos:end="1737:15">case <expr pos:start="1737:10" pos:end="1737:14"><literal type="number" pos:start="1737:10" pos:end="1737:14">0x41e</literal></expr>:</case> <case pos:start="1737:17" pos:end="1737:27">case <expr pos:start="1737:22" pos:end="1737:26"><literal type="number" pos:start="1737:22" pos:end="1737:26">0x51e</literal></expr>:</case> <case pos:start="1737:29" pos:end="1737:39">case <expr pos:start="1737:34" pos:end="1737:38"><literal type="number" pos:start="1737:34" pos:end="1737:38">0x61e</literal></expr>:</case> <case pos:start="1737:41" pos:end="1737:51">case <expr pos:start="1737:46" pos:end="1737:50"><literal type="number" pos:start="1737:46" pos:end="1737:50">0x71e</literal></expr>:</case>

    <case pos:start="1739:5" pos:end="1739:15">case <expr pos:start="1739:10" pos:end="1739:14"><literal type="number" pos:start="1739:10" pos:end="1739:14">0x81e</literal></expr>:</case> <case pos:start="1739:17" pos:end="1739:27">case <expr pos:start="1739:22" pos:end="1739:26"><literal type="number" pos:start="1739:22" pos:end="1739:26">0x91e</literal></expr>:</case> <case pos:start="1739:29" pos:end="1739:39">case <expr pos:start="1739:34" pos:end="1739:38"><literal type="number" pos:start="1739:34" pos:end="1739:38">0xa1e</literal></expr>:</case> <case pos:start="1739:41" pos:end="1739:51">case <expr pos:start="1739:46" pos:end="1739:50"><literal type="number" pos:start="1739:46" pos:end="1739:50">0xb1e</literal></expr>:</case>

    <case pos:start="1741:5" pos:end="1741:15">case <expr pos:start="1741:10" pos:end="1741:14"><literal type="number" pos:start="1741:10" pos:end="1741:14">0xc1e</literal></expr>:</case> <case pos:start="1741:17" pos:end="1741:27">case <expr pos:start="1741:22" pos:end="1741:26"><literal type="number" pos:start="1741:22" pos:end="1741:26">0xd1e</literal></expr>:</case> <case pos:start="1741:29" pos:end="1741:39">case <expr pos:start="1741:34" pos:end="1741:38"><literal type="number" pos:start="1741:34" pos:end="1741:38">0xe1e</literal></expr>:</case> <case pos:start="1741:41" pos:end="1741:51">case <expr pos:start="1741:46" pos:end="1741:50"><literal type="number" pos:start="1741:46" pos:end="1741:50">0xf1e</literal></expr>:</case>

        <expr_stmt pos:start="1743:9" pos:end="1743:33"><expr pos:start="1743:9" pos:end="1743:32"><name pos:start="1743:9" pos:end="1743:11">wrd</name> <operator pos:start="1743:13" pos:end="1743:13">=</operator> <operator pos:start="1743:15" pos:end="1743:15">(</operator><name pos:start="1743:16" pos:end="1743:19">insn</name> <operator pos:start="1743:21" pos:end="1743:22">&gt;&gt;</operator> <literal type="number" pos:start="1743:24" pos:end="1743:25">12</literal><operator pos:start="1743:26" pos:end="1743:26">)</operator> <operator pos:start="1743:28" pos:end="1743:28">&amp;</operator> <literal type="number" pos:start="1743:30" pos:end="1743:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1745:9" pos:end="1745:33"><expr pos:start="1745:9" pos:end="1745:32"><name pos:start="1745:9" pos:end="1745:11">rd0</name> <operator pos:start="1745:13" pos:end="1745:13">=</operator> <operator pos:start="1745:15" pos:end="1745:15">(</operator><name pos:start="1745:16" pos:end="1745:19">insn</name> <operator pos:start="1745:21" pos:end="1745:22">&gt;&gt;</operator> <literal type="number" pos:start="1745:24" pos:end="1745:25">16</literal><operator pos:start="1745:26" pos:end="1745:26">)</operator> <operator pos:start="1745:28" pos:end="1745:28">&amp;</operator> <literal type="number" pos:start="1745:30" pos:end="1745:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1747:9" pos:end="1747:39"><expr pos:start="1747:9" pos:end="1747:38"><call pos:start="1747:9" pos:end="1747:38"><name pos:start="1747:9" pos:end="1747:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1747:34" pos:end="1747:38">(<argument pos:start="1747:35" pos:end="1747:37"><expr pos:start="1747:35" pos:end="1747:37"><name pos:start="1747:35" pos:end="1747:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1749:9" pos:end="1749:67"><expr pos:start="1749:9" pos:end="1749:66"><name pos:start="1749:9" pos:end="1749:11">tmp</name> <operator pos:start="1749:13" pos:end="1749:13">=</operator> <call pos:start="1749:15" pos:end="1749:66"><name pos:start="1749:15" pos:end="1749:27">tcg_const_i32</name><argument_list pos:start="1749:28" pos:end="1749:66">(<argument pos:start="1749:29" pos:end="1749:65"><expr pos:start="1749:29" pos:end="1749:65"><operator pos:start="1749:29" pos:end="1749:29">(</operator><operator pos:start="1749:30" pos:end="1749:30">(</operator><name pos:start="1749:31" pos:end="1749:34">insn</name> <operator pos:start="1749:36" pos:end="1749:37">&gt;&gt;</operator> <literal type="number" pos:start="1749:39" pos:end="1749:40">16</literal><operator pos:start="1749:41" pos:end="1749:41">)</operator> <operator pos:start="1749:43" pos:end="1749:43">&amp;</operator> <literal type="number" pos:start="1749:45" pos:end="1749:48">0xf0</literal><operator pos:start="1749:49" pos:end="1749:49">)</operator> <operator pos:start="1749:51" pos:end="1749:51">|</operator> <operator pos:start="1749:53" pos:end="1749:53">(</operator><name pos:start="1749:54" pos:end="1749:57">insn</name> <operator pos:start="1749:59" pos:end="1749:59">&amp;</operator> <literal type="number" pos:start="1749:61" pos:end="1749:64">0x0f</literal><operator pos:start="1749:65" pos:end="1749:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1751:9" pos:end="1751:62"><expr pos:start="1751:9" pos:end="1751:61"><call pos:start="1751:9" pos:end="1751:61"><name pos:start="1751:9" pos:end="1751:31">gen_helper_iwmmxt_shufh</name><argument_list pos:start="1751:32" pos:end="1751:61">(<argument pos:start="1751:33" pos:end="1751:38"><expr pos:start="1751:33" pos:end="1751:38"><name pos:start="1751:33" pos:end="1751:38">cpu_M0</name></expr></argument>, <argument pos:start="1751:41" pos:end="1751:47"><expr pos:start="1751:41" pos:end="1751:47"><name pos:start="1751:41" pos:end="1751:47">cpu_env</name></expr></argument>, <argument pos:start="1751:50" pos:end="1751:55"><expr pos:start="1751:50" pos:end="1751:55"><name pos:start="1751:50" pos:end="1751:55">cpu_M0</name></expr></argument>, <argument pos:start="1751:58" pos:end="1751:60"><expr pos:start="1751:58" pos:end="1751:60"><name pos:start="1751:58" pos:end="1751:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1753:9" pos:end="1753:27"><expr pos:start="1753:9" pos:end="1753:26"><call pos:start="1753:9" pos:end="1753:26"><name pos:start="1753:9" pos:end="1753:21">tcg_temp_free</name><argument_list pos:start="1753:22" pos:end="1753:26">(<argument pos:start="1753:23" pos:end="1753:25"><expr pos:start="1753:23" pos:end="1753:25"><name pos:start="1753:23" pos:end="1753:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1755:9" pos:end="1755:39"><expr pos:start="1755:9" pos:end="1755:38"><call pos:start="1755:9" pos:end="1755:38"><name pos:start="1755:9" pos:end="1755:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1755:34" pos:end="1755:38">(<argument pos:start="1755:35" pos:end="1755:37"><expr pos:start="1755:35" pos:end="1755:37"><name pos:start="1755:35" pos:end="1755:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1757:9" pos:end="1757:32"><expr pos:start="1757:9" pos:end="1757:31"><call pos:start="1757:9" pos:end="1757:31"><name pos:start="1757:9" pos:end="1757:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1757:30" pos:end="1757:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1759:9" pos:end="1759:32"><expr pos:start="1759:9" pos:end="1759:31"><call pos:start="1759:9" pos:end="1759:31"><name pos:start="1759:9" pos:end="1759:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1759:30" pos:end="1759:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1761:9" pos:end="1761:14">break;</break>

    <case pos:start="1763:5" pos:end="1763:15">case <expr pos:start="1763:10" pos:end="1763:14"><literal type="number" pos:start="1763:10" pos:end="1763:14">0x018</literal></expr>:</case> <case pos:start="1763:17" pos:end="1763:27">case <expr pos:start="1763:22" pos:end="1763:26"><literal type="number" pos:start="1763:22" pos:end="1763:26">0x118</literal></expr>:</case> <case pos:start="1763:29" pos:end="1763:39">case <expr pos:start="1763:34" pos:end="1763:38"><literal type="number" pos:start="1763:34" pos:end="1763:38">0x218</literal></expr>:</case> <case pos:start="1763:41" pos:end="1763:51">case <expr pos:start="1763:46" pos:end="1763:50"><literal type="number" pos:start="1763:46" pos:end="1763:50">0x318</literal></expr>:</case>	<comment type="block" pos:start="1763:57" pos:end="1763:66">/* WADD */</comment>

    <case pos:start="1765:5" pos:end="1765:15">case <expr pos:start="1765:10" pos:end="1765:14"><literal type="number" pos:start="1765:10" pos:end="1765:14">0x418</literal></expr>:</case> <case pos:start="1765:17" pos:end="1765:27">case <expr pos:start="1765:22" pos:end="1765:26"><literal type="number" pos:start="1765:22" pos:end="1765:26">0x518</literal></expr>:</case> <case pos:start="1765:29" pos:end="1765:39">case <expr pos:start="1765:34" pos:end="1765:38"><literal type="number" pos:start="1765:34" pos:end="1765:38">0x618</literal></expr>:</case> <case pos:start="1765:41" pos:end="1765:51">case <expr pos:start="1765:46" pos:end="1765:50"><literal type="number" pos:start="1765:46" pos:end="1765:50">0x718</literal></expr>:</case>

    <case pos:start="1767:5" pos:end="1767:15">case <expr pos:start="1767:10" pos:end="1767:14"><literal type="number" pos:start="1767:10" pos:end="1767:14">0x818</literal></expr>:</case> <case pos:start="1767:17" pos:end="1767:27">case <expr pos:start="1767:22" pos:end="1767:26"><literal type="number" pos:start="1767:22" pos:end="1767:26">0x918</literal></expr>:</case> <case pos:start="1767:29" pos:end="1767:39">case <expr pos:start="1767:34" pos:end="1767:38"><literal type="number" pos:start="1767:34" pos:end="1767:38">0xa18</literal></expr>:</case> <case pos:start="1767:41" pos:end="1767:51">case <expr pos:start="1767:46" pos:end="1767:50"><literal type="number" pos:start="1767:46" pos:end="1767:50">0xb18</literal></expr>:</case>

    <case pos:start="1769:5" pos:end="1769:15">case <expr pos:start="1769:10" pos:end="1769:14"><literal type="number" pos:start="1769:10" pos:end="1769:14">0xc18</literal></expr>:</case> <case pos:start="1769:17" pos:end="1769:27">case <expr pos:start="1769:22" pos:end="1769:26"><literal type="number" pos:start="1769:22" pos:end="1769:26">0xd18</literal></expr>:</case> <case pos:start="1769:29" pos:end="1769:39">case <expr pos:start="1769:34" pos:end="1769:38"><literal type="number" pos:start="1769:34" pos:end="1769:38">0xe18</literal></expr>:</case> <case pos:start="1769:41" pos:end="1769:51">case <expr pos:start="1769:46" pos:end="1769:50"><literal type="number" pos:start="1769:46" pos:end="1769:50">0xf18</literal></expr>:</case>

        <expr_stmt pos:start="1771:9" pos:end="1771:33"><expr pos:start="1771:9" pos:end="1771:32"><name pos:start="1771:9" pos:end="1771:11">wrd</name> <operator pos:start="1771:13" pos:end="1771:13">=</operator> <operator pos:start="1771:15" pos:end="1771:15">(</operator><name pos:start="1771:16" pos:end="1771:19">insn</name> <operator pos:start="1771:21" pos:end="1771:22">&gt;&gt;</operator> <literal type="number" pos:start="1771:24" pos:end="1771:25">12</literal><operator pos:start="1771:26" pos:end="1771:26">)</operator> <operator pos:start="1771:28" pos:end="1771:28">&amp;</operator> <literal type="number" pos:start="1771:30" pos:end="1771:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1773:9" pos:end="1773:33"><expr pos:start="1773:9" pos:end="1773:32"><name pos:start="1773:9" pos:end="1773:11">rd0</name> <operator pos:start="1773:13" pos:end="1773:13">=</operator> <operator pos:start="1773:15" pos:end="1773:15">(</operator><name pos:start="1773:16" pos:end="1773:19">insn</name> <operator pos:start="1773:21" pos:end="1773:22">&gt;&gt;</operator> <literal type="number" pos:start="1773:24" pos:end="1773:25">16</literal><operator pos:start="1773:26" pos:end="1773:26">)</operator> <operator pos:start="1773:28" pos:end="1773:28">&amp;</operator> <literal type="number" pos:start="1773:30" pos:end="1773:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1775:9" pos:end="1775:32"><expr pos:start="1775:9" pos:end="1775:31"><name pos:start="1775:9" pos:end="1775:11">rd1</name> <operator pos:start="1775:13" pos:end="1775:13">=</operator> <operator pos:start="1775:15" pos:end="1775:15">(</operator><name pos:start="1775:16" pos:end="1775:19">insn</name> <operator pos:start="1775:21" pos:end="1775:22">&gt;&gt;</operator> <literal type="number" pos:start="1775:24" pos:end="1775:24">0</literal><operator pos:start="1775:25" pos:end="1775:25">)</operator> <operator pos:start="1775:27" pos:end="1775:27">&amp;</operator> <literal type="number" pos:start="1775:29" pos:end="1775:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1777:9" pos:end="1777:39"><expr pos:start="1777:9" pos:end="1777:38"><call pos:start="1777:9" pos:end="1777:38"><name pos:start="1777:9" pos:end="1777:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1777:34" pos:end="1777:38">(<argument pos:start="1777:35" pos:end="1777:37"><expr pos:start="1777:35" pos:end="1777:37"><name pos:start="1777:35" pos:end="1777:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1779:9" pos:end="1839:9">switch <condition pos:start="1779:16" pos:end="1779:35">(<expr pos:start="1779:17" pos:end="1779:34"><operator pos:start="1779:17" pos:end="1779:17">(</operator><name pos:start="1779:18" pos:end="1779:21">insn</name> <operator pos:start="1779:23" pos:end="1779:24">&gt;&gt;</operator> <literal type="number" pos:start="1779:26" pos:end="1779:27">20</literal><operator pos:start="1779:28" pos:end="1779:28">)</operator> <operator pos:start="1779:30" pos:end="1779:30">&amp;</operator> <literal type="number" pos:start="1779:32" pos:end="1779:34">0xf</literal></expr>)</condition> <block pos:start="1779:37" pos:end="1839:9">{<block_content pos:start="1781:9" pos:end="1837:21">

        <case pos:start="1781:9" pos:end="1781:17">case <expr pos:start="1781:14" pos:end="1781:16"><literal type="number" pos:start="1781:14" pos:end="1781:16">0x0</literal></expr>:</case>

            <expr_stmt pos:start="1783:13" pos:end="1783:44"><expr pos:start="1783:13" pos:end="1783:43"><call pos:start="1783:13" pos:end="1783:43"><name pos:start="1783:13" pos:end="1783:38">gen_op_iwmmxt_addnb_M0_wRn</name><argument_list pos:start="1783:39" pos:end="1783:43">(<argument pos:start="1783:40" pos:end="1783:42"><expr pos:start="1783:40" pos:end="1783:42"><name pos:start="1783:40" pos:end="1783:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1785:13" pos:end="1785:18">break;</break>

        <case pos:start="1787:9" pos:end="1787:17">case <expr pos:start="1787:14" pos:end="1787:16"><literal type="number" pos:start="1787:14" pos:end="1787:16">0x1</literal></expr>:</case>

            <expr_stmt pos:start="1789:13" pos:end="1789:44"><expr pos:start="1789:13" pos:end="1789:43"><call pos:start="1789:13" pos:end="1789:43"><name pos:start="1789:13" pos:end="1789:38">gen_op_iwmmxt_addub_M0_wRn</name><argument_list pos:start="1789:39" pos:end="1789:43">(<argument pos:start="1789:40" pos:end="1789:42"><expr pos:start="1789:40" pos:end="1789:42"><name pos:start="1789:40" pos:end="1789:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1791:13" pos:end="1791:18">break;</break>

        <case pos:start="1793:9" pos:end="1793:17">case <expr pos:start="1793:14" pos:end="1793:16"><literal type="number" pos:start="1793:14" pos:end="1793:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="1795:13" pos:end="1795:44"><expr pos:start="1795:13" pos:end="1795:43"><call pos:start="1795:13" pos:end="1795:43"><name pos:start="1795:13" pos:end="1795:38">gen_op_iwmmxt_addsb_M0_wRn</name><argument_list pos:start="1795:39" pos:end="1795:43">(<argument pos:start="1795:40" pos:end="1795:42"><expr pos:start="1795:40" pos:end="1795:42"><name pos:start="1795:40" pos:end="1795:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1797:13" pos:end="1797:18">break;</break>

        <case pos:start="1799:9" pos:end="1799:17">case <expr pos:start="1799:14" pos:end="1799:16"><literal type="number" pos:start="1799:14" pos:end="1799:16">0x4</literal></expr>:</case>

            <expr_stmt pos:start="1801:13" pos:end="1801:44"><expr pos:start="1801:13" pos:end="1801:43"><call pos:start="1801:13" pos:end="1801:43"><name pos:start="1801:13" pos:end="1801:38">gen_op_iwmmxt_addnw_M0_wRn</name><argument_list pos:start="1801:39" pos:end="1801:43">(<argument pos:start="1801:40" pos:end="1801:42"><expr pos:start="1801:40" pos:end="1801:42"><name pos:start="1801:40" pos:end="1801:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1803:13" pos:end="1803:18">break;</break>

        <case pos:start="1805:9" pos:end="1805:17">case <expr pos:start="1805:14" pos:end="1805:16"><literal type="number" pos:start="1805:14" pos:end="1805:16">0x5</literal></expr>:</case>

            <expr_stmt pos:start="1807:13" pos:end="1807:44"><expr pos:start="1807:13" pos:end="1807:43"><call pos:start="1807:13" pos:end="1807:43"><name pos:start="1807:13" pos:end="1807:38">gen_op_iwmmxt_adduw_M0_wRn</name><argument_list pos:start="1807:39" pos:end="1807:43">(<argument pos:start="1807:40" pos:end="1807:42"><expr pos:start="1807:40" pos:end="1807:42"><name pos:start="1807:40" pos:end="1807:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1809:13" pos:end="1809:18">break;</break>

        <case pos:start="1811:9" pos:end="1811:17">case <expr pos:start="1811:14" pos:end="1811:16"><literal type="number" pos:start="1811:14" pos:end="1811:16">0x7</literal></expr>:</case>

            <expr_stmt pos:start="1813:13" pos:end="1813:44"><expr pos:start="1813:13" pos:end="1813:43"><call pos:start="1813:13" pos:end="1813:43"><name pos:start="1813:13" pos:end="1813:38">gen_op_iwmmxt_addsw_M0_wRn</name><argument_list pos:start="1813:39" pos:end="1813:43">(<argument pos:start="1813:40" pos:end="1813:42"><expr pos:start="1813:40" pos:end="1813:42"><name pos:start="1813:40" pos:end="1813:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1815:13" pos:end="1815:18">break;</break>

        <case pos:start="1817:9" pos:end="1817:17">case <expr pos:start="1817:14" pos:end="1817:16"><literal type="number" pos:start="1817:14" pos:end="1817:16">0x8</literal></expr>:</case>

            <expr_stmt pos:start="1819:13" pos:end="1819:44"><expr pos:start="1819:13" pos:end="1819:43"><call pos:start="1819:13" pos:end="1819:43"><name pos:start="1819:13" pos:end="1819:38">gen_op_iwmmxt_addnl_M0_wRn</name><argument_list pos:start="1819:39" pos:end="1819:43">(<argument pos:start="1819:40" pos:end="1819:42"><expr pos:start="1819:40" pos:end="1819:42"><name pos:start="1819:40" pos:end="1819:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1821:13" pos:end="1821:18">break;</break>

        <case pos:start="1823:9" pos:end="1823:17">case <expr pos:start="1823:14" pos:end="1823:16"><literal type="number" pos:start="1823:14" pos:end="1823:16">0x9</literal></expr>:</case>

            <expr_stmt pos:start="1825:13" pos:end="1825:44"><expr pos:start="1825:13" pos:end="1825:43"><call pos:start="1825:13" pos:end="1825:43"><name pos:start="1825:13" pos:end="1825:38">gen_op_iwmmxt_addul_M0_wRn</name><argument_list pos:start="1825:39" pos:end="1825:43">(<argument pos:start="1825:40" pos:end="1825:42"><expr pos:start="1825:40" pos:end="1825:42"><name pos:start="1825:40" pos:end="1825:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1827:13" pos:end="1827:18">break;</break>

        <case pos:start="1829:9" pos:end="1829:17">case <expr pos:start="1829:14" pos:end="1829:16"><literal type="number" pos:start="1829:14" pos:end="1829:16">0xb</literal></expr>:</case>

            <expr_stmt pos:start="1831:13" pos:end="1831:44"><expr pos:start="1831:13" pos:end="1831:43"><call pos:start="1831:13" pos:end="1831:43"><name pos:start="1831:13" pos:end="1831:38">gen_op_iwmmxt_addsl_M0_wRn</name><argument_list pos:start="1831:39" pos:end="1831:43">(<argument pos:start="1831:40" pos:end="1831:42"><expr pos:start="1831:40" pos:end="1831:42"><name pos:start="1831:40" pos:end="1831:42">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1833:13" pos:end="1833:18">break;</break>

        <default pos:start="1835:9" pos:end="1835:16">default:</default>

            <return pos:start="1837:13" pos:end="1837:21">return <expr pos:start="1837:20" pos:end="1837:20"><literal type="number" pos:start="1837:20" pos:end="1837:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1841:9" pos:end="1841:39"><expr pos:start="1841:9" pos:end="1841:38"><call pos:start="1841:9" pos:end="1841:38"><name pos:start="1841:9" pos:end="1841:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1841:34" pos:end="1841:38">(<argument pos:start="1841:35" pos:end="1841:37"><expr pos:start="1841:35" pos:end="1841:37"><name pos:start="1841:35" pos:end="1841:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1843:9" pos:end="1843:32"><expr pos:start="1843:9" pos:end="1843:31"><call pos:start="1843:9" pos:end="1843:31"><name pos:start="1843:9" pos:end="1843:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1843:30" pos:end="1843:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1845:9" pos:end="1845:32"><expr pos:start="1845:9" pos:end="1845:31"><call pos:start="1845:9" pos:end="1845:31"><name pos:start="1845:9" pos:end="1845:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1845:30" pos:end="1845:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1847:9" pos:end="1847:14">break;</break>

    <case pos:start="1849:5" pos:end="1849:15">case <expr pos:start="1849:10" pos:end="1849:14"><literal type="number" pos:start="1849:10" pos:end="1849:14">0x008</literal></expr>:</case> <case pos:start="1849:17" pos:end="1849:27">case <expr pos:start="1849:22" pos:end="1849:26"><literal type="number" pos:start="1849:22" pos:end="1849:26">0x108</literal></expr>:</case> <case pos:start="1849:29" pos:end="1849:39">case <expr pos:start="1849:34" pos:end="1849:38"><literal type="number" pos:start="1849:34" pos:end="1849:38">0x208</literal></expr>:</case> <case pos:start="1849:41" pos:end="1849:51">case <expr pos:start="1849:46" pos:end="1849:50"><literal type="number" pos:start="1849:46" pos:end="1849:50">0x308</literal></expr>:</case>	<comment type="block" pos:start="1849:57" pos:end="1849:67">/* WPACK */</comment>

    <case pos:start="1851:5" pos:end="1851:15">case <expr pos:start="1851:10" pos:end="1851:14"><literal type="number" pos:start="1851:10" pos:end="1851:14">0x408</literal></expr>:</case> <case pos:start="1851:17" pos:end="1851:27">case <expr pos:start="1851:22" pos:end="1851:26"><literal type="number" pos:start="1851:22" pos:end="1851:26">0x508</literal></expr>:</case> <case pos:start="1851:29" pos:end="1851:39">case <expr pos:start="1851:34" pos:end="1851:38"><literal type="number" pos:start="1851:34" pos:end="1851:38">0x608</literal></expr>:</case> <case pos:start="1851:41" pos:end="1851:51">case <expr pos:start="1851:46" pos:end="1851:50"><literal type="number" pos:start="1851:46" pos:end="1851:50">0x708</literal></expr>:</case>

    <case pos:start="1853:5" pos:end="1853:15">case <expr pos:start="1853:10" pos:end="1853:14"><literal type="number" pos:start="1853:10" pos:end="1853:14">0x808</literal></expr>:</case> <case pos:start="1853:17" pos:end="1853:27">case <expr pos:start="1853:22" pos:end="1853:26"><literal type="number" pos:start="1853:22" pos:end="1853:26">0x908</literal></expr>:</case> <case pos:start="1853:29" pos:end="1853:39">case <expr pos:start="1853:34" pos:end="1853:38"><literal type="number" pos:start="1853:34" pos:end="1853:38">0xa08</literal></expr>:</case> <case pos:start="1853:41" pos:end="1853:51">case <expr pos:start="1853:46" pos:end="1853:50"><literal type="number" pos:start="1853:46" pos:end="1853:50">0xb08</literal></expr>:</case>

    <case pos:start="1855:5" pos:end="1855:15">case <expr pos:start="1855:10" pos:end="1855:14"><literal type="number" pos:start="1855:10" pos:end="1855:14">0xc08</literal></expr>:</case> <case pos:start="1855:17" pos:end="1855:27">case <expr pos:start="1855:22" pos:end="1855:26"><literal type="number" pos:start="1855:22" pos:end="1855:26">0xd08</literal></expr>:</case> <case pos:start="1855:29" pos:end="1855:39">case <expr pos:start="1855:34" pos:end="1855:38"><literal type="number" pos:start="1855:34" pos:end="1855:38">0xe08</literal></expr>:</case> <case pos:start="1855:41" pos:end="1855:51">case <expr pos:start="1855:46" pos:end="1855:50"><literal type="number" pos:start="1855:46" pos:end="1855:50">0xf08</literal></expr>:</case>

        <if_stmt pos:start="1857:9" pos:end="1859:21"><if pos:start="1857:9" pos:end="1859:21">if <condition pos:start="1857:12" pos:end="1857:59">(<expr pos:start="1857:13" pos:end="1857:58"><operator pos:start="1857:13" pos:end="1857:13">!</operator><operator pos:start="1857:14" pos:end="1857:14">(</operator><name pos:start="1857:15" pos:end="1857:18">insn</name> <operator pos:start="1857:20" pos:end="1857:20">&amp;</operator> <operator pos:start="1857:22" pos:end="1857:22">(</operator><literal type="number" pos:start="1857:23" pos:end="1857:23">1</literal> <operator pos:start="1857:25" pos:end="1857:26">&lt;&lt;</operator> <literal type="number" pos:start="1857:28" pos:end="1857:29">20</literal><operator pos:start="1857:30" pos:end="1857:30">)</operator><operator pos:start="1857:31" pos:end="1857:31">)</operator> <operator pos:start="1857:33" pos:end="1857:34">||</operator> <operator pos:start="1857:36" pos:end="1857:36">(</operator><operator pos:start="1857:37" pos:end="1857:37">(</operator><name pos:start="1857:38" pos:end="1857:41">insn</name> <operator pos:start="1857:43" pos:end="1857:44">&gt;&gt;</operator> <literal type="number" pos:start="1857:46" pos:end="1857:47">22</literal><operator pos:start="1857:48" pos:end="1857:48">)</operator> <operator pos:start="1857:50" pos:end="1857:50">&amp;</operator> <literal type="number" pos:start="1857:52" pos:end="1857:52">3</literal><operator pos:start="1857:53" pos:end="1857:53">)</operator> <operator pos:start="1857:55" pos:end="1857:56">==</operator> <literal type="number" pos:start="1857:58" pos:end="1857:58">0</literal></expr>)</condition><block type="pseudo" pos:start="1859:13" pos:end="1859:21"><block_content pos:start="1859:13" pos:end="1859:21">

            <return pos:start="1859:13" pos:end="1859:21">return <expr pos:start="1859:20" pos:end="1859:20"><literal type="number" pos:start="1859:20" pos:end="1859:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1861:9" pos:end="1861:33"><expr pos:start="1861:9" pos:end="1861:32"><name pos:start="1861:9" pos:end="1861:11">wrd</name> <operator pos:start="1861:13" pos:end="1861:13">=</operator> <operator pos:start="1861:15" pos:end="1861:15">(</operator><name pos:start="1861:16" pos:end="1861:19">insn</name> <operator pos:start="1861:21" pos:end="1861:22">&gt;&gt;</operator> <literal type="number" pos:start="1861:24" pos:end="1861:25">12</literal><operator pos:start="1861:26" pos:end="1861:26">)</operator> <operator pos:start="1861:28" pos:end="1861:28">&amp;</operator> <literal type="number" pos:start="1861:30" pos:end="1861:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1863:9" pos:end="1863:33"><expr pos:start="1863:9" pos:end="1863:32"><name pos:start="1863:9" pos:end="1863:11">rd0</name> <operator pos:start="1863:13" pos:end="1863:13">=</operator> <operator pos:start="1863:15" pos:end="1863:15">(</operator><name pos:start="1863:16" pos:end="1863:19">insn</name> <operator pos:start="1863:21" pos:end="1863:22">&gt;&gt;</operator> <literal type="number" pos:start="1863:24" pos:end="1863:25">16</literal><operator pos:start="1863:26" pos:end="1863:26">)</operator> <operator pos:start="1863:28" pos:end="1863:28">&amp;</operator> <literal type="number" pos:start="1863:30" pos:end="1863:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1865:9" pos:end="1865:32"><expr pos:start="1865:9" pos:end="1865:31"><name pos:start="1865:9" pos:end="1865:11">rd1</name> <operator pos:start="1865:13" pos:end="1865:13">=</operator> <operator pos:start="1865:15" pos:end="1865:15">(</operator><name pos:start="1865:16" pos:end="1865:19">insn</name> <operator pos:start="1865:21" pos:end="1865:22">&gt;&gt;</operator> <literal type="number" pos:start="1865:24" pos:end="1865:24">0</literal><operator pos:start="1865:25" pos:end="1865:25">)</operator> <operator pos:start="1865:27" pos:end="1865:27">&amp;</operator> <literal type="number" pos:start="1865:29" pos:end="1865:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1867:9" pos:end="1867:39"><expr pos:start="1867:9" pos:end="1867:38"><call pos:start="1867:9" pos:end="1867:38"><name pos:start="1867:9" pos:end="1867:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1867:34" pos:end="1867:38">(<argument pos:start="1867:35" pos:end="1867:37"><expr pos:start="1867:35" pos:end="1867:37"><name pos:start="1867:35" pos:end="1867:37">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1869:9" pos:end="1907:9">switch <condition pos:start="1869:16" pos:end="1869:33">(<expr pos:start="1869:17" pos:end="1869:32"><operator pos:start="1869:17" pos:end="1869:17">(</operator><name pos:start="1869:18" pos:end="1869:21">insn</name> <operator pos:start="1869:23" pos:end="1869:24">&gt;&gt;</operator> <literal type="number" pos:start="1869:26" pos:end="1869:27">22</literal><operator pos:start="1869:28" pos:end="1869:28">)</operator> <operator pos:start="1869:30" pos:end="1869:30">&amp;</operator> <literal type="number" pos:start="1869:32" pos:end="1869:32">3</literal></expr>)</condition> <block pos:start="1869:35" pos:end="1907:9">{<block_content pos:start="1871:9" pos:end="1905:18">

        <case pos:start="1871:9" pos:end="1871:15">case <expr pos:start="1871:14" pos:end="1871:14"><literal type="number" pos:start="1871:14" pos:end="1871:14">1</literal></expr>:</case>

            <if_stmt pos:start="1873:13" pos:end="1879:49"><if pos:start="1873:13" pos:end="1875:49">if <condition pos:start="1873:16" pos:end="1873:33">(<expr pos:start="1873:17" pos:end="1873:32"><name pos:start="1873:17" pos:end="1873:20">insn</name> <operator pos:start="1873:22" pos:end="1873:22">&amp;</operator> <operator pos:start="1873:24" pos:end="1873:24">(</operator><literal type="number" pos:start="1873:25" pos:end="1873:25">1</literal> <operator pos:start="1873:27" pos:end="1873:28">&lt;&lt;</operator> <literal type="number" pos:start="1873:30" pos:end="1873:31">21</literal><operator pos:start="1873:32" pos:end="1873:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1875:17" pos:end="1875:49"><block_content pos:start="1875:17" pos:end="1875:49">

                <expr_stmt pos:start="1875:17" pos:end="1875:49"><expr pos:start="1875:17" pos:end="1875:48"><call pos:start="1875:17" pos:end="1875:48"><name pos:start="1875:17" pos:end="1875:43">gen_op_iwmmxt_packsw_M0_wRn</name><argument_list pos:start="1875:44" pos:end="1875:48">(<argument pos:start="1875:45" pos:end="1875:47"><expr pos:start="1875:45" pos:end="1875:47"><name pos:start="1875:45" pos:end="1875:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1877:13" pos:end="1879:49">else<block type="pseudo" pos:start="1879:17" pos:end="1879:49"><block_content pos:start="1879:17" pos:end="1879:49">

                <expr_stmt pos:start="1879:17" pos:end="1879:49"><expr pos:start="1879:17" pos:end="1879:48"><call pos:start="1879:17" pos:end="1879:48"><name pos:start="1879:17" pos:end="1879:43">gen_op_iwmmxt_packuw_M0_wRn</name><argument_list pos:start="1879:44" pos:end="1879:48">(<argument pos:start="1879:45" pos:end="1879:47"><expr pos:start="1879:45" pos:end="1879:47"><name pos:start="1879:45" pos:end="1879:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1881:13" pos:end="1881:18">break;</break>

        <case pos:start="1883:9" pos:end="1883:15">case <expr pos:start="1883:14" pos:end="1883:14"><literal type="number" pos:start="1883:14" pos:end="1883:14">2</literal></expr>:</case>

            <if_stmt pos:start="1885:13" pos:end="1891:49"><if pos:start="1885:13" pos:end="1887:49">if <condition pos:start="1885:16" pos:end="1885:33">(<expr pos:start="1885:17" pos:end="1885:32"><name pos:start="1885:17" pos:end="1885:20">insn</name> <operator pos:start="1885:22" pos:end="1885:22">&amp;</operator> <operator pos:start="1885:24" pos:end="1885:24">(</operator><literal type="number" pos:start="1885:25" pos:end="1885:25">1</literal> <operator pos:start="1885:27" pos:end="1885:28">&lt;&lt;</operator> <literal type="number" pos:start="1885:30" pos:end="1885:31">21</literal><operator pos:start="1885:32" pos:end="1885:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1887:17" pos:end="1887:49"><block_content pos:start="1887:17" pos:end="1887:49">

                <expr_stmt pos:start="1887:17" pos:end="1887:49"><expr pos:start="1887:17" pos:end="1887:48"><call pos:start="1887:17" pos:end="1887:48"><name pos:start="1887:17" pos:end="1887:43">gen_op_iwmmxt_packsl_M0_wRn</name><argument_list pos:start="1887:44" pos:end="1887:48">(<argument pos:start="1887:45" pos:end="1887:47"><expr pos:start="1887:45" pos:end="1887:47"><name pos:start="1887:45" pos:end="1887:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1889:13" pos:end="1891:49">else<block type="pseudo" pos:start="1891:17" pos:end="1891:49"><block_content pos:start="1891:17" pos:end="1891:49">

                <expr_stmt pos:start="1891:17" pos:end="1891:49"><expr pos:start="1891:17" pos:end="1891:48"><call pos:start="1891:17" pos:end="1891:48"><name pos:start="1891:17" pos:end="1891:43">gen_op_iwmmxt_packul_M0_wRn</name><argument_list pos:start="1891:44" pos:end="1891:48">(<argument pos:start="1891:45" pos:end="1891:47"><expr pos:start="1891:45" pos:end="1891:47"><name pos:start="1891:45" pos:end="1891:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1893:13" pos:end="1893:18">break;</break>

        <case pos:start="1895:9" pos:end="1895:15">case <expr pos:start="1895:14" pos:end="1895:14"><literal type="number" pos:start="1895:14" pos:end="1895:14">3</literal></expr>:</case>

            <if_stmt pos:start="1897:13" pos:end="1903:49"><if pos:start="1897:13" pos:end="1899:49">if <condition pos:start="1897:16" pos:end="1897:33">(<expr pos:start="1897:17" pos:end="1897:32"><name pos:start="1897:17" pos:end="1897:20">insn</name> <operator pos:start="1897:22" pos:end="1897:22">&amp;</operator> <operator pos:start="1897:24" pos:end="1897:24">(</operator><literal type="number" pos:start="1897:25" pos:end="1897:25">1</literal> <operator pos:start="1897:27" pos:end="1897:28">&lt;&lt;</operator> <literal type="number" pos:start="1897:30" pos:end="1897:31">21</literal><operator pos:start="1897:32" pos:end="1897:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1899:17" pos:end="1899:49"><block_content pos:start="1899:17" pos:end="1899:49">

                <expr_stmt pos:start="1899:17" pos:end="1899:49"><expr pos:start="1899:17" pos:end="1899:48"><call pos:start="1899:17" pos:end="1899:48"><name pos:start="1899:17" pos:end="1899:43">gen_op_iwmmxt_packsq_M0_wRn</name><argument_list pos:start="1899:44" pos:end="1899:48">(<argument pos:start="1899:45" pos:end="1899:47"><expr pos:start="1899:45" pos:end="1899:47"><name pos:start="1899:45" pos:end="1899:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1901:13" pos:end="1903:49">else<block type="pseudo" pos:start="1903:17" pos:end="1903:49"><block_content pos:start="1903:17" pos:end="1903:49">

                <expr_stmt pos:start="1903:17" pos:end="1903:49"><expr pos:start="1903:17" pos:end="1903:48"><call pos:start="1903:17" pos:end="1903:48"><name pos:start="1903:17" pos:end="1903:43">gen_op_iwmmxt_packuq_M0_wRn</name><argument_list pos:start="1903:44" pos:end="1903:48">(<argument pos:start="1903:45" pos:end="1903:47"><expr pos:start="1903:45" pos:end="1903:47"><name pos:start="1903:45" pos:end="1903:47">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="1905:13" pos:end="1905:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1909:9" pos:end="1909:39"><expr pos:start="1909:9" pos:end="1909:38"><call pos:start="1909:9" pos:end="1909:38"><name pos:start="1909:9" pos:end="1909:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1909:34" pos:end="1909:38">(<argument pos:start="1909:35" pos:end="1909:37"><expr pos:start="1909:35" pos:end="1909:37"><name pos:start="1909:35" pos:end="1909:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1911:9" pos:end="1911:32"><expr pos:start="1911:9" pos:end="1911:31"><call pos:start="1911:9" pos:end="1911:31"><name pos:start="1911:9" pos:end="1911:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1911:30" pos:end="1911:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1913:9" pos:end="1913:32"><expr pos:start="1913:9" pos:end="1913:31"><call pos:start="1913:9" pos:end="1913:31"><name pos:start="1913:9" pos:end="1913:29">gen_op_iwmmxt_set_cup</name><argument_list pos:start="1913:30" pos:end="1913:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1915:9" pos:end="1915:14">break;</break>

    <case pos:start="1917:5" pos:end="1917:15">case <expr pos:start="1917:10" pos:end="1917:14"><literal type="number" pos:start="1917:10" pos:end="1917:14">0x201</literal></expr>:</case> <case pos:start="1917:17" pos:end="1917:27">case <expr pos:start="1917:22" pos:end="1917:26"><literal type="number" pos:start="1917:22" pos:end="1917:26">0x203</literal></expr>:</case> <case pos:start="1917:29" pos:end="1917:39">case <expr pos:start="1917:34" pos:end="1917:38"><literal type="number" pos:start="1917:34" pos:end="1917:38">0x205</literal></expr>:</case> <case pos:start="1917:41" pos:end="1917:51">case <expr pos:start="1917:46" pos:end="1917:50"><literal type="number" pos:start="1917:46" pos:end="1917:50">0x207</literal></expr>:</case>

    <case pos:start="1919:5" pos:end="1919:15">case <expr pos:start="1919:10" pos:end="1919:14"><literal type="number" pos:start="1919:10" pos:end="1919:14">0x209</literal></expr>:</case> <case pos:start="1919:17" pos:end="1919:27">case <expr pos:start="1919:22" pos:end="1919:26"><literal type="number" pos:start="1919:22" pos:end="1919:26">0x20b</literal></expr>:</case> <case pos:start="1919:29" pos:end="1919:39">case <expr pos:start="1919:34" pos:end="1919:38"><literal type="number" pos:start="1919:34" pos:end="1919:38">0x20d</literal></expr>:</case> <case pos:start="1919:41" pos:end="1919:51">case <expr pos:start="1919:46" pos:end="1919:50"><literal type="number" pos:start="1919:46" pos:end="1919:50">0x20f</literal></expr>:</case>

    <case pos:start="1921:5" pos:end="1921:15">case <expr pos:start="1921:10" pos:end="1921:14"><literal type="number" pos:start="1921:10" pos:end="1921:14">0x211</literal></expr>:</case> <case pos:start="1921:17" pos:end="1921:27">case <expr pos:start="1921:22" pos:end="1921:26"><literal type="number" pos:start="1921:22" pos:end="1921:26">0x213</literal></expr>:</case> <case pos:start="1921:29" pos:end="1921:39">case <expr pos:start="1921:34" pos:end="1921:38"><literal type="number" pos:start="1921:34" pos:end="1921:38">0x215</literal></expr>:</case> <case pos:start="1921:41" pos:end="1921:51">case <expr pos:start="1921:46" pos:end="1921:50"><literal type="number" pos:start="1921:46" pos:end="1921:50">0x217</literal></expr>:</case>

    <case pos:start="1923:5" pos:end="1923:15">case <expr pos:start="1923:10" pos:end="1923:14"><literal type="number" pos:start="1923:10" pos:end="1923:14">0x219</literal></expr>:</case> <case pos:start="1923:17" pos:end="1923:27">case <expr pos:start="1923:22" pos:end="1923:26"><literal type="number" pos:start="1923:22" pos:end="1923:26">0x21b</literal></expr>:</case> <case pos:start="1923:29" pos:end="1923:39">case <expr pos:start="1923:34" pos:end="1923:38"><literal type="number" pos:start="1923:34" pos:end="1923:38">0x21d</literal></expr>:</case> <case pos:start="1923:41" pos:end="1923:51">case <expr pos:start="1923:46" pos:end="1923:50"><literal type="number" pos:start="1923:46" pos:end="1923:50">0x21f</literal></expr>:</case>

        <expr_stmt pos:start="1925:9" pos:end="1925:32"><expr pos:start="1925:9" pos:end="1925:31"><name pos:start="1925:9" pos:end="1925:11">wrd</name> <operator pos:start="1925:13" pos:end="1925:13">=</operator> <operator pos:start="1925:15" pos:end="1925:15">(</operator><name pos:start="1925:16" pos:end="1925:19">insn</name> <operator pos:start="1925:21" pos:end="1925:22">&gt;&gt;</operator> <literal type="number" pos:start="1925:24" pos:end="1925:24">5</literal><operator pos:start="1925:25" pos:end="1925:25">)</operator> <operator pos:start="1925:27" pos:end="1925:27">&amp;</operator> <literal type="number" pos:start="1925:29" pos:end="1925:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1927:9" pos:end="1927:33"><expr pos:start="1927:9" pos:end="1927:32"><name pos:start="1927:9" pos:end="1927:11">rd0</name> <operator pos:start="1927:13" pos:end="1927:13">=</operator> <operator pos:start="1927:15" pos:end="1927:15">(</operator><name pos:start="1927:16" pos:end="1927:19">insn</name> <operator pos:start="1927:21" pos:end="1927:22">&gt;&gt;</operator> <literal type="number" pos:start="1927:24" pos:end="1927:25">12</literal><operator pos:start="1927:26" pos:end="1927:26">)</operator> <operator pos:start="1927:28" pos:end="1927:28">&amp;</operator> <literal type="number" pos:start="1927:30" pos:end="1927:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1929:9" pos:end="1929:32"><expr pos:start="1929:9" pos:end="1929:31"><name pos:start="1929:9" pos:end="1929:11">rd1</name> <operator pos:start="1929:13" pos:end="1929:13">=</operator> <operator pos:start="1929:15" pos:end="1929:15">(</operator><name pos:start="1929:16" pos:end="1929:19">insn</name> <operator pos:start="1929:21" pos:end="1929:22">&gt;&gt;</operator> <literal type="number" pos:start="1929:24" pos:end="1929:24">0</literal><operator pos:start="1929:25" pos:end="1929:25">)</operator> <operator pos:start="1929:27" pos:end="1929:27">&amp;</operator> <literal type="number" pos:start="1929:29" pos:end="1929:31">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="1931:9" pos:end="1933:21"><if pos:start="1931:9" pos:end="1933:21">if <condition pos:start="1931:12" pos:end="1931:37">(<expr pos:start="1931:13" pos:end="1931:36"><name pos:start="1931:13" pos:end="1931:15">rd0</name> <operator pos:start="1931:17" pos:end="1931:18">==</operator> <literal type="number" pos:start="1931:20" pos:end="1931:22">0xf</literal> <operator pos:start="1931:24" pos:end="1931:25">||</operator> <name pos:start="1931:27" pos:end="1931:29">rd1</name> <operator pos:start="1931:31" pos:end="1931:32">==</operator> <literal type="number" pos:start="1931:34" pos:end="1931:36">0xf</literal></expr>)</condition><block type="pseudo" pos:start="1933:13" pos:end="1933:21"><block_content pos:start="1933:13" pos:end="1933:21">

            <return pos:start="1933:13" pos:end="1933:21">return <expr pos:start="1933:20" pos:end="1933:20"><literal type="number" pos:start="1933:20" pos:end="1933:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1935:9" pos:end="1935:39"><expr pos:start="1935:9" pos:end="1935:38"><call pos:start="1935:9" pos:end="1935:38"><name pos:start="1935:9" pos:end="1935:33">gen_op_iwmmxt_movq_M0_wRn</name><argument_list pos:start="1935:34" pos:end="1935:38">(<argument pos:start="1935:35" pos:end="1935:37"><expr pos:start="1935:35" pos:end="1935:37"><name pos:start="1935:35" pos:end="1935:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1937:9" pos:end="1937:31"><expr pos:start="1937:9" pos:end="1937:30"><name pos:start="1937:9" pos:end="1937:11">tmp</name> <operator pos:start="1937:13" pos:end="1937:13">=</operator> <call pos:start="1937:15" pos:end="1937:30"><name pos:start="1937:15" pos:end="1937:22">load_reg</name><argument_list pos:start="1937:23" pos:end="1937:30">(<argument pos:start="1937:24" pos:end="1937:24"><expr pos:start="1937:24" pos:end="1937:24"><name pos:start="1937:24" pos:end="1937:24">s</name></expr></argument>, <argument pos:start="1937:27" pos:end="1937:29"><expr pos:start="1937:27" pos:end="1937:29"><name pos:start="1937:27" pos:end="1937:29">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1939:9" pos:end="1939:32"><expr pos:start="1939:9" pos:end="1939:31"><name pos:start="1939:9" pos:end="1939:12">tmp2</name> <operator pos:start="1939:14" pos:end="1939:14">=</operator> <call pos:start="1939:16" pos:end="1939:31"><name pos:start="1939:16" pos:end="1939:23">load_reg</name><argument_list pos:start="1939:24" pos:end="1939:31">(<argument pos:start="1939:25" pos:end="1939:25"><expr pos:start="1939:25" pos:end="1939:25"><name pos:start="1939:25" pos:end="1939:25">s</name></expr></argument>, <argument pos:start="1939:28" pos:end="1939:30"><expr pos:start="1939:28" pos:end="1939:30"><name pos:start="1939:28" pos:end="1939:30">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1941:9" pos:end="1977:9">switch <condition pos:start="1941:16" pos:end="1941:35">(<expr pos:start="1941:17" pos:end="1941:34"><operator pos:start="1941:17" pos:end="1941:17">(</operator><name pos:start="1941:18" pos:end="1941:21">insn</name> <operator pos:start="1941:23" pos:end="1941:24">&gt;&gt;</operator> <literal type="number" pos:start="1941:26" pos:end="1941:27">16</literal><operator pos:start="1941:28" pos:end="1941:28">)</operator> <operator pos:start="1941:30" pos:end="1941:30">&amp;</operator> <literal type="number" pos:start="1941:32" pos:end="1941:34">0xf</literal></expr>)</condition> <block pos:start="1941:37" pos:end="1977:9">{<block_content pos:start="1943:9" pos:end="1975:21">

        <case pos:start="1943:9" pos:end="1943:17">case <expr pos:start="1943:14" pos:end="1943:16"><literal type="number" pos:start="1943:14" pos:end="1943:16">0x0</literal></expr>:</case>					<comment type="block" pos:start="1943:57" pos:end="1943:66">/* TMIA */</comment>

            <expr_stmt pos:start="1945:13" pos:end="1945:66"><expr pos:start="1945:13" pos:end="1945:65"><call pos:start="1945:13" pos:end="1945:65"><name pos:start="1945:13" pos:end="1945:38">gen_helper_iwmmxt_muladdsl</name><argument_list pos:start="1945:39" pos:end="1945:65">(<argument pos:start="1945:40" pos:end="1945:45"><expr pos:start="1945:40" pos:end="1945:45"><name pos:start="1945:40" pos:end="1945:45">cpu_M0</name></expr></argument>, <argument pos:start="1945:48" pos:end="1945:53"><expr pos:start="1945:48" pos:end="1945:53"><name pos:start="1945:48" pos:end="1945:53">cpu_M0</name></expr></argument>, <argument pos:start="1945:56" pos:end="1945:58"><expr pos:start="1945:56" pos:end="1945:58"><name pos:start="1945:56" pos:end="1945:58">tmp</name></expr></argument>, <argument pos:start="1945:61" pos:end="1945:64"><expr pos:start="1945:61" pos:end="1945:64"><name pos:start="1945:61" pos:end="1945:64">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1947:13" pos:end="1947:18">break;</break>

        <case pos:start="1949:9" pos:end="1949:17">case <expr pos:start="1949:14" pos:end="1949:16"><literal type="number" pos:start="1949:14" pos:end="1949:16">0x8</literal></expr>:</case>					<comment type="block" pos:start="1949:57" pos:end="1949:68">/* TMIAPH */</comment>

            <expr_stmt pos:start="1951:13" pos:end="1951:66"><expr pos:start="1951:13" pos:end="1951:65"><call pos:start="1951:13" pos:end="1951:65"><name pos:start="1951:13" pos:end="1951:38">gen_helper_iwmmxt_muladdsw</name><argument_list pos:start="1951:39" pos:end="1951:65">(<argument pos:start="1951:40" pos:end="1951:45"><expr pos:start="1951:40" pos:end="1951:45"><name pos:start="1951:40" pos:end="1951:45">cpu_M0</name></expr></argument>, <argument pos:start="1951:48" pos:end="1951:53"><expr pos:start="1951:48" pos:end="1951:53"><name pos:start="1951:48" pos:end="1951:53">cpu_M0</name></expr></argument>, <argument pos:start="1951:56" pos:end="1951:58"><expr pos:start="1951:56" pos:end="1951:58"><name pos:start="1951:56" pos:end="1951:58">tmp</name></expr></argument>, <argument pos:start="1951:61" pos:end="1951:64"><expr pos:start="1951:61" pos:end="1951:64"><name pos:start="1951:61" pos:end="1951:64">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1953:13" pos:end="1953:18">break;</break>

        <case pos:start="1955:9" pos:end="1955:17">case <expr pos:start="1955:14" pos:end="1955:16"><literal type="number" pos:start="1955:14" pos:end="1955:16">0xc</literal></expr>:</case> <case pos:start="1955:19" pos:end="1955:27">case <expr pos:start="1955:24" pos:end="1955:26"><literal type="number" pos:start="1955:24" pos:end="1955:26">0xd</literal></expr>:</case> <case pos:start="1955:29" pos:end="1955:37">case <expr pos:start="1955:34" pos:end="1955:36"><literal type="number" pos:start="1955:34" pos:end="1955:36">0xe</literal></expr>:</case> <case pos:start="1955:39" pos:end="1955:47">case <expr pos:start="1955:44" pos:end="1955:46"><literal type="number" pos:start="1955:44" pos:end="1955:46">0xf</literal></expr>:</case>		<comment type="block" pos:start="1955:57" pos:end="1955:68">/* TMIAxy */</comment>

            <if_stmt pos:start="1957:13" pos:end="1959:47"><if pos:start="1957:13" pos:end="1959:47">if <condition pos:start="1957:16" pos:end="1957:33">(<expr pos:start="1957:17" pos:end="1957:32"><name pos:start="1957:17" pos:end="1957:20">insn</name> <operator pos:start="1957:22" pos:end="1957:22">&amp;</operator> <operator pos:start="1957:24" pos:end="1957:24">(</operator><literal type="number" pos:start="1957:25" pos:end="1957:25">1</literal> <operator pos:start="1957:27" pos:end="1957:28">&lt;&lt;</operator> <literal type="number" pos:start="1957:30" pos:end="1957:31">16</literal><operator pos:start="1957:32" pos:end="1957:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1959:17" pos:end="1959:47"><block_content pos:start="1959:17" pos:end="1959:47">

                <expr_stmt pos:start="1959:17" pos:end="1959:47"><expr pos:start="1959:17" pos:end="1959:46"><call pos:start="1959:17" pos:end="1959:46"><name pos:start="1959:17" pos:end="1959:32">tcg_gen_shri_i32</name><argument_list pos:start="1959:33" pos:end="1959:46">(<argument pos:start="1959:34" pos:end="1959:36"><expr pos:start="1959:34" pos:end="1959:36"><name pos:start="1959:34" pos:end="1959:36">tmp</name></expr></argument>, <argument pos:start="1959:39" pos:end="1959:41"><expr pos:start="1959:39" pos:end="1959:41"><name pos:start="1959:39" pos:end="1959:41">tmp</name></expr></argument>, <argument pos:start="1959:44" pos:end="1959:45"><expr pos:start="1959:44" pos:end="1959:45"><literal type="number" pos:start="1959:44" pos:end="1959:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1961:13" pos:end="1963:49"><if pos:start="1961:13" pos:end="1963:49">if <condition pos:start="1961:16" pos:end="1961:33">(<expr pos:start="1961:17" pos:end="1961:32"><name pos:start="1961:17" pos:end="1961:20">insn</name> <operator pos:start="1961:22" pos:end="1961:22">&amp;</operator> <operator pos:start="1961:24" pos:end="1961:24">(</operator><literal type="number" pos:start="1961:25" pos:end="1961:25">1</literal> <operator pos:start="1961:27" pos:end="1961:28">&lt;&lt;</operator> <literal type="number" pos:start="1961:30" pos:end="1961:31">17</literal><operator pos:start="1961:32" pos:end="1961:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1963:17" pos:end="1963:49"><block_content pos:start="1963:17" pos:end="1963:49">

                <expr_stmt pos:start="1963:17" pos:end="1963:49"><expr pos:start="1963:17" pos:end="1963:48"><call pos:start="1963:17" pos:end="1963:48"><name pos:start="1963:17" pos:end="1963:32">tcg_gen_shri_i32</name><argument_list pos:start="1963:33" pos:end="1963:48">(<argument pos:start="1963:34" pos:end="1963:37"><expr pos:start="1963:34" pos:end="1963:37"><name pos:start="1963:34" pos:end="1963:37">tmp2</name></expr></argument>, <argument pos:start="1963:40" pos:end="1963:43"><expr pos:start="1963:40" pos:end="1963:43"><name pos:start="1963:40" pos:end="1963:43">tmp2</name></expr></argument>, <argument pos:start="1963:46" pos:end="1963:47"><expr pos:start="1963:46" pos:end="1963:47"><literal type="number" pos:start="1963:46" pos:end="1963:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1965:13" pos:end="1965:67"><expr pos:start="1965:13" pos:end="1965:66"><call pos:start="1965:13" pos:end="1965:66"><name pos:start="1965:13" pos:end="1965:39">gen_helper_iwmmxt_muladdswl</name><argument_list pos:start="1965:40" pos:end="1965:66">(<argument pos:start="1965:41" pos:end="1965:46"><expr pos:start="1965:41" pos:end="1965:46"><name pos:start="1965:41" pos:end="1965:46">cpu_M0</name></expr></argument>, <argument pos:start="1965:49" pos:end="1965:54"><expr pos:start="1965:49" pos:end="1965:54"><name pos:start="1965:49" pos:end="1965:54">cpu_M0</name></expr></argument>, <argument pos:start="1965:57" pos:end="1965:59"><expr pos:start="1965:57" pos:end="1965:59"><name pos:start="1965:57" pos:end="1965:59">tmp</name></expr></argument>, <argument pos:start="1965:62" pos:end="1965:65"><expr pos:start="1965:62" pos:end="1965:65"><name pos:start="1965:62" pos:end="1965:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1967:13" pos:end="1967:18">break;</break>

        <default pos:start="1969:9" pos:end="1969:16">default:</default>

            <expr_stmt pos:start="1971:13" pos:end="1971:27"><expr pos:start="1971:13" pos:end="1971:26"><call pos:start="1971:13" pos:end="1971:26"><name pos:start="1971:13" pos:end="1971:20">dead_tmp</name><argument_list pos:start="1971:21" pos:end="1971:26">(<argument pos:start="1971:22" pos:end="1971:25"><expr pos:start="1971:22" pos:end="1971:25"><name pos:start="1971:22" pos:end="1971:25">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1973:13" pos:end="1973:26"><expr pos:start="1973:13" pos:end="1973:25"><call pos:start="1973:13" pos:end="1973:25"><name pos:start="1973:13" pos:end="1973:20">dead_tmp</name><argument_list pos:start="1973:21" pos:end="1973:25">(<argument pos:start="1973:22" pos:end="1973:24"><expr pos:start="1973:22" pos:end="1973:24"><name pos:start="1973:22" pos:end="1973:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1975:13" pos:end="1975:21">return <expr pos:start="1975:20" pos:end="1975:20"><literal type="number" pos:start="1975:20" pos:end="1975:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="1979:9" pos:end="1979:23"><expr pos:start="1979:9" pos:end="1979:22"><call pos:start="1979:9" pos:end="1979:22"><name pos:start="1979:9" pos:end="1979:16">dead_tmp</name><argument_list pos:start="1979:17" pos:end="1979:22">(<argument pos:start="1979:18" pos:end="1979:21"><expr pos:start="1979:18" pos:end="1979:21"><name pos:start="1979:18" pos:end="1979:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1981:9" pos:end="1981:22"><expr pos:start="1981:9" pos:end="1981:21"><call pos:start="1981:9" pos:end="1981:21"><name pos:start="1981:9" pos:end="1981:16">dead_tmp</name><argument_list pos:start="1981:17" pos:end="1981:21">(<argument pos:start="1981:18" pos:end="1981:20"><expr pos:start="1981:18" pos:end="1981:20"><name pos:start="1981:18" pos:end="1981:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1983:9" pos:end="1983:39"><expr pos:start="1983:9" pos:end="1983:38"><call pos:start="1983:9" pos:end="1983:38"><name pos:start="1983:9" pos:end="1983:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="1983:34" pos:end="1983:38">(<argument pos:start="1983:35" pos:end="1983:37"><expr pos:start="1983:35" pos:end="1983:37"><name pos:start="1983:35" pos:end="1983:37">wrd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1985:9" pos:end="1985:32"><expr pos:start="1985:9" pos:end="1985:31"><call pos:start="1985:9" pos:end="1985:31"><name pos:start="1985:9" pos:end="1985:29">gen_op_iwmmxt_set_mup</name><argument_list pos:start="1985:30" pos:end="1985:31">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1987:9" pos:end="1987:14">break;</break>

    <default pos:start="1989:5" pos:end="1989:12">default:</default>

        <return pos:start="1991:9" pos:end="1991:17">return <expr pos:start="1991:16" pos:end="1991:16"><literal type="number" pos:start="1991:16" pos:end="1991:16">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <return pos:start="1997:5" pos:end="1997:13">return <expr pos:start="1997:12" pos:end="1997:12"><literal type="number" pos:start="1997:12" pos:end="1997:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
