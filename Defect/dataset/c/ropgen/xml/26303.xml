<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26303.c" pos:tabs="8"><function pos:start="1:1" pos:end="1483:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_h264_decode_slice_header</name><parameter_list pos:start="1:32" pos:end="1:69">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">H264Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:64">H264SliceContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">sl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1483:1">{<block_content pos:start="5:5" pos:end="1481:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:34">first_mb_in_slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">slice_type</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:32">tmp</name></decl>, <decl pos:start="11:35" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:35" pos:end="11:35">i</name></decl>, <decl pos:start="11:38" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:38" pos:end="11:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">last_pic_structure</name></decl>, <decl pos:start="13:29" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:46">last_pic_droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">must_reinit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">needs_reinit</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">field_pic_flag</name></decl>, <decl pos:start="19:25" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:41">bottom_field_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:62"><decl pos:start="21:5" pos:end="21:61"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">first_slice</name> <init pos:start="21:21" pos:end="21:61">= <expr pos:start="21:23" pos:end="21:61"><name pos:start="21:23" pos:end="21:24">sl</name> <operator pos:start="21:26" pos:end="21:27">==</operator> <name pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:29">h</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:40">slice_ctx</name></name> <operator pos:start="21:42" pos:end="21:43">&amp;&amp;</operator> <operator pos:start="21:45" pos:end="21:45">!</operator><name pos:start="21:46" pos:end="21:61"><name pos:start="21:46" pos:end="21:46">h</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:61">current_slice</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:48"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">frame_num</name></decl>, <decl pos:start="23:20" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:20" pos:end="23:36">picture_structure</name></decl>, <decl pos:start="23:39" pos:end="23:47"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:39" pos:end="23:47">droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:13"><decl pos:start="25:5" pos:end="25:12"><type pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:7">PPS</name> <modifier pos:start="25:9" pos:end="25:9">*</modifier></type><name pos:start="25:10" pos:end="25:12">pps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">h</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">qpel_put</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:54"><name pos:start="29:19" pos:end="29:19">h</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:29">h264qpel</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:54">put_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">qpel_avg</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:54"><name pos:start="31:19" pos:end="31:19">h</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:29">h264qpel</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:54">avg_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:21">first_mb_in_slice</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:51"><name pos:start="35:25" pos:end="35:42">get_ue_golomb_long</name><argument_list pos:start="35:43" pos:end="35:51">(<argument pos:start="35:44" pos:end="35:50"><expr pos:start="35:44" pos:end="35:50"><operator pos:start="35:44" pos:end="35:44">&amp;</operator><name pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:46">sl</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="85:5"><if pos:start="39:5" pos:end="85:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:25">first_mb_in_slice</name> <operator pos:start="39:27" pos:end="39:28">==</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>)</condition> <block pos:start="39:33" pos:end="85:5">{<block_content pos:start="41:9" pos:end="83:9"> <comment type="line" pos:start="39:35" pos:end="39:74">// FIXME better field boundary detection</comment>

        <if_stmt pos:start="41:9" pos:end="67:9"><if pos:start="41:9" pos:end="67:9">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">h</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:28">current_slice</name></name></expr>)</condition> <block pos:start="41:31" pos:end="67:9">{<block_content pos:start="43:13" pos:end="65:43">

            <if_stmt pos:start="43:13" pos:end="65:43"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:69">(<expr pos:start="43:17" pos:end="43:68"><name pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:17">h</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:30">cur_pic_ptr</name></name> <operator pos:start="43:32" pos:end="43:33">&amp;&amp;</operator> <call pos:start="43:35" pos:end="43:50"><name pos:start="43:35" pos:end="43:47">FIELD_PICTURE</name><argument_list pos:start="43:48" pos:end="43:50">(<argument pos:start="43:49" pos:end="43:49"><expr pos:start="43:49" pos:end="43:49"><name pos:start="43:49" pos:end="43:49">h</name></expr></argument>)</argument_list></call> <operator pos:start="43:52" pos:end="43:53">&amp;&amp;</operator> <name pos:start="43:55" pos:end="43:68"><name pos:start="43:55" pos:end="43:55">h</name><operator pos:start="43:56" pos:end="43:57">-&gt;</operator><name pos:start="43:58" pos:end="43:68">first_field</name></name></expr>)</condition> <block pos:start="43:71" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:37">

                <expr_stmt pos:start="45:17" pos:end="45:44"><expr pos:start="45:17" pos:end="45:43"><call pos:start="45:17" pos:end="45:43"><name pos:start="45:17" pos:end="45:33">ff_h264_field_end</name><argument_list pos:start="45:34" pos:end="45:43">(<argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">h</name></expr></argument>, <argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><name pos:start="45:38" pos:end="45:39">sl</name></expr></argument>, <argument pos:start="45:42" pos:end="45:42"><expr pos:start="45:42" pos:end="45:42"><literal type="number" pos:start="45:42" pos:end="45:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:37"><expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:17">h</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:32">current_slice</name></name> <operator pos:start="47:34" pos:end="47:34">=</operator> <literal type="number" pos:start="47:36" pos:end="47:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="49:15" pos:end="63:13">else if <condition pos:start="49:23" pos:end="49:116">(<expr pos:start="49:24" pos:end="49:115"><name pos:start="49:24" pos:end="49:37"><name pos:start="49:24" pos:end="49:24">h</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:37">cur_pic_ptr</name></name> <operator pos:start="49:39" pos:end="49:40">&amp;&amp;</operator> <operator pos:start="49:42" pos:end="49:42">!</operator><call pos:start="49:43" pos:end="49:58"><name pos:start="49:43" pos:end="49:55">FIELD_PICTURE</name><argument_list pos:start="49:56" pos:end="49:58">(<argument pos:start="49:57" pos:end="49:57"><expr pos:start="49:57" pos:end="49:57"><name pos:start="49:57" pos:end="49:57">h</name></expr></argument>)</argument_list></call> <operator pos:start="49:60" pos:end="49:61">&amp;&amp;</operator> <operator pos:start="49:63" pos:end="49:63">!</operator><name pos:start="49:64" pos:end="49:77"><name pos:start="49:64" pos:end="49:64">h</name><operator pos:start="49:65" pos:end="49:66">-&gt;</operator><name pos:start="49:67" pos:end="49:77">first_field</name></name> <operator pos:start="49:79" pos:end="49:80">&amp;&amp;</operator> <name pos:start="49:82" pos:end="49:97"><name pos:start="49:82" pos:end="49:82">h</name><operator pos:start="49:83" pos:end="49:84">-&gt;</operator><name pos:start="49:85" pos:end="49:97">nal_unit_type</name></name>  <operator pos:start="49:100" pos:end="49:101">==</operator> <name pos:start="49:103" pos:end="49:115">NAL_IDR_SLICE</name></expr>)</condition> <block pos:start="49:118" pos:end="63:13">{<block_content pos:start="51:17" pos:end="61:38">

                <expr_stmt pos:start="51:17" pos:end="51:72"><expr pos:start="51:17" pos:end="51:71"><call pos:start="51:17" pos:end="51:71"><name pos:start="51:17" pos:end="51:22">av_log</name><argument_list pos:start="51:23" pos:end="51:71">(<argument pos:start="51:24" pos:end="51:24"><expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">h</name></expr></argument>, <argument pos:start="51:27" pos:end="51:40"><expr pos:start="51:27" pos:end="51:40"><name pos:start="51:27" pos:end="51:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="51:43" pos:end="51:70"><expr pos:start="51:43" pos:end="51:70"><literal type="string" pos:start="51:43" pos:end="51:70">"Broken frame packetizing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:44"><expr pos:start="53:17" pos:end="53:43"><call pos:start="53:17" pos:end="53:43"><name pos:start="53:17" pos:end="53:33">ff_h264_field_end</name><argument_list pos:start="53:34" pos:end="53:43">(<argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">h</name></expr></argument>, <argument pos:start="53:38" pos:end="53:39"><expr pos:start="53:38" pos:end="53:39"><name pos:start="53:38" pos:end="53:39">sl</name></expr></argument>, <argument pos:start="53:42" pos:end="53:42"><expr pos:start="53:42" pos:end="53:42"><literal type="number" pos:start="53:42" pos:end="53:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:37"><expr pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:17">h</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:32">current_slice</name></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:75"><expr pos:start="57:17" pos:end="57:74"><call pos:start="57:17" pos:end="57:74"><name pos:start="57:17" pos:end="57:41">ff_thread_report_progress</name><argument_list pos:start="57:42" pos:end="57:74">(<argument pos:start="57:43" pos:end="57:61"><expr pos:start="57:43" pos:end="57:61"><operator pos:start="57:43" pos:end="57:43">&amp;</operator><name pos:start="57:44" pos:end="57:61"><name pos:start="57:44" pos:end="57:44">h</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:57">cur_pic_ptr</name><operator pos:start="57:58" pos:end="57:59">-&gt;</operator><name pos:start="57:60" pos:end="57:61">tf</name></name></expr></argument>, <argument pos:start="57:64" pos:end="57:70"><expr pos:start="57:64" pos:end="57:70"><name pos:start="57:64" pos:end="57:70">INT_MAX</name></expr></argument>, <argument pos:start="57:73" pos:end="57:73"><expr pos:start="57:73" pos:end="57:73"><literal type="number" pos:start="57:73" pos:end="57:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:75"><expr pos:start="59:17" pos:end="59:74"><call pos:start="59:17" pos:end="59:74"><name pos:start="59:17" pos:end="59:41">ff_thread_report_progress</name><argument_list pos:start="59:42" pos:end="59:74">(<argument pos:start="59:43" pos:end="59:61"><expr pos:start="59:43" pos:end="59:61"><operator pos:start="59:43" pos:end="59:43">&amp;</operator><name pos:start="59:44" pos:end="59:61"><name pos:start="59:44" pos:end="59:44">h</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:57">cur_pic_ptr</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:61">tf</name></name></expr></argument>, <argument pos:start="59:64" pos:end="59:70"><expr pos:start="59:64" pos:end="59:70"><name pos:start="59:64" pos:end="59:70">INT_MAX</name></expr></argument>, <argument pos:start="59:73" pos:end="59:73"><expr pos:start="59:73" pos:end="59:73"><literal type="number" pos:start="59:73" pos:end="59:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:38"><expr pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:17">h</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:30">cur_pic_ptr</name></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:37">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="65:43">else<block type="pseudo" pos:start="65:17" pos:end="65:43"><block_content pos:start="65:17" pos:end="65:43">

                <return pos:start="65:17" pos:end="65:43">return <expr pos:start="65:24" pos:end="65:42"><name pos:start="65:24" pos:end="65:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="83:9"><if pos:start="71:9" pos:end="83:9">if <condition pos:start="71:12" pos:end="71:28">(<expr pos:start="71:13" pos:end="71:27"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:27"><name pos:start="71:14" pos:end="71:14">h</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:27">first_field</name></name></expr>)</condition> <block pos:start="71:30" pos:end="83:9">{<block_content pos:start="73:13" pos:end="81:34">

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:48">(<expr pos:start="73:17" pos:end="73:47"><name pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:17">h</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:30">cur_pic_ptr</name></name> <operator pos:start="73:32" pos:end="73:33">&amp;&amp;</operator> <operator pos:start="73:35" pos:end="73:35">!</operator><name pos:start="73:36" pos:end="73:47"><name pos:start="73:36" pos:end="73:36">h</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:47">droppable</name></name></expr>)</condition> <block pos:start="73:50" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:85">

                <expr_stmt pos:start="75:17" pos:end="77:85"><expr pos:start="75:17" pos:end="77:84"><call pos:start="75:17" pos:end="77:84"><name pos:start="75:17" pos:end="75:41">ff_thread_report_progress</name><argument_list pos:start="75:42" pos:end="77:84">(<argument pos:start="75:43" pos:end="75:61"><expr pos:start="75:43" pos:end="75:61"><operator pos:start="75:43" pos:end="75:43">&amp;</operator><name pos:start="75:44" pos:end="75:61"><name pos:start="75:44" pos:end="75:44">h</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:57">cur_pic_ptr</name><operator pos:start="75:58" pos:end="75:59">-&gt;</operator><name pos:start="75:60" pos:end="75:61">tf</name></name></expr></argument>, <argument pos:start="75:64" pos:end="75:70"><expr pos:start="75:64" pos:end="75:70"><name pos:start="75:64" pos:end="75:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="77:43" pos:end="77:83"><expr pos:start="77:43" pos:end="77:83"><name pos:start="77:43" pos:end="77:62"><name pos:start="77:43" pos:end="77:43">h</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:62">picture_structure</name></name> <operator pos:start="77:64" pos:end="77:65">==</operator> <name pos:start="77:67" pos:end="77:83">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:13">h</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:26">cur_pic_ptr</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:43"><expr pos:start="89:5" pos:end="89:42"><name pos:start="89:5" pos:end="89:14">slice_type</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:42"><name pos:start="89:18" pos:end="89:33">get_ue_golomb_31</name><argument_list pos:start="89:34" pos:end="89:42">(<argument pos:start="89:35" pos:end="89:41"><expr pos:start="89:35" pos:end="89:41"><operator pos:start="89:35" pos:end="89:35">&amp;</operator><name pos:start="89:36" pos:end="89:41"><name pos:start="89:36" pos:end="89:37">sl</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="101:5"><if pos:start="91:5" pos:end="101:5">if <condition pos:start="91:8" pos:end="91:23">(<expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:18">slice_type</name> <operator pos:start="91:20" pos:end="91:20">&gt;</operator> <literal type="number" pos:start="91:22" pos:end="91:22">9</literal></expr>)</condition> <block pos:start="91:25" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:35">

        <expr_stmt pos:start="93:9" pos:end="97:46"><expr pos:start="93:9" pos:end="97:45"><call pos:start="93:9" pos:end="97:45"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="97:45">(<argument pos:start="93:16" pos:end="93:23"><expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:16">h</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:23">avctx</name></name></expr></argument>, <argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="95:16" pos:end="95:48"><expr pos:start="95:16" pos:end="95:48"><literal type="string" pos:start="95:16" pos:end="95:48">"slice type %d too large at %d\n"</literal></expr></argument>,

               <argument pos:start="97:16" pos:end="97:25"><expr pos:start="97:16" pos:end="97:25"><name pos:start="97:16" pos:end="97:25">slice_type</name></expr></argument>, <argument pos:start="97:28" pos:end="97:44"><expr pos:start="97:28" pos:end="97:44"><name pos:start="97:28" pos:end="97:44">first_mb_in_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:35">return <expr pos:start="99:16" pos:end="99:34"><name pos:start="99:16" pos:end="99:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="111:33"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:23">(<expr pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:18">slice_type</name> <operator pos:start="103:20" pos:end="103:20">&gt;</operator> <literal type="number" pos:start="103:22" pos:end="103:22">4</literal></expr>)</condition> <block pos:start="103:25" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:33">

        <expr_stmt pos:start="105:9" pos:end="105:24"><expr pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:18">slice_type</name> <operator pos:start="105:20" pos:end="105:21">-=</operator> <literal type="number" pos:start="105:23" pos:end="105:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:10">sl</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:28">slice_type_fixed</name></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <literal type="number" pos:start="107:32" pos:end="107:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="111:33">else<block type="pseudo" pos:start="111:9" pos:end="111:33"><block_content pos:start="111:9" pos:end="111:33">

        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:28"><name pos:start="111:9" pos:end="111:10">sl</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:28">slice_type_fixed</name></name> <operator pos:start="111:30" pos:end="111:30">=</operator> <literal type="number" pos:start="111:32" pos:end="111:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:49"><expr pos:start="115:5" pos:end="115:48"><name pos:start="115:5" pos:end="115:14">slice_type</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:48"><name pos:start="115:18" pos:end="115:36">golomb_to_pict_type</name><index pos:start="115:37" pos:end="115:48">[<expr pos:start="115:38" pos:end="115:47"><name pos:start="115:38" pos:end="115:47">slice_type</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:6">sl</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:18">slice_type</name></name>     <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:35">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:40"><expr pos:start="121:5" pos:end="121:39"><name pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:6">sl</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:22">slice_type_nos</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <name pos:start="121:26" pos:end="121:35">slice_type</name> <operator pos:start="121:37" pos:end="121:37">&amp;</operator> <literal type="number" pos:start="121:39" pos:end="121:39">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="127:48">(<expr pos:start="125:9" pos:end="127:47"><name pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:9">h</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:24">nal_unit_type</name></name>  <operator pos:start="125:27" pos:end="125:28">==</operator> <name pos:start="125:30" pos:end="125:42">NAL_IDR_SLICE</name> <operator pos:start="125:44" pos:end="125:45">&amp;&amp;</operator>

        <name pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:10">sl</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:26">slice_type_nos</name></name> <operator pos:start="127:28" pos:end="127:29">!=</operator> <name pos:start="127:31" pos:end="127:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="127:50" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:35">

        <expr_stmt pos:start="129:9" pos:end="129:82"><expr pos:start="129:9" pos:end="129:81"><call pos:start="129:9" pos:end="129:81"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:81">(<argument pos:start="129:16" pos:end="129:23"><expr pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:16">h</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:23">avctx</name></name></expr></argument>, <argument pos:start="129:26" pos:end="129:37"><expr pos:start="129:26" pos:end="129:37"><name pos:start="129:26" pos:end="129:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:40" pos:end="129:80"><expr pos:start="129:40" pos:end="129:80"><literal type="string" pos:start="129:40" pos:end="129:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:35">return <expr pos:start="131:16" pos:end="131:34"><name pos:start="131:16" pos:end="131:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="151:6"><if pos:start="137:5" pos:end="151:6">if <condition pos:start="137:8" pos:end="147:47">(

        <expr pos:start="139:9" pos:end="147:46"><operator pos:start="139:9" pos:end="139:9">(</operator><name pos:start="139:10" pos:end="139:29"><name pos:start="139:10" pos:end="139:10">h</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:17">avctx</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:29">skip_frame</name></name> <operator pos:start="139:31" pos:end="139:32">&gt;=</operator> <name pos:start="139:34" pos:end="139:49">AVDISCARD_NONREF</name> <operator pos:start="139:51" pos:end="139:52">&amp;&amp;</operator> <operator pos:start="139:54" pos:end="139:54">!</operator><name pos:start="139:55" pos:end="139:68"><name pos:start="139:55" pos:end="139:55">h</name><operator pos:start="139:56" pos:end="139:57">-&gt;</operator><name pos:start="139:58" pos:end="139:68">nal_ref_idc</name></name><operator pos:start="139:69" pos:end="139:69">)</operator> <operator pos:start="139:71" pos:end="139:72">||</operator>

        <operator pos:start="141:9" pos:end="141:9">(</operator><name pos:start="141:10" pos:end="141:29"><name pos:start="141:10" pos:end="141:10">h</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:17">avctx</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:29">skip_frame</name></name> <operator pos:start="141:31" pos:end="141:32">&gt;=</operator> <name pos:start="141:34" pos:end="141:48">AVDISCARD_BIDIR</name>  <operator pos:start="141:51" pos:end="141:52">&amp;&amp;</operator> <name pos:start="141:54" pos:end="141:71"><name pos:start="141:54" pos:end="141:55">sl</name><operator pos:start="141:56" pos:end="141:57">-&gt;</operator><name pos:start="141:58" pos:end="141:71">slice_type_nos</name></name> <operator pos:start="141:73" pos:end="141:74">==</operator> <name pos:start="141:76" pos:end="141:92">AV_PICTURE_TYPE_B</name><operator pos:start="141:93" pos:end="141:93">)</operator> <operator pos:start="141:95" pos:end="141:96">||</operator>

        <operator pos:start="143:9" pos:end="143:9">(</operator><name pos:start="143:10" pos:end="143:29"><name pos:start="143:10" pos:end="143:10">h</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:17">avctx</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:29">skip_frame</name></name> <operator pos:start="143:31" pos:end="143:32">&gt;=</operator> <name pos:start="143:34" pos:end="143:51">AVDISCARD_NONINTRA</name> <operator pos:start="143:53" pos:end="143:54">&amp;&amp;</operator> <name pos:start="143:56" pos:end="143:73"><name pos:start="143:56" pos:end="143:57">sl</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:73">slice_type_nos</name></name> <operator pos:start="143:75" pos:end="143:76">!=</operator> <name pos:start="143:78" pos:end="143:94">AV_PICTURE_TYPE_I</name><operator pos:start="143:95" pos:end="143:95">)</operator> <operator pos:start="143:97" pos:end="143:98">||</operator>

        <operator pos:start="145:9" pos:end="145:9">(</operator><name pos:start="145:10" pos:end="145:29"><name pos:start="145:10" pos:end="145:10">h</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:17">avctx</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:29">skip_frame</name></name> <operator pos:start="145:31" pos:end="145:32">&gt;=</operator> <name pos:start="145:34" pos:end="145:49">AVDISCARD_NONKEY</name> <operator pos:start="145:51" pos:end="145:52">&amp;&amp;</operator> <name pos:start="145:54" pos:end="145:69"><name pos:start="145:54" pos:end="145:54">h</name><operator pos:start="145:55" pos:end="145:56">-&gt;</operator><name pos:start="145:57" pos:end="145:69">nal_unit_type</name></name> <operator pos:start="145:71" pos:end="145:72">!=</operator> <name pos:start="145:74" pos:end="145:86">NAL_IDR_SLICE</name><operator pos:start="145:87" pos:end="145:87">)</operator> <operator pos:start="145:89" pos:end="145:90">||</operator>

         <name pos:start="147:10" pos:end="147:29"><name pos:start="147:10" pos:end="147:10">h</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:17">avctx</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:29">skip_frame</name></name> <operator pos:start="147:31" pos:end="147:32">&gt;=</operator> <name pos:start="147:34" pos:end="147:46">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="147:49" pos:end="151:6">{<block_content pos:start="149:10" pos:end="149:29">

         <return pos:start="149:10" pos:end="149:29">return <expr pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:28">SLICE_SKIPED</name></expr>;</return>

     </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="155:5" pos:end="155:59">// to make a few old functions happy, it's wrong though</comment>

    <expr_stmt pos:start="157:5" pos:end="157:34"><expr pos:start="157:5" pos:end="157:33"><name pos:start="157:5" pos:end="157:16"><name pos:start="157:5" pos:end="157:5">h</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:16">pict_type</name></name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:33"><name pos:start="157:20" pos:end="157:21">sl</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:33">slice_type</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:36"><expr pos:start="161:5" pos:end="161:35"><name pos:start="161:5" pos:end="161:10">pps_id</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <call pos:start="161:14" pos:end="161:35"><name pos:start="161:14" pos:end="161:26">get_ue_golomb</name><argument_list pos:start="161:27" pos:end="161:35">(<argument pos:start="161:28" pos:end="161:34"><expr pos:start="161:28" pos:end="161:34"><operator pos:start="161:28" pos:end="161:28">&amp;</operator><name pos:start="161:29" pos:end="161:34"><name pos:start="161:29" pos:end="161:30">sl</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="169:5"><if pos:start="163:5" pos:end="169:5">if <condition pos:start="163:8" pos:end="163:32">(<expr pos:start="163:9" pos:end="163:31"><name pos:start="163:9" pos:end="163:14">pps_id</name> <operator pos:start="163:16" pos:end="163:17">&gt;=</operator> <name pos:start="163:19" pos:end="163:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="163:34" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:35">

        <expr_stmt pos:start="165:9" pos:end="165:75"><expr pos:start="165:9" pos:end="165:74"><call pos:start="165:9" pos:end="165:74"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="165:74">(<argument pos:start="165:16" pos:end="165:23"><expr pos:start="165:16" pos:end="165:23"><name pos:start="165:16" pos:end="165:23"><name pos:start="165:16" pos:end="165:16">h</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:23">avctx</name></name></expr></argument>, <argument pos:start="165:26" pos:end="165:37"><expr pos:start="165:26" pos:end="165:37"><name pos:start="165:26" pos:end="165:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:40" pos:end="165:65"><expr pos:start="165:40" pos:end="165:65"><literal type="string" pos:start="165:40" pos:end="165:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="165:68" pos:end="165:73"><expr pos:start="165:68" pos:end="165:73"><name pos:start="165:68" pos:end="165:73">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="167:9" pos:end="167:35">return <expr pos:start="167:16" pos:end="167:34"><name pos:start="167:16" pos:end="167:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="171:5" pos:end="181:5"><if pos:start="171:5" pos:end="181:5">if <condition pos:start="171:8" pos:end="171:32">(<expr pos:start="171:9" pos:end="171:31"><operator pos:start="171:9" pos:end="171:9">!</operator><name pos:start="171:10" pos:end="171:31"><name pos:start="171:10" pos:end="171:10">h</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:23">pps_buffers</name><index pos:start="171:24" pos:end="171:31">[<expr pos:start="171:25" pos:end="171:30"><name pos:start="171:25" pos:end="171:30">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="171:34" pos:end="181:5">{<block_content pos:start="173:9" pos:end="179:35">

        <expr_stmt pos:start="173:9" pos:end="177:23"><expr pos:start="173:9" pos:end="177:22"><call pos:start="173:9" pos:end="177:22"><name pos:start="173:9" pos:end="173:14">av_log</name><argument_list pos:start="173:15" pos:end="177:22">(<argument pos:start="173:16" pos:end="173:23"><expr pos:start="173:16" pos:end="173:23"><name pos:start="173:16" pos:end="173:23"><name pos:start="173:16" pos:end="173:16">h</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:23">avctx</name></name></expr></argument>, <argument pos:start="173:26" pos:end="173:37"><expr pos:start="173:26" pos:end="173:37"><name pos:start="173:26" pos:end="173:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="175:16" pos:end="175:49"><expr pos:start="175:16" pos:end="175:49"><literal type="string" pos:start="175:16" pos:end="175:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="177:16" pos:end="177:21"><expr pos:start="177:16" pos:end="177:21"><name pos:start="177:16" pos:end="177:21">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="179:9" pos:end="179:35">return <expr pos:start="179:16" pos:end="179:34"><name pos:start="179:16" pos:end="179:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="183:5" pos:end="193:5"><if pos:start="183:5" pos:end="193:5">if <condition pos:start="183:8" pos:end="183:52">(<expr pos:start="183:9" pos:end="183:51"><name pos:start="183:9" pos:end="183:20"><name pos:start="183:9" pos:end="183:9">h</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:20">au_pps_id</name></name> <operator pos:start="183:22" pos:end="183:23">&gt;=</operator> <literal type="number" pos:start="183:25" pos:end="183:25">0</literal> <operator pos:start="183:27" pos:end="183:28">&amp;&amp;</operator> <name pos:start="183:30" pos:end="183:35">pps_id</name> <operator pos:start="183:37" pos:end="183:38">!=</operator> <name pos:start="183:40" pos:end="183:51"><name pos:start="183:40" pos:end="183:40">h</name><operator pos:start="183:41" pos:end="183:42">-&gt;</operator><name pos:start="183:43" pos:end="183:51">au_pps_id</name></name></expr>)</condition> <block pos:start="183:54" pos:end="193:5">{<block_content pos:start="185:9" pos:end="191:35">

        <expr_stmt pos:start="185:9" pos:end="189:37"><expr pos:start="185:9" pos:end="189:36"><call pos:start="185:9" pos:end="189:36"><name pos:start="185:9" pos:end="185:14">av_log</name><argument_list pos:start="185:15" pos:end="189:36">(<argument pos:start="185:16" pos:end="185:23"><expr pos:start="185:16" pos:end="185:23"><name pos:start="185:16" pos:end="185:23"><name pos:start="185:16" pos:end="185:16">h</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:23">avctx</name></name></expr></argument>, <argument pos:start="185:26" pos:end="185:37"><expr pos:start="185:26" pos:end="185:37"><name pos:start="185:26" pos:end="185:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="187:16" pos:end="187:53"><expr pos:start="187:16" pos:end="187:53"><literal type="string" pos:start="187:16" pos:end="187:53">"PPS change from %d to %d forbidden\n"</literal></expr></argument>,

               <argument pos:start="189:16" pos:end="189:27"><expr pos:start="189:16" pos:end="189:27"><name pos:start="189:16" pos:end="189:27"><name pos:start="189:16" pos:end="189:16">h</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:27">au_pps_id</name></name></expr></argument>, <argument pos:start="189:30" pos:end="189:35"><expr pos:start="189:30" pos:end="189:35"><name pos:start="189:30" pos:end="189:35">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:35">return <expr pos:start="191:16" pos:end="191:34"><name pos:start="191:16" pos:end="191:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:33"><expr pos:start="197:5" pos:end="197:32"><name pos:start="197:5" pos:end="197:7">pps</name> <operator pos:start="197:9" pos:end="197:9">=</operator> <name pos:start="197:11" pos:end="197:32"><name pos:start="197:11" pos:end="197:11">h</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:24">pps_buffers</name><index pos:start="197:25" pos:end="197:32">[<expr pos:start="197:26" pos:end="197:31"><name pos:start="197:26" pos:end="197:31">pps_id</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="201:5" pos:end="211:5"><if pos:start="201:5" pos:end="211:5">if <condition pos:start="201:8" pos:end="201:37">(<expr pos:start="201:9" pos:end="201:36"><operator pos:start="201:9" pos:end="201:9">!</operator><name pos:start="201:10" pos:end="201:36"><name pos:start="201:10" pos:end="201:10">h</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:23">sps_buffers</name><index pos:start="201:24" pos:end="201:36">[<expr pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:27">pps</name><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:35">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="201:39" pos:end="211:5">{<block_content pos:start="203:9" pos:end="209:35">

        <expr_stmt pos:start="203:9" pos:end="207:30"><expr pos:start="203:9" pos:end="207:29"><call pos:start="203:9" pos:end="207:29"><name pos:start="203:9" pos:end="203:14">av_log</name><argument_list pos:start="203:15" pos:end="207:29">(<argument pos:start="203:16" pos:end="203:23"><expr pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:16">h</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:23">avctx</name></name></expr></argument>, <argument pos:start="203:26" pos:end="203:37"><expr pos:start="203:26" pos:end="203:37"><name pos:start="203:26" pos:end="203:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="205:16" pos:end="205:49"><expr pos:start="205:16" pos:end="205:49"><literal type="string" pos:start="205:16" pos:end="205:49">"non-existing SPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="207:16" pos:end="207:28"><expr pos:start="207:16" pos:end="207:28"><name pos:start="207:16" pos:end="207:28"><name pos:start="207:16" pos:end="207:16">h</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:21">pps</name><operator pos:start="207:22" pos:end="207:22">.</operator><name pos:start="207:23" pos:end="207:28">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:35">return <expr pos:start="209:16" pos:end="209:34"><name pos:start="209:16" pos:end="209:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="213:5" pos:end="215:41"><if pos:start="213:5" pos:end="215:41">if <condition pos:start="213:8" pos:end="213:20">(<expr pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:19">first_slice</name></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:41"><block_content pos:start="215:9" pos:end="215:41">

        <expr_stmt pos:start="215:9" pos:end="215:41"><expr pos:start="215:9" pos:end="215:40"><name pos:start="215:9" pos:end="215:14"><name pos:start="215:9" pos:end="215:9">h</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:14">pps</name></name> <operator pos:start="215:16" pos:end="215:16">=</operator> <operator pos:start="215:18" pos:end="215:18">*</operator><name pos:start="215:19" pos:end="215:40"><name pos:start="215:19" pos:end="215:19">h</name><operator pos:start="215:20" pos:end="215:21">-&gt;</operator><name pos:start="215:22" pos:end="215:32">pps_buffers</name><index pos:start="215:33" pos:end="215:40">[<expr pos:start="215:34" pos:end="215:39"><name pos:start="215:34" pos:end="215:39">pps_id</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="273:5"><if pos:start="219:5" pos:end="273:5">if <condition pos:start="219:8" pos:end="223:41">(<expr pos:start="219:9" pos:end="223:40"><name pos:start="219:9" pos:end="219:19"><name pos:start="219:9" pos:end="219:11">pps</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:19">sps_id</name></name> <operator pos:start="219:21" pos:end="219:22">!=</operator> <name pos:start="219:24" pos:end="219:36"><name pos:start="219:24" pos:end="219:24">h</name><operator pos:start="219:25" pos:end="219:26">-&gt;</operator><name pos:start="219:27" pos:end="219:29">sps</name><operator pos:start="219:30" pos:end="219:30">.</operator><name pos:start="219:31" pos:end="219:36">sps_id</name></name> <operator pos:start="219:38" pos:end="219:39">||</operator>

        <name pos:start="221:9" pos:end="221:19"><name pos:start="221:9" pos:end="221:11">pps</name><operator pos:start="221:12" pos:end="221:13">-&gt;</operator><name pos:start="221:14" pos:end="221:19">sps_id</name></name> <operator pos:start="221:21" pos:end="221:22">!=</operator> <name pos:start="221:24" pos:end="221:40"><name pos:start="221:24" pos:end="221:24">h</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:40">current_sps_id</name></name> <operator pos:start="221:42" pos:end="221:43">||</operator>

        <name pos:start="223:9" pos:end="223:35"><name pos:start="223:9" pos:end="223:9">h</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:22">sps_buffers</name><index pos:start="223:23" pos:end="223:35">[<expr pos:start="223:24" pos:end="223:34"><name pos:start="223:24" pos:end="223:34"><name pos:start="223:24" pos:end="223:26">pps</name><operator pos:start="223:27" pos:end="223:28">-&gt;</operator><name pos:start="223:29" pos:end="223:34">sps_id</name></name></expr>]</index></name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:40">new</name></expr>)</condition> <block pos:start="223:43" pos:end="273:5">{<block_content pos:start="227:9" pos:end="271:23">



        <if_stmt pos:start="227:9" pos:end="235:9"><if pos:start="227:9" pos:end="235:9">if <condition pos:start="227:12" pos:end="227:25">(<expr pos:start="227:13" pos:end="227:24"><operator pos:start="227:13" pos:end="227:13">!</operator><name pos:start="227:14" pos:end="227:24">first_slice</name></expr>)</condition> <block pos:start="227:27" pos:end="235:9">{<block_content pos:start="229:13" pos:end="233:39">

            <expr_stmt pos:start="229:13" pos:end="231:59"><expr pos:start="229:13" pos:end="231:58"><call pos:start="229:13" pos:end="231:58"><name pos:start="229:13" pos:end="229:18">av_log</name><argument_list pos:start="229:19" pos:end="231:58">(<argument pos:start="229:20" pos:end="229:27"><expr pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:20">h</name><operator pos:start="229:21" pos:end="229:22">-&gt;</operator><name pos:start="229:23" pos:end="229:27">avctx</name></name></expr></argument>, <argument pos:start="229:30" pos:end="229:41"><expr pos:start="229:30" pos:end="229:41"><name pos:start="229:30" pos:end="229:41">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="231:16" pos:end="231:57"><expr pos:start="231:16" pos:end="231:57"><literal type="string" pos:start="231:16" pos:end="231:57">"SPS changed in the middle of the frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="233:13" pos:end="233:39">return <expr pos:start="233:20" pos:end="233:38"><name pos:start="233:20" pos:end="233:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="239:9" pos:end="239:48"><expr pos:start="239:9" pos:end="239:47"><name pos:start="239:9" pos:end="239:14"><name pos:start="239:9" pos:end="239:9">h</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:14">sps</name></name> <operator pos:start="239:16" pos:end="239:16">=</operator> <operator pos:start="239:18" pos:end="239:18">*</operator><name pos:start="239:19" pos:end="239:47"><name pos:start="239:19" pos:end="239:19">h</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:32">sps_buffers</name><index pos:start="239:33" pos:end="239:47">[<expr pos:start="239:34" pos:end="239:46"><name pos:start="239:34" pos:end="239:46"><name pos:start="239:34" pos:end="239:34">h</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:39">pps</name><operator pos:start="239:40" pos:end="239:40">.</operator><name pos:start="239:41" pos:end="239:46">sps_id</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="243:9" pos:end="253:29"><if pos:start="243:9" pos:end="253:29">if <condition pos:start="243:12" pos:end="251:9">(<expr pos:start="243:13" pos:end="249:64"><name pos:start="243:13" pos:end="243:23"><name pos:start="243:13" pos:end="243:13">h</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:23">mb_width</name></name>  <operator pos:start="243:26" pos:end="243:27">!=</operator> <name pos:start="243:29" pos:end="243:43"><name pos:start="243:29" pos:end="243:29">h</name><operator pos:start="243:30" pos:end="243:31">-&gt;</operator><name pos:start="243:32" pos:end="243:34">sps</name><operator pos:start="243:35" pos:end="243:35">.</operator><name pos:start="243:36" pos:end="243:43">mb_width</name></name> <operator pos:start="243:45" pos:end="243:46">||</operator>

            <name pos:start="245:13" pos:end="245:24"><name pos:start="245:13" pos:end="245:13">h</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:24">mb_height</name></name> <operator pos:start="245:26" pos:end="245:27">!=</operator> <name pos:start="245:29" pos:end="245:44"><name pos:start="245:29" pos:end="245:29">h</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:34">sps</name><operator pos:start="245:35" pos:end="245:35">.</operator><name pos:start="245:36" pos:end="245:44">mb_height</name></name> <operator pos:start="245:46" pos:end="245:46">*</operator> <operator pos:start="245:48" pos:end="245:48">(</operator><literal type="number" pos:start="245:49" pos:end="245:51">2</literal> <operator pos:start="245:51" pos:end="245:51">-</operator> <name pos:start="245:53" pos:end="245:78"><name pos:start="245:53" pos:end="245:53">h</name><operator pos:start="245:54" pos:end="245:55">-&gt;</operator><name pos:start="245:56" pos:end="245:58">sps</name><operator pos:start="245:59" pos:end="245:59">.</operator><name pos:start="245:60" pos:end="245:78">frame_mbs_only_flag</name></name><operator pos:start="245:79" pos:end="245:79">)</operator> <operator pos:start="245:81" pos:end="245:82">||</operator>

            <name pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:13">h</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:33">cur_bit_depth_luma</name></name>    <operator pos:start="247:38" pos:end="247:39">!=</operator> <name pos:start="247:41" pos:end="247:61"><name pos:start="247:41" pos:end="247:41">h</name><operator pos:start="247:42" pos:end="247:43">-&gt;</operator><name pos:start="247:44" pos:end="247:46">sps</name><operator pos:start="247:47" pos:end="247:47">.</operator><name pos:start="247:48" pos:end="247:61">bit_depth_luma</name></name> <operator pos:start="247:63" pos:end="247:64">||</operator>

            <name pos:start="249:13" pos:end="249:36"><name pos:start="249:13" pos:end="249:13">h</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:36">cur_chroma_format_idc</name></name> <operator pos:start="249:38" pos:end="249:39">!=</operator> <name pos:start="249:41" pos:end="249:64"><name pos:start="249:41" pos:end="249:41">h</name><operator pos:start="249:42" pos:end="249:43">-&gt;</operator><name pos:start="249:44" pos:end="249:46">sps</name><operator pos:start="249:47" pos:end="249:47">.</operator><name pos:start="249:48" pos:end="249:64">chroma_format_idc</name></name></expr>

        )</condition><block type="pseudo" pos:start="253:13" pos:end="253:29"><block_content pos:start="253:13" pos:end="253:29">

            <expr_stmt pos:start="253:13" pos:end="253:29"><expr pos:start="253:13" pos:end="253:28"><name pos:start="253:13" pos:end="253:24">needs_reinit</name> <operator pos:start="253:26" pos:end="253:26">=</operator> <literal type="number" pos:start="253:28" pos:end="253:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="257:9" pos:end="267:9"><if pos:start="257:9" pos:end="267:9">if <condition pos:start="257:12" pos:end="259:61">(<expr pos:start="257:13" pos:end="259:60"><name pos:start="257:13" pos:end="257:29"><name pos:start="257:13" pos:end="257:13">h</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:29">bit_depth_luma</name></name>    <operator pos:start="257:34" pos:end="257:35">!=</operator> <name pos:start="257:37" pos:end="257:57"><name pos:start="257:37" pos:end="257:37">h</name><operator pos:start="257:38" pos:end="257:39">-&gt;</operator><name pos:start="257:40" pos:end="257:42">sps</name><operator pos:start="257:43" pos:end="257:43">.</operator><name pos:start="257:44" pos:end="257:57">bit_depth_luma</name></name> <operator pos:start="257:59" pos:end="257:60">||</operator>

            <name pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:13">h</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:32">chroma_format_idc</name></name> <operator pos:start="259:34" pos:end="259:35">!=</operator> <name pos:start="259:37" pos:end="259:60"><name pos:start="259:37" pos:end="259:37">h</name><operator pos:start="259:38" pos:end="259:39">-&gt;</operator><name pos:start="259:40" pos:end="259:42">sps</name><operator pos:start="259:43" pos:end="259:43">.</operator><name pos:start="259:44" pos:end="259:60">chroma_format_idc</name></name></expr>)</condition> <block pos:start="259:63" pos:end="267:9">{<block_content pos:start="261:13" pos:end="265:37">

            <expr_stmt pos:start="261:13" pos:end="261:57"><expr pos:start="261:13" pos:end="261:56"><name pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:13">h</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:29">bit_depth_luma</name></name>    <operator pos:start="261:34" pos:end="261:34">=</operator> <name pos:start="261:36" pos:end="261:56"><name pos:start="261:36" pos:end="261:36">h</name><operator pos:start="261:37" pos:end="261:38">-&gt;</operator><name pos:start="261:39" pos:end="261:41">sps</name><operator pos:start="261:42" pos:end="261:42">.</operator><name pos:start="261:43" pos:end="261:56">bit_depth_luma</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:60"><expr pos:start="263:13" pos:end="263:59"><name pos:start="263:13" pos:end="263:32"><name pos:start="263:13" pos:end="263:13">h</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:32">chroma_format_idc</name></name> <operator pos:start="263:34" pos:end="263:34">=</operator> <name pos:start="263:36" pos:end="263:59"><name pos:start="263:36" pos:end="263:36">h</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:41">sps</name><operator pos:start="263:42" pos:end="263:42">.</operator><name pos:start="263:43" pos:end="263:59">chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:37"><expr pos:start="265:13" pos:end="265:36"><name pos:start="265:13" pos:end="265:24">needs_reinit</name>         <operator pos:start="265:34" pos:end="265:34">=</operator> <literal type="number" pos:start="265:36" pos:end="265:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="269:9" pos:end="271:23"><if pos:start="269:9" pos:end="271:23">if <condition pos:start="269:12" pos:end="269:58">(<expr pos:start="269:13" pos:end="269:57"><operator pos:start="269:13" pos:end="269:13">(</operator><name pos:start="269:14" pos:end="269:16">ret</name> <operator pos:start="269:18" pos:end="269:18">=</operator> <call pos:start="269:20" pos:end="269:52"><name pos:start="269:20" pos:end="269:49">ff_h264_set_parameter_from_sps</name><argument_list pos:start="269:50" pos:end="269:52">(<argument pos:start="269:51" pos:end="269:51"><expr pos:start="269:51" pos:end="269:51"><name pos:start="269:51" pos:end="269:51">h</name></expr></argument>)</argument_list></call><operator pos:start="269:53" pos:end="269:53">)</operator> <operator pos:start="269:55" pos:end="269:55">&lt;</operator> <literal type="number" pos:start="269:57" pos:end="269:57">0</literal></expr>)</condition><block type="pseudo" pos:start="271:13" pos:end="271:23"><block_content pos:start="271:13" pos:end="271:23">

            <return pos:start="271:13" pos:end="271:23">return <expr pos:start="271:20" pos:end="271:22"><name pos:start="271:20" pos:end="271:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:53"><expr pos:start="277:5" pos:end="277:52"><name pos:start="277:5" pos:end="277:21"><name pos:start="277:5" pos:end="277:5">h</name><operator pos:start="277:6" pos:end="277:7">-&gt;</operator><name pos:start="277:8" pos:end="277:12">avctx</name><operator pos:start="277:13" pos:end="277:14">-&gt;</operator><name pos:start="277:15" pos:end="277:21">profile</name></name> <operator pos:start="277:23" pos:end="277:23">=</operator> <call pos:start="277:25" pos:end="277:52"><name pos:start="277:25" pos:end="277:43">ff_h264_get_profile</name><argument_list pos:start="277:44" pos:end="277:52">(<argument pos:start="277:45" pos:end="277:51"><expr pos:start="277:45" pos:end="277:51"><operator pos:start="277:45" pos:end="277:45">&amp;</operator><name pos:start="277:46" pos:end="277:51"><name pos:start="277:46" pos:end="277:46">h</name><operator pos:start="277:47" pos:end="277:48">-&gt;</operator><name pos:start="277:49" pos:end="277:51">sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:41"><expr pos:start="279:5" pos:end="279:40"><name pos:start="279:5" pos:end="279:19"><name pos:start="279:5" pos:end="279:5">h</name><operator pos:start="279:6" pos:end="279:7">-&gt;</operator><name pos:start="279:8" pos:end="279:12">avctx</name><operator pos:start="279:13" pos:end="279:14">-&gt;</operator><name pos:start="279:15" pos:end="279:19">level</name></name>   <operator pos:start="279:23" pos:end="279:23">=</operator> <name pos:start="279:25" pos:end="279:40"><name pos:start="279:25" pos:end="279:25">h</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:30">sps</name><operator pos:start="279:31" pos:end="279:31">.</operator><name pos:start="279:32" pos:end="279:40">level_idc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:47"><expr pos:start="281:5" pos:end="281:46"><name pos:start="281:5" pos:end="281:18"><name pos:start="281:5" pos:end="281:5">h</name><operator pos:start="281:6" pos:end="281:7">-&gt;</operator><name pos:start="281:8" pos:end="281:12">avctx</name><operator pos:start="281:13" pos:end="281:14">-&gt;</operator><name pos:start="281:15" pos:end="281:18">refs</name></name>    <operator pos:start="281:23" pos:end="281:23">=</operator> <name pos:start="281:25" pos:end="281:46"><name pos:start="281:25" pos:end="281:25">h</name><operator pos:start="281:26" pos:end="281:27">-&gt;</operator><name pos:start="281:28" pos:end="281:30">sps</name><operator pos:start="281:31" pos:end="281:31">.</operator><name pos:start="281:32" pos:end="281:46">ref_frame_count</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="285:5" pos:end="299:23"><expr pos:start="285:5" pos:end="299:22"><name pos:start="285:5" pos:end="285:15">must_reinit</name> <operator pos:start="285:17" pos:end="285:17">=</operator> <operator pos:start="285:19" pos:end="285:19">(</operator><name pos:start="285:20" pos:end="285:41"><name pos:start="285:20" pos:end="285:20">h</name><operator pos:start="285:21" pos:end="285:22">-&gt;</operator><name pos:start="285:23" pos:end="285:41">context_initialized</name></name> <operator pos:start="285:43" pos:end="285:44">&amp;&amp;</operator>

                    <operator pos:start="287:21" pos:end="287:21">(</operator>   <literal type="number" pos:start="287:25" pos:end="287:26">16</literal><operator pos:start="287:27" pos:end="287:27">*</operator><name pos:start="287:28" pos:end="287:42"><name pos:start="287:28" pos:end="287:28">h</name><operator pos:start="287:29" pos:end="287:30">-&gt;</operator><name pos:start="287:31" pos:end="287:33">sps</name><operator pos:start="287:34" pos:end="287:34">.</operator><name pos:start="287:35" pos:end="287:42">mb_width</name></name> <operator pos:start="287:44" pos:end="287:45">!=</operator> <name pos:start="287:47" pos:end="287:67"><name pos:start="287:47" pos:end="287:47">h</name><operator pos:start="287:48" pos:end="287:49">-&gt;</operator><name pos:start="287:50" pos:end="287:54">avctx</name><operator pos:start="287:55" pos:end="287:56">-&gt;</operator><name pos:start="287:57" pos:end="287:67">coded_width</name></name>

                     <operator pos:start="289:22" pos:end="289:23">||</operator> <literal type="number" pos:start="289:25" pos:end="289:26">16</literal><operator pos:start="289:27" pos:end="289:27">*</operator><name pos:start="289:28" pos:end="289:43"><name pos:start="289:28" pos:end="289:28">h</name><operator pos:start="289:29" pos:end="289:30">-&gt;</operator><name pos:start="289:31" pos:end="289:33">sps</name><operator pos:start="289:34" pos:end="289:34">.</operator><name pos:start="289:35" pos:end="289:43">mb_height</name></name> <operator pos:start="289:45" pos:end="289:45">*</operator> <operator pos:start="289:47" pos:end="289:47">(</operator><literal type="number" pos:start="289:48" pos:end="289:50">2</literal> <operator pos:start="289:50" pos:end="289:50">-</operator> <name pos:start="289:52" pos:end="289:77"><name pos:start="289:52" pos:end="289:52">h</name><operator pos:start="289:53" pos:end="289:54">-&gt;</operator><name pos:start="289:55" pos:end="289:57">sps</name><operator pos:start="289:58" pos:end="289:58">.</operator><name pos:start="289:59" pos:end="289:77">frame_mbs_only_flag</name></name><operator pos:start="289:78" pos:end="289:78">)</operator> <operator pos:start="289:80" pos:end="289:81">!=</operator> <name pos:start="289:83" pos:end="289:104"><name pos:start="289:83" pos:end="289:83">h</name><operator pos:start="289:84" pos:end="289:85">-&gt;</operator><name pos:start="289:86" pos:end="289:90">avctx</name><operator pos:start="289:91" pos:end="289:92">-&gt;</operator><name pos:start="289:93" pos:end="289:104">coded_height</name></name>

                     <operator pos:start="291:22" pos:end="291:23">||</operator> <name pos:start="291:25" pos:end="291:45"><name pos:start="291:25" pos:end="291:25">h</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:45">cur_bit_depth_luma</name></name>    <operator pos:start="291:50" pos:end="291:51">!=</operator> <name pos:start="291:53" pos:end="291:73"><name pos:start="291:53" pos:end="291:53">h</name><operator pos:start="291:54" pos:end="291:55">-&gt;</operator><name pos:start="291:56" pos:end="291:58">sps</name><operator pos:start="291:59" pos:end="291:59">.</operator><name pos:start="291:60" pos:end="291:73">bit_depth_luma</name></name>

                     <operator pos:start="293:22" pos:end="293:23">||</operator> <name pos:start="293:25" pos:end="293:48"><name pos:start="293:25" pos:end="293:25">h</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:48">cur_chroma_format_idc</name></name> <operator pos:start="293:50" pos:end="293:51">!=</operator> <name pos:start="293:53" pos:end="293:76"><name pos:start="293:53" pos:end="293:53">h</name><operator pos:start="293:54" pos:end="293:55">-&gt;</operator><name pos:start="293:56" pos:end="293:58">sps</name><operator pos:start="293:59" pos:end="293:59">.</operator><name pos:start="293:60" pos:end="293:76">chroma_format_idc</name></name>

                     <operator pos:start="295:22" pos:end="295:23">||</operator> <name pos:start="295:25" pos:end="295:35"><name pos:start="295:25" pos:end="295:25">h</name><operator pos:start="295:26" pos:end="295:27">-&gt;</operator><name pos:start="295:28" pos:end="295:35">mb_width</name></name>  <operator pos:start="295:38" pos:end="295:39">!=</operator> <name pos:start="295:41" pos:end="295:55"><name pos:start="295:41" pos:end="295:41">h</name><operator pos:start="295:42" pos:end="295:43">-&gt;</operator><name pos:start="295:44" pos:end="295:46">sps</name><operator pos:start="295:47" pos:end="295:47">.</operator><name pos:start="295:48" pos:end="295:55">mb_width</name></name>

                     <operator pos:start="297:22" pos:end="297:23">||</operator> <name pos:start="297:25" pos:end="297:36"><name pos:start="297:25" pos:end="297:25">h</name><operator pos:start="297:26" pos:end="297:27">-&gt;</operator><name pos:start="297:28" pos:end="297:36">mb_height</name></name> <operator pos:start="297:38" pos:end="297:39">!=</operator> <name pos:start="297:41" pos:end="297:56"><name pos:start="297:41" pos:end="297:41">h</name><operator pos:start="297:42" pos:end="297:43">-&gt;</operator><name pos:start="297:44" pos:end="297:46">sps</name><operator pos:start="297:47" pos:end="297:47">.</operator><name pos:start="297:48" pos:end="297:56">mb_height</name></name> <operator pos:start="297:58" pos:end="297:58">*</operator> <operator pos:start="297:60" pos:end="297:60">(</operator><literal type="number" pos:start="297:61" pos:end="297:63">2</literal> <operator pos:start="297:63" pos:end="297:63">-</operator> <name pos:start="297:65" pos:end="297:90"><name pos:start="297:65" pos:end="297:65">h</name><operator pos:start="297:66" pos:end="297:67">-&gt;</operator><name pos:start="297:68" pos:end="297:70">sps</name><operator pos:start="297:71" pos:end="297:71">.</operator><name pos:start="297:72" pos:end="297:90">frame_mbs_only_flag</name></name><operator pos:start="297:91" pos:end="297:91">)</operator>

                    <operator pos:start="299:21" pos:end="299:21">)</operator><operator pos:start="299:22" pos:end="299:22">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="301:5" pos:end="305:24"><if pos:start="301:5" pos:end="305:24">if <condition pos:start="301:8" pos:end="303:85">(<expr pos:start="301:9" pos:end="303:84"><name pos:start="301:9" pos:end="301:25"><name pos:start="301:9" pos:end="301:9">h</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:16">avctx</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:25">pix_fmt</name></name> <operator pos:start="301:27" pos:end="301:28">==</operator> <name pos:start="301:30" pos:end="301:44">AV_PIX_FMT_NONE</name>

        <operator pos:start="303:9" pos:end="303:10">||</operator> <operator pos:start="303:12" pos:end="303:12">(</operator><call pos:start="303:13" pos:end="303:43"><name pos:start="303:13" pos:end="303:24">non_j_pixfmt</name><argument_list pos:start="303:25" pos:end="303:43">(<argument pos:start="303:26" pos:end="303:42"><expr pos:start="303:26" pos:end="303:42"><name pos:start="303:26" pos:end="303:42"><name pos:start="303:26" pos:end="303:26">h</name><operator pos:start="303:27" pos:end="303:28">-&gt;</operator><name pos:start="303:29" pos:end="303:33">avctx</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:42">pix_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="303:45" pos:end="303:46">!=</operator> <call pos:start="303:48" pos:end="303:83"><name pos:start="303:48" pos:end="303:59">non_j_pixfmt</name><argument_list pos:start="303:60" pos:end="303:83">(<argument pos:start="303:61" pos:end="303:82"><expr pos:start="303:61" pos:end="303:82"><call pos:start="303:61" pos:end="303:82"><name pos:start="303:61" pos:end="303:76">get_pixel_format</name><argument_list pos:start="303:77" pos:end="303:82">(<argument pos:start="303:78" pos:end="303:78"><expr pos:start="303:78" pos:end="303:78"><name pos:start="303:78" pos:end="303:78">h</name></expr></argument>, <argument pos:start="303:81" pos:end="303:81"><expr pos:start="303:81" pos:end="303:81"><literal type="number" pos:start="303:81" pos:end="303:81">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="303:84" pos:end="303:84">)</operator></expr>)</condition><block type="pseudo" pos:start="305:9" pos:end="305:24"><block_content pos:start="305:9" pos:end="305:24">

        <expr_stmt pos:start="305:9" pos:end="305:24"><expr pos:start="305:9" pos:end="305:23"><name pos:start="305:9" pos:end="305:19">must_reinit</name> <operator pos:start="305:21" pos:end="305:21">=</operator> <literal type="number" pos:start="305:23" pos:end="305:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="309:5" pos:end="311:24"><if pos:start="309:5" pos:end="311:24">if <condition pos:start="309:8" pos:end="309:75">(<expr pos:start="309:9" pos:end="309:74"><name pos:start="309:9" pos:end="309:19">first_slice</name> <operator pos:start="309:21" pos:end="309:22">&amp;&amp;</operator> <call pos:start="309:24" pos:end="309:74"><name pos:start="309:24" pos:end="309:31">av_cmp_q</name><argument_list pos:start="309:32" pos:end="309:74">(<argument pos:start="309:33" pos:end="309:42"><expr pos:start="309:33" pos:end="309:42"><name pos:start="309:33" pos:end="309:42"><name pos:start="309:33" pos:end="309:33">h</name><operator pos:start="309:34" pos:end="309:35">-&gt;</operator><name pos:start="309:36" pos:end="309:38">sps</name><operator pos:start="309:39" pos:end="309:39">.</operator><name pos:start="309:40" pos:end="309:42">sar</name></name></expr></argument>, <argument pos:start="309:45" pos:end="309:73"><expr pos:start="309:45" pos:end="309:73"><name pos:start="309:45" pos:end="309:73"><name pos:start="309:45" pos:end="309:45">h</name><operator pos:start="309:46" pos:end="309:47">-&gt;</operator><name pos:start="309:48" pos:end="309:52">avctx</name><operator pos:start="309:53" pos:end="309:54">-&gt;</operator><name pos:start="309:55" pos:end="309:73">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="311:9" pos:end="311:24"><block_content pos:start="311:9" pos:end="311:24">

        <expr_stmt pos:start="311:9" pos:end="311:24"><expr pos:start="311:9" pos:end="311:23"><name pos:start="311:9" pos:end="311:19">must_reinit</name> <operator pos:start="311:21" pos:end="311:21">=</operator> <literal type="number" pos:start="311:23" pos:end="311:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="315:5" pos:end="315:35"><expr pos:start="315:5" pos:end="315:34"><name pos:start="315:5" pos:end="315:15"><name pos:start="315:5" pos:end="315:5">h</name><operator pos:start="315:6" pos:end="315:7">-&gt;</operator><name pos:start="315:8" pos:end="315:15">mb_width</name></name>  <operator pos:start="315:18" pos:end="315:18">=</operator> <name pos:start="315:20" pos:end="315:34"><name pos:start="315:20" pos:end="315:20">h</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:25">sps</name><operator pos:start="315:26" pos:end="315:26">.</operator><name pos:start="315:27" pos:end="315:34">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="317:71"><expr pos:start="317:5" pos:end="317:70"><name pos:start="317:5" pos:end="317:16"><name pos:start="317:5" pos:end="317:5">h</name><operator pos:start="317:6" pos:end="317:7">-&gt;</operator><name pos:start="317:8" pos:end="317:16">mb_height</name></name> <operator pos:start="317:18" pos:end="317:18">=</operator> <name pos:start="317:20" pos:end="317:35"><name pos:start="317:20" pos:end="317:20">h</name><operator pos:start="317:21" pos:end="317:22">-&gt;</operator><name pos:start="317:23" pos:end="317:25">sps</name><operator pos:start="317:26" pos:end="317:26">.</operator><name pos:start="317:27" pos:end="317:35">mb_height</name></name> <operator pos:start="317:37" pos:end="317:37">*</operator> <operator pos:start="317:39" pos:end="317:39">(</operator><literal type="number" pos:start="317:40" pos:end="317:42">2</literal> <operator pos:start="317:42" pos:end="317:42">-</operator> <name pos:start="317:44" pos:end="317:69"><name pos:start="317:44" pos:end="317:44">h</name><operator pos:start="317:45" pos:end="317:46">-&gt;</operator><name pos:start="317:47" pos:end="317:49">sps</name><operator pos:start="317:50" pos:end="317:50">.</operator><name pos:start="317:51" pos:end="317:69">frame_mbs_only_flag</name></name><operator pos:start="317:70" pos:end="317:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:46"><expr pos:start="319:5" pos:end="319:45"><name pos:start="319:5" pos:end="319:13"><name pos:start="319:5" pos:end="319:5">h</name><operator pos:start="319:6" pos:end="319:7">-&gt;</operator><name pos:start="319:8" pos:end="319:13">mb_num</name></name>    <operator pos:start="319:18" pos:end="319:18">=</operator> <name pos:start="319:20" pos:end="319:30"><name pos:start="319:20" pos:end="319:20">h</name><operator pos:start="319:21" pos:end="319:22">-&gt;</operator><name pos:start="319:23" pos:end="319:30">mb_width</name></name> <operator pos:start="319:32" pos:end="319:32">*</operator> <name pos:start="319:34" pos:end="319:45"><name pos:start="319:34" pos:end="319:34">h</name><operator pos:start="319:35" pos:end="319:36">-&gt;</operator><name pos:start="319:37" pos:end="319:45">mb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:35"><expr pos:start="321:5" pos:end="321:34"><name pos:start="321:5" pos:end="321:16"><name pos:start="321:5" pos:end="321:5">h</name><operator pos:start="321:6" pos:end="321:7">-&gt;</operator><name pos:start="321:8" pos:end="321:16">mb_stride</name></name> <operator pos:start="321:18" pos:end="321:18">=</operator> <name pos:start="321:20" pos:end="321:30"><name pos:start="321:20" pos:end="321:20">h</name><operator pos:start="321:21" pos:end="321:22">-&gt;</operator><name pos:start="321:23" pos:end="321:30">mb_width</name></name> <operator pos:start="321:32" pos:end="321:32">+</operator> <literal type="number" pos:start="321:34" pos:end="321:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="325:5" pos:end="325:34"><expr pos:start="325:5" pos:end="325:33"><name pos:start="325:5" pos:end="325:15"><name pos:start="325:5" pos:end="325:5">h</name><operator pos:start="325:6" pos:end="325:7">-&gt;</operator><name pos:start="325:8" pos:end="325:15">b_stride</name></name> <operator pos:start="325:17" pos:end="325:17">=</operator> <name pos:start="325:19" pos:end="325:29"><name pos:start="325:19" pos:end="325:19">h</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:29">mb_width</name></name> <operator pos:start="325:31" pos:end="325:31">*</operator> <literal type="number" pos:start="325:33" pos:end="325:33">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="329:5" pos:end="329:54"><expr pos:start="329:5" pos:end="329:53"><name pos:start="329:5" pos:end="329:21"><name pos:start="329:5" pos:end="329:5">h</name><operator pos:start="329:6" pos:end="329:7">-&gt;</operator><name pos:start="329:8" pos:end="329:21">chroma_y_shift</name></name> <operator pos:start="329:23" pos:end="329:23">=</operator> <name pos:start="329:25" pos:end="329:48"><name pos:start="329:25" pos:end="329:25">h</name><operator pos:start="329:26" pos:end="329:27">-&gt;</operator><name pos:start="329:28" pos:end="329:30">sps</name><operator pos:start="329:31" pos:end="329:31">.</operator><name pos:start="329:32" pos:end="329:48">chroma_format_idc</name></name> <operator pos:start="329:50" pos:end="329:51">&lt;=</operator> <literal type="number" pos:start="329:53" pos:end="329:53">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="329:56" pos:end="329:74">// 400 uses yuv420p</comment>



    <expr_stmt pos:start="333:5" pos:end="333:33"><expr pos:start="333:5" pos:end="333:32"><name pos:start="333:5" pos:end="333:12"><name pos:start="333:5" pos:end="333:5">h</name><operator pos:start="333:6" pos:end="333:7">-&gt;</operator><name pos:start="333:8" pos:end="333:12">width</name></name>  <operator pos:start="333:15" pos:end="333:15">=</operator> <literal type="number" pos:start="333:17" pos:end="333:18">16</literal> <operator pos:start="333:20" pos:end="333:20">*</operator> <name pos:start="333:22" pos:end="333:32"><name pos:start="333:22" pos:end="333:22">h</name><operator pos:start="333:23" pos:end="333:24">-&gt;</operator><name pos:start="333:25" pos:end="333:32">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:34"><expr pos:start="335:5" pos:end="335:33"><name pos:start="335:5" pos:end="335:13"><name pos:start="335:5" pos:end="335:5">h</name><operator pos:start="335:6" pos:end="335:7">-&gt;</operator><name pos:start="335:8" pos:end="335:13">height</name></name> <operator pos:start="335:15" pos:end="335:15">=</operator> <literal type="number" pos:start="335:17" pos:end="335:18">16</literal> <operator pos:start="335:20" pos:end="335:20">*</operator> <name pos:start="335:22" pos:end="335:33"><name pos:start="335:22" pos:end="335:22">h</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:33">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="339:5" pos:end="339:29"><expr pos:start="339:5" pos:end="339:28"><name pos:start="339:5" pos:end="339:7">ret</name> <operator pos:start="339:9" pos:end="339:9">=</operator> <call pos:start="339:11" pos:end="339:28"><name pos:start="339:11" pos:end="339:25">init_dimensions</name><argument_list pos:start="339:26" pos:end="339:28">(<argument pos:start="339:27" pos:end="339:27"><expr pos:start="339:27" pos:end="339:27"><name pos:start="339:27" pos:end="339:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="341:5" pos:end="343:19"><if pos:start="341:5" pos:end="343:19">if <condition pos:start="341:8" pos:end="341:16">(<expr pos:start="341:9" pos:end="341:15"><name pos:start="341:9" pos:end="341:11">ret</name> <operator pos:start="341:13" pos:end="341:13">&lt;</operator> <literal type="number" pos:start="341:15" pos:end="341:15">0</literal></expr>)</condition><block type="pseudo" pos:start="343:9" pos:end="343:19"><block_content pos:start="343:9" pos:end="343:19">

        <return pos:start="343:9" pos:end="343:19">return <expr pos:start="343:16" pos:end="343:18"><name pos:start="343:16" pos:end="343:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="347:5" pos:end="367:5"><if pos:start="347:5" pos:end="367:5">if <condition pos:start="347:8" pos:end="347:46">(<expr pos:start="347:9" pos:end="347:45"><name pos:start="347:9" pos:end="347:45"><name pos:start="347:9" pos:end="347:9">h</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:14">sps</name><operator pos:start="347:15" pos:end="347:15">.</operator><name pos:start="347:16" pos:end="347:45">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="347:48" pos:end="367:5">{<block_content pos:start="349:9" pos:end="365:9">

        <expr_stmt pos:start="349:9" pos:end="351:71"><expr pos:start="349:9" pos:end="351:70"><name pos:start="349:9" pos:end="349:29"><name pos:start="349:9" pos:end="349:9">h</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:16">avctx</name><operator pos:start="349:17" pos:end="349:18">-&gt;</operator><name pos:start="349:19" pos:end="349:29">color_range</name></name> <operator pos:start="349:31" pos:end="349:31">=</operator> <ternary pos:start="349:33" pos:end="351:70"><condition pos:start="349:33" pos:end="349:53"><expr pos:start="349:33" pos:end="349:51"><name pos:start="349:33" pos:end="349:49"><name pos:start="349:33" pos:end="349:33">h</name><operator pos:start="349:34" pos:end="349:35">-&gt;</operator><name pos:start="349:36" pos:end="349:38">sps</name><operator pos:start="349:39" pos:end="349:39">.</operator><name pos:start="349:40" pos:end="349:49">full_range</name></name><operator pos:start="349:50" pos:end="349:50">&gt;</operator><literal type="number" pos:start="349:51" pos:end="349:51">0</literal></expr> ?</condition><then pos:start="349:55" pos:end="349:70"> <expr pos:start="349:55" pos:end="349:70"><name pos:start="349:55" pos:end="349:70">AVCOL_RANGE_JPEG</name></expr>

                                                    </then><else pos:start="351:53" pos:end="351:70">: <expr pos:start="351:55" pos:end="351:70"><name pos:start="351:55" pos:end="351:70">AVCOL_RANGE_MPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="353:9" pos:end="365:9"><if pos:start="353:9" pos:end="365:9">if <condition pos:start="353:12" pos:end="353:51">(<expr pos:start="353:13" pos:end="353:50"><name pos:start="353:13" pos:end="353:50"><name pos:start="353:13" pos:end="353:13">h</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:18">sps</name><operator pos:start="353:19" pos:end="353:19">.</operator><name pos:start="353:20" pos:end="353:50">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="353:53" pos:end="365:9">{<block_content pos:start="355:13" pos:end="363:58">

            <if_stmt pos:start="355:13" pos:end="357:33"><if pos:start="355:13" pos:end="357:33">if <condition pos:start="355:16" pos:end="355:58">(<expr pos:start="355:17" pos:end="355:57"><name pos:start="355:17" pos:end="355:36"><name pos:start="355:17" pos:end="355:17">h</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:24">avctx</name><operator pos:start="355:25" pos:end="355:26">-&gt;</operator><name pos:start="355:27" pos:end="355:36">colorspace</name></name> <operator pos:start="355:38" pos:end="355:39">!=</operator> <name pos:start="355:41" pos:end="355:57"><name pos:start="355:41" pos:end="355:41">h</name><operator pos:start="355:42" pos:end="355:43">-&gt;</operator><name pos:start="355:44" pos:end="355:46">sps</name><operator pos:start="355:47" pos:end="355:47">.</operator><name pos:start="355:48" pos:end="355:57">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="357:17" pos:end="357:33"><block_content pos:start="357:17" pos:end="357:33">

                <expr_stmt pos:start="357:17" pos:end="357:33"><expr pos:start="357:17" pos:end="357:32"><name pos:start="357:17" pos:end="357:28">needs_reinit</name> <operator pos:start="357:30" pos:end="357:30">=</operator> <literal type="number" pos:start="357:32" pos:end="357:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:63"><expr pos:start="359:13" pos:end="359:62"><name pos:start="359:13" pos:end="359:37"><name pos:start="359:13" pos:end="359:13">h</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:20">avctx</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:37">color_primaries</name></name> <operator pos:start="359:39" pos:end="359:39">=</operator> <name pos:start="359:41" pos:end="359:62"><name pos:start="359:41" pos:end="359:41">h</name><operator pos:start="359:42" pos:end="359:43">-&gt;</operator><name pos:start="359:44" pos:end="359:46">sps</name><operator pos:start="359:47" pos:end="359:47">.</operator><name pos:start="359:48" pos:end="359:62">color_primaries</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:57"><expr pos:start="361:13" pos:end="361:56"><name pos:start="361:13" pos:end="361:31"><name pos:start="361:13" pos:end="361:13">h</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:20">avctx</name><operator pos:start="361:21" pos:end="361:22">-&gt;</operator><name pos:start="361:23" pos:end="361:31">color_trc</name></name>       <operator pos:start="361:39" pos:end="361:39">=</operator> <name pos:start="361:41" pos:end="361:56"><name pos:start="361:41" pos:end="361:41">h</name><operator pos:start="361:42" pos:end="361:43">-&gt;</operator><name pos:start="361:44" pos:end="361:46">sps</name><operator pos:start="361:47" pos:end="361:47">.</operator><name pos:start="361:48" pos:end="361:56">color_trc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:58"><expr pos:start="363:13" pos:end="363:57"><name pos:start="363:13" pos:end="363:32"><name pos:start="363:13" pos:end="363:13">h</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:20">avctx</name><operator pos:start="363:21" pos:end="363:22">-&gt;</operator><name pos:start="363:23" pos:end="363:32">colorspace</name></name>      <operator pos:start="363:39" pos:end="363:39">=</operator> <name pos:start="363:41" pos:end="363:57"><name pos:start="363:41" pos:end="363:41">h</name><operator pos:start="363:42" pos:end="363:43">-&gt;</operator><name pos:start="363:44" pos:end="363:46">sps</name><operator pos:start="363:47" pos:end="363:47">.</operator><name pos:start="363:48" pos:end="363:57">colorspace</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="371:5" pos:end="427:5"><if pos:start="371:5" pos:end="427:5">if <condition pos:start="371:8" pos:end="373:38">(<expr pos:start="371:9" pos:end="373:37"><name pos:start="371:9" pos:end="371:30"><name pos:start="371:9" pos:end="371:9">h</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:30">context_initialized</name></name> <operator pos:start="371:32" pos:end="371:33">&amp;&amp;</operator>

        <operator pos:start="373:9" pos:end="373:9">(</operator><name pos:start="373:10" pos:end="373:20">must_reinit</name> <operator pos:start="373:22" pos:end="373:23">||</operator> <name pos:start="373:25" pos:end="373:36">needs_reinit</name><operator pos:start="373:37" pos:end="373:37">)</operator></expr>)</condition> <block pos:start="373:40" pos:end="427:5">{<block_content pos:start="375:9" pos:end="425:9">

        <if_stmt pos:start="375:9" pos:end="391:9"><if pos:start="375:9" pos:end="391:9">if <condition pos:start="375:12" pos:end="375:31">(<expr pos:start="375:13" pos:end="375:30"><name pos:start="375:13" pos:end="375:14">sl</name> <operator pos:start="375:16" pos:end="375:17">!=</operator> <name pos:start="375:19" pos:end="375:30"><name pos:start="375:19" pos:end="375:19">h</name><operator pos:start="375:20" pos:end="375:21">-&gt;</operator><name pos:start="375:22" pos:end="375:30">slice_ctx</name></name></expr>)</condition> <block pos:start="375:33" pos:end="391:9">{<block_content pos:start="377:13" pos:end="389:39">

            <expr_stmt pos:start="377:13" pos:end="387:41"><expr pos:start="377:13" pos:end="387:40"><call pos:start="377:13" pos:end="387:40"><name pos:start="377:13" pos:end="377:18">av_log</name><argument_list pos:start="377:19" pos:end="387:40">(<argument pos:start="377:20" pos:end="377:27"><expr pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:20">h</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:27">avctx</name></name></expr></argument>, <argument pos:start="377:30" pos:end="377:41"><expr pos:start="377:30" pos:end="377:41"><name pos:start="377:30" pos:end="377:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="379:20" pos:end="381:31"><expr pos:start="379:20" pos:end="381:31"><literal type="string" pos:start="379:20" pos:end="379:66">"changing width %d -&gt; %d / height %d -&gt; %d on "</literal>

                   <literal type="string" pos:start="381:20" pos:end="381:31">"slice %d\n"</literal></expr></argument>,

                   <argument pos:start="383:20" pos:end="383:27"><expr pos:start="383:20" pos:end="383:27"><name pos:start="383:20" pos:end="383:27"><name pos:start="383:20" pos:end="383:20">h</name><operator pos:start="383:21" pos:end="383:22">-&gt;</operator><name pos:start="383:23" pos:end="383:27">width</name></name></expr></argument>, <argument pos:start="383:30" pos:end="383:50"><expr pos:start="383:30" pos:end="383:50"><name pos:start="383:30" pos:end="383:50"><name pos:start="383:30" pos:end="383:30">h</name><operator pos:start="383:31" pos:end="383:32">-&gt;</operator><name pos:start="383:33" pos:end="383:37">avctx</name><operator pos:start="383:38" pos:end="383:39">-&gt;</operator><name pos:start="383:40" pos:end="383:50">coded_width</name></name></expr></argument>,

                   <argument pos:start="385:20" pos:end="385:28"><expr pos:start="385:20" pos:end="385:28"><name pos:start="385:20" pos:end="385:28"><name pos:start="385:20" pos:end="385:20">h</name><operator pos:start="385:21" pos:end="385:22">-&gt;</operator><name pos:start="385:23" pos:end="385:28">height</name></name></expr></argument>, <argument pos:start="385:31" pos:end="385:52"><expr pos:start="385:31" pos:end="385:52"><name pos:start="385:31" pos:end="385:52"><name pos:start="385:31" pos:end="385:31">h</name><operator pos:start="385:32" pos:end="385:33">-&gt;</operator><name pos:start="385:34" pos:end="385:38">avctx</name><operator pos:start="385:39" pos:end="385:40">-&gt;</operator><name pos:start="385:41" pos:end="385:52">coded_height</name></name></expr></argument>,

                   <argument pos:start="387:20" pos:end="387:39"><expr pos:start="387:20" pos:end="387:39"><name pos:start="387:20" pos:end="387:35"><name pos:start="387:20" pos:end="387:20">h</name><operator pos:start="387:21" pos:end="387:22">-&gt;</operator><name pos:start="387:23" pos:end="387:35">current_slice</name></name> <operator pos:start="387:37" pos:end="387:37">+</operator> <literal type="number" pos:start="387:39" pos:end="387:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="389:13" pos:end="389:39">return <expr pos:start="389:20" pos:end="389:38"><name pos:start="389:20" pos:end="389:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="395:9" pos:end="395:32"><expr pos:start="395:9" pos:end="395:31"><call pos:start="395:9" pos:end="395:31"><name pos:start="395:9" pos:end="395:18">av_assert1</name><argument_list pos:start="395:19" pos:end="395:31">(<argument pos:start="395:20" pos:end="395:30"><expr pos:start="395:20" pos:end="395:30"><name pos:start="395:20" pos:end="395:30">first_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="399:9" pos:end="399:32"><expr pos:start="399:9" pos:end="399:31"><call pos:start="399:9" pos:end="399:31"><name pos:start="399:9" pos:end="399:28">ff_h264_flush_change</name><argument_list pos:start="399:29" pos:end="399:31">(<argument pos:start="399:30" pos:end="399:30"><expr pos:start="399:30" pos:end="399:30"><name pos:start="399:30" pos:end="399:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="403:9" pos:end="405:23"><if pos:start="403:9" pos:end="405:23">if <condition pos:start="403:12" pos:end="403:47">(<expr pos:start="403:13" pos:end="403:46"><operator pos:start="403:13" pos:end="403:13">(</operator><name pos:start="403:14" pos:end="403:16">ret</name> <operator pos:start="403:18" pos:end="403:18">=</operator> <call pos:start="403:20" pos:end="403:41"><name pos:start="403:20" pos:end="403:35">get_pixel_format</name><argument_list pos:start="403:36" pos:end="403:41">(<argument pos:start="403:37" pos:end="403:37"><expr pos:start="403:37" pos:end="403:37"><name pos:start="403:37" pos:end="403:37">h</name></expr></argument>, <argument pos:start="403:40" pos:end="403:40"><expr pos:start="403:40" pos:end="403:40"><literal type="number" pos:start="403:40" pos:end="403:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="403:42" pos:end="403:42">)</operator> <operator pos:start="403:44" pos:end="403:44">&lt;</operator> <literal type="number" pos:start="403:46" pos:end="403:46">0</literal></expr>)</condition><block type="pseudo" pos:start="405:13" pos:end="405:23"><block_content pos:start="405:13" pos:end="405:23">

            <return pos:start="405:13" pos:end="405:23">return <expr pos:start="405:20" pos:end="405:22"><name pos:start="405:20" pos:end="405:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:32"><expr pos:start="407:9" pos:end="407:31"><name pos:start="407:9" pos:end="407:25"><name pos:start="407:9" pos:end="407:9">h</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:16">avctx</name><operator pos:start="407:17" pos:end="407:18">-&gt;</operator><name pos:start="407:19" pos:end="407:25">pix_fmt</name></name> <operator pos:start="407:27" pos:end="407:27">=</operator> <name pos:start="407:29" pos:end="407:31">ret</name></expr>;</expr_stmt>



        <expr_stmt pos:start="411:9" pos:end="413:93"><expr pos:start="411:9" pos:end="413:92"><call pos:start="411:9" pos:end="413:92"><name pos:start="411:9" pos:end="411:14">av_log</name><argument_list pos:start="411:15" pos:end="413:92">(<argument pos:start="411:16" pos:end="411:23"><expr pos:start="411:16" pos:end="411:23"><name pos:start="411:16" pos:end="411:23"><name pos:start="411:16" pos:end="411:16">h</name><operator pos:start="411:17" pos:end="411:18">-&gt;</operator><name pos:start="411:19" pos:end="411:23">avctx</name></name></expr></argument>, <argument pos:start="411:26" pos:end="411:36"><expr pos:start="411:26" pos:end="411:36"><name pos:start="411:26" pos:end="411:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="411:39" pos:end="413:30"><expr pos:start="411:39" pos:end="413:30"><literal type="string" pos:start="411:39" pos:end="411:65">"Reinit context to %dx%d, "</literal>

               <literal type="string" pos:start="413:16" pos:end="413:30">"pix_fmt: %s\n"</literal></expr></argument>, <argument pos:start="413:33" pos:end="413:40"><expr pos:start="413:33" pos:end="413:40"><name pos:start="413:33" pos:end="413:40"><name pos:start="413:33" pos:end="413:33">h</name><operator pos:start="413:34" pos:end="413:35">-&gt;</operator><name pos:start="413:36" pos:end="413:40">width</name></name></expr></argument>, <argument pos:start="413:43" pos:end="413:51"><expr pos:start="413:43" pos:end="413:51"><name pos:start="413:43" pos:end="413:51"><name pos:start="413:43" pos:end="413:43">h</name><operator pos:start="413:44" pos:end="413:45">-&gt;</operator><name pos:start="413:46" pos:end="413:51">height</name></name></expr></argument>, <argument pos:start="413:54" pos:end="413:91"><expr pos:start="413:54" pos:end="413:91"><call pos:start="413:54" pos:end="413:91"><name pos:start="413:54" pos:end="413:72">av_get_pix_fmt_name</name><argument_list pos:start="413:73" pos:end="413:91">(<argument pos:start="413:74" pos:end="413:90"><expr pos:start="413:74" pos:end="413:90"><name pos:start="413:74" pos:end="413:90"><name pos:start="413:74" pos:end="413:74">h</name><operator pos:start="413:75" pos:end="413:76">-&gt;</operator><name pos:start="413:77" pos:end="413:81">avctx</name><operator pos:start="413:82" pos:end="413:83">-&gt;</operator><name pos:start="413:84" pos:end="413:90">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="417:9" pos:end="425:9"><if pos:start="417:9" pos:end="425:9">if <condition pos:start="417:12" pos:end="417:53">(<expr pos:start="417:13" pos:end="417:52"><operator pos:start="417:13" pos:end="417:13">(</operator><name pos:start="417:14" pos:end="417:16">ret</name> <operator pos:start="417:18" pos:end="417:18">=</operator> <call pos:start="417:20" pos:end="417:47"><name pos:start="417:20" pos:end="417:41">h264_slice_header_init</name><argument_list pos:start="417:42" pos:end="417:47">(<argument pos:start="417:43" pos:end="417:43"><expr pos:start="417:43" pos:end="417:43"><name pos:start="417:43" pos:end="417:43">h</name></expr></argument>, <argument pos:start="417:46" pos:end="417:46"><expr pos:start="417:46" pos:end="417:46"><literal type="number" pos:start="417:46" pos:end="417:46">1</literal></expr></argument>)</argument_list></call><operator pos:start="417:48" pos:end="417:48">)</operator> <operator pos:start="417:50" pos:end="417:50">&lt;</operator> <literal type="number" pos:start="417:52" pos:end="417:52">0</literal></expr>)</condition> <block pos:start="417:55" pos:end="425:9">{<block_content pos:start="419:13" pos:end="423:23">

            <expr_stmt pos:start="419:13" pos:end="421:56"><expr pos:start="419:13" pos:end="421:55"><call pos:start="419:13" pos:end="421:55"><name pos:start="419:13" pos:end="419:18">av_log</name><argument_list pos:start="419:19" pos:end="421:55">(<argument pos:start="419:20" pos:end="419:27"><expr pos:start="419:20" pos:end="419:27"><name pos:start="419:20" pos:end="419:27"><name pos:start="419:20" pos:end="419:20">h</name><operator pos:start="419:21" pos:end="419:22">-&gt;</operator><name pos:start="419:23" pos:end="419:27">avctx</name></name></expr></argument>, <argument pos:start="419:30" pos:end="419:41"><expr pos:start="419:30" pos:end="419:41"><name pos:start="419:30" pos:end="419:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="421:20" pos:end="421:54"><expr pos:start="421:20" pos:end="421:54"><literal type="string" pos:start="421:20" pos:end="421:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="423:13" pos:end="423:23">return <expr pos:start="423:20" pos:end="423:22"><name pos:start="423:20" pos:end="423:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="429:5" pos:end="461:5"><if pos:start="429:5" pos:end="461:5">if <condition pos:start="429:8" pos:end="429:32">(<expr pos:start="429:9" pos:end="429:31"><operator pos:start="429:9" pos:end="429:9">!</operator><name pos:start="429:10" pos:end="429:31"><name pos:start="429:10" pos:end="429:10">h</name><operator pos:start="429:11" pos:end="429:12">-&gt;</operator><name pos:start="429:13" pos:end="429:31">context_initialized</name></name></expr>)</condition> <block pos:start="429:34" pos:end="461:5">{<block_content pos:start="431:9" pos:end="459:9">

        <if_stmt pos:start="431:9" pos:end="439:9"><if pos:start="431:9" pos:end="439:9">if <condition pos:start="431:12" pos:end="431:31">(<expr pos:start="431:13" pos:end="431:30"><name pos:start="431:13" pos:end="431:14">sl</name> <operator pos:start="431:16" pos:end="431:17">!=</operator> <name pos:start="431:19" pos:end="431:30"><name pos:start="431:19" pos:end="431:19">h</name><operator pos:start="431:20" pos:end="431:21">-&gt;</operator><name pos:start="431:22" pos:end="431:30">slice_ctx</name></name></expr>)</condition> <block pos:start="431:33" pos:end="439:9">{<block_content pos:start="433:13" pos:end="437:40">

            <expr_stmt pos:start="433:13" pos:end="435:81"><expr pos:start="433:13" pos:end="435:80"><call pos:start="433:13" pos:end="435:80"><name pos:start="433:13" pos:end="433:18">av_log</name><argument_list pos:start="433:19" pos:end="435:80">(<argument pos:start="433:20" pos:end="433:27"><expr pos:start="433:20" pos:end="433:27"><name pos:start="433:20" pos:end="433:27"><name pos:start="433:20" pos:end="433:20">h</name><operator pos:start="433:21" pos:end="433:22">-&gt;</operator><name pos:start="433:23" pos:end="433:27">avctx</name></name></expr></argument>, <argument pos:start="433:30" pos:end="433:41"><expr pos:start="433:30" pos:end="433:41"><name pos:start="433:30" pos:end="433:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="435:20" pos:end="435:79"><expr pos:start="435:20" pos:end="435:79"><literal type="string" pos:start="435:20" pos:end="435:79">"Cannot (re-)initialize context during parallel decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="437:13" pos:end="437:40">return <expr pos:start="437:20" pos:end="437:39"><name pos:start="437:20" pos:end="437:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="443:9" pos:end="445:23"><if pos:start="443:9" pos:end="445:23">if <condition pos:start="443:12" pos:end="443:47">(<expr pos:start="443:13" pos:end="443:46"><operator pos:start="443:13" pos:end="443:13">(</operator><name pos:start="443:14" pos:end="443:16">ret</name> <operator pos:start="443:18" pos:end="443:18">=</operator> <call pos:start="443:20" pos:end="443:41"><name pos:start="443:20" pos:end="443:35">get_pixel_format</name><argument_list pos:start="443:36" pos:end="443:41">(<argument pos:start="443:37" pos:end="443:37"><expr pos:start="443:37" pos:end="443:37"><name pos:start="443:37" pos:end="443:37">h</name></expr></argument>, <argument pos:start="443:40" pos:end="443:40"><expr pos:start="443:40" pos:end="443:40"><literal type="number" pos:start="443:40" pos:end="443:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="443:42" pos:end="443:42">)</operator> <operator pos:start="443:44" pos:end="443:44">&lt;</operator> <literal type="number" pos:start="443:46" pos:end="443:46">0</literal></expr>)</condition><block type="pseudo" pos:start="445:13" pos:end="445:23"><block_content pos:start="445:13" pos:end="445:23">

            <return pos:start="445:13" pos:end="445:23">return <expr pos:start="445:20" pos:end="445:22"><name pos:start="445:20" pos:end="445:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:32"><expr pos:start="447:9" pos:end="447:31"><name pos:start="447:9" pos:end="447:25"><name pos:start="447:9" pos:end="447:9">h</name><operator pos:start="447:10" pos:end="447:11">-&gt;</operator><name pos:start="447:12" pos:end="447:16">avctx</name><operator pos:start="447:17" pos:end="447:18">-&gt;</operator><name pos:start="447:19" pos:end="447:25">pix_fmt</name></name> <operator pos:start="447:27" pos:end="447:27">=</operator> <name pos:start="447:29" pos:end="447:31">ret</name></expr>;</expr_stmt>



        <if_stmt pos:start="451:9" pos:end="459:9"><if pos:start="451:9" pos:end="459:9">if <condition pos:start="451:12" pos:end="451:53">(<expr pos:start="451:13" pos:end="451:52"><operator pos:start="451:13" pos:end="451:13">(</operator><name pos:start="451:14" pos:end="451:16">ret</name> <operator pos:start="451:18" pos:end="451:18">=</operator> <call pos:start="451:20" pos:end="451:47"><name pos:start="451:20" pos:end="451:41">h264_slice_header_init</name><argument_list pos:start="451:42" pos:end="451:47">(<argument pos:start="451:43" pos:end="451:43"><expr pos:start="451:43" pos:end="451:43"><name pos:start="451:43" pos:end="451:43">h</name></expr></argument>, <argument pos:start="451:46" pos:end="451:46"><expr pos:start="451:46" pos:end="451:46"><literal type="number" pos:start="451:46" pos:end="451:46">0</literal></expr></argument>)</argument_list></call><operator pos:start="451:48" pos:end="451:48">)</operator> <operator pos:start="451:50" pos:end="451:50">&lt;</operator> <literal type="number" pos:start="451:52" pos:end="451:52">0</literal></expr>)</condition> <block pos:start="451:55" pos:end="459:9">{<block_content pos:start="453:13" pos:end="457:23">

            <expr_stmt pos:start="453:13" pos:end="455:56"><expr pos:start="453:13" pos:end="455:55"><call pos:start="453:13" pos:end="455:55"><name pos:start="453:13" pos:end="453:18">av_log</name><argument_list pos:start="453:19" pos:end="455:55">(<argument pos:start="453:20" pos:end="453:27"><expr pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:20">h</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:27">avctx</name></name></expr></argument>, <argument pos:start="453:30" pos:end="453:41"><expr pos:start="453:30" pos:end="453:41"><name pos:start="453:30" pos:end="453:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="455:20" pos:end="455:54"><expr pos:start="455:20" pos:end="455:54"><literal type="string" pos:start="455:20" pos:end="455:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="457:13" pos:end="457:23">return <expr pos:start="457:20" pos:end="457:22"><name pos:start="457:20" pos:end="457:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="465:5" pos:end="471:5"><if pos:start="465:5" pos:end="471:5">if <condition pos:start="465:8" pos:end="465:54">(<expr pos:start="465:9" pos:end="465:53"><name pos:start="465:9" pos:end="465:19">first_slice</name> <operator pos:start="465:21" pos:end="465:22">&amp;&amp;</operator> <name pos:start="465:24" pos:end="465:43"><name pos:start="465:24" pos:end="465:24">h</name><operator pos:start="465:25" pos:end="465:26">-&gt;</operator><name pos:start="465:27" pos:end="465:43">dequant_coeff_pps</name></name> <operator pos:start="465:45" pos:end="465:46">!=</operator> <name pos:start="465:48" pos:end="465:53">pps_id</name></expr>)</condition> <block pos:start="465:56" pos:end="471:5">{<block_content pos:start="467:9" pos:end="469:39">

        <expr_stmt pos:start="467:9" pos:end="467:38"><expr pos:start="467:9" pos:end="467:37"><name pos:start="467:9" pos:end="467:28"><name pos:start="467:9" pos:end="467:9">h</name><operator pos:start="467:10" pos:end="467:11">-&gt;</operator><name pos:start="467:12" pos:end="467:28">dequant_coeff_pps</name></name> <operator pos:start="467:30" pos:end="467:30">=</operator> <name pos:start="467:32" pos:end="467:37">pps_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:39"><expr pos:start="469:9" pos:end="469:38"><call pos:start="469:9" pos:end="469:38"><name pos:start="469:9" pos:end="469:35">ff_h264_init_dequant_tables</name><argument_list pos:start="469:36" pos:end="469:38">(<argument pos:start="469:37" pos:end="469:37"><expr pos:start="469:37" pos:end="469:37"><name pos:start="469:37" pos:end="469:37">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="475:5" pos:end="475:61"><expr pos:start="475:5" pos:end="475:60"><name pos:start="475:5" pos:end="475:13">frame_num</name> <operator pos:start="475:15" pos:end="475:15">=</operator> <call pos:start="475:17" pos:end="475:60"><name pos:start="475:17" pos:end="475:24">get_bits</name><argument_list pos:start="475:25" pos:end="475:60">(<argument pos:start="475:26" pos:end="475:32"><expr pos:start="475:26" pos:end="475:32"><operator pos:start="475:26" pos:end="475:26">&amp;</operator><name pos:start="475:27" pos:end="475:32"><name pos:start="475:27" pos:end="475:28">sl</name><operator pos:start="475:29" pos:end="475:30">-&gt;</operator><name pos:start="475:31" pos:end="475:32">gb</name></name></expr></argument>, <argument pos:start="475:35" pos:end="475:59"><expr pos:start="475:35" pos:end="475:59"><name pos:start="475:35" pos:end="475:59"><name pos:start="475:35" pos:end="475:35">h</name><operator pos:start="475:36" pos:end="475:37">-&gt;</operator><name pos:start="475:38" pos:end="475:40">sps</name><operator pos:start="475:41" pos:end="475:41">.</operator><name pos:start="475:42" pos:end="475:59">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="477:5" pos:end="489:5"><if pos:start="477:5" pos:end="489:5">if <condition pos:start="477:8" pos:end="477:21">(<expr pos:start="477:9" pos:end="477:20"><operator pos:start="477:9" pos:end="477:9">!</operator><name pos:start="477:10" pos:end="477:20">first_slice</name></expr>)</condition> <block pos:start="477:23" pos:end="489:5">{<block_content pos:start="479:9" pos:end="487:9">

        <if_stmt pos:start="479:9" pos:end="487:9"><if pos:start="479:9" pos:end="487:9">if <condition pos:start="479:12" pos:end="479:38">(<expr pos:start="479:13" pos:end="479:37"><name pos:start="479:13" pos:end="479:24"><name pos:start="479:13" pos:end="479:13">h</name><operator pos:start="479:14" pos:end="479:15">-&gt;</operator><name pos:start="479:16" pos:end="479:24">frame_num</name></name> <operator pos:start="479:26" pos:end="479:27">!=</operator> <name pos:start="479:29" pos:end="479:37">frame_num</name></expr>)</condition> <block pos:start="479:40" pos:end="487:9">{<block_content pos:start="481:13" pos:end="485:39">

            <expr_stmt pos:start="481:13" pos:end="483:44"><expr pos:start="481:13" pos:end="483:43"><call pos:start="481:13" pos:end="483:43"><name pos:start="481:13" pos:end="481:18">av_log</name><argument_list pos:start="481:19" pos:end="483:43">(<argument pos:start="481:20" pos:end="481:27"><expr pos:start="481:20" pos:end="481:27"><name pos:start="481:20" pos:end="481:27"><name pos:start="481:20" pos:end="481:20">h</name><operator pos:start="481:21" pos:end="481:22">-&gt;</operator><name pos:start="481:23" pos:end="481:27">avctx</name></name></expr></argument>, <argument pos:start="481:30" pos:end="481:41"><expr pos:start="481:30" pos:end="481:41"><name pos:start="481:30" pos:end="481:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="481:44" pos:end="481:77"><expr pos:start="481:44" pos:end="481:77"><literal type="string" pos:start="481:44" pos:end="481:77">"Frame num change from %d to %d\n"</literal></expr></argument>,

                   <argument pos:start="483:20" pos:end="483:31"><expr pos:start="483:20" pos:end="483:31"><name pos:start="483:20" pos:end="483:31"><name pos:start="483:20" pos:end="483:20">h</name><operator pos:start="483:21" pos:end="483:22">-&gt;</operator><name pos:start="483:23" pos:end="483:31">frame_num</name></name></expr></argument>, <argument pos:start="483:34" pos:end="483:42"><expr pos:start="483:34" pos:end="483:42"><name pos:start="483:34" pos:end="483:42">frame_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="485:13" pos:end="485:39">return <expr pos:start="485:20" pos:end="485:38"><name pos:start="485:20" pos:end="485:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="493:5" pos:end="493:27"><expr pos:start="493:5" pos:end="493:26"><name pos:start="493:5" pos:end="493:16"><name pos:start="493:5" pos:end="493:6">sl</name><operator pos:start="493:7" pos:end="493:8">-&gt;</operator><name pos:start="493:9" pos:end="493:16">mb_mbaff</name></name>       <operator pos:start="493:24" pos:end="493:24">=</operator> <literal type="number" pos:start="493:26" pos:end="493:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="495:5" pos:end="495:27"><expr pos:start="495:5" pos:end="495:26"><name pos:start="495:5" pos:end="495:19"><name pos:start="495:5" pos:end="495:5">h</name><operator pos:start="495:6" pos:end="495:7">-&gt;</operator><name pos:start="495:8" pos:end="495:19">mb_aff_frame</name></name>    <operator pos:start="495:24" pos:end="495:24">=</operator> <literal type="number" pos:start="495:26" pos:end="495:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="497:5" pos:end="497:46"><expr pos:start="497:5" pos:end="497:45"><name pos:start="497:5" pos:end="497:22">last_pic_structure</name> <operator pos:start="497:24" pos:end="497:24">=</operator> <name pos:start="497:26" pos:end="497:45"><name pos:start="497:26" pos:end="497:26">h</name><operator pos:start="497:27" pos:end="497:28">-&gt;</operator><name pos:start="497:29" pos:end="497:45">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:38"><expr pos:start="499:5" pos:end="499:37"><name pos:start="499:5" pos:end="499:22">last_pic_droppable</name> <operator pos:start="499:24" pos:end="499:24">=</operator> <name pos:start="499:26" pos:end="499:37"><name pos:start="499:26" pos:end="499:26">h</name><operator pos:start="499:27" pos:end="499:28">-&gt;</operator><name pos:start="499:29" pos:end="499:37">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="501:5" pos:end="501:45"><expr pos:start="501:5" pos:end="501:44"><name pos:start="501:5" pos:end="501:13">droppable</name>          <operator pos:start="501:24" pos:end="501:24">=</operator> <name pos:start="501:26" pos:end="501:39"><name pos:start="501:26" pos:end="501:26">h</name><operator pos:start="501:27" pos:end="501:28">-&gt;</operator><name pos:start="501:29" pos:end="501:39">nal_ref_idc</name></name> <operator pos:start="501:41" pos:end="501:42">==</operator> <literal type="number" pos:start="501:44" pos:end="501:44">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="503:5" pos:end="535:5"><if pos:start="503:5" pos:end="507:5">if <condition pos:start="503:8" pos:end="503:35">(<expr pos:start="503:9" pos:end="503:34"><name pos:start="503:9" pos:end="503:34"><name pos:start="503:9" pos:end="503:9">h</name><operator pos:start="503:10" pos:end="503:11">-&gt;</operator><name pos:start="503:12" pos:end="503:14">sps</name><operator pos:start="503:15" pos:end="503:15">.</operator><name pos:start="503:16" pos:end="503:34">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="503:37" pos:end="507:5">{<block_content pos:start="505:9" pos:end="505:39">

        <expr_stmt pos:start="505:9" pos:end="505:39"><expr pos:start="505:9" pos:end="505:38"><name pos:start="505:9" pos:end="505:25">picture_structure</name> <operator pos:start="505:27" pos:end="505:27">=</operator> <name pos:start="505:29" pos:end="505:38">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="507:7" pos:end="535:5">else <block pos:start="507:12" pos:end="535:5">{<block_content pos:start="509:9" pos:end="533:9">

        <if_stmt pos:start="509:9" pos:end="515:9"><if pos:start="509:9" pos:end="515:9">if <condition pos:start="509:12" pos:end="509:81">(<expr pos:start="509:13" pos:end="509:80"><operator pos:start="509:13" pos:end="509:13">!</operator><name pos:start="509:14" pos:end="509:45"><name pos:start="509:14" pos:end="509:14">h</name><operator pos:start="509:15" pos:end="509:16">-&gt;</operator><name pos:start="509:17" pos:end="509:19">sps</name><operator pos:start="509:20" pos:end="509:20">.</operator><name pos:start="509:21" pos:end="509:45">direct_8x8_inference_flag</name></name> <operator pos:start="509:47" pos:end="509:48">&amp;&amp;</operator> <name pos:start="509:50" pos:end="509:59">slice_type</name> <operator pos:start="509:61" pos:end="509:62">==</operator> <name pos:start="509:64" pos:end="509:80">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="509:83" pos:end="515:9">{<block_content pos:start="511:13" pos:end="513:22">

            <expr_stmt pos:start="511:13" pos:end="511:117"><expr pos:start="511:13" pos:end="511:116"><call pos:start="511:13" pos:end="511:116"><name pos:start="511:13" pos:end="511:18">av_log</name><argument_list pos:start="511:19" pos:end="511:116">(<argument pos:start="511:20" pos:end="511:27"><expr pos:start="511:20" pos:end="511:27"><name pos:start="511:20" pos:end="511:27"><name pos:start="511:20" pos:end="511:20">h</name><operator pos:start="511:21" pos:end="511:22">-&gt;</operator><name pos:start="511:23" pos:end="511:27">avctx</name></name></expr></argument>, <argument pos:start="511:30" pos:end="511:41"><expr pos:start="511:30" pos:end="511:41"><name pos:start="511:30" pos:end="511:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="511:44" pos:end="511:115"><expr pos:start="511:44" pos:end="511:115"><literal type="string" pos:start="511:44" pos:end="511:115">"This stream was generated by a broken encoder, invalid 8x8 inference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="513:13" pos:end="513:22">return <expr pos:start="513:20" pos:end="513:21"><operator pos:start="513:20" pos:end="513:20">-</operator><literal type="number" pos:start="513:21" pos:end="513:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="517:9" pos:end="517:44"><expr pos:start="517:9" pos:end="517:43"><name pos:start="517:9" pos:end="517:22">field_pic_flag</name> <operator pos:start="517:24" pos:end="517:24">=</operator> <call pos:start="517:26" pos:end="517:43"><name pos:start="517:26" pos:end="517:34">get_bits1</name><argument_list pos:start="517:35" pos:end="517:43">(<argument pos:start="517:36" pos:end="517:42"><expr pos:start="517:36" pos:end="517:42"><operator pos:start="517:36" pos:end="517:36">&amp;</operator><name pos:start="517:37" pos:end="517:42"><name pos:start="517:37" pos:end="517:38">sl</name><operator pos:start="517:39" pos:end="517:40">-&gt;</operator><name pos:start="517:41" pos:end="517:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="521:9" pos:end="533:9"><if pos:start="521:9" pos:end="527:9">if <condition pos:start="521:12" pos:end="521:27">(<expr pos:start="521:13" pos:end="521:26"><name pos:start="521:13" pos:end="521:26">field_pic_flag</name></expr>)</condition> <block pos:start="521:29" pos:end="527:9">{<block_content pos:start="523:13" pos:end="525:67">

            <expr_stmt pos:start="523:13" pos:end="523:51"><expr pos:start="523:13" pos:end="523:50"><name pos:start="523:13" pos:end="523:29">bottom_field_flag</name> <operator pos:start="523:31" pos:end="523:31">=</operator> <call pos:start="523:33" pos:end="523:50"><name pos:start="523:33" pos:end="523:41">get_bits1</name><argument_list pos:start="523:42" pos:end="523:50">(<argument pos:start="523:43" pos:end="523:49"><expr pos:start="523:43" pos:end="523:49"><operator pos:start="523:43" pos:end="523:43">&amp;</operator><name pos:start="523:44" pos:end="523:49"><name pos:start="523:44" pos:end="523:45">sl</name><operator pos:start="523:46" pos:end="523:47">-&gt;</operator><name pos:start="523:48" pos:end="523:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:67"><expr pos:start="525:13" pos:end="525:66"><name pos:start="525:13" pos:end="525:29">picture_structure</name> <operator pos:start="525:31" pos:end="525:31">=</operator> <name pos:start="525:33" pos:end="525:46">PICT_TOP_FIELD</name> <operator pos:start="525:48" pos:end="525:48">+</operator> <name pos:start="525:50" pos:end="525:66">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="527:11" pos:end="533:9">else <block pos:start="527:16" pos:end="533:9">{<block_content pos:start="529:13" pos:end="531:49">

            <expr_stmt pos:start="529:13" pos:end="529:43"><expr pos:start="529:13" pos:end="529:42"><name pos:start="529:13" pos:end="529:29">picture_structure</name> <operator pos:start="529:31" pos:end="529:31">=</operator> <name pos:start="529:33" pos:end="529:42">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="531:49"><expr pos:start="531:13" pos:end="531:48"><name pos:start="531:13" pos:end="531:27"><name pos:start="531:13" pos:end="531:13">h</name><operator pos:start="531:14" pos:end="531:15">-&gt;</operator><name pos:start="531:16" pos:end="531:27">mb_aff_frame</name></name>      <operator pos:start="531:34" pos:end="531:34">=</operator> <name pos:start="531:36" pos:end="531:48"><name pos:start="531:36" pos:end="531:36">h</name><operator pos:start="531:37" pos:end="531:38">-&gt;</operator><name pos:start="531:39" pos:end="531:41">sps</name><operator pos:start="531:42" pos:end="531:42">.</operator><name pos:start="531:43" pos:end="531:48">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="537:5" pos:end="563:5"><if pos:start="537:5" pos:end="563:5">if <condition pos:start="537:8" pos:end="537:25">(<expr pos:start="537:9" pos:end="537:24"><name pos:start="537:9" pos:end="537:24"><name pos:start="537:9" pos:end="537:9">h</name><operator pos:start="537:10" pos:end="537:11">-&gt;</operator><name pos:start="537:12" pos:end="537:24">current_slice</name></name></expr>)</condition> <block pos:start="537:27" pos:end="563:5">{<block_content pos:start="539:9" pos:end="561:9">

        <if_stmt pos:start="539:9" pos:end="561:9"><if pos:start="539:9" pos:end="551:9">if <condition pos:start="539:12" pos:end="541:44">(<expr pos:start="539:13" pos:end="541:43"><name pos:start="539:13" pos:end="539:30">last_pic_structure</name> <operator pos:start="539:32" pos:end="539:33">!=</operator> <name pos:start="539:35" pos:end="539:51">picture_structure</name> <operator pos:start="539:53" pos:end="539:54">||</operator>

            <name pos:start="541:13" pos:end="541:30">last_pic_droppable</name> <operator pos:start="541:32" pos:end="541:33">!=</operator> <name pos:start="541:35" pos:end="541:43">droppable</name></expr>)</condition> <block pos:start="541:46" pos:end="551:9">{<block_content pos:start="543:13" pos:end="549:39">

            <expr_stmt pos:start="543:13" pos:end="547:61"><expr pos:start="543:13" pos:end="547:60"><call pos:start="543:13" pos:end="547:60"><name pos:start="543:13" pos:end="543:18">av_log</name><argument_list pos:start="543:19" pos:end="547:60">(<argument pos:start="543:20" pos:end="543:27"><expr pos:start="543:20" pos:end="543:27"><name pos:start="543:20" pos:end="543:27"><name pos:start="543:20" pos:end="543:20">h</name><operator pos:start="543:21" pos:end="543:22">-&gt;</operator><name pos:start="543:23" pos:end="543:27">avctx</name></name></expr></argument>, <argument pos:start="543:30" pos:end="543:41"><expr pos:start="543:30" pos:end="543:41"><name pos:start="543:30" pos:end="543:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="545:20" pos:end="545:83"><expr pos:start="545:20" pos:end="545:83"><literal type="string" pos:start="545:20" pos:end="545:83">"Changing field mode (%d -&gt; %d) between slices is not allowed\n"</literal></expr></argument>,

                   <argument pos:start="547:20" pos:end="547:37"><expr pos:start="547:20" pos:end="547:37"><name pos:start="547:20" pos:end="547:37">last_pic_structure</name></expr></argument>, <argument pos:start="547:40" pos:end="547:59"><expr pos:start="547:40" pos:end="547:59"><name pos:start="547:40" pos:end="547:59"><name pos:start="547:40" pos:end="547:40">h</name><operator pos:start="547:41" pos:end="547:42">-&gt;</operator><name pos:start="547:43" pos:end="547:59">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="549:13" pos:end="549:39">return <expr pos:start="549:20" pos:end="549:38"><name pos:start="549:20" pos:end="549:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="551:11" pos:end="561:9">else if <condition pos:start="551:19" pos:end="551:35">(<expr pos:start="551:20" pos:end="551:34"><operator pos:start="551:20" pos:end="551:20">!</operator><name pos:start="551:21" pos:end="551:34"><name pos:start="551:21" pos:end="551:21">h</name><operator pos:start="551:22" pos:end="551:23">-&gt;</operator><name pos:start="551:24" pos:end="551:34">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="551:37" pos:end="561:9">{<block_content pos:start="553:13" pos:end="559:39">

            <expr_stmt pos:start="553:13" pos:end="557:41"><expr pos:start="553:13" pos:end="557:40"><call pos:start="553:13" pos:end="557:40"><name pos:start="553:13" pos:end="553:18">av_log</name><argument_list pos:start="553:19" pos:end="557:40">(<argument pos:start="553:20" pos:end="553:27"><expr pos:start="553:20" pos:end="553:27"><name pos:start="553:20" pos:end="553:27"><name pos:start="553:20" pos:end="553:20">h</name><operator pos:start="553:21" pos:end="553:22">-&gt;</operator><name pos:start="553:23" pos:end="553:27">avctx</name></name></expr></argument>, <argument pos:start="553:30" pos:end="553:41"><expr pos:start="553:30" pos:end="553:41"><name pos:start="553:30" pos:end="553:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="555:20" pos:end="555:52"><expr pos:start="555:20" pos:end="555:52"><literal type="string" pos:start="555:20" pos:end="555:52">"unset cur_pic_ptr on slice %d\n"</literal></expr></argument>,

                   <argument pos:start="557:20" pos:end="557:39"><expr pos:start="557:20" pos:end="557:39"><name pos:start="557:20" pos:end="557:35"><name pos:start="557:20" pos:end="557:20">h</name><operator pos:start="557:21" pos:end="557:22">-&gt;</operator><name pos:start="557:23" pos:end="557:35">current_slice</name></name> <operator pos:start="557:37" pos:end="557:37">+</operator> <literal type="number" pos:start="557:39" pos:end="557:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="559:13" pos:end="559:39">return <expr pos:start="559:20" pos:end="559:38"><name pos:start="559:20" pos:end="559:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="567:5" pos:end="567:45"><expr pos:start="567:5" pos:end="567:44"><name pos:start="567:5" pos:end="567:24"><name pos:start="567:5" pos:end="567:5">h</name><operator pos:start="567:6" pos:end="567:7">-&gt;</operator><name pos:start="567:8" pos:end="567:24">picture_structure</name></name> <operator pos:start="567:26" pos:end="567:26">=</operator> <name pos:start="567:28" pos:end="567:44">picture_structure</name></expr>;</expr_stmt>

    <expr_stmt pos:start="569:5" pos:end="569:37"><expr pos:start="569:5" pos:end="569:36"><name pos:start="569:5" pos:end="569:16"><name pos:start="569:5" pos:end="569:5">h</name><operator pos:start="569:6" pos:end="569:7">-&gt;</operator><name pos:start="569:8" pos:end="569:16">droppable</name></name>         <operator pos:start="569:26" pos:end="569:26">=</operator> <name pos:start="569:28" pos:end="569:36">droppable</name></expr>;</expr_stmt>

    <expr_stmt pos:start="571:5" pos:end="571:37"><expr pos:start="571:5" pos:end="571:36"><name pos:start="571:5" pos:end="571:16"><name pos:start="571:5" pos:end="571:5">h</name><operator pos:start="571:6" pos:end="571:7">-&gt;</operator><name pos:start="571:8" pos:end="571:16">frame_num</name></name>         <operator pos:start="571:26" pos:end="571:26">=</operator> <name pos:start="571:28" pos:end="571:36">frame_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="573:5" pos:end="573:65"><expr pos:start="573:5" pos:end="573:64"><name pos:start="573:5" pos:end="573:30"><name pos:start="573:5" pos:end="573:6">sl</name><operator pos:start="573:7" pos:end="573:8">-&gt;</operator><name pos:start="573:9" pos:end="573:30">mb_field_decoding_flag</name></name> <operator pos:start="573:32" pos:end="573:32">=</operator> <name pos:start="573:34" pos:end="573:50">picture_structure</name> <operator pos:start="573:52" pos:end="573:53">!=</operator> <name pos:start="573:55" pos:end="573:64">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="577:5" pos:end="931:5"><if pos:start="577:5" pos:end="931:5">if <condition pos:start="577:8" pos:end="577:30">(<expr pos:start="577:9" pos:end="577:29"><name pos:start="577:9" pos:end="577:24"><name pos:start="577:9" pos:end="577:9">h</name><operator pos:start="577:10" pos:end="577:11">-&gt;</operator><name pos:start="577:12" pos:end="577:24">current_slice</name></name> <operator pos:start="577:26" pos:end="577:27">==</operator> <literal type="number" pos:start="577:29" pos:end="577:29">0</literal></expr>)</condition> <block pos:start="577:32" pos:end="931:5">{<block_content pos:start="583:9" pos:end="929:32">

        <comment type="block" pos:start="579:9" pos:end="581:44">/* Shorten frame num gaps so we don't have to allocate reference

         * frames just to throw them away */</comment>

        <if_stmt pos:start="583:9" pos:end="611:9"><if pos:start="583:9" pos:end="611:9">if <condition pos:start="583:12" pos:end="583:46">(<expr pos:start="583:13" pos:end="583:45"><name pos:start="583:13" pos:end="583:24"><name pos:start="583:13" pos:end="583:13">h</name><operator pos:start="583:14" pos:end="583:15">-&gt;</operator><name pos:start="583:16" pos:end="583:24">frame_num</name></name> <operator pos:start="583:26" pos:end="583:27">!=</operator> <name pos:start="583:29" pos:end="583:45"><name pos:start="583:29" pos:end="583:29">h</name><operator pos:start="583:30" pos:end="583:31">-&gt;</operator><name pos:start="583:32" pos:end="583:45">prev_frame_num</name></name></expr>)</condition> <block pos:start="583:48" pos:end="611:9">{<block_content pos:start="585:13" pos:end="609:13">

            <decl_stmt pos:start="585:13" pos:end="585:58"><decl pos:start="585:13" pos:end="585:57"><type pos:start="585:13" pos:end="585:15"><name pos:start="585:13" pos:end="585:15">int</name></type> <name pos:start="585:17" pos:end="585:37">unwrap_prev_frame_num</name> <init pos:start="585:39" pos:end="585:57">= <expr pos:start="585:41" pos:end="585:57"><name pos:start="585:41" pos:end="585:57"><name pos:start="585:41" pos:end="585:41">h</name><operator pos:start="585:42" pos:end="585:43">-&gt;</operator><name pos:start="585:44" pos:end="585:57">prev_frame_num</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="587:13" pos:end="587:71"><decl pos:start="587:13" pos:end="587:70"><type pos:start="587:13" pos:end="587:15"><name pos:start="587:13" pos:end="587:15">int</name></type> <name pos:start="587:17" pos:end="587:29">max_frame_num</name>         <init pos:start="587:39" pos:end="587:70">= <expr pos:start="587:41" pos:end="587:70"><literal type="number" pos:start="587:41" pos:end="587:41">1</literal> <operator pos:start="587:43" pos:end="587:44">&lt;&lt;</operator> <name pos:start="587:46" pos:end="587:70"><name pos:start="587:46" pos:end="587:46">h</name><operator pos:start="587:47" pos:end="587:48">-&gt;</operator><name pos:start="587:49" pos:end="587:51">sps</name><operator pos:start="587:52" pos:end="587:52">.</operator><name pos:start="587:53" pos:end="587:70">log2_max_frame_num</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="591:13" pos:end="593:55"><if pos:start="591:13" pos:end="593:55">if <condition pos:start="591:16" pos:end="591:53">(<expr pos:start="591:17" pos:end="591:52"><name pos:start="591:17" pos:end="591:37">unwrap_prev_frame_num</name> <operator pos:start="591:39" pos:end="591:39">&gt;</operator> <name pos:start="591:41" pos:end="591:52"><name pos:start="591:41" pos:end="591:41">h</name><operator pos:start="591:42" pos:end="591:43">-&gt;</operator><name pos:start="591:44" pos:end="591:52">frame_num</name></name></expr>)</condition><block type="pseudo" pos:start="593:17" pos:end="593:55"><block_content pos:start="593:17" pos:end="593:55">

                <expr_stmt pos:start="593:17" pos:end="593:55"><expr pos:start="593:17" pos:end="593:54"><name pos:start="593:17" pos:end="593:37">unwrap_prev_frame_num</name> <operator pos:start="593:39" pos:end="593:40">-=</operator> <name pos:start="593:42" pos:end="593:54">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="597:13" pos:end="609:13"><if pos:start="597:13" pos:end="609:13">if <condition pos:start="597:16" pos:end="597:80">(<expr pos:start="597:17" pos:end="597:79"><operator pos:start="597:17" pos:end="597:17">(</operator><name pos:start="597:18" pos:end="597:29"><name pos:start="597:18" pos:end="597:18">h</name><operator pos:start="597:19" pos:end="597:20">-&gt;</operator><name pos:start="597:21" pos:end="597:29">frame_num</name></name> <operator pos:start="597:31" pos:end="597:31">-</operator> <name pos:start="597:33" pos:end="597:53">unwrap_prev_frame_num</name><operator pos:start="597:54" pos:end="597:54">)</operator> <operator pos:start="597:56" pos:end="597:56">&gt;</operator> <name pos:start="597:58" pos:end="597:79"><name pos:start="597:58" pos:end="597:58">h</name><operator pos:start="597:59" pos:end="597:60">-&gt;</operator><name pos:start="597:61" pos:end="597:63">sps</name><operator pos:start="597:64" pos:end="597:64">.</operator><name pos:start="597:65" pos:end="597:79">ref_frame_count</name></name></expr>)</condition> <block pos:start="597:82" pos:end="609:13">{<block_content pos:start="599:17" pos:end="607:58">

                <expr_stmt pos:start="599:17" pos:end="599:84"><expr pos:start="599:17" pos:end="599:83"><name pos:start="599:17" pos:end="599:37">unwrap_prev_frame_num</name> <operator pos:start="599:39" pos:end="599:39">=</operator> <operator pos:start="599:41" pos:end="599:41">(</operator><name pos:start="599:42" pos:end="599:53"><name pos:start="599:42" pos:end="599:42">h</name><operator pos:start="599:43" pos:end="599:44">-&gt;</operator><name pos:start="599:45" pos:end="599:53">frame_num</name></name> <operator pos:start="599:55" pos:end="599:55">-</operator> <name pos:start="599:57" pos:end="599:78"><name pos:start="599:57" pos:end="599:57">h</name><operator pos:start="599:58" pos:end="599:59">-&gt;</operator><name pos:start="599:60" pos:end="599:62">sps</name><operator pos:start="599:63" pos:end="599:63">.</operator><name pos:start="599:64" pos:end="599:78">ref_frame_count</name></name><operator pos:start="599:79" pos:end="599:79">)</operator> <operator pos:start="599:81" pos:end="599:81">-</operator> <literal type="number" pos:start="599:83" pos:end="599:83">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="601:17" pos:end="603:59"><if pos:start="601:17" pos:end="603:59">if <condition pos:start="601:20" pos:end="601:46">(<expr pos:start="601:21" pos:end="601:45"><name pos:start="601:21" pos:end="601:41">unwrap_prev_frame_num</name> <operator pos:start="601:43" pos:end="601:43">&lt;</operator> <literal type="number" pos:start="601:45" pos:end="601:45">0</literal></expr>)</condition><block type="pseudo" pos:start="603:21" pos:end="603:59"><block_content pos:start="603:21" pos:end="603:59">

                    <expr_stmt pos:start="603:21" pos:end="603:59"><expr pos:start="603:21" pos:end="603:58"><name pos:start="603:21" pos:end="603:41">unwrap_prev_frame_num</name> <operator pos:start="603:43" pos:end="603:44">+=</operator> <name pos:start="603:46" pos:end="603:58">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="607:17" pos:end="607:58"><expr pos:start="607:17" pos:end="607:57"><name pos:start="607:17" pos:end="607:33"><name pos:start="607:17" pos:end="607:17">h</name><operator pos:start="607:18" pos:end="607:19">-&gt;</operator><name pos:start="607:20" pos:end="607:33">prev_frame_num</name></name> <operator pos:start="607:35" pos:end="607:35">=</operator> <name pos:start="607:37" pos:end="607:57">unwrap_prev_frame_num</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="615:9" pos:end="623:51">/* See if we have a decoded first field looking for a pair...

         * Here, we're using that to see if we should mark previously

         * decode frames as "finished".

         * We have to do that before the "dummy" in-between frame allocation,

         * since that can modify h-&gt;cur_pic_ptr. */</comment>

        <if_stmt pos:start="625:9" pos:end="725:9"><if pos:start="625:9" pos:end="725:9">if <condition pos:start="625:12" pos:end="625:27">(<expr pos:start="625:13" pos:end="625:26"><name pos:start="625:13" pos:end="625:26"><name pos:start="625:13" pos:end="625:13">h</name><operator pos:start="625:14" pos:end="625:15">-&gt;</operator><name pos:start="625:16" pos:end="625:26">first_field</name></name></expr>)</condition> <block pos:start="625:29" pos:end="725:9">{<block_content pos:start="627:13" pos:end="723:13">

            <expr_stmt pos:start="627:13" pos:end="627:35"><expr pos:start="627:13" pos:end="627:34"><call pos:start="627:13" pos:end="627:34"><name pos:start="627:13" pos:end="627:18">assert</name><argument_list pos:start="627:19" pos:end="627:34">(<argument pos:start="627:20" pos:end="627:33"><expr pos:start="627:20" pos:end="627:33"><name pos:start="627:20" pos:end="627:33"><name pos:start="627:20" pos:end="627:20">h</name><operator pos:start="627:21" pos:end="627:22">-&gt;</operator><name pos:start="627:23" pos:end="627:33">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="629:13" pos:end="629:45"><expr pos:start="629:13" pos:end="629:44"><call pos:start="629:13" pos:end="629:44"><name pos:start="629:13" pos:end="629:18">assert</name><argument_list pos:start="629:19" pos:end="629:44">(<argument pos:start="629:20" pos:end="629:43"><expr pos:start="629:20" pos:end="629:43"><name pos:start="629:20" pos:end="629:43"><name pos:start="629:20" pos:end="629:20">h</name><operator pos:start="629:21" pos:end="629:22">-&gt;</operator><name pos:start="629:23" pos:end="629:33">cur_pic_ptr</name><operator pos:start="629:34" pos:end="629:35">-&gt;</operator><name pos:start="629:36" pos:end="629:36">f</name><operator pos:start="629:37" pos:end="629:37">.</operator><name pos:start="629:38" pos:end="629:40">buf</name><index pos:start="629:41" pos:end="629:43">[<expr pos:start="629:42" pos:end="629:42"><literal type="number" pos:start="629:42" pos:end="629:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="631:13" pos:end="631:65"><expr pos:start="631:13" pos:end="631:64"><call pos:start="631:13" pos:end="631:64"><name pos:start="631:13" pos:end="631:18">assert</name><argument_list pos:start="631:19" pos:end="631:64">(<argument pos:start="631:20" pos:end="631:63"><expr pos:start="631:20" pos:end="631:63"><name pos:start="631:20" pos:end="631:44"><name pos:start="631:20" pos:end="631:20">h</name><operator pos:start="631:21" pos:end="631:22">-&gt;</operator><name pos:start="631:23" pos:end="631:33">cur_pic_ptr</name><operator pos:start="631:34" pos:end="631:35">-&gt;</operator><name pos:start="631:36" pos:end="631:44">reference</name></name> <operator pos:start="631:46" pos:end="631:47">!=</operator> <name pos:start="631:49" pos:end="631:63">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="635:13" pos:end="635:51">/* Mark old field/frame as completed */</comment>

            <if_stmt pos:start="637:13" pos:end="643:13"><if pos:start="637:13" pos:end="643:13">if <condition pos:start="637:16" pos:end="637:53">(<expr pos:start="637:17" pos:end="637:52"><name pos:start="637:17" pos:end="637:40"><name pos:start="637:17" pos:end="637:17">h</name><operator pos:start="637:18" pos:end="637:19">-&gt;</operator><name pos:start="637:20" pos:end="637:30">cur_pic_ptr</name><operator pos:start="637:31" pos:end="637:32">-&gt;</operator><name pos:start="637:33" pos:end="637:34">tf</name><operator pos:start="637:35" pos:end="637:35">.</operator><name pos:start="637:36" pos:end="637:40">owner</name></name> <operator pos:start="637:42" pos:end="637:43">==</operator> <name pos:start="637:45" pos:end="637:52"><name pos:start="637:45" pos:end="637:45">h</name><operator pos:start="637:46" pos:end="637:47">-&gt;</operator><name pos:start="637:48" pos:end="637:52">avctx</name></name></expr>)</condition> <block pos:start="637:55" pos:end="643:13">{<block_content pos:start="639:17" pos:end="641:83">

                <expr_stmt pos:start="639:17" pos:end="641:83"><expr pos:start="639:17" pos:end="641:82"><call pos:start="639:17" pos:end="641:82"><name pos:start="639:17" pos:end="639:41">ff_thread_report_progress</name><argument_list pos:start="639:42" pos:end="641:82">(<argument pos:start="639:43" pos:end="639:61"><expr pos:start="639:43" pos:end="639:61"><operator pos:start="639:43" pos:end="639:43">&amp;</operator><name pos:start="639:44" pos:end="639:61"><name pos:start="639:44" pos:end="639:44">h</name><operator pos:start="639:45" pos:end="639:46">-&gt;</operator><name pos:start="639:47" pos:end="639:57">cur_pic_ptr</name><operator pos:start="639:58" pos:end="639:59">-&gt;</operator><name pos:start="639:60" pos:end="639:61">tf</name></name></expr></argument>, <argument pos:start="639:64" pos:end="639:70"><expr pos:start="639:64" pos:end="639:70"><name pos:start="639:64" pos:end="639:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="641:43" pos:end="641:81"><expr pos:start="641:43" pos:end="641:81"><name pos:start="641:43" pos:end="641:60">last_pic_structure</name> <operator pos:start="641:62" pos:end="641:63">==</operator> <name pos:start="641:65" pos:end="641:81">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="647:13" pos:end="647:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="649:13" pos:end="723:13"><if pos:start="649:13" pos:end="663:13">if <condition pos:start="649:16" pos:end="649:80">(<expr pos:start="649:17" pos:end="649:79"><operator pos:start="649:17" pos:end="649:17">!</operator><call pos:start="649:18" pos:end="649:33"><name pos:start="649:18" pos:end="649:30">FIELD_PICTURE</name><argument_list pos:start="649:31" pos:end="649:33">(<argument pos:start="649:32" pos:end="649:32"><expr pos:start="649:32" pos:end="649:32"><name pos:start="649:32" pos:end="649:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="649:35" pos:end="649:36">||</operator> <name pos:start="649:38" pos:end="649:57"><name pos:start="649:38" pos:end="649:38">h</name><operator pos:start="649:39" pos:end="649:40">-&gt;</operator><name pos:start="649:41" pos:end="649:57">picture_structure</name></name> <operator pos:start="649:59" pos:end="649:60">==</operator> <name pos:start="649:62" pos:end="649:79">last_pic_structure</name></expr>)</condition> <block pos:start="649:82" pos:end="663:13">{<block_content pos:start="655:17" pos:end="661:17">

                <comment type="block" pos:start="651:17" pos:end="653:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <if_stmt pos:start="655:17" pos:end="661:17"><if pos:start="655:17" pos:end="661:17">if <condition pos:start="655:20" pos:end="655:53">(<expr pos:start="655:21" pos:end="655:52"><name pos:start="655:21" pos:end="655:38">last_pic_structure</name> <operator pos:start="655:40" pos:end="655:41">!=</operator> <name pos:start="655:43" pos:end="655:52">PICT_FRAME</name></expr>)</condition> <block pos:start="655:55" pos:end="661:17">{<block_content pos:start="657:21" pos:end="659:84">

                    <expr_stmt pos:start="657:21" pos:end="659:84"><expr pos:start="657:21" pos:end="659:83"><call pos:start="657:21" pos:end="659:83"><name pos:start="657:21" pos:end="657:45">ff_thread_report_progress</name><argument_list pos:start="657:46" pos:end="659:83">(<argument pos:start="657:47" pos:end="657:65"><expr pos:start="657:47" pos:end="657:65"><operator pos:start="657:47" pos:end="657:47">&amp;</operator><name pos:start="657:48" pos:end="657:65"><name pos:start="657:48" pos:end="657:48">h</name><operator pos:start="657:49" pos:end="657:50">-&gt;</operator><name pos:start="657:51" pos:end="657:61">cur_pic_ptr</name><operator pos:start="657:62" pos:end="657:63">-&gt;</operator><name pos:start="657:64" pos:end="657:65">tf</name></name></expr></argument>, <argument pos:start="657:68" pos:end="657:74"><expr pos:start="657:68" pos:end="657:74"><name pos:start="657:68" pos:end="657:74">INT_MAX</name></expr></argument>,

                                              <argument pos:start="659:47" pos:end="659:82"><expr pos:start="659:47" pos:end="659:82"><name pos:start="659:47" pos:end="659:64">last_pic_structure</name> <operator pos:start="659:66" pos:end="659:67">==</operator> <name pos:start="659:69" pos:end="659:82">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="663:15" pos:end="723:13">else <block pos:start="663:20" pos:end="723:13">{<block_content pos:start="665:17" pos:end="721:17">

                <if_stmt pos:start="665:17" pos:end="721:17"><if pos:start="665:17" pos:end="683:17">if <condition pos:start="665:20" pos:end="665:62">(<expr pos:start="665:21" pos:end="665:61"><name pos:start="665:21" pos:end="665:45"><name pos:start="665:21" pos:end="665:21">h</name><operator pos:start="665:22" pos:end="665:23">-&gt;</operator><name pos:start="665:24" pos:end="665:34">cur_pic_ptr</name><operator pos:start="665:35" pos:end="665:36">-&gt;</operator><name pos:start="665:37" pos:end="665:45">frame_num</name></name> <operator pos:start="665:47" pos:end="665:48">!=</operator> <name pos:start="665:50" pos:end="665:61"><name pos:start="665:50" pos:end="665:50">h</name><operator pos:start="665:51" pos:end="665:52">-&gt;</operator><name pos:start="665:53" pos:end="665:61">frame_num</name></name></expr>)</condition> <block pos:start="665:64" pos:end="683:17">{<block_content pos:start="675:21" pos:end="681:21">

                    <comment type="block" pos:start="667:21" pos:end="673:35">/* This and previous field were reference, but had

                     * different frame_nums. Consider this field first in

                     * pair. Throw away previous field except for reference

                     * purposes. */</comment>

                    <if_stmt pos:start="675:21" pos:end="681:21"><if pos:start="675:21" pos:end="681:21">if <condition pos:start="675:24" pos:end="675:57">(<expr pos:start="675:25" pos:end="675:56"><name pos:start="675:25" pos:end="675:42">last_pic_structure</name> <operator pos:start="675:44" pos:end="675:45">!=</operator> <name pos:start="675:47" pos:end="675:56">PICT_FRAME</name></expr>)</condition> <block pos:start="675:59" pos:end="681:21">{<block_content pos:start="677:25" pos:end="679:88">

                        <expr_stmt pos:start="677:25" pos:end="679:88"><expr pos:start="677:25" pos:end="679:87"><call pos:start="677:25" pos:end="679:87"><name pos:start="677:25" pos:end="677:49">ff_thread_report_progress</name><argument_list pos:start="677:50" pos:end="679:87">(<argument pos:start="677:51" pos:end="677:69"><expr pos:start="677:51" pos:end="677:69"><operator pos:start="677:51" pos:end="677:51">&amp;</operator><name pos:start="677:52" pos:end="677:69"><name pos:start="677:52" pos:end="677:52">h</name><operator pos:start="677:53" pos:end="677:54">-&gt;</operator><name pos:start="677:55" pos:end="677:65">cur_pic_ptr</name><operator pos:start="677:66" pos:end="677:67">-&gt;</operator><name pos:start="677:68" pos:end="677:69">tf</name></name></expr></argument>, <argument pos:start="677:72" pos:end="677:78"><expr pos:start="677:72" pos:end="677:78"><name pos:start="677:72" pos:end="677:78">INT_MAX</name></expr></argument>,

                                                  <argument pos:start="679:51" pos:end="679:86"><expr pos:start="679:51" pos:end="679:86"><name pos:start="679:51" pos:end="679:68">last_pic_structure</name> <operator pos:start="679:70" pos:end="679:71">==</operator> <name pos:start="679:73" pos:end="679:86">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="683:19" pos:end="721:17">else <block pos:start="683:24" pos:end="721:17">{<block_content pos:start="687:21" pos:end="719:21">

                    <comment type="block" pos:start="685:21" pos:end="685:60">/* Second field in complementary pair */</comment>

                    <if_stmt pos:start="687:21" pos:end="719:21"><if pos:start="687:21" pos:end="707:21">if <condition pos:start="687:24" pos:end="693:68">(<expr pos:start="687:25" pos:end="693:67"><operator pos:start="687:25" pos:end="687:25">!</operator><operator pos:start="687:26" pos:end="687:26">(</operator><operator pos:start="687:27" pos:end="687:27">(</operator><name pos:start="687:28" pos:end="687:45">last_pic_structure</name>   <operator pos:start="687:49" pos:end="687:50">==</operator> <name pos:start="687:52" pos:end="687:65">PICT_TOP_FIELD</name> <operator pos:start="687:67" pos:end="687:68">&amp;&amp;</operator>

                           <name pos:start="689:28" pos:end="689:47"><name pos:start="689:28" pos:end="689:28">h</name><operator pos:start="689:29" pos:end="689:30">-&gt;</operator><name pos:start="689:31" pos:end="689:47">picture_structure</name></name> <operator pos:start="689:49" pos:end="689:50">==</operator> <name pos:start="689:52" pos:end="689:68">PICT_BOTTOM_FIELD</name><operator pos:start="689:69" pos:end="689:69">)</operator> <operator pos:start="689:71" pos:end="689:72">||</operator>

                          <operator pos:start="691:27" pos:end="691:27">(</operator><name pos:start="691:28" pos:end="691:45">last_pic_structure</name>   <operator pos:start="691:49" pos:end="691:50">==</operator> <name pos:start="691:52" pos:end="691:68">PICT_BOTTOM_FIELD</name> <operator pos:start="691:70" pos:end="691:71">&amp;&amp;</operator>

                           <name pos:start="693:28" pos:end="693:47"><name pos:start="693:28" pos:end="693:28">h</name><operator pos:start="693:29" pos:end="693:30">-&gt;</operator><name pos:start="693:31" pos:end="693:47">picture_structure</name></name> <operator pos:start="693:49" pos:end="693:50">==</operator> <name pos:start="693:52" pos:end="693:65">PICT_TOP_FIELD</name><operator pos:start="693:66" pos:end="693:66">)</operator><operator pos:start="693:67" pos:end="693:67">)</operator></expr>)</condition> <block pos:start="693:70" pos:end="707:21">{<block_content pos:start="695:25" pos:end="705:51">

                        <expr_stmt pos:start="695:25" pos:end="699:73"><expr pos:start="695:25" pos:end="699:72"><call pos:start="695:25" pos:end="699:72"><name pos:start="695:25" pos:end="695:30">av_log</name><argument_list pos:start="695:31" pos:end="699:72">(<argument pos:start="695:32" pos:end="695:39"><expr pos:start="695:32" pos:end="695:39"><name pos:start="695:32" pos:end="695:39"><name pos:start="695:32" pos:end="695:32">h</name><operator pos:start="695:33" pos:end="695:34">-&gt;</operator><name pos:start="695:35" pos:end="695:39">avctx</name></name></expr></argument>, <argument pos:start="695:42" pos:end="695:53"><expr pos:start="695:42" pos:end="695:53"><name pos:start="695:42" pos:end="695:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="697:32" pos:end="697:71"><expr pos:start="697:32" pos:end="697:71"><literal type="string" pos:start="697:32" pos:end="697:71">"Invalid field mode combination %d/%d\n"</literal></expr></argument>,

                               <argument pos:start="699:32" pos:end="699:49"><expr pos:start="699:32" pos:end="699:49"><name pos:start="699:32" pos:end="699:49">last_pic_structure</name></expr></argument>, <argument pos:start="699:52" pos:end="699:71"><expr pos:start="699:52" pos:end="699:71"><name pos:start="699:52" pos:end="699:71"><name pos:start="699:52" pos:end="699:52">h</name><operator pos:start="699:53" pos:end="699:54">-&gt;</operator><name pos:start="699:55" pos:end="699:71">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="701:25" pos:end="701:66"><expr pos:start="701:25" pos:end="701:65"><name pos:start="701:25" pos:end="701:44"><name pos:start="701:25" pos:end="701:25">h</name><operator pos:start="701:26" pos:end="701:27">-&gt;</operator><name pos:start="701:28" pos:end="701:44">picture_structure</name></name> <operator pos:start="701:46" pos:end="701:46">=</operator> <name pos:start="701:48" pos:end="701:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="703:25" pos:end="703:66"><expr pos:start="703:25" pos:end="703:65"><name pos:start="703:25" pos:end="703:36"><name pos:start="703:25" pos:end="703:25">h</name><operator pos:start="703:26" pos:end="703:27">-&gt;</operator><name pos:start="703:28" pos:end="703:36">droppable</name></name>         <operator pos:start="703:46" pos:end="703:46">=</operator> <name pos:start="703:48" pos:end="703:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="705:25" pos:end="705:51">return <expr pos:start="705:32" pos:end="705:50"><name pos:start="705:32" pos:end="705:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if> <if type="elseif" pos:start="707:23" pos:end="719:21">else if <condition pos:start="707:31" pos:end="707:66">(<expr pos:start="707:32" pos:end="707:65"><name pos:start="707:32" pos:end="707:49">last_pic_droppable</name> <operator pos:start="707:51" pos:end="707:52">!=</operator> <name pos:start="707:54" pos:end="707:65"><name pos:start="707:54" pos:end="707:54">h</name><operator pos:start="707:55" pos:end="707:56">-&gt;</operator><name pos:start="707:57" pos:end="707:65">droppable</name></name></expr>)</condition> <block pos:start="707:68" pos:end="719:21">{<block_content pos:start="709:25" pos:end="717:52">

                        <expr_stmt pos:start="709:25" pos:end="711:115"><expr pos:start="709:25" pos:end="711:114"><call pos:start="709:25" pos:end="711:114"><name pos:start="709:25" pos:end="709:45">avpriv_request_sample</name><argument_list pos:start="709:46" pos:end="711:114">(<argument pos:start="709:47" pos:end="709:54"><expr pos:start="709:47" pos:end="709:54"><name pos:start="709:47" pos:end="709:54"><name pos:start="709:47" pos:end="709:47">h</name><operator pos:start="709:48" pos:end="709:49">-&gt;</operator><name pos:start="709:50" pos:end="709:54">avctx</name></name></expr></argument>,

                                              <argument pos:start="711:47" pos:end="711:113"><expr pos:start="711:47" pos:end="711:113"><literal type="string" pos:start="711:47" pos:end="711:113">"Found reference and non-reference fields in the same frame, which"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="713:25" pos:end="713:66"><expr pos:start="713:25" pos:end="713:65"><name pos:start="713:25" pos:end="713:44"><name pos:start="713:25" pos:end="713:25">h</name><operator pos:start="713:26" pos:end="713:27">-&gt;</operator><name pos:start="713:28" pos:end="713:44">picture_structure</name></name> <operator pos:start="713:46" pos:end="713:46">=</operator> <name pos:start="713:48" pos:end="713:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="715:25" pos:end="715:66"><expr pos:start="715:25" pos:end="715:65"><name pos:start="715:25" pos:end="715:36"><name pos:start="715:25" pos:end="715:25">h</name><operator pos:start="715:26" pos:end="715:27">-&gt;</operator><name pos:start="715:28" pos:end="715:36">droppable</name></name>         <operator pos:start="715:46" pos:end="715:46">=</operator> <name pos:start="715:48" pos:end="715:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="717:25" pos:end="717:52">return <expr pos:start="717:32" pos:end="717:51"><name pos:start="717:32" pos:end="717:51">AVERROR_PATCHWELCOME</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="729:9" pos:end="821:9">while <condition pos:start="729:15" pos:end="731:90">(<expr pos:start="729:16" pos:end="731:89"><name pos:start="729:16" pos:end="729:27"><name pos:start="729:16" pos:end="729:16">h</name><operator pos:start="729:17" pos:end="729:18">-&gt;</operator><name pos:start="729:19" pos:end="729:27">frame_num</name></name> <operator pos:start="729:29" pos:end="729:30">!=</operator> <name pos:start="729:32" pos:end="729:48"><name pos:start="729:32" pos:end="729:32">h</name><operator pos:start="729:33" pos:end="729:34">-&gt;</operator><name pos:start="729:35" pos:end="729:48">prev_frame_num</name></name> <operator pos:start="729:50" pos:end="729:51">&amp;&amp;</operator> <operator pos:start="729:53" pos:end="729:53">!</operator><name pos:start="729:54" pos:end="729:67"><name pos:start="729:54" pos:end="729:54">h</name><operator pos:start="729:55" pos:end="729:56">-&gt;</operator><name pos:start="729:57" pos:end="729:67">first_field</name></name> <operator pos:start="729:69" pos:end="729:70">&amp;&amp;</operator>

               <name pos:start="731:16" pos:end="731:27"><name pos:start="731:16" pos:end="731:16">h</name><operator pos:start="731:17" pos:end="731:18">-&gt;</operator><name pos:start="731:19" pos:end="731:27">frame_num</name></name> <operator pos:start="731:29" pos:end="731:30">!=</operator> <operator pos:start="731:32" pos:end="731:32">(</operator><name pos:start="731:33" pos:end="731:49"><name pos:start="731:33" pos:end="731:33">h</name><operator pos:start="731:34" pos:end="731:35">-&gt;</operator><name pos:start="731:36" pos:end="731:49">prev_frame_num</name></name> <operator pos:start="731:51" pos:end="731:51">+</operator> <literal type="number" pos:start="731:53" pos:end="731:53">1</literal><operator pos:start="731:54" pos:end="731:54">)</operator> <operator pos:start="731:56" pos:end="731:56">%</operator> <operator pos:start="731:58" pos:end="731:58">(</operator><literal type="number" pos:start="731:59" pos:end="731:59">1</literal> <operator pos:start="731:61" pos:end="731:62">&lt;&lt;</operator> <name pos:start="731:64" pos:end="731:88"><name pos:start="731:64" pos:end="731:64">h</name><operator pos:start="731:65" pos:end="731:66">-&gt;</operator><name pos:start="731:67" pos:end="731:69">sps</name><operator pos:start="731:70" pos:end="731:70">.</operator><name pos:start="731:71" pos:end="731:88">log2_max_frame_num</name></name><operator pos:start="731:89" pos:end="731:89">)</operator></expr>)</condition> <block pos:start="731:92" pos:end="821:9">{<block_content pos:start="733:13" pos:end="819:13">

            <decl_stmt pos:start="733:13" pos:end="733:76"><decl pos:start="733:13" pos:end="733:75"><type pos:start="733:13" pos:end="733:25"><name pos:start="733:13" pos:end="733:23">H264Picture</name> <modifier pos:start="733:25" pos:end="733:25">*</modifier></type><name pos:start="733:26" pos:end="733:29">prev</name> <init pos:start="733:31" pos:end="733:75">= <expr pos:start="733:33" pos:end="733:75"><ternary pos:start="733:33" pos:end="733:75"><condition pos:start="733:33" pos:end="733:52"><expr pos:start="733:33" pos:end="733:50"><name pos:start="733:33" pos:end="733:50"><name pos:start="733:33" pos:end="733:33">h</name><operator pos:start="733:34" pos:end="733:35">-&gt;</operator><name pos:start="733:36" pos:end="733:50">short_ref_count</name></name></expr> ?</condition><then pos:start="733:54" pos:end="733:68"> <expr pos:start="733:54" pos:end="733:68"><name pos:start="733:54" pos:end="733:68"><name pos:start="733:54" pos:end="733:54">h</name><operator pos:start="733:55" pos:end="733:56">-&gt;</operator><name pos:start="733:57" pos:end="733:65">short_ref</name><index pos:start="733:66" pos:end="733:68">[<expr pos:start="733:67" pos:end="733:67"><literal type="number" pos:start="733:67" pos:end="733:67">0</literal></expr>]</index></name></expr> </then><else pos:start="733:70" pos:end="733:75">: <expr pos:start="733:72" pos:end="733:75"><name pos:start="733:72" pos:end="733:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="735:13" pos:end="737:52"><expr pos:start="735:13" pos:end="737:51"><call pos:start="735:13" pos:end="737:51"><name pos:start="735:13" pos:end="735:18">av_log</name><argument_list pos:start="735:19" pos:end="737:51">(<argument pos:start="735:20" pos:end="735:27"><expr pos:start="735:20" pos:end="735:27"><name pos:start="735:20" pos:end="735:27"><name pos:start="735:20" pos:end="735:20">h</name><operator pos:start="735:21" pos:end="735:22">-&gt;</operator><name pos:start="735:23" pos:end="735:27">avctx</name></name></expr></argument>, <argument pos:start="735:30" pos:end="735:41"><expr pos:start="735:30" pos:end="735:41"><name pos:start="735:30" pos:end="735:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="735:44" pos:end="735:66"><expr pos:start="735:44" pos:end="735:66"><literal type="string" pos:start="735:44" pos:end="735:66">"Frame num gap %d %d\n"</literal></expr></argument>,

                   <argument pos:start="737:20" pos:end="737:31"><expr pos:start="737:20" pos:end="737:31"><name pos:start="737:20" pos:end="737:31"><name pos:start="737:20" pos:end="737:20">h</name><operator pos:start="737:21" pos:end="737:22">-&gt;</operator><name pos:start="737:23" pos:end="737:31">frame_num</name></name></expr></argument>, <argument pos:start="737:34" pos:end="737:50"><expr pos:start="737:34" pos:end="737:50"><name pos:start="737:34" pos:end="737:50"><name pos:start="737:34" pos:end="737:34">h</name><operator pos:start="737:35" pos:end="737:36">-&gt;</operator><name pos:start="737:37" pos:end="737:50">prev_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="739:13" pos:end="743:46"><if pos:start="739:13" pos:end="743:46">if <condition pos:start="739:16" pos:end="739:55">(<expr pos:start="739:17" pos:end="739:54"><operator pos:start="739:17" pos:end="739:17">!</operator><name pos:start="739:18" pos:end="739:54"><name pos:start="739:18" pos:end="739:18">h</name><operator pos:start="739:19" pos:end="739:20">-&gt;</operator><name pos:start="739:21" pos:end="739:23">sps</name><operator pos:start="739:24" pos:end="739:24">.</operator><name pos:start="739:25" pos:end="739:54">gaps_in_frame_num_allowed_flag</name></name></expr>)</condition><block type="pseudo" pos:start="741:17" pos:end="743:46"><block_content pos:start="741:17" pos:end="743:46">

                <for pos:start="741:17" pos:end="743:46">for<control pos:start="741:20" pos:end="741:61">(<init pos:start="741:21" pos:end="741:24"><expr pos:start="741:21" pos:end="741:23"><name pos:start="741:21" pos:end="741:21">i</name><operator pos:start="741:22" pos:end="741:22">=</operator><literal type="number" pos:start="741:23" pos:end="741:23">0</literal></expr>;</init> <condition pos:start="741:26" pos:end="741:56"><expr pos:start="741:26" pos:end="741:55"><name pos:start="741:26" pos:end="741:26">i</name><operator pos:start="741:27" pos:end="741:27">&lt;</operator><call pos:start="741:28" pos:end="741:55"><name pos:start="741:28" pos:end="741:41">FF_ARRAY_ELEMS</name><argument_list pos:start="741:42" pos:end="741:55">(<argument pos:start="741:43" pos:end="741:54"><expr pos:start="741:43" pos:end="741:54"><name pos:start="741:43" pos:end="741:54"><name pos:start="741:43" pos:end="741:43">h</name><operator pos:start="741:44" pos:end="741:45">-&gt;</operator><name pos:start="741:46" pos:end="741:54">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="741:58" pos:end="741:60"><expr pos:start="741:58" pos:end="741:60"><name pos:start="741:58" pos:end="741:58">i</name><operator pos:start="741:59" pos:end="741:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="743:21" pos:end="743:46"><block_content pos:start="743:21" pos:end="743:46">

                    <expr_stmt pos:start="743:21" pos:end="743:46"><expr pos:start="743:21" pos:end="743:45"><name pos:start="743:21" pos:end="743:35"><name pos:start="743:21" pos:end="743:21">h</name><operator pos:start="743:22" pos:end="743:23">-&gt;</operator><name pos:start="743:24" pos:end="743:32">last_pocs</name><index pos:start="743:33" pos:end="743:35">[<expr pos:start="743:34" pos:end="743:34"><name pos:start="743:34" pos:end="743:34">i</name></expr>]</index></name> <operator pos:start="743:37" pos:end="743:37">=</operator> <name pos:start="743:39" pos:end="743:45">INT_MIN</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <expr_stmt pos:start="745:13" pos:end="745:38"><expr pos:start="745:13" pos:end="745:37"><name pos:start="745:13" pos:end="745:15">ret</name> <operator pos:start="745:17" pos:end="745:17">=</operator> <call pos:start="745:19" pos:end="745:37"><name pos:start="745:19" pos:end="745:34">h264_frame_start</name><argument_list pos:start="745:35" pos:end="745:37">(<argument pos:start="745:36" pos:end="745:36"><expr pos:start="745:36" pos:end="745:36"><name pos:start="745:36" pos:end="745:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="747:13" pos:end="753:13"><if pos:start="747:13" pos:end="753:13">if <condition pos:start="747:16" pos:end="747:24">(<expr pos:start="747:17" pos:end="747:23"><name pos:start="747:17" pos:end="747:19">ret</name> <operator pos:start="747:21" pos:end="747:21">&lt;</operator> <literal type="number" pos:start="747:23" pos:end="747:23">0</literal></expr>)</condition> <block pos:start="747:26" pos:end="753:13">{<block_content pos:start="749:17" pos:end="751:27">

                <expr_stmt pos:start="749:17" pos:end="749:35"><expr pos:start="749:17" pos:end="749:34"><name pos:start="749:17" pos:end="749:30"><name pos:start="749:17" pos:end="749:17">h</name><operator pos:start="749:18" pos:end="749:19">-&gt;</operator><name pos:start="749:20" pos:end="749:30">first_field</name></name> <operator pos:start="749:32" pos:end="749:32">=</operator> <literal type="number" pos:start="749:34" pos:end="749:34">0</literal></expr>;</expr_stmt>

                <return pos:start="751:17" pos:end="751:27">return <expr pos:start="751:24" pos:end="751:26"><name pos:start="751:24" pos:end="751:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="757:13" pos:end="757:32"><expr pos:start="757:13" pos:end="757:31"><name pos:start="757:13" pos:end="757:29"><name pos:start="757:13" pos:end="757:13">h</name><operator pos:start="757:14" pos:end="757:15">-&gt;</operator><name pos:start="757:16" pos:end="757:29">prev_frame_num</name></name><operator pos:start="757:30" pos:end="757:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="759:13" pos:end="759:71"><expr pos:start="759:13" pos:end="759:70"><name pos:start="759:13" pos:end="759:29"><name pos:start="759:13" pos:end="759:13">h</name><operator pos:start="759:14" pos:end="759:15">-&gt;</operator><name pos:start="759:16" pos:end="759:29">prev_frame_num</name></name>        <operator pos:start="759:38" pos:end="759:39">%=</operator> <literal type="number" pos:start="759:41" pos:end="759:41">1</literal> <operator pos:start="759:43" pos:end="759:44">&lt;&lt;</operator> <name pos:start="759:46" pos:end="759:70"><name pos:start="759:46" pos:end="759:46">h</name><operator pos:start="759:47" pos:end="759:48">-&gt;</operator><name pos:start="759:49" pos:end="759:51">sps</name><operator pos:start="759:52" pos:end="759:52">.</operator><name pos:start="759:53" pos:end="759:70">log2_max_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="761:13" pos:end="761:58"><expr pos:start="761:13" pos:end="761:57"><name pos:start="761:13" pos:end="761:37"><name pos:start="761:13" pos:end="761:13">h</name><operator pos:start="761:14" pos:end="761:15">-&gt;</operator><name pos:start="761:16" pos:end="761:26">cur_pic_ptr</name><operator pos:start="761:27" pos:end="761:28">-&gt;</operator><name pos:start="761:29" pos:end="761:37">frame_num</name></name> <operator pos:start="761:39" pos:end="761:39">=</operator> <name pos:start="761:41" pos:end="761:57"><name pos:start="761:41" pos:end="761:41">h</name><operator pos:start="761:42" pos:end="761:43">-&gt;</operator><name pos:start="761:44" pos:end="761:57">prev_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="763:13" pos:end="763:81"><expr pos:start="763:13" pos:end="763:80"><name pos:start="763:13" pos:end="763:39"><name pos:start="763:13" pos:end="763:13">h</name><operator pos:start="763:14" pos:end="763:15">-&gt;</operator><name pos:start="763:16" pos:end="763:26">cur_pic_ptr</name><operator pos:start="763:27" pos:end="763:28">-&gt;</operator><name pos:start="763:29" pos:end="763:39">invalid_gap</name></name> <operator pos:start="763:41" pos:end="763:41">=</operator> <operator pos:start="763:43" pos:end="763:43">!</operator><name pos:start="763:44" pos:end="763:80"><name pos:start="763:44" pos:end="763:44">h</name><operator pos:start="763:45" pos:end="763:46">-&gt;</operator><name pos:start="763:47" pos:end="763:49">sps</name><operator pos:start="763:50" pos:end="763:50">.</operator><name pos:start="763:51" pos:end="763:80">gaps_in_frame_num_allowed_flag</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="765:13" pos:end="765:71"><expr pos:start="765:13" pos:end="765:70"><call pos:start="765:13" pos:end="765:70"><name pos:start="765:13" pos:end="765:37">ff_thread_report_progress</name><argument_list pos:start="765:38" pos:end="765:70">(<argument pos:start="765:39" pos:end="765:57"><expr pos:start="765:39" pos:end="765:57"><operator pos:start="765:39" pos:end="765:39">&amp;</operator><name pos:start="765:40" pos:end="765:57"><name pos:start="765:40" pos:end="765:40">h</name><operator pos:start="765:41" pos:end="765:42">-&gt;</operator><name pos:start="765:43" pos:end="765:53">cur_pic_ptr</name><operator pos:start="765:54" pos:end="765:55">-&gt;</operator><name pos:start="765:56" pos:end="765:57">tf</name></name></expr></argument>, <argument pos:start="765:60" pos:end="765:66"><expr pos:start="765:60" pos:end="765:66"><name pos:start="765:60" pos:end="765:66">INT_MAX</name></expr></argument>, <argument pos:start="765:69" pos:end="765:69"><expr pos:start="765:69" pos:end="765:69"><literal type="number" pos:start="765:69" pos:end="765:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="767:13" pos:end="767:71"><expr pos:start="767:13" pos:end="767:70"><call pos:start="767:13" pos:end="767:70"><name pos:start="767:13" pos:end="767:37">ff_thread_report_progress</name><argument_list pos:start="767:38" pos:end="767:70">(<argument pos:start="767:39" pos:end="767:57"><expr pos:start="767:39" pos:end="767:57"><operator pos:start="767:39" pos:end="767:39">&amp;</operator><name pos:start="767:40" pos:end="767:57"><name pos:start="767:40" pos:end="767:40">h</name><operator pos:start="767:41" pos:end="767:42">-&gt;</operator><name pos:start="767:43" pos:end="767:53">cur_pic_ptr</name><operator pos:start="767:54" pos:end="767:55">-&gt;</operator><name pos:start="767:56" pos:end="767:57">tf</name></name></expr></argument>, <argument pos:start="767:60" pos:end="767:66"><expr pos:start="767:60" pos:end="767:66"><name pos:start="767:60" pos:end="767:66">INT_MAX</name></expr></argument>, <argument pos:start="767:69" pos:end="767:69"><expr pos:start="767:69" pos:end="767:69"><literal type="number" pos:start="767:69" pos:end="767:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="769:13" pos:end="769:57"><expr pos:start="769:13" pos:end="769:56"><name pos:start="769:13" pos:end="769:15">ret</name> <operator pos:start="769:17" pos:end="769:17">=</operator> <call pos:start="769:19" pos:end="769:56"><name pos:start="769:19" pos:end="769:50">ff_generate_sliding_window_mmcos</name><argument_list pos:start="769:51" pos:end="769:56">(<argument pos:start="769:52" pos:end="769:52"><expr pos:start="769:52" pos:end="769:52"><name pos:start="769:52" pos:end="769:52">h</name></expr></argument>, <argument pos:start="769:55" pos:end="769:55"><expr pos:start="769:55" pos:end="769:55"><literal type="number" pos:start="769:55" pos:end="769:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="771:13" pos:end="773:27"><if pos:start="771:13" pos:end="773:27">if <condition pos:start="771:16" pos:end="771:71">(<expr pos:start="771:17" pos:end="771:70"><name pos:start="771:17" pos:end="771:19">ret</name> <operator pos:start="771:21" pos:end="771:21">&lt;</operator> <literal type="number" pos:start="771:23" pos:end="771:23">0</literal> <operator pos:start="771:25" pos:end="771:26">&amp;&amp;</operator> <operator pos:start="771:28" pos:end="771:28">(</operator><name pos:start="771:29" pos:end="771:53"><name pos:start="771:29" pos:end="771:29">h</name><operator pos:start="771:30" pos:end="771:31">-&gt;</operator><name pos:start="771:32" pos:end="771:36">avctx</name><operator pos:start="771:37" pos:end="771:38">-&gt;</operator><name pos:start="771:39" pos:end="771:53">err_recognition</name></name> <operator pos:start="771:55" pos:end="771:55">&amp;</operator> <name pos:start="771:57" pos:end="771:69">AV_EF_EXPLODE</name><operator pos:start="771:70" pos:end="771:70">)</operator></expr>)</condition><block type="pseudo" pos:start="773:17" pos:end="773:27"><block_content pos:start="773:17" pos:end="773:27">

                <return pos:start="773:17" pos:end="773:27">return <expr pos:start="773:24" pos:end="773:26"><name pos:start="773:24" pos:end="773:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:77"><expr pos:start="775:13" pos:end="775:76"><name pos:start="775:13" pos:end="775:15">ret</name> <operator pos:start="775:17" pos:end="775:17">=</operator> <call pos:start="775:19" pos:end="775:76"><name pos:start="775:19" pos:end="775:49">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="775:50" pos:end="775:76">(<argument pos:start="775:51" pos:end="775:51"><expr pos:start="775:51" pos:end="775:51"><name pos:start="775:51" pos:end="775:51">h</name></expr></argument>, <argument pos:start="775:54" pos:end="775:60"><expr pos:start="775:54" pos:end="775:60"><name pos:start="775:54" pos:end="775:60"><name pos:start="775:54" pos:end="775:54">h</name><operator pos:start="775:55" pos:end="775:56">-&gt;</operator><name pos:start="775:57" pos:end="775:60">mmco</name></name></expr></argument>, <argument pos:start="775:63" pos:end="775:75"><expr pos:start="775:63" pos:end="775:75"><name pos:start="775:63" pos:end="775:75"><name pos:start="775:63" pos:end="775:63">h</name><operator pos:start="775:64" pos:end="775:65">-&gt;</operator><name pos:start="775:66" pos:end="775:75">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="777:13" pos:end="779:27"><if pos:start="777:13" pos:end="779:27">if <condition pos:start="777:16" pos:end="777:71">(<expr pos:start="777:17" pos:end="777:70"><name pos:start="777:17" pos:end="777:19">ret</name> <operator pos:start="777:21" pos:end="777:21">&lt;</operator> <literal type="number" pos:start="777:23" pos:end="777:23">0</literal> <operator pos:start="777:25" pos:end="777:26">&amp;&amp;</operator> <operator pos:start="777:28" pos:end="777:28">(</operator><name pos:start="777:29" pos:end="777:53"><name pos:start="777:29" pos:end="777:29">h</name><operator pos:start="777:30" pos:end="777:31">-&gt;</operator><name pos:start="777:32" pos:end="777:36">avctx</name><operator pos:start="777:37" pos:end="777:38">-&gt;</operator><name pos:start="777:39" pos:end="777:53">err_recognition</name></name> <operator pos:start="777:55" pos:end="777:55">&amp;</operator> <name pos:start="777:57" pos:end="777:69">AV_EF_EXPLODE</name><operator pos:start="777:70" pos:end="777:70">)</operator></expr>)</condition><block type="pseudo" pos:start="779:17" pos:end="779:27"><block_content pos:start="779:17" pos:end="779:27">

                <return pos:start="779:17" pos:end="779:27">return <expr pos:start="779:24" pos:end="779:26"><name pos:start="779:24" pos:end="779:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="781:13" pos:end="793:74">/* Error concealment: If a ref is missing, copy the previous ref

             * in its place.

             * FIXME: Avoiding a memcpy would be nice, but ref handling makes

             * many assumptions about there being no actual duplicates.

             * FIXME: This does not copy padding for out-of-frame motion

             * vectors.  Given we are concealing a lost frame, this probably

             * is not noticeable by comparison, but it should be fixed. */</comment>

            <if_stmt pos:start="795:13" pos:end="819:13"><if pos:start="795:13" pos:end="819:13">if <condition pos:start="795:16" pos:end="795:35">(<expr pos:start="795:17" pos:end="795:34"><name pos:start="795:17" pos:end="795:34"><name pos:start="795:17" pos:end="795:17">h</name><operator pos:start="795:18" pos:end="795:19">-&gt;</operator><name pos:start="795:20" pos:end="795:34">short_ref_count</name></name></expr>)</condition> <block pos:start="795:37" pos:end="819:13">{<block_content pos:start="797:17" pos:end="817:63">

                <if_stmt pos:start="797:17" pos:end="815:17"><if pos:start="797:17" pos:end="815:17">if <condition pos:start="797:20" pos:end="797:25">(<expr pos:start="797:21" pos:end="797:24"><name pos:start="797:21" pos:end="797:24">prev</name></expr>)</condition> <block pos:start="797:27" pos:end="815:17">{<block_content pos:start="799:21" pos:end="813:57">

                    <expr_stmt pos:start="799:21" pos:end="811:53"><expr pos:start="799:21" pos:end="811:52"><call pos:start="799:21" pos:end="811:52"><name pos:start="799:21" pos:end="799:33">av_image_copy</name><argument_list pos:start="799:34" pos:end="811:52">(<argument pos:start="799:35" pos:end="799:57"><expr pos:start="799:35" pos:end="799:57"><name pos:start="799:35" pos:end="799:49"><name pos:start="799:35" pos:end="799:35">h</name><operator pos:start="799:36" pos:end="799:37">-&gt;</operator><name pos:start="799:38" pos:end="799:46">short_ref</name><index pos:start="799:47" pos:end="799:49">[<expr pos:start="799:48" pos:end="799:48"><literal type="number" pos:start="799:48" pos:end="799:48">0</literal></expr>]</index></name><operator pos:start="799:50" pos:end="799:51">-&gt;</operator><name pos:start="799:52" pos:end="799:57"><name pos:start="799:52" pos:end="799:52">f</name><operator pos:start="799:53" pos:end="799:53">.</operator><name pos:start="799:54" pos:end="799:57">data</name></name></expr></argument>,

                                  <argument pos:start="801:35" pos:end="801:61"><expr pos:start="801:35" pos:end="801:61"><name pos:start="801:35" pos:end="801:49"><name pos:start="801:35" pos:end="801:35">h</name><operator pos:start="801:36" pos:end="801:37">-&gt;</operator><name pos:start="801:38" pos:end="801:46">short_ref</name><index pos:start="801:47" pos:end="801:49">[<expr pos:start="801:48" pos:end="801:48"><literal type="number" pos:start="801:48" pos:end="801:48">0</literal></expr>]</index></name><operator pos:start="801:50" pos:end="801:51">-&gt;</operator><name pos:start="801:52" pos:end="801:61"><name pos:start="801:52" pos:end="801:52">f</name><operator pos:start="801:53" pos:end="801:53">.</operator><name pos:start="801:54" pos:end="801:61">linesize</name></name></expr></argument>,

                                  <argument pos:start="803:35" pos:end="803:64"><expr pos:start="803:35" pos:end="803:64"><operator pos:start="803:35" pos:end="803:35">(</operator><specifier pos:start="803:36" pos:end="803:40">const</specifier> <name pos:start="803:42" pos:end="803:48">uint8_t</name> <operator pos:start="803:50" pos:end="803:50">*</operator><operator pos:start="803:51" pos:end="803:51">*</operator><operator pos:start="803:52" pos:end="803:52">)</operator><name pos:start="803:53" pos:end="803:64"><name pos:start="803:53" pos:end="803:56">prev</name><operator pos:start="803:57" pos:end="803:58">-&gt;</operator><name pos:start="803:59" pos:end="803:59">f</name><operator pos:start="803:60" pos:end="803:60">.</operator><name pos:start="803:61" pos:end="803:64">data</name></name></expr></argument>,

                                  <argument pos:start="805:35" pos:end="805:50"><expr pos:start="805:35" pos:end="805:50"><name pos:start="805:35" pos:end="805:50"><name pos:start="805:35" pos:end="805:38">prev</name><operator pos:start="805:39" pos:end="805:40">-&gt;</operator><name pos:start="805:41" pos:end="805:41">f</name><operator pos:start="805:42" pos:end="805:42">.</operator><name pos:start="805:43" pos:end="805:50">linesize</name></name></expr></argument>,

                                  <argument pos:start="807:35" pos:end="807:51"><expr pos:start="807:35" pos:end="807:51"><name pos:start="807:35" pos:end="807:51"><name pos:start="807:35" pos:end="807:35">h</name><operator pos:start="807:36" pos:end="807:37">-&gt;</operator><name pos:start="807:38" pos:end="807:42">avctx</name><operator pos:start="807:43" pos:end="807:44">-&gt;</operator><name pos:start="807:45" pos:end="807:51">pix_fmt</name></name></expr></argument>,

                                  <argument pos:start="809:35" pos:end="809:51"><expr pos:start="809:35" pos:end="809:51"><name pos:start="809:35" pos:end="809:45"><name pos:start="809:35" pos:end="809:35">h</name><operator pos:start="809:36" pos:end="809:37">-&gt;</operator><name pos:start="809:38" pos:end="809:45">mb_width</name></name>  <operator pos:start="809:48" pos:end="809:48">*</operator> <literal type="number" pos:start="809:50" pos:end="809:51">16</literal></expr></argument>,

                                  <argument pos:start="811:35" pos:end="811:51"><expr pos:start="811:35" pos:end="811:51"><name pos:start="811:35" pos:end="811:46"><name pos:start="811:35" pos:end="811:35">h</name><operator pos:start="811:36" pos:end="811:37">-&gt;</operator><name pos:start="811:38" pos:end="811:46">mb_height</name></name> <operator pos:start="811:48" pos:end="811:48">*</operator> <literal type="number" pos:start="811:50" pos:end="811:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="813:21" pos:end="813:57"><expr pos:start="813:21" pos:end="813:56"><name pos:start="813:21" pos:end="813:35"><name pos:start="813:21" pos:end="813:21">h</name><operator pos:start="813:22" pos:end="813:23">-&gt;</operator><name pos:start="813:24" pos:end="813:32">short_ref</name><index pos:start="813:33" pos:end="813:35">[<expr pos:start="813:34" pos:end="813:34"><literal type="number" pos:start="813:34" pos:end="813:34">0</literal></expr>]</index></name><operator pos:start="813:36" pos:end="813:37">-&gt;</operator><name pos:start="813:38" pos:end="813:40">poc</name> <operator pos:start="813:42" pos:end="813:42">=</operator> <name pos:start="813:44" pos:end="813:52"><name pos:start="813:44" pos:end="813:47">prev</name><operator pos:start="813:48" pos:end="813:49">-&gt;</operator><name pos:start="813:50" pos:end="813:52">poc</name></name> <operator pos:start="813:54" pos:end="813:54">+</operator> <literal type="number" pos:start="813:56" pos:end="813:56">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="817:17" pos:end="817:63"><expr pos:start="817:17" pos:end="817:62"><name pos:start="817:17" pos:end="817:31"><name pos:start="817:17" pos:end="817:17">h</name><operator pos:start="817:18" pos:end="817:19">-&gt;</operator><name pos:start="817:20" pos:end="817:28">short_ref</name><index pos:start="817:29" pos:end="817:31">[<expr pos:start="817:30" pos:end="817:30"><literal type="number" pos:start="817:30" pos:end="817:30">0</literal></expr>]</index></name><operator pos:start="817:32" pos:end="817:33">-&gt;</operator><name pos:start="817:34" pos:end="817:42">frame_num</name> <operator pos:start="817:44" pos:end="817:44">=</operator> <name pos:start="817:46" pos:end="817:62"><name pos:start="817:46" pos:end="817:46">h</name><operator pos:start="817:47" pos:end="817:48">-&gt;</operator><name pos:start="817:49" pos:end="817:62">prev_frame_num</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="825:9" pos:end="829:46">/* See if we have a decoded first field looking for a pair...

         * We're using that to see whether to continue decoding in that

         * frame, or to allocate a new one. */</comment>

        <if_stmt pos:start="831:9" pos:end="891:9"><if pos:start="831:9" pos:end="885:9">if <condition pos:start="831:12" pos:end="831:27">(<expr pos:start="831:13" pos:end="831:26"><name pos:start="831:13" pos:end="831:26"><name pos:start="831:13" pos:end="831:13">h</name><operator pos:start="831:14" pos:end="831:15">-&gt;</operator><name pos:start="831:16" pos:end="831:26">first_field</name></name></expr>)</condition> <block pos:start="831:29" pos:end="885:9">{<block_content pos:start="833:13" pos:end="883:13">

            <expr_stmt pos:start="833:13" pos:end="833:35"><expr pos:start="833:13" pos:end="833:34"><call pos:start="833:13" pos:end="833:34"><name pos:start="833:13" pos:end="833:18">assert</name><argument_list pos:start="833:19" pos:end="833:34">(<argument pos:start="833:20" pos:end="833:33"><expr pos:start="833:20" pos:end="833:33"><name pos:start="833:20" pos:end="833:33"><name pos:start="833:20" pos:end="833:20">h</name><operator pos:start="833:21" pos:end="833:22">-&gt;</operator><name pos:start="833:23" pos:end="833:33">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="835:13" pos:end="835:45"><expr pos:start="835:13" pos:end="835:44"><call pos:start="835:13" pos:end="835:44"><name pos:start="835:13" pos:end="835:18">assert</name><argument_list pos:start="835:19" pos:end="835:44">(<argument pos:start="835:20" pos:end="835:43"><expr pos:start="835:20" pos:end="835:43"><name pos:start="835:20" pos:end="835:43"><name pos:start="835:20" pos:end="835:20">h</name><operator pos:start="835:21" pos:end="835:22">-&gt;</operator><name pos:start="835:23" pos:end="835:33">cur_pic_ptr</name><operator pos:start="835:34" pos:end="835:35">-&gt;</operator><name pos:start="835:36" pos:end="835:36">f</name><operator pos:start="835:37" pos:end="835:37">.</operator><name pos:start="835:38" pos:end="835:40">buf</name><index pos:start="835:41" pos:end="835:43">[<expr pos:start="835:42" pos:end="835:42"><literal type="number" pos:start="835:42" pos:end="835:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="837:13" pos:end="837:65"><expr pos:start="837:13" pos:end="837:64"><call pos:start="837:13" pos:end="837:64"><name pos:start="837:13" pos:end="837:18">assert</name><argument_list pos:start="837:19" pos:end="837:64">(<argument pos:start="837:20" pos:end="837:63"><expr pos:start="837:20" pos:end="837:63"><name pos:start="837:20" pos:end="837:44"><name pos:start="837:20" pos:end="837:20">h</name><operator pos:start="837:21" pos:end="837:22">-&gt;</operator><name pos:start="837:23" pos:end="837:33">cur_pic_ptr</name><operator pos:start="837:34" pos:end="837:35">-&gt;</operator><name pos:start="837:36" pos:end="837:44">reference</name></name> <operator pos:start="837:46" pos:end="837:47">!=</operator> <name pos:start="837:49" pos:end="837:63">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="841:13" pos:end="841:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="843:13" pos:end="883:13"><if pos:start="843:13" pos:end="855:13">if <condition pos:start="843:16" pos:end="843:80">(<expr pos:start="843:17" pos:end="843:79"><operator pos:start="843:17" pos:end="843:17">!</operator><call pos:start="843:18" pos:end="843:33"><name pos:start="843:18" pos:end="843:30">FIELD_PICTURE</name><argument_list pos:start="843:31" pos:end="843:33">(<argument pos:start="843:32" pos:end="843:32"><expr pos:start="843:32" pos:end="843:32"><name pos:start="843:32" pos:end="843:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="843:35" pos:end="843:36">||</operator> <name pos:start="843:38" pos:end="843:57"><name pos:start="843:38" pos:end="843:38">h</name><operator pos:start="843:39" pos:end="843:40">-&gt;</operator><name pos:start="843:41" pos:end="843:57">picture_structure</name></name> <operator pos:start="843:59" pos:end="843:60">==</operator> <name pos:start="843:62" pos:end="843:79">last_pic_structure</name></expr>)</condition> <block pos:start="843:82" pos:end="855:13">{<block_content pos:start="849:17" pos:end="853:50">

                <comment type="block" pos:start="845:17" pos:end="847:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <expr_stmt pos:start="849:17" pos:end="849:37"><expr pos:start="849:17" pos:end="849:36"><name pos:start="849:17" pos:end="849:33"><name pos:start="849:17" pos:end="849:17">h</name><operator pos:start="849:18" pos:end="849:19">-&gt;</operator><name pos:start="849:20" pos:end="849:33">missing_fields</name></name> <operator pos:start="849:35" pos:end="849:36">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="851:17" pos:end="851:38"><expr pos:start="851:17" pos:end="851:37"><name pos:start="851:17" pos:end="851:30"><name pos:start="851:17" pos:end="851:17">h</name><operator pos:start="851:18" pos:end="851:19">-&gt;</operator><name pos:start="851:20" pos:end="851:30">cur_pic_ptr</name></name> <operator pos:start="851:32" pos:end="851:32">=</operator> <name pos:start="851:34" pos:end="851:37">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="853:17" pos:end="853:50"><expr pos:start="853:17" pos:end="853:49"><name pos:start="853:17" pos:end="853:30"><name pos:start="853:17" pos:end="853:17">h</name><operator pos:start="853:18" pos:end="853:19">-&gt;</operator><name pos:start="853:20" pos:end="853:30">first_field</name></name> <operator pos:start="853:32" pos:end="853:32">=</operator> <call pos:start="853:34" pos:end="853:49"><name pos:start="853:34" pos:end="853:46">FIELD_PICTURE</name><argument_list pos:start="853:47" pos:end="853:49">(<argument pos:start="853:48" pos:end="853:48"><expr pos:start="853:48" pos:end="853:48"><name pos:start="853:48" pos:end="853:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="855:15" pos:end="883:13">else <block pos:start="855:20" pos:end="883:13">{<block_content pos:start="857:17" pos:end="881:17">

                <expr_stmt pos:start="857:17" pos:end="857:38"><expr pos:start="857:17" pos:end="857:37"><name pos:start="857:17" pos:end="857:33"><name pos:start="857:17" pos:end="857:17">h</name><operator pos:start="857:18" pos:end="857:19">-&gt;</operator><name pos:start="857:20" pos:end="857:33">missing_fields</name></name> <operator pos:start="857:35" pos:end="857:35">=</operator> <literal type="number" pos:start="857:37" pos:end="857:37">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="859:17" pos:end="881:17"><if pos:start="859:17" pos:end="875:17">if <condition pos:start="859:20" pos:end="859:62">(<expr pos:start="859:21" pos:end="859:61"><name pos:start="859:21" pos:end="859:45"><name pos:start="859:21" pos:end="859:21">h</name><operator pos:start="859:22" pos:end="859:23">-&gt;</operator><name pos:start="859:24" pos:end="859:34">cur_pic_ptr</name><operator pos:start="859:35" pos:end="859:36">-&gt;</operator><name pos:start="859:37" pos:end="859:45">frame_num</name></name> <operator pos:start="859:47" pos:end="859:48">!=</operator> <name pos:start="859:50" pos:end="859:61"><name pos:start="859:50" pos:end="859:50">h</name><operator pos:start="859:51" pos:end="859:52">-&gt;</operator><name pos:start="859:53" pos:end="859:61">frame_num</name></name></expr>)</condition> <block pos:start="859:64" pos:end="875:17">{<block_content pos:start="861:21" pos:end="873:42">

                    <expr_stmt pos:start="861:21" pos:end="863:87"><expr pos:start="861:21" pos:end="863:86"><call pos:start="861:21" pos:end="863:86"><name pos:start="861:21" pos:end="861:45">ff_thread_report_progress</name><argument_list pos:start="861:46" pos:end="863:86">(<argument pos:start="861:47" pos:end="861:65"><expr pos:start="861:47" pos:end="861:65"><operator pos:start="861:47" pos:end="861:47">&amp;</operator><name pos:start="861:48" pos:end="861:65"><name pos:start="861:48" pos:end="861:48">h</name><operator pos:start="861:49" pos:end="861:50">-&gt;</operator><name pos:start="861:51" pos:end="861:61">cur_pic_ptr</name><operator pos:start="861:62" pos:end="861:63">-&gt;</operator><name pos:start="861:64" pos:end="861:65">tf</name></name></expr></argument>, <argument pos:start="861:68" pos:end="861:74"><expr pos:start="861:68" pos:end="861:74"><name pos:start="861:68" pos:end="861:74">INT_MAX</name></expr></argument>,

                                              <argument pos:start="863:47" pos:end="863:85"><expr pos:start="863:47" pos:end="863:85"><name pos:start="863:47" pos:end="863:66"><name pos:start="863:47" pos:end="863:47">h</name><operator pos:start="863:48" pos:end="863:49">-&gt;</operator><name pos:start="863:50" pos:end="863:66">picture_structure</name></name><operator pos:start="863:67" pos:end="863:68">==</operator><name pos:start="863:69" pos:end="863:85">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="865:21" pos:end="869:60">/* This and the previous field had different frame_nums.

                     * Consider this field first in pair. Throw away previous

                     * one except for reference purposes. */</comment>

                    <expr_stmt pos:start="871:21" pos:end="871:39"><expr pos:start="871:21" pos:end="871:38"><name pos:start="871:21" pos:end="871:34"><name pos:start="871:21" pos:end="871:21">h</name><operator pos:start="871:22" pos:end="871:23">-&gt;</operator><name pos:start="871:24" pos:end="871:34">first_field</name></name> <operator pos:start="871:36" pos:end="871:36">=</operator> <literal type="number" pos:start="871:38" pos:end="871:38">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="873:21" pos:end="873:42"><expr pos:start="873:21" pos:end="873:41"><name pos:start="873:21" pos:end="873:34"><name pos:start="873:21" pos:end="873:21">h</name><operator pos:start="873:22" pos:end="873:23">-&gt;</operator><name pos:start="873:24" pos:end="873:34">cur_pic_ptr</name></name> <operator pos:start="873:36" pos:end="873:36">=</operator> <name pos:start="873:38" pos:end="873:41">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="875:19" pos:end="881:17">else <block pos:start="875:24" pos:end="881:17">{<block_content pos:start="879:21" pos:end="879:39">

                    <comment type="block" pos:start="877:21" pos:end="877:60">/* Second field in complementary pair */</comment>

                    <expr_stmt pos:start="879:21" pos:end="879:39"><expr pos:start="879:21" pos:end="879:38"><name pos:start="879:21" pos:end="879:34"><name pos:start="879:21" pos:end="879:21">h</name><operator pos:start="879:22" pos:end="879:23">-&gt;</operator><name pos:start="879:24" pos:end="879:34">first_field</name></name> <operator pos:start="879:36" pos:end="879:36">=</operator> <literal type="number" pos:start="879:38" pos:end="879:38">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="885:11" pos:end="891:9">else <block pos:start="885:16" pos:end="891:9">{<block_content pos:start="889:13" pos:end="889:46">

            <comment type="block" pos:start="887:13" pos:end="887:74">/* Frame or first field in a potentially complementary pair */</comment>

            <expr_stmt pos:start="889:13" pos:end="889:46"><expr pos:start="889:13" pos:end="889:45"><name pos:start="889:13" pos:end="889:26"><name pos:start="889:13" pos:end="889:13">h</name><operator pos:start="889:14" pos:end="889:15">-&gt;</operator><name pos:start="889:16" pos:end="889:26">first_field</name></name> <operator pos:start="889:28" pos:end="889:28">=</operator> <call pos:start="889:30" pos:end="889:45"><name pos:start="889:30" pos:end="889:42">FIELD_PICTURE</name><argument_list pos:start="889:43" pos:end="889:45">(<argument pos:start="889:44" pos:end="889:44"><expr pos:start="889:44" pos:end="889:44"><name pos:start="889:44" pos:end="889:44">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="895:9" pos:end="909:9"><if pos:start="895:9" pos:end="905:9">if <condition pos:start="895:12" pos:end="895:48">(<expr pos:start="895:13" pos:end="895:47"><operator pos:start="895:13" pos:end="895:13">!</operator><call pos:start="895:14" pos:end="895:29"><name pos:start="895:14" pos:end="895:26">FIELD_PICTURE</name><argument_list pos:start="895:27" pos:end="895:29">(<argument pos:start="895:28" pos:end="895:28"><expr pos:start="895:28" pos:end="895:28"><name pos:start="895:28" pos:end="895:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="895:31" pos:end="895:32">||</operator> <name pos:start="895:34" pos:end="895:47"><name pos:start="895:34" pos:end="895:34">h</name><operator pos:start="895:35" pos:end="895:36">-&gt;</operator><name pos:start="895:37" pos:end="895:47">first_field</name></name></expr>)</condition> <block pos:start="895:50" pos:end="905:9">{<block_content pos:start="897:13" pos:end="903:13">

            <if_stmt pos:start="897:13" pos:end="903:13"><if pos:start="897:13" pos:end="903:13">if <condition pos:start="897:16" pos:end="897:40">(<expr pos:start="897:17" pos:end="897:39"><call pos:start="897:17" pos:end="897:35"><name pos:start="897:17" pos:end="897:32">h264_frame_start</name><argument_list pos:start="897:33" pos:end="897:35">(<argument pos:start="897:34" pos:end="897:34"><expr pos:start="897:34" pos:end="897:34"><name pos:start="897:34" pos:end="897:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="897:37" pos:end="897:37">&lt;</operator> <literal type="number" pos:start="897:39" pos:end="897:39">0</literal></expr>)</condition> <block pos:start="897:42" pos:end="903:13">{<block_content pos:start="899:17" pos:end="901:43">

                <expr_stmt pos:start="899:17" pos:end="899:35"><expr pos:start="899:17" pos:end="899:34"><name pos:start="899:17" pos:end="899:30"><name pos:start="899:17" pos:end="899:17">h</name><operator pos:start="899:18" pos:end="899:19">-&gt;</operator><name pos:start="899:20" pos:end="899:30">first_field</name></name> <operator pos:start="899:32" pos:end="899:32">=</operator> <literal type="number" pos:start="899:34" pos:end="899:34">0</literal></expr>;</expr_stmt>

                <return pos:start="901:17" pos:end="901:43">return <expr pos:start="901:24" pos:end="901:42"><name pos:start="901:24" pos:end="901:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="905:11" pos:end="909:9">else <block pos:start="905:16" pos:end="909:9">{<block_content pos:start="907:13" pos:end="907:42">

            <expr_stmt pos:start="907:13" pos:end="907:42"><expr pos:start="907:13" pos:end="907:41"><call pos:start="907:13" pos:end="907:41"><name pos:start="907:13" pos:end="907:35">release_unused_pictures</name><argument_list pos:start="907:36" pos:end="907:41">(<argument pos:start="907:37" pos:end="907:37"><expr pos:start="907:37" pos:end="907:37"><name pos:start="907:37" pos:end="907:37">h</name></expr></argument>, <argument pos:start="907:40" pos:end="907:40"><expr pos:start="907:40" pos:end="907:40"><literal type="number" pos:start="907:40" pos:end="907:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="911:9" pos:end="913:48">/* Some macroblocks can be accessed before they're available in case

        * of lost slices, MBAFF or threading. */</comment>

        <if_stmt pos:start="915:9" pos:end="927:9"><if pos:start="915:9" pos:end="921:9">if <condition pos:start="915:12" pos:end="915:29">(<expr pos:start="915:13" pos:end="915:28"><call pos:start="915:13" pos:end="915:28"><name pos:start="915:13" pos:end="915:25">FIELD_PICTURE</name><argument_list pos:start="915:26" pos:end="915:28">(<argument pos:start="915:27" pos:end="915:27"><expr pos:start="915:27" pos:end="915:27"><name pos:start="915:27" pos:end="915:27">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="915:31" pos:end="921:9">{<block_content pos:start="917:13" pos:end="919:124">

            <for pos:start="917:13" pos:end="919:124">for<control pos:start="917:16" pos:end="917:85">(<init pos:start="917:17" pos:end="917:64"><expr pos:start="917:17" pos:end="917:63"><name pos:start="917:17" pos:end="917:17">i</name> <operator pos:start="917:19" pos:end="917:19">=</operator> <operator pos:start="917:21" pos:end="917:21">(</operator><name pos:start="917:22" pos:end="917:41"><name pos:start="917:22" pos:end="917:22">h</name><operator pos:start="917:23" pos:end="917:24">-&gt;</operator><name pos:start="917:25" pos:end="917:41">picture_structure</name></name> <operator pos:start="917:43" pos:end="917:44">==</operator> <name pos:start="917:46" pos:end="917:62">PICT_BOTTOM_FIELD</name><operator pos:start="917:63" pos:end="917:63">)</operator></expr>;</init> <condition pos:start="917:66" pos:end="917:80"><expr pos:start="917:66" pos:end="917:79"><name pos:start="917:66" pos:end="917:66">i</name><operator pos:start="917:67" pos:end="917:67">&lt;</operator><name pos:start="917:68" pos:end="917:79"><name pos:start="917:68" pos:end="917:68">h</name><operator pos:start="917:69" pos:end="917:70">-&gt;</operator><name pos:start="917:71" pos:end="917:79">mb_height</name></name></expr>;</condition> <incr pos:start="917:82" pos:end="917:84"><expr pos:start="917:82" pos:end="917:84"><name pos:start="917:82" pos:end="917:82">i</name><operator pos:start="917:83" pos:end="917:84">++</operator></expr></incr>)</control><block type="pseudo" pos:start="919:17" pos:end="919:124"><block_content pos:start="919:17" pos:end="919:124">

                <expr_stmt pos:start="919:17" pos:end="919:124"><expr pos:start="919:17" pos:end="919:123"><call pos:start="919:17" pos:end="919:123"><name pos:start="919:17" pos:end="919:22">memset</name><argument_list pos:start="919:23" pos:end="919:123">(<argument pos:start="919:24" pos:end="919:54"><expr pos:start="919:24" pos:end="919:54"><name pos:start="919:24" pos:end="919:37"><name pos:start="919:24" pos:end="919:24">h</name><operator pos:start="919:25" pos:end="919:26">-&gt;</operator><name pos:start="919:27" pos:end="919:37">slice_table</name></name> <operator pos:start="919:39" pos:end="919:39">+</operator> <name pos:start="919:41" pos:end="919:41">i</name><operator pos:start="919:42" pos:end="919:42">*</operator><name pos:start="919:43" pos:end="919:54"><name pos:start="919:43" pos:end="919:43">h</name><operator pos:start="919:44" pos:end="919:45">-&gt;</operator><name pos:start="919:46" pos:end="919:54">mb_stride</name></name></expr></argument>, <argument pos:start="919:57" pos:end="919:58"><expr pos:start="919:57" pos:end="919:58"><operator pos:start="919:57" pos:end="919:57">-</operator><literal type="number" pos:start="919:58" pos:end="919:58">1</literal></expr></argument>, <argument pos:start="919:61" pos:end="919:122"><expr pos:start="919:61" pos:end="919:122"><operator pos:start="919:61" pos:end="919:61">(</operator><name pos:start="919:62" pos:end="919:73"><name pos:start="919:62" pos:end="919:62">h</name><operator pos:start="919:63" pos:end="919:64">-&gt;</operator><name pos:start="919:65" pos:end="919:73">mb_stride</name></name> <operator pos:start="919:75" pos:end="919:75">-</operator> <operator pos:start="919:77" pos:end="919:77">(</operator><name pos:start="919:78" pos:end="919:78">i</name><operator pos:start="919:79" pos:end="919:79">+</operator><literal type="number" pos:start="919:80" pos:end="919:80">1</literal><operator pos:start="919:81" pos:end="919:82">==</operator><name pos:start="919:83" pos:end="919:94"><name pos:start="919:83" pos:end="919:83">h</name><operator pos:start="919:84" pos:end="919:85">-&gt;</operator><name pos:start="919:86" pos:end="919:94">mb_height</name></name><operator pos:start="919:95" pos:end="919:95">)</operator><operator pos:start="919:96" pos:end="919:96">)</operator> <operator pos:start="919:98" pos:end="919:98">*</operator> <sizeof pos:start="919:100" pos:end="919:122">sizeof<argument_list pos:start="919:106" pos:end="919:122">(<argument pos:start="919:107" pos:end="919:121"><expr pos:start="919:107" pos:end="919:121"><operator pos:start="919:107" pos:end="919:107">*</operator><name pos:start="919:108" pos:end="919:121"><name pos:start="919:108" pos:end="919:108">h</name><operator pos:start="919:109" pos:end="919:110">-&gt;</operator><name pos:start="919:111" pos:end="919:121">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="921:11" pos:end="927:9">else <block pos:start="921:16" pos:end="927:9">{<block_content pos:start="923:13" pos:end="925:77">

            <expr_stmt pos:start="923:13" pos:end="925:77"><expr pos:start="923:13" pos:end="925:76"><call pos:start="923:13" pos:end="925:76"><name pos:start="923:13" pos:end="923:18">memset</name><argument_list pos:start="923:19" pos:end="925:76">(<argument pos:start="923:20" pos:end="923:33"><expr pos:start="923:20" pos:end="923:33"><name pos:start="923:20" pos:end="923:33"><name pos:start="923:20" pos:end="923:20">h</name><operator pos:start="923:21" pos:end="923:22">-&gt;</operator><name pos:start="923:23" pos:end="923:33">slice_table</name></name></expr></argument>, <argument pos:start="923:36" pos:end="923:37"><expr pos:start="923:36" pos:end="923:37"><operator pos:start="923:36" pos:end="923:36">-</operator><literal type="number" pos:start="923:37" pos:end="923:37">1</literal></expr></argument>,

                <argument pos:start="925:17" pos:end="925:75"><expr pos:start="925:17" pos:end="925:75"><operator pos:start="925:17" pos:end="925:17">(</operator><name pos:start="925:18" pos:end="925:29"><name pos:start="925:18" pos:end="925:18">h</name><operator pos:start="925:19" pos:end="925:20">-&gt;</operator><name pos:start="925:21" pos:end="925:29">mb_height</name></name> <operator pos:start="925:31" pos:end="925:31">*</operator> <name pos:start="925:33" pos:end="925:44"><name pos:start="925:33" pos:end="925:33">h</name><operator pos:start="925:34" pos:end="925:35">-&gt;</operator><name pos:start="925:36" pos:end="925:44">mb_stride</name></name> <operator pos:start="925:46" pos:end="925:46">-</operator> <literal type="number" pos:start="925:48" pos:end="925:48">1</literal><operator pos:start="925:49" pos:end="925:49">)</operator> <operator pos:start="925:51" pos:end="925:51">*</operator> <sizeof pos:start="925:53" pos:end="925:75">sizeof<argument_list pos:start="925:59" pos:end="925:75">(<argument pos:start="925:60" pos:end="925:74"><expr pos:start="925:60" pos:end="925:74"><operator pos:start="925:60" pos:end="925:60">*</operator><name pos:start="925:61" pos:end="925:74"><name pos:start="925:61" pos:end="925:61">h</name><operator pos:start="925:62" pos:end="925:63">-&gt;</operator><name pos:start="925:64" pos:end="925:74">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:32"><expr pos:start="929:9" pos:end="929:31"><name pos:start="929:9" pos:end="929:26"><name pos:start="929:9" pos:end="929:9">h</name><operator pos:start="929:10" pos:end="929:11">-&gt;</operator><name pos:start="929:12" pos:end="929:26">last_slice_type</name></name> <operator pos:start="929:28" pos:end="929:28">=</operator> <operator pos:start="929:30" pos:end="929:30">-</operator><literal type="number" pos:start="929:31" pos:end="929:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="937:5" pos:end="937:45"><expr pos:start="937:5" pos:end="937:44"><name pos:start="937:5" pos:end="937:29"><name pos:start="937:5" pos:end="937:5">h</name><operator pos:start="937:6" pos:end="937:7">-&gt;</operator><name pos:start="937:8" pos:end="937:18">cur_pic_ptr</name><operator pos:start="937:19" pos:end="937:20">-&gt;</operator><name pos:start="937:21" pos:end="937:29">frame_num</name></name> <operator pos:start="937:31" pos:end="937:31">=</operator> <name pos:start="937:33" pos:end="937:44"><name pos:start="937:33" pos:end="937:33">h</name><operator pos:start="937:34" pos:end="937:35">-&gt;</operator><name pos:start="937:36" pos:end="937:44">frame_num</name></name></expr>;</expr_stmt> <comment type="line" pos:start="937:47" pos:end="937:72">// FIXME frame_num cleanup</comment>



    <expr_stmt pos:start="941:5" pos:end="941:56"><expr pos:start="941:5" pos:end="941:55"><call pos:start="941:5" pos:end="941:55"><name pos:start="941:5" pos:end="941:14">av_assert1</name><argument_list pos:start="941:15" pos:end="941:55">(<argument pos:start="941:16" pos:end="941:54"><expr pos:start="941:16" pos:end="941:54"><name pos:start="941:16" pos:end="941:24"><name pos:start="941:16" pos:end="941:16">h</name><operator pos:start="941:17" pos:end="941:18">-&gt;</operator><name pos:start="941:19" pos:end="941:24">mb_num</name></name> <operator pos:start="941:26" pos:end="941:27">==</operator> <name pos:start="941:29" pos:end="941:39"><name pos:start="941:29" pos:end="941:29">h</name><operator pos:start="941:30" pos:end="941:31">-&gt;</operator><name pos:start="941:32" pos:end="941:39">mb_width</name></name> <operator pos:start="941:41" pos:end="941:41">*</operator> <name pos:start="941:43" pos:end="941:54"><name pos:start="941:43" pos:end="941:43">h</name><operator pos:start="941:44" pos:end="941:45">-&gt;</operator><name pos:start="941:46" pos:end="941:54">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="943:5" pos:end="951:5"><if pos:start="943:5" pos:end="951:5">if <condition pos:start="943:8" pos:end="945:39">(<expr pos:start="943:9" pos:end="945:38"><name pos:start="943:9" pos:end="943:25">first_mb_in_slice</name> <operator pos:start="943:27" pos:end="943:28">&lt;&lt;</operator> <call pos:start="943:30" pos:end="943:54"><name pos:start="943:30" pos:end="943:51">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="943:52" pos:end="943:54">(<argument pos:start="943:53" pos:end="943:53"><expr pos:start="943:53" pos:end="943:53"><name pos:start="943:53" pos:end="943:53">h</name></expr></argument>)</argument_list></call> <operator pos:start="943:56" pos:end="943:57">&gt;=</operator> <name pos:start="943:59" pos:end="943:67"><name pos:start="943:59" pos:end="943:59">h</name><operator pos:start="943:60" pos:end="943:61">-&gt;</operator><name pos:start="943:62" pos:end="943:67">mb_num</name></name> <operator pos:start="943:69" pos:end="943:70">||</operator>

        <name pos:start="945:9" pos:end="945:25">first_mb_in_slice</name> <operator pos:start="945:27" pos:end="945:28">&gt;=</operator> <name pos:start="945:30" pos:end="945:38"><name pos:start="945:30" pos:end="945:30">h</name><operator pos:start="945:31" pos:end="945:32">-&gt;</operator><name pos:start="945:33" pos:end="945:38">mb_num</name></name></expr>)</condition> <block pos:start="945:41" pos:end="951:5">{<block_content pos:start="947:9" pos:end="949:35">

        <expr_stmt pos:start="947:9" pos:end="947:71"><expr pos:start="947:9" pos:end="947:70"><call pos:start="947:9" pos:end="947:70"><name pos:start="947:9" pos:end="947:14">av_log</name><argument_list pos:start="947:15" pos:end="947:70">(<argument pos:start="947:16" pos:end="947:23"><expr pos:start="947:16" pos:end="947:23"><name pos:start="947:16" pos:end="947:23"><name pos:start="947:16" pos:end="947:16">h</name><operator pos:start="947:17" pos:end="947:18">-&gt;</operator><name pos:start="947:19" pos:end="947:23">avctx</name></name></expr></argument>, <argument pos:start="947:26" pos:end="947:37"><expr pos:start="947:26" pos:end="947:37"><name pos:start="947:26" pos:end="947:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="947:40" pos:end="947:69"><expr pos:start="947:40" pos:end="947:69"><literal type="string" pos:start="947:40" pos:end="947:69">"first_mb_in_slice overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="949:9" pos:end="949:35">return <expr pos:start="949:16" pos:end="949:34"><name pos:start="949:16" pos:end="949:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="953:5" pos:end="953:66"><expr pos:start="953:5" pos:end="953:65"><name pos:start="953:5" pos:end="953:19"><name pos:start="953:5" pos:end="953:6">sl</name><operator pos:start="953:7" pos:end="953:8">-&gt;</operator><name pos:start="953:9" pos:end="953:19">resync_mb_x</name></name> <operator pos:start="953:21" pos:end="953:21">=</operator> <name pos:start="953:23" pos:end="953:30"><name pos:start="953:23" pos:end="953:24">sl</name><operator pos:start="953:25" pos:end="953:26">-&gt;</operator><name pos:start="953:27" pos:end="953:30">mb_x</name></name> <operator pos:start="953:32" pos:end="953:32">=</operator>  <name pos:start="953:35" pos:end="953:51">first_mb_in_slice</name> <operator pos:start="953:53" pos:end="953:53">%</operator> <name pos:start="953:55" pos:end="953:65"><name pos:start="953:55" pos:end="953:55">h</name><operator pos:start="953:56" pos:end="953:57">-&gt;</operator><name pos:start="953:58" pos:end="953:65">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="955:5" pos:end="957:59"><expr pos:start="955:5" pos:end="957:58"><name pos:start="955:5" pos:end="955:19"><name pos:start="955:5" pos:end="955:6">sl</name><operator pos:start="955:7" pos:end="955:8">-&gt;</operator><name pos:start="955:9" pos:end="955:19">resync_mb_y</name></name> <operator pos:start="955:21" pos:end="955:21">=</operator> <name pos:start="955:23" pos:end="955:30"><name pos:start="955:23" pos:end="955:24">sl</name><operator pos:start="955:25" pos:end="955:26">-&gt;</operator><name pos:start="955:27" pos:end="955:30">mb_y</name></name> <operator pos:start="955:32" pos:end="955:32">=</operator> <operator pos:start="955:34" pos:end="955:34">(</operator><name pos:start="955:35" pos:end="955:51">first_mb_in_slice</name> <operator pos:start="955:53" pos:end="955:53">/</operator> <name pos:start="955:55" pos:end="955:65"><name pos:start="955:55" pos:end="955:55">h</name><operator pos:start="955:56" pos:end="955:57">-&gt;</operator><name pos:start="955:58" pos:end="955:65">mb_width</name></name><operator pos:start="955:66" pos:end="955:66">)</operator> <operator pos:start="955:68" pos:end="955:69">&lt;&lt;</operator>

                                 <call pos:start="957:34" pos:end="957:58"><name pos:start="957:34" pos:end="957:55">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="957:56" pos:end="957:58">(<argument pos:start="957:57" pos:end="957:57"><expr pos:start="957:57" pos:end="957:57"><name pos:start="957:57" pos:end="957:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="959:5" pos:end="961:50"><if pos:start="959:5" pos:end="961:50">if <condition pos:start="959:8" pos:end="959:50">(<expr pos:start="959:9" pos:end="959:49"><name pos:start="959:9" pos:end="959:28"><name pos:start="959:9" pos:end="959:9">h</name><operator pos:start="959:10" pos:end="959:11">-&gt;</operator><name pos:start="959:12" pos:end="959:28">picture_structure</name></name> <operator pos:start="959:30" pos:end="959:31">==</operator> <name pos:start="959:33" pos:end="959:49">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="961:9" pos:end="961:50"><block_content pos:start="961:9" pos:end="961:50">

        <expr_stmt pos:start="961:9" pos:end="961:50"><expr pos:start="961:9" pos:end="961:49"><name pos:start="961:9" pos:end="961:23"><name pos:start="961:9" pos:end="961:10">sl</name><operator pos:start="961:11" pos:end="961:12">-&gt;</operator><name pos:start="961:13" pos:end="961:23">resync_mb_y</name></name> <operator pos:start="961:25" pos:end="961:25">=</operator> <name pos:start="961:27" pos:end="961:34"><name pos:start="961:27" pos:end="961:28">sl</name><operator pos:start="961:29" pos:end="961:30">-&gt;</operator><name pos:start="961:31" pos:end="961:34">mb_y</name></name> <operator pos:start="961:36" pos:end="961:36">=</operator> <name pos:start="961:38" pos:end="961:45"><name pos:start="961:38" pos:end="961:39">sl</name><operator pos:start="961:40" pos:end="961:41">-&gt;</operator><name pos:start="961:42" pos:end="961:45">mb_y</name></name> <operator pos:start="961:47" pos:end="961:47">+</operator> <literal type="number" pos:start="961:49" pos:end="961:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="963:5" pos:end="963:40"><expr pos:start="963:5" pos:end="963:39"><call pos:start="963:5" pos:end="963:39"><name pos:start="963:5" pos:end="963:14">av_assert1</name><argument_list pos:start="963:15" pos:end="963:39">(<argument pos:start="963:16" pos:end="963:38"><expr pos:start="963:16" pos:end="963:38"><name pos:start="963:16" pos:end="963:23"><name pos:start="963:16" pos:end="963:17">sl</name><operator pos:start="963:18" pos:end="963:19">-&gt;</operator><name pos:start="963:20" pos:end="963:23">mb_y</name></name> <operator pos:start="963:25" pos:end="963:25">&lt;</operator> <name pos:start="963:27" pos:end="963:38"><name pos:start="963:27" pos:end="963:27">h</name><operator pos:start="963:28" pos:end="963:29">-&gt;</operator><name pos:start="963:30" pos:end="963:38">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="967:5" pos:end="979:5"><if pos:start="967:5" pos:end="973:5">if <condition pos:start="967:8" pos:end="967:43">(<expr pos:start="967:9" pos:end="967:42"><name pos:start="967:9" pos:end="967:28"><name pos:start="967:9" pos:end="967:9">h</name><operator pos:start="967:10" pos:end="967:11">-&gt;</operator><name pos:start="967:12" pos:end="967:28">picture_structure</name></name> <operator pos:start="967:30" pos:end="967:31">==</operator> <name pos:start="967:33" pos:end="967:42">PICT_FRAME</name></expr>)</condition> <block pos:start="967:45" pos:end="973:5">{<block_content pos:start="969:9" pos:end="971:57">

        <expr_stmt pos:start="969:9" pos:end="969:39"><expr pos:start="969:9" pos:end="969:38"><name pos:start="969:9" pos:end="969:23"><name pos:start="969:9" pos:end="969:9">h</name><operator pos:start="969:10" pos:end="969:11">-&gt;</operator><name pos:start="969:12" pos:end="969:23">curr_pic_num</name></name> <operator pos:start="969:25" pos:end="969:25">=</operator> <name pos:start="969:27" pos:end="969:38"><name pos:start="969:27" pos:end="969:27">h</name><operator pos:start="969:28" pos:end="969:29">-&gt;</operator><name pos:start="969:30" pos:end="969:38">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="971:9" pos:end="971:57"><expr pos:start="971:9" pos:end="971:56"><name pos:start="971:9" pos:end="971:22"><name pos:start="971:9" pos:end="971:9">h</name><operator pos:start="971:10" pos:end="971:11">-&gt;</operator><name pos:start="971:12" pos:end="971:22">max_pic_num</name></name>  <operator pos:start="971:25" pos:end="971:25">=</operator> <literal type="number" pos:start="971:27" pos:end="971:27">1</literal> <operator pos:start="971:29" pos:end="971:30">&lt;&lt;</operator> <name pos:start="971:32" pos:end="971:56"><name pos:start="971:32" pos:end="971:32">h</name><operator pos:start="971:33" pos:end="971:34">-&gt;</operator><name pos:start="971:35" pos:end="971:37">sps</name><operator pos:start="971:38" pos:end="971:38">.</operator><name pos:start="971:39" pos:end="971:56">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="973:7" pos:end="979:5">else <block pos:start="973:12" pos:end="979:5">{<block_content pos:start="975:9" pos:end="977:63">

        <expr_stmt pos:start="975:9" pos:end="975:47"><expr pos:start="975:9" pos:end="975:46"><name pos:start="975:9" pos:end="975:23"><name pos:start="975:9" pos:end="975:9">h</name><operator pos:start="975:10" pos:end="975:11">-&gt;</operator><name pos:start="975:12" pos:end="975:23">curr_pic_num</name></name> <operator pos:start="975:25" pos:end="975:25">=</operator> <literal type="number" pos:start="975:27" pos:end="975:27">2</literal> <operator pos:start="975:29" pos:end="975:29">*</operator> <name pos:start="975:31" pos:end="975:42"><name pos:start="975:31" pos:end="975:31">h</name><operator pos:start="975:32" pos:end="975:33">-&gt;</operator><name pos:start="975:34" pos:end="975:42">frame_num</name></name> <operator pos:start="975:44" pos:end="975:44">+</operator> <literal type="number" pos:start="975:46" pos:end="975:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="977:9" pos:end="977:63"><expr pos:start="977:9" pos:end="977:62"><name pos:start="977:9" pos:end="977:22"><name pos:start="977:9" pos:end="977:9">h</name><operator pos:start="977:10" pos:end="977:11">-&gt;</operator><name pos:start="977:12" pos:end="977:22">max_pic_num</name></name>  <operator pos:start="977:25" pos:end="977:25">=</operator> <literal type="number" pos:start="977:27" pos:end="977:27">1</literal> <operator pos:start="977:29" pos:end="977:30">&lt;&lt;</operator> <operator pos:start="977:32" pos:end="977:32">(</operator><name pos:start="977:33" pos:end="977:57"><name pos:start="977:33" pos:end="977:33">h</name><operator pos:start="977:34" pos:end="977:35">-&gt;</operator><name pos:start="977:36" pos:end="977:38">sps</name><operator pos:start="977:39" pos:end="977:39">.</operator><name pos:start="977:40" pos:end="977:57">log2_max_frame_num</name></name> <operator pos:start="977:59" pos:end="977:59">+</operator> <literal type="number" pos:start="977:61" pos:end="977:61">1</literal><operator pos:start="977:62" pos:end="977:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="983:5" pos:end="985:31"><if pos:start="983:5" pos:end="985:31">if <condition pos:start="983:8" pos:end="983:42">(<expr pos:start="983:9" pos:end="983:41"><name pos:start="983:9" pos:end="983:24"><name pos:start="983:9" pos:end="983:9">h</name><operator pos:start="983:10" pos:end="983:11">-&gt;</operator><name pos:start="983:12" pos:end="983:24">nal_unit_type</name></name> <operator pos:start="983:26" pos:end="983:27">==</operator> <name pos:start="983:29" pos:end="983:41">NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="985:9" pos:end="985:31"><block_content pos:start="985:9" pos:end="985:31">

        <expr_stmt pos:start="985:9" pos:end="985:31"><expr pos:start="985:9" pos:end="985:30"><call pos:start="985:9" pos:end="985:30"><name pos:start="985:9" pos:end="985:21">get_ue_golomb</name><argument_list pos:start="985:22" pos:end="985:30">(<argument pos:start="985:23" pos:end="985:29"><expr pos:start="985:23" pos:end="985:29"><operator pos:start="985:23" pos:end="985:23">&amp;</operator><name pos:start="985:24" pos:end="985:29"><name pos:start="985:24" pos:end="985:25">sl</name><operator pos:start="985:26" pos:end="985:27">-&gt;</operator><name pos:start="985:28" pos:end="985:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="985:33" pos:end="985:48">/* idr_pic_id */</comment>



    <if_stmt pos:start="989:5" pos:end="999:5"><if pos:start="989:5" pos:end="999:5">if <condition pos:start="989:8" pos:end="989:29">(<expr pos:start="989:9" pos:end="989:28"><name pos:start="989:9" pos:end="989:23"><name pos:start="989:9" pos:end="989:9">h</name><operator pos:start="989:10" pos:end="989:11">-&gt;</operator><name pos:start="989:12" pos:end="989:14">sps</name><operator pos:start="989:15" pos:end="989:15">.</operator><name pos:start="989:16" pos:end="989:23">poc_type</name></name> <operator pos:start="989:25" pos:end="989:26">==</operator> <literal type="number" pos:start="989:28" pos:end="989:28">0</literal></expr>)</condition> <block pos:start="989:31" pos:end="999:5">{<block_content pos:start="991:9" pos:end="997:57">

        <expr_stmt pos:start="991:9" pos:end="991:64"><expr pos:start="991:9" pos:end="991:63"><name pos:start="991:9" pos:end="991:18"><name pos:start="991:9" pos:end="991:9">h</name><operator pos:start="991:10" pos:end="991:11">-&gt;</operator><name pos:start="991:12" pos:end="991:18">poc_lsb</name></name> <operator pos:start="991:20" pos:end="991:20">=</operator> <call pos:start="991:22" pos:end="991:63"><name pos:start="991:22" pos:end="991:29">get_bits</name><argument_list pos:start="991:30" pos:end="991:63">(<argument pos:start="991:31" pos:end="991:37"><expr pos:start="991:31" pos:end="991:37"><operator pos:start="991:31" pos:end="991:31">&amp;</operator><name pos:start="991:32" pos:end="991:37"><name pos:start="991:32" pos:end="991:33">sl</name><operator pos:start="991:34" pos:end="991:35">-&gt;</operator><name pos:start="991:36" pos:end="991:37">gb</name></name></expr></argument>, <argument pos:start="991:40" pos:end="991:62"><expr pos:start="991:40" pos:end="991:62"><name pos:start="991:40" pos:end="991:62"><name pos:start="991:40" pos:end="991:40">h</name><operator pos:start="991:41" pos:end="991:42">-&gt;</operator><name pos:start="991:43" pos:end="991:45">sps</name><operator pos:start="991:46" pos:end="991:46">.</operator><name pos:start="991:47" pos:end="991:62">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="995:9" pos:end="997:57"><if pos:start="995:9" pos:end="997:57">if <condition pos:start="995:12" pos:end="995:80">(<expr pos:start="995:13" pos:end="995:79"><name pos:start="995:13" pos:end="995:36"><name pos:start="995:13" pos:end="995:13">h</name><operator pos:start="995:14" pos:end="995:15">-&gt;</operator><name pos:start="995:16" pos:end="995:18">pps</name><operator pos:start="995:19" pos:end="995:19">.</operator><name pos:start="995:20" pos:end="995:36">pic_order_present</name></name> <operator pos:start="995:38" pos:end="995:39">==</operator> <literal type="number" pos:start="995:41" pos:end="995:41">1</literal> <operator pos:start="995:43" pos:end="995:44">&amp;&amp;</operator> <name pos:start="995:46" pos:end="995:65"><name pos:start="995:46" pos:end="995:46">h</name><operator pos:start="995:47" pos:end="995:48">-&gt;</operator><name pos:start="995:49" pos:end="995:65">picture_structure</name></name> <operator pos:start="995:67" pos:end="995:68">==</operator> <name pos:start="995:70" pos:end="995:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="997:13" pos:end="997:57"><block_content pos:start="997:13" pos:end="997:57">

            <expr_stmt pos:start="997:13" pos:end="997:57"><expr pos:start="997:13" pos:end="997:56"><name pos:start="997:13" pos:end="997:31"><name pos:start="997:13" pos:end="997:13">h</name><operator pos:start="997:14" pos:end="997:15">-&gt;</operator><name pos:start="997:16" pos:end="997:31">delta_poc_bottom</name></name> <operator pos:start="997:33" pos:end="997:33">=</operator> <call pos:start="997:35" pos:end="997:56"><name pos:start="997:35" pos:end="997:47">get_se_golomb</name><argument_list pos:start="997:48" pos:end="997:56">(<argument pos:start="997:49" pos:end="997:55"><expr pos:start="997:49" pos:end="997:55"><operator pos:start="997:49" pos:end="997:49">&amp;</operator><name pos:start="997:50" pos:end="997:55"><name pos:start="997:50" pos:end="997:51">sl</name><operator pos:start="997:52" pos:end="997:53">-&gt;</operator><name pos:start="997:54" pos:end="997:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1003:5" pos:end="1013:5"><if pos:start="1003:5" pos:end="1013:5">if <condition pos:start="1003:8" pos:end="1003:73">(<expr pos:start="1003:9" pos:end="1003:72"><name pos:start="1003:9" pos:end="1003:23"><name pos:start="1003:9" pos:end="1003:9">h</name><operator pos:start="1003:10" pos:end="1003:11">-&gt;</operator><name pos:start="1003:12" pos:end="1003:14">sps</name><operator pos:start="1003:15" pos:end="1003:15">.</operator><name pos:start="1003:16" pos:end="1003:23">poc_type</name></name> <operator pos:start="1003:25" pos:end="1003:26">==</operator> <literal type="number" pos:start="1003:28" pos:end="1003:28">1</literal> <operator pos:start="1003:30" pos:end="1003:31">&amp;&amp;</operator> <operator pos:start="1003:33" pos:end="1003:33">!</operator><name pos:start="1003:34" pos:end="1003:72"><name pos:start="1003:34" pos:end="1003:34">h</name><operator pos:start="1003:35" pos:end="1003:36">-&gt;</operator><name pos:start="1003:37" pos:end="1003:39">sps</name><operator pos:start="1003:40" pos:end="1003:40">.</operator><name pos:start="1003:41" pos:end="1003:72">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="1003:75" pos:end="1013:5">{<block_content pos:start="1005:9" pos:end="1011:53">

        <expr_stmt pos:start="1005:9" pos:end="1005:49"><expr pos:start="1005:9" pos:end="1005:48"><name pos:start="1005:9" pos:end="1005:23"><name pos:start="1005:9" pos:end="1005:9">h</name><operator pos:start="1005:10" pos:end="1005:11">-&gt;</operator><name pos:start="1005:12" pos:end="1005:20">delta_poc</name><index pos:start="1005:21" pos:end="1005:23">[<expr pos:start="1005:22" pos:end="1005:22"><literal type="number" pos:start="1005:22" pos:end="1005:22">0</literal></expr>]</index></name> <operator pos:start="1005:25" pos:end="1005:25">=</operator> <call pos:start="1005:27" pos:end="1005:48"><name pos:start="1005:27" pos:end="1005:39">get_se_golomb</name><argument_list pos:start="1005:40" pos:end="1005:48">(<argument pos:start="1005:41" pos:end="1005:47"><expr pos:start="1005:41" pos:end="1005:47"><operator pos:start="1005:41" pos:end="1005:41">&amp;</operator><name pos:start="1005:42" pos:end="1005:47"><name pos:start="1005:42" pos:end="1005:43">sl</name><operator pos:start="1005:44" pos:end="1005:45">-&gt;</operator><name pos:start="1005:46" pos:end="1005:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1009:9" pos:end="1011:53"><if pos:start="1009:9" pos:end="1011:53">if <condition pos:start="1009:12" pos:end="1009:80">(<expr pos:start="1009:13" pos:end="1009:79"><name pos:start="1009:13" pos:end="1009:36"><name pos:start="1009:13" pos:end="1009:13">h</name><operator pos:start="1009:14" pos:end="1009:15">-&gt;</operator><name pos:start="1009:16" pos:end="1009:18">pps</name><operator pos:start="1009:19" pos:end="1009:19">.</operator><name pos:start="1009:20" pos:end="1009:36">pic_order_present</name></name> <operator pos:start="1009:38" pos:end="1009:39">==</operator> <literal type="number" pos:start="1009:41" pos:end="1009:41">1</literal> <operator pos:start="1009:43" pos:end="1009:44">&amp;&amp;</operator> <name pos:start="1009:46" pos:end="1009:65"><name pos:start="1009:46" pos:end="1009:46">h</name><operator pos:start="1009:47" pos:end="1009:48">-&gt;</operator><name pos:start="1009:49" pos:end="1009:65">picture_structure</name></name> <operator pos:start="1009:67" pos:end="1009:68">==</operator> <name pos:start="1009:70" pos:end="1009:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="1011:13" pos:end="1011:53"><block_content pos:start="1011:13" pos:end="1011:53">

            <expr_stmt pos:start="1011:13" pos:end="1011:53"><expr pos:start="1011:13" pos:end="1011:52"><name pos:start="1011:13" pos:end="1011:27"><name pos:start="1011:13" pos:end="1011:13">h</name><operator pos:start="1011:14" pos:end="1011:15">-&gt;</operator><name pos:start="1011:16" pos:end="1011:24">delta_poc</name><index pos:start="1011:25" pos:end="1011:27">[<expr pos:start="1011:26" pos:end="1011:26"><literal type="number" pos:start="1011:26" pos:end="1011:26">1</literal></expr>]</index></name> <operator pos:start="1011:29" pos:end="1011:29">=</operator> <call pos:start="1011:31" pos:end="1011:52"><name pos:start="1011:31" pos:end="1011:43">get_se_golomb</name><argument_list pos:start="1011:44" pos:end="1011:52">(<argument pos:start="1011:45" pos:end="1011:51"><expr pos:start="1011:45" pos:end="1011:51"><operator pos:start="1011:45" pos:end="1011:45">&amp;</operator><name pos:start="1011:46" pos:end="1011:51"><name pos:start="1011:46" pos:end="1011:47">sl</name><operator pos:start="1011:48" pos:end="1011:49">-&gt;</operator><name pos:start="1011:50" pos:end="1011:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1017:5" pos:end="1017:68"><expr pos:start="1017:5" pos:end="1017:67"><call pos:start="1017:5" pos:end="1017:67"><name pos:start="1017:5" pos:end="1017:15">ff_init_poc</name><argument_list pos:start="1017:16" pos:end="1017:67">(<argument pos:start="1017:17" pos:end="1017:17"><expr pos:start="1017:17" pos:end="1017:17"><name pos:start="1017:17" pos:end="1017:17">h</name></expr></argument>, <argument pos:start="1017:20" pos:end="1017:44"><expr pos:start="1017:20" pos:end="1017:44"><name pos:start="1017:20" pos:end="1017:44"><name pos:start="1017:20" pos:end="1017:20">h</name><operator pos:start="1017:21" pos:end="1017:22">-&gt;</operator><name pos:start="1017:23" pos:end="1017:33">cur_pic_ptr</name><operator pos:start="1017:34" pos:end="1017:35">-&gt;</operator><name pos:start="1017:36" pos:end="1017:44">field_poc</name></name></expr></argument>, <argument pos:start="1017:47" pos:end="1017:66"><expr pos:start="1017:47" pos:end="1017:66"><operator pos:start="1017:47" pos:end="1017:47">&amp;</operator><name pos:start="1017:48" pos:end="1017:66"><name pos:start="1017:48" pos:end="1017:48">h</name><operator pos:start="1017:49" pos:end="1017:50">-&gt;</operator><name pos:start="1017:51" pos:end="1017:61">cur_pic_ptr</name><operator pos:start="1017:62" pos:end="1017:63">-&gt;</operator><name pos:start="1017:64" pos:end="1017:66">poc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1021:5" pos:end="1023:57"><if pos:start="1021:5" pos:end="1023:57">if <condition pos:start="1021:8" pos:end="1021:41">(<expr pos:start="1021:9" pos:end="1021:40"><name pos:start="1021:9" pos:end="1021:40"><name pos:start="1021:9" pos:end="1021:9">h</name><operator pos:start="1021:10" pos:end="1021:11">-&gt;</operator><name pos:start="1021:12" pos:end="1021:14">pps</name><operator pos:start="1021:15" pos:end="1021:15">.</operator><name pos:start="1021:16" pos:end="1021:40">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="1023:9" pos:end="1023:57"><block_content pos:start="1023:9" pos:end="1023:57">

        <expr_stmt pos:start="1023:9" pos:end="1023:57"><expr pos:start="1023:9" pos:end="1023:56"><name pos:start="1023:9" pos:end="1023:31"><name pos:start="1023:9" pos:end="1023:10">sl</name><operator pos:start="1023:11" pos:end="1023:12">-&gt;</operator><name pos:start="1023:13" pos:end="1023:31">redundant_pic_count</name></name> <operator pos:start="1023:33" pos:end="1023:33">=</operator> <call pos:start="1023:35" pos:end="1023:56"><name pos:start="1023:35" pos:end="1023:47">get_ue_golomb</name><argument_list pos:start="1023:48" pos:end="1023:56">(<argument pos:start="1023:49" pos:end="1023:55"><expr pos:start="1023:49" pos:end="1023:55"><operator pos:start="1023:49" pos:end="1023:49">&amp;</operator><name pos:start="1023:50" pos:end="1023:55"><name pos:start="1023:50" pos:end="1023:51">sl</name><operator pos:start="1023:52" pos:end="1023:53">-&gt;</operator><name pos:start="1023:54" pos:end="1023:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1027:5" pos:end="1027:34"><expr pos:start="1027:5" pos:end="1027:33"><name pos:start="1027:5" pos:end="1027:7">ret</name> <operator pos:start="1027:9" pos:end="1027:9">=</operator> <call pos:start="1027:11" pos:end="1027:33"><name pos:start="1027:11" pos:end="1027:26">ff_set_ref_count</name><argument_list pos:start="1027:27" pos:end="1027:33">(<argument pos:start="1027:28" pos:end="1027:28"><expr pos:start="1027:28" pos:end="1027:28"><name pos:start="1027:28" pos:end="1027:28">h</name></expr></argument>, <argument pos:start="1027:31" pos:end="1027:32"><expr pos:start="1027:31" pos:end="1027:32"><name pos:start="1027:31" pos:end="1027:32">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1029:5" pos:end="1031:19"><if pos:start="1029:5" pos:end="1031:19">if <condition pos:start="1029:8" pos:end="1029:16">(<expr pos:start="1029:9" pos:end="1029:15"><name pos:start="1029:9" pos:end="1029:11">ret</name> <operator pos:start="1029:13" pos:end="1029:13">&lt;</operator> <literal type="number" pos:start="1029:15" pos:end="1029:15">0</literal></expr>)</condition><block type="pseudo" pos:start="1031:9" pos:end="1031:19"><block_content pos:start="1031:9" pos:end="1031:19">

        <return pos:start="1031:9" pos:end="1031:19">return <expr pos:start="1031:16" pos:end="1031:18"><name pos:start="1031:16" pos:end="1031:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="1035:5" pos:end="1047:5"><if pos:start="1035:5" pos:end="1047:5">if <condition pos:start="1035:8" pos:end="1041:74">(<expr pos:start="1035:9" pos:end="1041:73"><name pos:start="1035:9" pos:end="1035:18">slice_type</name> <operator pos:start="1035:20" pos:end="1035:21">!=</operator> <name pos:start="1035:23" pos:end="1035:39">AV_PICTURE_TYPE_I</name> <operator pos:start="1035:41" pos:end="1035:42">&amp;&amp;</operator>

        <operator pos:start="1037:9" pos:end="1037:9">(</operator><name pos:start="1037:10" pos:end="1037:25"><name pos:start="1037:10" pos:end="1037:10">h</name><operator pos:start="1037:11" pos:end="1037:12">-&gt;</operator><name pos:start="1037:13" pos:end="1037:25">current_slice</name></name> <operator pos:start="1037:27" pos:end="1037:28">==</operator> <literal type="number" pos:start="1037:30" pos:end="1037:30">0</literal> <operator pos:start="1037:32" pos:end="1037:33">||</operator>

         <name pos:start="1039:10" pos:end="1039:19">slice_type</name> <operator pos:start="1039:21" pos:end="1039:22">!=</operator> <name pos:start="1039:24" pos:end="1039:41"><name pos:start="1039:24" pos:end="1039:24">h</name><operator pos:start="1039:25" pos:end="1039:26">-&gt;</operator><name pos:start="1039:27" pos:end="1039:41">last_slice_type</name></name> <operator pos:start="1039:43" pos:end="1039:44">||</operator>

         <call pos:start="1041:10" pos:end="1041:72"><name pos:start="1041:10" pos:end="1041:15">memcmp</name><argument_list pos:start="1041:16" pos:end="1041:72">(<argument pos:start="1041:17" pos:end="1041:33"><expr pos:start="1041:17" pos:end="1041:33"><name pos:start="1041:17" pos:end="1041:33"><name pos:start="1041:17" pos:end="1041:17">h</name><operator pos:start="1041:18" pos:end="1041:19">-&gt;</operator><name pos:start="1041:20" pos:end="1041:33">last_ref_count</name></name></expr></argument>, <argument pos:start="1041:36" pos:end="1041:48"><expr pos:start="1041:36" pos:end="1041:48"><name pos:start="1041:36" pos:end="1041:48"><name pos:start="1041:36" pos:end="1041:37">sl</name><operator pos:start="1041:38" pos:end="1041:39">-&gt;</operator><name pos:start="1041:40" pos:end="1041:48">ref_count</name></name></expr></argument>, <argument pos:start="1041:51" pos:end="1041:71"><expr pos:start="1041:51" pos:end="1041:71"><sizeof pos:start="1041:51" pos:end="1041:71">sizeof<argument_list pos:start="1041:57" pos:end="1041:71">(<argument pos:start="1041:58" pos:end="1041:70"><expr pos:start="1041:58" pos:end="1041:70"><name pos:start="1041:58" pos:end="1041:70"><name pos:start="1041:58" pos:end="1041:59">sl</name><operator pos:start="1041:60" pos:end="1041:61">-&gt;</operator><name pos:start="1041:62" pos:end="1041:70">ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="1041:73" pos:end="1041:73">)</operator></expr>)</condition> <block pos:start="1041:76" pos:end="1047:5">{<block_content pos:start="1045:9" pos:end="1045:45">



        <expr_stmt pos:start="1045:9" pos:end="1045:45"><expr pos:start="1045:9" pos:end="1045:44"><call pos:start="1045:9" pos:end="1045:44"><name pos:start="1045:9" pos:end="1045:37">ff_h264_fill_default_ref_list</name><argument_list pos:start="1045:38" pos:end="1045:44">(<argument pos:start="1045:39" pos:end="1045:39"><expr pos:start="1045:39" pos:end="1045:39"><name pos:start="1045:39" pos:end="1045:39">h</name></expr></argument>, <argument pos:start="1045:42" pos:end="1045:43"><expr pos:start="1045:42" pos:end="1045:43"><name pos:start="1045:42" pos:end="1045:43">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1051:5" pos:end="1063:5"><if pos:start="1051:5" pos:end="1063:5">if <condition pos:start="1051:8" pos:end="1051:48">(<expr pos:start="1051:9" pos:end="1051:47"><name pos:start="1051:9" pos:end="1051:26"><name pos:start="1051:9" pos:end="1051:10">sl</name><operator pos:start="1051:11" pos:end="1051:12">-&gt;</operator><name pos:start="1051:13" pos:end="1051:26">slice_type_nos</name></name> <operator pos:start="1051:28" pos:end="1051:29">!=</operator> <name pos:start="1051:31" pos:end="1051:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="1051:50" pos:end="1063:5">{<block_content pos:start="1053:8" pos:end="1061:8">

       <expr_stmt pos:start="1053:8" pos:end="1053:59"><expr pos:start="1053:8" pos:end="1053:58"><name pos:start="1053:8" pos:end="1053:10">ret</name> <operator pos:start="1053:12" pos:end="1053:12">=</operator> <call pos:start="1053:14" pos:end="1053:58"><name pos:start="1053:14" pos:end="1053:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="1053:52" pos:end="1053:58">(<argument pos:start="1053:53" pos:end="1053:53"><expr pos:start="1053:53" pos:end="1053:53"><name pos:start="1053:53" pos:end="1053:53">h</name></expr></argument>, <argument pos:start="1053:56" pos:end="1053:57"><expr pos:start="1053:56" pos:end="1053:57"><name pos:start="1053:56" pos:end="1053:57">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="1055:8" pos:end="1061:8"><if pos:start="1055:8" pos:end="1061:8">if <condition pos:start="1055:11" pos:end="1055:19">(<expr pos:start="1055:12" pos:end="1055:18"><name pos:start="1055:12" pos:end="1055:14">ret</name> <operator pos:start="1055:16" pos:end="1055:16">&lt;</operator> <literal type="number" pos:start="1055:18" pos:end="1055:18">0</literal></expr>)</condition> <block pos:start="1055:21" pos:end="1061:8">{<block_content pos:start="1057:12" pos:end="1059:22">

           <expr_stmt pos:start="1057:12" pos:end="1057:51"><expr pos:start="1057:12" pos:end="1057:50"><name pos:start="1057:12" pos:end="1057:27"><name pos:start="1057:12" pos:end="1057:13">sl</name><operator pos:start="1057:14" pos:end="1057:15">-&gt;</operator><name pos:start="1057:16" pos:end="1057:24">ref_count</name><index pos:start="1057:25" pos:end="1057:27">[<expr pos:start="1057:26" pos:end="1057:26"><literal type="number" pos:start="1057:26" pos:end="1057:26">1</literal></expr>]</index></name> <operator pos:start="1057:29" pos:end="1057:29">=</operator> <name pos:start="1057:31" pos:end="1057:46"><name pos:start="1057:31" pos:end="1057:32">sl</name><operator pos:start="1057:33" pos:end="1057:34">-&gt;</operator><name pos:start="1057:35" pos:end="1057:43">ref_count</name><index pos:start="1057:44" pos:end="1057:46">[<expr pos:start="1057:45" pos:end="1057:45"><literal type="number" pos:start="1057:45" pos:end="1057:45">0</literal></expr>]</index></name> <operator pos:start="1057:48" pos:end="1057:48">=</operator> <literal type="number" pos:start="1057:50" pos:end="1057:50">0</literal></expr>;</expr_stmt>

           <return pos:start="1059:12" pos:end="1059:22">return <expr pos:start="1059:19" pos:end="1059:21"><name pos:start="1059:19" pos:end="1059:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1067:5" pos:end="1093:5"><if pos:start="1067:5" pos:end="1073:36">if <condition pos:start="1067:8" pos:end="1071:50">(<expr pos:start="1067:9" pos:end="1071:49"><operator pos:start="1067:9" pos:end="1067:9">(</operator><name pos:start="1067:10" pos:end="1067:29"><name pos:start="1067:10" pos:end="1067:10">h</name><operator pos:start="1067:11" pos:end="1067:12">-&gt;</operator><name pos:start="1067:13" pos:end="1067:15">pps</name><operator pos:start="1067:16" pos:end="1067:16">.</operator><name pos:start="1067:17" pos:end="1067:29">weighted_pred</name></name> <operator pos:start="1067:31" pos:end="1067:32">&amp;&amp;</operator> <name pos:start="1067:34" pos:end="1067:51"><name pos:start="1067:34" pos:end="1067:35">sl</name><operator pos:start="1067:36" pos:end="1067:37">-&gt;</operator><name pos:start="1067:38" pos:end="1067:51">slice_type_nos</name></name> <operator pos:start="1067:53" pos:end="1067:54">==</operator> <name pos:start="1067:56" pos:end="1067:72">AV_PICTURE_TYPE_P</name><operator pos:start="1067:73" pos:end="1067:73">)</operator> <operator pos:start="1067:75" pos:end="1067:76">||</operator>

        <operator pos:start="1069:9" pos:end="1069:9">(</operator><name pos:start="1069:10" pos:end="1069:35"><name pos:start="1069:10" pos:end="1069:10">h</name><operator pos:start="1069:11" pos:end="1069:12">-&gt;</operator><name pos:start="1069:13" pos:end="1069:15">pps</name><operator pos:start="1069:16" pos:end="1069:16">.</operator><name pos:start="1069:17" pos:end="1069:35">weighted_bipred_idc</name></name> <operator pos:start="1069:37" pos:end="1069:38">==</operator> <literal type="number" pos:start="1069:40" pos:end="1069:40">1</literal> <operator pos:start="1069:42" pos:end="1069:43">&amp;&amp;</operator>

         <name pos:start="1071:10" pos:end="1071:27"><name pos:start="1071:10" pos:end="1071:11">sl</name><operator pos:start="1071:12" pos:end="1071:13">-&gt;</operator><name pos:start="1071:14" pos:end="1071:27">slice_type_nos</name></name> <operator pos:start="1071:29" pos:end="1071:30">==</operator> <name pos:start="1071:32" pos:end="1071:48">AV_PICTURE_TYPE_B</name><operator pos:start="1071:49" pos:end="1071:49">)</operator></expr>)</condition><block type="pseudo" pos:start="1073:9" pos:end="1073:36"><block_content pos:start="1073:9" pos:end="1073:36">

        <expr_stmt pos:start="1073:9" pos:end="1073:36"><expr pos:start="1073:9" pos:end="1073:35"><call pos:start="1073:9" pos:end="1073:35"><name pos:start="1073:9" pos:end="1073:28">ff_pred_weight_table</name><argument_list pos:start="1073:29" pos:end="1073:35">(<argument pos:start="1073:30" pos:end="1073:30"><expr pos:start="1073:30" pos:end="1073:30"><name pos:start="1073:30" pos:end="1073:30">h</name></expr></argument>, <argument pos:start="1073:33" pos:end="1073:34"><expr pos:start="1073:33" pos:end="1073:34"><name pos:start="1073:33" pos:end="1073:34">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="1075:5" pos:end="1081:5">else if <condition pos:start="1075:13" pos:end="1077:53">(<expr pos:start="1075:14" pos:end="1077:52"><name pos:start="1075:14" pos:end="1075:39"><name pos:start="1075:14" pos:end="1075:14">h</name><operator pos:start="1075:15" pos:end="1075:16">-&gt;</operator><name pos:start="1075:17" pos:end="1075:19">pps</name><operator pos:start="1075:20" pos:end="1075:20">.</operator><name pos:start="1075:21" pos:end="1075:39">weighted_bipred_idc</name></name> <operator pos:start="1075:41" pos:end="1075:42">==</operator> <literal type="number" pos:start="1075:44" pos:end="1075:44">2</literal> <operator pos:start="1075:46" pos:end="1075:47">&amp;&amp;</operator>

             <name pos:start="1077:14" pos:end="1077:31"><name pos:start="1077:14" pos:end="1077:15">sl</name><operator pos:start="1077:16" pos:end="1077:17">-&gt;</operator><name pos:start="1077:18" pos:end="1077:31">slice_type_nos</name></name> <operator pos:start="1077:33" pos:end="1077:34">==</operator> <name pos:start="1077:36" pos:end="1077:52">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1077:55" pos:end="1081:5">{<block_content pos:start="1079:9" pos:end="1079:41">

        <expr_stmt pos:start="1079:9" pos:end="1079:41"><expr pos:start="1079:9" pos:end="1079:40"><call pos:start="1079:9" pos:end="1079:40"><name pos:start="1079:9" pos:end="1079:29">implicit_weight_table</name><argument_list pos:start="1079:30" pos:end="1079:40">(<argument pos:start="1079:31" pos:end="1079:31"><expr pos:start="1079:31" pos:end="1079:31"><name pos:start="1079:31" pos:end="1079:31">h</name></expr></argument>, <argument pos:start="1079:34" pos:end="1079:35"><expr pos:start="1079:34" pos:end="1079:35"><name pos:start="1079:34" pos:end="1079:35">sl</name></expr></argument>, <argument pos:start="1079:38" pos:end="1079:39"><expr pos:start="1079:38" pos:end="1079:39"><operator pos:start="1079:38" pos:end="1079:38">-</operator><literal type="number" pos:start="1079:39" pos:end="1079:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="1081:7" pos:end="1093:5">else <block pos:start="1081:12" pos:end="1093:5">{<block_content pos:start="1083:9" pos:end="1091:9">

        <expr_stmt pos:start="1083:9" pos:end="1083:27"><expr pos:start="1083:9" pos:end="1083:26"><name pos:start="1083:9" pos:end="1083:22"><name pos:start="1083:9" pos:end="1083:10">sl</name><operator pos:start="1083:11" pos:end="1083:12">-&gt;</operator><name pos:start="1083:13" pos:end="1083:22">use_weight</name></name> <operator pos:start="1083:24" pos:end="1083:24">=</operator> <literal type="number" pos:start="1083:26" pos:end="1083:26">0</literal></expr>;</expr_stmt>

        <for pos:start="1085:9" pos:end="1091:9">for <control pos:start="1085:13" pos:end="1085:31">(<init pos:start="1085:14" pos:end="1085:19"><expr pos:start="1085:14" pos:end="1085:18"><name pos:start="1085:14" pos:end="1085:14">i</name> <operator pos:start="1085:16" pos:end="1085:16">=</operator> <literal type="number" pos:start="1085:18" pos:end="1085:18">0</literal></expr>;</init> <condition pos:start="1085:21" pos:end="1085:26"><expr pos:start="1085:21" pos:end="1085:25"><name pos:start="1085:21" pos:end="1085:21">i</name> <operator pos:start="1085:23" pos:end="1085:23">&lt;</operator> <literal type="number" pos:start="1085:25" pos:end="1085:25">2</literal></expr>;</condition> <incr pos:start="1085:28" pos:end="1085:30"><expr pos:start="1085:28" pos:end="1085:30"><name pos:start="1085:28" pos:end="1085:28">i</name><operator pos:start="1085:29" pos:end="1085:30">++</operator></expr></incr>)</control> <block pos:start="1085:33" pos:end="1091:9">{<block_content pos:start="1087:13" pos:end="1089:42">

            <expr_stmt pos:start="1087:13" pos:end="1087:42"><expr pos:start="1087:13" pos:end="1087:41"><name pos:start="1087:13" pos:end="1087:35"><name pos:start="1087:13" pos:end="1087:14">sl</name><operator pos:start="1087:15" pos:end="1087:16">-&gt;</operator><name pos:start="1087:17" pos:end="1087:32">luma_weight_flag</name><index pos:start="1087:33" pos:end="1087:35">[<expr pos:start="1087:34" pos:end="1087:34"><name pos:start="1087:34" pos:end="1087:34">i</name></expr>]</index></name>   <operator pos:start="1087:39" pos:end="1087:39">=</operator> <literal type="number" pos:start="1087:41" pos:end="1087:41">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1089:13" pos:end="1089:42"><expr pos:start="1089:13" pos:end="1089:41"><name pos:start="1089:13" pos:end="1089:37"><name pos:start="1089:13" pos:end="1089:14">sl</name><operator pos:start="1089:15" pos:end="1089:16">-&gt;</operator><name pos:start="1089:17" pos:end="1089:34">chroma_weight_flag</name><index pos:start="1089:35" pos:end="1089:37">[<expr pos:start="1089:36" pos:end="1089:36"><name pos:start="1089:36" pos:end="1089:36">i</name></expr>]</index></name> <operator pos:start="1089:39" pos:end="1089:39">=</operator> <literal type="number" pos:start="1089:41" pos:end="1089:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="1097:5" pos:end="1097:74">// If frame-mt is enabled, only update mmco tables for the first slice</comment>

    <comment type="line" pos:start="1099:5" pos:end="1099:74">// in a field. Subsequent slices can temporarily clobber h-&gt;mmco_index</comment>

    <comment type="line" pos:start="1101:5" pos:end="1101:72">// or h-&gt;mmco, which will cause ref list mix-ups and decoding errors</comment>

    <comment type="line" pos:start="1103:5" pos:end="1103:75">// further down the line. This may break decoding if the first slice is</comment>

    <comment type="line" pos:start="1105:5" pos:end="1105:60">// corrupt, thus we only do this if frame-mt is enabled.</comment>

    <if_stmt pos:start="1107:5" pos:end="1119:5"><if pos:start="1107:5" pos:end="1119:5">if <condition pos:start="1107:8" pos:end="1107:23">(<expr pos:start="1107:9" pos:end="1107:22"><name pos:start="1107:9" pos:end="1107:22"><name pos:start="1107:9" pos:end="1107:9">h</name><operator pos:start="1107:10" pos:end="1107:11">-&gt;</operator><name pos:start="1107:12" pos:end="1107:22">nal_ref_idc</name></name></expr>)</condition> <block pos:start="1107:25" pos:end="1119:5">{<block_content pos:start="1109:9" pos:end="1117:39">

        <expr_stmt pos:start="1109:9" pos:end="1113:68"><expr pos:start="1109:9" pos:end="1113:67"><name pos:start="1109:9" pos:end="1109:11">ret</name> <operator pos:start="1109:13" pos:end="1109:13">=</operator> <call pos:start="1109:15" pos:end="1113:67"><name pos:start="1109:15" pos:end="1109:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="1109:45" pos:end="1113:67">(<argument pos:start="1109:46" pos:end="1109:46"><expr pos:start="1109:46" pos:end="1109:46"><name pos:start="1109:46" pos:end="1109:46">h</name></expr></argument>, <argument pos:start="1109:49" pos:end="1109:55"><expr pos:start="1109:49" pos:end="1109:55"><operator pos:start="1109:49" pos:end="1109:49">&amp;</operator><name pos:start="1109:50" pos:end="1109:55"><name pos:start="1109:50" pos:end="1109:51">sl</name><operator pos:start="1109:52" pos:end="1109:53">-&gt;</operator><name pos:start="1109:54" pos:end="1109:55">gb</name></name></expr></argument>,

                                             <argument pos:start="1111:46" pos:end="1113:66"><expr pos:start="1111:46" pos:end="1113:66"><operator pos:start="1111:46" pos:end="1111:46">!</operator><operator pos:start="1111:47" pos:end="1111:47">(</operator><name pos:start="1111:48" pos:end="1111:75"><name pos:start="1111:48" pos:end="1111:48">h</name><operator pos:start="1111:49" pos:end="1111:50">-&gt;</operator><name pos:start="1111:51" pos:end="1111:55">avctx</name><operator pos:start="1111:56" pos:end="1111:57">-&gt;</operator><name pos:start="1111:58" pos:end="1111:75">active_thread_type</name></name> <operator pos:start="1111:77" pos:end="1111:77">&amp;</operator> <name pos:start="1111:79" pos:end="1111:93">FF_THREAD_FRAME</name><operator pos:start="1111:94" pos:end="1111:94">)</operator> <operator pos:start="1111:96" pos:end="1111:97">||</operator>

                                             <name pos:start="1113:46" pos:end="1113:61"><name pos:start="1113:46" pos:end="1113:46">h</name><operator pos:start="1113:47" pos:end="1113:48">-&gt;</operator><name pos:start="1113:49" pos:end="1113:61">current_slice</name></name> <operator pos:start="1113:63" pos:end="1113:64">==</operator> <literal type="number" pos:start="1113:66" pos:end="1113:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1115:9" pos:end="1117:39"><if pos:start="1115:9" pos:end="1117:39">if <condition pos:start="1115:12" pos:end="1115:67">(<expr pos:start="1115:13" pos:end="1115:66"><name pos:start="1115:13" pos:end="1115:15">ret</name> <operator pos:start="1115:17" pos:end="1115:17">&lt;</operator> <literal type="number" pos:start="1115:19" pos:end="1115:19">0</literal> <operator pos:start="1115:21" pos:end="1115:22">&amp;&amp;</operator> <operator pos:start="1115:24" pos:end="1115:24">(</operator><name pos:start="1115:25" pos:end="1115:49"><name pos:start="1115:25" pos:end="1115:25">h</name><operator pos:start="1115:26" pos:end="1115:27">-&gt;</operator><name pos:start="1115:28" pos:end="1115:32">avctx</name><operator pos:start="1115:33" pos:end="1115:34">-&gt;</operator><name pos:start="1115:35" pos:end="1115:49">err_recognition</name></name> <operator pos:start="1115:51" pos:end="1115:51">&amp;</operator> <name pos:start="1115:53" pos:end="1115:65">AV_EF_EXPLODE</name><operator pos:start="1115:66" pos:end="1115:66">)</operator></expr>)</condition><block type="pseudo" pos:start="1117:13" pos:end="1117:39"><block_content pos:start="1117:13" pos:end="1117:39">

            <return pos:start="1117:13" pos:end="1117:39">return <expr pos:start="1117:20" pos:end="1117:38"><name pos:start="1117:20" pos:end="1117:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1123:5" pos:end="1137:5"><if pos:start="1123:5" pos:end="1137:5">if <condition pos:start="1123:8" pos:end="1123:23">(<expr pos:start="1123:9" pos:end="1123:22"><call pos:start="1123:9" pos:end="1123:22"><name pos:start="1123:9" pos:end="1123:19">FRAME_MBAFF</name><argument_list pos:start="1123:20" pos:end="1123:22">(<argument pos:start="1123:21" pos:end="1123:21"><expr pos:start="1123:21" pos:end="1123:21"><name pos:start="1123:21" pos:end="1123:21">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1123:25" pos:end="1137:5">{<block_content pos:start="1125:9" pos:end="1135:9">

        <expr_stmt pos:start="1125:9" pos:end="1125:43"><expr pos:start="1125:9" pos:end="1125:42"><call pos:start="1125:9" pos:end="1125:42"><name pos:start="1125:9" pos:end="1125:35">ff_h264_fill_mbaff_ref_list</name><argument_list pos:start="1125:36" pos:end="1125:42">(<argument pos:start="1125:37" pos:end="1125:37"><expr pos:start="1125:37" pos:end="1125:37"><name pos:start="1125:37" pos:end="1125:37">h</name></expr></argument>, <argument pos:start="1125:40" pos:end="1125:41"><expr pos:start="1125:40" pos:end="1125:41"><name pos:start="1125:40" pos:end="1125:41">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1129:9" pos:end="1135:9"><if pos:start="1129:9" pos:end="1135:9">if <condition pos:start="1129:12" pos:end="1129:87">(<expr pos:start="1129:13" pos:end="1129:86"><name pos:start="1129:13" pos:end="1129:38"><name pos:start="1129:13" pos:end="1129:13">h</name><operator pos:start="1129:14" pos:end="1129:15">-&gt;</operator><name pos:start="1129:16" pos:end="1129:18">pps</name><operator pos:start="1129:19" pos:end="1129:19">.</operator><name pos:start="1129:20" pos:end="1129:38">weighted_bipred_idc</name></name> <operator pos:start="1129:40" pos:end="1129:41">==</operator> <literal type="number" pos:start="1129:43" pos:end="1129:43">2</literal> <operator pos:start="1129:45" pos:end="1129:46">&amp;&amp;</operator> <name pos:start="1129:48" pos:end="1129:65"><name pos:start="1129:48" pos:end="1129:49">sl</name><operator pos:start="1129:50" pos:end="1129:51">-&gt;</operator><name pos:start="1129:52" pos:end="1129:65">slice_type_nos</name></name> <operator pos:start="1129:67" pos:end="1129:68">==</operator> <name pos:start="1129:70" pos:end="1129:86">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1129:89" pos:end="1135:9">{<block_content pos:start="1131:13" pos:end="1133:44">

            <expr_stmt pos:start="1131:13" pos:end="1131:44"><expr pos:start="1131:13" pos:end="1131:43"><call pos:start="1131:13" pos:end="1131:43"><name pos:start="1131:13" pos:end="1131:33">implicit_weight_table</name><argument_list pos:start="1131:34" pos:end="1131:43">(<argument pos:start="1131:35" pos:end="1131:35"><expr pos:start="1131:35" pos:end="1131:35"><name pos:start="1131:35" pos:end="1131:35">h</name></expr></argument>, <argument pos:start="1131:38" pos:end="1131:39"><expr pos:start="1131:38" pos:end="1131:39"><name pos:start="1131:38" pos:end="1131:39">sl</name></expr></argument>, <argument pos:start="1131:42" pos:end="1131:42"><expr pos:start="1131:42" pos:end="1131:42"><literal type="number" pos:start="1131:42" pos:end="1131:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1133:13" pos:end="1133:44"><expr pos:start="1133:13" pos:end="1133:43"><call pos:start="1133:13" pos:end="1133:43"><name pos:start="1133:13" pos:end="1133:33">implicit_weight_table</name><argument_list pos:start="1133:34" pos:end="1133:43">(<argument pos:start="1133:35" pos:end="1133:35"><expr pos:start="1133:35" pos:end="1133:35"><name pos:start="1133:35" pos:end="1133:35">h</name></expr></argument>, <argument pos:start="1133:38" pos:end="1133:39"><expr pos:start="1133:38" pos:end="1133:39"><name pos:start="1133:38" pos:end="1133:39">sl</name></expr></argument>, <argument pos:start="1133:42" pos:end="1133:42"><expr pos:start="1133:42" pos:end="1133:42"><literal type="number" pos:start="1133:42" pos:end="1133:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1141:5" pos:end="1143:48"><if pos:start="1141:5" pos:end="1143:48">if <condition pos:start="1141:8" pos:end="1141:79">(<expr pos:start="1141:9" pos:end="1141:78"><name pos:start="1141:9" pos:end="1141:26"><name pos:start="1141:9" pos:end="1141:10">sl</name><operator pos:start="1141:11" pos:end="1141:12">-&gt;</operator><name pos:start="1141:13" pos:end="1141:26">slice_type_nos</name></name> <operator pos:start="1141:28" pos:end="1141:29">==</operator> <name pos:start="1141:31" pos:end="1141:47">AV_PICTURE_TYPE_B</name> <operator pos:start="1141:49" pos:end="1141:50">&amp;&amp;</operator> <operator pos:start="1141:52" pos:end="1141:52">!</operator><name pos:start="1141:53" pos:end="1141:78"><name pos:start="1141:53" pos:end="1141:54">sl</name><operator pos:start="1141:55" pos:end="1141:56">-&gt;</operator><name pos:start="1141:57" pos:end="1141:78">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="1143:9" pos:end="1143:48"><block_content pos:start="1143:9" pos:end="1143:48">

        <expr_stmt pos:start="1143:9" pos:end="1143:48"><expr pos:start="1143:9" pos:end="1143:47"><call pos:start="1143:9" pos:end="1143:47"><name pos:start="1143:9" pos:end="1143:40">ff_h264_direct_dist_scale_factor</name><argument_list pos:start="1143:41" pos:end="1143:47">(<argument pos:start="1143:42" pos:end="1143:42"><expr pos:start="1143:42" pos:end="1143:42"><name pos:start="1143:42" pos:end="1143:42">h</name></expr></argument>, <argument pos:start="1143:45" pos:end="1143:46"><expr pos:start="1143:45" pos:end="1143:46"><name pos:start="1143:45" pos:end="1143:46">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1145:5" pos:end="1145:40"><expr pos:start="1145:5" pos:end="1145:39"><call pos:start="1145:5" pos:end="1145:39"><name pos:start="1145:5" pos:end="1145:32">ff_h264_direct_ref_list_init</name><argument_list pos:start="1145:33" pos:end="1145:39">(<argument pos:start="1145:34" pos:end="1145:34"><expr pos:start="1145:34" pos:end="1145:34"><name pos:start="1145:34" pos:end="1145:34">h</name></expr></argument>, <argument pos:start="1145:37" pos:end="1145:38"><expr pos:start="1145:37" pos:end="1145:38"><name pos:start="1145:37" pos:end="1145:38">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1149:5" pos:end="1163:5"><if pos:start="1149:5" pos:end="1163:5">if <condition pos:start="1149:8" pos:end="1149:64">(<expr pos:start="1149:9" pos:end="1149:63"><name pos:start="1149:9" pos:end="1149:26"><name pos:start="1149:9" pos:end="1149:10">sl</name><operator pos:start="1149:11" pos:end="1149:12">-&gt;</operator><name pos:start="1149:13" pos:end="1149:26">slice_type_nos</name></name> <operator pos:start="1149:28" pos:end="1149:29">!=</operator> <name pos:start="1149:31" pos:end="1149:47">AV_PICTURE_TYPE_I</name> <operator pos:start="1149:49" pos:end="1149:50">&amp;&amp;</operator> <name pos:start="1149:52" pos:end="1149:63"><name pos:start="1149:52" pos:end="1149:52">h</name><operator pos:start="1149:53" pos:end="1149:54">-&gt;</operator><name pos:start="1149:55" pos:end="1149:57">pps</name><operator pos:start="1149:58" pos:end="1149:58">.</operator><name pos:start="1149:59" pos:end="1149:63">cabac</name></name></expr>)</condition> <block pos:start="1149:66" pos:end="1163:5">{<block_content pos:start="1151:9" pos:end="1161:33">

        <expr_stmt pos:start="1151:9" pos:end="1151:40"><expr pos:start="1151:9" pos:end="1151:39"><name pos:start="1151:9" pos:end="1151:11">tmp</name> <operator pos:start="1151:13" pos:end="1151:13">=</operator> <call pos:start="1151:15" pos:end="1151:39"><name pos:start="1151:15" pos:end="1151:30">get_ue_golomb_31</name><argument_list pos:start="1151:31" pos:end="1151:39">(<argument pos:start="1151:32" pos:end="1151:38"><expr pos:start="1151:32" pos:end="1151:38"><operator pos:start="1151:32" pos:end="1151:32">&amp;</operator><name pos:start="1151:33" pos:end="1151:38"><name pos:start="1151:33" pos:end="1151:34">sl</name><operator pos:start="1151:35" pos:end="1151:36">-&gt;</operator><name pos:start="1151:37" pos:end="1151:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1153:9" pos:end="1159:9"><if pos:start="1153:9" pos:end="1159:9">if <condition pos:start="1153:12" pos:end="1153:20">(<expr pos:start="1153:13" pos:end="1153:19"><name pos:start="1153:13" pos:end="1153:15">tmp</name> <operator pos:start="1153:17" pos:end="1153:17">&gt;</operator> <literal type="number" pos:start="1153:19" pos:end="1153:19">2</literal></expr>)</condition> <block pos:start="1153:22" pos:end="1159:9">{<block_content pos:start="1155:13" pos:end="1157:39">

            <expr_stmt pos:start="1155:13" pos:end="1155:80"><expr pos:start="1155:13" pos:end="1155:79"><call pos:start="1155:13" pos:end="1155:79"><name pos:start="1155:13" pos:end="1155:18">av_log</name><argument_list pos:start="1155:19" pos:end="1155:79">(<argument pos:start="1155:20" pos:end="1155:27"><expr pos:start="1155:20" pos:end="1155:27"><name pos:start="1155:20" pos:end="1155:27"><name pos:start="1155:20" pos:end="1155:20">h</name><operator pos:start="1155:21" pos:end="1155:22">-&gt;</operator><name pos:start="1155:23" pos:end="1155:27">avctx</name></name></expr></argument>, <argument pos:start="1155:30" pos:end="1155:41"><expr pos:start="1155:30" pos:end="1155:41"><name pos:start="1155:30" pos:end="1155:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1155:44" pos:end="1155:73"><expr pos:start="1155:44" pos:end="1155:73"><literal type="string" pos:start="1155:44" pos:end="1155:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="1155:76" pos:end="1155:78"><expr pos:start="1155:76" pos:end="1155:78"><name pos:start="1155:76" pos:end="1155:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1157:13" pos:end="1157:39">return <expr pos:start="1157:20" pos:end="1157:38"><name pos:start="1157:20" pos:end="1157:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1161:9" pos:end="1161:33"><expr pos:start="1161:9" pos:end="1161:32"><name pos:start="1161:9" pos:end="1161:26"><name pos:start="1161:9" pos:end="1161:10">sl</name><operator pos:start="1161:11" pos:end="1161:12">-&gt;</operator><name pos:start="1161:13" pos:end="1161:26">cabac_init_idc</name></name> <operator pos:start="1161:28" pos:end="1161:28">=</operator> <name pos:start="1161:30" pos:end="1161:32">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1167:5" pos:end="1167:29"><expr pos:start="1167:5" pos:end="1167:28"><name pos:start="1167:5" pos:end="1167:24"><name pos:start="1167:5" pos:end="1167:6">sl</name><operator pos:start="1167:7" pos:end="1167:8">-&gt;</operator><name pos:start="1167:9" pos:end="1167:24">last_qscale_diff</name></name> <operator pos:start="1167:26" pos:end="1167:26">=</operator> <literal type="number" pos:start="1167:28" pos:end="1167:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1169:5" pos:end="1169:50"><expr pos:start="1169:5" pos:end="1169:49"><name pos:start="1169:5" pos:end="1169:7">tmp</name> <operator pos:start="1169:9" pos:end="1169:9">=</operator> <name pos:start="1169:11" pos:end="1169:24"><name pos:start="1169:11" pos:end="1169:11">h</name><operator pos:start="1169:12" pos:end="1169:13">-&gt;</operator><name pos:start="1169:14" pos:end="1169:16">pps</name><operator pos:start="1169:17" pos:end="1169:17">.</operator><name pos:start="1169:18" pos:end="1169:24">init_qp</name></name> <operator pos:start="1169:26" pos:end="1169:26">+</operator> <call pos:start="1169:28" pos:end="1169:49"><name pos:start="1169:28" pos:end="1169:40">get_se_golomb</name><argument_list pos:start="1169:41" pos:end="1169:49">(<argument pos:start="1169:42" pos:end="1169:48"><expr pos:start="1169:42" pos:end="1169:48"><operator pos:start="1169:42" pos:end="1169:42">&amp;</operator><name pos:start="1169:43" pos:end="1169:48"><name pos:start="1169:43" pos:end="1169:44">sl</name><operator pos:start="1169:45" pos:end="1169:46">-&gt;</operator><name pos:start="1169:47" pos:end="1169:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1171:5" pos:end="1177:5"><if pos:start="1171:5" pos:end="1177:5">if <condition pos:start="1171:8" pos:end="1171:51">(<expr pos:start="1171:9" pos:end="1171:50"><name pos:start="1171:9" pos:end="1171:11">tmp</name> <operator pos:start="1171:13" pos:end="1171:13">&gt;</operator> <literal type="number" pos:start="1171:15" pos:end="1171:18">51</literal> <operator pos:start="1171:18" pos:end="1171:18">+</operator> <literal type="number" pos:start="1171:20" pos:end="1171:20">6</literal> <operator pos:start="1171:22" pos:end="1171:22">*</operator> <operator pos:start="1171:24" pos:end="1171:24">(</operator><name pos:start="1171:25" pos:end="1171:45"><name pos:start="1171:25" pos:end="1171:25">h</name><operator pos:start="1171:26" pos:end="1171:27">-&gt;</operator><name pos:start="1171:28" pos:end="1171:30">sps</name><operator pos:start="1171:31" pos:end="1171:31">.</operator><name pos:start="1171:32" pos:end="1171:45">bit_depth_luma</name></name> <operator pos:start="1171:47" pos:end="1171:47">-</operator> <literal type="number" pos:start="1171:49" pos:end="1171:49">8</literal><operator pos:start="1171:50" pos:end="1171:50">)</operator></expr>)</condition> <block pos:start="1171:53" pos:end="1177:5">{<block_content pos:start="1173:9" pos:end="1175:35">

        <expr_stmt pos:start="1173:9" pos:end="1173:68"><expr pos:start="1173:9" pos:end="1173:67"><call pos:start="1173:9" pos:end="1173:67"><name pos:start="1173:9" pos:end="1173:14">av_log</name><argument_list pos:start="1173:15" pos:end="1173:67">(<argument pos:start="1173:16" pos:end="1173:23"><expr pos:start="1173:16" pos:end="1173:23"><name pos:start="1173:16" pos:end="1173:23"><name pos:start="1173:16" pos:end="1173:16">h</name><operator pos:start="1173:17" pos:end="1173:18">-&gt;</operator><name pos:start="1173:19" pos:end="1173:23">avctx</name></name></expr></argument>, <argument pos:start="1173:26" pos:end="1173:37"><expr pos:start="1173:26" pos:end="1173:37"><name pos:start="1173:26" pos:end="1173:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1173:40" pos:end="1173:61"><expr pos:start="1173:40" pos:end="1173:61"><literal type="string" pos:start="1173:40" pos:end="1173:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="1173:64" pos:end="1173:66"><expr pos:start="1173:64" pos:end="1173:66"><name pos:start="1173:64" pos:end="1173:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1175:9" pos:end="1175:35">return <expr pos:start="1175:16" pos:end="1175:34"><name pos:start="1175:16" pos:end="1175:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1179:5" pos:end="1179:27"><expr pos:start="1179:5" pos:end="1179:26"><name pos:start="1179:5" pos:end="1179:14"><name pos:start="1179:5" pos:end="1179:6">sl</name><operator pos:start="1179:7" pos:end="1179:8">-&gt;</operator><name pos:start="1179:9" pos:end="1179:14">qscale</name></name>       <operator pos:start="1179:22" pos:end="1179:22">=</operator> <name pos:start="1179:24" pos:end="1179:26">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1181:5" pos:end="1181:55"><expr pos:start="1181:5" pos:end="1181:54"><name pos:start="1181:5" pos:end="1181:20"><name pos:start="1181:5" pos:end="1181:6">sl</name><operator pos:start="1181:7" pos:end="1181:8">-&gt;</operator><name pos:start="1181:9" pos:end="1181:17">chroma_qp</name><index pos:start="1181:18" pos:end="1181:20">[<expr pos:start="1181:19" pos:end="1181:19"><literal type="number" pos:start="1181:19" pos:end="1181:19">0</literal></expr>]</index></name> <operator pos:start="1181:22" pos:end="1181:22">=</operator> <call pos:start="1181:24" pos:end="1181:54"><name pos:start="1181:24" pos:end="1181:36">get_chroma_qp</name><argument_list pos:start="1181:37" pos:end="1181:54">(<argument pos:start="1181:38" pos:end="1181:38"><expr pos:start="1181:38" pos:end="1181:38"><name pos:start="1181:38" pos:end="1181:38">h</name></expr></argument>, <argument pos:start="1181:41" pos:end="1181:41"><expr pos:start="1181:41" pos:end="1181:41"><literal type="number" pos:start="1181:41" pos:end="1181:41">0</literal></expr></argument>, <argument pos:start="1181:44" pos:end="1181:53"><expr pos:start="1181:44" pos:end="1181:53"><name pos:start="1181:44" pos:end="1181:53"><name pos:start="1181:44" pos:end="1181:45">sl</name><operator pos:start="1181:46" pos:end="1181:47">-&gt;</operator><name pos:start="1181:48" pos:end="1181:53">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1183:5" pos:end="1183:55"><expr pos:start="1183:5" pos:end="1183:54"><name pos:start="1183:5" pos:end="1183:20"><name pos:start="1183:5" pos:end="1183:6">sl</name><operator pos:start="1183:7" pos:end="1183:8">-&gt;</operator><name pos:start="1183:9" pos:end="1183:17">chroma_qp</name><index pos:start="1183:18" pos:end="1183:20">[<expr pos:start="1183:19" pos:end="1183:19"><literal type="number" pos:start="1183:19" pos:end="1183:19">1</literal></expr>]</index></name> <operator pos:start="1183:22" pos:end="1183:22">=</operator> <call pos:start="1183:24" pos:end="1183:54"><name pos:start="1183:24" pos:end="1183:36">get_chroma_qp</name><argument_list pos:start="1183:37" pos:end="1183:54">(<argument pos:start="1183:38" pos:end="1183:38"><expr pos:start="1183:38" pos:end="1183:38"><name pos:start="1183:38" pos:end="1183:38">h</name></expr></argument>, <argument pos:start="1183:41" pos:end="1183:41"><expr pos:start="1183:41" pos:end="1183:41"><literal type="number" pos:start="1183:41" pos:end="1183:41">1</literal></expr></argument>, <argument pos:start="1183:44" pos:end="1183:53"><expr pos:start="1183:44" pos:end="1183:53"><name pos:start="1183:44" pos:end="1183:53"><name pos:start="1183:44" pos:end="1183:45">sl</name><operator pos:start="1183:46" pos:end="1183:47">-&gt;</operator><name pos:start="1183:48" pos:end="1183:53">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="1185:5" pos:end="1185:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="1187:5" pos:end="1189:27"><if pos:start="1187:5" pos:end="1189:27">if <condition pos:start="1187:8" pos:end="1187:45">(<expr pos:start="1187:9" pos:end="1187:44"><name pos:start="1187:9" pos:end="1187:22"><name pos:start="1187:9" pos:end="1187:10">sl</name><operator pos:start="1187:11" pos:end="1187:12">-&gt;</operator><name pos:start="1187:13" pos:end="1187:22">slice_type</name></name> <operator pos:start="1187:24" pos:end="1187:25">==</operator> <name pos:start="1187:27" pos:end="1187:44">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="1189:9" pos:end="1189:27"><block_content pos:start="1189:9" pos:end="1189:27">

        <expr_stmt pos:start="1189:9" pos:end="1189:27"><expr pos:start="1189:9" pos:end="1189:26"><call pos:start="1189:9" pos:end="1189:26"><name pos:start="1189:9" pos:end="1189:17">get_bits1</name><argument_list pos:start="1189:18" pos:end="1189:26">(<argument pos:start="1189:19" pos:end="1189:25"><expr pos:start="1189:19" pos:end="1189:25"><operator pos:start="1189:19" pos:end="1189:19">&amp;</operator><name pos:start="1189:20" pos:end="1189:25"><name pos:start="1189:20" pos:end="1189:21">sl</name><operator pos:start="1189:22" pos:end="1189:23">-&gt;</operator><name pos:start="1189:24" pos:end="1189:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1189:29" pos:end="1189:52">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="1191:5" pos:end="1195:31"><if pos:start="1191:5" pos:end="1195:31">if <condition pos:start="1191:8" pos:end="1193:45">(<expr pos:start="1191:9" pos:end="1193:44"><name pos:start="1191:9" pos:end="1191:22"><name pos:start="1191:9" pos:end="1191:10">sl</name><operator pos:start="1191:11" pos:end="1191:12">-&gt;</operator><name pos:start="1191:13" pos:end="1191:22">slice_type</name></name> <operator pos:start="1191:24" pos:end="1191:25">==</operator> <name pos:start="1191:27" pos:end="1191:44">AV_PICTURE_TYPE_SP</name> <operator pos:start="1191:46" pos:end="1191:47">||</operator>

        <name pos:start="1193:9" pos:end="1193:22"><name pos:start="1193:9" pos:end="1193:10">sl</name><operator pos:start="1193:11" pos:end="1193:12">-&gt;</operator><name pos:start="1193:13" pos:end="1193:22">slice_type</name></name> <operator pos:start="1193:24" pos:end="1193:25">==</operator> <name pos:start="1193:27" pos:end="1193:44">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="1195:9" pos:end="1195:31"><block_content pos:start="1195:9" pos:end="1195:31">

        <expr_stmt pos:start="1195:9" pos:end="1195:31"><expr pos:start="1195:9" pos:end="1195:30"><call pos:start="1195:9" pos:end="1195:30"><name pos:start="1195:9" pos:end="1195:21">get_se_golomb</name><argument_list pos:start="1195:22" pos:end="1195:30">(<argument pos:start="1195:23" pos:end="1195:29"><expr pos:start="1195:23" pos:end="1195:29"><operator pos:start="1195:23" pos:end="1195:23">&amp;</operator><name pos:start="1195:24" pos:end="1195:29"><name pos:start="1195:24" pos:end="1195:25">sl</name><operator pos:start="1195:26" pos:end="1195:27">-&gt;</operator><name pos:start="1195:28" pos:end="1195:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1195:33" pos:end="1195:52">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="1199:5" pos:end="1199:34"><expr pos:start="1199:5" pos:end="1199:33"><name pos:start="1199:5" pos:end="1199:25"><name pos:start="1199:5" pos:end="1199:6">sl</name><operator pos:start="1199:7" pos:end="1199:8">-&gt;</operator><name pos:start="1199:9" pos:end="1199:25">deblocking_filter</name></name>     <operator pos:start="1199:31" pos:end="1199:31">=</operator> <literal type="number" pos:start="1199:33" pos:end="1199:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1201:5" pos:end="1201:34"><expr pos:start="1201:5" pos:end="1201:33"><name pos:start="1201:5" pos:end="1201:29"><name pos:start="1201:5" pos:end="1201:6">sl</name><operator pos:start="1201:7" pos:end="1201:8">-&gt;</operator><name pos:start="1201:9" pos:end="1201:29">slice_alpha_c0_offset</name></name> <operator pos:start="1201:31" pos:end="1201:31">=</operator> <literal type="number" pos:start="1201:33" pos:end="1201:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1203:5" pos:end="1203:34"><expr pos:start="1203:5" pos:end="1203:33"><name pos:start="1203:5" pos:end="1203:25"><name pos:start="1203:5" pos:end="1203:6">sl</name><operator pos:start="1203:7" pos:end="1203:8">-&gt;</operator><name pos:start="1203:9" pos:end="1203:25">slice_beta_offset</name></name>     <operator pos:start="1203:31" pos:end="1203:31">=</operator> <literal type="number" pos:start="1203:33" pos:end="1203:33">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="1205:5" pos:end="1253:5"><if pos:start="1205:5" pos:end="1253:5">if <condition pos:start="1205:8" pos:end="1205:52">(<expr pos:start="1205:9" pos:end="1205:51"><name pos:start="1205:9" pos:end="1205:51"><name pos:start="1205:9" pos:end="1205:9">h</name><operator pos:start="1205:10" pos:end="1205:11">-&gt;</operator><name pos:start="1205:12" pos:end="1205:14">pps</name><operator pos:start="1205:15" pos:end="1205:15">.</operator><name pos:start="1205:16" pos:end="1205:51">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="1205:54" pos:end="1253:5">{<block_content pos:start="1207:9" pos:end="1251:9">

        <expr_stmt pos:start="1207:9" pos:end="1207:40"><expr pos:start="1207:9" pos:end="1207:39"><name pos:start="1207:9" pos:end="1207:11">tmp</name> <operator pos:start="1207:13" pos:end="1207:13">=</operator> <call pos:start="1207:15" pos:end="1207:39"><name pos:start="1207:15" pos:end="1207:30">get_ue_golomb_31</name><argument_list pos:start="1207:31" pos:end="1207:39">(<argument pos:start="1207:32" pos:end="1207:38"><expr pos:start="1207:32" pos:end="1207:38"><operator pos:start="1207:32" pos:end="1207:32">&amp;</operator><name pos:start="1207:33" pos:end="1207:38"><name pos:start="1207:33" pos:end="1207:34">sl</name><operator pos:start="1207:35" pos:end="1207:36">-&gt;</operator><name pos:start="1207:37" pos:end="1207:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1209:9" pos:end="1217:9"><if pos:start="1209:9" pos:end="1217:9">if <condition pos:start="1209:12" pos:end="1209:20">(<expr pos:start="1209:13" pos:end="1209:19"><name pos:start="1209:13" pos:end="1209:15">tmp</name> <operator pos:start="1209:17" pos:end="1209:17">&gt;</operator> <literal type="number" pos:start="1209:19" pos:end="1209:19">2</literal></expr>)</condition> <block pos:start="1209:22" pos:end="1217:9">{<block_content pos:start="1211:13" pos:end="1215:39">

            <expr_stmt pos:start="1211:13" pos:end="1213:67"><expr pos:start="1211:13" pos:end="1213:66"><call pos:start="1211:13" pos:end="1213:66"><name pos:start="1211:13" pos:end="1211:18">av_log</name><argument_list pos:start="1211:19" pos:end="1213:66">(<argument pos:start="1211:20" pos:end="1211:27"><expr pos:start="1211:20" pos:end="1211:27"><name pos:start="1211:20" pos:end="1211:27"><name pos:start="1211:20" pos:end="1211:20">h</name><operator pos:start="1211:21" pos:end="1211:22">-&gt;</operator><name pos:start="1211:23" pos:end="1211:27">avctx</name></name></expr></argument>, <argument pos:start="1211:30" pos:end="1211:41"><expr pos:start="1211:30" pos:end="1211:41"><name pos:start="1211:30" pos:end="1211:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="1213:20" pos:end="1213:60"><expr pos:start="1213:20" pos:end="1213:60"><literal type="string" pos:start="1213:20" pos:end="1213:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="1213:63" pos:end="1213:65"><expr pos:start="1213:63" pos:end="1213:65"><name pos:start="1213:63" pos:end="1213:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1215:13" pos:end="1215:39">return <expr pos:start="1215:20" pos:end="1215:38"><name pos:start="1215:20" pos:end="1215:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1219:9" pos:end="1219:36"><expr pos:start="1219:9" pos:end="1219:35"><name pos:start="1219:9" pos:end="1219:29"><name pos:start="1219:9" pos:end="1219:10">sl</name><operator pos:start="1219:11" pos:end="1219:12">-&gt;</operator><name pos:start="1219:13" pos:end="1219:29">deblocking_filter</name></name> <operator pos:start="1219:31" pos:end="1219:31">=</operator> <name pos:start="1219:33" pos:end="1219:35">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="1221:9" pos:end="1223:39"><if pos:start="1221:9" pos:end="1223:39">if <condition pos:start="1221:12" pos:end="1221:38">(<expr pos:start="1221:13" pos:end="1221:37"><name pos:start="1221:13" pos:end="1221:33"><name pos:start="1221:13" pos:end="1221:14">sl</name><operator pos:start="1221:15" pos:end="1221:16">-&gt;</operator><name pos:start="1221:17" pos:end="1221:33">deblocking_filter</name></name> <operator pos:start="1221:35" pos:end="1221:35">&lt;</operator> <literal type="number" pos:start="1221:37" pos:end="1221:37">2</literal></expr>)</condition><block type="pseudo" pos:start="1223:13" pos:end="1223:39"><block_content pos:start="1223:13" pos:end="1223:39">

            <expr_stmt pos:start="1223:13" pos:end="1223:39"><expr pos:start="1223:13" pos:end="1223:38"><name pos:start="1223:13" pos:end="1223:33"><name pos:start="1223:13" pos:end="1223:14">sl</name><operator pos:start="1223:15" pos:end="1223:16">-&gt;</operator><name pos:start="1223:17" pos:end="1223:33">deblocking_filter</name></name> <operator pos:start="1223:35" pos:end="1223:36">^=</operator> <literal type="number" pos:start="1223:38" pos:end="1223:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="1223:42" pos:end="1223:49">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="1227:9" pos:end="1251:9"><if pos:start="1227:9" pos:end="1251:9">if <condition pos:start="1227:12" pos:end="1227:34">(<expr pos:start="1227:13" pos:end="1227:33"><name pos:start="1227:13" pos:end="1227:33"><name pos:start="1227:13" pos:end="1227:14">sl</name><operator pos:start="1227:15" pos:end="1227:16">-&gt;</operator><name pos:start="1227:17" pos:end="1227:33">deblocking_filter</name></name></expr>)</condition> <block pos:start="1227:36" pos:end="1251:9">{<block_content pos:start="1229:13" pos:end="1249:13">

            <expr_stmt pos:start="1229:13" pos:end="1229:67"><expr pos:start="1229:13" pos:end="1229:66"><name pos:start="1229:13" pos:end="1229:37"><name pos:start="1229:13" pos:end="1229:14">sl</name><operator pos:start="1229:15" pos:end="1229:16">-&gt;</operator><name pos:start="1229:17" pos:end="1229:37">slice_alpha_c0_offset</name></name> <operator pos:start="1229:39" pos:end="1229:39">=</operator> <call pos:start="1229:41" pos:end="1229:62"><name pos:start="1229:41" pos:end="1229:53">get_se_golomb</name><argument_list pos:start="1229:54" pos:end="1229:62">(<argument pos:start="1229:55" pos:end="1229:61"><expr pos:start="1229:55" pos:end="1229:61"><operator pos:start="1229:55" pos:end="1229:55">&amp;</operator><name pos:start="1229:56" pos:end="1229:61"><name pos:start="1229:56" pos:end="1229:57">sl</name><operator pos:start="1229:58" pos:end="1229:59">-&gt;</operator><name pos:start="1229:60" pos:end="1229:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1229:64" pos:end="1229:64">*</operator> <literal type="number" pos:start="1229:66" pos:end="1229:66">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1231:13" pos:end="1231:67"><expr pos:start="1231:13" pos:end="1231:66"><name pos:start="1231:13" pos:end="1231:33"><name pos:start="1231:13" pos:end="1231:14">sl</name><operator pos:start="1231:15" pos:end="1231:16">-&gt;</operator><name pos:start="1231:17" pos:end="1231:33">slice_beta_offset</name></name>     <operator pos:start="1231:39" pos:end="1231:39">=</operator> <call pos:start="1231:41" pos:end="1231:62"><name pos:start="1231:41" pos:end="1231:53">get_se_golomb</name><argument_list pos:start="1231:54" pos:end="1231:62">(<argument pos:start="1231:55" pos:end="1231:61"><expr pos:start="1231:55" pos:end="1231:61"><operator pos:start="1231:55" pos:end="1231:55">&amp;</operator><name pos:start="1231:56" pos:end="1231:61"><name pos:start="1231:56" pos:end="1231:57">sl</name><operator pos:start="1231:58" pos:end="1231:59">-&gt;</operator><name pos:start="1231:60" pos:end="1231:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1231:64" pos:end="1231:64">*</operator> <literal type="number" pos:start="1231:66" pos:end="1231:66">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1233:13" pos:end="1249:13"><if pos:start="1233:13" pos:end="1249:13">if <condition pos:start="1233:16" pos:end="1239:44">(<expr pos:start="1233:17" pos:end="1239:43"><name pos:start="1233:17" pos:end="1233:41"><name pos:start="1233:17" pos:end="1233:18">sl</name><operator pos:start="1233:19" pos:end="1233:20">-&gt;</operator><name pos:start="1233:21" pos:end="1233:41">slice_alpha_c0_offset</name></name> <operator pos:start="1233:43" pos:end="1233:43">&gt;</operator>  <literal type="number" pos:start="1233:46" pos:end="1233:47">12</literal> <operator pos:start="1233:49" pos:end="1233:50">||</operator>

                <name pos:start="1235:17" pos:end="1235:41"><name pos:start="1235:17" pos:end="1235:18">sl</name><operator pos:start="1235:19" pos:end="1235:20">-&gt;</operator><name pos:start="1235:21" pos:end="1235:41">slice_alpha_c0_offset</name></name> <operator pos:start="1235:43" pos:end="1235:43">&lt;</operator> <operator pos:start="1235:45" pos:end="1235:45">-</operator><literal type="number" pos:start="1235:46" pos:end="1235:47">12</literal> <operator pos:start="1235:49" pos:end="1235:50">||</operator>

                <name pos:start="1237:17" pos:end="1237:37"><name pos:start="1237:17" pos:end="1237:18">sl</name><operator pos:start="1237:19" pos:end="1237:20">-&gt;</operator><name pos:start="1237:21" pos:end="1237:37">slice_beta_offset</name></name> <operator pos:start="1237:39" pos:end="1237:39">&gt;</operator>  <literal type="number" pos:start="1237:42" pos:end="1237:43">12</literal>     <operator pos:start="1237:49" pos:end="1237:50">||</operator>

                <name pos:start="1239:17" pos:end="1239:37"><name pos:start="1239:17" pos:end="1239:18">sl</name><operator pos:start="1239:19" pos:end="1239:20">-&gt;</operator><name pos:start="1239:21" pos:end="1239:37">slice_beta_offset</name></name> <operator pos:start="1239:39" pos:end="1239:39">&lt;</operator> <operator pos:start="1239:41" pos:end="1239:41">-</operator><literal type="number" pos:start="1239:42" pos:end="1239:43">12</literal></expr>)</condition> <block pos:start="1239:46" pos:end="1249:13">{<block_content pos:start="1241:17" pos:end="1247:43">

                <expr_stmt pos:start="1241:17" pos:end="1245:73"><expr pos:start="1241:17" pos:end="1245:72"><call pos:start="1241:17" pos:end="1245:72"><name pos:start="1241:17" pos:end="1241:22">av_log</name><argument_list pos:start="1241:23" pos:end="1245:72">(<argument pos:start="1241:24" pos:end="1241:31"><expr pos:start="1241:24" pos:end="1241:31"><name pos:start="1241:24" pos:end="1241:31"><name pos:start="1241:24" pos:end="1241:24">h</name><operator pos:start="1241:25" pos:end="1241:26">-&gt;</operator><name pos:start="1241:27" pos:end="1241:31">avctx</name></name></expr></argument>, <argument pos:start="1241:34" pos:end="1241:45"><expr pos:start="1241:34" pos:end="1241:45"><name pos:start="1241:34" pos:end="1241:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1243:24" pos:end="1243:74"><expr pos:start="1243:24" pos:end="1243:74"><literal type="string" pos:start="1243:24" pos:end="1243:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="1245:24" pos:end="1245:48"><expr pos:start="1245:24" pos:end="1245:48"><name pos:start="1245:24" pos:end="1245:48"><name pos:start="1245:24" pos:end="1245:25">sl</name><operator pos:start="1245:26" pos:end="1245:27">-&gt;</operator><name pos:start="1245:28" pos:end="1245:48">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1245:51" pos:end="1245:71"><expr pos:start="1245:51" pos:end="1245:71"><name pos:start="1245:51" pos:end="1245:71"><name pos:start="1245:51" pos:end="1245:52">sl</name><operator pos:start="1245:53" pos:end="1245:54">-&gt;</operator><name pos:start="1245:55" pos:end="1245:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1247:17" pos:end="1247:43">return <expr pos:start="1247:24" pos:end="1247:42"><name pos:start="1247:24" pos:end="1247:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1257:5" pos:end="1275:34"><if pos:start="1257:5" pos:end="1275:34">if <condition pos:start="1257:8" pos:end="1273:30">(<expr pos:start="1257:9" pos:end="1273:29"><name pos:start="1257:9" pos:end="1257:34"><name pos:start="1257:9" pos:end="1257:9">h</name><operator pos:start="1257:10" pos:end="1257:11">-&gt;</operator><name pos:start="1257:12" pos:end="1257:16">avctx</name><operator pos:start="1257:17" pos:end="1257:18">-&gt;</operator><name pos:start="1257:19" pos:end="1257:34">skip_loop_filter</name></name> <operator pos:start="1257:36" pos:end="1257:37">&gt;=</operator> <name pos:start="1257:39" pos:end="1257:51">AVDISCARD_ALL</name> <operator pos:start="1257:53" pos:end="1257:54">||</operator>

        <operator pos:start="1259:9" pos:end="1259:9">(</operator><name pos:start="1259:10" pos:end="1259:35"><name pos:start="1259:10" pos:end="1259:10">h</name><operator pos:start="1259:11" pos:end="1259:12">-&gt;</operator><name pos:start="1259:13" pos:end="1259:17">avctx</name><operator pos:start="1259:18" pos:end="1259:19">-&gt;</operator><name pos:start="1259:20" pos:end="1259:35">skip_loop_filter</name></name> <operator pos:start="1259:37" pos:end="1259:38">&gt;=</operator> <name pos:start="1259:40" pos:end="1259:55">AVDISCARD_NONKEY</name> <operator pos:start="1259:57" pos:end="1259:58">&amp;&amp;</operator>

         <name pos:start="1261:10" pos:end="1261:25"><name pos:start="1261:10" pos:end="1261:10">h</name><operator pos:start="1261:11" pos:end="1261:12">-&gt;</operator><name pos:start="1261:13" pos:end="1261:25">nal_unit_type</name></name> <operator pos:start="1261:27" pos:end="1261:28">!=</operator> <name pos:start="1261:30" pos:end="1261:42">NAL_IDR_SLICE</name><operator pos:start="1261:43" pos:end="1261:43">)</operator> <operator pos:start="1261:45" pos:end="1261:46">||</operator>

        <operator pos:start="1263:9" pos:end="1263:9">(</operator><name pos:start="1263:10" pos:end="1263:35"><name pos:start="1263:10" pos:end="1263:10">h</name><operator pos:start="1263:11" pos:end="1263:12">-&gt;</operator><name pos:start="1263:13" pos:end="1263:17">avctx</name><operator pos:start="1263:18" pos:end="1263:19">-&gt;</operator><name pos:start="1263:20" pos:end="1263:35">skip_loop_filter</name></name> <operator pos:start="1263:37" pos:end="1263:38">&gt;=</operator> <name pos:start="1263:40" pos:end="1263:57">AVDISCARD_NONINTRA</name> <operator pos:start="1263:59" pos:end="1263:60">&amp;&amp;</operator>

         <name pos:start="1265:10" pos:end="1265:27"><name pos:start="1265:10" pos:end="1265:11">sl</name><operator pos:start="1265:12" pos:end="1265:13">-&gt;</operator><name pos:start="1265:14" pos:end="1265:27">slice_type_nos</name></name> <operator pos:start="1265:29" pos:end="1265:30">!=</operator> <name pos:start="1265:32" pos:end="1265:48">AV_PICTURE_TYPE_I</name><operator pos:start="1265:49" pos:end="1265:49">)</operator> <operator pos:start="1265:51" pos:end="1265:52">||</operator>

        <operator pos:start="1267:9" pos:end="1267:9">(</operator><name pos:start="1267:10" pos:end="1267:35"><name pos:start="1267:10" pos:end="1267:10">h</name><operator pos:start="1267:11" pos:end="1267:12">-&gt;</operator><name pos:start="1267:13" pos:end="1267:17">avctx</name><operator pos:start="1267:18" pos:end="1267:19">-&gt;</operator><name pos:start="1267:20" pos:end="1267:35">skip_loop_filter</name></name> <operator pos:start="1267:37" pos:end="1267:38">&gt;=</operator> <name pos:start="1267:40" pos:end="1267:54">AVDISCARD_BIDIR</name>  <operator pos:start="1267:57" pos:end="1267:58">&amp;&amp;</operator>

         <name pos:start="1269:10" pos:end="1269:27"><name pos:start="1269:10" pos:end="1269:11">sl</name><operator pos:start="1269:12" pos:end="1269:13">-&gt;</operator><name pos:start="1269:14" pos:end="1269:27">slice_type_nos</name></name> <operator pos:start="1269:29" pos:end="1269:30">==</operator> <name pos:start="1269:32" pos:end="1269:48">AV_PICTURE_TYPE_B</name><operator pos:start="1269:49" pos:end="1269:49">)</operator> <operator pos:start="1269:51" pos:end="1269:52">||</operator>

        <operator pos:start="1271:9" pos:end="1271:9">(</operator><name pos:start="1271:10" pos:end="1271:35"><name pos:start="1271:10" pos:end="1271:10">h</name><operator pos:start="1271:11" pos:end="1271:12">-&gt;</operator><name pos:start="1271:13" pos:end="1271:17">avctx</name><operator pos:start="1271:18" pos:end="1271:19">-&gt;</operator><name pos:start="1271:20" pos:end="1271:35">skip_loop_filter</name></name> <operator pos:start="1271:37" pos:end="1271:38">&gt;=</operator> <name pos:start="1271:40" pos:end="1271:55">AVDISCARD_NONREF</name> <operator pos:start="1271:57" pos:end="1271:58">&amp;&amp;</operator>

         <name pos:start="1273:10" pos:end="1273:23"><name pos:start="1273:10" pos:end="1273:10">h</name><operator pos:start="1273:11" pos:end="1273:12">-&gt;</operator><name pos:start="1273:13" pos:end="1273:23">nal_ref_idc</name></name> <operator pos:start="1273:25" pos:end="1273:26">==</operator> <literal type="number" pos:start="1273:28" pos:end="1273:28">0</literal><operator pos:start="1273:29" pos:end="1273:29">)</operator></expr>)</condition><block type="pseudo" pos:start="1275:9" pos:end="1275:34"><block_content pos:start="1275:9" pos:end="1275:34">

        <expr_stmt pos:start="1275:9" pos:end="1275:34"><expr pos:start="1275:9" pos:end="1275:33"><name pos:start="1275:9" pos:end="1275:29"><name pos:start="1275:9" pos:end="1275:10">sl</name><operator pos:start="1275:11" pos:end="1275:12">-&gt;</operator><name pos:start="1275:13" pos:end="1275:29">deblocking_filter</name></name> <operator pos:start="1275:31" pos:end="1275:31">=</operator> <literal type="number" pos:start="1275:33" pos:end="1275:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1279:5" pos:end="1321:5"><if pos:start="1279:5" pos:end="1321:5">if <condition pos:start="1279:8" pos:end="1279:58">(<expr pos:start="1279:9" pos:end="1279:57"><name pos:start="1279:9" pos:end="1279:29"><name pos:start="1279:9" pos:end="1279:10">sl</name><operator pos:start="1279:11" pos:end="1279:12">-&gt;</operator><name pos:start="1279:13" pos:end="1279:29">deblocking_filter</name></name> <operator pos:start="1279:31" pos:end="1279:32">==</operator> <literal type="number" pos:start="1279:34" pos:end="1279:34">1</literal> <operator pos:start="1279:36" pos:end="1279:37">&amp;&amp;</operator> <name pos:start="1279:39" pos:end="1279:53"><name pos:start="1279:39" pos:end="1279:39">h</name><operator pos:start="1279:40" pos:end="1279:41">-&gt;</operator><name pos:start="1279:42" pos:end="1279:53">max_contexts</name></name> <operator pos:start="1279:55" pos:end="1279:55">&gt;</operator> <literal type="number" pos:start="1279:57" pos:end="1279:57">1</literal></expr>)</condition> <block pos:start="1279:60" pos:end="1321:5">{<block_content pos:start="1281:9" pos:end="1319:9">

        <if_stmt pos:start="1281:9" pos:end="1319:9"><if pos:start="1281:9" pos:end="1289:9">if <condition pos:start="1281:12" pos:end="1281:48">(<expr pos:start="1281:13" pos:end="1281:47"><name pos:start="1281:13" pos:end="1281:28"><name pos:start="1281:13" pos:end="1281:13">h</name><operator pos:start="1281:14" pos:end="1281:15">-&gt;</operator><name pos:start="1281:16" pos:end="1281:20">avctx</name><operator pos:start="1281:21" pos:end="1281:22">-&gt;</operator><name pos:start="1281:23" pos:end="1281:28">flags2</name></name> <operator pos:start="1281:30" pos:end="1281:30">&amp;</operator> <name pos:start="1281:32" pos:end="1281:47">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="1281:50" pos:end="1289:9">{<block_content pos:start="1287:13" pos:end="1287:38">

            <comment type="block" pos:start="1283:13" pos:end="1285:57">/* Cheat slightly for speed:

             * Do not bother to deblock across slices. */</comment>

            <expr_stmt pos:start="1287:13" pos:end="1287:38"><expr pos:start="1287:13" pos:end="1287:37"><name pos:start="1287:13" pos:end="1287:33"><name pos:start="1287:13" pos:end="1287:14">sl</name><operator pos:start="1287:15" pos:end="1287:16">-&gt;</operator><name pos:start="1287:17" pos:end="1287:33">deblocking_filter</name></name> <operator pos:start="1287:35" pos:end="1287:35">=</operator> <literal type="number" pos:start="1287:37" pos:end="1287:37">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1289:11" pos:end="1319:9">else <block pos:start="1289:16" pos:end="1319:9">{<block_content pos:start="1291:13" pos:end="1317:13">

            <expr_stmt pos:start="1291:13" pos:end="1291:32"><expr pos:start="1291:13" pos:end="1291:31"><name pos:start="1291:13" pos:end="1291:27"><name pos:start="1291:13" pos:end="1291:13">h</name><operator pos:start="1291:14" pos:end="1291:15">-&gt;</operator><name pos:start="1291:16" pos:end="1291:27">max_contexts</name></name> <operator pos:start="1291:29" pos:end="1291:29">=</operator> <literal type="number" pos:start="1291:31" pos:end="1291:31">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1293:13" pos:end="1307:13"><if pos:start="1293:13" pos:end="1307:13">if <condition pos:start="1293:16" pos:end="1293:42">(<expr pos:start="1293:17" pos:end="1293:41"><operator pos:start="1293:17" pos:end="1293:17">!</operator><name pos:start="1293:18" pos:end="1293:41"><name pos:start="1293:18" pos:end="1293:18">h</name><operator pos:start="1293:19" pos:end="1293:20">-&gt;</operator><name pos:start="1293:21" pos:end="1293:41">single_decode_warning</name></name></expr>)</condition> <block pos:start="1293:44" pos:end="1307:13">{<block_content pos:start="1295:17" pos:end="1305:45">

                <expr_stmt pos:start="1295:17" pos:end="1303:77"><expr pos:start="1295:17" pos:end="1303:76"><call pos:start="1295:17" pos:end="1303:76"><name pos:start="1295:17" pos:end="1295:22">av_log</name><argument_list pos:start="1295:23" pos:end="1303:76">(<argument pos:start="1295:24" pos:end="1295:31"><expr pos:start="1295:24" pos:end="1295:31"><name pos:start="1295:24" pos:end="1295:31"><name pos:start="1295:24" pos:end="1295:24">h</name><operator pos:start="1295:25" pos:end="1295:26">-&gt;</operator><name pos:start="1295:27" pos:end="1295:31">avctx</name></name></expr></argument>, <argument pos:start="1295:34" pos:end="1295:44"><expr pos:start="1295:34" pos:end="1295:44"><name pos:start="1295:34" pos:end="1295:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="1297:24" pos:end="1303:75"><expr pos:start="1297:24" pos:end="1303:75"><literal type="string" pos:start="1297:24" pos:end="1297:132">"Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\n"</literal>

                       <literal type="string" pos:start="1299:24" pos:end="1299:170">"To parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\n"</literal>

                       <literal type="string" pos:start="1301:24" pos:end="1301:160">"Setting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding "</literal>

                       <literal type="string" pos:start="1303:24" pos:end="1303:75">"but will generate non-standard-compliant output.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1305:17" pos:end="1305:45"><expr pos:start="1305:17" pos:end="1305:44"><name pos:start="1305:17" pos:end="1305:40"><name pos:start="1305:17" pos:end="1305:17">h</name><operator pos:start="1305:18" pos:end="1305:19">-&gt;</operator><name pos:start="1305:20" pos:end="1305:40">single_decode_warning</name></name> <operator pos:start="1305:42" pos:end="1305:42">=</operator> <literal type="number" pos:start="1305:44" pos:end="1305:44">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1309:13" pos:end="1317:13"><if pos:start="1309:13" pos:end="1317:13">if <condition pos:start="1309:16" pos:end="1309:35">(<expr pos:start="1309:17" pos:end="1309:34"><name pos:start="1309:17" pos:end="1309:18">sl</name> <operator pos:start="1309:20" pos:end="1309:21">!=</operator> <name pos:start="1309:23" pos:end="1309:34"><name pos:start="1309:23" pos:end="1309:23">h</name><operator pos:start="1309:24" pos:end="1309:25">-&gt;</operator><name pos:start="1309:26" pos:end="1309:34">slice_ctx</name></name></expr>)</condition> <block pos:start="1309:37" pos:end="1317:13">{<block_content pos:start="1311:17" pos:end="1315:42">

                <expr_stmt pos:start="1311:17" pos:end="1313:62"><expr pos:start="1311:17" pos:end="1313:61"><call pos:start="1311:17" pos:end="1313:61"><name pos:start="1311:17" pos:end="1311:22">av_log</name><argument_list pos:start="1311:23" pos:end="1313:61">(<argument pos:start="1311:24" pos:end="1311:31"><expr pos:start="1311:24" pos:end="1311:31"><name pos:start="1311:24" pos:end="1311:31"><name pos:start="1311:24" pos:end="1311:24">h</name><operator pos:start="1311:25" pos:end="1311:26">-&gt;</operator><name pos:start="1311:27" pos:end="1311:31">avctx</name></name></expr></argument>, <argument pos:start="1311:34" pos:end="1311:45"><expr pos:start="1311:34" pos:end="1311:45"><name pos:start="1311:34" pos:end="1311:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1313:24" pos:end="1313:60"><expr pos:start="1313:24" pos:end="1313:60"><literal type="string" pos:start="1313:24" pos:end="1313:60">"Deblocking switched inside frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1315:17" pos:end="1315:42">return <expr pos:start="1315:24" pos:end="1315:41"><name pos:start="1315:24" pos:end="1315:41">SLICE_SINGLETHREAD</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1323:5" pos:end="1333:51"><expr pos:start="1323:5" pos:end="1333:50"><name pos:start="1323:5" pos:end="1323:17"><name pos:start="1323:5" pos:end="1323:6">sl</name><operator pos:start="1323:7" pos:end="1323:8">-&gt;</operator><name pos:start="1323:9" pos:end="1323:17">qp_thresh</name></name> <operator pos:start="1323:19" pos:end="1323:19">=</operator> <literal type="number" pos:start="1323:21" pos:end="1323:24">15</literal> <operator pos:start="1323:24" pos:end="1323:24">-</operator>

                   <call pos:start="1325:20" pos:end="1325:74"><name pos:start="1325:20" pos:end="1325:24">FFMIN</name><argument_list pos:start="1325:25" pos:end="1325:74">(<argument pos:start="1325:26" pos:end="1325:50"><expr pos:start="1325:26" pos:end="1325:50"><name pos:start="1325:26" pos:end="1325:50"><name pos:start="1325:26" pos:end="1325:27">sl</name><operator pos:start="1325:28" pos:end="1325:29">-&gt;</operator><name pos:start="1325:30" pos:end="1325:50">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1325:53" pos:end="1325:73"><expr pos:start="1325:53" pos:end="1325:73"><name pos:start="1325:53" pos:end="1325:73"><name pos:start="1325:53" pos:end="1325:54">sl</name><operator pos:start="1325:55" pos:end="1325:56">-&gt;</operator><name pos:start="1325:57" pos:end="1325:73">slice_beta_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="1325:76" pos:end="1325:76">-</operator>

                   <call pos:start="1327:20" pos:end="1331:59"><name pos:start="1327:20" pos:end="1327:25">FFMAX3</name><argument_list pos:start="1327:26" pos:end="1331:59">(<argument pos:start="1327:27" pos:end="1327:27"><expr pos:start="1327:27" pos:end="1327:27"><literal type="number" pos:start="1327:27" pos:end="1327:27">0</literal></expr></argument>,

                          <argument pos:start="1329:27" pos:end="1329:58"><expr pos:start="1329:27" pos:end="1329:58"><name pos:start="1329:27" pos:end="1329:58"><name pos:start="1329:27" pos:end="1329:27">h</name><operator pos:start="1329:28" pos:end="1329:29">-&gt;</operator><name pos:start="1329:30" pos:end="1329:32">pps</name><operator pos:start="1329:33" pos:end="1329:33">.</operator><name pos:start="1329:34" pos:end="1329:55">chroma_qp_index_offset</name><index pos:start="1329:56" pos:end="1329:58">[<expr pos:start="1329:57" pos:end="1329:57"><literal type="number" pos:start="1329:57" pos:end="1329:57">0</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="1331:27" pos:end="1331:58"><expr pos:start="1331:27" pos:end="1331:58"><name pos:start="1331:27" pos:end="1331:58"><name pos:start="1331:27" pos:end="1331:27">h</name><operator pos:start="1331:28" pos:end="1331:29">-&gt;</operator><name pos:start="1331:30" pos:end="1331:32">pps</name><operator pos:start="1331:33" pos:end="1331:33">.</operator><name pos:start="1331:34" pos:end="1331:55">chroma_qp_index_offset</name><index pos:start="1331:56" pos:end="1331:58">[<expr pos:start="1331:57" pos:end="1331:57"><literal type="number" pos:start="1331:57" pos:end="1331:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1331:61" pos:end="1331:61">+</operator>

                   <literal type="number" pos:start="1333:20" pos:end="1333:20">6</literal> <operator pos:start="1333:22" pos:end="1333:22">*</operator> <operator pos:start="1333:24" pos:end="1333:24">(</operator><name pos:start="1333:25" pos:end="1333:45"><name pos:start="1333:25" pos:end="1333:25">h</name><operator pos:start="1333:26" pos:end="1333:27">-&gt;</operator><name pos:start="1333:28" pos:end="1333:30">sps</name><operator pos:start="1333:31" pos:end="1333:31">.</operator><name pos:start="1333:32" pos:end="1333:45">bit_depth_luma</name></name> <operator pos:start="1333:47" pos:end="1333:47">-</operator> <literal type="number" pos:start="1333:49" pos:end="1333:49">8</literal><operator pos:start="1333:50" pos:end="1333:50">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="1337:5" pos:end="1337:36"><expr pos:start="1337:5" pos:end="1337:35"><name pos:start="1337:5" pos:end="1337:22"><name pos:start="1337:5" pos:end="1337:5">h</name><operator pos:start="1337:6" pos:end="1337:7">-&gt;</operator><name pos:start="1337:8" pos:end="1337:22">last_slice_type</name></name> <operator pos:start="1337:24" pos:end="1337:24">=</operator> <name pos:start="1337:26" pos:end="1337:35">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1339:5" pos:end="1339:72"><expr pos:start="1339:5" pos:end="1339:71"><call pos:start="1339:5" pos:end="1339:71"><name pos:start="1339:5" pos:end="1339:10">memcpy</name><argument_list pos:start="1339:11" pos:end="1339:71">(<argument pos:start="1339:12" pos:end="1339:28"><expr pos:start="1339:12" pos:end="1339:28"><name pos:start="1339:12" pos:end="1339:28"><name pos:start="1339:12" pos:end="1339:12">h</name><operator pos:start="1339:13" pos:end="1339:14">-&gt;</operator><name pos:start="1339:15" pos:end="1339:28">last_ref_count</name></name></expr></argument>, <argument pos:start="1339:31" pos:end="1339:43"><expr pos:start="1339:31" pos:end="1339:43"><name pos:start="1339:31" pos:end="1339:43"><name pos:start="1339:31" pos:end="1339:32">sl</name><operator pos:start="1339:33" pos:end="1339:34">-&gt;</operator><name pos:start="1339:35" pos:end="1339:43">ref_count</name></name></expr></argument>, <argument pos:start="1339:46" pos:end="1339:70"><expr pos:start="1339:46" pos:end="1339:70"><sizeof pos:start="1339:46" pos:end="1339:70">sizeof<argument_list pos:start="1339:52" pos:end="1339:70">(<argument pos:start="1339:53" pos:end="1339:69"><expr pos:start="1339:53" pos:end="1339:69"><name pos:start="1339:53" pos:end="1339:69"><name pos:start="1339:53" pos:end="1339:53">h</name><operator pos:start="1339:54" pos:end="1339:55">-&gt;</operator><name pos:start="1339:56" pos:end="1339:69">last_ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1341:5" pos:end="1341:45"><expr pos:start="1341:5" pos:end="1341:44"><name pos:start="1341:5" pos:end="1341:17"><name pos:start="1341:5" pos:end="1341:6">sl</name><operator pos:start="1341:7" pos:end="1341:8">-&gt;</operator><name pos:start="1341:9" pos:end="1341:17">slice_num</name></name>       <operator pos:start="1341:25" pos:end="1341:25">=</operator> <operator pos:start="1341:27" pos:end="1341:28">++</operator><name pos:start="1341:29" pos:end="1341:44"><name pos:start="1341:29" pos:end="1341:29">h</name><operator pos:start="1341:30" pos:end="1341:31">-&gt;</operator><name pos:start="1341:32" pos:end="1341:44">current_slice</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="1345:5" pos:end="1347:72"><if pos:start="1345:5" pos:end="1347:72">if <condition pos:start="1345:8" pos:end="1345:22">(<expr pos:start="1345:9" pos:end="1345:21"><name pos:start="1345:9" pos:end="1345:21"><name pos:start="1345:9" pos:end="1345:10">sl</name><operator pos:start="1345:11" pos:end="1345:12">-&gt;</operator><name pos:start="1345:13" pos:end="1345:21">slice_num</name></name></expr>)</condition><block type="pseudo" pos:start="1347:9" pos:end="1347:72"><block_content pos:start="1347:9" pos:end="1347:72">

        <expr_stmt pos:start="1347:9" pos:end="1347:72"><expr pos:start="1347:9" pos:end="1347:71"><name pos:start="1347:9" pos:end="1347:54"><name pos:start="1347:9" pos:end="1347:9">h</name><operator pos:start="1347:10" pos:end="1347:11">-&gt;</operator><name pos:start="1347:12" pos:end="1347:20">slice_row</name><index pos:start="1347:21" pos:end="1347:54">[<expr pos:start="1347:22" pos:end="1347:53"><operator pos:start="1347:22" pos:end="1347:22">(</operator><name pos:start="1347:23" pos:end="1347:35"><name pos:start="1347:23" pos:end="1347:24">sl</name><operator pos:start="1347:25" pos:end="1347:26">-&gt;</operator><name pos:start="1347:27" pos:end="1347:35">slice_num</name></name><operator pos:start="1347:36" pos:end="1347:36">-</operator><literal type="number" pos:start="1347:37" pos:end="1347:37">1</literal><operator pos:start="1347:38" pos:end="1347:38">)</operator><operator pos:start="1347:39" pos:end="1347:39">&amp;</operator><operator pos:start="1347:40" pos:end="1347:40">(</operator><name pos:start="1347:41" pos:end="1347:50">MAX_SLICES</name><operator pos:start="1347:51" pos:end="1347:51">-</operator><literal type="number" pos:start="1347:52" pos:end="1347:52">1</literal><operator pos:start="1347:53" pos:end="1347:53">)</operator></expr>]</index></name><operator pos:start="1347:55" pos:end="1347:55">=</operator> <name pos:start="1347:57" pos:end="1347:71"><name pos:start="1347:57" pos:end="1347:58">sl</name><operator pos:start="1347:59" pos:end="1347:60">-&gt;</operator><name pos:start="1347:61" pos:end="1347:71">resync_mb_y</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1349:5" pos:end="1359:5"><if pos:start="1349:5" pos:end="1359:5">if <condition pos:start="1349:8" pos:end="1353:39">(   <expr pos:start="1349:12" pos:end="1353:38"><name pos:start="1349:12" pos:end="1349:53"><name pos:start="1349:12" pos:end="1349:12">h</name><operator pos:start="1349:13" pos:end="1349:14">-&gt;</operator><name pos:start="1349:15" pos:end="1349:23">slice_row</name><index pos:start="1349:24" pos:end="1349:53">[<expr pos:start="1349:25" pos:end="1349:52"><name pos:start="1349:25" pos:end="1349:37"><name pos:start="1349:25" pos:end="1349:26">sl</name><operator pos:start="1349:27" pos:end="1349:28">-&gt;</operator><name pos:start="1349:29" pos:end="1349:37">slice_num</name></name><operator pos:start="1349:38" pos:end="1349:38">&amp;</operator><operator pos:start="1349:39" pos:end="1349:39">(</operator><name pos:start="1349:40" pos:end="1349:49">MAX_SLICES</name><operator pos:start="1349:50" pos:end="1349:50">-</operator><literal type="number" pos:start="1349:51" pos:end="1349:51">1</literal><operator pos:start="1349:52" pos:end="1349:52">)</operator></expr>]</index></name> <operator pos:start="1349:55" pos:end="1349:55">+</operator> <literal type="number" pos:start="1349:57" pos:end="1349:57">3</literal> <operator pos:start="1349:59" pos:end="1349:60">&gt;=</operator> <name pos:start="1349:62" pos:end="1349:76"><name pos:start="1349:62" pos:end="1349:63">sl</name><operator pos:start="1349:64" pos:end="1349:65">-&gt;</operator><name pos:start="1349:66" pos:end="1349:76">resync_mb_y</name></name>

        <operator pos:start="1351:9" pos:end="1351:10">&amp;&amp;</operator> <name pos:start="1351:12" pos:end="1351:53"><name pos:start="1351:12" pos:end="1351:12">h</name><operator pos:start="1351:13" pos:end="1351:14">-&gt;</operator><name pos:start="1351:15" pos:end="1351:23">slice_row</name><index pos:start="1351:24" pos:end="1351:53">[<expr pos:start="1351:25" pos:end="1351:52"><name pos:start="1351:25" pos:end="1351:37"><name pos:start="1351:25" pos:end="1351:26">sl</name><operator pos:start="1351:27" pos:end="1351:28">-&gt;</operator><name pos:start="1351:29" pos:end="1351:37">slice_num</name></name><operator pos:start="1351:38" pos:end="1351:38">&amp;</operator><operator pos:start="1351:39" pos:end="1351:39">(</operator><name pos:start="1351:40" pos:end="1351:49">MAX_SLICES</name><operator pos:start="1351:50" pos:end="1351:50">-</operator><literal type="number" pos:start="1351:51" pos:end="1351:51">1</literal><operator pos:start="1351:52" pos:end="1351:52">)</operator></expr>]</index></name> <operator pos:start="1351:55" pos:end="1351:56">&lt;=</operator> <name pos:start="1351:58" pos:end="1351:72"><name pos:start="1351:58" pos:end="1351:59">sl</name><operator pos:start="1351:60" pos:end="1351:61">-&gt;</operator><name pos:start="1351:62" pos:end="1351:72">resync_mb_y</name></name>

        <operator pos:start="1353:9" pos:end="1353:10">&amp;&amp;</operator> <name pos:start="1353:12" pos:end="1353:24"><name pos:start="1353:12" pos:end="1353:13">sl</name><operator pos:start="1353:14" pos:end="1353:15">-&gt;</operator><name pos:start="1353:16" pos:end="1353:24">slice_num</name></name> <operator pos:start="1353:26" pos:end="1353:27">&gt;=</operator> <name pos:start="1353:29" pos:end="1353:38">MAX_SLICES</name></expr>)</condition> <block pos:start="1353:41" pos:end="1359:5">{<block_content pos:start="1357:9" pos:end="1357:167">

        <comment type="line" pos:start="1355:9" pos:end="1355:119">//in case of ASO this check needs to be updated depending on how we decide to assign slice numbers in this case</comment>

        <expr_stmt pos:start="1357:9" pos:end="1357:167"><expr pos:start="1357:9" pos:end="1357:166"><call pos:start="1357:9" pos:end="1357:166"><name pos:start="1357:9" pos:end="1357:14">av_log</name><argument_list pos:start="1357:15" pos:end="1357:166">(<argument pos:start="1357:16" pos:end="1357:23"><expr pos:start="1357:16" pos:end="1357:23"><name pos:start="1357:16" pos:end="1357:23"><name pos:start="1357:16" pos:end="1357:16">h</name><operator pos:start="1357:17" pos:end="1357:18">-&gt;</operator><name pos:start="1357:19" pos:end="1357:23">avctx</name></name></expr></argument>, <argument pos:start="1357:26" pos:end="1357:39"><expr pos:start="1357:26" pos:end="1357:39"><name pos:start="1357:26" pos:end="1357:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="1357:42" pos:end="1357:138"><expr pos:start="1357:42" pos:end="1357:138"><literal type="string" pos:start="1357:42" pos:end="1357:138">"Possibly too many slices (%d &gt;= %d), increase MAX_SLICES and recompile if there are artifacts\n"</literal></expr></argument>, <argument pos:start="1357:141" pos:end="1357:153"><expr pos:start="1357:141" pos:end="1357:153"><name pos:start="1357:141" pos:end="1357:153"><name pos:start="1357:141" pos:end="1357:142">sl</name><operator pos:start="1357:143" pos:end="1357:144">-&gt;</operator><name pos:start="1357:145" pos:end="1357:153">slice_num</name></name></expr></argument>, <argument pos:start="1357:156" pos:end="1357:165"><expr pos:start="1357:156" pos:end="1357:165"><name pos:start="1357:156" pos:end="1357:165">MAX_SLICES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="1363:5" pos:end="1425:5">for <control pos:start="1363:9" pos:end="1363:27">(<init pos:start="1363:10" pos:end="1363:15"><expr pos:start="1363:10" pos:end="1363:14"><name pos:start="1363:10" pos:end="1363:10">j</name> <operator pos:start="1363:12" pos:end="1363:12">=</operator> <literal type="number" pos:start="1363:14" pos:end="1363:14">0</literal></expr>;</init> <condition pos:start="1363:17" pos:end="1363:22"><expr pos:start="1363:17" pos:end="1363:21"><name pos:start="1363:17" pos:end="1363:17">j</name> <operator pos:start="1363:19" pos:end="1363:19">&lt;</operator> <literal type="number" pos:start="1363:21" pos:end="1363:21">2</literal></expr>;</condition> <incr pos:start="1363:24" pos:end="1363:26"><expr pos:start="1363:24" pos:end="1363:26"><name pos:start="1363:24" pos:end="1363:24">j</name><operator pos:start="1363:25" pos:end="1363:26">++</operator></expr></incr>)</control> <block pos:start="1363:29" pos:end="1425:5">{<block_content pos:start="1365:9" pos:end="1423:64">

        <decl_stmt pos:start="1365:9" pos:end="1365:24"><decl pos:start="1365:9" pos:end="1365:23"><type pos:start="1365:9" pos:end="1365:11"><name pos:start="1365:9" pos:end="1365:11">int</name></type> <name pos:start="1365:13" pos:end="1365:23"><name pos:start="1365:13" pos:end="1365:19">id_list</name><index pos:start="1365:20" pos:end="1365:23">[<expr pos:start="1365:21" pos:end="1365:22"><literal type="number" pos:start="1365:21" pos:end="1365:22">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1367:9" pos:end="1367:72"><decl pos:start="1367:9" pos:end="1367:71"><type pos:start="1367:9" pos:end="1367:13"><name pos:start="1367:9" pos:end="1367:11">int</name> <modifier pos:start="1367:13" pos:end="1367:13">*</modifier></type><name pos:start="1367:14" pos:end="1367:20">ref2frm</name> <init pos:start="1367:22" pos:end="1367:71">= <expr pos:start="1367:24" pos:end="1367:71"><name pos:start="1367:24" pos:end="1367:71"><name pos:start="1367:24" pos:end="1367:25">sl</name><operator pos:start="1367:26" pos:end="1367:27">-&gt;</operator><name pos:start="1367:28" pos:end="1367:34">ref2frm</name><index pos:start="1367:35" pos:end="1367:68">[<expr pos:start="1367:36" pos:end="1367:67"><name pos:start="1367:36" pos:end="1367:48"><name pos:start="1367:36" pos:end="1367:37">sl</name><operator pos:start="1367:38" pos:end="1367:39">-&gt;</operator><name pos:start="1367:40" pos:end="1367:48">slice_num</name></name> <operator pos:start="1367:50" pos:end="1367:50">&amp;</operator> <operator pos:start="1367:52" pos:end="1367:52">(</operator><name pos:start="1367:53" pos:end="1367:62">MAX_SLICES</name> <operator pos:start="1367:64" pos:end="1367:64">-</operator> <literal type="number" pos:start="1367:66" pos:end="1367:66">1</literal><operator pos:start="1367:67" pos:end="1367:67">)</operator></expr>]</index><index pos:start="1367:69" pos:end="1367:71">[<expr pos:start="1367:70" pos:end="1367:70"><name pos:start="1367:70" pos:end="1367:70">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="1369:9" pos:end="1403:9">for <control pos:start="1369:13" pos:end="1369:32">(<init pos:start="1369:14" pos:end="1369:19"><expr pos:start="1369:14" pos:end="1369:18"><name pos:start="1369:14" pos:end="1369:14">i</name> <operator pos:start="1369:16" pos:end="1369:16">=</operator> <literal type="number" pos:start="1369:18" pos:end="1369:18">0</literal></expr>;</init> <condition pos:start="1369:21" pos:end="1369:27"><expr pos:start="1369:21" pos:end="1369:26"><name pos:start="1369:21" pos:end="1369:21">i</name> <operator pos:start="1369:23" pos:end="1369:23">&lt;</operator> <literal type="number" pos:start="1369:25" pos:end="1369:26">16</literal></expr>;</condition> <incr pos:start="1369:29" pos:end="1369:31"><expr pos:start="1369:29" pos:end="1369:31"><name pos:start="1369:29" pos:end="1369:29">i</name><operator pos:start="1369:30" pos:end="1369:31">++</operator></expr></incr>)</control> <block pos:start="1369:34" pos:end="1403:9">{<block_content pos:start="1371:13" pos:end="1401:13">

            <expr_stmt pos:start="1371:13" pos:end="1371:28"><expr pos:start="1371:13" pos:end="1371:27"><name pos:start="1371:13" pos:end="1371:22"><name pos:start="1371:13" pos:end="1371:19">id_list</name><index pos:start="1371:20" pos:end="1371:22">[<expr pos:start="1371:21" pos:end="1371:21"><name pos:start="1371:21" pos:end="1371:21">i</name></expr>]</index></name> <operator pos:start="1371:24" pos:end="1371:24">=</operator> <literal type="number" pos:start="1371:26" pos:end="1371:27">60</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1373:13" pos:end="1401:13"><if pos:start="1373:13" pos:end="1401:13">if <condition pos:start="1373:16" pos:end="1375:52">(<expr pos:start="1373:17" pos:end="1375:51"><name pos:start="1373:17" pos:end="1373:17">j</name> <operator pos:start="1373:19" pos:end="1373:19">&lt;</operator> <name pos:start="1373:21" pos:end="1373:34"><name pos:start="1373:21" pos:end="1373:22">sl</name><operator pos:start="1373:23" pos:end="1373:24">-&gt;</operator><name pos:start="1373:25" pos:end="1373:34">list_count</name></name> <operator pos:start="1373:36" pos:end="1373:37">&amp;&amp;</operator> <name pos:start="1373:39" pos:end="1373:39">i</name> <operator pos:start="1373:41" pos:end="1373:41">&lt;</operator> <name pos:start="1373:43" pos:end="1373:58"><name pos:start="1373:43" pos:end="1373:44">sl</name><operator pos:start="1373:45" pos:end="1373:46">-&gt;</operator><name pos:start="1373:47" pos:end="1373:55">ref_count</name><index pos:start="1373:56" pos:end="1373:58">[<expr pos:start="1373:57" pos:end="1373:57"><name pos:start="1373:57" pos:end="1373:57">j</name></expr>]</index></name> <operator pos:start="1373:60" pos:end="1373:61">&amp;&amp;</operator>

                <name pos:start="1375:17" pos:end="1375:34"><name pos:start="1375:17" pos:end="1375:18">sl</name><operator pos:start="1375:19" pos:end="1375:20">-&gt;</operator><name pos:start="1375:21" pos:end="1375:28">ref_list</name><index pos:start="1375:29" pos:end="1375:31">[<expr pos:start="1375:30" pos:end="1375:30"><name pos:start="1375:30" pos:end="1375:30">j</name></expr>]</index><index pos:start="1375:32" pos:end="1375:34">[<expr pos:start="1375:33" pos:end="1375:33"><name pos:start="1375:33" pos:end="1375:33">i</name></expr>]</index></name><operator pos:start="1375:35" pos:end="1375:35">.</operator><name pos:start="1375:36" pos:end="1375:51"><name pos:start="1375:36" pos:end="1375:41">parent</name><operator pos:start="1375:42" pos:end="1375:43">-&gt;</operator><name pos:start="1375:44" pos:end="1375:44">f</name><operator pos:start="1375:45" pos:end="1375:45">.</operator><name pos:start="1375:46" pos:end="1375:48">buf</name><index pos:start="1375:49" pos:end="1375:51">[<expr pos:start="1375:50" pos:end="1375:50"><literal type="number" pos:start="1375:50" pos:end="1375:50">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="1375:54" pos:end="1401:13">{<block_content pos:start="1377:17" pos:end="1399:21">

                <decl_stmt pos:start="1377:17" pos:end="1377:22"><decl pos:start="1377:17" pos:end="1377:21"><type pos:start="1377:17" pos:end="1377:19"><name pos:start="1377:17" pos:end="1377:19">int</name></type> <name pos:start="1377:21" pos:end="1377:21">k</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1379:17" pos:end="1379:76"><decl pos:start="1379:17" pos:end="1379:75"><type pos:start="1379:17" pos:end="1379:26"><name pos:start="1379:17" pos:end="1379:24">AVBuffer</name> <modifier pos:start="1379:26" pos:end="1379:26">*</modifier></type><name pos:start="1379:27" pos:end="1379:29">buf</name> <init pos:start="1379:31" pos:end="1379:75">= <expr pos:start="1379:33" pos:end="1379:75"><name pos:start="1379:33" pos:end="1379:50"><name pos:start="1379:33" pos:end="1379:34">sl</name><operator pos:start="1379:35" pos:end="1379:36">-&gt;</operator><name pos:start="1379:37" pos:end="1379:44">ref_list</name><index pos:start="1379:45" pos:end="1379:47">[<expr pos:start="1379:46" pos:end="1379:46"><name pos:start="1379:46" pos:end="1379:46">j</name></expr>]</index><index pos:start="1379:48" pos:end="1379:50">[<expr pos:start="1379:49" pos:end="1379:49"><name pos:start="1379:49" pos:end="1379:49">i</name></expr>]</index></name><operator pos:start="1379:51" pos:end="1379:51">.</operator><name pos:start="1379:52" pos:end="1379:67"><name pos:start="1379:52" pos:end="1379:57">parent</name><operator pos:start="1379:58" pos:end="1379:59">-&gt;</operator><name pos:start="1379:60" pos:end="1379:60">f</name><operator pos:start="1379:61" pos:end="1379:61">.</operator><name pos:start="1379:62" pos:end="1379:64">buf</name><index pos:start="1379:65" pos:end="1379:67">[<expr pos:start="1379:66" pos:end="1379:66"><literal type="number" pos:start="1379:66" pos:end="1379:66">0</literal></expr>]</index></name><operator pos:start="1379:68" pos:end="1379:69">-&gt;</operator><name pos:start="1379:70" pos:end="1379:75">buffer</name></expr></init></decl>;</decl_stmt>

                <for pos:start="1381:17" pos:end="1389:21">for <control pos:start="1381:21" pos:end="1381:56">(<init pos:start="1381:22" pos:end="1381:27"><expr pos:start="1381:22" pos:end="1381:26"><name pos:start="1381:22" pos:end="1381:22">k</name> <operator pos:start="1381:24" pos:end="1381:24">=</operator> <literal type="number" pos:start="1381:26" pos:end="1381:26">0</literal></expr>;</init> <condition pos:start="1381:29" pos:end="1381:51"><expr pos:start="1381:29" pos:end="1381:50"><name pos:start="1381:29" pos:end="1381:29">k</name> <operator pos:start="1381:31" pos:end="1381:31">&lt;</operator> <name pos:start="1381:33" pos:end="1381:50"><name pos:start="1381:33" pos:end="1381:33">h</name><operator pos:start="1381:34" pos:end="1381:35">-&gt;</operator><name pos:start="1381:36" pos:end="1381:50">short_ref_count</name></name></expr>;</condition> <incr pos:start="1381:53" pos:end="1381:55"><expr pos:start="1381:53" pos:end="1381:55"><name pos:start="1381:53" pos:end="1381:53">k</name><operator pos:start="1381:54" pos:end="1381:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1383:21" pos:end="1389:21"><block_content pos:start="1383:21" pos:end="1389:21">

                    <if_stmt pos:start="1383:21" pos:end="1389:21"><if pos:start="1383:21" pos:end="1389:21">if <condition pos:start="1383:24" pos:end="1383:65">(<expr pos:start="1383:25" pos:end="1383:64"><name pos:start="1383:25" pos:end="1383:39"><name pos:start="1383:25" pos:end="1383:25">h</name><operator pos:start="1383:26" pos:end="1383:27">-&gt;</operator><name pos:start="1383:28" pos:end="1383:36">short_ref</name><index pos:start="1383:37" pos:end="1383:39">[<expr pos:start="1383:38" pos:end="1383:38"><name pos:start="1383:38" pos:end="1383:38">k</name></expr>]</index></name><operator pos:start="1383:40" pos:end="1383:41">-&gt;</operator><name pos:start="1383:42" pos:end="1383:49"><name pos:start="1383:42" pos:end="1383:42">f</name><operator pos:start="1383:43" pos:end="1383:43">.</operator><name pos:start="1383:44" pos:end="1383:46">buf</name><index pos:start="1383:47" pos:end="1383:49">[<expr pos:start="1383:48" pos:end="1383:48"><literal type="number" pos:start="1383:48" pos:end="1383:48">0</literal></expr>]</index></name><operator pos:start="1383:50" pos:end="1383:51">-&gt;</operator><name pos:start="1383:52" pos:end="1383:57">buffer</name> <operator pos:start="1383:59" pos:end="1383:60">==</operator> <name pos:start="1383:62" pos:end="1383:64">buf</name></expr>)</condition> <block pos:start="1383:67" pos:end="1389:21">{<block_content pos:start="1385:25" pos:end="1387:30">

                        <expr_stmt pos:start="1385:25" pos:end="1385:39"><expr pos:start="1385:25" pos:end="1385:38"><name pos:start="1385:25" pos:end="1385:34"><name pos:start="1385:25" pos:end="1385:31">id_list</name><index pos:start="1385:32" pos:end="1385:34">[<expr pos:start="1385:33" pos:end="1385:33"><name pos:start="1385:33" pos:end="1385:33">i</name></expr>]</index></name> <operator pos:start="1385:36" pos:end="1385:36">=</operator> <name pos:start="1385:38" pos:end="1385:38">k</name></expr>;</expr_stmt>

                        <break pos:start="1387:25" pos:end="1387:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <for pos:start="1391:17" pos:end="1399:21">for <control pos:start="1391:21" pos:end="1391:55">(<init pos:start="1391:22" pos:end="1391:27"><expr pos:start="1391:22" pos:end="1391:26"><name pos:start="1391:22" pos:end="1391:22">k</name> <operator pos:start="1391:24" pos:end="1391:24">=</operator> <literal type="number" pos:start="1391:26" pos:end="1391:26">0</literal></expr>;</init> <condition pos:start="1391:29" pos:end="1391:50"><expr pos:start="1391:29" pos:end="1391:49"><name pos:start="1391:29" pos:end="1391:29">k</name> <operator pos:start="1391:31" pos:end="1391:31">&lt;</operator> <name pos:start="1391:33" pos:end="1391:49"><name pos:start="1391:33" pos:end="1391:33">h</name><operator pos:start="1391:34" pos:end="1391:35">-&gt;</operator><name pos:start="1391:36" pos:end="1391:49">long_ref_count</name></name></expr>;</condition> <incr pos:start="1391:52" pos:end="1391:54"><expr pos:start="1391:52" pos:end="1391:54"><name pos:start="1391:52" pos:end="1391:52">k</name><operator pos:start="1391:53" pos:end="1391:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1393:21" pos:end="1399:21"><block_content pos:start="1393:21" pos:end="1399:21">

                    <if_stmt pos:start="1393:21" pos:end="1399:21"><if pos:start="1393:21" pos:end="1399:21">if <condition pos:start="1393:24" pos:end="1393:82">(<expr pos:start="1393:25" pos:end="1393:81"><name pos:start="1393:25" pos:end="1393:38"><name pos:start="1393:25" pos:end="1393:25">h</name><operator pos:start="1393:26" pos:end="1393:27">-&gt;</operator><name pos:start="1393:28" pos:end="1393:35">long_ref</name><index pos:start="1393:36" pos:end="1393:38">[<expr pos:start="1393:37" pos:end="1393:37"><name pos:start="1393:37" pos:end="1393:37">k</name></expr>]</index></name> <operator pos:start="1393:40" pos:end="1393:41">&amp;&amp;</operator> <name pos:start="1393:43" pos:end="1393:56"><name pos:start="1393:43" pos:end="1393:43">h</name><operator pos:start="1393:44" pos:end="1393:45">-&gt;</operator><name pos:start="1393:46" pos:end="1393:53">long_ref</name><index pos:start="1393:54" pos:end="1393:56">[<expr pos:start="1393:55" pos:end="1393:55"><name pos:start="1393:55" pos:end="1393:55">k</name></expr>]</index></name><operator pos:start="1393:57" pos:end="1393:58">-&gt;</operator><name pos:start="1393:59" pos:end="1393:66"><name pos:start="1393:59" pos:end="1393:59">f</name><operator pos:start="1393:60" pos:end="1393:60">.</operator><name pos:start="1393:61" pos:end="1393:63">buf</name><index pos:start="1393:64" pos:end="1393:66">[<expr pos:start="1393:65" pos:end="1393:65"><literal type="number" pos:start="1393:65" pos:end="1393:65">0</literal></expr>]</index></name><operator pos:start="1393:67" pos:end="1393:68">-&gt;</operator><name pos:start="1393:69" pos:end="1393:74">buffer</name> <operator pos:start="1393:76" pos:end="1393:77">==</operator> <name pos:start="1393:79" pos:end="1393:81">buf</name></expr>)</condition> <block pos:start="1393:84" pos:end="1399:21">{<block_content pos:start="1395:25" pos:end="1397:30">

                        <expr_stmt pos:start="1395:25" pos:end="1395:60"><expr pos:start="1395:25" pos:end="1395:59"><name pos:start="1395:25" pos:end="1395:34"><name pos:start="1395:25" pos:end="1395:31">id_list</name><index pos:start="1395:32" pos:end="1395:34">[<expr pos:start="1395:33" pos:end="1395:33"><name pos:start="1395:33" pos:end="1395:33">i</name></expr>]</index></name> <operator pos:start="1395:36" pos:end="1395:36">=</operator> <name pos:start="1395:38" pos:end="1395:55"><name pos:start="1395:38" pos:end="1395:38">h</name><operator pos:start="1395:39" pos:end="1395:40">-&gt;</operator><name pos:start="1395:41" pos:end="1395:55">short_ref_count</name></name> <operator pos:start="1395:57" pos:end="1395:57">+</operator> <name pos:start="1395:59" pos:end="1395:59">k</name></expr>;</expr_stmt>

                        <break pos:start="1397:25" pos:end="1397:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1407:9" pos:end="1409:24"><expr pos:start="1407:9" pos:end="1409:23"><name pos:start="1407:9" pos:end="1407:18"><name pos:start="1407:9" pos:end="1407:15">ref2frm</name><index pos:start="1407:16" pos:end="1407:18">[<expr pos:start="1407:17" pos:end="1407:17"><literal type="number" pos:start="1407:17" pos:end="1407:17">0</literal></expr>]</index></name> <operator pos:start="1407:20" pos:end="1407:20">=</operator>

        <name pos:start="1409:9" pos:end="1409:18"><name pos:start="1409:9" pos:end="1409:15">ref2frm</name><index pos:start="1409:16" pos:end="1409:18">[<expr pos:start="1409:17" pos:end="1409:17"><literal type="number" pos:start="1409:17" pos:end="1409:17">1</literal></expr>]</index></name> <operator pos:start="1409:20" pos:end="1409:20">=</operator> <operator pos:start="1409:22" pos:end="1409:22">-</operator><literal type="number" pos:start="1409:23" pos:end="1409:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1411:9" pos:end="1413:81">for <control pos:start="1411:13" pos:end="1411:32">(<init pos:start="1411:14" pos:end="1411:19"><expr pos:start="1411:14" pos:end="1411:18"><name pos:start="1411:14" pos:end="1411:14">i</name> <operator pos:start="1411:16" pos:end="1411:16">=</operator> <literal type="number" pos:start="1411:18" pos:end="1411:18">0</literal></expr>;</init> <condition pos:start="1411:21" pos:end="1411:27"><expr pos:start="1411:21" pos:end="1411:26"><name pos:start="1411:21" pos:end="1411:21">i</name> <operator pos:start="1411:23" pos:end="1411:23">&lt;</operator> <literal type="number" pos:start="1411:25" pos:end="1411:26">16</literal></expr>;</condition> <incr pos:start="1411:29" pos:end="1411:31"><expr pos:start="1411:29" pos:end="1411:31"><name pos:start="1411:29" pos:end="1411:29">i</name><operator pos:start="1411:30" pos:end="1411:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1413:13" pos:end="1413:81"><block_content pos:start="1413:13" pos:end="1413:81">

            <expr_stmt pos:start="1413:13" pos:end="1413:81"><expr pos:start="1413:13" pos:end="1413:80"><name pos:start="1413:13" pos:end="1413:26"><name pos:start="1413:13" pos:end="1413:19">ref2frm</name><index pos:start="1413:20" pos:end="1413:26">[<expr pos:start="1413:21" pos:end="1413:25"><name pos:start="1413:21" pos:end="1413:21">i</name> <operator pos:start="1413:23" pos:end="1413:23">+</operator> <literal type="number" pos:start="1413:25" pos:end="1413:25">2</literal></expr>]</index></name> <operator pos:start="1413:28" pos:end="1413:28">=</operator> <literal type="number" pos:start="1413:30" pos:end="1413:30">4</literal> <operator pos:start="1413:32" pos:end="1413:32">*</operator> <name pos:start="1413:34" pos:end="1413:43"><name pos:start="1413:34" pos:end="1413:40">id_list</name><index pos:start="1413:41" pos:end="1413:43">[<expr pos:start="1413:42" pos:end="1413:42"><name pos:start="1413:42" pos:end="1413:42">i</name></expr>]</index></name> <operator pos:start="1413:45" pos:end="1413:45">+</operator> <operator pos:start="1413:47" pos:end="1413:47">(</operator><name pos:start="1413:48" pos:end="1413:65"><name pos:start="1413:48" pos:end="1413:49">sl</name><operator pos:start="1413:50" pos:end="1413:51">-&gt;</operator><name pos:start="1413:52" pos:end="1413:59">ref_list</name><index pos:start="1413:60" pos:end="1413:62">[<expr pos:start="1413:61" pos:end="1413:61"><name pos:start="1413:61" pos:end="1413:61">j</name></expr>]</index><index pos:start="1413:63" pos:end="1413:65">[<expr pos:start="1413:64" pos:end="1413:64"><name pos:start="1413:64" pos:end="1413:64">i</name></expr>]</index></name><operator pos:start="1413:66" pos:end="1413:66">.</operator><name pos:start="1413:67" pos:end="1413:75">reference</name> <operator pos:start="1413:77" pos:end="1413:77">&amp;</operator> <literal type="number" pos:start="1413:79" pos:end="1413:79">3</literal><operator pos:start="1413:80" pos:end="1413:80">)</operator></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="1415:9" pos:end="1417:29"><expr pos:start="1415:9" pos:end="1417:28"><name pos:start="1415:9" pos:end="1415:23"><name pos:start="1415:9" pos:end="1415:15">ref2frm</name><index pos:start="1415:16" pos:end="1415:23">[<expr pos:start="1415:17" pos:end="1415:22"><literal type="number" pos:start="1415:17" pos:end="1415:18">18</literal> <operator pos:start="1415:20" pos:end="1415:20">+</operator> <literal type="number" pos:start="1415:22" pos:end="1415:22">0</literal></expr>]</index></name> <operator pos:start="1415:25" pos:end="1415:25">=</operator>

        <name pos:start="1417:9" pos:end="1417:23"><name pos:start="1417:9" pos:end="1417:15">ref2frm</name><index pos:start="1417:16" pos:end="1417:23">[<expr pos:start="1417:17" pos:end="1417:22"><literal type="number" pos:start="1417:17" pos:end="1417:20">18</literal> <operator pos:start="1417:20" pos:end="1417:20">+</operator> <literal type="number" pos:start="1417:22" pos:end="1417:22">1</literal></expr>]</index></name> <operator pos:start="1417:25" pos:end="1417:25">=</operator> <operator pos:start="1417:27" pos:end="1417:27">-</operator><literal type="number" pos:start="1417:28" pos:end="1417:28">1</literal></expr>;</expr_stmt>

        <for pos:start="1419:9" pos:end="1423:64">for <control pos:start="1419:13" pos:end="1419:33">(<init pos:start="1419:14" pos:end="1419:20"><expr pos:start="1419:14" pos:end="1419:19"><name pos:start="1419:14" pos:end="1419:14">i</name> <operator pos:start="1419:16" pos:end="1419:16">=</operator> <literal type="number" pos:start="1419:18" pos:end="1419:19">16</literal></expr>;</init> <condition pos:start="1419:22" pos:end="1419:28"><expr pos:start="1419:22" pos:end="1419:27"><name pos:start="1419:22" pos:end="1419:22">i</name> <operator pos:start="1419:24" pos:end="1419:24">&lt;</operator> <literal type="number" pos:start="1419:26" pos:end="1419:27">48</literal></expr>;</condition> <incr pos:start="1419:30" pos:end="1419:32"><expr pos:start="1419:30" pos:end="1419:32"><name pos:start="1419:30" pos:end="1419:30">i</name><operator pos:start="1419:31" pos:end="1419:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1421:13" pos:end="1423:64"><block_content pos:start="1421:13" pos:end="1423:64">

            <expr_stmt pos:start="1421:13" pos:end="1423:64"><expr pos:start="1421:13" pos:end="1423:63"><name pos:start="1421:13" pos:end="1421:26"><name pos:start="1421:13" pos:end="1421:19">ref2frm</name><index pos:start="1421:20" pos:end="1421:26">[<expr pos:start="1421:21" pos:end="1421:25"><name pos:start="1421:21" pos:end="1421:21">i</name> <operator pos:start="1421:23" pos:end="1421:23">+</operator> <literal type="number" pos:start="1421:25" pos:end="1421:25">4</literal></expr>]</index></name> <operator pos:start="1421:28" pos:end="1421:28">=</operator> <literal type="number" pos:start="1421:30" pos:end="1421:30">4</literal> <operator pos:start="1421:32" pos:end="1421:32">*</operator> <name pos:start="1421:34" pos:end="1421:55"><name pos:start="1421:34" pos:end="1421:40">id_list</name><index pos:start="1421:41" pos:end="1421:55">[<expr pos:start="1421:42" pos:end="1421:54"><operator pos:start="1421:42" pos:end="1421:42">(</operator><name pos:start="1421:43" pos:end="1421:43">i</name> <operator pos:start="1421:45" pos:end="1421:45">-</operator> <literal type="number" pos:start="1421:47" pos:end="1421:48">16</literal><operator pos:start="1421:49" pos:end="1421:49">)</operator> <operator pos:start="1421:51" pos:end="1421:52">&gt;&gt;</operator> <literal type="number" pos:start="1421:54" pos:end="1421:54">1</literal></expr>]</index></name> <operator pos:start="1421:57" pos:end="1421:57">+</operator>

                             <operator pos:start="1423:30" pos:end="1423:30">(</operator><name pos:start="1423:31" pos:end="1423:48"><name pos:start="1423:31" pos:end="1423:32">sl</name><operator pos:start="1423:33" pos:end="1423:34">-&gt;</operator><name pos:start="1423:35" pos:end="1423:42">ref_list</name><index pos:start="1423:43" pos:end="1423:45">[<expr pos:start="1423:44" pos:end="1423:44"><name pos:start="1423:44" pos:end="1423:44">j</name></expr>]</index><index pos:start="1423:46" pos:end="1423:48">[<expr pos:start="1423:47" pos:end="1423:47"><name pos:start="1423:47" pos:end="1423:47">i</name></expr>]</index></name><operator pos:start="1423:49" pos:end="1423:49">.</operator><name pos:start="1423:50" pos:end="1423:58">reference</name> <operator pos:start="1423:60" pos:end="1423:60">&amp;</operator> <literal type="number" pos:start="1423:62" pos:end="1423:62">3</literal><operator pos:start="1423:63" pos:end="1423:63">)</operator></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="1429:5" pos:end="1429:26"><expr pos:start="1429:5" pos:end="1429:25"><name pos:start="1429:5" pos:end="1429:16"><name pos:start="1429:5" pos:end="1429:5">h</name><operator pos:start="1429:6" pos:end="1429:7">-&gt;</operator><name pos:start="1429:8" pos:end="1429:16">au_pps_id</name></name> <operator pos:start="1429:18" pos:end="1429:18">=</operator> <name pos:start="1429:20" pos:end="1429:25">pps_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1431:5" pos:end="1433:43"><expr pos:start="1431:5" pos:end="1433:42"><name pos:start="1431:5" pos:end="1431:14"><name pos:start="1431:5" pos:end="1431:5">h</name><operator pos:start="1431:6" pos:end="1431:7">-&gt;</operator><name pos:start="1431:8" pos:end="1431:10">sps</name><operator pos:start="1431:11" pos:end="1431:11">.</operator><name pos:start="1431:12" pos:end="1431:14">new</name></name> <operator pos:start="1431:16" pos:end="1431:16">=</operator>

    <name pos:start="1433:5" pos:end="1433:33"><name pos:start="1433:5" pos:end="1433:5">h</name><operator pos:start="1433:6" pos:end="1433:7">-&gt;</operator><name pos:start="1433:8" pos:end="1433:18">sps_buffers</name><index pos:start="1433:19" pos:end="1433:33">[<expr pos:start="1433:20" pos:end="1433:32"><name pos:start="1433:20" pos:end="1433:32"><name pos:start="1433:20" pos:end="1433:20">h</name><operator pos:start="1433:21" pos:end="1433:22">-&gt;</operator><name pos:start="1433:23" pos:end="1433:25">pps</name><operator pos:start="1433:26" pos:end="1433:26">.</operator><name pos:start="1433:27" pos:end="1433:32">sps_id</name></name></expr>]</index></name><operator pos:start="1433:34" pos:end="1433:35">-&gt;</operator><name pos:start="1433:36" pos:end="1433:38">new</name> <operator pos:start="1433:40" pos:end="1433:40">=</operator> <literal type="number" pos:start="1433:42" pos:end="1433:42">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1435:5" pos:end="1435:38"><expr pos:start="1435:5" pos:end="1435:37"><name pos:start="1435:5" pos:end="1435:21"><name pos:start="1435:5" pos:end="1435:5">h</name><operator pos:start="1435:6" pos:end="1435:7">-&gt;</operator><name pos:start="1435:8" pos:end="1435:21">current_sps_id</name></name> <operator pos:start="1435:23" pos:end="1435:23">=</operator> <name pos:start="1435:25" pos:end="1435:37"><name pos:start="1435:25" pos:end="1435:25">h</name><operator pos:start="1435:26" pos:end="1435:27">-&gt;</operator><name pos:start="1435:28" pos:end="1435:30">pps</name><operator pos:start="1435:31" pos:end="1435:31">.</operator><name pos:start="1435:32" pos:end="1435:37">sps_id</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="1439:5" pos:end="1477:5"><if pos:start="1439:5" pos:end="1477:5">if <condition pos:start="1439:8" pos:end="1439:45">(<expr pos:start="1439:9" pos:end="1439:44"><name pos:start="1439:9" pos:end="1439:23"><name pos:start="1439:9" pos:end="1439:9">h</name><operator pos:start="1439:10" pos:end="1439:11">-&gt;</operator><name pos:start="1439:12" pos:end="1439:16">avctx</name><operator pos:start="1439:17" pos:end="1439:18">-&gt;</operator><name pos:start="1439:19" pos:end="1439:23">debug</name></name> <operator pos:start="1439:25" pos:end="1439:25">&amp;</operator> <name pos:start="1439:27" pos:end="1439:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="1439:47" pos:end="1477:5">{<block_content pos:start="1441:9" pos:end="1475:106">

        <expr_stmt pos:start="1441:9" pos:end="1475:106"><expr pos:start="1441:9" pos:end="1475:105"><call pos:start="1441:9" pos:end="1475:105"><name pos:start="1441:9" pos:end="1441:14">av_log</name><argument_list pos:start="1441:15" pos:end="1475:105">(<argument pos:start="1441:16" pos:end="1441:23"><expr pos:start="1441:16" pos:end="1441:23"><name pos:start="1441:16" pos:end="1441:23"><name pos:start="1441:16" pos:end="1441:16">h</name><operator pos:start="1441:17" pos:end="1441:18">-&gt;</operator><name pos:start="1441:19" pos:end="1441:23">avctx</name></name></expr></argument>, <argument pos:start="1441:26" pos:end="1441:37"><expr pos:start="1441:26" pos:end="1441:37"><name pos:start="1441:26" pos:end="1441:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="1443:16" pos:end="1443:114"><expr pos:start="1443:16" pos:end="1443:114"><literal type="string" pos:start="1443:16" pos:end="1443:114">"slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n"</literal></expr></argument>,

               <argument pos:start="1445:16" pos:end="1445:28"><expr pos:start="1445:16" pos:end="1445:28"><name pos:start="1445:16" pos:end="1445:28"><name pos:start="1445:16" pos:end="1445:17">sl</name><operator pos:start="1445:18" pos:end="1445:19">-&gt;</operator><name pos:start="1445:20" pos:end="1445:28">slice_num</name></name></expr></argument>,

               <argument pos:start="1447:16" pos:end="1447:110"><expr pos:start="1447:16" pos:end="1447:110"><operator pos:start="1447:16" pos:end="1447:16">(</operator><ternary pos:start="1447:17" pos:end="1447:109"><condition pos:start="1447:17" pos:end="1447:52"><expr pos:start="1447:17" pos:end="1447:50"><name pos:start="1447:17" pos:end="1447:36"><name pos:start="1447:17" pos:end="1447:17">h</name><operator pos:start="1447:18" pos:end="1447:19">-&gt;</operator><name pos:start="1447:20" pos:end="1447:36">picture_structure</name></name> <operator pos:start="1447:38" pos:end="1447:39">==</operator> <name pos:start="1447:41" pos:end="1447:50">PICT_FRAME</name></expr> ?</condition><then pos:start="1447:54" pos:end="1447:56"> <expr pos:start="1447:54" pos:end="1447:56"><literal type="string" pos:start="1447:54" pos:end="1447:56">"F"</literal></expr> </then><else pos:start="1447:58" pos:end="1447:109">: <expr pos:start="1447:60" pos:end="1447:109"><ternary pos:start="1447:60" pos:end="1447:109"><condition pos:start="1447:60" pos:end="1447:99"><expr pos:start="1447:60" pos:end="1447:97"><name pos:start="1447:60" pos:end="1447:79"><name pos:start="1447:60" pos:end="1447:60">h</name><operator pos:start="1447:61" pos:end="1447:62">-&gt;</operator><name pos:start="1447:63" pos:end="1447:79">picture_structure</name></name> <operator pos:start="1447:81" pos:end="1447:82">==</operator> <name pos:start="1447:84" pos:end="1447:97">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="1447:101" pos:end="1447:103"> <expr pos:start="1447:101" pos:end="1447:103"><literal type="string" pos:start="1447:101" pos:end="1447:103">"T"</literal></expr> </then><else pos:start="1447:105" pos:end="1447:109">: <expr pos:start="1447:107" pos:end="1447:109"><literal type="string" pos:start="1447:107" pos:end="1447:109">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="1447:110" pos:end="1447:110">)</operator></expr></argument>,

               <argument pos:start="1449:16" pos:end="1449:32"><expr pos:start="1449:16" pos:end="1449:32"><name pos:start="1449:16" pos:end="1449:32">first_mb_in_slice</name></expr></argument>,

               <argument pos:start="1451:16" pos:end="1451:55"><expr pos:start="1451:16" pos:end="1451:55"><call pos:start="1451:16" pos:end="1451:55"><name pos:start="1451:16" pos:end="1451:39">av_get_picture_type_char</name><argument_list pos:start="1451:40" pos:end="1451:55">(<argument pos:start="1451:41" pos:end="1451:54"><expr pos:start="1451:41" pos:end="1451:54"><name pos:start="1451:41" pos:end="1451:54"><name pos:start="1451:41" pos:end="1451:42">sl</name><operator pos:start="1451:43" pos:end="1451:44">-&gt;</operator><name pos:start="1451:45" pos:end="1451:54">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="1453:16" pos:end="1453:49"><expr pos:start="1453:16" pos:end="1453:49"><ternary pos:start="1453:16" pos:end="1453:49"><condition pos:start="1453:16" pos:end="1453:37"><expr pos:start="1453:16" pos:end="1453:35"><name pos:start="1453:16" pos:end="1453:35"><name pos:start="1453:16" pos:end="1453:17">sl</name><operator pos:start="1453:18" pos:end="1453:19">-&gt;</operator><name pos:start="1453:20" pos:end="1453:35">slice_type_fixed</name></name></expr> ?</condition><then pos:start="1453:39" pos:end="1453:44"> <expr pos:start="1453:39" pos:end="1453:44"><literal type="string" pos:start="1453:39" pos:end="1453:44">" fix"</literal></expr> </then><else pos:start="1453:46" pos:end="1453:49">: <expr pos:start="1453:48" pos:end="1453:49"><literal type="string" pos:start="1453:48" pos:end="1453:49">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1455:16" pos:end="1455:62"><expr pos:start="1455:16" pos:end="1455:62"><ternary pos:start="1455:16" pos:end="1455:62"><condition pos:start="1455:16" pos:end="1455:50"><expr pos:start="1455:16" pos:end="1455:48"><name pos:start="1455:16" pos:end="1455:31"><name pos:start="1455:16" pos:end="1455:16">h</name><operator pos:start="1455:17" pos:end="1455:18">-&gt;</operator><name pos:start="1455:19" pos:end="1455:31">nal_unit_type</name></name> <operator pos:start="1455:33" pos:end="1455:34">==</operator> <name pos:start="1455:36" pos:end="1455:48">NAL_IDR_SLICE</name></expr> ?</condition><then pos:start="1455:52" pos:end="1455:57"> <expr pos:start="1455:52" pos:end="1455:57"><literal type="string" pos:start="1455:52" pos:end="1455:57">" IDR"</literal></expr> </then><else pos:start="1455:59" pos:end="1455:62">: <expr pos:start="1455:61" pos:end="1455:62"><literal type="string" pos:start="1455:61" pos:end="1455:62">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1457:16" pos:end="1457:21"><expr pos:start="1457:16" pos:end="1457:21"><name pos:start="1457:16" pos:end="1457:21">pps_id</name></expr></argument>, <argument pos:start="1457:24" pos:end="1457:35"><expr pos:start="1457:24" pos:end="1457:35"><name pos:start="1457:24" pos:end="1457:35"><name pos:start="1457:24" pos:end="1457:24">h</name><operator pos:start="1457:25" pos:end="1457:26">-&gt;</operator><name pos:start="1457:27" pos:end="1457:35">frame_num</name></name></expr></argument>,

               <argument pos:start="1459:16" pos:end="1459:43"><expr pos:start="1459:16" pos:end="1459:43"><name pos:start="1459:16" pos:end="1459:43"><name pos:start="1459:16" pos:end="1459:16">h</name><operator pos:start="1459:17" pos:end="1459:18">-&gt;</operator><name pos:start="1459:19" pos:end="1459:29">cur_pic_ptr</name><operator pos:start="1459:30" pos:end="1459:31">-&gt;</operator><name pos:start="1459:32" pos:end="1459:40">field_poc</name><index pos:start="1459:41" pos:end="1459:43">[<expr pos:start="1459:42" pos:end="1459:42"><literal type="number" pos:start="1459:42" pos:end="1459:42">0</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1461:16" pos:end="1461:43"><expr pos:start="1461:16" pos:end="1461:43"><name pos:start="1461:16" pos:end="1461:43"><name pos:start="1461:16" pos:end="1461:16">h</name><operator pos:start="1461:17" pos:end="1461:18">-&gt;</operator><name pos:start="1461:19" pos:end="1461:29">cur_pic_ptr</name><operator pos:start="1461:30" pos:end="1461:31">-&gt;</operator><name pos:start="1461:32" pos:end="1461:40">field_poc</name><index pos:start="1461:41" pos:end="1461:43">[<expr pos:start="1461:42" pos:end="1461:42"><literal type="number" pos:start="1461:42" pos:end="1461:42">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1463:16" pos:end="1463:31"><expr pos:start="1463:16" pos:end="1463:31"><name pos:start="1463:16" pos:end="1463:31"><name pos:start="1463:16" pos:end="1463:17">sl</name><operator pos:start="1463:18" pos:end="1463:19">-&gt;</operator><name pos:start="1463:20" pos:end="1463:28">ref_count</name><index pos:start="1463:29" pos:end="1463:31">[<expr pos:start="1463:30" pos:end="1463:30"><literal type="number" pos:start="1463:30" pos:end="1463:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1463:34" pos:end="1463:49"><expr pos:start="1463:34" pos:end="1463:49"><name pos:start="1463:34" pos:end="1463:49"><name pos:start="1463:34" pos:end="1463:35">sl</name><operator pos:start="1463:36" pos:end="1463:37">-&gt;</operator><name pos:start="1463:38" pos:end="1463:46">ref_count</name><index pos:start="1463:47" pos:end="1463:49">[<expr pos:start="1463:48" pos:end="1463:48"><literal type="number" pos:start="1463:48" pos:end="1463:48">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1465:16" pos:end="1465:25"><expr pos:start="1465:16" pos:end="1465:25"><name pos:start="1465:16" pos:end="1465:25"><name pos:start="1465:16" pos:end="1465:17">sl</name><operator pos:start="1465:18" pos:end="1465:19">-&gt;</operator><name pos:start="1465:20" pos:end="1465:25">qscale</name></name></expr></argument>,

               <argument pos:start="1467:16" pos:end="1467:36"><expr pos:start="1467:16" pos:end="1467:36"><name pos:start="1467:16" pos:end="1467:36"><name pos:start="1467:16" pos:end="1467:17">sl</name><operator pos:start="1467:18" pos:end="1467:19">-&gt;</operator><name pos:start="1467:20" pos:end="1467:36">deblocking_filter</name></name></expr></argument>,

               <argument pos:start="1469:16" pos:end="1469:40"><expr pos:start="1469:16" pos:end="1469:40"><name pos:start="1469:16" pos:end="1469:40"><name pos:start="1469:16" pos:end="1469:17">sl</name><operator pos:start="1469:18" pos:end="1469:19">-&gt;</operator><name pos:start="1469:20" pos:end="1469:40">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1469:43" pos:end="1469:63"><expr pos:start="1469:43" pos:end="1469:63"><name pos:start="1469:43" pos:end="1469:63"><name pos:start="1469:43" pos:end="1469:44">sl</name><operator pos:start="1469:45" pos:end="1469:46">-&gt;</operator><name pos:start="1469:47" pos:end="1469:63">slice_beta_offset</name></name></expr></argument>,

               <argument pos:start="1471:16" pos:end="1471:29"><expr pos:start="1471:16" pos:end="1471:29"><name pos:start="1471:16" pos:end="1471:29"><name pos:start="1471:16" pos:end="1471:17">sl</name><operator pos:start="1471:18" pos:end="1471:19">-&gt;</operator><name pos:start="1471:20" pos:end="1471:29">use_weight</name></name></expr></argument>,

               <argument pos:start="1473:16" pos:end="1473:70"><expr pos:start="1473:16" pos:end="1473:70"><ternary pos:start="1473:16" pos:end="1473:70"><condition pos:start="1473:16" pos:end="1473:61"><expr pos:start="1473:16" pos:end="1473:59"><name pos:start="1473:16" pos:end="1473:29"><name pos:start="1473:16" pos:end="1473:17">sl</name><operator pos:start="1473:18" pos:end="1473:19">-&gt;</operator><name pos:start="1473:20" pos:end="1473:29">use_weight</name></name> <operator pos:start="1473:31" pos:end="1473:32">==</operator> <literal type="number" pos:start="1473:34" pos:end="1473:34">1</literal> <operator pos:start="1473:36" pos:end="1473:37">&amp;&amp;</operator> <name pos:start="1473:39" pos:end="1473:59"><name pos:start="1473:39" pos:end="1473:40">sl</name><operator pos:start="1473:41" pos:end="1473:42">-&gt;</operator><name pos:start="1473:43" pos:end="1473:59">use_weight_chroma</name></name></expr> ?</condition><then pos:start="1473:63" pos:end="1473:65"> <expr pos:start="1473:63" pos:end="1473:65"><literal type="string" pos:start="1473:63" pos:end="1473:65">"c"</literal></expr> </then><else pos:start="1473:67" pos:end="1473:70">: <expr pos:start="1473:69" pos:end="1473:70"><literal type="string" pos:start="1473:69" pos:end="1473:70">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1475:16" pos:end="1475:104"><expr pos:start="1475:16" pos:end="1475:104"><ternary pos:start="1475:16" pos:end="1475:104"><condition pos:start="1475:16" pos:end="1475:52"><expr pos:start="1475:16" pos:end="1475:50"><name pos:start="1475:16" pos:end="1475:29"><name pos:start="1475:16" pos:end="1475:17">sl</name><operator pos:start="1475:18" pos:end="1475:19">-&gt;</operator><name pos:start="1475:20" pos:end="1475:29">slice_type</name></name> <operator pos:start="1475:31" pos:end="1475:32">==</operator> <name pos:start="1475:34" pos:end="1475:50">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="1475:54" pos:end="1475:99"> <expr pos:start="1475:54" pos:end="1475:99"><operator pos:start="1475:54" pos:end="1475:54">(</operator><ternary pos:start="1475:55" pos:end="1475:98"><condition pos:start="1475:55" pos:end="1475:82"><expr pos:start="1475:55" pos:end="1475:80"><name pos:start="1475:55" pos:end="1475:80"><name pos:start="1475:55" pos:end="1475:56">sl</name><operator pos:start="1475:57" pos:end="1475:58">-&gt;</operator><name pos:start="1475:59" pos:end="1475:80">direct_spatial_mv_pred</name></name></expr> ?</condition><then pos:start="1475:84" pos:end="1475:89"> <expr pos:start="1475:84" pos:end="1475:89"><literal type="string" pos:start="1475:84" pos:end="1475:89">"SPAT"</literal></expr> </then><else pos:start="1475:91" pos:end="1475:98">: <expr pos:start="1475:93" pos:end="1475:98"><literal type="string" pos:start="1475:93" pos:end="1475:98">"TEMP"</literal></expr></else></ternary><operator pos:start="1475:99" pos:end="1475:99">)</operator></expr> </then><else pos:start="1475:101" pos:end="1475:104">: <expr pos:start="1475:103" pos:end="1475:104"><literal type="string" pos:start="1475:103" pos:end="1475:104">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1481:5" pos:end="1481:13">return <expr pos:start="1481:12" pos:end="1481:12"><literal type="number" pos:start="1481:12" pos:end="1481:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
