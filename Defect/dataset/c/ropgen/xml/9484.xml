<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9484.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">ffmmal_fill_input_port</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">MMALDecodeContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">ctx</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="81:5">while <condition pos:start="9:11" pos:end="9:32">(<expr pos:start="9:12" pos:end="9:31"><name pos:start="9:12" pos:end="9:31"><name pos:start="9:12" pos:end="9:14">ctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:31">waiting_buffers</name></name></expr>)</condition> <block pos:start="9:34" pos:end="81:5">{<block_content pos:start="11:9" pos:end="79:9">

        <decl_stmt pos:start="11:9" pos:end="11:38"><decl pos:start="11:9" pos:end="11:37"><type pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:28">MMAL_BUFFER_HEADER_T</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:37">mbuffer</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:30"><decl pos:start="13:9" pos:end="13:29"><type pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:21">FFBufferEntry</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:29">buffer</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:29"><decl pos:start="15:9" pos:end="15:28"><type pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:21">MMAL_STATUS_T</name></type> <name pos:start="15:23" pos:end="15:28">status</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:54"><expr pos:start="19:9" pos:end="19:53"><name pos:start="19:9" pos:end="19:15">mbuffer</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:53"><name pos:start="19:19" pos:end="19:32">mmal_queue_get</name><argument_list pos:start="19:33" pos:end="19:53">(<argument pos:start="19:34" pos:end="19:52"><expr pos:start="19:34" pos:end="19:52"><name pos:start="19:34" pos:end="19:52"><name pos:start="19:34" pos:end="19:36">ctx</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:45">pool_in</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:52">queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:20">mbuffer</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:14">buffer</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:37"><name pos:start="27:18" pos:end="27:20">ctx</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:37">waiting_buffers</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><call pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:32">mmal_buffer_header_reset</name><argument_list pos:start="31:33" pos:end="31:41">(<argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">mbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:15">mbuffer</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:20">cmd</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:15">mbuffer</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:20">pts</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:29">buffer</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:34">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:15">mbuffer</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">dts</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:29">buffer</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:34">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:15">mbuffer</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">flags</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:38"><name pos:start="39:26" pos:end="39:31">buffer</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:38">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:15">mbuffer</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">data</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:30">buffer</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:36">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:15">mbuffer</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:23">length</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:40"><name pos:start="43:27" pos:end="43:32">buffer</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:40">length</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:15">mbuffer</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:26">user_data</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:35">buffer</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:40">ref</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:15">mbuffer</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:27">alloc_size</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:52"><name pos:start="47:31" pos:end="47:33">ctx</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:42">decoder</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:49">input</name><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">0</literal></expr>]</index></name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:65">buffer_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:78">(<expr pos:start="51:13" pos:end="51:77"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:19">status</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:76"><name pos:start="51:23" pos:end="51:43">mmal_port_send_buffer</name><argument_list pos:start="51:44" pos:end="51:76">(<argument pos:start="51:45" pos:end="51:66"><expr pos:start="51:45" pos:end="51:66"><name pos:start="51:45" pos:end="51:66"><name pos:start="51:45" pos:end="51:47">ctx</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:56">decoder</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:63">input</name><index pos:start="51:64" pos:end="51:66">[<expr pos:start="51:65" pos:end="51:65"><literal type="number" pos:start="51:65" pos:end="51:65">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:69" pos:end="51:75"><expr pos:start="51:69" pos:end="51:75"><name pos:start="51:69" pos:end="51:75">mbuffer</name></expr></argument>)</argument_list></call><operator pos:start="51:77" pos:end="51:77">)</operator></expr>)</condition> <block pos:start="51:80" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:42">

            <expr_stmt pos:start="53:13" pos:end="53:48"><expr pos:start="53:13" pos:end="53:47"><call pos:start="53:13" pos:end="53:47"><name pos:start="53:13" pos:end="53:38">mmal_buffer_header_release</name><argument_list pos:start="53:39" pos:end="53:47">(<argument pos:start="53:40" pos:end="53:46"><expr pos:start="53:40" pos:end="53:46"><name pos:start="53:40" pos:end="53:46">mbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><call pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:27">av_buffer_unref</name><argument_list pos:start="55:28" pos:end="55:41">(<argument pos:start="55:29" pos:end="55:40"><expr pos:start="55:29" pos:end="55:40"><operator pos:start="55:29" pos:end="55:29">&amp;</operator><name pos:start="55:30" pos:end="55:40"><name pos:start="55:30" pos:end="55:35">buffer</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="61:9" pos:end="61:40">// Remove from start of the list</comment>

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:11">ctx</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:28">waiting_buffers</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:43"><name pos:start="63:32" pos:end="63:37">buffer</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:43">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:45"><if pos:start="65:9" pos:end="67:45">if <condition pos:start="65:12" pos:end="65:48">(<expr pos:start="65:13" pos:end="65:47"><name pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:15">ctx</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:37">waiting_buffers_tail</name></name> <operator pos:start="65:39" pos:end="65:40">==</operator> <name pos:start="65:42" pos:end="65:47">buffer</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:45"><block_content pos:start="67:13" pos:end="67:45">

            <expr_stmt pos:start="67:13" pos:end="67:45"><expr pos:start="67:13" pos:end="67:44"><name pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:15">ctx</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:37">waiting_buffers_tail</name></name> <operator pos:start="67:39" pos:end="67:39">=</operator> <name pos:start="67:41" pos:end="67:44">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><call pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:15">av_free</name><argument_list pos:start="69:16" pos:end="69:23">(<argument pos:start="69:17" pos:end="69:22"><expr pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:22">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:19">(<expr pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:18">status</name></expr>)</condition> <block pos:start="73:21" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:35">

            <expr_stmt pos:start="75:13" pos:end="75:91"><expr pos:start="75:13" pos:end="75:90"><call pos:start="75:13" pos:end="75:90"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:90">(<argument pos:start="75:20" pos:end="75:24"><expr pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:24">avctx</name></expr></argument>, <argument pos:start="75:27" pos:end="75:38"><expr pos:start="75:27" pos:end="75:38"><name pos:start="75:27" pos:end="75:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:41" pos:end="75:76"><expr pos:start="75:41" pos:end="75:76"><literal type="string" pos:start="75:41" pos:end="75:76">"MMAL error %d when sending input\n"</literal></expr></argument>, <argument pos:start="75:79" pos:end="75:89"><expr pos:start="75:79" pos:end="75:89"><operator pos:start="75:79" pos:end="75:79">(</operator><name pos:start="75:80" pos:end="75:82">int</name><operator pos:start="75:83" pos:end="75:83">)</operator><name pos:start="75:84" pos:end="75:89">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:35">return <expr pos:start="77:20" pos:end="77:34"><name pos:start="77:20" pos:end="77:34">AVERROR_UNKNOWN</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
