<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19463.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">ide_sector_read_cb</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:24">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">pio_aiocb</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:13">status</name></name> <operator pos:start="13:15" pos:end="13:16">&amp;=</operator> <operator pos:start="13:18" pos:end="13:18">~</operator><name pos:start="13:19" pos:end="13:27">BUSY_STAT</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:25">ECANCELED</name></expr>)</condition> <block pos:start="17:28" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><call pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:19">block_acct_done</name><argument_list pos:start="23:20" pos:end="23:52">(<argument pos:start="23:21" pos:end="23:41"><expr pos:start="23:21" pos:end="23:41"><call pos:start="23:21" pos:end="23:41"><name pos:start="23:21" pos:end="23:33">blk_get_stats</name><argument_list pos:start="23:34" pos:end="23:41">(<argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:40">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:44" pos:end="23:51"><expr pos:start="23:44" pos:end="23:51"><operator pos:start="23:44" pos:end="23:44">&amp;</operator><name pos:start="23:45" pos:end="23:51"><name pos:start="23:45" pos:end="23:45">s</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:51">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">!=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:9">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="29:48">(<expr pos:start="27:13" pos:end="29:47"><call pos:start="27:13" pos:end="29:47"><name pos:start="27:13" pos:end="27:31">ide_handle_rw_error</name><argument_list pos:start="27:32" pos:end="29:47">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">s</name></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><operator pos:start="27:36" pos:end="27:36">-</operator><name pos:start="27:37" pos:end="27:39">ret</name></expr></argument>, <argument pos:start="27:42" pos:end="29:46"><expr pos:start="27:42" pos:end="29:46"><name pos:start="27:42" pos:end="27:54">IDE_RETRY_PIO</name> <operator pos:start="27:56" pos:end="27:56">|</operator>

                                <name pos:start="29:33" pos:end="29:46">IDE_RETRY_READ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:50" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:19">

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">n</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">nsector</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:30">(<expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:9">n</name> <operator pos:start="41:11" pos:end="41:11">&gt;</operator> <name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:29">req_nb_sectors</name></name></expr>)</condition> <block pos:start="41:32" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:30">

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:9">n</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:29">req_nb_sectors</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><call pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:18">ide_set_sector</name><argument_list pos:start="49:19" pos:end="49:44">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">s</name></expr></argument>, <argument pos:start="49:23" pos:end="49:43"><expr pos:start="49:23" pos:end="49:43"><call pos:start="49:23" pos:end="49:39"><name pos:start="49:23" pos:end="49:36">ide_get_sector</name><argument_list pos:start="49:37" pos:end="49:39">(<argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">s</name></expr></argument>)</argument_list></call> <operator pos:start="49:41" pos:end="49:41">+</operator> <name pos:start="49:43" pos:end="49:43">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:14">nsector</name></name> <operator pos:start="51:16" pos:end="51:17">-=</operator> <name pos:start="51:19" pos:end="51:19">n</name></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:47">/* Allow the guest to read the io_buffer */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:79"><expr pos:start="55:5" pos:end="55:78"><call pos:start="55:5" pos:end="55:78"><name pos:start="55:5" pos:end="55:22">ide_transfer_start</name><argument_list pos:start="55:23" pos:end="55:78">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:38">io_buffer</name></name></expr></argument>, <argument pos:start="55:41" pos:end="55:60"><expr pos:start="55:41" pos:end="55:60"><name pos:start="55:41" pos:end="55:41">n</name> <operator pos:start="55:43" pos:end="55:43">*</operator> <name pos:start="55:45" pos:end="55:60">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="55:63" pos:end="55:77"><expr pos:start="55:63" pos:end="55:77"><name pos:start="55:63" pos:end="55:77">ide_sector_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><call pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:15">ide_set_irq</name><argument_list pos:start="57:16" pos:end="57:23">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:22">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
