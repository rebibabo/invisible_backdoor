<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18522.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">pat_cb</name><parameter_list pos:start="1:19" pos:end="1:81">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:39"><name pos:start="1:20" pos:end="1:31">MpegTSFilter</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">filter</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:63">section</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:80"><decl pos:start="1:66" pos:end="1:80"><type pos:start="1:66" pos:end="1:80"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:80">section_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:5">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MpegTSContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ts</name> <init pos:start="5:23" pos:end="5:55">= <expr pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:30">filter</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:33">u</name><operator pos:start="5:34" pos:end="5:34">.</operator><name pos:start="5:35" pos:end="5:48">section_filter</name><operator pos:start="5:49" pos:end="5:49">.</operator><name pos:start="5:50" pos:end="5:55">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">MpegTSSectionFilter</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">tssf</name> <init pos:start="7:31" pos:end="7:57">= <expr pos:start="7:33" pos:end="7:57"><operator pos:start="7:33" pos:end="7:33">&amp;</operator><name pos:start="7:34" pos:end="7:57"><name pos:start="7:34" pos:end="7:39">filter</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:42">u</name><operator pos:start="7:43" pos:end="7:43">.</operator><name pos:start="7:44" pos:end="7:57">section_filter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">SectionHeader</name></type> <name pos:start="9:19" pos:end="9:20">h1</name></decl>, <decl pos:start="9:23" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">h</name> <init pos:start="9:26" pos:end="9:30">= <expr pos:start="9:28" pos:end="9:30"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:30">h1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">p</name></decl>, <decl pos:start="11:23" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:28">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">sid</name></decl>, <decl pos:start="13:14" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:20">pmt_pid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AVProgram</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:22">program</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><call pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:10">av_log</name><argument_list pos:start="19:11" pos:end="19:46">(<argument pos:start="19:12" pos:end="19:21"><expr pos:start="19:12" pos:end="19:21"><name pos:start="19:12" pos:end="19:21"><name pos:start="19:12" pos:end="19:13">ts</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">stream</name></name></expr></argument>, <argument pos:start="19:24" pos:end="19:35"><expr pos:start="19:24" pos:end="19:35"><name pos:start="19:24" pos:end="19:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="19:38" pos:end="19:45"><expr pos:start="19:38" pos:end="19:45"><literal type="string" pos:start="19:38" pos:end="19:45">"PAT:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><call pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:18">hex_dump_debug</name><argument_list pos:start="21:19" pos:end="21:52">(<argument pos:start="21:20" pos:end="21:29"><expr pos:start="21:20" pos:end="21:29"><name pos:start="21:20" pos:end="21:29"><name pos:start="21:20" pos:end="21:21">ts</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">stream</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:38"><expr pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:38">section</name></expr></argument>, <argument pos:start="21:41" pos:end="21:51"><expr pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:51">section_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:9">p_end</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:19">section</name> <operator pos:start="25:21" pos:end="25:21">+</operator> <name pos:start="25:23" pos:end="25:33">section_len</name> <operator pos:start="25:35" pos:end="25:35">-</operator> <literal type="number" pos:start="25:37" pos:end="25:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:5">p</name>     <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:19">section</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:47">(<expr pos:start="29:9" pos:end="29:46"><call pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:28">parse_section_header</name><argument_list pos:start="29:29" pos:end="29:42">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">h</name></expr></argument>, <argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:34">p</name></expr></argument>, <argument pos:start="29:37" pos:end="29:41"><expr pos:start="29:37" pos:end="29:41"><name pos:start="29:37" pos:end="29:41">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="29:44" pos:end="29:44">&lt;</operator> <literal type="number" pos:start="29:46" pos:end="29:46">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:15"><if pos:start="33:5" pos:end="35:15">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">h</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">tid</name></name> <operator pos:start="33:16" pos:end="33:17">!=</operator> <name pos:start="33:19" pos:end="33:25">PAT_TID</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:15"><block_content pos:start="35:9" pos:end="35:15">

        <return pos:start="35:9" pos:end="35:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:15"><if pos:start="37:5" pos:end="39:15">if <condition pos:start="37:8" pos:end="37:25">(<expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:10">ts</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:24">skip_changes</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:15"><block_content pos:start="39:9" pos:end="39:15">

        <return pos:start="39:9" pos:end="39:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:15"><if pos:start="43:5" pos:end="45:15">if <condition pos:start="43:8" pos:end="43:37">(<expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:9">h</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">version</name></name> <operator pos:start="43:20" pos:end="43:21">==</operator> <name pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:26">tssf</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:36">last_ver</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:15"><block_content pos:start="45:9" pos:end="45:15">

        <return pos:start="45:9" pos:end="45:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:8">tssf</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:18">last_ver</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:31"><name pos:start="47:22" pos:end="47:22">h</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:31">version</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:6">ts</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:14">stream</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">ts_id</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">h</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">id</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><call pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:18">clear_programs</name><argument_list pos:start="53:19" pos:end="53:22">(<argument pos:start="53:20" pos:end="53:21"><expr pos:start="53:20" pos:end="53:21"><name pos:start="53:20" pos:end="53:21">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="125:5">for <control pos:start="55:9" pos:end="55:12">(<init pos:start="55:10" pos:end="55:10">;</init><condition pos:start="55:11" pos:end="55:11">;</condition><incr/>)</control> <block pos:start="55:14" pos:end="125:5">{<block_content pos:start="57:9" pos:end="123:9">

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:11">sid</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:30"><name pos:start="57:15" pos:end="57:19">get16</name><argument_list pos:start="57:20" pos:end="57:30">(<argument pos:start="57:21" pos:end="57:22"><expr pos:start="57:21" pos:end="57:22"><operator pos:start="57:21" pos:end="57:21">&amp;</operator><name pos:start="57:22" pos:end="57:22">p</name></expr></argument>, <argument pos:start="57:25" pos:end="57:29"><expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:29">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:20">(<expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">sid</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:15">pmt_pid</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:34"><name pos:start="63:19" pos:end="63:23">get16</name><argument_list pos:start="63:24" pos:end="63:34">(<argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><operator pos:start="63:25" pos:end="63:25">&amp;</operator><name pos:start="63:26" pos:end="63:26">p</name></expr></argument>, <argument pos:start="63:29" pos:end="63:33"><expr pos:start="63:29" pos:end="63:33"><name pos:start="63:29" pos:end="63:33">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:18"><if pos:start="65:9" pos:end="67:18">if <condition pos:start="65:12" pos:end="65:24">(<expr pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:19">pmt_pid</name> <operator pos:start="65:21" pos:end="65:21">&lt;</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:18"><block_content pos:start="67:13" pos:end="67:18">

            <break pos:start="67:13" pos:end="67:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:15">pmt_pid</name> <operator pos:start="69:17" pos:end="69:18">&amp;=</operator> <literal type="number" pos:start="69:20" pos:end="69:25">0x1fff</literal></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="75:18"><if pos:start="73:9" pos:end="75:18">if <condition pos:start="73:12" pos:end="73:39">(<expr pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:19">pmt_pid</name> <operator pos:start="73:21" pos:end="73:22">==</operator> <name pos:start="73:24" pos:end="73:38"><name pos:start="73:24" pos:end="73:25">ts</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:38">current_pid</name></name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:18"><block_content pos:start="75:13" pos:end="75:18">

            <break pos:start="75:13" pos:end="75:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:78"><expr pos:start="79:9" pos:end="79:77"><call pos:start="79:9" pos:end="79:77"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:77">(<argument pos:start="79:16" pos:end="79:25"><expr pos:start="79:16" pos:end="79:25"><name pos:start="79:16" pos:end="79:25"><name pos:start="79:16" pos:end="79:17">ts</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:25">stream</name></name></expr></argument>, <argument pos:start="79:28" pos:end="79:39"><expr pos:start="79:28" pos:end="79:39"><name pos:start="79:28" pos:end="79:39">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="79:42" pos:end="79:62"><expr pos:start="79:42" pos:end="79:62"><literal type="string" pos:start="79:42" pos:end="79:62">"sid=0x%x pid=0x%x\n"</literal></expr></argument>, <argument pos:start="79:65" pos:end="79:67"><expr pos:start="79:65" pos:end="79:67"><name pos:start="79:65" pos:end="79:67">sid</name></expr></argument>, <argument pos:start="79:70" pos:end="79:76"><expr pos:start="79:70" pos:end="79:76"><name pos:start="79:70" pos:end="79:76">pmt_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="123:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:26">(<expr pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:15">sid</name> <operator pos:start="83:17" pos:end="83:18">==</operator> <literal type="number" pos:start="83:20" pos:end="83:25">0x0000</literal></expr>)</condition> <block pos:start="83:28" pos:end="87:9">{<block_content>

            <comment type="block" pos:start="85:13" pos:end="85:26">/* NIT info */</comment>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="123:9">else <block pos:start="87:16" pos:end="123:9">{<block_content pos:start="89:13" pos:end="121:45">

            <decl_stmt pos:start="89:13" pos:end="89:50"><decl pos:start="89:13" pos:end="89:49"><type pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:24">MpegTSFilter</name> <modifier pos:start="89:26" pos:end="89:26">*</modifier></type><name pos:start="89:27" pos:end="89:29">fil</name> <init pos:start="89:31" pos:end="89:49">= <expr pos:start="89:33" pos:end="89:49"><name pos:start="89:33" pos:end="89:49"><name pos:start="89:33" pos:end="89:34">ts</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:40">pids</name><index pos:start="89:41" pos:end="89:49">[<expr pos:start="89:42" pos:end="89:48"><name pos:start="89:42" pos:end="89:48">pmt_pid</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:54"><expr pos:start="91:13" pos:end="91:53"><name pos:start="91:13" pos:end="91:19">program</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <call pos:start="91:23" pos:end="91:53"><name pos:start="91:23" pos:end="91:36">av_new_program</name><argument_list pos:start="91:37" pos:end="91:53">(<argument pos:start="91:38" pos:end="91:47"><expr pos:start="91:38" pos:end="91:47"><name pos:start="91:38" pos:end="91:47"><name pos:start="91:38" pos:end="91:39">ts</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:47">stream</name></name></expr></argument>, <argument pos:start="91:50" pos:end="91:52"><expr pos:start="91:50" pos:end="91:52"><name pos:start="91:50" pos:end="91:52">sid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="99:13"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:24">(<expr pos:start="93:17" pos:end="93:23"><name pos:start="93:17" pos:end="93:23">program</name></expr>)</condition> <block pos:start="93:26" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:43">

                <expr_stmt pos:start="95:17" pos:end="95:43"><expr pos:start="95:17" pos:end="95:42"><name pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:23">program</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:36">program_num</name></name> <operator pos:start="95:38" pos:end="95:38">=</operator> <name pos:start="95:40" pos:end="95:42">sid</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:43"><expr pos:start="97:17" pos:end="97:42"><name pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:23">program</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:32">pmt_pid</name></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:42">pmt_pid</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="101:13" pos:end="109:63"><if pos:start="101:13" pos:end="109:63">if <condition pos:start="101:16" pos:end="101:20">(<expr pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:19">fil</name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="109:63"><block_content pos:start="103:17" pos:end="109:63">

                <if_stmt pos:start="103:17" pos:end="109:63"><if pos:start="103:17" pos:end="109:63">if <condition pos:start="103:20" pos:end="107:66">(   <expr pos:start="103:24" pos:end="107:65"><name pos:start="103:24" pos:end="103:32"><name pos:start="103:24" pos:end="103:26">fil</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:32">type</name></name> <operator pos:start="103:34" pos:end="103:35">!=</operator> <name pos:start="103:37" pos:end="103:50">MPEGTS_SECTION</name>

                    <operator pos:start="105:21" pos:end="105:22">||</operator> <name pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:26">fil</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:31">pid</name></name> <operator pos:start="105:33" pos:end="105:34">!=</operator> <name pos:start="105:36" pos:end="105:42">pmt_pid</name>

                    <operator pos:start="107:21" pos:end="107:22">||</operator> <name pos:start="107:24" pos:end="107:55"><name pos:start="107:24" pos:end="107:26">fil</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:29">u</name><operator pos:start="107:30" pos:end="107:30">.</operator><name pos:start="107:31" pos:end="107:44">section_filter</name><operator pos:start="107:45" pos:end="107:45">.</operator><name pos:start="107:46" pos:end="107:55">section_cb</name></name> <operator pos:start="107:57" pos:end="107:58">!=</operator> <name pos:start="107:60" pos:end="107:65">pmt_cb</name></expr>)</condition><block type="pseudo" pos:start="109:21" pos:end="109:63"><block_content pos:start="109:21" pos:end="109:63">

                    <expr_stmt pos:start="109:21" pos:end="109:63"><expr pos:start="109:21" pos:end="109:62"><call pos:start="109:21" pos:end="109:62"><name pos:start="109:21" pos:end="109:39">mpegts_close_filter</name><argument_list pos:start="109:40" pos:end="109:62">(<argument pos:start="109:41" pos:end="109:42"><expr pos:start="109:41" pos:end="109:42"><name pos:start="109:41" pos:end="109:42">ts</name></expr></argument>, <argument pos:start="109:45" pos:end="109:61"><expr pos:start="109:45" pos:end="109:61"><name pos:start="109:45" pos:end="109:61"><name pos:start="109:45" pos:end="109:46">ts</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:52">pids</name><index pos:start="109:53" pos:end="109:61">[<expr pos:start="109:54" pos:end="109:60"><name pos:start="109:54" pos:end="109:60">pmt_pid</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="113:13" pos:end="115:71"><if pos:start="113:13" pos:end="115:71">if <condition pos:start="113:16" pos:end="113:35">(<expr pos:start="113:17" pos:end="113:34"><operator pos:start="113:17" pos:end="113:17">!</operator><name pos:start="113:18" pos:end="113:34"><name pos:start="113:18" pos:end="113:19">ts</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:25">pids</name><index pos:start="113:26" pos:end="113:34">[<expr pos:start="113:27" pos:end="113:33"><name pos:start="113:27" pos:end="113:33">pmt_pid</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:71"><block_content pos:start="115:17" pos:end="115:71">

                <expr_stmt pos:start="115:17" pos:end="115:71"><expr pos:start="115:17" pos:end="115:70"><call pos:start="115:17" pos:end="115:70"><name pos:start="115:17" pos:end="115:42">mpegts_open_section_filter</name><argument_list pos:start="115:43" pos:end="115:70">(<argument pos:start="115:44" pos:end="115:45"><expr pos:start="115:44" pos:end="115:45"><name pos:start="115:44" pos:end="115:45">ts</name></expr></argument>, <argument pos:start="115:48" pos:end="115:54"><expr pos:start="115:48" pos:end="115:54"><name pos:start="115:48" pos:end="115:54">pmt_pid</name></expr></argument>, <argument pos:start="115:57" pos:end="115:62"><expr pos:start="115:57" pos:end="115:62"><name pos:start="115:57" pos:end="115:62">pmt_cb</name></expr></argument>, <argument pos:start="115:65" pos:end="115:66"><expr pos:start="115:65" pos:end="115:66"><name pos:start="115:65" pos:end="115:66">ts</name></expr></argument>, <argument pos:start="115:69" pos:end="115:69"><expr pos:start="115:69" pos:end="115:69"><literal type="number" pos:start="115:69" pos:end="115:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:35"><expr pos:start="117:13" pos:end="117:34"><call pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:25">add_pat_entry</name><argument_list pos:start="117:26" pos:end="117:34">(<argument pos:start="117:27" pos:end="117:28"><expr pos:start="117:27" pos:end="117:28"><name pos:start="117:27" pos:end="117:28">ts</name></expr></argument>, <argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">sid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:39"><expr pos:start="119:13" pos:end="119:38"><call pos:start="119:13" pos:end="119:38"><name pos:start="119:13" pos:end="119:26">add_pid_to_pmt</name><argument_list pos:start="119:27" pos:end="119:38">(<argument pos:start="119:28" pos:end="119:29"><expr pos:start="119:28" pos:end="119:29"><name pos:start="119:28" pos:end="119:29">ts</name></expr></argument>, <argument pos:start="119:32" pos:end="119:34"><expr pos:start="119:32" pos:end="119:34"><name pos:start="119:32" pos:end="119:34">sid</name></expr></argument>, <argument pos:start="119:37" pos:end="119:37"><expr pos:start="119:37" pos:end="119:37"><literal type="number" pos:start="119:37" pos:end="119:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="119:41" pos:end="119:65">// add pat pid to program</comment>

            <expr_stmt pos:start="121:13" pos:end="121:45"><expr pos:start="121:13" pos:end="121:44"><call pos:start="121:13" pos:end="121:44"><name pos:start="121:13" pos:end="121:26">add_pid_to_pmt</name><argument_list pos:start="121:27" pos:end="121:44">(<argument pos:start="121:28" pos:end="121:29"><expr pos:start="121:28" pos:end="121:29"><name pos:start="121:28" pos:end="121:29">ts</name></expr></argument>, <argument pos:start="121:32" pos:end="121:34"><expr pos:start="121:32" pos:end="121:34"><name pos:start="121:32" pos:end="121:34">sid</name></expr></argument>, <argument pos:start="121:37" pos:end="121:43"><expr pos:start="121:37" pos:end="121:43"><name pos:start="121:37" pos:end="121:43">pmt_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="129:5" pos:end="147:5"><if pos:start="129:5" pos:end="147:5">if <condition pos:start="129:8" pos:end="129:16">(<expr pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:11">sid</name> <operator pos:start="129:13" pos:end="129:13">&lt;</operator> <literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>)</condition> <block pos:start="129:18" pos:end="147:5">{<block_content pos:start="131:9" pos:end="145:9">

        <decl_stmt pos:start="131:9" pos:end="131:16"><decl pos:start="131:9" pos:end="131:13"><type pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">int</name></type> <name pos:start="131:13" pos:end="131:13">i</name></decl>,<decl pos:start="131:15" pos:end="131:15"><type ref="prev" pos:start="131:9" pos:end="131:11"/><name pos:start="131:15" pos:end="131:15">j</name></decl>;</decl_stmt>

        <for pos:start="133:9" pos:end="145:9">for <control pos:start="133:13" pos:end="133:49">(<init pos:start="133:14" pos:end="133:17"><expr pos:start="133:14" pos:end="133:16"><name pos:start="133:14" pos:end="133:14">j</name><operator pos:start="133:15" pos:end="133:15">=</operator><literal type="number" pos:start="133:16" pos:end="133:16">0</literal></expr>;</init> <condition pos:start="133:19" pos:end="133:44"><expr pos:start="133:19" pos:end="133:43"><name pos:start="133:19" pos:end="133:19">j</name><operator pos:start="133:20" pos:end="133:20">&lt;</operator><name pos:start="133:21" pos:end="133:43"><name pos:start="133:21" pos:end="133:22">ts</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:30">stream</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:43">nb_programs</name></name></expr>;</condition> <incr pos:start="133:46" pos:end="133:48"><expr pos:start="133:46" pos:end="133:48"><name pos:start="133:46" pos:end="133:46">j</name><operator pos:start="133:47" pos:end="133:48">++</operator></expr></incr>)</control> <block pos:start="133:51" pos:end="145:9">{<block_content pos:start="135:13" pos:end="143:65">

            <for pos:start="135:13" pos:end="139:26">for <control pos:start="135:17" pos:end="135:44">(<init pos:start="135:18" pos:end="135:23"><expr pos:start="135:18" pos:end="135:22"><name pos:start="135:18" pos:end="135:18">i</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <literal type="number" pos:start="135:22" pos:end="135:22">0</literal></expr>;</init> <condition pos:start="135:25" pos:end="135:39"><expr pos:start="135:25" pos:end="135:38"><name pos:start="135:25" pos:end="135:25">i</name> <operator pos:start="135:27" pos:end="135:27">&lt;</operator> <name pos:start="135:29" pos:end="135:38"><name pos:start="135:29" pos:end="135:30">ts</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:38">nb_prg</name></name></expr>;</condition> <incr pos:start="135:41" pos:end="135:43"><expr pos:start="135:41" pos:end="135:43"><name pos:start="135:41" pos:end="135:41">i</name><operator pos:start="135:42" pos:end="135:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:17" pos:end="139:26"><block_content pos:start="137:17" pos:end="139:26">

                <if_stmt pos:start="137:17" pos:end="139:26"><if pos:start="137:17" pos:end="139:26">if <condition pos:start="137:20" pos:end="137:65">(<expr pos:start="137:21" pos:end="137:64"><name pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:22">ts</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:27">prg</name><index pos:start="137:28" pos:end="137:30">[<expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">i</name></expr>]</index></name><operator pos:start="137:31" pos:end="137:31">.</operator><name pos:start="137:32" pos:end="137:33">id</name> <operator pos:start="137:35" pos:end="137:36">==</operator> <name pos:start="137:38" pos:end="137:60"><name pos:start="137:38" pos:end="137:39">ts</name><operator pos:start="137:40" pos:end="137:41">-&gt;</operator><name pos:start="137:42" pos:end="137:47">stream</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:57">programs</name><index pos:start="137:58" pos:end="137:60">[<expr pos:start="137:59" pos:end="137:59"><name pos:start="137:59" pos:end="137:59">j</name></expr>]</index></name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:64">id</name></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:26"><block_content pos:start="139:21" pos:end="139:26">

                    <break pos:start="139:21" pos:end="139:26">break;</break></block_content></block></if></if_stmt></block_content></block></for>

            <if_stmt pos:start="141:13" pos:end="143:65"><if pos:start="141:13" pos:end="143:65">if <condition pos:start="141:16" pos:end="141:49">(<expr pos:start="141:17" pos:end="141:48"><name pos:start="141:17" pos:end="141:17">i</name><operator pos:start="141:18" pos:end="141:19">==</operator><name pos:start="141:20" pos:end="141:29"><name pos:start="141:20" pos:end="141:21">ts</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:29">nb_prg</name></name> <operator pos:start="141:31" pos:end="141:32">&amp;&amp;</operator> <operator pos:start="141:34" pos:end="141:34">!</operator><name pos:start="141:35" pos:end="141:48"><name pos:start="141:35" pos:end="141:36">ts</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:48">skip_clear</name></name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:65"><block_content pos:start="143:17" pos:end="143:65">

                <expr_stmt pos:start="143:17" pos:end="143:65"><expr pos:start="143:17" pos:end="143:64"><call pos:start="143:17" pos:end="143:64"><name pos:start="143:17" pos:end="143:31">clear_avprogram</name><argument_list pos:start="143:32" pos:end="143:64">(<argument pos:start="143:33" pos:end="143:34"><expr pos:start="143:33" pos:end="143:34"><name pos:start="143:33" pos:end="143:34">ts</name></expr></argument>, <argument pos:start="143:37" pos:end="143:63"><expr pos:start="143:37" pos:end="143:63"><name pos:start="143:37" pos:end="143:59"><name pos:start="143:37" pos:end="143:38">ts</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:46">stream</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:56">programs</name><index pos:start="143:57" pos:end="143:59">[<expr pos:start="143:58" pos:end="143:58"><name pos:start="143:58" pos:end="143:58">j</name></expr>]</index></name><operator pos:start="143:60" pos:end="143:61">-&gt;</operator><name pos:start="143:62" pos:end="143:63">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
