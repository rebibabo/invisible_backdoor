<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/489.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">input_get_buffer</name><parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">codec</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">AVFrame</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:32">codec</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:40">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:21">AVFilterBufferRef</name>  <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">ref</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">perms</name> <init pos:start="9:15" pos:end="9:29">= <expr pos:start="9:17" pos:end="9:29"><name pos:start="9:17" pos:end="9:29">AV_PERM_WRITE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">w</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">h</name></decl>, <decl pos:start="11:18" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:26"><name pos:start="11:18" pos:end="11:23">stride</name><index pos:start="11:24" pos:end="11:26">[<expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">edge</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if<condition pos:start="17:7" pos:end="17:43">(<expr pos:start="17:8" pos:end="17:42"><call pos:start="17:8" pos:end="17:42"><name pos:start="17:8" pos:end="17:26">av_image_check_size</name><argument_list pos:start="17:27" pos:end="17:42">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">w</name></expr></argument>, <argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">h</name></expr></argument>, <argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr></argument>, <argument pos:start="17:37" pos:end="17:41"><expr pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:41">codec</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:39"><if pos:start="23:5" pos:end="25:39">if <condition pos:start="23:8" pos:end="23:61">(<expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:13">codec</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">codec</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:34">capabilities</name></name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <name pos:start="23:38" pos:end="23:60">CODEC_CAP_NEG_LINESIZES</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:39"><block_content pos:start="25:9" pos:end="25:39">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:13">perms</name> <operator pos:start="25:15" pos:end="25:16">|=</operator> <name pos:start="25:18" pos:end="25:38">AV_PERM_NEG_LINESIZES</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if<condition pos:start="29:7" pos:end="29:49">(<expr pos:start="29:8" pos:end="29:48"><name pos:start="29:8" pos:end="29:24"><name pos:start="29:8" pos:end="29:10">pic</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:24">buffer_hints</name></name> <operator pos:start="29:26" pos:end="29:26">&amp;</operator> <name pos:start="29:28" pos:end="29:48">FF_BUFFER_HINTS_VALID</name></expr>)</condition> <block pos:start="29:51" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:81">

        <if_stmt pos:start="31:9" pos:end="31:79"><if pos:start="31:9" pos:end="31:79">if<condition pos:start="31:11" pos:end="31:56">(<expr pos:start="31:12" pos:end="31:55"><name pos:start="31:12" pos:end="31:28"><name pos:start="31:12" pos:end="31:14">pic</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">buffer_hints</name></name> <operator pos:start="31:30" pos:end="31:30">&amp;</operator> <name pos:start="31:32" pos:end="31:55">FF_BUFFER_HINTS_READABLE</name></expr>)</condition><block type="pseudo" pos:start="31:58" pos:end="31:79"><block_content pos:start="31:58" pos:end="31:79"> <expr_stmt pos:start="31:58" pos:end="31:79"><expr pos:start="31:58" pos:end="31:78"><name pos:start="31:58" pos:end="31:62">perms</name> <operator pos:start="31:64" pos:end="31:65">|=</operator> <name pos:start="31:67" pos:end="31:78">AV_PERM_READ</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="33:83"><if pos:start="33:9" pos:end="33:83">if<condition pos:start="33:11" pos:end="33:56">(<expr pos:start="33:12" pos:end="33:55"><name pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:14">pic</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:28">buffer_hints</name></name> <operator pos:start="33:30" pos:end="33:30">&amp;</operator> <name pos:start="33:32" pos:end="33:55">FF_BUFFER_HINTS_PRESERVE</name></expr>)</condition><block type="pseudo" pos:start="33:58" pos:end="33:83"><block_content pos:start="33:58" pos:end="33:83"> <expr_stmt pos:start="33:58" pos:end="33:83"><expr pos:start="33:58" pos:end="33:82"><name pos:start="33:58" pos:end="33:62">perms</name> <operator pos:start="33:64" pos:end="33:65">|=</operator> <name pos:start="33:67" pos:end="33:82">AV_PERM_PRESERVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="35:81"><if pos:start="35:9" pos:end="35:81">if<condition pos:start="35:11" pos:end="35:56">(<expr pos:start="35:12" pos:end="35:55"><name pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:14">pic</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:28">buffer_hints</name></name> <operator pos:start="35:30" pos:end="35:30">&amp;</operator> <name pos:start="35:32" pos:end="35:55">FF_BUFFER_HINTS_REUSABLE</name></expr>)</condition><block type="pseudo" pos:start="35:58" pos:end="35:81"><block_content pos:start="35:58" pos:end="35:81"> <expr_stmt pos:start="35:58" pos:end="35:81"><expr pos:start="35:58" pos:end="35:80"><name pos:start="35:58" pos:end="35:62">perms</name> <operator pos:start="35:64" pos:end="35:65">|=</operator> <name pos:start="35:67" pos:end="35:80">AV_PERM_REUSE2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="39:64"><if pos:start="39:5" pos:end="39:64">if<condition pos:start="39:7" pos:end="39:22">(<expr pos:start="39:8" pos:end="39:21"><name pos:start="39:8" pos:end="39:21"><name pos:start="39:8" pos:end="39:10">pic</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:21">reference</name></name></expr>)</condition><block type="pseudo" pos:start="39:24" pos:end="39:64"><block_content pos:start="39:24" pos:end="39:64"> <expr_stmt pos:start="39:24" pos:end="39:64"><expr pos:start="39:24" pos:end="39:63"><name pos:start="39:24" pos:end="39:28">perms</name> <operator pos:start="39:30" pos:end="39:31">|=</operator> <name pos:start="39:33" pos:end="39:44">AV_PERM_READ</name> <operator pos:start="39:46" pos:end="39:46">|</operator> <name pos:start="39:48" pos:end="39:63">AV_PERM_PRESERVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:5">w</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:5">h</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:13">codec</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:21">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:29">avcodec_align_dimensions2</name><argument_list pos:start="47:30" pos:end="47:52">(<argument pos:start="47:31" pos:end="47:35"><expr pos:start="47:31" pos:end="47:35"><name pos:start="47:31" pos:end="47:35">codec</name></expr></argument>, <argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><operator pos:start="47:38" pos:end="47:38">&amp;</operator><name pos:start="47:39" pos:end="47:39">w</name></expr></argument>, <argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><operator pos:start="47:42" pos:end="47:42">&amp;</operator><name pos:start="47:43" pos:end="47:43">h</name></expr></argument>, <argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><name pos:start="47:46" pos:end="47:51">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:77"><expr pos:start="49:5" pos:end="49:76"><name pos:start="49:5" pos:end="49:8">edge</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <ternary pos:start="49:12" pos:end="49:76"><condition pos:start="49:12" pos:end="49:47"><expr pos:start="49:12" pos:end="49:45"><name pos:start="49:12" pos:end="49:23"><name pos:start="49:12" pos:end="49:16">codec</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">flags</name></name> <operator pos:start="49:25" pos:end="49:25">&amp;</operator> <name pos:start="49:27" pos:end="49:45">CODEC_FLAG_EMU_EDGE</name></expr> ?</condition><then pos:start="49:49" pos:end="49:49"> <expr pos:start="49:49" pos:end="49:49"><literal type="number" pos:start="49:49" pos:end="49:49">0</literal></expr> </then><else pos:start="49:51" pos:end="49:76">: <expr pos:start="49:53" pos:end="49:76"><call pos:start="49:53" pos:end="49:76"><name pos:start="49:53" pos:end="49:74">avcodec_get_edge_width</name><argument_list pos:start="49:75" pos:end="49:76">()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:5">w</name> <operator pos:start="51:7" pos:end="51:8">+=</operator> <name pos:start="51:10" pos:end="51:13">edge</name> <operator pos:start="51:15" pos:end="51:16">&lt;&lt;</operator> <literal type="number" pos:start="51:18" pos:end="51:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:19"><expr pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:5">h</name> <operator pos:start="53:7" pos:end="53:8">+=</operator> <name pos:start="53:10" pos:end="53:13">edge</name> <operator pos:start="53:15" pos:end="53:16">&lt;&lt;</operator> <literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="59:18"><if pos:start="57:5" pos:end="59:18">if<condition pos:start="57:7" pos:end="57:72">(<expr pos:start="57:8" pos:end="57:71"><operator pos:start="57:8" pos:end="57:8">!</operator><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:12">ref</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:70"><name pos:start="57:16" pos:end="57:40">avfilter_get_video_buffer</name><argument_list pos:start="57:41" pos:end="57:70">(<argument pos:start="57:42" pos:end="57:56"><expr pos:start="57:42" pos:end="57:56"><name pos:start="57:42" pos:end="57:56"><name pos:start="57:42" pos:end="57:44">ctx</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:53">outputs</name><index pos:start="57:54" pos:end="57:56">[<expr pos:start="57:55" pos:end="57:55"><literal type="number" pos:start="57:55" pos:end="57:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:59" pos:end="57:63"><expr pos:start="57:59" pos:end="57:63"><name pos:start="57:59" pos:end="57:63">perms</name></expr></argument>, <argument pos:start="57:66" pos:end="57:66"><expr pos:start="57:66" pos:end="57:66"><name pos:start="57:66" pos:end="57:66">w</name></expr></argument>, <argument pos:start="57:69" pos:end="57:69"><expr pos:start="57:69" pos:end="57:69"><name pos:start="57:69" pos:end="57:69">h</name></expr></argument>)</argument_list></call><operator pos:start="57:71" pos:end="57:71">)</operator></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:18"><block_content pos:start="59:9" pos:end="59:18">

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:7">ref</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:14">video</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:17">w</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:25">codec</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:32">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:7">ref</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:14">video</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:17">h</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:25">codec</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:33">height</name></name></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="85:5">for<control pos:start="67:8" pos:end="67:27">(<init pos:start="67:9" pos:end="67:14"><expr pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:9">i</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <literal type="number" pos:start="67:13" pos:end="67:13">0</literal></expr>;</init> <condition pos:start="67:16" pos:end="67:21"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:16">i</name> <operator pos:start="67:18" pos:end="67:18">&lt;</operator> <literal type="number" pos:start="67:20" pos:end="67:20">4</literal></expr>;</condition> <incr pos:start="67:23" pos:end="67:26"><expr pos:start="67:23" pos:end="67:26"><name pos:start="67:23" pos:end="67:23">i</name> <operator pos:start="67:25" pos:end="67:26">++</operator></expr></incr>)</control> <block pos:start="67:29" pos:end="85:5">{<block_content pos:start="69:9" pos:end="83:44">

        <decl_stmt pos:start="69:9" pos:end="69:101"><decl pos:start="69:9" pos:end="69:100"><type pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16">unsigned</name></type> <name pos:start="69:18" pos:end="69:23">hshift</name> <init pos:start="69:25" pos:end="69:100">= <expr pos:start="69:27" pos:end="69:100"><ternary pos:start="69:27" pos:end="69:100"><condition pos:start="69:27" pos:end="69:46"><expr pos:start="69:27" pos:end="69:44"><operator pos:start="69:27" pos:end="69:27">(</operator><name pos:start="69:28" pos:end="69:28">i</name> <operator pos:start="69:30" pos:end="69:31">==</operator> <literal type="number" pos:start="69:33" pos:end="69:33">1</literal> <operator pos:start="69:35" pos:end="69:36">||</operator> <name pos:start="69:38" pos:end="69:38">i</name> <operator pos:start="69:40" pos:end="69:41">==</operator> <literal type="number" pos:start="69:43" pos:end="69:43">2</literal><operator pos:start="69:44" pos:end="69:44">)</operator></expr> ?</condition><then pos:start="69:48" pos:end="69:96"> <expr pos:start="69:48" pos:end="69:96"><name pos:start="69:48" pos:end="69:82"><name pos:start="69:48" pos:end="69:69">av_pix_fmt_descriptors</name><index pos:start="69:70" pos:end="69:82">[<expr pos:start="69:71" pos:end="69:81"><name pos:start="69:71" pos:end="69:81"><name pos:start="69:71" pos:end="69:73">ref</name><operator pos:start="69:74" pos:end="69:75">-&gt;</operator><name pos:start="69:76" pos:end="69:81">format</name></name></expr>]</index></name><operator pos:start="69:83" pos:end="69:83">.</operator><name pos:start="69:84" pos:end="69:96">log2_chroma_w</name></expr> </then><else pos:start="69:98" pos:end="69:100">: <expr pos:start="69:100" pos:end="69:100"><literal type="number" pos:start="69:100" pos:end="69:100">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:101"><decl pos:start="71:9" pos:end="71:100"><type pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:16">unsigned</name></type> <name pos:start="71:18" pos:end="71:23">vshift</name> <init pos:start="71:25" pos:end="71:100">= <expr pos:start="71:27" pos:end="71:100"><ternary pos:start="71:27" pos:end="71:100"><condition pos:start="71:27" pos:end="71:46"><expr pos:start="71:27" pos:end="71:44"><operator pos:start="71:27" pos:end="71:27">(</operator><name pos:start="71:28" pos:end="71:28">i</name> <operator pos:start="71:30" pos:end="71:31">==</operator> <literal type="number" pos:start="71:33" pos:end="71:33">1</literal> <operator pos:start="71:35" pos:end="71:36">||</operator> <name pos:start="71:38" pos:end="71:38">i</name> <operator pos:start="71:40" pos:end="71:41">==</operator> <literal type="number" pos:start="71:43" pos:end="71:43">2</literal><operator pos:start="71:44" pos:end="71:44">)</operator></expr> ?</condition><then pos:start="71:48" pos:end="71:96"> <expr pos:start="71:48" pos:end="71:96"><name pos:start="71:48" pos:end="71:82"><name pos:start="71:48" pos:end="71:69">av_pix_fmt_descriptors</name><index pos:start="71:70" pos:end="71:82">[<expr pos:start="71:71" pos:end="71:81"><name pos:start="71:71" pos:end="71:81"><name pos:start="71:71" pos:end="71:73">ref</name><operator pos:start="71:74" pos:end="71:75">-&gt;</operator><name pos:start="71:76" pos:end="71:81">format</name></name></expr>]</index></name><operator pos:start="71:83" pos:end="71:83">.</operator><name pos:start="71:84" pos:end="71:96">log2_chroma_h</name></expr> </then><else pos:start="71:98" pos:end="71:100">: <expr pos:start="71:100" pos:end="71:100"><literal type="number" pos:start="71:100" pos:end="71:100">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:25">(<expr pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:15">ref</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">data</name><index pos:start="75:22" pos:end="75:24">[<expr pos:start="75:23" pos:end="75:23"><name pos:start="75:23" pos:end="75:23">i</name></expr>]</index></name></expr>)</condition> <block pos:start="75:27" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:88">

            <expr_stmt pos:start="77:13" pos:end="77:88"><expr pos:start="77:13" pos:end="77:87"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:15">ref</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:21">data</name><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">i</name></expr>]</index></name>    <operator pos:start="77:29" pos:end="77:30">+=</operator> <operator pos:start="77:32" pos:end="77:32">(</operator><name pos:start="77:33" pos:end="77:36">edge</name> <operator pos:start="77:38" pos:end="77:39">&gt;&gt;</operator> <name pos:start="77:41" pos:end="77:46">hshift</name><operator pos:start="77:47" pos:end="77:47">)</operator> <operator pos:start="77:49" pos:end="77:49">+</operator> <operator pos:start="77:51" pos:end="77:51">(</operator><operator pos:start="77:52" pos:end="77:52">(</operator><name pos:start="77:53" pos:end="77:56">edge</name> <operator pos:start="77:58" pos:end="77:58">*</operator> <name pos:start="77:60" pos:end="77:75"><name pos:start="77:60" pos:end="77:62">ref</name><operator pos:start="77:63" pos:end="77:64">-&gt;</operator><name pos:start="77:65" pos:end="77:72">linesize</name><index pos:start="77:73" pos:end="77:75">[<expr pos:start="77:74" pos:end="77:74"><name pos:start="77:74" pos:end="77:74">i</name></expr>]</index></name><operator pos:start="77:76" pos:end="77:76">)</operator> <operator pos:start="77:78" pos:end="77:79">&gt;&gt;</operator> <name pos:start="77:81" pos:end="77:86">vshift</name><operator pos:start="77:87" pos:end="77:87">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:40"><expr pos:start="81:9" pos:end="81:39"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:11">pic</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:17">data</name><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><name pos:start="81:19" pos:end="81:19">i</name></expr>]</index></name>     <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:30">ref</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:36">data</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><name pos:start="81:38" pos:end="81:38">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:11">pic</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:21">linesize</name><index pos:start="83:22" pos:end="83:24">[<expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">i</name></expr>]</index></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:43"><name pos:start="83:28" pos:end="83:30">ref</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:40">linesize</name><index pos:start="83:41" pos:end="83:43">[<expr pos:start="83:42" pos:end="83:42"><name pos:start="83:42" pos:end="83:42">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="87:5" pos:end="87:22"><expr pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:7">pic</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:15">opaque</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:21">ref</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:26"><expr pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:12"><name pos:start="89:5" pos:end="89:7">pic</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:12">age</name></name>    <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:25">INT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:7">pic</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:13">type</name></name>   <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:37">FF_BUFFER_TYPE_USER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:52"><expr pos:start="93:5" pos:end="93:51"><name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:7">pic</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:25">reordered_opaque</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:51"><name pos:start="93:29" pos:end="93:33">codec</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:51">reordered_opaque</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="97:49"><if pos:start="95:5" pos:end="95:50">if<condition pos:start="95:7" pos:end="95:18">(<expr pos:start="95:8" pos:end="95:17"><name pos:start="95:8" pos:end="95:17"><name pos:start="95:8" pos:end="95:12">codec</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:17">pkt</name></name></expr>)</condition><block type="pseudo" pos:start="95:20" pos:end="95:50"><block_content pos:start="95:20" pos:end="95:50"> <expr_stmt pos:start="95:20" pos:end="95:50"><expr pos:start="95:20" pos:end="95:49"><name pos:start="95:20" pos:end="95:31"><name pos:start="95:20" pos:end="95:22">pic</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:31">pkt_pts</name></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:49"><name pos:start="95:35" pos:end="95:39">codec</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:44">pkt</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:49">pts</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="97:5" pos:end="97:49">else<block type="pseudo" pos:start="97:20" pos:end="97:49"><block_content pos:start="97:20" pos:end="97:49">           <expr_stmt pos:start="97:20" pos:end="97:49"><expr pos:start="97:20" pos:end="97:48"><name pos:start="97:20" pos:end="97:31"><name pos:start="97:20" pos:end="97:22">pic</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:31">pkt_pts</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <name pos:start="97:35" pos:end="97:48">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
