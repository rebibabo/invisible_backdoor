<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9685.c" pos:tabs="8"><function pos:start="1:1" pos:end="567:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">mov_fix_index</name><parameter_list pos:start="1:26" pos:end="1:56">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:36">MOVContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mov</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:51">AVStream</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="567:1">{<block_content pos:start="5:5" pos:end="565:52">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MOVStreamContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">msc</name> <init pos:start="5:27" pos:end="5:41">= <expr pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:30">st</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVIndexEntry</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">e_old</name> <init pos:start="7:25" pos:end="7:43">= <expr pos:start="7:27" pos:end="7:43"><name pos:start="7:27" pos:end="7:43"><name pos:start="7:27" pos:end="7:28">st</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:43">index_entries</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">nb_old</name> <init pos:start="9:16" pos:end="9:37">= <expr pos:start="9:18" pos:end="9:37"><name pos:start="9:18" pos:end="9:37"><name pos:start="9:18" pos:end="9:19">st</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:37">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:24"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:22">AVIndexEntry</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:33">e_old_end</name> <init pos:start="11:35" pos:end="11:50">= <expr pos:start="11:37" pos:end="11:50"><name pos:start="11:37" pos:end="11:41">e_old</name> <operator pos:start="11:43" pos:end="11:43">+</operator> <name pos:start="11:45" pos:end="11:50">nb_old</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:24"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:22">AVIndexEntry</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:31">current</name> <init pos:start="13:33" pos:end="13:38">= <expr pos:start="13:35" pos:end="13:38"><name pos:start="13:35" pos:end="13:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">MOVStts</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:26">ctts_data_old</name> <init pos:start="15:28" pos:end="15:43">= <expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:32">msc</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:43">ctts_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:26">ctts_index_old</name> <init pos:start="17:28" pos:end="17:30">= <expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:27">ctts_sample_old</name> <init pos:start="19:29" pos:end="19:31">= <expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:44"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:26">ctts_count_old</name> <init pos:start="21:28" pos:end="21:44">= <expr pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:32">msc</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:44">ctts_count</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:36"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:32">edit_list_media_time</name> <init pos:start="23:34" pos:end="23:36">= <expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:35"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:30">edit_list_duration</name> <init pos:start="25:32" pos:end="25:34">= <expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:31"><decl pos:start="27:5" pos:end="27:30"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:26">frame_duration</name> <init pos:start="27:28" pos:end="27:30">= <expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:38"><decl pos:start="29:5" pos:end="29:37"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:33">edit_list_dts_counter</name> <init pos:start="29:35" pos:end="29:37">= <expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:40"><decl pos:start="31:5" pos:end="31:39"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">int64_t</name></type> <name pos:start="31:13" pos:end="31:35">edit_list_dts_entry_end</name> <init pos:start="31:37" pos:end="31:39">= <expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:44"><decl pos:start="33:5" pos:end="33:43"><type pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:11">int64_t</name></type> <name pos:start="33:13" pos:end="33:39">edit_list_start_ctts_sample</name> <init pos:start="33:41" pos:end="33:43">= <expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:21"><decl pos:start="35:5" pos:end="35:20"><type pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:11">int64_t</name></type> <name pos:start="35:13" pos:end="35:20">curr_cts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:32"><decl pos:start="37:5" pos:end="37:31"><type pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:11">int64_t</name></type> <name pos:start="37:13" pos:end="37:27">edit_list_index</name> <init pos:start="37:29" pos:end="37:31">= <expr pos:start="37:31" pos:end="37:31"><literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:18"><decl pos:start="39:5" pos:end="39:17"><type pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:11">int64_t</name></type> <name pos:start="39:13" pos:end="39:17">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:29"><decl pos:start="41:5" pos:end="41:28"><type pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:11">int64_t</name></type> <name pos:start="41:13" pos:end="41:28">index_ctts_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:14"><decl pos:start="43:5" pos:end="43:13"><type pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:7">int</name></type> <name pos:start="43:9" pos:end="43:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:41"><decl pos:start="45:5" pos:end="45:40"><type pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:12">unsigned</name> <name pos:start="45:14" pos:end="45:16">int</name></type> <name pos:start="45:18" pos:end="45:36">ctts_allocated_size</name> <init pos:start="45:38" pos:end="45:40">= <expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:26"><decl pos:start="47:5" pos:end="47:25"><type pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:11">int64_t</name></type> <name pos:start="47:13" pos:end="47:21">start_dts</name> <init pos:start="47:23" pos:end="47:25">= <expr pos:start="47:25" pos:end="47:25"><literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:41"><decl pos:start="49:5" pos:end="49:40"><type pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:11">int64_t</name></type> <name pos:start="49:13" pos:end="49:36">edit_list_media_time_dts</name> <init pos:start="49:38" pos:end="49:40">= <expr pos:start="49:40" pos:end="49:40"><literal type="number" pos:start="49:40" pos:end="49:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:44"><decl pos:start="51:5" pos:end="51:43"><type pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:11">int64_t</name></type> <name pos:start="51:13" pos:end="51:39">edit_list_start_encountered</name> <init pos:start="51:41" pos:end="51:43">= <expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:33"><decl pos:start="53:5" pos:end="53:32"><type pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:11">int64_t</name></type> <name pos:start="53:13" pos:end="53:28">search_timestamp</name> <init pos:start="53:30" pos:end="53:32">= <expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:42"><decl pos:start="55:5" pos:end="55:41"><type pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:11">int64_t</name><modifier pos:start="55:12" pos:end="55:12">*</modifier></type> <name pos:start="55:14" pos:end="55:34">frame_duration_buffer</name> <init pos:start="55:36" pos:end="55:41">= <expr pos:start="55:38" pos:end="55:41"><name pos:start="55:38" pos:end="55:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:32"><decl pos:start="57:5" pos:end="57:31"><type pos:start="57:5" pos:end="57:7"><name pos:start="57:5" pos:end="57:7">int</name></type> <name pos:start="57:9" pos:end="57:27">num_discarded_begin</name> <init pos:start="57:29" pos:end="57:31">= <expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:39"><decl pos:start="59:5" pos:end="59:38"><type pos:start="59:5" pos:end="59:7"><name pos:start="59:5" pos:end="59:7">int</name></type> <name pos:start="59:9" pos:end="59:33">first_non_zero_audio_edit</name> <init pos:start="59:35" pos:end="59:38">= <expr pos:start="59:37" pos:end="59:38"><operator pos:start="59:37" pos:end="59:37">-</operator><literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="61:32"><decl pos:start="61:5" pos:end="61:31"><type pos:start="61:5" pos:end="61:7"><name pos:start="61:5" pos:end="61:7">int</name></type> <name pos:start="61:9" pos:end="61:27">packet_skip_samples</name> <init pos:start="61:29" pos:end="61:31">= <expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="63:5" pos:end="63:39"><decl pos:start="63:5" pos:end="63:38"><type pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:17">MOVIndexRange</name> <modifier pos:start="63:19" pos:end="63:19">*</modifier></type><name pos:start="63:20" pos:end="63:38">current_index_range</name></decl>;</decl_stmt>



    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:63">(<expr pos:start="67:9" pos:end="67:62"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:23"><name pos:start="67:10" pos:end="67:12">msc</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:23">elst_data</name></name> <operator pos:start="67:25" pos:end="67:26">||</operator> <name pos:start="67:28" pos:end="67:42"><name pos:start="67:28" pos:end="67:30">msc</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:42">elst_count</name></name> <operator pos:start="67:44" pos:end="67:45">&lt;=</operator> <literal type="number" pos:start="67:47" pos:end="67:47">0</literal> <operator pos:start="67:49" pos:end="67:50">||</operator> <name pos:start="67:52" pos:end="67:57">nb_old</name> <operator pos:start="67:59" pos:end="67:60">&lt;=</operator> <literal type="number" pos:start="67:62" pos:end="67:62">0</literal></expr>)</condition> <block pos:start="67:65" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:15">

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="75:5" pos:end="75:38">// allocate the index ranges array</comment>

    <expr_stmt pos:start="77:5" pos:end="77:88"><expr pos:start="77:5" pos:end="77:87"><name pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:7">msc</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:21">index_ranges</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <call pos:start="77:25" pos:end="77:87"><name pos:start="77:25" pos:end="77:33">av_malloc</name><argument_list pos:start="77:34" pos:end="77:87">(<argument pos:start="77:35" pos:end="77:86"><expr pos:start="77:35" pos:end="77:86"><operator pos:start="77:35" pos:end="77:35">(</operator><name pos:start="77:36" pos:end="77:50"><name pos:start="77:36" pos:end="77:38">msc</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:50">elst_count</name></name> <operator pos:start="77:52" pos:end="77:52">+</operator> <literal type="number" pos:start="77:54" pos:end="77:54">1</literal><operator pos:start="77:55" pos:end="77:55">)</operator> <operator pos:start="77:57" pos:end="77:57">*</operator> <sizeof pos:start="77:59" pos:end="77:86">sizeof<argument_list pos:start="77:65" pos:end="77:86">(<argument pos:start="77:66" pos:end="77:85"><expr pos:start="77:66" pos:end="77:85"><name pos:start="77:66" pos:end="77:85"><name pos:start="77:66" pos:end="77:68">msc</name><operator pos:start="77:69" pos:end="77:70">-&gt;</operator><name pos:start="77:71" pos:end="77:82">index_ranges</name><index pos:start="77:83" pos:end="77:85">[<expr pos:start="77:84" pos:end="77:84"><literal type="number" pos:start="77:84" pos:end="77:84">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:27">(<expr pos:start="79:9" pos:end="79:26"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:26"><name pos:start="79:10" pos:end="79:12">msc</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:26">index_ranges</name></name></expr>)</condition> <block pos:start="79:29" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:15">

        <expr_stmt pos:start="81:9" pos:end="81:79"><expr pos:start="81:9" pos:end="81:78"><call pos:start="81:9" pos:end="81:78"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:78">(<argument pos:start="81:16" pos:end="81:22"><expr pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:18">mov</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:22">fc</name></name></expr></argument>, <argument pos:start="81:25" pos:end="81:36"><expr pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:39" pos:end="81:77"><expr pos:start="81:39" pos:end="81:77"><literal type="string" pos:start="81:39" pos:end="81:77">"Cannot allocate index ranges buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:49"><expr pos:start="87:5" pos:end="87:48"><name pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:7">msc</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:28">current_index_range</name></name> <operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:48"><name pos:start="87:32" pos:end="87:34">msc</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:48">index_ranges</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:48"><expr pos:start="89:5" pos:end="89:47"><name pos:start="89:5" pos:end="89:23">current_index_range</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:43"><name pos:start="89:27" pos:end="89:29">msc</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:43">index_ranges</name></name> <operator pos:start="89:45" pos:end="89:45">-</operator> <literal type="number" pos:start="89:47" pos:end="89:47">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="93:5" pos:end="93:46">// Clean AVStream from traces of old index</comment>

    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:6">st</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:21">index_entries</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:41"><expr pos:start="97:5" pos:end="97:40"><name pos:start="97:5" pos:end="97:36"><name pos:start="97:5" pos:end="97:6">st</name><operator pos:start="97:7" pos:end="97:8">-&gt;</operator><name pos:start="97:9" pos:end="97:36">index_entries_allocated_size</name></name> <operator pos:start="97:38" pos:end="97:38">=</operator> <literal type="number" pos:start="97:40" pos:end="97:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:6">st</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:24">nb_index_entries</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <literal type="number" pos:start="99:28" pos:end="99:28">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="103:5" pos:end="103:44">// Clean ctts fields of MOVStreamContext</comment>

    <expr_stmt pos:start="105:5" pos:end="105:26"><expr pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:7">msc</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:18">ctts_data</name></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:19"><name pos:start="107:5" pos:end="107:7">msc</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:19">ctts_count</name></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <literal type="number" pos:start="107:23" pos:end="107:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:7">msc</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:19">ctts_index</name></name> <operator pos:start="109:21" pos:end="109:21">=</operator> <literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:25"><expr pos:start="111:5" pos:end="111:24"><name pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:7">msc</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:20">ctts_sample</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <literal type="number" pos:start="111:24" pos:end="111:24">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="115:5" pos:end="115:77">// If the dts_shift is positive (in case of negative ctts values in mov),</comment>

    <comment type="line" pos:start="117:5" pos:end="117:39">// then negate the DTS by dts_shift</comment>

    <if_stmt pos:start="119:5" pos:end="121:50"><if pos:start="119:5" pos:end="121:50">if <condition pos:start="119:8" pos:end="119:27">(<expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:11">msc</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:22">dts_shift</name></name> <operator pos:start="119:24" pos:end="119:24">&gt;</operator> <literal type="number" pos:start="119:26" pos:end="119:26">0</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:50"><block_content pos:start="121:9" pos:end="121:50">

        <expr_stmt pos:start="121:9" pos:end="121:50"><expr pos:start="121:9" pos:end="121:49"><name pos:start="121:9" pos:end="121:31">edit_list_dts_entry_end</name> <operator pos:start="121:33" pos:end="121:34">-=</operator> <name pos:start="121:36" pos:end="121:49"><name pos:start="121:36" pos:end="121:38">msc</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:49">dts_shift</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="125:5" pos:end="125:69">// Offset the DTS by ctts[0] to make the PTS of the first frame 0</comment>

    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:44">(<expr pos:start="127:9" pos:end="127:43"><name pos:start="127:9" pos:end="127:21">ctts_data_old</name> <operator pos:start="127:23" pos:end="127:24">&amp;&amp;</operator> <name pos:start="127:26" pos:end="127:39">ctts_count_old</name> <operator pos:start="127:41" pos:end="127:41">&gt;</operator> <literal type="number" pos:start="127:43" pos:end="127:43">0</literal></expr>)</condition> <block pos:start="127:46" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:109">

        <expr_stmt pos:start="129:9" pos:end="129:61"><expr pos:start="129:9" pos:end="129:60"><name pos:start="129:9" pos:end="129:31">edit_list_dts_entry_end</name> <operator pos:start="129:33" pos:end="129:34">-=</operator> <name pos:start="129:36" pos:end="129:51"><name pos:start="129:36" pos:end="129:48">ctts_data_old</name><index pos:start="129:49" pos:end="129:51">[<expr pos:start="129:50" pos:end="129:50"><literal type="number" pos:start="129:50" pos:end="129:50">0</literal></expr>]</index></name><operator pos:start="129:52" pos:end="129:52">.</operator><name pos:start="129:53" pos:end="129:60">duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:109"><expr pos:start="131:9" pos:end="131:108"><call pos:start="131:9" pos:end="131:108"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="131:108">(<argument pos:start="131:16" pos:end="131:22"><expr pos:start="131:16" pos:end="131:22"><name pos:start="131:16" pos:end="131:22"><name pos:start="131:16" pos:end="131:18">mov</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:22">fc</name></name></expr></argument>, <argument pos:start="131:25" pos:end="131:36"><expr pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="131:39" pos:end="131:77"><expr pos:start="131:39" pos:end="131:77"><literal type="string" pos:start="131:39" pos:end="131:77">"Offset DTS by ctts[%d].duration: %d\n"</literal></expr></argument>, <argument pos:start="131:80" pos:end="131:80"><expr pos:start="131:80" pos:end="131:80"><literal type="number" pos:start="131:80" pos:end="131:80">0</literal></expr></argument>, <argument pos:start="131:83" pos:end="131:107"><expr pos:start="131:83" pos:end="131:107"><name pos:start="131:83" pos:end="131:98"><name pos:start="131:83" pos:end="131:95">ctts_data_old</name><index pos:start="131:96" pos:end="131:98">[<expr pos:start="131:97" pos:end="131:97"><literal type="number" pos:start="131:97" pos:end="131:97">0</literal></expr>]</index></name><operator pos:start="131:99" pos:end="131:99">.</operator><name pos:start="131:100" pos:end="131:107">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:40"><expr pos:start="137:5" pos:end="137:39"><name pos:start="137:5" pos:end="137:13">start_dts</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <name pos:start="137:17" pos:end="137:39">edit_list_dts_entry_end</name></expr>;</expr_stmt>



    <while pos:start="141:5" pos:end="541:5">while <condition pos:start="141:11" pos:end="143:69">(<expr pos:start="141:12" pos:end="143:68"><call pos:start="141:12" pos:end="143:68"><name pos:start="141:12" pos:end="141:30">get_edit_list_entry</name><argument_list pos:start="141:31" pos:end="143:68">(<argument pos:start="141:32" pos:end="141:34"><expr pos:start="141:32" pos:end="141:34"><name pos:start="141:32" pos:end="141:34">mov</name></expr></argument>, <argument pos:start="141:37" pos:end="141:39"><expr pos:start="141:37" pos:end="141:39"><name pos:start="141:37" pos:end="141:39">msc</name></expr></argument>, <argument pos:start="141:42" pos:end="141:56"><expr pos:start="141:42" pos:end="141:56"><name pos:start="141:42" pos:end="141:56">edit_list_index</name></expr></argument>, <argument pos:start="141:59" pos:end="141:79"><expr pos:start="141:59" pos:end="141:79"><operator pos:start="141:59" pos:end="141:59">&amp;</operator><name pos:start="141:60" pos:end="141:79">edit_list_media_time</name></expr></argument>,

                               <argument pos:start="143:32" pos:end="143:50"><expr pos:start="143:32" pos:end="143:50"><operator pos:start="143:32" pos:end="143:32">&amp;</operator><name pos:start="143:33" pos:end="143:50">edit_list_duration</name></expr></argument>, <argument pos:start="143:53" pos:end="143:67"><expr pos:start="143:53" pos:end="143:67"><name pos:start="143:53" pos:end="143:67"><name pos:start="143:53" pos:end="143:55">mov</name><operator pos:start="143:56" pos:end="143:57">-&gt;</operator><name pos:start="143:58" pos:end="143:67">time_scale</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:71" pos:end="541:5">{<block_content pos:start="145:9" pos:end="539:9">

        <expr_stmt pos:start="145:9" pos:end="147:85"><expr pos:start="145:9" pos:end="147:84"><call pos:start="145:9" pos:end="147:84"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="147:84">(<argument pos:start="145:16" pos:end="145:22"><expr pos:start="145:16" pos:end="145:22"><name pos:start="145:16" pos:end="145:22"><name pos:start="145:16" pos:end="145:18">mov</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:22">fc</name></name></expr></argument>, <argument pos:start="145:25" pos:end="145:36"><expr pos:start="145:25" pos:end="145:36"><name pos:start="145:25" pos:end="145:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="145:39" pos:end="145:125"><expr pos:start="145:39" pos:end="145:125"><literal type="string" pos:start="145:39" pos:end="145:70">"Processing st: %d, edit list %"</literal><name pos:start="145:71" pos:end="145:76">PRId64</name><literal type="string" pos:start="145:77" pos:end="145:94">" - media time: %"</literal><name pos:start="145:95" pos:end="145:100">PRId64</name><literal type="string" pos:start="145:101" pos:end="145:115">", duration: %"</literal><name pos:start="145:116" pos:end="145:121">PRId64</name><literal type="string" pos:start="145:122" pos:end="145:125">"\n"</literal></expr></argument>,

               <argument pos:start="147:16" pos:end="147:24"><expr pos:start="147:16" pos:end="147:24"><name pos:start="147:16" pos:end="147:24"><name pos:start="147:16" pos:end="147:17">st</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:24">index</name></name></expr></argument>, <argument pos:start="147:27" pos:end="147:41"><expr pos:start="147:27" pos:end="147:41"><name pos:start="147:27" pos:end="147:41">edit_list_index</name></expr></argument>, <argument pos:start="147:44" pos:end="147:63"><expr pos:start="147:44" pos:end="147:63"><name pos:start="147:44" pos:end="147:63">edit_list_media_time</name></expr></argument>, <argument pos:start="147:66" pos:end="147:83"><expr pos:start="147:66" pos:end="147:83"><name pos:start="147:66" pos:end="147:83">edit_list_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:26"><expr pos:start="149:9" pos:end="149:25"><name pos:start="149:9" pos:end="149:23">edit_list_index</name><operator pos:start="149:24" pos:end="149:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:56"><expr pos:start="151:9" pos:end="151:55"><name pos:start="151:9" pos:end="151:29">edit_list_dts_counter</name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:55">edit_list_dts_entry_end</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:54"><expr pos:start="153:9" pos:end="153:53"><name pos:start="153:9" pos:end="153:31">edit_list_dts_entry_end</name> <operator pos:start="153:33" pos:end="153:34">+=</operator> <name pos:start="153:36" pos:end="153:53">edit_list_duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:32"><expr pos:start="155:9" pos:end="155:31"><name pos:start="155:9" pos:end="155:27">num_discarded_begin</name> <operator pos:start="155:29" pos:end="155:29">=</operator> <literal type="number" pos:start="155:31" pos:end="155:31">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="161:9"><if pos:start="157:9" pos:end="161:9">if <condition pos:start="157:12" pos:end="157:39">(<expr pos:start="157:13" pos:end="157:38"><name pos:start="157:13" pos:end="157:32">edit_list_media_time</name> <operator pos:start="157:34" pos:end="157:35">==</operator> <operator pos:start="157:37" pos:end="157:37">-</operator><literal type="number" pos:start="157:38" pos:end="157:38">1</literal></expr>)</condition> <block pos:start="157:41" pos:end="161:9">{<block_content pos:start="159:13" pos:end="159:21">

            <continue pos:start="159:13" pos:end="159:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="165:9" pos:end="165:104">// If we encounter a non-negative edit list reset the skip_samples/start_pad fields and set them</comment>

        <comment type="line" pos:start="167:9" pos:end="167:44">// according to the edit list below.</comment>

        <if_stmt pos:start="169:9" pos:end="187:9"><if pos:start="169:9" pos:end="187:9">if <condition pos:start="169:12" pos:end="169:59">(<expr pos:start="169:13" pos:end="169:58"><name pos:start="169:13" pos:end="169:36"><name pos:start="169:13" pos:end="169:14">st</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:24">codecpar</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:36">codec_type</name></name> <operator pos:start="169:38" pos:end="169:39">==</operator> <name pos:start="169:41" pos:end="169:58">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="169:61" pos:end="187:9">{<block_content pos:start="171:13" pos:end="185:54">

            <if_stmt pos:start="171:13" pos:end="179:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:46">(<expr pos:start="171:17" pos:end="171:45"><name pos:start="171:17" pos:end="171:41">first_non_zero_audio_edit</name> <operator pos:start="171:43" pos:end="171:43">&lt;</operator> <literal type="number" pos:start="171:45" pos:end="171:45">0</literal></expr>)</condition> <block pos:start="171:48" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:46">

                <expr_stmt pos:start="173:17" pos:end="173:46"><expr pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:41">first_non_zero_audio_edit</name> <operator pos:start="173:43" pos:end="173:43">=</operator> <literal type="number" pos:start="173:45" pos:end="173:45">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="175:15" pos:end="179:13">else <block pos:start="175:20" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:46">

                <expr_stmt pos:start="177:17" pos:end="177:46"><expr pos:start="177:17" pos:end="177:45"><name pos:start="177:17" pos:end="177:41">first_non_zero_audio_edit</name> <operator pos:start="177:43" pos:end="177:43">=</operator> <literal type="number" pos:start="177:45" pos:end="177:45">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="183:13" pos:end="185:54"><if pos:start="183:13" pos:end="185:54">if <condition pos:start="183:16" pos:end="183:46">(<expr pos:start="183:17" pos:end="183:45"><name pos:start="183:17" pos:end="183:41">first_non_zero_audio_edit</name> <operator pos:start="183:43" pos:end="183:43">&gt;</operator> <literal type="number" pos:start="183:45" pos:end="183:45">0</literal></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:54"><block_content pos:start="185:17" pos:end="185:54">

                <expr_stmt pos:start="185:17" pos:end="185:54"><expr pos:start="185:17" pos:end="185:53"><name pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:18">st</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:32">skip_samples</name></name> <operator pos:start="185:34" pos:end="185:34">=</operator> <name pos:start="185:36" pos:end="185:49"><name pos:start="185:36" pos:end="185:38">msc</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:49">start_pad</name></name> <operator pos:start="185:51" pos:end="185:51">=</operator> <literal type="number" pos:start="185:53" pos:end="185:53">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="191:9" pos:end="191:41">//find closest previous key frame</comment>

        <expr_stmt pos:start="193:9" pos:end="193:56"><expr pos:start="193:9" pos:end="193:55"><name pos:start="193:9" pos:end="193:32">edit_list_media_time_dts</name> <operator pos:start="193:34" pos:end="193:34">=</operator> <name pos:start="193:36" pos:end="193:55">edit_list_media_time</name></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="199:9"><if pos:start="195:9" pos:end="199:9">if <condition pos:start="195:12" pos:end="195:31">(<expr pos:start="195:13" pos:end="195:30"><name pos:start="195:13" pos:end="195:26"><name pos:start="195:13" pos:end="195:15">msc</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:26">dts_shift</name></name> <operator pos:start="195:28" pos:end="195:28">&gt;</operator> <literal type="number" pos:start="195:30" pos:end="195:30">0</literal></expr>)</condition> <block pos:start="195:33" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:55">

            <expr_stmt pos:start="197:13" pos:end="197:55"><expr pos:start="197:13" pos:end="197:54"><name pos:start="197:13" pos:end="197:36">edit_list_media_time_dts</name> <operator pos:start="197:38" pos:end="197:39">-=</operator> <name pos:start="197:41" pos:end="197:54"><name pos:start="197:41" pos:end="197:43">msc</name><operator pos:start="197:44" pos:end="197:45">-&gt;</operator><name pos:start="197:46" pos:end="197:54">dts_shift</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="203:9" pos:end="203:86">// While reordering frame index according to edit list we must handle properly</comment>

        <comment type="line" pos:start="205:9" pos:end="205:72">// the scenario when edit list entry starts from none key frame.</comment>

        <comment type="line" pos:start="207:9" pos:end="207:93">// We find closest previous key frame and preserve it and consequent frames in index.</comment>

        <comment type="line" pos:start="209:9" pos:end="209:103">// All frames which are outside edit list entry time boundaries will be dropped after decoding.</comment>

        <expr_stmt pos:start="211:9" pos:end="211:52"><expr pos:start="211:9" pos:end="211:51"><name pos:start="211:9" pos:end="211:24">search_timestamp</name> <operator pos:start="211:26" pos:end="211:26">=</operator> <name pos:start="211:28" pos:end="211:51">edit_list_media_time_dts</name></expr>;</expr_stmt>

        <if_stmt pos:start="213:9" pos:end="223:9"><if pos:start="213:9" pos:end="223:9">if <condition pos:start="213:12" pos:end="213:59">(<expr pos:start="213:13" pos:end="213:58"><name pos:start="213:13" pos:end="213:36"><name pos:start="213:13" pos:end="213:14">st</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:24">codecpar</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:36">codec_type</name></name> <operator pos:start="213:38" pos:end="213:39">==</operator> <name pos:start="213:41" pos:end="213:58">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="213:61" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:93">

            <comment type="line" pos:start="215:13" pos:end="215:104">// Audio decoders like AAC need need a decoder delay samples previous to the current sample,</comment>

            <comment type="line" pos:start="217:13" pos:end="217:99">// to correctly decode this frame. Hence for audio we seek to a frame 1 sec. before the</comment>

            <comment type="line" pos:start="219:13" pos:end="219:63">// edit_list_media_time to cover the decoder delay.</comment>

            <expr_stmt pos:start="221:13" pos:end="221:93"><expr pos:start="221:13" pos:end="221:92"><name pos:start="221:13" pos:end="221:28">search_timestamp</name> <operator pos:start="221:30" pos:end="221:30">=</operator> <call pos:start="221:32" pos:end="221:92"><name pos:start="221:32" pos:end="221:36">FFMAX</name><argument_list pos:start="221:37" pos:end="221:92">(<argument pos:start="221:38" pos:end="221:71"><expr pos:start="221:38" pos:end="221:71"><name pos:start="221:38" pos:end="221:53">search_timestamp</name> <operator pos:start="221:55" pos:end="221:55">-</operator> <name pos:start="221:57" pos:end="221:71"><name pos:start="221:57" pos:end="221:59">msc</name><operator pos:start="221:60" pos:end="221:61">-&gt;</operator><name pos:start="221:62" pos:end="221:71">time_scale</name></name></expr></argument>, <argument pos:start="221:74" pos:end="221:91"><expr pos:start="221:74" pos:end="221:91"><name pos:start="221:74" pos:end="221:81"><name pos:start="221:74" pos:end="221:78">e_old</name><index pos:start="221:79" pos:end="221:81">[<expr pos:start="221:80" pos:end="221:80"><literal type="number" pos:start="221:80" pos:end="221:80">0</literal></expr>]</index></name><operator pos:start="221:82" pos:end="221:82">.</operator><name pos:start="221:83" pos:end="221:91">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="227:9" pos:end="227:80"><expr pos:start="227:9" pos:end="227:79"><name pos:start="227:9" pos:end="227:13">index</name> <operator pos:start="227:15" pos:end="227:15">=</operator> <call pos:start="227:17" pos:end="227:79"><name pos:start="227:17" pos:end="227:39">find_prev_closest_index</name><argument_list pos:start="227:40" pos:end="227:79">(<argument pos:start="227:41" pos:end="227:42"><expr pos:start="227:41" pos:end="227:42"><name pos:start="227:41" pos:end="227:42">st</name></expr></argument>, <argument pos:start="227:45" pos:end="227:49"><expr pos:start="227:45" pos:end="227:49"><name pos:start="227:45" pos:end="227:49">e_old</name></expr></argument>, <argument pos:start="227:52" pos:end="227:57"><expr pos:start="227:52" pos:end="227:57"><name pos:start="227:52" pos:end="227:57">nb_old</name></expr></argument>, <argument pos:start="227:60" pos:end="227:75"><expr pos:start="227:60" pos:end="227:75"><name pos:start="227:60" pos:end="227:75">search_timestamp</name></expr></argument>, <argument pos:start="227:78" pos:end="227:78"><expr pos:start="227:78" pos:end="227:78"><literal type="number" pos:start="227:78" pos:end="227:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="257:9"><if pos:start="229:9" pos:end="257:9">if <condition pos:start="229:12" pos:end="229:24">(<expr pos:start="229:13" pos:end="229:23"><name pos:start="229:13" pos:end="229:17">index</name> <operator pos:start="229:19" pos:end="229:20">==</operator> <operator pos:start="229:22" pos:end="229:22">-</operator><literal type="number" pos:start="229:23" pos:end="229:23">1</literal></expr>)</condition> <block pos:start="229:26" pos:end="257:9">{<block_content pos:start="231:13" pos:end="255:13">

            <expr_stmt pos:start="231:13" pos:end="235:65"><expr pos:start="231:13" pos:end="235:64"><call pos:start="231:13" pos:end="235:64"><name pos:start="231:13" pos:end="231:18">av_log</name><argument_list pos:start="231:19" pos:end="235:64">(<argument pos:start="231:20" pos:end="231:26"><expr pos:start="231:20" pos:end="231:26"><name pos:start="231:20" pos:end="231:26"><name pos:start="231:20" pos:end="231:22">mov</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:26">fc</name></name></expr></argument>, <argument pos:start="231:29" pos:end="231:42"><expr pos:start="231:29" pos:end="231:42"><name pos:start="231:29" pos:end="231:42">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="233:20" pos:end="233:109"><expr pos:start="233:20" pos:end="233:109"><literal type="string" pos:start="233:20" pos:end="233:40">"st: %d edit list: %"</literal><name pos:start="233:41" pos:end="233:46">PRId64</name><literal type="string" pos:start="233:47" pos:end="233:99">" Missing key frame while searching for timestamp: %"</literal><name pos:start="233:100" pos:end="233:105">PRId64</name><literal type="string" pos:start="233:106" pos:end="233:109">"\n"</literal></expr></argument>,

                   <argument pos:start="235:20" pos:end="235:28"><expr pos:start="235:20" pos:end="235:28"><name pos:start="235:20" pos:end="235:28"><name pos:start="235:20" pos:end="235:21">st</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:28">index</name></name></expr></argument>, <argument pos:start="235:31" pos:end="235:45"><expr pos:start="235:31" pos:end="235:45"><name pos:start="235:31" pos:end="235:45">edit_list_index</name></expr></argument>, <argument pos:start="235:48" pos:end="235:63"><expr pos:start="235:48" pos:end="235:63"><name pos:start="235:48" pos:end="235:63">search_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:98"><expr pos:start="237:13" pos:end="237:97"><name pos:start="237:13" pos:end="237:17">index</name> <operator pos:start="237:19" pos:end="237:19">=</operator> <call pos:start="237:21" pos:end="237:97"><name pos:start="237:21" pos:end="237:43">find_prev_closest_index</name><argument_list pos:start="237:44" pos:end="237:97">(<argument pos:start="237:45" pos:end="237:46"><expr pos:start="237:45" pos:end="237:46"><name pos:start="237:45" pos:end="237:46">st</name></expr></argument>, <argument pos:start="237:49" pos:end="237:53"><expr pos:start="237:49" pos:end="237:53"><name pos:start="237:49" pos:end="237:53">e_old</name></expr></argument>, <argument pos:start="237:56" pos:end="237:61"><expr pos:start="237:56" pos:end="237:61"><name pos:start="237:56" pos:end="237:61">nb_old</name></expr></argument>, <argument pos:start="237:64" pos:end="237:79"><expr pos:start="237:64" pos:end="237:79"><name pos:start="237:64" pos:end="237:79">search_timestamp</name></expr></argument>, <argument pos:start="237:82" pos:end="237:96"><expr pos:start="237:82" pos:end="237:96"><name pos:start="237:82" pos:end="237:96">AVSEEK_FLAG_ANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="241:13" pos:end="255:13"><if pos:start="241:13" pos:end="255:13">if <condition pos:start="241:16" pos:end="241:28">(<expr pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:21">index</name> <operator pos:start="241:23" pos:end="241:24">==</operator> <operator pos:start="241:26" pos:end="241:26">-</operator><literal type="number" pos:start="241:27" pos:end="241:27">1</literal></expr>)</condition> <block pos:start="241:30" pos:end="255:13">{<block_content pos:start="243:17" pos:end="253:41">

                <expr_stmt pos:start="243:17" pos:end="249:69"><expr pos:start="243:17" pos:end="249:68"><call pos:start="243:17" pos:end="249:68"><name pos:start="243:17" pos:end="243:22">av_log</name><argument_list pos:start="243:23" pos:end="249:68">(<argument pos:start="243:24" pos:end="243:30"><expr pos:start="243:24" pos:end="243:30"><name pos:start="243:24" pos:end="243:30"><name pos:start="243:24" pos:end="243:26">mov</name><operator pos:start="243:27" pos:end="243:28">-&gt;</operator><name pos:start="243:29" pos:end="243:30">fc</name></name></expr></argument>, <argument pos:start="243:33" pos:end="243:46"><expr pos:start="243:33" pos:end="243:46"><name pos:start="243:33" pos:end="243:46">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="245:24" pos:end="247:65"><expr pos:start="245:24" pos:end="247:65"><literal type="string" pos:start="245:24" pos:end="245:43">"st: %d edit list %"</literal><name pos:start="245:44" pos:end="245:49">PRId64</name><literal type="string" pos:start="245:50" pos:end="245:98">" Cannot find an index entry before timestamp: %"</literal><name pos:start="245:99" pos:end="245:104">PRId64</name><literal type="string" pos:start="245:105" pos:end="245:109">".\n"</literal>

                       <literal type="string" pos:start="247:24" pos:end="247:65">"Rounding edit list media time to zero.\n"</literal></expr></argument>,

                       <argument pos:start="249:24" pos:end="249:32"><expr pos:start="249:24" pos:end="249:32"><name pos:start="249:24" pos:end="249:32"><name pos:start="249:24" pos:end="249:25">st</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:32">index</name></name></expr></argument>, <argument pos:start="249:35" pos:end="249:49"><expr pos:start="249:35" pos:end="249:49"><name pos:start="249:35" pos:end="249:49">edit_list_index</name></expr></argument>, <argument pos:start="249:52" pos:end="249:67"><expr pos:start="249:52" pos:end="249:67"><name pos:start="249:52" pos:end="249:67">search_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:26"><expr pos:start="251:17" pos:end="251:25"><name pos:start="251:17" pos:end="251:21">index</name> <operator pos:start="251:23" pos:end="251:23">=</operator> <literal type="number" pos:start="251:25" pos:end="251:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:41"><expr pos:start="253:17" pos:end="253:40"><name pos:start="253:17" pos:end="253:36">edit_list_media_time</name> <operator pos:start="253:38" pos:end="253:38">=</operator> <literal type="number" pos:start="253:40" pos:end="253:40">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:32"><expr pos:start="259:9" pos:end="259:31"><name pos:start="259:9" pos:end="259:15">current</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <name pos:start="259:19" pos:end="259:23">e_old</name> <operator pos:start="259:25" pos:end="259:25">+</operator> <name pos:start="259:27" pos:end="259:31">index</name></expr>;</expr_stmt>



        <expr_stmt pos:start="263:9" pos:end="263:27"><expr pos:start="263:9" pos:end="263:26"><name pos:start="263:9" pos:end="263:22">ctts_index_old</name> <operator pos:start="263:24" pos:end="263:24">=</operator> <literal type="number" pos:start="263:26" pos:end="263:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:28"><expr pos:start="265:9" pos:end="265:27"><name pos:start="265:9" pos:end="265:23">ctts_sample_old</name> <operator pos:start="265:25" pos:end="265:25">=</operator> <literal type="number" pos:start="265:27" pos:end="265:27">0</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="269:9" pos:end="269:58">// set ctts_index properly for the found key frame</comment>

        <for pos:start="271:9" pos:end="287:9">for <control pos:start="271:13" pos:end="271:80">(<init pos:start="271:14" pos:end="271:34"><expr pos:start="271:14" pos:end="271:33"><name pos:start="271:14" pos:end="271:29">index_ctts_count</name> <operator pos:start="271:31" pos:end="271:31">=</operator> <literal type="number" pos:start="271:33" pos:end="271:33">0</literal></expr>;</init> <condition pos:start="271:36" pos:end="271:60"><expr pos:start="271:36" pos:end="271:59"><name pos:start="271:36" pos:end="271:51">index_ctts_count</name> <operator pos:start="271:53" pos:end="271:53">&lt;</operator> <name pos:start="271:55" pos:end="271:59">index</name></expr>;</condition> <incr pos:start="271:62" pos:end="271:79"><expr pos:start="271:62" pos:end="271:79"><name pos:start="271:62" pos:end="271:77">index_ctts_count</name><operator pos:start="271:78" pos:end="271:79">++</operator></expr></incr>)</control> <block pos:start="271:82" pos:end="287:9">{<block_content pos:start="273:13" pos:end="285:13">

            <if_stmt pos:start="273:13" pos:end="285:13"><if pos:start="273:13" pos:end="285:13">if <condition pos:start="273:16" pos:end="273:65">(<expr pos:start="273:17" pos:end="273:64"><name pos:start="273:17" pos:end="273:29">ctts_data_old</name> <operator pos:start="273:31" pos:end="273:32">&amp;&amp;</operator> <name pos:start="273:34" pos:end="273:47">ctts_index_old</name> <operator pos:start="273:49" pos:end="273:49">&lt;</operator> <name pos:start="273:51" pos:end="273:64">ctts_count_old</name></expr>)</condition> <block pos:start="273:67" pos:end="285:13">{<block_content pos:start="275:17" pos:end="283:17">

                <expr_stmt pos:start="275:17" pos:end="275:34"><expr pos:start="275:17" pos:end="275:33"><name pos:start="275:17" pos:end="275:31">ctts_sample_old</name><operator pos:start="275:32" pos:end="275:33">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="277:17" pos:end="283:17"><if pos:start="277:17" pos:end="283:17">if <condition pos:start="277:20" pos:end="277:75">(<expr pos:start="277:21" pos:end="277:74"><name pos:start="277:21" pos:end="277:49"><name pos:start="277:21" pos:end="277:33">ctts_data_old</name><index pos:start="277:34" pos:end="277:49">[<expr pos:start="277:35" pos:end="277:48"><name pos:start="277:35" pos:end="277:48">ctts_index_old</name></expr>]</index></name><operator pos:start="277:50" pos:end="277:50">.</operator><name pos:start="277:51" pos:end="277:55">count</name> <operator pos:start="277:57" pos:end="277:58">==</operator> <name pos:start="277:60" pos:end="277:74">ctts_sample_old</name></expr>)</condition> <block pos:start="277:77" pos:end="283:17">{<block_content pos:start="279:21" pos:end="281:40">

                    <expr_stmt pos:start="279:21" pos:end="279:37"><expr pos:start="279:21" pos:end="279:36"><name pos:start="279:21" pos:end="279:34">ctts_index_old</name><operator pos:start="279:35" pos:end="279:36">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="281:21" pos:end="281:40"><expr pos:start="281:21" pos:end="281:39"><name pos:start="281:21" pos:end="281:35">ctts_sample_old</name> <operator pos:start="281:37" pos:end="281:37">=</operator> <literal type="number" pos:start="281:39" pos:end="281:39">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="291:9" pos:end="291:54"><expr pos:start="291:9" pos:end="291:53"><name pos:start="291:9" pos:end="291:35">edit_list_start_ctts_sample</name> <operator pos:start="291:37" pos:end="291:37">=</operator> <name pos:start="291:39" pos:end="291:53">ctts_sample_old</name></expr>;</expr_stmt>



        <comment type="line" pos:start="295:9" pos:end="295:67">// Iterate over index and arrange it according to edit list</comment>

        <expr_stmt pos:start="297:9" pos:end="297:40"><expr pos:start="297:9" pos:end="297:39"><name pos:start="297:9" pos:end="297:35">edit_list_start_encountered</name> <operator pos:start="297:37" pos:end="297:37">=</operator> <literal type="number" pos:start="297:39" pos:end="297:39">0</literal></expr>;</expr_stmt>

        <for pos:start="299:9" pos:end="539:9">for <control pos:start="299:13" pos:end="299:55">(<init pos:start="299:14" pos:end="299:14">;</init> <condition pos:start="299:16" pos:end="299:35"><expr pos:start="299:16" pos:end="299:34"><name pos:start="299:16" pos:end="299:22">current</name> <operator pos:start="299:24" pos:end="299:24">&lt;</operator> <name pos:start="299:26" pos:end="299:34">e_old_end</name></expr>;</condition> <incr pos:start="299:37" pos:end="299:54"><expr pos:start="299:37" pos:end="299:45"><name pos:start="299:37" pos:end="299:43">current</name><operator pos:start="299:44" pos:end="299:45">++</operator></expr><operator pos:start="299:46" pos:end="299:46">,</operator> <expr pos:start="299:48" pos:end="299:54"><name pos:start="299:48" pos:end="299:52">index</name><operator pos:start="299:53" pos:end="299:54">++</operator></expr></incr>)</control> <block pos:start="299:57" pos:end="539:9">{<block_content pos:start="303:13" pos:end="537:13">

            <comment type="line" pos:start="301:13" pos:end="301:68">// check  if frame outside edit list mark it for discard</comment>

            <expr_stmt pos:start="303:13" pos:end="305:98"><expr pos:start="303:13" pos:end="305:97"><name pos:start="303:13" pos:end="303:26">frame_duration</name> <operator pos:start="303:28" pos:end="303:28">=</operator> <ternary pos:start="303:30" pos:end="305:97"><condition pos:start="303:30" pos:end="303:57"><expr pos:start="303:30" pos:end="303:55"><operator pos:start="303:30" pos:end="303:30">(</operator><name pos:start="303:31" pos:end="303:37">current</name> <operator pos:start="303:39" pos:end="303:39">+</operator> <literal type="number" pos:start="303:41" pos:end="303:41">1</literal> <operator pos:start="303:43" pos:end="303:43">&lt;</operator>  <name pos:start="303:46" pos:end="303:54">e_old_end</name><operator pos:start="303:55" pos:end="303:55">)</operator></expr> ?</condition><then pos:start="305:30" pos:end="305:76">

                             <expr pos:start="305:30" pos:end="305:76"><operator pos:start="305:30" pos:end="305:30">(</operator><operator pos:start="305:31" pos:end="305:31">(</operator><name pos:start="305:32" pos:end="305:38">current</name> <operator pos:start="305:40" pos:end="305:40">+</operator> <literal type="number" pos:start="305:42" pos:end="305:42">1</literal><operator pos:start="305:43" pos:end="305:43">)</operator><operator pos:start="305:44" pos:end="305:45">-&gt;</operator><name pos:start="305:46" pos:end="305:54">timestamp</name> <operator pos:start="305:56" pos:end="305:56">-</operator> <name pos:start="305:58" pos:end="305:75"><name pos:start="305:58" pos:end="305:64">current</name><operator pos:start="305:65" pos:end="305:66">-&gt;</operator><name pos:start="305:67" pos:end="305:75">timestamp</name></name><operator pos:start="305:76" pos:end="305:76">)</operator></expr> </then><else pos:start="305:78" pos:end="305:97">: <expr pos:start="305:80" pos:end="305:97"><name pos:start="305:80" pos:end="305:97">edit_list_duration</name></expr></else></ternary></expr>;</expr_stmt>



            <expr_stmt pos:start="309:13" pos:end="309:35"><expr pos:start="309:13" pos:end="309:34"><name pos:start="309:13" pos:end="309:17">flags</name> <operator pos:start="309:19" pos:end="309:19">=</operator> <name pos:start="309:21" pos:end="309:34"><name pos:start="309:21" pos:end="309:27">current</name><operator pos:start="309:28" pos:end="309:29">-&gt;</operator><name pos:start="309:30" pos:end="309:34">flags</name></name></expr>;</expr_stmt>



            <comment type="line" pos:start="313:13" pos:end="313:53">// frames (pts) before or after edit list</comment>

            <expr_stmt pos:start="315:13" pos:end="315:59"><expr pos:start="315:13" pos:end="315:58"><name pos:start="315:13" pos:end="315:20">curr_cts</name> <operator pos:start="315:22" pos:end="315:22">=</operator> <name pos:start="315:24" pos:end="315:41"><name pos:start="315:24" pos:end="315:30">current</name><operator pos:start="315:31" pos:end="315:32">-&gt;</operator><name pos:start="315:33" pos:end="315:41">timestamp</name></name> <operator pos:start="315:43" pos:end="315:43">+</operator> <name pos:start="315:45" pos:end="315:58"><name pos:start="315:45" pos:end="315:47">msc</name><operator pos:start="315:48" pos:end="315:49">-&gt;</operator><name pos:start="315:50" pos:end="315:58">dts_shift</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="319:13" pos:end="359:13"><if pos:start="319:13" pos:end="359:13">if <condition pos:start="319:16" pos:end="319:65">(<expr pos:start="319:17" pos:end="319:64"><name pos:start="319:17" pos:end="319:29">ctts_data_old</name> <operator pos:start="319:31" pos:end="319:32">&amp;&amp;</operator> <name pos:start="319:34" pos:end="319:47">ctts_index_old</name> <operator pos:start="319:49" pos:end="319:49">&lt;</operator> <name pos:start="319:51" pos:end="319:64">ctts_count_old</name></expr>)</condition> <block pos:start="319:67" pos:end="359:13">{<block_content pos:start="321:17" pos:end="357:17">

                <expr_stmt pos:start="321:17" pos:end="323:105"><expr pos:start="321:17" pos:end="323:104"><call pos:start="321:17" pos:end="323:104"><name pos:start="321:17" pos:end="321:22">av_log</name><argument_list pos:start="321:23" pos:end="323:104">(<argument pos:start="321:24" pos:end="321:30"><expr pos:start="321:24" pos:end="321:30"><name pos:start="321:24" pos:end="321:30"><name pos:start="321:24" pos:end="321:26">mov</name><operator pos:start="321:27" pos:end="321:28">-&gt;</operator><name pos:start="321:29" pos:end="321:30">fc</name></name></expr></argument>, <argument pos:start="321:33" pos:end="321:44"><expr pos:start="321:33" pos:end="321:44"><name pos:start="321:33" pos:end="321:44">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="321:47" pos:end="321:133"><expr pos:start="321:47" pos:end="321:133"><literal type="string" pos:start="321:47" pos:end="321:78">"shifted frame pts, curr_cts: %"</literal><name pos:start="321:79" pos:end="321:84">PRId64</name><literal type="string" pos:start="321:85" pos:end="321:90">" @ %"</literal><name pos:start="321:91" pos:end="321:96">PRId64</name><literal type="string" pos:start="321:97" pos:end="321:123">", ctts: %d, ctts_count: %"</literal><name pos:start="321:124" pos:end="321:129">PRId64</name><literal type="string" pos:start="321:130" pos:end="321:133">"\n"</literal></expr></argument>,

                       <argument pos:start="323:24" pos:end="323:31"><expr pos:start="323:24" pos:end="323:31"><name pos:start="323:24" pos:end="323:31">curr_cts</name></expr></argument>, <argument pos:start="323:34" pos:end="323:47"><expr pos:start="323:34" pos:end="323:47"><name pos:start="323:34" pos:end="323:47">ctts_index_old</name></expr></argument>, <argument pos:start="323:50" pos:end="323:87"><expr pos:start="323:50" pos:end="323:87"><name pos:start="323:50" pos:end="323:78"><name pos:start="323:50" pos:end="323:62">ctts_data_old</name><index pos:start="323:63" pos:end="323:78">[<expr pos:start="323:64" pos:end="323:77"><name pos:start="323:64" pos:end="323:77">ctts_index_old</name></expr>]</index></name><operator pos:start="323:79" pos:end="323:79">.</operator><name pos:start="323:80" pos:end="323:87">duration</name></expr></argument>, <argument pos:start="323:90" pos:end="323:103"><expr pos:start="323:90" pos:end="323:103"><name pos:start="323:90" pos:end="323:103">ctts_count_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="325:17" pos:end="325:67"><expr pos:start="325:17" pos:end="325:66"><name pos:start="325:17" pos:end="325:24">curr_cts</name> <operator pos:start="325:26" pos:end="325:27">+=</operator> <name pos:start="325:29" pos:end="325:57"><name pos:start="325:29" pos:end="325:41">ctts_data_old</name><index pos:start="325:42" pos:end="325:57">[<expr pos:start="325:43" pos:end="325:56"><name pos:start="325:43" pos:end="325:56">ctts_index_old</name></expr>]</index></name><operator pos:start="325:58" pos:end="325:58">.</operator><name pos:start="325:59" pos:end="325:66">duration</name></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:34"><expr pos:start="327:17" pos:end="327:33"><name pos:start="327:17" pos:end="327:31">ctts_sample_old</name><operator pos:start="327:32" pos:end="327:33">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="329:17" pos:end="357:17"><if pos:start="329:17" pos:end="357:17">if <condition pos:start="329:20" pos:end="329:75">(<expr pos:start="329:21" pos:end="329:74"><name pos:start="329:21" pos:end="329:35">ctts_sample_old</name> <operator pos:start="329:37" pos:end="329:38">==</operator> <name pos:start="329:40" pos:end="329:68"><name pos:start="329:40" pos:end="329:52">ctts_data_old</name><index pos:start="329:53" pos:end="329:68">[<expr pos:start="329:54" pos:end="329:67"><name pos:start="329:54" pos:end="329:67">ctts_index_old</name></expr>]</index></name><operator pos:start="329:69" pos:end="329:69">.</operator><name pos:start="329:70" pos:end="329:74">count</name></expr>)</condition> <block pos:start="329:77" pos:end="357:17">{<block_content pos:start="331:21" pos:end="355:52">

                    <if_stmt pos:start="331:21" pos:end="349:21"><if pos:start="331:21" pos:end="349:21">if <condition pos:start="331:24" pos:end="337:85">(<expr pos:start="331:25" pos:end="337:84"><call pos:start="331:25" pos:end="337:78"><name pos:start="331:25" pos:end="331:38">add_ctts_entry</name><argument_list pos:start="331:39" pos:end="337:78">(<argument pos:start="331:40" pos:end="331:54"><expr pos:start="331:40" pos:end="331:54"><operator pos:start="331:40" pos:end="331:40">&amp;</operator><name pos:start="331:41" pos:end="331:54"><name pos:start="331:41" pos:end="331:43">msc</name><operator pos:start="331:44" pos:end="331:45">-&gt;</operator><name pos:start="331:46" pos:end="331:54">ctts_data</name></name></expr></argument>, <argument pos:start="331:57" pos:end="331:72"><expr pos:start="331:57" pos:end="331:72"><operator pos:start="331:57" pos:end="331:57">&amp;</operator><name pos:start="331:58" pos:end="331:72"><name pos:start="331:58" pos:end="331:60">msc</name><operator pos:start="331:61" pos:end="331:62">-&gt;</operator><name pos:start="331:63" pos:end="331:72">ctts_count</name></name></expr></argument>,

                                       <argument pos:start="333:40" pos:end="333:59"><expr pos:start="333:40" pos:end="333:59"><operator pos:start="333:40" pos:end="333:40">&amp;</operator><name pos:start="333:41" pos:end="333:59">ctts_allocated_size</name></expr></argument>,

                                       <argument pos:start="335:40" pos:end="335:104"><expr pos:start="335:40" pos:end="335:104"><name pos:start="335:40" pos:end="335:68"><name pos:start="335:40" pos:end="335:52">ctts_data_old</name><index pos:start="335:53" pos:end="335:68">[<expr pos:start="335:54" pos:end="335:67"><name pos:start="335:54" pos:end="335:67">ctts_index_old</name></expr>]</index></name><operator pos:start="335:69" pos:end="335:69">.</operator><name pos:start="335:70" pos:end="335:74">count</name> <operator pos:start="335:76" pos:end="335:76">-</operator> <name pos:start="335:78" pos:end="335:104">edit_list_start_ctts_sample</name></expr></argument>,

                                       <argument pos:start="337:40" pos:end="337:77"><expr pos:start="337:40" pos:end="337:77"><name pos:start="337:40" pos:end="337:68"><name pos:start="337:40" pos:end="337:52">ctts_data_old</name><index pos:start="337:53" pos:end="337:68">[<expr pos:start="337:54" pos:end="337:67"><name pos:start="337:54" pos:end="337:67">ctts_index_old</name></expr>]</index></name><operator pos:start="337:69" pos:end="337:69">.</operator><name pos:start="337:70" pos:end="337:77">duration</name></expr></argument>)</argument_list></call> <operator pos:start="337:80" pos:end="337:81">==</operator> <operator pos:start="337:83" pos:end="337:83">-</operator><literal type="number" pos:start="337:84" pos:end="337:84">1</literal></expr>)</condition> <block pos:start="337:87" pos:end="349:21">{<block_content pos:start="339:25" pos:end="347:30">

                        <expr_stmt pos:start="339:25" pos:end="345:71"><expr pos:start="339:25" pos:end="345:70"><call pos:start="339:25" pos:end="345:70"><name pos:start="339:25" pos:end="339:30">av_log</name><argument_list pos:start="339:31" pos:end="345:70">(<argument pos:start="339:32" pos:end="339:38"><expr pos:start="339:32" pos:end="339:38"><name pos:start="339:32" pos:end="339:38"><name pos:start="339:32" pos:end="339:34">mov</name><operator pos:start="339:35" pos:end="339:36">-&gt;</operator><name pos:start="339:37" pos:end="339:38">fc</name></name></expr></argument>, <argument pos:start="339:41" pos:end="339:52"><expr pos:start="339:41" pos:end="339:52"><name pos:start="339:41" pos:end="339:52">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="339:55" pos:end="339:107"><expr pos:start="339:55" pos:end="339:107"><literal type="string" pos:start="339:55" pos:end="339:79">"Cannot add CTTS entry %"</literal><name pos:start="339:80" pos:end="339:85">PRId64</name><literal type="string" pos:start="339:86" pos:end="339:92">" - {%"</literal><name pos:start="339:93" pos:end="339:98">PRId64</name><literal type="string" pos:start="339:99" pos:end="339:107">", %d}\n"</literal></expr></argument>,

                               <argument pos:start="341:32" pos:end="341:45"><expr pos:start="341:32" pos:end="341:45"><name pos:start="341:32" pos:end="341:45">ctts_index_old</name></expr></argument>,

                               <argument pos:start="343:32" pos:end="343:96"><expr pos:start="343:32" pos:end="343:96"><name pos:start="343:32" pos:end="343:60"><name pos:start="343:32" pos:end="343:44">ctts_data_old</name><index pos:start="343:45" pos:end="343:60">[<expr pos:start="343:46" pos:end="343:59"><name pos:start="343:46" pos:end="343:59">ctts_index_old</name></expr>]</index></name><operator pos:start="343:61" pos:end="343:61">.</operator><name pos:start="343:62" pos:end="343:66">count</name> <operator pos:start="343:68" pos:end="343:68">-</operator> <name pos:start="343:70" pos:end="343:96">edit_list_start_ctts_sample</name></expr></argument>,

                               <argument pos:start="345:32" pos:end="345:69"><expr pos:start="345:32" pos:end="345:69"><name pos:start="345:32" pos:end="345:60"><name pos:start="345:32" pos:end="345:44">ctts_data_old</name><index pos:start="345:45" pos:end="345:60">[<expr pos:start="345:46" pos:end="345:59"><name pos:start="345:46" pos:end="345:59">ctts_index_old</name></expr>]</index></name><operator pos:start="345:61" pos:end="345:61">.</operator><name pos:start="345:62" pos:end="345:69">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="347:25" pos:end="347:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="351:21" pos:end="351:37"><expr pos:start="351:21" pos:end="351:36"><name pos:start="351:21" pos:end="351:34">ctts_index_old</name><operator pos:start="351:35" pos:end="351:36">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:40"><expr pos:start="353:21" pos:end="353:39"><name pos:start="353:21" pos:end="353:35">ctts_sample_old</name> <operator pos:start="353:37" pos:end="353:37">=</operator> <literal type="number" pos:start="353:39" pos:end="353:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="355:21" pos:end="355:52"><expr pos:start="355:21" pos:end="355:51"><name pos:start="355:21" pos:end="355:47">edit_list_start_ctts_sample</name> <operator pos:start="355:49" pos:end="355:49">=</operator> <literal type="number" pos:start="355:51" pos:end="355:51">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="363:13" pos:end="465:13"><if pos:start="363:13" pos:end="447:13">if <condition pos:start="363:16" pos:end="363:107">(<expr pos:start="363:17" pos:end="363:106"><name pos:start="363:17" pos:end="363:24">curr_cts</name> <operator pos:start="363:26" pos:end="363:26">&lt;</operator> <name pos:start="363:28" pos:end="363:47">edit_list_media_time</name> <operator pos:start="363:49" pos:end="363:50">||</operator> <name pos:start="363:52" pos:end="363:59">curr_cts</name> <operator pos:start="363:61" pos:end="363:62">&gt;=</operator> <operator pos:start="363:64" pos:end="363:64">(</operator><name pos:start="363:65" pos:end="363:82">edit_list_duration</name> <operator pos:start="363:84" pos:end="363:84">+</operator> <name pos:start="363:86" pos:end="363:105">edit_list_media_time</name><operator pos:start="363:106" pos:end="363:106">)</operator></expr>)</condition> <block pos:start="363:109" pos:end="447:13">{<block_content pos:start="365:17" pos:end="445:17">

                <if_stmt pos:start="365:17" pos:end="445:17"><if pos:start="365:17" pos:end="405:17">if <condition pos:start="365:20" pos:end="369:50">(<expr pos:start="365:21" pos:end="369:49"><name pos:start="365:21" pos:end="365:44"><name pos:start="365:21" pos:end="365:22">st</name><operator pos:start="365:23" pos:end="365:24">-&gt;</operator><name pos:start="365:25" pos:end="365:32">codecpar</name><operator pos:start="365:33" pos:end="365:34">-&gt;</operator><name pos:start="365:35" pos:end="365:44">codec_type</name></name> <operator pos:start="365:46" pos:end="365:47">==</operator> <name pos:start="365:49" pos:end="365:66">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="365:68" pos:end="365:69">&amp;&amp;</operator> <name pos:start="365:71" pos:end="365:92"><name pos:start="365:71" pos:end="365:72">st</name><operator pos:start="365:73" pos:end="365:74">-&gt;</operator><name pos:start="365:75" pos:end="365:82">codecpar</name><operator pos:start="365:83" pos:end="365:84">-&gt;</operator><name pos:start="365:85" pos:end="365:92">codec_id</name></name> <operator pos:start="365:94" pos:end="365:95">!=</operator> <name pos:start="365:97" pos:end="365:114">AV_CODEC_ID_VORBIS</name> <operator pos:start="365:116" pos:end="365:117">&amp;&amp;</operator>

                    <name pos:start="367:21" pos:end="367:82"><name pos:start="367:21" pos:end="367:28">curr_cts</name> <argument_list type="generic" pos:start="367:30" pos:end="367:82">&lt; <argument pos:start="367:32" pos:end="367:80"><expr pos:start="367:32" pos:end="367:80"><name pos:start="367:32" pos:end="367:51">edit_list_media_time</name> <operator pos:start="367:53" pos:end="367:54">&amp;&amp;</operator> <name pos:start="367:56" pos:end="367:63">curr_cts</name> <operator pos:start="367:65" pos:end="367:65">+</operator> <name pos:start="367:67" pos:end="367:80">frame_duration</name></expr></argument> &gt;</argument_list></name> <name pos:start="367:84" pos:end="367:103">edit_list_media_time</name> <operator pos:start="367:105" pos:end="367:106">&amp;&amp;</operator>

                    <name pos:start="369:21" pos:end="369:45">first_non_zero_audio_edit</name> <operator pos:start="369:47" pos:end="369:47">&gt;</operator> <literal type="number" pos:start="369:49" pos:end="369:49">0</literal></expr>)</condition> <block pos:start="369:52" pos:end="405:17">{<block_content pos:start="371:21" pos:end="403:133">

                    <expr_stmt pos:start="371:21" pos:end="371:74"><expr pos:start="371:21" pos:end="371:73"><name pos:start="371:21" pos:end="371:39">packet_skip_samples</name> <operator pos:start="371:41" pos:end="371:41">=</operator> <name pos:start="371:43" pos:end="371:62">edit_list_media_time</name> <operator pos:start="371:64" pos:end="371:64">-</operator> <name pos:start="371:66" pos:end="371:73">curr_cts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="373:21" pos:end="373:60"><expr pos:start="373:21" pos:end="373:59"><name pos:start="373:21" pos:end="373:36"><name pos:start="373:21" pos:end="373:22">st</name><operator pos:start="373:23" pos:end="373:24">-&gt;</operator><name pos:start="373:25" pos:end="373:36">skip_samples</name></name> <operator pos:start="373:38" pos:end="373:39">+=</operator> <name pos:start="373:41" pos:end="373:59">packet_skip_samples</name></expr>;</expr_stmt>



                    <comment type="line" pos:start="377:21" pos:end="377:92">// Shift the index entry timestamp by packet_skip_samples to be correct.</comment>

                    <expr_stmt pos:start="379:21" pos:end="379:65"><expr pos:start="379:21" pos:end="379:64"><name pos:start="379:21" pos:end="379:41">edit_list_dts_counter</name> <operator pos:start="379:43" pos:end="379:44">-=</operator> <name pos:start="379:46" pos:end="379:64">packet_skip_samples</name></expr>;</expr_stmt>

                    <if_stmt pos:start="381:21" pos:end="399:21"><if pos:start="381:21" pos:end="399:21">if <condition pos:start="381:24" pos:end="381:57">(<expr pos:start="381:25" pos:end="381:56"><name pos:start="381:25" pos:end="381:51">edit_list_start_encountered</name> <operator pos:start="381:53" pos:end="381:54">==</operator> <literal type="number" pos:start="381:56" pos:end="381:56">0</literal></expr>)</condition>  <block pos:start="381:60" pos:end="399:21">{<block_content pos:start="383:25" pos:end="397:25">

                        <expr_stmt pos:start="383:25" pos:end="383:56"><expr pos:start="383:25" pos:end="383:55"><name pos:start="383:25" pos:end="383:51">edit_list_start_encountered</name> <operator pos:start="383:53" pos:end="383:53">=</operator> <literal type="number" pos:start="383:55" pos:end="383:55">1</literal></expr>;</expr_stmt>

                        <comment type="line" pos:start="385:25" pos:end="385:115">// Make timestamps strictly monotonically increasing for audio, by rewriting timestamps for</comment>

                        <comment type="line" pos:start="387:25" pos:end="387:45">// discarded packets.</comment>

                        <if_stmt pos:start="389:25" pos:end="397:25"><if pos:start="389:25" pos:end="397:25">if <condition pos:start="389:28" pos:end="389:50">(<expr pos:start="389:29" pos:end="389:49"><name pos:start="389:29" pos:end="389:49">frame_duration_buffer</name></expr>)</condition> <block pos:start="389:52" pos:end="397:25">{<block_content pos:start="391:29" pos:end="395:61">

                            <expr_stmt pos:start="391:29" pos:end="393:99"><expr pos:start="391:29" pos:end="393:98"><call pos:start="391:29" pos:end="393:98"><name pos:start="391:29" pos:end="391:54">fix_index_entry_timestamps</name><argument_list pos:start="391:55" pos:end="393:98">(<argument pos:start="391:56" pos:end="391:57"><expr pos:start="391:56" pos:end="391:57"><name pos:start="391:56" pos:end="391:57">st</name></expr></argument>, <argument pos:start="391:60" pos:end="391:79"><expr pos:start="391:60" pos:end="391:79"><name pos:start="391:60" pos:end="391:79"><name pos:start="391:60" pos:end="391:61">st</name><operator pos:start="391:62" pos:end="391:63">-&gt;</operator><name pos:start="391:64" pos:end="391:79">nb_index_entries</name></name></expr></argument>, <argument pos:start="391:82" pos:end="391:102"><expr pos:start="391:82" pos:end="391:102"><name pos:start="391:82" pos:end="391:102">edit_list_dts_counter</name></expr></argument>,

                                                       <argument pos:start="393:56" pos:end="393:76"><expr pos:start="393:56" pos:end="393:76"><name pos:start="393:56" pos:end="393:76">frame_duration_buffer</name></expr></argument>, <argument pos:start="393:79" pos:end="393:97"><expr pos:start="393:79" pos:end="393:97"><name pos:start="393:79" pos:end="393:97">num_discarded_begin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="395:29" pos:end="395:61"><expr pos:start="395:29" pos:end="395:60"><call pos:start="395:29" pos:end="395:60"><name pos:start="395:29" pos:end="395:36">av_freep</name><argument_list pos:start="395:37" pos:end="395:60">(<argument pos:start="395:38" pos:end="395:59"><expr pos:start="395:38" pos:end="395:59"><operator pos:start="395:38" pos:end="395:38">&amp;</operator><name pos:start="395:39" pos:end="395:59">frame_duration_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="403:21" pos:end="403:133"><expr pos:start="403:21" pos:end="403:132"><call pos:start="403:21" pos:end="403:132"><name pos:start="403:21" pos:end="403:26">av_log</name><argument_list pos:start="403:27" pos:end="403:132">(<argument pos:start="403:28" pos:end="403:34"><expr pos:start="403:28" pos:end="403:34"><name pos:start="403:28" pos:end="403:34"><name pos:start="403:28" pos:end="403:30">mov</name><operator pos:start="403:31" pos:end="403:32">-&gt;</operator><name pos:start="403:33" pos:end="403:34">fc</name></name></expr></argument>, <argument pos:start="403:37" pos:end="403:48"><expr pos:start="403:37" pos:end="403:48"><name pos:start="403:37" pos:end="403:48">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="403:51" pos:end="403:100"><expr pos:start="403:51" pos:end="403:100"><literal type="string" pos:start="403:51" pos:end="403:90">"skip %d audio samples from curr_cts: %"</literal><name pos:start="403:91" pos:end="403:96">PRId64</name><literal type="string" pos:start="403:97" pos:end="403:100">"\n"</literal></expr></argument>, <argument pos:start="403:103" pos:end="403:121"><expr pos:start="403:103" pos:end="403:121"><name pos:start="403:103" pos:end="403:121">packet_skip_samples</name></expr></argument>, <argument pos:start="403:124" pos:end="403:131"><expr pos:start="403:124" pos:end="403:131"><name pos:start="403:124" pos:end="403:131">curr_cts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="405:19" pos:end="445:17">else <block pos:start="405:24" pos:end="445:17">{<block_content pos:start="407:21" pos:end="443:21">

                    <expr_stmt pos:start="407:21" pos:end="407:51"><expr pos:start="407:21" pos:end="407:50"><name pos:start="407:21" pos:end="407:25">flags</name> <operator pos:start="407:27" pos:end="407:28">|=</operator> <name pos:start="407:30" pos:end="407:50">AVINDEX_DISCARD_FRAME</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:120"><expr pos:start="409:21" pos:end="409:119"><call pos:start="409:21" pos:end="409:119"><name pos:start="409:21" pos:end="409:26">av_log</name><argument_list pos:start="409:27" pos:end="409:119">(<argument pos:start="409:28" pos:end="409:34"><expr pos:start="409:28" pos:end="409:34"><name pos:start="409:28" pos:end="409:34"><name pos:start="409:28" pos:end="409:30">mov</name><operator pos:start="409:31" pos:end="409:32">-&gt;</operator><name pos:start="409:33" pos:end="409:34">fc</name></name></expr></argument>, <argument pos:start="409:37" pos:end="409:48"><expr pos:start="409:37" pos:end="409:48"><name pos:start="409:37" pos:end="409:48">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="409:51" pos:end="409:101"><expr pos:start="409:51" pos:end="409:101"><literal type="string" pos:start="409:51" pos:end="409:79">"drop a frame at curr_cts: %"</literal><name pos:start="409:80" pos:end="409:85">PRId64</name><literal type="string" pos:start="409:86" pos:end="409:91">" @ %"</literal><name pos:start="409:92" pos:end="409:97">PRId64</name><literal type="string" pos:start="409:98" pos:end="409:101">"\n"</literal></expr></argument>, <argument pos:start="409:104" pos:end="409:111"><expr pos:start="409:104" pos:end="409:111"><name pos:start="409:104" pos:end="409:111">curr_cts</name></expr></argument>, <argument pos:start="409:114" pos:end="409:118"><expr pos:start="409:114" pos:end="409:118"><name pos:start="409:114" pos:end="409:118">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="413:21" pos:end="443:21"><if pos:start="413:21" pos:end="443:21">if <condition pos:start="413:24" pos:end="413:107">(<expr pos:start="413:25" pos:end="413:106"><name pos:start="413:25" pos:end="413:48"><name pos:start="413:25" pos:end="413:26">st</name><operator pos:start="413:27" pos:end="413:28">-&gt;</operator><name pos:start="413:29" pos:end="413:36">codecpar</name><operator pos:start="413:37" pos:end="413:38">-&gt;</operator><name pos:start="413:39" pos:end="413:48">codec_type</name></name> <operator pos:start="413:50" pos:end="413:51">==</operator> <name pos:start="413:53" pos:end="413:70">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="413:72" pos:end="413:73">&amp;&amp;</operator> <name pos:start="413:75" pos:end="413:101">edit_list_start_encountered</name> <operator pos:start="413:103" pos:end="413:104">==</operator> <literal type="number" pos:start="413:106" pos:end="413:106">0</literal></expr>)</condition> <block pos:start="413:109" pos:end="443:21">{<block_content pos:start="415:25" pos:end="441:25">

                        <expr_stmt pos:start="415:25" pos:end="415:46"><expr pos:start="415:25" pos:end="415:45"><name pos:start="415:25" pos:end="415:43">num_discarded_begin</name><operator pos:start="415:44" pos:end="415:45">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="417:25" pos:end="419:98"><expr pos:start="417:25" pos:end="419:97"><name pos:start="417:25" pos:end="417:45">frame_duration_buffer</name> <operator pos:start="417:47" pos:end="417:47">=</operator> <call pos:start="417:49" pos:end="419:97"><name pos:start="417:49" pos:end="417:58">av_realloc</name><argument_list pos:start="417:59" pos:end="419:97">(<argument pos:start="417:60" pos:end="417:80"><expr pos:start="417:60" pos:end="417:80"><name pos:start="417:60" pos:end="417:80">frame_duration_buffer</name></expr></argument>,

                                                           <argument pos:start="419:60" pos:end="419:96"><expr pos:start="419:60" pos:end="419:96"><name pos:start="419:60" pos:end="419:78">num_discarded_begin</name> <operator pos:start="419:80" pos:end="419:80">*</operator> <sizeof pos:start="419:82" pos:end="419:96">sizeof<argument_list pos:start="419:88" pos:end="419:96">(<argument pos:start="419:89" pos:end="419:95"><expr pos:start="419:89" pos:end="419:95"><name pos:start="419:89" pos:end="419:95">int64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="421:25" pos:end="427:25"><if pos:start="421:25" pos:end="427:25">if <condition pos:start="421:28" pos:end="421:51">(<expr pos:start="421:29" pos:end="421:50"><operator pos:start="421:29" pos:end="421:29">!</operator><name pos:start="421:30" pos:end="421:50">frame_duration_buffer</name></expr>)</condition> <block pos:start="421:53" pos:end="427:25">{<block_content pos:start="423:29" pos:end="425:34">

                            <expr_stmt pos:start="423:29" pos:end="423:103"><expr pos:start="423:29" pos:end="423:102"><call pos:start="423:29" pos:end="423:102"><name pos:start="423:29" pos:end="423:34">av_log</name><argument_list pos:start="423:35" pos:end="423:102">(<argument pos:start="423:36" pos:end="423:42"><expr pos:start="423:36" pos:end="423:42"><name pos:start="423:36" pos:end="423:42"><name pos:start="423:36" pos:end="423:38">mov</name><operator pos:start="423:39" pos:end="423:40">-&gt;</operator><name pos:start="423:41" pos:end="423:42">fc</name></name></expr></argument>, <argument pos:start="423:45" pos:end="423:56"><expr pos:start="423:45" pos:end="423:56"><name pos:start="423:45" pos:end="423:56">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="423:59" pos:end="423:101"><expr pos:start="423:59" pos:end="423:101"><literal type="string" pos:start="423:59" pos:end="423:101">"Cannot reallocate frame duration buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="425:29" pos:end="425:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="429:25" pos:end="429:88"><expr pos:start="429:25" pos:end="429:87"><name pos:start="429:25" pos:end="429:70"><name pos:start="429:25" pos:end="429:45">frame_duration_buffer</name><index pos:start="429:46" pos:end="429:70">[<expr pos:start="429:47" pos:end="429:69"><name pos:start="429:47" pos:end="429:65">num_discarded_begin</name> <operator pos:start="429:67" pos:end="429:67">-</operator> <literal type="number" pos:start="429:69" pos:end="429:69">1</literal></expr>]</index></name> <operator pos:start="429:72" pos:end="429:72">=</operator> <name pos:start="429:74" pos:end="429:87">frame_duration</name></expr>;</expr_stmt>



                        <comment type="line" pos:start="433:25" pos:end="433:88">// Increment skip_samples for the first non-zero audio edit list</comment>

                        <if_stmt pos:start="435:25" pos:end="441:25"><if pos:start="435:25" pos:end="441:25">if <condition pos:start="435:28" pos:end="435:106">(<expr pos:start="435:29" pos:end="435:105"><name pos:start="435:29" pos:end="435:53">first_non_zero_audio_edit</name> <operator pos:start="435:55" pos:end="435:55">&gt;</operator> <literal type="number" pos:start="435:57" pos:end="435:57">0</literal> <operator pos:start="435:59" pos:end="435:60">&amp;&amp;</operator> <name pos:start="435:62" pos:end="435:83"><name pos:start="435:62" pos:end="435:63">st</name><operator pos:start="435:64" pos:end="435:65">-&gt;</operator><name pos:start="435:66" pos:end="435:73">codecpar</name><operator pos:start="435:74" pos:end="435:75">-&gt;</operator><name pos:start="435:76" pos:end="435:83">codec_id</name></name> <operator pos:start="435:85" pos:end="435:86">!=</operator> <name pos:start="435:88" pos:end="435:105">AV_CODEC_ID_VORBIS</name></expr>)</condition> <block pos:start="435:108" pos:end="441:25">{<block_content pos:start="437:29" pos:end="439:62">

                            <expr_stmt pos:start="437:29" pos:end="437:63"><expr pos:start="437:29" pos:end="437:62"><name pos:start="437:29" pos:end="437:44"><name pos:start="437:29" pos:end="437:30">st</name><operator pos:start="437:31" pos:end="437:32">-&gt;</operator><name pos:start="437:33" pos:end="437:44">skip_samples</name></name> <operator pos:start="437:46" pos:end="437:47">+=</operator> <name pos:start="437:49" pos:end="437:62">frame_duration</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="439:29" pos:end="439:62"><expr pos:start="439:29" pos:end="439:61"><name pos:start="439:29" pos:end="439:42"><name pos:start="439:29" pos:end="439:31">msc</name><operator pos:start="439:32" pos:end="439:33">-&gt;</operator><name pos:start="439:34" pos:end="439:42">start_pad</name></name> <operator pos:start="439:44" pos:end="439:44">=</operator> <name pos:start="439:46" pos:end="439:61"><name pos:start="439:46" pos:end="439:47">st</name><operator pos:start="439:48" pos:end="439:49">-&gt;</operator><name pos:start="439:50" pos:end="439:61">skip_samples</name></name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="447:15" pos:end="465:13">else if <condition pos:start="447:23" pos:end="447:56">(<expr pos:start="447:24" pos:end="447:55"><name pos:start="447:24" pos:end="447:50">edit_list_start_encountered</name> <operator pos:start="447:52" pos:end="447:53">==</operator> <literal type="number" pos:start="447:55" pos:end="447:55">0</literal></expr>)</condition> <block pos:start="447:58" pos:end="465:13">{<block_content pos:start="449:17" pos:end="463:17">

                <expr_stmt pos:start="449:17" pos:end="449:48"><expr pos:start="449:17" pos:end="449:47"><name pos:start="449:17" pos:end="449:43">edit_list_start_encountered</name> <operator pos:start="449:45" pos:end="449:45">=</operator> <literal type="number" pos:start="449:47" pos:end="449:47">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="451:17" pos:end="451:107">// Make timestamps strictly monotonically increasing for audio, by rewriting timestamps for</comment>

                <comment type="line" pos:start="453:17" pos:end="453:37">// discarded packets.</comment>

                <if_stmt pos:start="455:17" pos:end="463:17"><if pos:start="455:17" pos:end="463:17">if <condition pos:start="455:20" pos:end="455:92">(<expr pos:start="455:21" pos:end="455:91"><name pos:start="455:21" pos:end="455:44"><name pos:start="455:21" pos:end="455:22">st</name><operator pos:start="455:23" pos:end="455:24">-&gt;</operator><name pos:start="455:25" pos:end="455:32">codecpar</name><operator pos:start="455:33" pos:end="455:34">-&gt;</operator><name pos:start="455:35" pos:end="455:44">codec_type</name></name> <operator pos:start="455:46" pos:end="455:47">==</operator> <name pos:start="455:49" pos:end="455:66">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="455:68" pos:end="455:69">&amp;&amp;</operator> <name pos:start="455:71" pos:end="455:91">frame_duration_buffer</name></expr>)</condition> <block pos:start="455:94" pos:end="463:17">{<block_content pos:start="457:21" pos:end="461:53">

                    <expr_stmt pos:start="457:21" pos:end="459:91"><expr pos:start="457:21" pos:end="459:90"><call pos:start="457:21" pos:end="459:90"><name pos:start="457:21" pos:end="457:46">fix_index_entry_timestamps</name><argument_list pos:start="457:47" pos:end="459:90">(<argument pos:start="457:48" pos:end="457:49"><expr pos:start="457:48" pos:end="457:49"><name pos:start="457:48" pos:end="457:49">st</name></expr></argument>, <argument pos:start="457:52" pos:end="457:71"><expr pos:start="457:52" pos:end="457:71"><name pos:start="457:52" pos:end="457:71"><name pos:start="457:52" pos:end="457:53">st</name><operator pos:start="457:54" pos:end="457:55">-&gt;</operator><name pos:start="457:56" pos:end="457:71">nb_index_entries</name></name></expr></argument>, <argument pos:start="457:74" pos:end="457:94"><expr pos:start="457:74" pos:end="457:94"><name pos:start="457:74" pos:end="457:94">edit_list_dts_counter</name></expr></argument>,

                                               <argument pos:start="459:48" pos:end="459:68"><expr pos:start="459:48" pos:end="459:68"><name pos:start="459:48" pos:end="459:68">frame_duration_buffer</name></expr></argument>, <argument pos:start="459:71" pos:end="459:89"><expr pos:start="459:71" pos:end="459:89"><name pos:start="459:71" pos:end="459:89">num_discarded_begin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="461:21" pos:end="461:53"><expr pos:start="461:21" pos:end="461:52"><call pos:start="461:21" pos:end="461:52"><name pos:start="461:21" pos:end="461:28">av_freep</name><argument_list pos:start="461:29" pos:end="461:52">(<argument pos:start="461:30" pos:end="461:51"><expr pos:start="461:30" pos:end="461:51"><operator pos:start="461:30" pos:end="461:30">&amp;</operator><name pos:start="461:31" pos:end="461:51">frame_duration_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="469:13" pos:end="477:13"><if pos:start="469:13" pos:end="477:13">if <condition pos:start="469:16" pos:end="471:68">(<expr pos:start="469:17" pos:end="471:67"><call pos:start="469:17" pos:end="471:61"><name pos:start="469:17" pos:end="469:31">add_index_entry</name><argument_list pos:start="469:32" pos:end="471:61">(<argument pos:start="469:33" pos:end="469:34"><expr pos:start="469:33" pos:end="469:34"><name pos:start="469:33" pos:end="469:34">st</name></expr></argument>, <argument pos:start="469:37" pos:end="469:48"><expr pos:start="469:37" pos:end="469:48"><name pos:start="469:37" pos:end="469:48"><name pos:start="469:37" pos:end="469:43">current</name><operator pos:start="469:44" pos:end="469:45">-&gt;</operator><name pos:start="469:46" pos:end="469:48">pos</name></name></expr></argument>, <argument pos:start="469:51" pos:end="469:71"><expr pos:start="469:51" pos:end="469:71"><name pos:start="469:51" pos:end="469:71">edit_list_dts_counter</name></expr></argument>, <argument pos:start="469:74" pos:end="469:86"><expr pos:start="469:74" pos:end="469:86"><name pos:start="469:74" pos:end="469:86"><name pos:start="469:74" pos:end="469:80">current</name><operator pos:start="469:81" pos:end="469:82">-&gt;</operator><name pos:start="469:83" pos:end="469:86">size</name></name></expr></argument>,

                                <argument pos:start="471:33" pos:end="471:53"><expr pos:start="471:33" pos:end="471:53"><name pos:start="471:33" pos:end="471:53"><name pos:start="471:33" pos:end="471:39">current</name><operator pos:start="471:40" pos:end="471:41">-&gt;</operator><name pos:start="471:42" pos:end="471:53">min_distance</name></name></expr></argument>, <argument pos:start="471:56" pos:end="471:60"><expr pos:start="471:56" pos:end="471:60"><name pos:start="471:56" pos:end="471:60">flags</name></expr></argument>)</argument_list></call> <operator pos:start="471:63" pos:end="471:64">==</operator> <operator pos:start="471:66" pos:end="471:66">-</operator><literal type="number" pos:start="471:67" pos:end="471:67">1</literal></expr>)</condition> <block pos:start="471:70" pos:end="477:13">{<block_content pos:start="473:17" pos:end="475:22">

                <expr_stmt pos:start="473:17" pos:end="473:74"><expr pos:start="473:17" pos:end="473:73"><call pos:start="473:17" pos:end="473:73"><name pos:start="473:17" pos:end="473:22">av_log</name><argument_list pos:start="473:23" pos:end="473:73">(<argument pos:start="473:24" pos:end="473:30"><expr pos:start="473:24" pos:end="473:30"><name pos:start="473:24" pos:end="473:30"><name pos:start="473:24" pos:end="473:26">mov</name><operator pos:start="473:27" pos:end="473:28">-&gt;</operator><name pos:start="473:29" pos:end="473:30">fc</name></name></expr></argument>, <argument pos:start="473:33" pos:end="473:44"><expr pos:start="473:33" pos:end="473:44"><name pos:start="473:33" pos:end="473:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="473:47" pos:end="473:72"><expr pos:start="473:47" pos:end="473:72"><literal type="string" pos:start="473:47" pos:end="473:72">"Cannot add index entry\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="475:17" pos:end="475:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="481:13" pos:end="481:44">// Update the index ranges array</comment>

            <if_stmt pos:start="483:13" pos:end="489:13"><if pos:start="483:13" pos:end="489:13">if <condition pos:start="483:16" pos:end="483:93">(<expr pos:start="483:17" pos:end="483:92"><name pos:start="483:17" pos:end="483:35">current_index_range</name> <operator pos:start="483:37" pos:end="483:37">&lt;</operator> <name pos:start="483:39" pos:end="483:55"><name pos:start="483:39" pos:end="483:41">msc</name><operator pos:start="483:42" pos:end="483:43">-&gt;</operator><name pos:start="483:44" pos:end="483:55">index_ranges</name></name> <operator pos:start="483:57" pos:end="483:58">||</operator> <name pos:start="483:60" pos:end="483:64">index</name> <operator pos:start="483:66" pos:end="483:67">!=</operator> <name pos:start="483:69" pos:end="483:92"><name pos:start="483:69" pos:end="483:87">current_index_range</name><operator pos:start="483:88" pos:end="483:89">-&gt;</operator><name pos:start="483:90" pos:end="483:92">end</name></name></expr>)</condition> <block pos:start="483:95" pos:end="489:13">{<block_content pos:start="485:17" pos:end="487:51">

                <expr_stmt pos:start="485:17" pos:end="485:38"><expr pos:start="485:17" pos:end="485:37"><name pos:start="485:17" pos:end="485:35">current_index_range</name><operator pos:start="485:36" pos:end="485:37">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:51"><expr pos:start="487:17" pos:end="487:50"><name pos:start="487:17" pos:end="487:42"><name pos:start="487:17" pos:end="487:35">current_index_range</name><operator pos:start="487:36" pos:end="487:37">-&gt;</operator><name pos:start="487:38" pos:end="487:42">start</name></name> <operator pos:start="487:44" pos:end="487:44">=</operator> <name pos:start="487:46" pos:end="487:50">index</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:49"><expr pos:start="491:13" pos:end="491:48"><name pos:start="491:13" pos:end="491:36"><name pos:start="491:13" pos:end="491:31">current_index_range</name><operator pos:start="491:32" pos:end="491:33">-&gt;</operator><name pos:start="491:34" pos:end="491:36">end</name></name> <operator pos:start="491:38" pos:end="491:38">=</operator> <name pos:start="491:40" pos:end="491:44">index</name> <operator pos:start="491:46" pos:end="491:46">+</operator> <literal type="number" pos:start="491:48" pos:end="491:48">1</literal></expr>;</expr_stmt>



            <comment type="line" pos:start="495:13" pos:end="495:109">// Only start incrementing DTS in frame_duration amounts, when we encounter a frame in edit list.</comment>

            <if_stmt pos:start="497:13" pos:end="501:13"><if pos:start="497:13" pos:end="501:13">if <condition pos:start="497:16" pos:end="497:48">(<expr pos:start="497:17" pos:end="497:47"><name pos:start="497:17" pos:end="497:43">edit_list_start_encountered</name> <operator pos:start="497:45" pos:end="497:45">&gt;</operator> <literal type="number" pos:start="497:47" pos:end="497:47">0</literal></expr>)</condition> <block pos:start="497:50" pos:end="501:13">{<block_content pos:start="499:17" pos:end="499:79">

                <expr_stmt pos:start="499:17" pos:end="499:79"><expr pos:start="499:17" pos:end="499:78"><name pos:start="499:17" pos:end="499:37">edit_list_dts_counter</name> <operator pos:start="499:39" pos:end="499:39">=</operator> <name pos:start="499:41" pos:end="499:61">edit_list_dts_counter</name> <operator pos:start="499:63" pos:end="499:63">+</operator> <name pos:start="499:65" pos:end="499:78">frame_duration</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="505:13" pos:end="505:75">// Break when found first key frame after edit entry completion</comment>

            <if_stmt pos:start="507:13" pos:end="537:13"><if pos:start="507:13" pos:end="537:13">if <condition pos:start="507:16" pos:end="509:99">(<expr pos:start="507:17" pos:end="509:98"><operator pos:start="507:17" pos:end="507:17">(</operator><operator pos:start="507:18" pos:end="507:18">(</operator><name pos:start="507:19" pos:end="507:26">curr_cts</name> <operator pos:start="507:28" pos:end="507:28">+</operator> <name pos:start="507:30" pos:end="507:43">frame_duration</name><operator pos:start="507:44" pos:end="507:44">)</operator> <operator pos:start="507:46" pos:end="507:47">&gt;=</operator> <operator pos:start="507:49" pos:end="507:49">(</operator><name pos:start="507:50" pos:end="507:67">edit_list_duration</name> <operator pos:start="507:69" pos:end="507:69">+</operator> <name pos:start="507:71" pos:end="507:90">edit_list_media_time</name><operator pos:start="507:91" pos:end="507:91">)</operator><operator pos:start="507:92" pos:end="507:92">)</operator> <operator pos:start="507:94" pos:end="507:95">&amp;&amp;</operator>

                <operator pos:start="509:17" pos:end="509:17">(</operator><operator pos:start="509:18" pos:end="509:18">(</operator><name pos:start="509:19" pos:end="509:23">flags</name> <operator pos:start="509:25" pos:end="509:25">&amp;</operator> <name pos:start="509:27" pos:end="509:42">AVINDEX_KEYFRAME</name><operator pos:start="509:43" pos:end="509:43">)</operator> <operator pos:start="509:45" pos:end="509:46">||</operator> <operator pos:start="509:48" pos:end="509:48">(</operator><operator pos:start="509:49" pos:end="509:49">(</operator><name pos:start="509:50" pos:end="509:73"><name pos:start="509:50" pos:end="509:51">st</name><operator pos:start="509:52" pos:end="509:53">-&gt;</operator><name pos:start="509:54" pos:end="509:61">codecpar</name><operator pos:start="509:62" pos:end="509:63">-&gt;</operator><name pos:start="509:64" pos:end="509:73">codec_type</name></name> <operator pos:start="509:75" pos:end="509:76">==</operator> <name pos:start="509:78" pos:end="509:95">AVMEDIA_TYPE_AUDIO</name><operator pos:start="509:96" pos:end="509:96">)</operator><operator pos:start="509:97" pos:end="509:97">)</operator><operator pos:start="509:98" pos:end="509:98">)</operator></expr>)</condition> <block pos:start="509:101" pos:end="537:13">{<block_content pos:start="513:17" pos:end="535:22">



                <if_stmt pos:start="513:17" pos:end="533:17"><if pos:start="513:17" pos:end="533:17">if <condition pos:start="513:20" pos:end="513:58">(<expr pos:start="513:21" pos:end="513:57"><name pos:start="513:21" pos:end="513:33">ctts_data_old</name> <operator pos:start="513:35" pos:end="513:36">&amp;&amp;</operator> <name pos:start="513:38" pos:end="513:52">ctts_sample_old</name> <operator pos:start="513:54" pos:end="513:55">!=</operator> <literal type="number" pos:start="513:57" pos:end="513:57">0</literal></expr>)</condition> <block pos:start="513:60" pos:end="533:17">{<block_content pos:start="515:21" pos:end="531:21">

                    <if_stmt pos:start="515:21" pos:end="531:21"><if pos:start="515:21" pos:end="531:21">if <condition pos:start="515:24" pos:end="521:85">(<expr pos:start="515:25" pos:end="521:84"><call pos:start="515:25" pos:end="521:78"><name pos:start="515:25" pos:end="515:38">add_ctts_entry</name><argument_list pos:start="515:39" pos:end="521:78">(<argument pos:start="515:40" pos:end="515:54"><expr pos:start="515:40" pos:end="515:54"><operator pos:start="515:40" pos:end="515:40">&amp;</operator><name pos:start="515:41" pos:end="515:54"><name pos:start="515:41" pos:end="515:43">msc</name><operator pos:start="515:44" pos:end="515:45">-&gt;</operator><name pos:start="515:46" pos:end="515:54">ctts_data</name></name></expr></argument>, <argument pos:start="515:57" pos:end="515:72"><expr pos:start="515:57" pos:end="515:72"><operator pos:start="515:57" pos:end="515:57">&amp;</operator><name pos:start="515:58" pos:end="515:72"><name pos:start="515:58" pos:end="515:60">msc</name><operator pos:start="515:61" pos:end="515:62">-&gt;</operator><name pos:start="515:63" pos:end="515:72">ctts_count</name></name></expr></argument>,

                                       <argument pos:start="517:40" pos:end="517:59"><expr pos:start="517:40" pos:end="517:59"><operator pos:start="517:40" pos:end="517:40">&amp;</operator><name pos:start="517:41" pos:end="517:59">ctts_allocated_size</name></expr></argument>,

                                       <argument pos:start="519:40" pos:end="519:84"><expr pos:start="519:40" pos:end="519:84"><name pos:start="519:40" pos:end="519:54">ctts_sample_old</name> <operator pos:start="519:56" pos:end="519:56">-</operator> <name pos:start="519:58" pos:end="519:84">edit_list_start_ctts_sample</name></expr></argument>,

                                       <argument pos:start="521:40" pos:end="521:77"><expr pos:start="521:40" pos:end="521:77"><name pos:start="521:40" pos:end="521:68"><name pos:start="521:40" pos:end="521:52">ctts_data_old</name><index pos:start="521:53" pos:end="521:68">[<expr pos:start="521:54" pos:end="521:67"><name pos:start="521:54" pos:end="521:67">ctts_index_old</name></expr>]</index></name><operator pos:start="521:69" pos:end="521:69">.</operator><name pos:start="521:70" pos:end="521:77">duration</name></expr></argument>)</argument_list></call> <operator pos:start="521:80" pos:end="521:81">==</operator> <operator pos:start="521:83" pos:end="521:83">-</operator><literal type="number" pos:start="521:84" pos:end="521:84">1</literal></expr>)</condition> <block pos:start="521:87" pos:end="531:21">{<block_content pos:start="523:25" pos:end="529:30">

                        <expr_stmt pos:start="523:25" pos:end="527:71"><expr pos:start="523:25" pos:end="527:70"><call pos:start="523:25" pos:end="527:70"><name pos:start="523:25" pos:end="523:30">av_log</name><argument_list pos:start="523:31" pos:end="527:70">(<argument pos:start="523:32" pos:end="523:38"><expr pos:start="523:32" pos:end="523:38"><name pos:start="523:32" pos:end="523:38"><name pos:start="523:32" pos:end="523:34">mov</name><operator pos:start="523:35" pos:end="523:36">-&gt;</operator><name pos:start="523:37" pos:end="523:38">fc</name></name></expr></argument>, <argument pos:start="523:41" pos:end="523:52"><expr pos:start="523:41" pos:end="523:52"><name pos:start="523:41" pos:end="523:52">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="523:55" pos:end="523:107"><expr pos:start="523:55" pos:end="523:107"><literal type="string" pos:start="523:55" pos:end="523:79">"Cannot add CTTS entry %"</literal><name pos:start="523:80" pos:end="523:85">PRId64</name><literal type="string" pos:start="523:86" pos:end="523:92">" - {%"</literal><name pos:start="523:93" pos:end="523:98">PRId64</name><literal type="string" pos:start="523:99" pos:end="523:107">", %d}\n"</literal></expr></argument>,

                               <argument pos:start="525:32" pos:end="525:45"><expr pos:start="525:32" pos:end="525:45"><name pos:start="525:32" pos:end="525:45">ctts_index_old</name></expr></argument>, <argument pos:start="525:48" pos:end="525:92"><expr pos:start="525:48" pos:end="525:92"><name pos:start="525:48" pos:end="525:62">ctts_sample_old</name> <operator pos:start="525:64" pos:end="525:64">-</operator> <name pos:start="525:66" pos:end="525:92">edit_list_start_ctts_sample</name></expr></argument>,

                               <argument pos:start="527:32" pos:end="527:69"><expr pos:start="527:32" pos:end="527:69"><name pos:start="527:32" pos:end="527:60"><name pos:start="527:32" pos:end="527:44">ctts_data_old</name><index pos:start="527:45" pos:end="527:60">[<expr pos:start="527:46" pos:end="527:59"><name pos:start="527:46" pos:end="527:59">ctts_index_old</name></expr>]</index></name><operator pos:start="527:61" pos:end="527:61">.</operator><name pos:start="527:62" pos:end="527:69">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="529:25" pos:end="529:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="535:17" pos:end="535:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></while>

    <comment type="line" pos:start="543:5" pos:end="543:30">// Update av stream length</comment>

    <expr_stmt pos:start="545:5" pos:end="545:55"><expr pos:start="545:5" pos:end="545:54"><name pos:start="545:5" pos:end="545:16"><name pos:start="545:5" pos:end="545:6">st</name><operator pos:start="545:7" pos:end="545:8">-&gt;</operator><name pos:start="545:9" pos:end="545:16">duration</name></name> <operator pos:start="545:18" pos:end="545:18">=</operator> <name pos:start="545:20" pos:end="545:42">edit_list_dts_entry_end</name> <operator pos:start="545:44" pos:end="545:44">-</operator> <name pos:start="545:46" pos:end="545:54">start_dts</name></expr>;</expr_stmt>



    <comment type="line" pos:start="549:5" pos:end="549:53">// Free the old index and the old CTTS structures</comment>

    <expr_stmt pos:start="551:5" pos:end="551:19"><expr pos:start="551:5" pos:end="551:18"><call pos:start="551:5" pos:end="551:18"><name pos:start="551:5" pos:end="551:11">av_free</name><argument_list pos:start="551:12" pos:end="551:18">(<argument pos:start="551:13" pos:end="551:17"><expr pos:start="551:13" pos:end="551:17"><name pos:start="551:13" pos:end="551:17">e_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="553:5" pos:end="553:27"><expr pos:start="553:5" pos:end="553:26"><call pos:start="553:5" pos:end="553:26"><name pos:start="553:5" pos:end="553:11">av_free</name><argument_list pos:start="553:12" pos:end="553:26">(<argument pos:start="553:13" pos:end="553:25"><expr pos:start="553:13" pos:end="553:25"><name pos:start="553:13" pos:end="553:25">ctts_data_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="557:5" pos:end="557:44">// Null terminate the index ranges array</comment>

    <expr_stmt pos:start="559:5" pos:end="559:26"><expr pos:start="559:5" pos:end="559:25"><name pos:start="559:5" pos:end="559:23">current_index_range</name><operator pos:start="559:24" pos:end="559:25">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="561:5" pos:end="561:35"><expr pos:start="561:5" pos:end="561:34"><name pos:start="561:5" pos:end="561:30"><name pos:start="561:5" pos:end="561:23">current_index_range</name><operator pos:start="561:24" pos:end="561:25">-&gt;</operator><name pos:start="561:26" pos:end="561:30">start</name></name> <operator pos:start="561:32" pos:end="561:32">=</operator> <literal type="number" pos:start="561:34" pos:end="561:34">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="563:5" pos:end="563:33"><expr pos:start="563:5" pos:end="563:32"><name pos:start="563:5" pos:end="563:28"><name pos:start="563:5" pos:end="563:23">current_index_range</name><operator pos:start="563:24" pos:end="563:25">-&gt;</operator><name pos:start="563:26" pos:end="563:28">end</name></name> <operator pos:start="563:30" pos:end="563:30">=</operator> <literal type="number" pos:start="563:32" pos:end="563:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="565:5" pos:end="565:52"><expr pos:start="565:5" pos:end="565:51"><name pos:start="565:5" pos:end="565:22"><name pos:start="565:5" pos:end="565:7">msc</name><operator pos:start="565:8" pos:end="565:9">-&gt;</operator><name pos:start="565:10" pos:end="565:22">current_index</name></name> <operator pos:start="565:24" pos:end="565:24">=</operator> <name pos:start="565:26" pos:end="565:45"><name pos:start="565:26" pos:end="565:28">msc</name><operator pos:start="565:29" pos:end="565:30">-&gt;</operator><name pos:start="565:31" pos:end="565:42">index_ranges</name><index pos:start="565:43" pos:end="565:45">[<expr pos:start="565:44" pos:end="565:44"><literal type="number" pos:start="565:44" pos:end="565:44">0</literal></expr>]</index></name><operator pos:start="565:46" pos:end="565:46">.</operator><name pos:start="565:47" pos:end="565:51">start</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
