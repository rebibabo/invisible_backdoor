<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21139.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_frame_headers</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:56"><decl pos:start="1:33" pos:end="1:56"><type pos:start="1:33" pos:end="1:56"><name pos:start="1:33" pos:end="1:51">Indeo3DecodeContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:79"><decl pos:start="1:59" pos:end="1:79"><type pos:start="1:59" pos:end="1:79"><name pos:start="1:59" pos:end="1:72">AVCodecContext</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:79">avctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="209:1">{<block_content pos:start="7:5" pos:end="207:13">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:21"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name>   <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:28">buf_ptr</name> <init pos:start="7:30" pos:end="7:34">= <expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">buf</name></expr></init></decl>, <decl pos:start="7:37" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:37" pos:end="7:37">*</modifier></type><name pos:start="7:38" pos:end="7:43">bs_hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type>        <name pos:start="9:21" pos:end="9:29">frame_num</name></decl>, <decl pos:start="9:32" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:32" pos:end="9:36">word2</name></decl>, <decl pos:start="9:39" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:39" pos:end="9:47">check_sum</name></decl>, <decl pos:start="9:50" pos:end="9:58"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:50" pos:end="9:58">data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:69"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type>        <name pos:start="11:21" pos:end="11:28">y_offset</name></decl>, <decl pos:start="11:31" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:31" pos:end="11:38">u_offset</name></decl>, <decl pos:start="11:41" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:41" pos:end="11:48">v_offset</name></decl>, <decl pos:start="11:51" pos:end="11:59"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:51" pos:end="11:59"><name pos:start="11:51" pos:end="11:56">starts</name><index pos:start="11:57" pos:end="11:59">[<expr pos:start="11:58" pos:end="11:58"><literal type="number" pos:start="11:58" pos:end="11:58">3</literal></expr>]</index></name></decl>, <decl pos:start="11:62" pos:end="11:68"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:62" pos:end="11:68"><name pos:start="11:62" pos:end="11:65">ends</name><index pos:start="11:66" pos:end="11:68">[<expr pos:start="11:67" pos:end="11:67"><literal type="number" pos:start="11:67" pos:end="11:67">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type>        <name pos:start="13:21" pos:end="13:26">height</name></decl>, <decl pos:start="13:29" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:29" pos:end="13:33">width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type>             <name pos:start="15:21" pos:end="15:21">i</name></decl>, <decl pos:start="15:24" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:24">j</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:39">/* parse and check the OS header */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:13">frame_num</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:45"><name pos:start="21:17" pos:end="21:35">bytestream_get_le32</name><argument_list pos:start="21:36" pos:end="21:45">(<argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:44">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:9">word2</name>     <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:45"><name pos:start="23:17" pos:end="23:35">bytestream_get_le32</name><argument_list pos:start="23:36" pos:end="23:45">(<argument pos:start="23:37" pos:end="23:44"><expr pos:start="23:37" pos:end="23:44"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:44">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:13">check_sum</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:45"><name pos:start="25:17" pos:end="25:35">bytestream_get_le32</name><argument_list pos:start="25:36" pos:end="25:45">(<argument pos:start="25:37" pos:end="25:44"><expr pos:start="25:37" pos:end="25:44"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:44">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:13">data_size</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:45"><name pos:start="27:17" pos:end="27:35">bytestream_get_le32</name><argument_list pos:start="27:36" pos:end="27:45">(<argument pos:start="27:37" pos:end="27:44"><expr pos:start="27:37" pos:end="27:44"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:44">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:65">(<expr pos:start="31:9" pos:end="31:64"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:18">frame_num</name> <operator pos:start="31:20" pos:end="31:20">^</operator> <name pos:start="31:22" pos:end="31:26">word2</name> <operator pos:start="31:28" pos:end="31:28">^</operator> <name pos:start="31:30" pos:end="31:38">data_size</name> <operator pos:start="31:40" pos:end="31:40">^</operator> <name pos:start="31:42" pos:end="31:50">OS_HDR_ID</name><operator pos:start="31:51" pos:end="31:51">)</operator> <operator pos:start="31:53" pos:end="31:54">!=</operator> <name pos:start="31:56" pos:end="31:64">check_sum</name></expr>)</condition> <block pos:start="31:67" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:35">

        <expr_stmt pos:start="33:9" pos:end="33:70"><expr pos:start="33:9" pos:end="33:69"><call pos:start="33:9" pos:end="33:69"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:69">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:68"><expr pos:start="33:37" pos:end="33:68"><literal type="string" pos:start="33:37" pos:end="33:68">"OS header checksum mismatch!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:36">/* parse the bitstream header */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:10">bs_hdr</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:20">buf_ptr</name></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:44">(<expr pos:start="47:9" pos:end="47:43"><call pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:27">bytestream_get_le16</name><argument_list pos:start="47:28" pos:end="47:37">(<argument pos:start="47:29" pos:end="47:36"><expr pos:start="47:29" pos:end="47:36"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:36">buf_ptr</name></expr></argument>)</argument_list></call> <operator pos:start="47:39" pos:end="47:40">!=</operator> <literal type="number" pos:start="47:42" pos:end="47:43">32</literal></expr>)</condition> <block pos:start="47:46" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:68"><expr pos:start="49:9" pos:end="49:67"><call pos:start="49:9" pos:end="49:67"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:67">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:66"><expr pos:start="49:37" pos:end="49:66"><literal type="string" pos:start="49:37" pos:end="49:66">"Unsupported codec version!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:7">ctx</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:18">frame_num</name></name>   <operator pos:start="57:22" pos:end="57:22">=</operator>  <name pos:start="57:25" pos:end="57:33">frame_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:7">ctx</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:20">frame_flags</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator>  <call pos:start="59:25" pos:end="59:53"><name pos:start="59:25" pos:end="59:43">bytestream_get_le16</name><argument_list pos:start="59:44" pos:end="59:53">(<argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><operator pos:start="59:45" pos:end="59:45">&amp;</operator><name pos:start="59:46" pos:end="59:52">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:64"><expr pos:start="61:5" pos:end="61:63"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:7">ctx</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:18">data_size</name></name>   <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">(</operator><call pos:start="61:25" pos:end="61:53"><name pos:start="61:25" pos:end="61:43">bytestream_get_le32</name><argument_list pos:start="61:44" pos:end="61:53">(<argument pos:start="61:45" pos:end="61:52"><expr pos:start="61:45" pos:end="61:52"><operator pos:start="61:45" pos:end="61:45">&amp;</operator><name pos:start="61:46" pos:end="61:52">buf_ptr</name></expr></argument>)</argument_list></call> <operator pos:start="61:55" pos:end="61:55">+</operator> <literal type="number" pos:start="61:57" pos:end="61:57">7</literal><operator pos:start="61:58" pos:end="61:58">)</operator> <operator pos:start="61:60" pos:end="61:61">&gt;&gt;</operator> <literal type="number" pos:start="61:63" pos:end="61:63">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">ctx</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:18">cb_offset</name></name>   <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">*</operator><name pos:start="63:25" pos:end="63:31">buf_ptr</name><operator pos:start="63:32" pos:end="63:33">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="69:17"><if pos:start="67:5" pos:end="69:17">if <condition pos:start="67:8" pos:end="67:29">(<expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:22">data_size</name></name> <operator pos:start="67:24" pos:end="67:25">==</operator> <literal type="number" pos:start="67:27" pos:end="67:28">16</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:17"><block_content pos:start="69:9" pos:end="69:17">

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">4</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="73:34"><if pos:start="71:5" pos:end="73:34">if <condition pos:start="71:8" pos:end="71:34">(<expr pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:11">ctx</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:22">data_size</name></name> <operator pos:start="71:24" pos:end="71:24">&gt;</operator> <name pos:start="71:26" pos:end="71:33">buf_size</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:34"><block_content pos:start="73:9" pos:end="73:34">

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:11">ctx</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:22">data_size</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:33">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:17"><expr pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:11">buf_ptr</name> <operator pos:start="77:13" pos:end="77:14">+=</operator> <literal type="number" pos:start="77:16" pos:end="77:16">3</literal></expr>;</expr_stmt> <comment type="line" pos:start="77:19" pos:end="77:52">// skip reserved byte and checksum</comment>



    <comment type="block" pos:start="81:5" pos:end="81:32">/* check frame dimensions */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:10">height</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:42"><name pos:start="83:14" pos:end="83:32">bytestream_get_le16</name><argument_list pos:start="83:33" pos:end="83:42">(<argument pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:41"><operator pos:start="83:34" pos:end="83:34">&amp;</operator><name pos:start="83:35" pos:end="83:41">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:9">width</name>  <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="85:42"><name pos:start="85:14" pos:end="85:32">bytestream_get_le16</name><argument_list pos:start="85:33" pos:end="85:42">(<argument pos:start="85:34" pos:end="85:41"><expr pos:start="85:34" pos:end="85:41"><operator pos:start="85:34" pos:end="85:34">&amp;</operator><name pos:start="85:35" pos:end="85:41">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="89:35"><if pos:start="87:5" pos:end="89:35">if <condition pos:start="87:8" pos:end="87:53">(<expr pos:start="87:9" pos:end="87:52"><call pos:start="87:9" pos:end="87:52"><name pos:start="87:9" pos:end="87:27">av_image_check_size</name><argument_list pos:start="87:28" pos:end="87:52">(<argument pos:start="87:29" pos:end="87:33"><expr pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:33">width</name></expr></argument>, <argument pos:start="87:36" pos:end="87:41"><expr pos:start="87:36" pos:end="87:41"><name pos:start="87:36" pos:end="87:41">height</name></expr></argument>, <argument pos:start="87:44" pos:end="87:44"><expr pos:start="87:44" pos:end="87:44"><literal type="number" pos:start="87:44" pos:end="87:44">0</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:51"><expr pos:start="87:47" pos:end="87:51"><name pos:start="87:47" pos:end="87:51">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:35"><block_content pos:start="89:9" pos:end="89:35">

        <return pos:start="89:9" pos:end="89:35">return <expr pos:start="89:16" pos:end="89:34"><name pos:start="89:16" pos:end="89:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="111:5"><if pos:start="93:5" pos:end="111:5">if <condition pos:start="93:8" pos:end="93:53">(<expr pos:start="93:9" pos:end="93:52"><name pos:start="93:9" pos:end="93:13">width</name> <operator pos:start="93:15" pos:end="93:16">!=</operator> <name pos:start="93:18" pos:end="93:27"><name pos:start="93:18" pos:end="93:20">ctx</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:27">width</name></name> <operator pos:start="93:29" pos:end="93:30">||</operator> <name pos:start="93:32" pos:end="93:37">height</name> <operator pos:start="93:39" pos:end="93:40">!=</operator> <name pos:start="93:42" pos:end="93:52"><name pos:start="93:42" pos:end="93:44">ctx</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:52">height</name></name></expr>)</condition> <block pos:start="93:55" pos:end="111:5">{<block_content pos:start="95:9" pos:end="109:53">

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><call pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:15">av_dlog</name><argument_list pos:start="95:16" pos:end="95:53">(<argument pos:start="95:17" pos:end="95:21"><expr pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:21">avctx</name></expr></argument>, <argument pos:start="95:24" pos:end="95:52"><expr pos:start="95:24" pos:end="95:52"><literal type="string" pos:start="95:24" pos:end="95:52">"Frame dimensions changed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:28"><expr pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:11">ctx</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:18">width</name></name>  <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:27">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">height</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:28">height</name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><call pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:26">free_frame_buffers</name><argument_list pos:start="105:27" pos:end="105:31">(<argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><call pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:30">allocate_frame_buffers</name><argument_list pos:start="107:31" pos:end="107:42">(<argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">ctx</name></expr></argument>, <argument pos:start="107:37" pos:end="107:41"><expr pos:start="107:37" pos:end="107:41"><name pos:start="107:37" pos:end="107:41">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><call pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:30">avcodec_set_dimensions</name><argument_list pos:start="109:31" pos:end="109:52">(<argument pos:start="109:32" pos:end="109:36"><expr pos:start="109:32" pos:end="109:36"><name pos:start="109:32" pos:end="109:36">avctx</name></expr></argument>, <argument pos:start="109:39" pos:end="109:43"><expr pos:start="109:39" pos:end="109:43"><name pos:start="109:39" pos:end="109:43">width</name></expr></argument>, <argument pos:start="109:46" pos:end="109:51"><expr pos:start="109:46" pos:end="109:51"><name pos:start="109:46" pos:end="109:51">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:45"><expr pos:start="115:5" pos:end="115:44"><name pos:start="115:5" pos:end="115:12">y_offset</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:44"><name pos:start="115:16" pos:end="115:34">bytestream_get_le32</name><argument_list pos:start="115:35" pos:end="115:44">(<argument pos:start="115:36" pos:end="115:43"><expr pos:start="115:36" pos:end="115:43"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:43">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:45"><expr pos:start="117:5" pos:end="117:44"><name pos:start="117:5" pos:end="117:12">v_offset</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <call pos:start="117:16" pos:end="117:44"><name pos:start="117:16" pos:end="117:34">bytestream_get_le32</name><argument_list pos:start="117:35" pos:end="117:44">(<argument pos:start="117:36" pos:end="117:43"><expr pos:start="117:36" pos:end="117:43"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:43">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:45"><expr pos:start="119:5" pos:end="119:44"><name pos:start="119:5" pos:end="119:12">u_offset</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="119:44"><name pos:start="119:16" pos:end="119:34">bytestream_get_le32</name><argument_list pos:start="119:35" pos:end="119:44">(<argument pos:start="119:36" pos:end="119:43"><expr pos:start="119:36" pos:end="119:43"><operator pos:start="119:36" pos:end="119:36">&amp;</operator><name pos:start="119:37" pos:end="119:43">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:72">/* unfortunately there is no common order of planes in the buffer */</comment>

    <comment type="block" pos:start="125:5" pos:end="125:72">/* so we use that sorting algo for determining planes data sizes  */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:25"><expr pos:start="127:5" pos:end="127:24"><name pos:start="127:5" pos:end="127:13"><name pos:start="127:5" pos:end="127:10">starts</name><index pos:start="127:11" pos:end="127:13">[<expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>]</index></name> <operator pos:start="127:15" pos:end="127:15">=</operator> <name pos:start="127:17" pos:end="127:24">y_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:25"><expr pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:13"><name pos:start="129:5" pos:end="129:10">starts</name><index pos:start="129:11" pos:end="129:13">[<expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">1</literal></expr>]</index></name> <operator pos:start="129:15" pos:end="129:15">=</operator> <name pos:start="129:17" pos:end="129:24">v_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:25"><expr pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:13"><name pos:start="131:5" pos:end="131:10">starts</name><index pos:start="131:11" pos:end="131:13">[<expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">2</literal></expr>]</index></name> <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:24">u_offset</name></expr>;</expr_stmt>



    <for pos:start="135:5" pos:end="145:5">for <control pos:start="135:9" pos:end="135:27">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">j</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:22"><expr pos:start="135:17" pos:end="135:21"><name pos:start="135:17" pos:end="135:17">j</name> <operator pos:start="135:19" pos:end="135:19">&lt;</operator> <literal type="number" pos:start="135:21" pos:end="135:21">3</literal></expr>;</condition> <incr pos:start="135:24" pos:end="135:26"><expr pos:start="135:24" pos:end="135:26"><name pos:start="135:24" pos:end="135:24">j</name><operator pos:start="135:25" pos:end="135:26">++</operator></expr></incr>)</control> <block pos:start="135:29" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:36">

        <expr_stmt pos:start="137:9" pos:end="137:33"><expr pos:start="137:9" pos:end="137:32"><name pos:start="137:9" pos:end="137:15"><name pos:start="137:9" pos:end="137:12">ends</name><index pos:start="137:13" pos:end="137:15">[<expr pos:start="137:14" pos:end="137:14"><name pos:start="137:14" pos:end="137:14">j</name></expr>]</index></name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:32"><name pos:start="137:19" pos:end="137:21">ctx</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:32">data_size</name></name></expr>;</expr_stmt>

        <for pos:start="139:9" pos:end="143:36">for <control pos:start="139:13" pos:end="139:32">(<init pos:start="139:14" pos:end="139:19"><expr pos:start="139:14" pos:end="139:18"><name pos:start="139:14" pos:end="139:14">i</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <literal type="number" pos:start="139:18" pos:end="139:18">2</literal></expr>;</init> <condition pos:start="139:21" pos:end="139:27"><expr pos:start="139:21" pos:end="139:26"><name pos:start="139:21" pos:end="139:21">i</name> <operator pos:start="139:23" pos:end="139:24">&gt;=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</condition> <incr pos:start="139:29" pos:end="139:31"><expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:29">i</name><operator pos:start="139:30" pos:end="139:31">--</operator></expr></incr>)</control><block type="pseudo" pos:start="141:13" pos:end="143:36"><block_content pos:start="141:13" pos:end="143:36">

            <if_stmt pos:start="141:13" pos:end="143:36"><if pos:start="141:13" pos:end="143:36">if <condition pos:start="141:16" pos:end="141:61">(<expr pos:start="141:17" pos:end="141:60"><name pos:start="141:17" pos:end="141:25"><name pos:start="141:17" pos:end="141:22">starts</name><index pos:start="141:23" pos:end="141:25">[<expr pos:start="141:24" pos:end="141:24"><name pos:start="141:24" pos:end="141:24">i</name></expr>]</index></name> <operator pos:start="141:27" pos:end="141:27">&lt;</operator> <name pos:start="141:29" pos:end="141:35"><name pos:start="141:29" pos:end="141:32">ends</name><index pos:start="141:33" pos:end="141:35">[<expr pos:start="141:34" pos:end="141:34"><name pos:start="141:34" pos:end="141:34">j</name></expr>]</index></name> <operator pos:start="141:37" pos:end="141:38">&amp;&amp;</operator> <name pos:start="141:40" pos:end="141:48"><name pos:start="141:40" pos:end="141:45">starts</name><index pos:start="141:46" pos:end="141:48">[<expr pos:start="141:47" pos:end="141:47"><name pos:start="141:47" pos:end="141:47">i</name></expr>]</index></name> <operator pos:start="141:50" pos:end="141:50">&gt;</operator> <name pos:start="141:52" pos:end="141:60"><name pos:start="141:52" pos:end="141:57">starts</name><index pos:start="141:58" pos:end="141:60">[<expr pos:start="141:59" pos:end="141:59"><name pos:start="141:59" pos:end="141:59">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:36"><block_content pos:start="143:17" pos:end="143:36">

                <expr_stmt pos:start="143:17" pos:end="143:36"><expr pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:23"><name pos:start="143:17" pos:end="143:20">ends</name><index pos:start="143:21" pos:end="143:23">[<expr pos:start="143:22" pos:end="143:22"><name pos:start="143:22" pos:end="143:22">j</name></expr>]</index></name> <operator pos:start="143:25" pos:end="143:25">=</operator> <name pos:start="143:27" pos:end="143:35"><name pos:start="143:27" pos:end="143:32">starts</name><index pos:start="143:33" pos:end="143:35">[<expr pos:start="143:34" pos:end="143:34"><name pos:start="143:34" pos:end="143:34">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="149:5" pos:end="149:43"><expr pos:start="149:5" pos:end="149:42"><name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:7">ctx</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:20">y_data_size</name></name> <operator pos:start="149:22" pos:end="149:22">=</operator> <name pos:start="149:24" pos:end="149:30"><name pos:start="149:24" pos:end="149:27">ends</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><literal type="number" pos:start="149:29" pos:end="149:29">0</literal></expr>]</index></name> <operator pos:start="149:32" pos:end="149:32">-</operator> <name pos:start="149:34" pos:end="149:42"><name pos:start="149:34" pos:end="149:39">starts</name><index pos:start="149:40" pos:end="149:42">[<expr pos:start="149:41" pos:end="149:41"><literal type="number" pos:start="149:41" pos:end="149:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:43"><expr pos:start="151:5" pos:end="151:42"><name pos:start="151:5" pos:end="151:20"><name pos:start="151:5" pos:end="151:7">ctx</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:20">v_data_size</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:30"><name pos:start="151:24" pos:end="151:27">ends</name><index pos:start="151:28" pos:end="151:30">[<expr pos:start="151:29" pos:end="151:29"><literal type="number" pos:start="151:29" pos:end="151:29">1</literal></expr>]</index></name> <operator pos:start="151:32" pos:end="151:32">-</operator> <name pos:start="151:34" pos:end="151:42"><name pos:start="151:34" pos:end="151:39">starts</name><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><literal type="number" pos:start="151:41" pos:end="151:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:43"><expr pos:start="153:5" pos:end="153:42"><name pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:7">ctx</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:20">u_data_size</name></name> <operator pos:start="153:22" pos:end="153:22">=</operator> <name pos:start="153:24" pos:end="153:30"><name pos:start="153:24" pos:end="153:27">ends</name><index pos:start="153:28" pos:end="153:30">[<expr pos:start="153:29" pos:end="153:29"><literal type="number" pos:start="153:29" pos:end="153:29">2</literal></expr>]</index></name> <operator pos:start="153:32" pos:end="153:32">-</operator> <name pos:start="153:34" pos:end="153:42"><name pos:start="153:34" pos:end="153:39">starts</name><index pos:start="153:40" pos:end="153:42">[<expr pos:start="153:41" pos:end="153:41"><literal type="number" pos:start="153:41" pos:end="153:41">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="163:5"><if pos:start="155:5" pos:end="163:5">if <condition pos:start="155:8" pos:end="157:74">(<expr pos:start="155:9" pos:end="157:73"><call pos:start="155:9" pos:end="155:44"><name pos:start="155:9" pos:end="155:14">FFMAX3</name><argument_list pos:start="155:15" pos:end="155:44">(<argument pos:start="155:16" pos:end="155:23"><expr pos:start="155:16" pos:end="155:23"><name pos:start="155:16" pos:end="155:23">y_offset</name></expr></argument>, <argument pos:start="155:26" pos:end="155:33"><expr pos:start="155:26" pos:end="155:33"><name pos:start="155:26" pos:end="155:33">v_offset</name></expr></argument>, <argument pos:start="155:36" pos:end="155:43"><expr pos:start="155:36" pos:end="155:43"><name pos:start="155:36" pos:end="155:43">u_offset</name></expr></argument>)</argument_list></call> <operator pos:start="155:46" pos:end="155:47">&gt;=</operator> <name pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:51">ctx</name><operator pos:start="155:52" pos:end="155:53">-&gt;</operator><name pos:start="155:54" pos:end="155:62">data_size</name></name> <operator pos:start="155:64" pos:end="155:64">-</operator> <literal type="number" pos:start="155:66" pos:end="155:67">16</literal> <operator pos:start="155:69" pos:end="155:70">||</operator>

        <call pos:start="157:9" pos:end="157:68"><name pos:start="157:9" pos:end="157:14">FFMIN3</name><argument_list pos:start="157:15" pos:end="157:68">(<argument pos:start="157:16" pos:end="157:31"><expr pos:start="157:16" pos:end="157:31"><name pos:start="157:16" pos:end="157:31"><name pos:start="157:16" pos:end="157:18">ctx</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:31">y_data_size</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:49"><expr pos:start="157:34" pos:end="157:49"><name pos:start="157:34" pos:end="157:49"><name pos:start="157:34" pos:end="157:36">ctx</name><operator pos:start="157:37" pos:end="157:38">-&gt;</operator><name pos:start="157:39" pos:end="157:49">v_data_size</name></name></expr></argument>, <argument pos:start="157:52" pos:end="157:67"><expr pos:start="157:52" pos:end="157:67"><name pos:start="157:52" pos:end="157:67"><name pos:start="157:52" pos:end="157:54">ctx</name><operator pos:start="157:55" pos:end="157:56">-&gt;</operator><name pos:start="157:57" pos:end="157:67">u_data_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="157:70" pos:end="157:71">&lt;=</operator> <literal type="number" pos:start="157:73" pos:end="157:73">0</literal></expr>)</condition> <block pos:start="157:76" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:35">

        <expr_stmt pos:start="159:9" pos:end="159:77"><expr pos:start="159:9" pos:end="159:76"><call pos:start="159:9" pos:end="159:76"><name pos:start="159:9" pos:end="159:14">av_log</name><argument_list pos:start="159:15" pos:end="159:76">(<argument pos:start="159:16" pos:end="159:20"><expr pos:start="159:16" pos:end="159:20"><name pos:start="159:16" pos:end="159:20">avctx</name></expr></argument>, <argument pos:start="159:23" pos:end="159:34"><expr pos:start="159:23" pos:end="159:34"><name pos:start="159:23" pos:end="159:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:37" pos:end="159:75"><expr pos:start="159:37" pos:end="159:75"><literal type="string" pos:start="159:37" pos:end="159:75">"One of the y/u/v offsets is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="161:9" pos:end="161:35">return <expr pos:start="161:16" pos:end="161:34"><name pos:start="161:16" pos:end="161:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:40"><expr pos:start="167:5" pos:end="167:39"><name pos:start="167:5" pos:end="167:19"><name pos:start="167:5" pos:end="167:7">ctx</name><operator pos:start="167:8" pos:end="167:9">-&gt;</operator><name pos:start="167:10" pos:end="167:19">y_data_ptr</name></name> <operator pos:start="167:21" pos:end="167:21">=</operator> <name pos:start="167:23" pos:end="167:28">bs_hdr</name> <operator pos:start="167:30" pos:end="167:30">+</operator> <name pos:start="167:32" pos:end="167:39">y_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:40"><expr pos:start="169:5" pos:end="169:39"><name pos:start="169:5" pos:end="169:19"><name pos:start="169:5" pos:end="169:7">ctx</name><operator pos:start="169:8" pos:end="169:9">-&gt;</operator><name pos:start="169:10" pos:end="169:19">v_data_ptr</name></name> <operator pos:start="169:21" pos:end="169:21">=</operator> <name pos:start="169:23" pos:end="169:28">bs_hdr</name> <operator pos:start="169:30" pos:end="169:30">+</operator> <name pos:start="169:32" pos:end="169:39">v_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:40"><expr pos:start="171:5" pos:end="171:39"><name pos:start="171:5" pos:end="171:19"><name pos:start="171:5" pos:end="171:7">ctx</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:19">u_data_ptr</name></name> <operator pos:start="171:21" pos:end="171:21">=</operator> <name pos:start="171:23" pos:end="171:28">bs_hdr</name> <operator pos:start="171:30" pos:end="171:30">+</operator> <name pos:start="171:32" pos:end="171:39">u_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:49"><expr pos:start="173:5" pos:end="173:48"><name pos:start="173:5" pos:end="173:18"><name pos:start="173:5" pos:end="173:7">ctx</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:18">alt_quant</name></name>  <operator pos:start="173:21" pos:end="173:21">=</operator> <name pos:start="173:23" pos:end="173:29">buf_ptr</name> <operator pos:start="173:31" pos:end="173:31">+</operator> <sizeof pos:start="173:33" pos:end="173:48">sizeof<argument_list pos:start="173:39" pos:end="173:48">(<argument pos:start="173:40" pos:end="173:47"><expr pos:start="173:40" pos:end="173:47"><name pos:start="173:40" pos:end="173:47">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <if_stmt pos:start="177:5" pos:end="183:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:29">(<expr pos:start="177:9" pos:end="177:28"><name pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:11">ctx</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:22">data_size</name></name> <operator pos:start="177:24" pos:end="177:25">==</operator> <literal type="number" pos:start="177:27" pos:end="177:28">16</literal></expr>)</condition> <block pos:start="177:31" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:18">

        <expr_stmt pos:start="179:9" pos:end="179:65"><expr pos:start="179:9" pos:end="179:64"><call pos:start="179:9" pos:end="179:64"><name pos:start="179:9" pos:end="179:14">av_log</name><argument_list pos:start="179:15" pos:end="179:64">(<argument pos:start="179:16" pos:end="179:20"><expr pos:start="179:16" pos:end="179:20"><name pos:start="179:16" pos:end="179:20">avctx</name></expr></argument>, <argument pos:start="179:23" pos:end="179:34"><expr pos:start="179:23" pos:end="179:34"><name pos:start="179:23" pos:end="179:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="179:37" pos:end="179:63"><expr pos:start="179:37" pos:end="179:63"><literal type="string" pos:start="179:37" pos:end="179:63">"Sync frame encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:18">return <expr pos:start="181:16" pos:end="181:17"><literal type="number" pos:start="181:16" pos:end="181:17">16</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if <condition pos:start="187:8" pos:end="187:39">(<expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:11">ctx</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:24">frame_flags</name></name> <operator pos:start="187:26" pos:end="187:26">&amp;</operator> <name pos:start="187:28" pos:end="187:38">BS_8BIT_PEL</name></expr>)</condition> <block pos:start="187:41" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:36">

        <expr_stmt pos:start="189:9" pos:end="189:61"><expr pos:start="189:9" pos:end="189:60"><call pos:start="189:9" pos:end="189:60"><name pos:start="189:9" pos:end="189:29">av_log_ask_for_sample</name><argument_list pos:start="189:30" pos:end="189:60">(<argument pos:start="189:31" pos:end="189:35"><expr pos:start="189:31" pos:end="189:35"><name pos:start="189:31" pos:end="189:35">avctx</name></expr></argument>, <argument pos:start="189:38" pos:end="189:59"><expr pos:start="189:38" pos:end="189:59"><literal type="string" pos:start="189:38" pos:end="189:59">"8-bit pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:36">return <expr pos:start="191:16" pos:end="191:35"><name pos:start="191:16" pos:end="191:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if <condition pos:start="197:8" pos:end="197:75">(<expr pos:start="197:9" pos:end="197:74"><name pos:start="197:9" pos:end="197:24"><name pos:start="197:9" pos:end="197:11">ctx</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:24">frame_flags</name></name> <operator pos:start="197:26" pos:end="197:26">&amp;</operator> <name pos:start="197:28" pos:end="197:39">BS_MV_X_HALF</name> <operator pos:start="197:41" pos:end="197:42">||</operator> <name pos:start="197:44" pos:end="197:59"><name pos:start="197:44" pos:end="197:46">ctx</name><operator pos:start="197:47" pos:end="197:48">-&gt;</operator><name pos:start="197:49" pos:end="197:59">frame_flags</name></name> <operator pos:start="197:61" pos:end="197:61">&amp;</operator> <name pos:start="197:63" pos:end="197:74">BS_MV_Y_HALF</name></expr>)</condition> <block pos:start="197:77" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:36">

        <expr_stmt pos:start="199:9" pos:end="199:65"><expr pos:start="199:9" pos:end="199:64"><call pos:start="199:9" pos:end="199:64"><name pos:start="199:9" pos:end="199:29">av_log_ask_for_sample</name><argument_list pos:start="199:30" pos:end="199:64">(<argument pos:start="199:31" pos:end="199:35"><expr pos:start="199:31" pos:end="199:35"><name pos:start="199:31" pos:end="199:35">avctx</name></expr></argument>, <argument pos:start="199:38" pos:end="199:63"><expr pos:start="199:38" pos:end="199:63"><literal type="string" pos:start="199:38" pos:end="199:63">"halfpel motion vectors\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="201:9" pos:end="201:36">return <expr pos:start="201:16" pos:end="201:35"><name pos:start="201:16" pos:end="201:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
