<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5123.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mp3_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:53"><expr pos:start="9:5" pos:end="9:52"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:52"><name pos:start="9:11" pos:end="9:23">av_get_packet</name><argument_list pos:start="9:24" pos:end="9:52">(<argument pos:start="9:25" pos:end="9:29"><expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></argument>, <argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">pkt</name></expr></argument>, <argument pos:start="9:37" pos:end="9:51"><expr pos:start="9:37" pos:end="9:51"><name pos:start="9:37" pos:end="9:51">MP3_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:7">pkt</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:21">stream_index</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">&lt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:28">

        <return pos:start="17:9" pos:end="17:28">return <expr pos:start="17:16" pos:end="17:27"><call pos:start="17:16" pos:end="17:27"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:27">(<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:30"><if pos:start="23:5" pos:end="27:30">if <condition pos:start="23:8" pos:end="25:64">(<expr pos:start="23:9" pos:end="25:63"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&gt;</operator> <name pos:start="23:15" pos:end="23:28">ID3v1_TAG_SIZE</name> <operator pos:start="23:30" pos:end="23:31">&amp;&amp;</operator>

        <call pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:14">memcmp</name><argument_list pos:start="25:15" pos:end="25:58">(<argument pos:start="25:16" pos:end="25:47"><expr pos:start="25:16" pos:end="25:47"><operator pos:start="25:16" pos:end="25:16">&amp;</operator><name pos:start="25:17" pos:end="25:47"><name pos:start="25:17" pos:end="25:19">pkt</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:25">data</name><index pos:start="25:26" pos:end="25:47">[<expr pos:start="25:27" pos:end="25:46"><name pos:start="25:27" pos:end="25:29">ret</name> <operator pos:start="25:31" pos:end="25:31">-</operator> <name pos:start="25:33" pos:end="25:46">ID3v1_TAG_SIZE</name></expr>]</index></name></expr></argument>, <argument pos:start="25:50" pos:end="25:54"><expr pos:start="25:50" pos:end="25:54"><literal type="string" pos:start="25:50" pos:end="25:54">"TAG"</literal></expr></argument>, <argument pos:start="25:57" pos:end="25:57"><expr pos:start="25:57" pos:end="25:57"><literal type="number" pos:start="25:57" pos:end="25:57">3</literal></expr></argument>)</argument_list></call> <operator pos:start="25:60" pos:end="25:61">==</operator> <literal type="number" pos:start="25:63" pos:end="25:63">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:30"><block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:14">-=</operator> <name pos:start="27:16" pos:end="27:29">ID3v1_TAG_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="33:16">/* note: we need to modify the packet size here to handle the last

       packet */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:7">pkt</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:13">size</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:19">ret</name></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
