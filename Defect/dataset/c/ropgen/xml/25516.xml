<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25516.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">char</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:31">qmp_human_monitor_command</name><parameter_list pos:start="1:32" pos:end="3:64">(<parameter pos:start="1:33" pos:end="1:56"><decl pos:start="1:33" pos:end="1:56"><type pos:start="1:33" pos:end="1:56"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:56">command_line</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><name pos:start="1:59" pos:end="1:62">bool</name></type> <name pos:start="1:64" pos:end="1:76">has_cpu_index</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:39">int64_t</name></type> <name pos:start="3:41" pos:end="3:49">cpu_index</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:56">Error</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier><modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:18">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">output</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Monitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">old_mon</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:23" pos:end="9:25">hmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:32">(<argument pos:start="13:12" pos:end="13:15"><expr pos:start="13:12" pos:end="13:15"><operator pos:start="13:12" pos:end="13:12">&amp;</operator><name pos:start="13:13" pos:end="13:15">hmp</name></expr></argument>, <argument pos:start="13:18" pos:end="13:18"><expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></argument>, <argument pos:start="13:21" pos:end="13:31"><expr pos:start="13:21" pos:end="13:31"><sizeof pos:start="13:21" pos:end="13:31">sizeof<argument_list pos:start="13:27" pos:end="13:31">(<argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:30">hmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:7">hmp</name><operator pos:start="15:8" pos:end="15:8">.</operator><name pos:start="15:9" pos:end="15:14">outbuf</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:30"><name pos:start="15:18" pos:end="15:28">qstring_new</name><argument_list pos:start="15:29" pos:end="15:30">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">hmp</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:18">skip_flush</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:25">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:11">old_mon</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:21">cur_mon</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:11">cur_mon</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:18">hmp</name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="43:5"><if pos:start="27:5" pos:end="43:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:21">has_cpu_index</name></expr>)</condition> <block pos:start="27:24" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:9">

        <decl_stmt pos:start="29:9" pos:end="29:45"><decl pos:start="29:9" pos:end="29:44"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:15">ret</name> <init pos:start="29:17" pos:end="29:44">= <expr pos:start="29:19" pos:end="29:44"><call pos:start="29:19" pos:end="29:44"><name pos:start="29:19" pos:end="29:33">monitor_set_cpu</name><argument_list pos:start="29:34" pos:end="29:44">(<argument pos:start="29:35" pos:end="29:43"><expr pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:43">cpu_index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition> <block pos:start="31:22" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:21">

            <expr_stmt pos:start="33:13" pos:end="33:30"><expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:19">cur_mon</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:29">old_mon</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="37:38"><expr pos:start="35:13" pos:end="37:37"><call pos:start="35:13" pos:end="37:37"><name pos:start="35:13" pos:end="35:21">error_set</name><argument_list pos:start="35:22" pos:end="37:37">(<argument pos:start="35:23" pos:end="35:26"><expr pos:start="35:23" pos:end="35:26"><name pos:start="35:23" pos:end="35:26">errp</name></expr></argument>, <argument pos:start="35:29" pos:end="35:56"><expr pos:start="35:29" pos:end="35:56"><name pos:start="35:29" pos:end="35:56">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="35:59" pos:end="35:69"><expr pos:start="35:59" pos:end="35:69"><literal type="string" pos:start="35:59" pos:end="35:69">"cpu-index"</literal></expr></argument>,

                      <argument pos:start="37:23" pos:end="37:36"><expr pos:start="37:23" pos:end="37:36"><literal type="string" pos:start="37:23" pos:end="37:36">"a CPU number"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="39:13" pos:end="39:21">goto <name pos:start="39:18" pos:end="39:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><call pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:23">handle_user_command</name><argument_list pos:start="47:24" pos:end="47:43">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><operator pos:start="47:25" pos:end="47:25">&amp;</operator><name pos:start="47:26" pos:end="47:28">hmp</name></expr></argument>, <argument pos:start="47:31" pos:end="47:42"><expr pos:start="47:31" pos:end="47:42"><name pos:start="47:31" pos:end="47:42">command_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:22"><expr pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:11">cur_mon</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:21">old_mon</name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:43">(<expr pos:start="53:9" pos:end="53:42"><call pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:26">qstring_get_length</name><argument_list pos:start="53:27" pos:end="53:38">(<argument pos:start="53:28" pos:end="53:37"><expr pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:30">hmp</name><operator pos:start="53:31" pos:end="53:31">.</operator><name pos:start="53:32" pos:end="53:37">outbuf</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:40" pos:end="53:40">&gt;</operator> <literal type="number" pos:start="53:42" pos:end="53:42">0</literal></expr>)</condition> <block pos:start="53:45" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:55">

        <expr_stmt pos:start="55:9" pos:end="55:55"><expr pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:14">output</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:54"><name pos:start="55:18" pos:end="55:25">g_strdup</name><argument_list pos:start="55:26" pos:end="55:54">(<argument pos:start="55:27" pos:end="55:53"><expr pos:start="55:27" pos:end="55:53"><call pos:start="55:27" pos:end="55:53"><name pos:start="55:27" pos:end="55:41">qstring_get_str</name><argument_list pos:start="55:42" pos:end="55:53">(<argument pos:start="55:43" pos:end="55:52"><expr pos:start="55:43" pos:end="55:52"><name pos:start="55:43" pos:end="55:52"><name pos:start="55:43" pos:end="55:45">hmp</name><operator pos:start="55:46" pos:end="55:46">.</operator><name pos:start="55:47" pos:end="55:52">outbuf</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:30">

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:14">output</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="59:29"><name pos:start="59:18" pos:end="59:25">g_strdup</name><argument_list pos:start="59:26" pos:end="59:29">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><literal type="string" pos:start="59:27" pos:end="59:28">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="65:1" pos:end="65:4"><name pos:start="65:1" pos:end="65:3">out</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><call pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:11">QDECREF</name><argument_list pos:start="67:12" pos:end="67:23">(<argument pos:start="67:13" pos:end="67:22"><expr pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:15">hmp</name><operator pos:start="67:16" pos:end="67:16">.</operator><name pos:start="67:17" pos:end="67:22">outbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:18">return <expr pos:start="69:12" pos:end="69:17"><name pos:start="69:12" pos:end="69:17">output</name></expr>;</return>

</block_content>}</block></function>
</unit>
