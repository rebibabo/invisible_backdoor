<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22015.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">mp3_seek</name><parameter_list pos:start="1:20" pos:end="3:30">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:56">stream_index</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:65">int64_t</name></type> <name pos:start="1:67" pos:end="1:75">timestamp</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MP3DecContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">mp3</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVIndexEntry</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:20">ie</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:18"/><name pos:start="9:23" pos:end="9:25">ie1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:32">= <expr pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:29">streams</name><index pos:start="11:30" pos:end="11:32">[<expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:67"><decl pos:start="13:5" pos:end="13:66"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name>  <init pos:start="13:18" pos:end="13:66">= <expr pos:start="13:20" pos:end="13:66"><call pos:start="13:20" pos:end="13:66"><name pos:start="13:20" pos:end="13:44">av_index_search_timestamp</name><argument_list pos:start="13:45" pos:end="13:66">(<argument pos:start="13:46" pos:end="13:47"><expr pos:start="13:46" pos:end="13:47"><name pos:start="13:46" pos:end="13:47">st</name></expr></argument>, <argument pos:start="13:50" pos:end="13:58"><expr pos:start="13:50" pos:end="13:58"><name pos:start="13:50" pos:end="13:58">timestamp</name></expr></argument>, <argument pos:start="13:61" pos:end="13:65"><expr pos:start="13:61" pos:end="13:65"><name pos:start="13:61" pos:end="13:65">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:20">best_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:62"><decl pos:start="17:5" pos:end="17:61"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">fast_seek</name> <init pos:start="17:19" pos:end="17:61">= <expr pos:start="17:21" pos:end="17:61"><ternary pos:start="17:21" pos:end="17:61"><condition pos:start="17:21" pos:end="17:55"><expr pos:start="17:21" pos:end="17:53"><operator pos:start="17:21" pos:end="17:21">(</operator><name pos:start="17:22" pos:end="17:29"><name pos:start="17:22" pos:end="17:22">s</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:29">flags</name></name> <operator pos:start="17:31" pos:end="17:31">&amp;</operator> <name pos:start="17:33" pos:end="17:52">AVFMT_FLAG_FAST_SEEK</name><operator pos:start="17:53" pos:end="17:53">)</operator></expr> ?</condition><then pos:start="17:57" pos:end="17:57"> <expr pos:start="17:57" pos:end="17:57"><literal type="number" pos:start="17:57" pos:end="17:57">1</literal></expr> </then><else pos:start="17:59" pos:end="17:61">: <expr pos:start="17:61" pos:end="17:61"><literal type="number" pos:start="17:61" pos:end="17:61">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:20">filesize</name> <init pos:start="19:22" pos:end="19:43">= <expr pos:start="19:24" pos:end="19:43"><name pos:start="19:24" pos:end="19:43"><name pos:start="19:24" pos:end="19:26">mp3</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:43">header_filesize</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">mp3</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:19">usetoc</name></name> <operator pos:start="23:21" pos:end="23:22">==</operator> <literal type="number" pos:start="23:24" pos:end="23:24">2</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="25:20" pos:end="25:40">// generic index code</comment>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16">filesize</name> <operator pos:start="29:18" pos:end="29:19">&lt;=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition> <block pos:start="29:24" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:55">

        <decl_stmt pos:start="31:9" pos:end="31:40"><decl pos:start="31:9" pos:end="31:39"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">int64_t</name></type> <name pos:start="31:17" pos:end="31:20">size</name> <init pos:start="31:22" pos:end="31:39">= <expr pos:start="31:24" pos:end="31:39"><call pos:start="31:24" pos:end="31:39"><name pos:start="31:24" pos:end="31:32">avio_size</name><argument_list pos:start="31:33" pos:end="31:39">(<argument pos:start="31:34" pos:end="31:38"><expr pos:start="31:34" pos:end="31:38"><name pos:start="31:34" pos:end="31:38"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="35:55"><if pos:start="33:9" pos:end="35:55">if <condition pos:start="33:12" pos:end="33:56">(<expr pos:start="33:13" pos:end="33:55"><name pos:start="33:13" pos:end="33:16">size</name> <operator pos:start="33:18" pos:end="33:18">&gt;</operator> <literal type="number" pos:start="33:20" pos:end="33:20">0</literal> <operator pos:start="33:22" pos:end="33:23">&amp;&amp;</operator> <name pos:start="33:25" pos:end="33:28">size</name> <operator pos:start="33:30" pos:end="33:30">&gt;</operator> <name pos:start="33:32" pos:end="33:55"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:42">internal</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:55">data_offset</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:55"><block_content pos:start="35:13" pos:end="35:55">

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:20">filesize</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:27">size</name> <operator pos:start="35:29" pos:end="35:29">-</operator> <name pos:start="35:31" pos:end="35:54"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:41">internal</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:54">data_offset</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="71:5"><if pos:start="41:5" pos:end="57:5">if <condition pos:start="41:8" pos:end="47:24">(   <expr pos:start="41:12" pos:end="47:23"><operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:15">mp3</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:23">is_cbr</name></name> <operator pos:start="41:25" pos:end="41:26">||</operator> <name pos:start="41:28" pos:end="41:36">fast_seek</name><operator pos:start="41:37" pos:end="41:37">)</operator>

        <operator pos:start="43:9" pos:end="43:10">&amp;&amp;</operator> <operator pos:start="43:12" pos:end="43:12">(</operator><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:15">mp3</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:23">usetoc</name></name> <operator pos:start="43:25" pos:end="43:26">==</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal> <operator pos:start="43:30" pos:end="43:31">||</operator> <operator pos:start="43:33" pos:end="43:33">!</operator><name pos:start="43:34" pos:end="43:46"><name pos:start="43:34" pos:end="43:36">mp3</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:46">xing_toc</name></name><operator pos:start="43:47" pos:end="43:47">)</operator>

        <operator pos:start="45:9" pos:end="45:10">&amp;&amp;</operator> <name pos:start="45:12" pos:end="45:23"><name pos:start="45:12" pos:end="45:13">st</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">duration</name></name> <operator pos:start="45:25" pos:end="45:25">&gt;</operator> <literal type="number" pos:start="45:27" pos:end="45:27">0</literal>

        <operator pos:start="47:9" pos:end="47:10">&amp;&amp;</operator> <name pos:start="47:12" pos:end="47:19">filesize</name> <operator pos:start="47:21" pos:end="47:21">&gt;</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition> <block pos:start="47:26" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:97">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:10">ie</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <operator pos:start="49:14" pos:end="49:14">&amp;</operator><name pos:start="49:15" pos:end="49:17">ie1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:17">timestamp</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:57"><name pos:start="51:21" pos:end="51:29">av_clip64</name><argument_list pos:start="51:30" pos:end="51:57">(<argument pos:start="51:31" pos:end="51:39"><expr pos:start="51:31" pos:end="51:39"><name pos:start="51:31" pos:end="51:39">timestamp</name></expr></argument>, <argument pos:start="51:42" pos:end="51:42"><expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">0</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:56"><expr pos:start="51:45" pos:end="51:56"><name pos:start="51:45" pos:end="51:56"><name pos:start="51:45" pos:end="51:46">st</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:56">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:10">ie</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:21">timestamp</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:33">timestamp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:97"><expr pos:start="55:9" pos:end="55:96"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:10">ie</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:15">pos</name></name>       <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="55:69"><name pos:start="55:25" pos:end="55:34">av_rescale</name><argument_list pos:start="55:35" pos:end="55:69">(<argument pos:start="55:36" pos:end="55:44"><expr pos:start="55:36" pos:end="55:44"><name pos:start="55:36" pos:end="55:44">timestamp</name></expr></argument>, <argument pos:start="55:47" pos:end="55:54"><expr pos:start="55:47" pos:end="55:54"><name pos:start="55:47" pos:end="55:54">filesize</name></expr></argument>, <argument pos:start="55:57" pos:end="55:68"><expr pos:start="55:57" pos:end="55:68"><name pos:start="55:57" pos:end="55:68"><name pos:start="55:57" pos:end="55:58">st</name><operator pos:start="55:59" pos:end="55:60">-&gt;</operator><name pos:start="55:61" pos:end="55:68">duration</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:71" pos:end="55:71">+</operator> <name pos:start="55:73" pos:end="55:96"><name pos:start="55:73" pos:end="55:73">s</name><operator pos:start="55:74" pos:end="55:75">-&gt;</operator><name pos:start="55:76" pos:end="55:83">internal</name><operator pos:start="55:84" pos:end="55:85">-&gt;</operator><name pos:start="55:86" pos:end="55:96">data_offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="67:5">else if <condition pos:start="57:15" pos:end="57:29">(<expr pos:start="57:16" pos:end="57:28"><name pos:start="57:16" pos:end="57:28"><name pos:start="57:16" pos:end="57:18">mp3</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:28">xing_toc</name></name></expr>)</condition> <block pos:start="57:31" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:37">

        <if_stmt pos:start="59:9" pos:end="61:23"><if pos:start="59:9" pos:end="61:23">if <condition pos:start="59:12" pos:end="59:20">(<expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:23"><block_content pos:start="61:13" pos:end="61:23">

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:10">ie</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:36"><name pos:start="65:15" pos:end="65:16">st</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:31">index_entries</name><index pos:start="65:32" pos:end="65:36">[<expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">ret</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="71:5">else <block pos:start="67:12" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:18">

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:12">best_pos</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="75:42"><name pos:start="75:16" pos:end="75:23">mp3_sync</name><argument_list pos:start="75:24" pos:end="75:42">(<argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><name pos:start="75:25" pos:end="75:25">s</name></expr></argument>, <argument pos:start="75:28" pos:end="75:34"><expr pos:start="75:28" pos:end="75:34"><name pos:start="75:28" pos:end="75:34"><name pos:start="75:28" pos:end="75:29">ie</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:34">pos</name></name></expr></argument>, <argument pos:start="75:37" pos:end="75:41"><expr pos:start="75:37" pos:end="75:41"><name pos:start="75:37" pos:end="75:41">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:24"><if pos:start="77:5" pos:end="79:24">if <condition pos:start="77:8" pos:end="77:21">(<expr pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:16">best_pos</name> <operator pos:start="77:18" pos:end="77:18">&lt;</operator> <literal type="number" pos:start="77:20" pos:end="77:20">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:24"><block_content pos:start="79:9" pos:end="79:24">

        <return pos:start="79:9" pos:end="79:24">return <expr pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:23">best_pos</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:49">(<expr pos:start="83:9" pos:end="83:48"><name pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:11">mp3</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:19">is_cbr</name></name> <operator pos:start="83:21" pos:end="83:22">&amp;&amp;</operator> <name pos:start="83:24" pos:end="83:25">ie</name> <operator pos:start="83:27" pos:end="83:28">==</operator> <operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:33">ie1</name> <operator pos:start="83:35" pos:end="83:36">&amp;&amp;</operator> <name pos:start="83:38" pos:end="83:48"><name pos:start="83:38" pos:end="83:40">mp3</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:48">frames</name></name></expr>)</condition> <block pos:start="83:51" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:124">

        <decl_stmt pos:start="85:9" pos:end="85:70"><decl pos:start="85:9" pos:end="85:69"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:26">frame_duration</name> <init pos:start="85:28" pos:end="85:69">= <expr pos:start="85:30" pos:end="85:69"><call pos:start="85:30" pos:end="85:69"><name pos:start="85:30" pos:end="85:39">av_rescale</name><argument_list pos:start="85:40" pos:end="85:69">(<argument pos:start="85:41" pos:end="85:52"><expr pos:start="85:41" pos:end="85:52"><name pos:start="85:41" pos:end="85:52"><name pos:start="85:41" pos:end="85:42">st</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:52">duration</name></name></expr></argument>, <argument pos:start="85:55" pos:end="85:55"><expr pos:start="85:55" pos:end="85:55"><literal type="number" pos:start="85:55" pos:end="85:55">1</literal></expr></argument>, <argument pos:start="85:58" pos:end="85:68"><expr pos:start="85:58" pos:end="85:68"><name pos:start="85:58" pos:end="85:68"><name pos:start="85:58" pos:end="85:60">mp3</name><operator pos:start="85:61" pos:end="85:62">-&gt;</operator><name pos:start="85:63" pos:end="85:68">frames</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:124"><expr pos:start="87:9" pos:end="87:123"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:11">ie1</name><operator pos:start="87:12" pos:end="87:12">.</operator><name pos:start="87:13" pos:end="87:21">timestamp</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:38">frame_duration</name> <operator pos:start="87:40" pos:end="87:40">*</operator> <call pos:start="87:42" pos:end="87:123"><name pos:start="87:42" pos:end="87:51">av_rescale</name><argument_list pos:start="87:52" pos:end="87:123">(<argument pos:start="87:53" pos:end="87:87"><expr pos:start="87:53" pos:end="87:87"><name pos:start="87:53" pos:end="87:60">best_pos</name> <operator pos:start="87:62" pos:end="87:62">-</operator> <name pos:start="87:64" pos:end="87:87"><name pos:start="87:64" pos:end="87:64">s</name><operator pos:start="87:65" pos:end="87:66">-&gt;</operator><name pos:start="87:67" pos:end="87:74">internal</name><operator pos:start="87:75" pos:end="87:76">-&gt;</operator><name pos:start="87:77" pos:end="87:87">data_offset</name></name></expr></argument>, <argument pos:start="87:90" pos:end="87:100"><expr pos:start="87:90" pos:end="87:100"><name pos:start="87:90" pos:end="87:100"><name pos:start="87:90" pos:end="87:92">mp3</name><operator pos:start="87:93" pos:end="87:94">-&gt;</operator><name pos:start="87:95" pos:end="87:100">frames</name></name></expr></argument>, <argument pos:start="87:103" pos:end="87:122"><expr pos:start="87:103" pos:end="87:122"><name pos:start="87:103" pos:end="87:122"><name pos:start="87:103" pos:end="87:105">mp3</name><operator pos:start="87:106" pos:end="87:107">-&gt;</operator><name pos:start="87:108" pos:end="87:122">header_filesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><call pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:21">ff_update_cur_dts</name><argument_list pos:start="93:22" pos:end="93:43">(<argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">s</name></expr></argument>, <argument pos:start="93:26" pos:end="93:27"><expr pos:start="93:26" pos:end="93:27"><name pos:start="93:26" pos:end="93:27">st</name></expr></argument>, <argument pos:start="93:30" pos:end="93:42"><expr pos:start="93:30" pos:end="93:42"><name pos:start="93:30" pos:end="93:42"><name pos:start="93:30" pos:end="93:31">ie</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:42">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
