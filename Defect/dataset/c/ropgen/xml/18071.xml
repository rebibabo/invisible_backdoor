<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18071.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">v9fs_lock</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="40:1">{<block_content pos:start="3:5" pos:end="39:18">
    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:10"><name pos:start="3:5" pos:end="3:10">int8_t</name></type> <name pos:start="3:12" pos:end="3:17">status</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:20"><type pos:start="4:5" pos:end="4:15"><name pos:start="4:5" pos:end="4:13">V9fsFlock</name> <modifier pos:start="4:15" pos:end="4:15">*</modifier></type><name pos:start="4:16" pos:end="4:20">flock</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:17">offset</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">7</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:21"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:10">struct</name> <name pos:start="6:12" pos:end="6:15">stat</name></name></type> <name pos:start="6:17" pos:end="6:21">stbuf</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">V9fsFidState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">fidp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:25"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:11">int32_t</name></type> <name pos:start="8:13" pos:end="8:15">fid</name></decl>, <decl pos:start="8:18" pos:end="8:24"><type ref="prev" pos:start="8:5" pos:end="8:11"/><name pos:start="8:18" pos:end="8:20">err</name> <init pos:start="8:22" pos:end="8:24">= <expr pos:start="8:24" pos:end="8:24"><literal type="number" pos:start="8:24" pos:end="8:24">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">V9fsPDU</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">pdu</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:26"><decl pos:start="10:5" pos:end="10:25"><type pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:13">V9fsState</name> <modifier pos:start="10:15" pos:end="10:15">*</modifier></type><name pos:start="10:16" pos:end="10:16">s</name> <init pos:start="10:18" pos:end="10:25">= <expr pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:22">pdu</name><operator pos:start="10:23" pos:end="10:24">-&gt;</operator><name pos:start="10:25" pos:end="10:25">s</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:9">flock</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:36"><name pos:start="11:13" pos:end="11:20">g_malloc</name><argument_list pos:start="11:21" pos:end="11:36">(<argument pos:start="11:22" pos:end="11:35"><expr pos:start="11:22" pos:end="11:35"><sizeof pos:start="11:22" pos:end="11:35">sizeof<argument_list pos:start="11:28" pos:end="11:35">(<argument pos:start="11:29" pos:end="11:34"><expr pos:start="11:29" pos:end="11:34"><operator pos:start="11:29" pos:end="11:29">*</operator><name pos:start="11:30" pos:end="11:34">flock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="14:54"><expr pos:start="12:5" pos:end="14:53"><call pos:start="12:5" pos:end="14:53"><name pos:start="12:5" pos:end="12:17">pdu_unmarshal</name><argument_list pos:start="12:18" pos:end="14:53">(<argument pos:start="12:19" pos:end="12:21"><expr pos:start="12:19" pos:end="12:21"><name pos:start="12:19" pos:end="12:21">pdu</name></expr></argument>, <argument pos:start="12:24" pos:end="12:29"><expr pos:start="12:24" pos:end="12:29"><name pos:start="12:24" pos:end="12:29">offset</name></expr></argument>, <argument pos:start="12:32" pos:end="12:40"><expr pos:start="12:32" pos:end="12:40"><literal type="string" pos:start="12:32" pos:end="12:40">"dbdqqds"</literal></expr></argument>, <argument pos:start="12:43" pos:end="12:46"><expr pos:start="12:43" pos:end="12:46"><operator pos:start="12:43" pos:end="12:43">&amp;</operator><name pos:start="12:44" pos:end="12:46">fid</name></expr></argument>, <argument pos:start="12:49" pos:end="12:60"><expr pos:start="12:49" pos:end="12:60"><operator pos:start="12:49" pos:end="12:49">&amp;</operator><name pos:start="12:50" pos:end="12:60"><name pos:start="12:50" pos:end="12:54">flock</name><operator pos:start="12:55" pos:end="12:56">-&gt;</operator><name pos:start="12:57" pos:end="12:60">type</name></name></expr></argument>,
                  <argument pos:start="13:19" pos:end="13:31"><expr pos:start="13:19" pos:end="13:31"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:24">flock</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:31">flags</name></name></expr></argument>, <argument pos:start="13:34" pos:end="13:46"><expr pos:start="13:34" pos:end="13:46"><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:46"><name pos:start="13:35" pos:end="13:39">flock</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:46">start</name></name></expr></argument>, <argument pos:start="13:49" pos:end="13:62"><expr pos:start="13:49" pos:end="13:62"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:62"><name pos:start="13:50" pos:end="13:54">flock</name><operator pos:start="13:55" pos:end="13:56">-&gt;</operator><name pos:start="13:57" pos:end="13:62">length</name></name></expr></argument>,
                  <argument pos:start="14:19" pos:end="14:33"><expr pos:start="14:19" pos:end="14:33"><operator pos:start="14:19" pos:end="14:19">&amp;</operator><name pos:start="14:20" pos:end="14:33"><name pos:start="14:20" pos:end="14:24">flock</name><operator pos:start="14:25" pos:end="14:26">-&gt;</operator><name pos:start="14:27" pos:end="14:33">proc_id</name></name></expr></argument>, <argument pos:start="14:36" pos:end="14:52"><expr pos:start="14:36" pos:end="14:52"><operator pos:start="14:36" pos:end="14:36">&amp;</operator><name pos:start="14:37" pos:end="14:52"><name pos:start="14:37" pos:end="14:41">flock</name><operator pos:start="14:42" pos:end="14:43">-&gt;</operator><name pos:start="14:44" pos:end="14:52">client_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:10">status</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:26">P9_LOCK_ERROR</name></expr>;</expr_stmt>
    <comment type="block" pos:start="16:5" pos:end="16:69">/* We support only block flag now (that too ignored currently) */</comment>
    <if_stmt pos:start="17:5" pos:end="20:5"><if pos:start="17:5" pos:end="20:5">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:13">flock</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">flags</name></name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <operator pos:start="17:24" pos:end="17:24">~</operator><name pos:start="17:25" pos:end="17:43">P9_LOCK_FLAGS_BLOCK</name></expr>)</condition> <block pos:start="17:46" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:23">
        <expr_stmt pos:start="18:9" pos:end="18:22"><expr pos:start="18:9" pos:end="18:21"><name pos:start="18:9" pos:end="18:11">err</name> <operator pos:start="18:13" pos:end="18:13">=</operator> <operator pos:start="18:15" pos:end="18:15">-</operator><name pos:start="18:16" pos:end="18:21">EINVAL</name></expr>;</expr_stmt>
        <goto pos:start="19:9" pos:end="19:23">goto <name pos:start="19:14" pos:end="19:22">out_nofid</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:8">fidp</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:18">get_fid</name><argument_list pos:start="21:19" pos:end="21:28">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">pdu</name></expr></argument>, <argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="25:5"><if pos:start="22:5" pos:end="25:5">if <condition pos:start="22:8" pos:end="22:21">(<expr pos:start="22:9" pos:end="22:20"><name pos:start="22:9" pos:end="22:12">fidp</name> <operator pos:start="22:14" pos:end="22:15">==</operator> <name pos:start="22:17" pos:end="22:20">NULL</name></expr>)</condition> <block pos:start="22:23" pos:end="25:5">{<block_content pos:start="23:9" pos:end="24:23">
        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">err</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">-</operator><name pos:start="23:16" pos:end="23:21">ENOENT</name></expr>;</expr_stmt>
        <goto pos:start="24:9" pos:end="24:23">goto <name pos:start="24:14" pos:end="24:22">out_nofid</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:50"><expr pos:start="26:5" pos:end="26:49"><name pos:start="26:5" pos:end="26:7">err</name> <operator pos:start="26:9" pos:end="26:9">=</operator> <call pos:start="26:11" pos:end="26:49"><name pos:start="26:11" pos:end="26:23">v9fs_co_fstat</name><argument_list pos:start="26:24" pos:end="26:49">(<argument pos:start="26:25" pos:end="26:27"><expr pos:start="26:25" pos:end="26:27"><name pos:start="26:25" pos:end="26:27">pdu</name></expr></argument>, <argument pos:start="26:30" pos:end="26:40"><expr pos:start="26:30" pos:end="26:40"><name pos:start="26:30" pos:end="26:40"><name pos:start="26:30" pos:end="26:33">fidp</name><operator pos:start="26:34" pos:end="26:35">-&gt;</operator><name pos:start="26:36" pos:end="26:37">fs</name><operator pos:start="26:38" pos:end="26:38">.</operator><name pos:start="26:39" pos:end="26:40">fd</name></name></expr></argument>, <argument pos:start="26:43" pos:end="26:48"><expr pos:start="26:43" pos:end="26:48"><operator pos:start="26:43" pos:end="26:43">&amp;</operator><name pos:start="26:44" pos:end="26:48">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="29:5"><if pos:start="27:5" pos:end="29:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">err</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:17">
        <goto pos:start="28:9" pos:end="28:17">goto <name pos:start="28:14" pos:end="28:16">out</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:29"><expr pos:start="30:5" pos:end="30:28"><name pos:start="30:5" pos:end="30:10">status</name> <operator pos:start="30:12" pos:end="30:12">=</operator> <name pos:start="30:14" pos:end="30:28">P9_LOCK_SUCCESS</name></expr>;</expr_stmt>
<label pos:start="31:1" pos:end="31:4"><name pos:start="31:1" pos:end="31:3">out</name>:</label>
    <expr_stmt pos:start="32:5" pos:end="32:23"><expr pos:start="32:5" pos:end="32:22"><call pos:start="32:5" pos:end="32:22"><name pos:start="32:5" pos:end="32:11">put_fid</name><argument_list pos:start="32:12" pos:end="32:22">(<argument pos:start="32:13" pos:end="32:15"><expr pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">pdu</name></expr></argument>, <argument pos:start="32:18" pos:end="32:21"><expr pos:start="32:18" pos:end="32:21"><name pos:start="32:18" pos:end="32:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="33:1" pos:end="33:10"><name pos:start="33:1" pos:end="33:9">out_nofid</name>:</label>
    <expr_stmt pos:start="34:5" pos:end="34:17"><expr pos:start="34:5" pos:end="34:16"><name pos:start="34:5" pos:end="34:7">err</name> <operator pos:start="34:9" pos:end="34:9">=</operator> <name pos:start="34:11" pos:end="34:16">offset</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:7">err</name> <operator pos:start="35:9" pos:end="35:10">+=</operator> <call pos:start="35:12" pos:end="35:48"><name pos:start="35:12" pos:end="35:22">pdu_marshal</name><argument_list pos:start="35:23" pos:end="35:48">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">pdu</name></expr></argument>, <argument pos:start="35:29" pos:end="35:34"><expr pos:start="35:29" pos:end="35:34"><name pos:start="35:29" pos:end="35:34">offset</name></expr></argument>, <argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><literal type="string" pos:start="35:37" pos:end="35:39">"b"</literal></expr></argument>, <argument pos:start="35:42" pos:end="35:47"><expr pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:47">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:54"><expr pos:start="36:5" pos:end="36:53"><call pos:start="36:5" pos:end="36:53"><name pos:start="36:5" pos:end="36:26">trace_v9fs_lock_return</name><argument_list pos:start="36:27" pos:end="36:53">(<argument pos:start="36:28" pos:end="36:35"><expr pos:start="36:28" pos:end="36:35"><name pos:start="36:28" pos:end="36:35"><name pos:start="36:28" pos:end="36:30">pdu</name><operator pos:start="36:31" pos:end="36:32">-&gt;</operator><name pos:start="36:33" pos:end="36:35">tag</name></name></expr></argument>, <argument pos:start="36:38" pos:end="36:44"><expr pos:start="36:38" pos:end="36:44"><name pos:start="36:38" pos:end="36:44"><name pos:start="36:38" pos:end="36:40">pdu</name><operator pos:start="36:41" pos:end="36:42">-&gt;</operator><name pos:start="36:43" pos:end="36:44">id</name></name></expr></argument>, <argument pos:start="36:47" pos:end="36:52"><expr pos:start="36:47" pos:end="36:52"><name pos:start="36:47" pos:end="36:52">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:16">complete_pdu</name><argument_list pos:start="37:17" pos:end="37:29">(<argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">s</name></expr></argument>, <argument pos:start="37:21" pos:end="37:23"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">pdu</name></expr></argument>, <argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:40"><expr pos:start="38:5" pos:end="38:39"><call pos:start="38:5" pos:end="38:39"><name pos:start="38:5" pos:end="38:20">v9fs_string_free</name><argument_list pos:start="38:21" pos:end="38:39">(<argument pos:start="38:22" pos:end="38:38"><expr pos:start="38:22" pos:end="38:38"><operator pos:start="38:22" pos:end="38:22">&amp;</operator><name pos:start="38:23" pos:end="38:38"><name pos:start="38:23" pos:end="38:27">flock</name><operator pos:start="38:28" pos:end="38:29">-&gt;</operator><name pos:start="38:30" pos:end="38:38">client_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><call pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:10">g_free</name><argument_list pos:start="39:11" pos:end="39:17">(<argument pos:start="39:12" pos:end="39:16"><expr pos:start="39:12" pos:end="39:16"><name pos:start="39:12" pos:end="39:16">flock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
