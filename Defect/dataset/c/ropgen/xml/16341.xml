<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16341.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">VirtIODevice</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:28">virtio_9p_init</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:55">V9fsConf</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">conf</name></decl></parameter>)</parameter_list>

 <block pos:start="3:2" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:20">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">V9fsState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">stat</name></name></type> <name pos:start="9:17" pos:end="9:20">stat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">FsTypeEntry</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">fse</name></decl>;</decl_stmt>





    <expr_stmt pos:start="17:5" pos:end="25:55"><expr pos:start="17:5" pos:end="25:54"><name pos:start="17:5" pos:end="17:5">s</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:18">V9fsState</name> <operator pos:start="17:20" pos:end="17:20">*</operator><operator pos:start="17:21" pos:end="17:21">)</operator><call pos:start="17:22" pos:end="25:54"><name pos:start="17:22" pos:end="17:39">virtio_common_init</name><argument_list pos:start="17:40" pos:end="25:54">(<argument pos:start="17:41" pos:end="17:51"><expr pos:start="17:41" pos:end="17:51"><literal type="string" pos:start="17:41" pos:end="17:51">"virtio-9p"</literal></expr></argument>,

                                    <argument pos:start="19:37" pos:end="19:48"><expr pos:start="19:37" pos:end="19:48"><name pos:start="19:37" pos:end="19:48">VIRTIO_ID_9P</name></expr></argument>,

                                    <argument pos:start="21:37" pos:end="23:47"><expr pos:start="21:37" pos:end="23:47"><sizeof pos:start="21:37" pos:end="21:67">sizeof<argument_list pos:start="21:43" pos:end="21:67">(<argument pos:start="21:44" pos:end="21:66"><expr pos:start="21:44" pos:end="21:66">struct <name pos:start="21:51" pos:end="21:66">virtio_9p_config</name></expr></argument>)</argument_list></sizeof><operator pos:start="21:68" pos:end="21:68">+</operator>

                                    <name pos:start="23:37" pos:end="23:47">MAX_TAG_LEN</name></expr></argument>,

                                    <argument pos:start="25:37" pos:end="25:53"><expr pos:start="25:37" pos:end="25:53"><sizeof pos:start="25:37" pos:end="25:53">sizeof<argument_list pos:start="25:43" pos:end="25:53">(<argument pos:start="25:44" pos:end="25:52"><expr pos:start="25:44" pos:end="25:52"><name pos:start="25:44" pos:end="25:52">V9fsState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:34">/* initialize pdu allocator */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:14">QLIST_INIT</name><argument_list pos:start="31:15" pos:end="31:29">(<argument pos:start="31:16" pos:end="31:28"><expr pos:start="31:16" pos:end="31:28"><operator pos:start="31:16" pos:end="31:16">&amp;</operator><name pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:28">free_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="37:5">for <control pos:start="33:9" pos:end="33:39">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:28">MAX_REQ</name> <operator pos:start="33:30" pos:end="33:30">-</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal><operator pos:start="33:33" pos:end="33:33">)</operator></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">i</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control> <block pos:start="33:41" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:60">

	<expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:25">QLIST_INSERT_HEAD</name><argument_list pos:start="35:26" pos:end="35:59">(<argument pos:start="35:27" pos:end="35:39"><expr pos:start="35:27" pos:end="35:39"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:39">free_list</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:52"><expr pos:start="35:42" pos:end="35:52"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:43">s</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:49">pdus</name><index pos:start="35:50" pos:end="35:52">[<expr pos:start="35:51" pos:end="35:51"><name pos:start="35:51" pos:end="35:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:55" pos:end="35:58"><expr pos:start="35:55" pos:end="35:58"><name pos:start="35:55" pos:end="35:58">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:66"><expr pos:start="41:5" pos:end="41:65"><name pos:start="41:5" pos:end="41:9"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">vq</name></name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:65"><name pos:start="41:13" pos:end="41:28">virtio_add_queue</name><argument_list pos:start="41:29" pos:end="41:65">(<argument pos:start="41:30" pos:end="41:37"><expr pos:start="41:30" pos:end="41:37"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">vdev</name></name></expr></argument>, <argument pos:start="41:40" pos:end="41:46"><expr pos:start="41:40" pos:end="41:46"><name pos:start="41:40" pos:end="41:46">MAX_REQ</name></expr></argument>, <argument pos:start="41:49" pos:end="41:64"><expr pos:start="41:49" pos:end="41:64"><name pos:start="41:49" pos:end="41:64">handle_9p_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:7">fse</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:43"><name pos:start="45:11" pos:end="45:27">get_fsdev_fsentry</name><argument_list pos:start="45:28" pos:end="45:43">(<argument pos:start="45:29" pos:end="45:42"><expr pos:start="45:29" pos:end="45:42"><name pos:start="45:29" pos:end="45:42"><name pos:start="45:29" pos:end="45:32">conf</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:42">fsdev_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:13">(<expr pos:start="49:9" pos:end="49:12"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:12">fse</name></expr>)</condition> <block pos:start="49:15" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:16">

        <comment type="block" pos:start="51:9" pos:end="51:58">/* We don't have a fsdev identified by fsdev_id */</comment>

        <expr_stmt pos:start="53:9" pos:end="55:56"><expr pos:start="53:9" pos:end="55:55"><call pos:start="53:9" pos:end="55:55"><name pos:start="53:9" pos:end="53:15">fprintf</name><argument_list pos:start="53:16" pos:end="55:55">(<argument pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">stderr</name></expr></argument>, <argument pos:start="53:25" pos:end="55:38"><expr pos:start="53:25" pos:end="55:38"><literal type="string" pos:start="53:25" pos:end="53:63">"Virtio-9p device couldn't find fsdev "</literal>

                    <literal type="string" pos:start="55:21" pos:end="55:38">"with the id %s\n"</literal></expr></argument>, <argument pos:start="55:41" pos:end="55:54"><expr pos:start="55:41" pos:end="55:54"><name pos:start="55:41" pos:end="55:54"><name pos:start="55:41" pos:end="55:44">conf</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:54">fsdev_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><call pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">exit</name><argument_list pos:start="57:13" pos:end="57:15">(<argument pos:start="57:14" pos:end="57:14"><expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:33">(<expr pos:start="63:9" pos:end="63:32"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:18"><name pos:start="63:10" pos:end="63:12">fse</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:18">path</name></name> <operator pos:start="63:20" pos:end="63:21">||</operator> <operator pos:start="63:23" pos:end="63:23">!</operator><name pos:start="63:24" pos:end="63:32"><name pos:start="63:24" pos:end="63:27">conf</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:32">tag</name></name></expr>)</condition> <block pos:start="63:35" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:16">

        <comment type="block" pos:start="65:9" pos:end="65:58">/* we haven't specified a mount_tag or the path */</comment>

        <expr_stmt pos:start="67:9" pos:end="71:32"><expr pos:start="67:9" pos:end="71:31"><call pos:start="67:9" pos:end="71:31"><name pos:start="67:9" pos:end="67:15">fprintf</name><argument_list pos:start="67:16" pos:end="71:31">(<argument pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">stderr</name></expr></argument>, <argument pos:start="67:25" pos:end="69:66"><expr pos:start="67:25" pos:end="69:66"><literal type="string" pos:start="67:25" pos:end="67:54">"fsdev with id %s needs path "</literal>

                <literal type="string" pos:start="69:17" pos:end="69:66">"and Virtio-9p device needs mount_tag arguments\n"</literal></expr></argument>,

                <argument pos:start="71:17" pos:end="71:30"><expr pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:20">conf</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:30">fsdev_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:16"><expr pos:start="73:9" pos:end="73:15"><call pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:12">exit</name><argument_list pos:start="73:13" pos:end="73:15">(<argument pos:start="73:14" pos:end="73:14"><expr pos:start="73:14" pos:end="73:14"><literal type="number" pos:start="73:14" pos:end="73:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="107:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:52">(<expr pos:start="79:9" pos:end="79:51"><operator pos:start="79:9" pos:end="79:9">!</operator><call pos:start="79:10" pos:end="79:51"><name pos:start="79:10" pos:end="79:15">strcmp</name><argument_list pos:start="79:16" pos:end="79:51">(<argument pos:start="79:17" pos:end="79:35"><expr pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:19">fse</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:35">security_model</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:50"><expr pos:start="79:38" pos:end="79:50"><literal type="string" pos:start="79:38" pos:end="79:50">"passthrough"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:54" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:38">

        <comment type="block" pos:start="81:9" pos:end="81:68">/* Files on the Fileserver set to client user credentials */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:14">ctx</name><operator pos:start="83:15" pos:end="83:15">.</operator><name pos:start="83:16" pos:end="83:20">fs_sm</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:37">SM_PASSTHROUGH</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="95:5">else if <condition pos:start="85:15" pos:end="85:54">(<expr pos:start="85:16" pos:end="85:53"><operator pos:start="85:16" pos:end="85:16">!</operator><call pos:start="85:17" pos:end="85:53"><name pos:start="85:17" pos:end="85:22">strcmp</name><argument_list pos:start="85:23" pos:end="85:53">(<argument pos:start="85:24" pos:end="85:42"><expr pos:start="85:24" pos:end="85:42"><name pos:start="85:24" pos:end="85:42"><name pos:start="85:24" pos:end="85:26">fse</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:42">security_model</name></name></expr></argument>, <argument pos:start="85:45" pos:end="85:52"><expr pos:start="85:45" pos:end="85:52"><literal type="string" pos:start="85:45" pos:end="85:52">"mapped"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:56" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:33">

        <comment type="block" pos:start="87:9" pos:end="91:11">/* Files on the fileserver are set to QEMU credentials.

         * Client user credentials are saved in extended attributes.

         */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:14">ctx</name><operator pos:start="93:15" pos:end="93:15">.</operator><name pos:start="93:16" pos:end="93:20">fs_sm</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:32">SM_MAPPED</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="107:5">else <block pos:start="95:12" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:20">

        <comment type="block" pos:start="97:9" pos:end="97:62">/* user haven't specified a correct security option */</comment>

        <expr_stmt pos:start="99:9" pos:end="103:43"><expr pos:start="99:9" pos:end="103:42"><call pos:start="99:9" pos:end="103:42"><name pos:start="99:9" pos:end="99:15">fprintf</name><argument_list pos:start="99:16" pos:end="103:42">(<argument pos:start="99:17" pos:end="99:22"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:22">stderr</name></expr></argument>, <argument pos:start="99:25" pos:end="103:41"><expr pos:start="99:25" pos:end="103:41"><literal type="string" pos:start="99:25" pos:end="99:71">"one of the following must be specified as the"</literal>

                <literal type="string" pos:start="101:17" pos:end="101:71">"security option:\n\t security_model=passthrough \n\t "</literal>

                <literal type="string" pos:start="103:17" pos:end="103:41">"security_model=mapped\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:20">return <expr pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:19">NULL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="111:5" pos:end="123:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:32">(<expr pos:start="111:9" pos:end="111:31"><call pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:13">lstat</name><argument_list pos:start="111:14" pos:end="111:31">(<argument pos:start="111:15" pos:end="111:23"><expr pos:start="111:15" pos:end="111:23"><name pos:start="111:15" pos:end="111:23"><name pos:start="111:15" pos:end="111:17">fse</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:23">path</name></name></expr></argument>, <argument pos:start="111:26" pos:end="111:30"><expr pos:start="111:26" pos:end="111:30"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:30">stat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:34" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:16">

        <expr_stmt pos:start="113:9" pos:end="113:69"><expr pos:start="113:9" pos:end="113:68"><call pos:start="113:9" pos:end="113:68"><name pos:start="113:9" pos:end="113:15">fprintf</name><argument_list pos:start="113:16" pos:end="113:68">(<argument pos:start="113:17" pos:end="113:22"><expr pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:22">stderr</name></expr></argument>, <argument pos:start="113:25" pos:end="113:56"><expr pos:start="113:25" pos:end="113:56"><literal type="string" pos:start="113:25" pos:end="113:56">"share path %s does not exist\n"</literal></expr></argument>, <argument pos:start="113:59" pos:end="113:67"><expr pos:start="113:59" pos:end="113:67"><name pos:start="113:59" pos:end="113:67"><name pos:start="113:59" pos:end="113:61">fse</name><operator pos:start="113:62" pos:end="113:63">-&gt;</operator><name pos:start="113:64" pos:end="113:67">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:16"><expr pos:start="115:9" pos:end="115:15"><call pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:12">exit</name><argument_list pos:start="115:13" pos:end="115:15">(<argument pos:start="115:14" pos:end="115:14"><expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="117:7" pos:end="123:5">else if <condition pos:start="117:15" pos:end="117:38">(<expr pos:start="117:16" pos:end="117:37"><operator pos:start="117:16" pos:end="117:16">!</operator><call pos:start="117:17" pos:end="117:37"><name pos:start="117:17" pos:end="117:23">S_ISDIR</name><argument_list pos:start="117:24" pos:end="117:37">(<argument pos:start="117:25" pos:end="117:36"><expr pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:28">stat</name><operator pos:start="117:29" pos:end="117:29">.</operator><name pos:start="117:30" pos:end="117:36">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:40" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:16">

        <expr_stmt pos:start="119:9" pos:end="119:74"><expr pos:start="119:9" pos:end="119:73"><call pos:start="119:9" pos:end="119:73"><name pos:start="119:9" pos:end="119:15">fprintf</name><argument_list pos:start="119:16" pos:end="119:73">(<argument pos:start="119:17" pos:end="119:22"><expr pos:start="119:17" pos:end="119:22"><name pos:start="119:17" pos:end="119:22">stderr</name></expr></argument>, <argument pos:start="119:25" pos:end="119:61"><expr pos:start="119:25" pos:end="119:61"><literal type="string" pos:start="119:25" pos:end="119:61">"share path %s is not a directory \n"</literal></expr></argument>, <argument pos:start="119:64" pos:end="119:72"><expr pos:start="119:64" pos:end="119:72"><name pos:start="119:64" pos:end="119:72"><name pos:start="119:64" pos:end="119:66">fse</name><operator pos:start="119:67" pos:end="119:68">-&gt;</operator><name pos:start="119:69" pos:end="119:72">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:16"><expr pos:start="121:9" pos:end="121:15"><call pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:12">exit</name><argument_list pos:start="121:13" pos:end="121:15">(<argument pos:start="121:14" pos:end="121:14"><expr pos:start="121:14" pos:end="121:14"><literal type="number" pos:start="121:14" pos:end="121:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:44"><expr pos:start="127:5" pos:end="127:43"><name pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:10">ctx</name><operator pos:start="127:11" pos:end="127:11">.</operator><name pos:start="127:12" pos:end="127:18">fs_root</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:43"><name pos:start="127:22" pos:end="127:32">qemu_strdup</name><argument_list pos:start="127:33" pos:end="127:43">(<argument pos:start="127:34" pos:end="127:42"><expr pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:36">fse</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:42">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:28"><expr pos:start="129:5" pos:end="129:27"><name pos:start="129:5" pos:end="129:7">len</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <call pos:start="129:11" pos:end="129:27"><name pos:start="129:11" pos:end="129:16">strlen</name><argument_list pos:start="129:17" pos:end="129:27">(<argument pos:start="129:18" pos:end="129:26"><expr pos:start="129:18" pos:end="129:26"><name pos:start="129:18" pos:end="129:26"><name pos:start="129:18" pos:end="129:21">conf</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:26">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:26">(<expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:11">len</name> <operator pos:start="131:13" pos:end="131:13">&gt;</operator> <name pos:start="131:15" pos:end="131:25">MAX_TAG_LEN</name></expr>)</condition> <block pos:start="131:28" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:26">

        <expr_stmt pos:start="133:9" pos:end="133:26"><expr pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:11">len</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <name pos:start="133:15" pos:end="133:25">MAX_TAG_LEN</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="137:5" pos:end="137:46">/* s-&gt;tag is non-NULL terminated string */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:30"><expr pos:start="139:5" pos:end="139:29"><name pos:start="139:5" pos:end="139:10"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:10">tag</name></name> <operator pos:start="139:12" pos:end="139:12">=</operator> <call pos:start="139:14" pos:end="139:29"><name pos:start="139:14" pos:end="139:24">qemu_malloc</name><argument_list pos:start="139:25" pos:end="139:29">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:35"><expr pos:start="141:5" pos:end="141:34"><call pos:start="141:5" pos:end="141:34"><name pos:start="141:5" pos:end="141:10">memcpy</name><argument_list pos:start="141:11" pos:end="141:34">(<argument pos:start="141:12" pos:end="141:17"><expr pos:start="141:12" pos:end="141:17"><name pos:start="141:12" pos:end="141:17"><name pos:start="141:12" pos:end="141:12">s</name><operator pos:start="141:13" pos:end="141:14">-&gt;</operator><name pos:start="141:15" pos:end="141:17">tag</name></name></expr></argument>, <argument pos:start="141:20" pos:end="141:28"><expr pos:start="141:20" pos:end="141:28"><name pos:start="141:20" pos:end="141:28"><name pos:start="141:20" pos:end="141:23">conf</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:28">tag</name></name></expr></argument>, <argument pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:21"><expr pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:14">tag_len</name></name> <operator pos:start="143:16" pos:end="143:16">=</operator> <name pos:start="143:18" pos:end="143:20">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:20"><expr pos:start="145:5" pos:end="145:19"><name pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:10">ctx</name><operator pos:start="145:11" pos:end="145:11">.</operator><name pos:start="145:12" pos:end="145:14">uid</name></name> <operator pos:start="145:16" pos:end="145:16">=</operator> <operator pos:start="145:18" pos:end="145:18">-</operator><literal type="number" pos:start="145:19" pos:end="145:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:22"><expr pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:10"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:10">ops</name></name> <operator pos:start="149:12" pos:end="149:12">=</operator> <name pos:start="149:14" pos:end="149:21"><name pos:start="149:14" pos:end="149:16">fse</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:21">ops</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:50"><expr pos:start="151:5" pos:end="151:49"><name pos:start="151:5" pos:end="151:24"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:11">vdev</name><operator pos:start="151:12" pos:end="151:12">.</operator><name pos:start="151:13" pos:end="151:24">get_features</name></name> <operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:49">virtio_9p_get_features</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="155:35"><expr pos:start="153:5" pos:end="155:34"><name pos:start="153:5" pos:end="153:18"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:18">config_size</name></name> <operator pos:start="153:20" pos:end="153:20">=</operator> <sizeof pos:start="153:22" pos:end="153:52">sizeof<argument_list pos:start="153:28" pos:end="153:52">(<argument pos:start="153:29" pos:end="153:51"><expr pos:start="153:29" pos:end="153:51">struct <name pos:start="153:36" pos:end="153:51">virtio_9p_config</name></expr></argument>)</argument_list></sizeof> <operator pos:start="153:54" pos:end="153:54">+</operator>

                        <name pos:start="155:25" pos:end="155:34"><name pos:start="155:25" pos:end="155:25">s</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:34">tag_len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:46"><expr pos:start="157:5" pos:end="157:45"><name pos:start="157:5" pos:end="157:22"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:11">vdev</name><operator pos:start="157:12" pos:end="157:12">.</operator><name pos:start="157:13" pos:end="157:22">get_config</name></name> <operator pos:start="157:24" pos:end="157:24">=</operator> <name pos:start="157:26" pos:end="157:45">virtio_9p_get_config</name></expr>;</expr_stmt>



    <return pos:start="161:5" pos:end="161:20">return <expr pos:start="161:12" pos:end="161:19"><operator pos:start="161:12" pos:end="161:12">&amp;</operator><name pos:start="161:13" pos:end="161:19"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:19">vdev</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
