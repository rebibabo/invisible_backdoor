<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2787.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">dxva2_alloc</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:27">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:15">InputStream</name>  <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ist</name> <init pos:start="5:23" pos:end="5:33">= <expr pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:85"><decl pos:start="7:5" pos:end="7:84"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">loglevel</name> <init pos:start="7:18" pos:end="7:84">= <expr pos:start="7:20" pos:end="7:84"><ternary pos:start="7:20" pos:end="7:84"><condition pos:start="7:20" pos:end="7:54"><expr pos:start="7:20" pos:end="7:52"><operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:35"><name pos:start="7:21" pos:end="7:23">ist</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:35">hwaccel_id</name></name> <operator pos:start="7:37" pos:end="7:38">==</operator> <name pos:start="7:40" pos:end="7:51">HWACCEL_AUTO</name><operator pos:start="7:52" pos:end="7:52">)</operator></expr> ?</condition><then pos:start="7:56" pos:end="7:69"> <expr pos:start="7:56" pos:end="7:69"><name pos:start="7:56" pos:end="7:69">AV_LOG_VERBOSE</name></expr> </then><else pos:start="7:71" pos:end="7:84">: <expr pos:start="7:73" pos:end="7:84"><name pos:start="7:73" pos:end="7:84">AV_LOG_ERROR</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">DXVA2Context</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">HANDLE</name></type> <name pos:start="11:12" pos:end="11:24">device_handle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">HRESULT</name></type> <name pos:start="13:13" pos:end="13:14">hr</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:21">AVHWDeviceContext</name>    <modifier pos:start="17:26" pos:end="17:26">*</modifier></type><name pos:start="17:27" pos:end="17:36">device_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:39"><decl pos:start="19:5" pos:end="19:38"><type pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:24">AVDXVA2DeviceContext</name> <modifier pos:start="19:26" pos:end="19:26">*</modifier></type><name pos:start="19:27" pos:end="19:38">device_hwctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:7">ctx</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:34"><name pos:start="25:11" pos:end="25:20">av_mallocz</name><argument_list pos:start="25:21" pos:end="25:34">(<argument pos:start="25:22" pos:end="25:33"><expr pos:start="25:22" pos:end="25:33"><sizeof pos:start="25:22" pos:end="25:33">sizeof<argument_list pos:start="25:28" pos:end="25:33">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><operator pos:start="25:29" pos:end="25:29">*</operator><name pos:start="25:30" pos:end="25:32">ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">ctx</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:7">ist</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:20">hwaccel_ctx</name></name>           <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:36">ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:46"><expr pos:start="35:5" pos:end="35:45"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:7">ist</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:23">hwaccel_uninit</name></name>        <operator pos:start="35:32" pos:end="35:32">=</operator> <name pos:start="35:34" pos:end="35:45">dxva2_uninit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:7">ist</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:27">hwaccel_get_buffer</name></name>    <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:49">dxva2_get_buffer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:7">ist</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:30">hwaccel_retrieve_data</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:52">dxva2_retrieve_data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:63"><expr pos:start="43:5" pos:end="45:62"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="45:62"><name pos:start="43:11" pos:end="43:32">av_hwdevice_ctx_create</name><argument_list pos:start="43:33" pos:end="45:62">(<argument pos:start="43:34" pos:end="43:52"><expr pos:start="43:34" pos:end="43:52"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:52"><name pos:start="43:35" pos:end="43:37">ctx</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:52">hw_device_ctx</name></name></expr></argument>, <argument pos:start="43:55" pos:end="43:76"><expr pos:start="43:55" pos:end="43:76"><name pos:start="43:55" pos:end="43:76">AV_HWDEVICE_TYPE_DXVA2</name></expr></argument>,

                                 <argument pos:start="45:34" pos:end="45:52"><expr pos:start="45:34" pos:end="45:52"><name pos:start="45:34" pos:end="45:52"><name pos:start="45:34" pos:end="45:36">ist</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:52">hwaccel_device</name></name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">NULL</name></expr></argument>, <argument pos:start="45:61" pos:end="45:61"><expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:18"><if pos:start="47:5" pos:end="49:18">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <goto pos:start="49:9" pos:end="49:18">goto <name pos:start="49:14" pos:end="49:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:64"><expr pos:start="51:5" pos:end="51:63"><name pos:start="51:5" pos:end="51:14">device_ctx</name>   <operator pos:start="51:18" pos:end="51:18">=</operator> <operator pos:start="51:20" pos:end="51:20">(</operator><name pos:start="51:21" pos:end="51:37">AVHWDeviceContext</name><operator pos:start="51:38" pos:end="51:38">*</operator><operator pos:start="51:39" pos:end="51:39">)</operator><name pos:start="51:40" pos:end="51:63"><name pos:start="51:40" pos:end="51:42">ctx</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:57">hw_device_ctx</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:63">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:16">device_hwctx</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:36"><name pos:start="53:20" pos:end="53:29">device_ctx</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:36">hwctx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:66"><expr pos:start="57:5" pos:end="59:65"><name pos:start="57:5" pos:end="57:6">hr</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <call pos:start="57:10" pos:end="59:65"><name pos:start="57:10" pos:end="57:49">IDirect3DDeviceManager9_OpenDeviceHandle</name><argument_list pos:start="57:50" pos:end="59:65">(<argument pos:start="57:51" pos:end="57:70"><expr pos:start="57:51" pos:end="57:70"><name pos:start="57:51" pos:end="57:70"><name pos:start="57:51" pos:end="57:62">device_hwctx</name><operator pos:start="57:63" pos:end="57:64">-&gt;</operator><name pos:start="57:65" pos:end="57:70">devmgr</name></name></expr></argument>,

                                                  <argument pos:start="59:51" pos:end="59:64"><expr pos:start="59:51" pos:end="59:64"><operator pos:start="59:51" pos:end="59:51">&amp;</operator><name pos:start="59:52" pos:end="59:64">device_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><call pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:14">FAILED</name><argument_list pos:start="61:15" pos:end="61:18">(<argument pos:start="61:16" pos:end="61:17"><expr pos:start="61:16" pos:end="61:17"><name pos:start="61:16" pos:end="61:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:21" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:18">

        <expr_stmt pos:start="63:9" pos:end="63:67"><expr pos:start="63:9" pos:end="63:66"><call pos:start="63:9" pos:end="63:66"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:66">(<argument pos:start="63:16" pos:end="63:19"><expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr></argument>, <argument pos:start="63:22" pos:end="63:29"><expr pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:29">loglevel</name></expr></argument>, <argument pos:start="63:32" pos:end="63:65"><expr pos:start="63:32" pos:end="63:65"><literal type="string" pos:start="63:32" pos:end="63:65">"Failed to open a device handle\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="75:81"><expr pos:start="71:5" pos:end="75:80"><name pos:start="71:5" pos:end="71:6">hr</name> <operator pos:start="71:8" pos:end="71:8">=</operator> <call pos:start="71:10" pos:end="75:80"><name pos:start="71:10" pos:end="71:48">IDirect3DDeviceManager9_GetVideoService</name><argument_list pos:start="71:49" pos:end="75:80">(<argument pos:start="71:50" pos:end="71:69"><expr pos:start="71:50" pos:end="71:69"><name pos:start="71:50" pos:end="71:69"><name pos:start="71:50" pos:end="71:61">device_hwctx</name><operator pos:start="71:62" pos:end="71:63">-&gt;</operator><name pos:start="71:64" pos:end="71:69">devmgr</name></name></expr></argument>, <argument pos:start="71:72" pos:end="71:84"><expr pos:start="71:72" pos:end="71:84"><name pos:start="71:72" pos:end="71:84">device_handle</name></expr></argument>,

                                                 <argument pos:start="73:50" pos:end="73:81"><expr pos:start="73:50" pos:end="73:81"><operator pos:start="73:50" pos:end="73:50">&amp;</operator><name pos:start="73:51" pos:end="73:81">IID_IDirectXVideoDecoderService</name></expr></argument>,

                                                 <argument pos:start="75:50" pos:end="75:79"><expr pos:start="75:50" pos:end="75:79"><operator pos:start="75:50" pos:end="75:50">(</operator><name pos:start="75:51" pos:end="75:54">void</name> <operator pos:start="75:56" pos:end="75:56">*</operator><operator pos:start="75:57" pos:end="75:57">*</operator><operator pos:start="75:58" pos:end="75:58">)</operator><operator pos:start="75:59" pos:end="75:59">&amp;</operator><name pos:start="75:60" pos:end="75:79"><name pos:start="75:60" pos:end="75:62">ctx</name><operator pos:start="75:63" pos:end="75:64">-&gt;</operator><name pos:start="75:65" pos:end="75:79">decoder_service</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:83"><expr pos:start="77:5" pos:end="77:82"><call pos:start="77:5" pos:end="77:82"><name pos:start="77:5" pos:end="77:45">IDirect3DDeviceManager9_CloseDeviceHandle</name><argument_list pos:start="77:46" pos:end="77:82">(<argument pos:start="77:47" pos:end="77:66"><expr pos:start="77:47" pos:end="77:66"><name pos:start="77:47" pos:end="77:66"><name pos:start="77:47" pos:end="77:58">device_hwctx</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:66">devmgr</name></name></expr></argument>, <argument pos:start="77:69" pos:end="77:81"><expr pos:start="77:69" pos:end="77:81"><name pos:start="77:69" pos:end="77:81">device_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:19">(<expr pos:start="79:9" pos:end="79:18"><call pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:14">FAILED</name><argument_list pos:start="79:15" pos:end="79:18">(<argument pos:start="79:16" pos:end="79:17"><expr pos:start="79:16" pos:end="79:17"><name pos:start="79:16" pos:end="79:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:21" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:81"><expr pos:start="81:9" pos:end="81:80"><call pos:start="81:9" pos:end="81:80"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:80">(<argument pos:start="81:16" pos:end="81:19"><expr pos:start="81:16" pos:end="81:19"><name pos:start="81:16" pos:end="81:19">NULL</name></expr></argument>, <argument pos:start="81:22" pos:end="81:29"><expr pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:29">loglevel</name></expr></argument>, <argument pos:start="81:32" pos:end="81:79"><expr pos:start="81:32" pos:end="81:79"><literal type="string" pos:start="81:32" pos:end="81:79">"Failed to create IDirectXVideoDecoderService\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:18">goto <name pos:start="83:14" pos:end="83:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:7">ctx</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:18">tmp_frame</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:37"><name pos:start="89:22" pos:end="89:35">av_frame_alloc</name><argument_list pos:start="89:36" pos:end="89:37">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:18"><if pos:start="91:5" pos:end="93:18">if <condition pos:start="91:8" pos:end="91:24">(<expr pos:start="91:9" pos:end="91:23"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:23"><name pos:start="91:10" pos:end="91:12">ctx</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:23">tmp_frame</name></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:18"><block_content pos:start="93:9" pos:end="93:18">

        <goto pos:start="93:9" pos:end="93:18">goto <name pos:start="93:14" pos:end="93:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:65"><expr pos:start="97:5" pos:end="97:64"><name pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:22">hwaccel_context</name></name> <operator pos:start="97:24" pos:end="97:24">=</operator> <call pos:start="97:26" pos:end="97:64"><name pos:start="97:26" pos:end="97:35">av_mallocz</name><argument_list pos:start="97:36" pos:end="97:64">(<argument pos:start="97:37" pos:end="97:63"><expr pos:start="97:37" pos:end="97:63"><sizeof pos:start="97:37" pos:end="97:63">sizeof<argument_list pos:start="97:43" pos:end="97:63">(<argument pos:start="97:44" pos:end="97:62"><expr pos:start="97:44" pos:end="97:62">struct <name pos:start="97:51" pos:end="97:62">dxva_context</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:18"><if pos:start="99:5" pos:end="101:18">if <condition pos:start="99:8" pos:end="99:28">(<expr pos:start="99:9" pos:end="99:27"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:27"><name pos:start="99:10" pos:end="99:10">s</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:27">hwaccel_context</name></name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:18"><block_content pos:start="101:9" pos:end="101:18">

        <goto pos:start="101:9" pos:end="101:18">goto <name pos:start="101:14" pos:end="101:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

<label pos:start="107:1" pos:end="107:5"><name pos:start="107:1" pos:end="107:4">fail</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:20"><expr pos:start="109:5" pos:end="109:19"><call pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:16">dxva2_uninit</name><argument_list pos:start="109:17" pos:end="109:19">(<argument pos:start="109:18" pos:end="109:18"><expr pos:start="109:18" pos:end="109:18"><name pos:start="109:18" pos:end="109:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:27">return <expr pos:start="111:12" pos:end="111:26"><call pos:start="111:12" pos:end="111:26"><name pos:start="111:12" pos:end="111:18">AVERROR</name><argument_list pos:start="111:19" pos:end="111:26">(<argument pos:start="111:20" pos:end="111:25"><expr pos:start="111:20" pos:end="111:25"><name pos:start="111:20" pos:end="111:25">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
