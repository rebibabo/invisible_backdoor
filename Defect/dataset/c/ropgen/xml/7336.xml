<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7336.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vmxnet3_net_init</name><parameter_list pos:start="1:29" pos:end="1:45">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">VMXNET3State</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:72">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">d</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><call pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:27">DEVICE</name><argument_list pos:start="5:28" pos:end="5:30">(<argument pos:start="5:29" pos:end="5:29"><expr pos:start="5:29" pos:end="5:29"><name pos:start="5:29" pos:end="5:29">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><call pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:13">VMW_CBPRN</name><argument_list pos:start="9:14" pos:end="9:43">(<argument pos:start="9:15" pos:end="9:42"><expr pos:start="9:15" pos:end="9:42"><literal type="string" pos:start="9:15" pos:end="9:42">"vmxnet3_net_init called..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><call pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:33">qemu_macaddr_default_if_unset</name><argument_list pos:start="13:34" pos:end="13:51">(<argument pos:start="13:35" pos:end="13:50"><expr pos:start="13:35" pos:end="13:50"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">conf</name><operator pos:start="13:43" pos:end="13:43">.</operator><name pos:start="13:44" pos:end="13:50">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:67">/* Windows guest will query the address that was set on init */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><call pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:10">memcpy</name><argument_list pos:start="19:11" pos:end="19:69">(<argument pos:start="19:12" pos:end="19:25"><expr pos:start="19:12" pos:end="19:25"><operator pos:start="19:12" pos:end="19:12">&amp;</operator><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">perm_mac</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:25">a</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:45"><expr pos:start="19:28" pos:end="19:45"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">conf</name><operator pos:start="19:36" pos:end="19:36">.</operator><name pos:start="19:37" pos:end="19:43">macaddr</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:45">a</name></name></expr></argument>, <argument pos:start="19:48" pos:end="19:68"><expr pos:start="19:48" pos:end="19:68"><sizeof pos:start="19:48" pos:end="19:68">sizeof<argument_list pos:start="19:54" pos:end="19:68">(<argument pos:start="19:55" pos:end="19:67"><expr pos:start="19:55" pos:end="19:67"><name pos:start="19:55" pos:end="19:67"><name pos:start="19:55" pos:end="19:55">s</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:65">perm_mac</name><operator pos:start="19:66" pos:end="19:66">.</operator><name pos:start="19:67" pos:end="19:67">a</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:17">mcast_list</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:24">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:21">mcast_list_len</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:75"><expr pos:start="29:5" pos:end="29:74"><name pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:28">link_status_and_speed</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:49">VMXNET3_LINK_SPEED</name> <operator pos:start="29:51" pos:end="29:51">|</operator> <name pos:start="29:53" pos:end="29:74">VMXNET3_LINK_STATUS_UP</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><call pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:13">VMW_CFPRN</name><argument_list pos:start="33:14" pos:end="33:64">(<argument pos:start="33:15" pos:end="33:39"><expr pos:start="33:15" pos:end="33:39"><literal type="string" pos:start="33:15" pos:end="33:31">"Permanent MAC: "</literal> <name pos:start="33:33" pos:end="33:39">MAC_FMT</name></expr></argument>, <argument pos:start="33:42" pos:end="33:63"><expr pos:start="33:42" pos:end="33:63"><call pos:start="33:42" pos:end="33:63"><name pos:start="33:42" pos:end="33:48">MAC_ARG</name><argument_list pos:start="33:49" pos:end="33:63">(<argument pos:start="33:50" pos:end="33:62"><expr pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:50">s</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:60">perm_mac</name><operator pos:start="33:61" pos:end="33:61">.</operator><name pos:start="33:62" pos:end="33:62">a</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="41:36"><expr pos:start="37:5" pos:end="41:35"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">nic</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="41:35"><name pos:start="37:14" pos:end="37:25">qemu_new_nic</name><argument_list pos:start="37:26" pos:end="41:35">(<argument pos:start="37:27" pos:end="37:43"><expr pos:start="37:27" pos:end="37:43"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:43">net_vmxnet3_info</name></expr></argument>, <argument pos:start="37:46" pos:end="37:53"><expr pos:start="37:46" pos:end="37:53"><operator pos:start="37:46" pos:end="37:46">&amp;</operator><name pos:start="37:47" pos:end="37:53"><name pos:start="37:47" pos:end="37:47">s</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:53">conf</name></name></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:56"><expr pos:start="39:27" pos:end="39:56"><call pos:start="39:27" pos:end="39:56"><name pos:start="39:27" pos:end="39:45">object_get_typename</name><argument_list pos:start="39:46" pos:end="39:56">(<argument pos:start="39:47" pos:end="39:55"><expr pos:start="39:47" pos:end="39:55"><call pos:start="39:47" pos:end="39:55"><name pos:start="39:47" pos:end="39:52">OBJECT</name><argument_list pos:start="39:53" pos:end="39:55">(<argument pos:start="39:54" pos:end="39:54"><expr pos:start="39:54" pos:end="39:54"><name pos:start="39:54" pos:end="39:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:31"><expr pos:start="41:27" pos:end="41:31"><name pos:start="41:27" pos:end="41:31"><name pos:start="41:27" pos:end="41:27">d</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:31">id</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:20">peer_has_vhdr</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:51"><name pos:start="45:24" pos:end="45:48">vmxnet3_peer_has_vnet_hdr</name><argument_list pos:start="45:49" pos:end="45:51">(<argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><name pos:start="45:50" pos:end="45:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:13">tx_sop</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:20">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:26">skip_current_tx_pkt</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:34">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:13">tx_pkt</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:13">rx_pkt</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:24">rx_vlan_stripping</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:32">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:20">lro_supported</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:28">false</name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="61:25">(<expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:24">peer_has_vhdr</name></name></expr>)</condition> <block pos:start="61:27" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:60">

        <expr_stmt pos:start="63:9" pos:end="65:43"><expr pos:start="63:9" pos:end="65:42"><call pos:start="63:9" pos:end="65:42"><name pos:start="63:9" pos:end="63:34">qemu_peer_set_vnet_hdr_len</name><argument_list pos:start="63:35" pos:end="65:42">(<argument pos:start="63:36" pos:end="63:57"><expr pos:start="63:36" pos:end="63:57"><call pos:start="63:36" pos:end="63:57"><name pos:start="63:36" pos:end="63:49">qemu_get_queue</name><argument_list pos:start="63:50" pos:end="63:57">(<argument pos:start="63:51" pos:end="63:56"><expr pos:start="63:51" pos:end="63:56"><name pos:start="63:51" pos:end="63:56"><name pos:start="63:51" pos:end="63:51">s</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:56">nic</name></name></expr></argument>)</argument_list></call></expr></argument>,

            <argument pos:start="65:13" pos:end="65:41"><expr pos:start="65:13" pos:end="65:41"><sizeof pos:start="65:13" pos:end="65:41">sizeof<argument_list pos:start="65:19" pos:end="65:41">(<argument pos:start="65:20" pos:end="65:40"><expr pos:start="65:20" pos:end="65:40">struct <name pos:start="65:27" pos:end="65:40">virtio_net_hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:60"><expr pos:start="69:9" pos:end="69:59"><call pos:start="69:9" pos:end="69:59"><name pos:start="69:9" pos:end="69:32">qemu_peer_using_vnet_hdr</name><argument_list pos:start="69:33" pos:end="69:59">(<argument pos:start="69:34" pos:end="69:55"><expr pos:start="69:34" pos:end="69:55"><call pos:start="69:34" pos:end="69:55"><name pos:start="69:34" pos:end="69:47">qemu_get_queue</name><argument_list pos:start="69:48" pos:end="69:55">(<argument pos:start="69:49" pos:end="69:54"><expr pos:start="69:49" pos:end="69:54"><name pos:start="69:49" pos:end="69:54"><name pos:start="69:49" pos:end="69:49">s</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:54">nic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:58" pos:end="69:58"><expr pos:start="69:58" pos:end="69:58"><literal type="number" pos:start="69:58" pos:end="69:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:72"><expr pos:start="75:5" pos:end="75:71"><call pos:start="75:5" pos:end="75:71"><name pos:start="75:5" pos:end="75:28">qemu_format_nic_info_str</name><argument_list pos:start="75:29" pos:end="75:71">(<argument pos:start="75:30" pos:end="75:51"><expr pos:start="75:30" pos:end="75:51"><call pos:start="75:30" pos:end="75:51"><name pos:start="75:30" pos:end="75:43">qemu_get_queue</name><argument_list pos:start="75:44" pos:end="75:51">(<argument pos:start="75:45" pos:end="75:50"><expr pos:start="75:45" pos:end="75:50"><name pos:start="75:45" pos:end="75:50"><name pos:start="75:45" pos:end="75:45">s</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:50">nic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:54" pos:end="75:70"><expr pos:start="75:54" pos:end="75:70"><name pos:start="75:54" pos:end="75:70"><name pos:start="75:54" pos:end="75:54">s</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:60">conf</name><operator pos:start="75:61" pos:end="75:61">.</operator><name pos:start="75:62" pos:end="75:68">macaddr</name><operator pos:start="75:69" pos:end="75:69">.</operator><name pos:start="75:70" pos:end="75:70">a</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
