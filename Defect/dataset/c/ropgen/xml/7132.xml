<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7132.c" pos:tabs="8"><function pos:start="1:1" pos:end="10:37"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">bdrv_set_aio_context</name><parameter_list pos:start="1:26" pos:end="1:72">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:71"><decl pos:start="1:49" pos:end="1:71"><type pos:start="1:49" pos:end="1:71"><name pos:start="1:49" pos:end="1:58">AioContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:71">new_context</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="10:37">{<block_content pos:start="3:5" pos:end="10:37">
    <expr_stmt pos:start="3:5" pos:end="3:19"><expr pos:start="3:5" pos:end="3:18"><call pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:14">bdrv_drain</name><argument_list pos:start="3:15" pos:end="3:18">(<argument pos:start="3:16" pos:end="3:17"><expr pos:start="3:16" pos:end="3:17"><name pos:start="3:16" pos:end="3:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="3:21" pos:end="3:64">/* ensure there are no in-flight requests */</comment>
    <expr_stmt pos:start="4:5" pos:end="4:32"><expr pos:start="4:5" pos:end="4:31"><call pos:start="4:5" pos:end="4:31"><name pos:start="4:5" pos:end="4:27">bdrv_detach_aio_context</name><argument_list pos:start="4:28" pos:end="4:31">(<argument pos:start="4:29" pos:end="4:30"><expr pos:start="4:29" pos:end="4:30"><name pos:start="4:29" pos:end="4:30">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="5:5" pos:end="7:7">/* This function executes in the old AioContext so acquire the new one in
     * case it runs in a different thread.
     */</comment>
    <expr_stmt pos:start="8:5" pos:end="8:37"><expr pos:start="8:5" pos:end="8:36"><call pos:start="8:5" pos:end="8:36"><name pos:start="8:5" pos:end="8:23">aio_context_acquire</name><argument_list pos:start="8:24" pos:end="8:36">(<argument pos:start="8:25" pos:end="8:35"><expr pos:start="8:25" pos:end="8:35"><name pos:start="8:25" pos:end="8:35">new_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:45"><expr pos:start="9:5" pos:end="9:44"><call pos:start="9:5" pos:end="9:44"><name pos:start="9:5" pos:end="9:27">bdrv_attach_aio_context</name><argument_list pos:start="9:28" pos:end="9:44">(<argument pos:start="9:29" pos:end="9:30"><expr pos:start="9:29" pos:end="9:30"><name pos:start="9:29" pos:end="9:30">bs</name></expr></argument>, <argument pos:start="9:33" pos:end="9:43"><expr pos:start="9:33" pos:end="9:43"><name pos:start="9:33" pos:end="9:43">new_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:37"><expr pos:start="10:5" pos:end="10:36"><call pos:start="10:5" pos:end="10:36"><name pos:start="10:5" pos:end="10:23">aio_context_release</name><argument_list pos:start="10:24" pos:end="10:36">(<argument pos:start="10:25" pos:end="10:35"><expr pos:start="10:25" pos:end="10:35"><name pos:start="10:25" pos:end="10:35">new_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></function></unit>
