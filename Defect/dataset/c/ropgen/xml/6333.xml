<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6333.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:19">MemoryRegionSection</name></type> <name pos:start="1:21" pos:end="1:38">memory_region_find</name><parameter_list pos:start="1:39" pos:end="3:66">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:51">MemoryRegion</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">mr</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:50"><decl pos:start="3:40" pos:end="3:50"><type pos:start="3:40" pos:end="3:50"><name pos:start="3:40" pos:end="3:45">hwaddr</name></type> <name pos:start="3:47" pos:end="3:50">addr</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:65"><decl pos:start="3:53" pos:end="3:65"><type pos:start="3:53" pos:end="3:65"><name pos:start="3:53" pos:end="3:60">uint64_t</name></type> <name pos:start="3:62" pos:end="3:65">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:15">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23">MemoryRegionSection</name></type> <name pos:start="7:25" pos:end="7:27">ret</name> <init pos:start="7:29" pos:end="7:44">= <expr pos:start="7:31" pos:end="7:44"><block pos:start="7:31" pos:end="7:44">{ <expr pos:start="7:33" pos:end="7:42"><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:35">mr</name> <operator pos:start="7:37" pos:end="7:37">=</operator> <name pos:start="7:39" pos:end="7:42">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">root</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">AddressSpace</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">as</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">AddrRange</name></type> <name pos:start="13:15" pos:end="13:19">range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">FlatView</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">view</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">FlatRange</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:17">fr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:11">+=</operator> <name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:14">mr</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">addr</name></name></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="29:5">for <control pos:start="23:9" pos:end="23:38">(<init pos:start="23:10" pos:end="23:19"><expr pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:13">root</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:18">mr</name></expr>;</init> <condition pos:start="23:21" pos:end="23:36"><expr pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:24">root</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:35">container</name></name></expr>;</condition> <incr/>)</control> <block pos:start="23:40" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:27">

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:12">root</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:19">root</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:30">container</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:12">addr</name> <operator pos:start="27:14" pos:end="27:15">+=</operator> <name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:20">root</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:26">addr</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:6">as</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:45"><name pos:start="33:10" pos:end="33:39">memory_region_to_address_space</name><argument_list pos:start="33:40" pos:end="33:45">(<argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:11">as</name></expr>)</condition> <block pos:start="35:14" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:19">

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:69"><expr pos:start="41:5" pos:end="41:68"><name pos:start="41:5" pos:end="41:9">range</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:68"><name pos:start="41:13" pos:end="41:26">addrrange_make</name><argument_list pos:start="41:27" pos:end="41:68">(<argument pos:start="41:28" pos:end="41:46"><expr pos:start="41:28" pos:end="41:46"><call pos:start="41:28" pos:end="41:46"><name pos:start="41:28" pos:end="41:40">int128_make64</name><argument_list pos:start="41:41" pos:end="41:46">(<argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:49" pos:end="41:67"><expr pos:start="41:49" pos:end="41:67"><call pos:start="41:49" pos:end="41:67"><name pos:start="41:49" pos:end="41:61">int128_make64</name><argument_list pos:start="41:62" pos:end="41:67">(<argument pos:start="41:63" pos:end="41:66"><expr pos:start="41:63" pos:end="41:66"><name pos:start="41:63" pos:end="41:66">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><call pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:17">rcu_read_lock</name><argument_list pos:start="45:18" pos:end="45:19">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:8">view</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:44"><name pos:start="47:12" pos:end="47:26">atomic_rcu_read</name><argument_list pos:start="47:27" pos:end="47:44">(<argument pos:start="47:28" pos:end="47:43"><expr pos:start="47:28" pos:end="47:43"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:30">as</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:43">current_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:6">fr</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:37"><name pos:start="49:10" pos:end="49:24">flatview_lookup</name><argument_list pos:start="49:25" pos:end="49:37">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">view</name></expr></argument>, <argument pos:start="49:32" pos:end="49:36"><expr pos:start="49:32" pos:end="49:36"><name pos:start="49:32" pos:end="49:36">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:12">(<expr pos:start="51:9" pos:end="51:11"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:11">fr</name></expr>)</condition> <block pos:start="51:14" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:17">

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <while pos:start="59:5" pos:end="63:5">while <condition pos:start="59:11" pos:end="59:73">(<expr pos:start="59:12" pos:end="59:72"><name pos:start="59:12" pos:end="59:13">fr</name> <operator pos:start="59:15" pos:end="59:15">&gt;</operator> <name pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:20">view</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:28">ranges</name></name> <operator pos:start="59:30" pos:end="59:31">&amp;&amp;</operator> <call pos:start="59:33" pos:end="59:72"><name pos:start="59:33" pos:end="59:52">addrrange_intersects</name><argument_list pos:start="59:53" pos:end="59:72">(<argument pos:start="59:54" pos:end="59:64"><expr pos:start="59:54" pos:end="59:64"><name pos:start="59:54" pos:end="59:59"><name pos:start="59:54" pos:end="59:55">fr</name><index pos:start="59:56" pos:end="59:59">[<expr pos:start="59:57" pos:end="59:58"><operator pos:start="59:57" pos:end="59:57">-</operator><literal type="number" pos:start="59:58" pos:end="59:58">1</literal></expr>]</index></name><operator pos:start="59:60" pos:end="59:60">.</operator><name pos:start="59:61" pos:end="59:64">addr</name></expr></argument>, <argument pos:start="59:67" pos:end="59:71"><expr pos:start="59:67" pos:end="59:71"><name pos:start="59:67" pos:end="59:71">range</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:75" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:13">

        <expr_stmt pos:start="61:9" pos:end="61:13"><expr pos:start="61:9" pos:end="61:12"><operator pos:start="61:9" pos:end="61:10">--</operator><name pos:start="61:11" pos:end="61:12">fr</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:7">ret</name><operator pos:start="67:8" pos:end="67:8">.</operator><name pos:start="67:9" pos:end="67:10">mr</name></name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:19"><name pos:start="67:14" pos:end="67:15">fr</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:19">mr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:7">ret</name><operator pos:start="69:8" pos:end="69:8">.</operator><name pos:start="69:9" pos:end="69:21">address_space</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:26">as</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:52"><expr pos:start="71:5" pos:end="71:51"><name pos:start="71:5" pos:end="71:9">range</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <call pos:start="71:13" pos:end="71:51"><name pos:start="71:13" pos:end="71:34">addrrange_intersection</name><argument_list pos:start="71:35" pos:end="71:51">(<argument pos:start="71:36" pos:end="71:40"><expr pos:start="71:36" pos:end="71:40"><name pos:start="71:36" pos:end="71:40">range</name></expr></argument>, <argument pos:start="71:43" pos:end="71:50"><expr pos:start="71:43" pos:end="71:50"><name pos:start="71:43" pos:end="71:50"><name pos:start="71:43" pos:end="71:44">fr</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:50">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:52"><expr pos:start="73:5" pos:end="73:51"><name pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:7">ret</name><operator pos:start="73:8" pos:end="73:8">.</operator><name pos:start="73:9" pos:end="73:28">offset_within_region</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:51"><name pos:start="73:32" pos:end="73:33">fr</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:51">offset_in_region</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:73"><expr pos:start="75:5" pos:end="77:72"><name pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:7">ret</name><operator pos:start="75:8" pos:end="75:8">.</operator><name pos:start="75:9" pos:end="75:28">offset_within_region</name></name> <operator pos:start="75:30" pos:end="75:31">+=</operator> <call pos:start="75:33" pos:end="77:72"><name pos:start="75:33" pos:end="75:44">int128_get64</name><argument_list pos:start="75:45" pos:end="77:72">(<argument pos:start="75:46" pos:end="77:71"><expr pos:start="75:46" pos:end="77:71"><call pos:start="75:46" pos:end="77:71"><name pos:start="75:46" pos:end="75:55">int128_sub</name><argument_list pos:start="75:56" pos:end="77:71">(<argument pos:start="75:57" pos:end="75:67"><expr pos:start="75:57" pos:end="75:67"><name pos:start="75:57" pos:end="75:67"><name pos:start="75:57" pos:end="75:61">range</name><operator pos:start="75:62" pos:end="75:62">.</operator><name pos:start="75:63" pos:end="75:67">start</name></name></expr></argument>,

                                                        <argument pos:start="77:57" pos:end="77:70"><expr pos:start="77:57" pos:end="77:70"><name pos:start="77:57" pos:end="77:70"><name pos:start="77:57" pos:end="77:58">fr</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:64">addr</name><operator pos:start="77:65" pos:end="77:65">.</operator><name pos:start="77:66" pos:end="77:70">start</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:12"><name pos:start="79:5" pos:end="79:7">ret</name><operator pos:start="79:8" pos:end="79:8">.</operator><name pos:start="79:9" pos:end="79:12">size</name></name> <operator pos:start="79:14" pos:end="79:14">=</operator> <name pos:start="79:16" pos:end="79:25"><name pos:start="79:16" pos:end="79:20">range</name><operator pos:start="79:21" pos:end="79:21">.</operator><name pos:start="79:22" pos:end="79:25">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:64"><expr pos:start="81:5" pos:end="81:63"><name pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:7">ret</name><operator pos:start="81:8" pos:end="81:8">.</operator><name pos:start="81:9" pos:end="81:35">offset_within_address_space</name></name> <operator pos:start="81:37" pos:end="81:37">=</operator> <call pos:start="81:39" pos:end="81:63"><name pos:start="81:39" pos:end="81:50">int128_get64</name><argument_list pos:start="81:51" pos:end="81:63">(<argument pos:start="81:52" pos:end="81:62"><expr pos:start="81:52" pos:end="81:62"><name pos:start="81:52" pos:end="81:62"><name pos:start="81:52" pos:end="81:56">range</name><operator pos:start="81:57" pos:end="81:57">.</operator><name pos:start="81:58" pos:end="81:62">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:32"><expr pos:start="83:5" pos:end="83:31"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:7">ret</name><operator pos:start="83:8" pos:end="83:8">.</operator><name pos:start="83:9" pos:end="83:16">readonly</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:31"><name pos:start="83:20" pos:end="83:21">fr</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:31">readonly</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><call pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:21">memory_region_ref</name><argument_list pos:start="85:22" pos:end="85:29">(<argument pos:start="85:23" pos:end="85:28"><expr pos:start="85:23" pos:end="85:28"><name pos:start="85:23" pos:end="85:28"><name pos:start="85:23" pos:end="85:25">ret</name><operator pos:start="85:26" pos:end="85:26">.</operator><name pos:start="85:27" pos:end="85:28">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="87:1" pos:end="87:4"><name pos:start="87:1" pos:end="87:3">out</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:22"><expr pos:start="89:5" pos:end="89:21"><call pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:19">rcu_read_unlock</name><argument_list pos:start="89:20" pos:end="89:21">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
