<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/172.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">configure_output_audio_filter</name><parameter_list pos:start="1:41" pos:end="1:100">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:52">FilterGraph</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">fg</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:79"><decl pos:start="1:59" pos:end="1:79"><type pos:start="1:59" pos:end="1:79"><name pos:start="1:59" pos:end="1:70">OutputFilter</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:79">ofilter</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:99"><decl pos:start="1:82" pos:end="1:99"><type pos:start="1:82" pos:end="1:99"><name pos:start="1:82" pos:end="1:94">AVFilterInOut</name> <modifier pos:start="1:96" pos:end="1:96">*</modifier></type><name pos:start="1:97" pos:end="1:99">out</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OutputStream</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ost</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:31">ofilter</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">ost</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">codec</name>  <init pos:start="7:28" pos:end="7:43">= <expr pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:32">ost</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:36">st</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:43">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFilterContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:32">last_filter</name> <init pos:start="9:34" pos:end="9:50">= <expr pos:start="9:36" pos:end="9:50"><name pos:start="9:36" pos:end="9:50"><name pos:start="9:36" pos:end="9:38">out</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:50">filter_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">pad_idx</name> <init pos:start="11:17" pos:end="11:30">= <expr pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:21">out</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:30">pad_idx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:21">sample_fmts</name></decl>, <decl pos:start="13:24" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:36">sample_rates</name></decl>, <decl pos:start="13:39" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:39" pos:end="13:39">*</modifier></type><name pos:start="13:40" pos:end="13:54">channel_layouts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:13">name</name><index pos:start="15:14" pos:end="15:18">[<expr pos:start="15:15" pos:end="15:17"><literal type="number" pos:start="15:15" pos:end="15:17">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>





    <expr_stmt pos:start="23:5" pos:end="23:85"><expr pos:start="23:5" pos:end="23:84"><call pos:start="23:5" pos:end="23:84"><name pos:start="23:5" pos:end="23:12">snprintf</name><argument_list pos:start="23:13" pos:end="23:84">(<argument pos:start="23:14" pos:end="23:17"><expr pos:start="23:14" pos:end="23:17"><name pos:start="23:14" pos:end="23:17">name</name></expr></argument>, <argument pos:start="23:20" pos:end="23:31"><expr pos:start="23:20" pos:end="23:31"><sizeof pos:start="23:20" pos:end="23:31">sizeof<argument_list pos:start="23:26" pos:end="23:31">(<argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:34" pos:end="23:54"><expr pos:start="23:34" pos:end="23:54"><literal type="string" pos:start="23:34" pos:end="23:54">"output stream %d:%d"</literal></expr></argument>, <argument pos:start="23:57" pos:end="23:71"><expr pos:start="23:57" pos:end="23:71"><name pos:start="23:57" pos:end="23:71"><name pos:start="23:57" pos:end="23:59">ost</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:71">file_index</name></name></expr></argument>, <argument pos:start="23:74" pos:end="23:83"><expr pos:start="23:74" pos:end="23:83"><name pos:start="23:74" pos:end="23:83"><name pos:start="23:74" pos:end="23:76">ost</name><operator pos:start="23:77" pos:end="23:78">-&gt;</operator><name pos:start="23:79" pos:end="23:83">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="29:68"><expr pos:start="25:5" pos:end="29:67"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="29:67"><name pos:start="25:11" pos:end="25:38">avfilter_graph_create_filter</name><argument_list pos:start="25:39" pos:end="29:67">(<argument pos:start="25:40" pos:end="25:55"><expr pos:start="25:40" pos:end="25:55"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:55"><name pos:start="25:41" pos:end="25:47">ofilter</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:55">filter</name></name></expr></argument>,

                                       <argument pos:start="27:40" pos:end="27:76"><expr pos:start="27:40" pos:end="27:76"><call pos:start="27:40" pos:end="27:76"><name pos:start="27:40" pos:end="27:59">avfilter_get_by_name</name><argument_list pos:start="27:60" pos:end="27:76">(<argument pos:start="27:61" pos:end="27:75"><expr pos:start="27:61" pos:end="27:75"><literal type="string" pos:start="27:61" pos:end="27:75">"ffabuffersink"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">name</name></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><name pos:start="29:46" pos:end="29:49">NULL</name></expr></argument>, <argument pos:start="29:52" pos:end="29:55"><expr pos:start="29:52" pos:end="29:55"><name pos:start="29:52" pos:end="29:55">NULL</name></expr></argument>, <argument pos:start="29:58" pos:end="29:66"><expr pos:start="29:58" pos:end="29:66"><name pos:start="29:58" pos:end="29:66"><name pos:start="29:58" pos:end="29:59">fg</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:66">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="74:0"><if pos:start="31:5" pos:end="74:0">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="74:0"><block_content pos:start="33:9" pos:end="74:0">

        <return pos:start="33:9" pos:end="74:0">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:define pos:start="37:1" pos:end="73:11">#<cpp:directive pos:start="37:2" pos:end="37:7">define</cpp:directive> <cpp:macro pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:26">AUTO_INSERT_FILTER</name><parameter_list pos:start="37:27" pos:end="37:54">(<parameter pos:start="37:28" pos:end="37:35"><type pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:35">opt_name</name></type></parameter>, <parameter pos:start="37:38" pos:end="37:48"><type pos:start="37:38" pos:end="37:48"><name pos:start="37:38" pos:end="37:48">filter_name</name></type></parameter>, <parameter pos:start="37:51" pos:end="37:53"><type pos:start="37:51" pos:end="37:53"><name pos:start="37:51" pos:end="37:53">arg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="37:56" pos:end="73:11">do {                 \

    AVFilterContext *filt_ctx;                                              \

                                                                            \

    av_log(NULL, AV_LOG_INFO, opt_name " is forwarded to lavfi "            \

           "similarly to -af " filter_name "=%s.\n", arg);                  \

                                                                            \

    ret = avfilter_graph_create_filter(&amp;filt_ctx,                           \

                                       avfilter_get_by_name(filter_name),   \

                                       filter_name, arg, NULL, fg-&gt;graph);  \

    if (ret &lt; 0)                                                            \

        return ret;                                                         \

                                                                            \

    ret = avfilter_link(last_filter, pad_idx, filt_ctx, 0);                 \

    if (ret &lt; 0)                                                            \

        return ret;                                                         \

                                                                            \

    last_filter = filt_ctx;                                                 \

    pad_idx = 0;                                                            \

} while (0)</cpp:value></cpp:define>

    <if_stmt pos:start="75:5" pos:end="99:5"><if pos:start="75:5" pos:end="99:5">if <condition pos:start="75:8" pos:end="75:35">(<expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:11">ost</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:34">audio_channels_mapped</name></name></expr>)</condition> <block pos:start="75:37" pos:end="99:5">{<block_content pos:start="77:9" pos:end="97:43">

        <decl_stmt pos:start="77:9" pos:end="77:14"><decl pos:start="77:9" pos:end="77:13"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:25"><decl pos:start="79:9" pos:end="79:24"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">AVBPrint</name></type> <name pos:start="79:18" pos:end="79:24">pan_buf</name></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:44"><expr pos:start="81:9" pos:end="81:43"><call pos:start="81:9" pos:end="81:43"><name pos:start="81:9" pos:end="81:22">av_bprint_init</name><argument_list pos:start="81:23" pos:end="81:43">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><operator pos:start="81:24" pos:end="81:24">&amp;</operator><name pos:start="81:25" pos:end="81:31">pan_buf</name></expr></argument>, <argument pos:start="81:34" pos:end="81:36"><expr pos:start="81:34" pos:end="81:36"><literal type="number" pos:start="81:34" pos:end="81:36">256</literal></expr></argument>, <argument pos:start="81:39" pos:end="81:42"><expr pos:start="81:39" pos:end="81:42"><literal type="number" pos:start="81:39" pos:end="81:42">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="85:78"><expr pos:start="83:9" pos:end="85:77"><call pos:start="83:9" pos:end="85:77"><name pos:start="83:9" pos:end="83:18">av_bprintf</name><argument_list pos:start="83:19" pos:end="85:77">(<argument pos:start="83:20" pos:end="83:27"><expr pos:start="83:20" pos:end="83:27"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:27">pan_buf</name></expr></argument>, <argument pos:start="83:30" pos:end="83:40"><expr pos:start="83:30" pos:end="83:40"><literal type="string" pos:start="83:30" pos:end="83:34">"0x%"</literal><name pos:start="83:35" pos:end="83:40">PRIx64</name></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:76"><expr pos:start="85:20" pos:end="85:76"><call pos:start="85:20" pos:end="85:76"><name pos:start="85:20" pos:end="85:48">av_get_default_channel_layout</name><argument_list pos:start="85:49" pos:end="85:76">(<argument pos:start="85:50" pos:end="85:75"><expr pos:start="85:50" pos:end="85:75"><name pos:start="85:50" pos:end="85:75"><name pos:start="85:50" pos:end="85:52">ost</name><operator pos:start="85:53" pos:end="85:54">-&gt;</operator><name pos:start="85:55" pos:end="85:75">audio_channels_mapped</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="87:9" pos:end="91:80">for <control pos:start="87:13" pos:end="87:56">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:51"><expr pos:start="87:21" pos:end="87:50"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:50"><name pos:start="87:25" pos:end="87:27">ost</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:50">audio_channels_mapped</name></name></expr>;</condition> <incr pos:start="87:53" pos:end="87:55"><expr pos:start="87:53" pos:end="87:55"><name pos:start="87:53" pos:end="87:53">i</name><operator pos:start="87:54" pos:end="87:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="91:80"><block_content pos:start="89:13" pos:end="91:80">

            <if_stmt pos:start="89:13" pos:end="91:80"><if pos:start="89:13" pos:end="91:80">if <condition pos:start="89:16" pos:end="89:49">(<expr pos:start="89:17" pos:end="89:48"><name pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:19">ost</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:39">audio_channels_map</name><index pos:start="89:40" pos:end="89:42">[<expr pos:start="89:41" pos:end="89:41"><name pos:start="89:41" pos:end="89:41">i</name></expr>]</index></name> <operator pos:start="89:44" pos:end="89:45">!=</operator> <operator pos:start="89:47" pos:end="89:47">-</operator><literal type="number" pos:start="89:48" pos:end="89:48">1</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:80"><block_content pos:start="91:17" pos:end="91:80">

                <expr_stmt pos:start="91:17" pos:end="91:80"><expr pos:start="91:17" pos:end="91:79"><call pos:start="91:17" pos:end="91:79"><name pos:start="91:17" pos:end="91:26">av_bprintf</name><argument_list pos:start="91:27" pos:end="91:79">(<argument pos:start="91:28" pos:end="91:35"><expr pos:start="91:28" pos:end="91:35"><operator pos:start="91:28" pos:end="91:28">&amp;</operator><name pos:start="91:29" pos:end="91:35">pan_buf</name></expr></argument>, <argument pos:start="91:38" pos:end="91:47"><expr pos:start="91:38" pos:end="91:47"><literal type="string" pos:start="91:38" pos:end="91:47">":c%d=c%d"</literal></expr></argument>, <argument pos:start="91:50" pos:end="91:50"><expr pos:start="91:50" pos:end="91:50"><name pos:start="91:50" pos:end="91:50">i</name></expr></argument>, <argument pos:start="91:53" pos:end="91:78"><expr pos:start="91:53" pos:end="91:78"><name pos:start="91:53" pos:end="91:78"><name pos:start="91:53" pos:end="91:55">ost</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:75">audio_channels_map</name><index pos:start="91:76" pos:end="91:78">[<expr pos:start="91:77" pos:end="91:77"><name pos:start="91:77" pos:end="91:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



        <expr_stmt pos:start="95:9" pos:end="95:63"><expr pos:start="95:9" pos:end="95:62"><call pos:start="95:9" pos:end="95:62"><name pos:start="95:9" pos:end="95:26">AUTO_INSERT_FILTER</name><argument_list pos:start="95:27" pos:end="95:62">(<argument pos:start="95:28" pos:end="95:41"><expr pos:start="95:28" pos:end="95:41"><literal type="string" pos:start="95:28" pos:end="95:41">"-map_channel"</literal></expr></argument>, <argument pos:start="95:44" pos:end="95:48"><expr pos:start="95:44" pos:end="95:48"><literal type="string" pos:start="95:44" pos:end="95:48">"pan"</literal></expr></argument>, <argument pos:start="95:51" pos:end="95:61"><expr pos:start="95:51" pos:end="95:61"><name pos:start="95:51" pos:end="95:61"><name pos:start="95:51" pos:end="95:57">pan_buf</name><operator pos:start="95:58" pos:end="95:58">.</operator><name pos:start="95:59" pos:end="95:61">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:43"><expr pos:start="97:9" pos:end="97:42"><call pos:start="97:9" pos:end="97:42"><name pos:start="97:9" pos:end="97:26">av_bprint_finalize</name><argument_list pos:start="97:27" pos:end="97:42">(<argument pos:start="97:28" pos:end="97:35"><expr pos:start="97:28" pos:end="97:35"><operator pos:start="97:28" pos:end="97:28">&amp;</operator><name pos:start="97:29" pos:end="97:35">pan_buf</name></expr></argument>, <argument pos:start="97:38" pos:end="97:41"><expr pos:start="97:38" pos:end="97:41"><name pos:start="97:38" pos:end="97:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:79"><if pos:start="103:5" pos:end="105:79">if <condition pos:start="103:8" pos:end="103:50">(<expr pos:start="103:9" pos:end="103:49"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:13">codec</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:23">channels</name></name> <operator pos:start="103:25" pos:end="103:26">&amp;&amp;</operator> <operator pos:start="103:28" pos:end="103:28">!</operator><name pos:start="103:29" pos:end="103:49"><name pos:start="103:29" pos:end="103:33">codec</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:49">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:79"><block_content pos:start="105:9" pos:end="105:79">

        <expr_stmt pos:start="105:9" pos:end="105:79"><expr pos:start="105:9" pos:end="105:78"><name pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:13">codec</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:29">channel_layout</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <call pos:start="105:33" pos:end="105:78"><name pos:start="105:33" pos:end="105:61">av_get_default_channel_layout</name><argument_list pos:start="105:62" pos:end="105:78">(<argument pos:start="105:63" pos:end="105:77"><expr pos:start="105:63" pos:end="105:77"><name pos:start="105:63" pos:end="105:77"><name pos:start="105:63" pos:end="105:67">codec</name><operator pos:start="105:68" pos:end="105:69">-&gt;</operator><name pos:start="105:70" pos:end="105:77">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:15">sample_fmts</name>     <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="109:45"><name pos:start="109:23" pos:end="109:40">choose_sample_fmts</name><argument_list pos:start="109:41" pos:end="109:45">(<argument pos:start="109:42" pos:end="109:44"><expr pos:start="109:42" pos:end="109:44"><name pos:start="109:42" pos:end="109:44">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:47"><expr pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:16">sample_rates</name>    <operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="111:46"><name pos:start="111:23" pos:end="111:41">choose_sample_rates</name><argument_list pos:start="111:42" pos:end="111:46">(<argument pos:start="111:43" pos:end="111:45"><expr pos:start="111:43" pos:end="111:45"><name pos:start="111:43" pos:end="111:45">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:50"><expr pos:start="113:5" pos:end="113:49"><name pos:start="113:5" pos:end="113:19">channel_layouts</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="113:49"><name pos:start="113:23" pos:end="113:44">choose_channel_layouts</name><argument_list pos:start="113:45" pos:end="113:49">(<argument pos:start="113:46" pos:end="113:48"><expr pos:start="113:46" pos:end="113:48"><name pos:start="113:46" pos:end="113:48">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="183:5"><if pos:start="115:5" pos:end="183:5">if <condition pos:start="115:8" pos:end="115:55">(<expr pos:start="115:9" pos:end="115:54"><name pos:start="115:9" pos:end="115:19">sample_fmts</name> <operator pos:start="115:21" pos:end="115:22">||</operator> <name pos:start="115:24" pos:end="115:35">sample_rates</name> <operator pos:start="115:37" pos:end="115:38">||</operator> <name pos:start="115:40" pos:end="115:54">channel_layouts</name></expr>)</condition> <block pos:start="115:57" pos:end="183:5">{<block_content pos:start="117:9" pos:end="181:20">

        <decl_stmt pos:start="117:9" pos:end="117:32"><decl pos:start="117:9" pos:end="117:31"><type pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:23">AVFilterContext</name> <modifier pos:start="117:25" pos:end="117:25">*</modifier></type><name pos:start="117:26" pos:end="117:31">format</name></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:23"><decl pos:start="119:9" pos:end="119:22"><type pos:start="119:9" pos:end="119:12"><name pos:start="119:9" pos:end="119:12">char</name></type> <name pos:start="119:14" pos:end="119:22"><name pos:start="119:14" pos:end="119:17">args</name><index pos:start="119:18" pos:end="119:22">[<expr pos:start="119:19" pos:end="119:21"><literal type="number" pos:start="119:19" pos:end="119:21">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:20"><decl pos:start="121:9" pos:end="121:19"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:15">len</name> <init pos:start="121:17" pos:end="121:19">= <expr pos:start="121:19" pos:end="121:19"><literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="125:9" pos:end="129:41"><if pos:start="125:9" pos:end="129:41">if <condition pos:start="125:12" pos:end="125:24">(<expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:23">sample_fmts</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="129:41"><block_content pos:start="127:13" pos:end="129:41">

            <expr_stmt pos:start="127:13" pos:end="129:41"><expr pos:start="127:13" pos:end="129:40"><name pos:start="127:13" pos:end="127:15">len</name> <operator pos:start="127:17" pos:end="127:18">+=</operator> <call pos:start="127:20" pos:end="129:40"><name pos:start="127:20" pos:end="127:27">snprintf</name><argument_list pos:start="127:28" pos:end="129:40">(<argument pos:start="127:29" pos:end="127:38"><expr pos:start="127:29" pos:end="127:38"><name pos:start="127:29" pos:end="127:32">args</name> <operator pos:start="127:34" pos:end="127:34">+</operator> <name pos:start="127:36" pos:end="127:38">len</name></expr></argument>, <argument pos:start="127:41" pos:end="127:58"><expr pos:start="127:41" pos:end="127:58"><sizeof pos:start="127:41" pos:end="127:52">sizeof<argument_list pos:start="127:47" pos:end="127:52">(<argument pos:start="127:48" pos:end="127:51"><expr pos:start="127:48" pos:end="127:51"><name pos:start="127:48" pos:end="127:51">args</name></expr></argument>)</argument_list></sizeof> <operator pos:start="127:54" pos:end="127:54">-</operator> <name pos:start="127:56" pos:end="127:58">len</name></expr></argument>, <argument pos:start="127:61" pos:end="127:77"><expr pos:start="127:61" pos:end="127:77"><literal type="string" pos:start="127:61" pos:end="127:77">"sample_fmts=%s:"</literal></expr></argument>,

                            <argument pos:start="129:29" pos:end="129:39"><expr pos:start="129:29" pos:end="129:39"><name pos:start="129:29" pos:end="129:39">sample_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="135:42"><if pos:start="131:9" pos:end="135:42">if <condition pos:start="131:12" pos:end="131:25">(<expr pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:24">sample_rates</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="135:42"><block_content pos:start="133:13" pos:end="135:42">

            <expr_stmt pos:start="133:13" pos:end="135:42"><expr pos:start="133:13" pos:end="135:41"><name pos:start="133:13" pos:end="133:15">len</name> <operator pos:start="133:17" pos:end="133:18">+=</operator> <call pos:start="133:20" pos:end="135:41"><name pos:start="133:20" pos:end="133:27">snprintf</name><argument_list pos:start="133:28" pos:end="135:41">(<argument pos:start="133:29" pos:end="133:38"><expr pos:start="133:29" pos:end="133:38"><name pos:start="133:29" pos:end="133:32">args</name> <operator pos:start="133:34" pos:end="133:34">+</operator> <name pos:start="133:36" pos:end="133:38">len</name></expr></argument>, <argument pos:start="133:41" pos:end="133:58"><expr pos:start="133:41" pos:end="133:58"><sizeof pos:start="133:41" pos:end="133:52">sizeof<argument_list pos:start="133:47" pos:end="133:52">(<argument pos:start="133:48" pos:end="133:51"><expr pos:start="133:48" pos:end="133:51"><name pos:start="133:48" pos:end="133:51">args</name></expr></argument>)</argument_list></sizeof> <operator pos:start="133:54" pos:end="133:54">-</operator> <name pos:start="133:56" pos:end="133:58">len</name></expr></argument>, <argument pos:start="133:61" pos:end="133:78"><expr pos:start="133:61" pos:end="133:78"><literal type="string" pos:start="133:61" pos:end="133:78">"sample_rates=%s:"</literal></expr></argument>,

                            <argument pos:start="135:29" pos:end="135:40"><expr pos:start="135:29" pos:end="135:40"><name pos:start="135:29" pos:end="135:40">sample_rates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="141:45"><if pos:start="137:9" pos:end="141:45">if <condition pos:start="137:12" pos:end="137:28">(<expr pos:start="137:13" pos:end="137:27"><name pos:start="137:13" pos:end="137:27">channel_layouts</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="141:45"><block_content pos:start="139:13" pos:end="141:45">

            <expr_stmt pos:start="139:13" pos:end="141:45"><expr pos:start="139:13" pos:end="141:44"><name pos:start="139:13" pos:end="139:15">len</name> <operator pos:start="139:17" pos:end="139:18">+=</operator> <call pos:start="139:20" pos:end="141:44"><name pos:start="139:20" pos:end="139:27">snprintf</name><argument_list pos:start="139:28" pos:end="141:44">(<argument pos:start="139:29" pos:end="139:38"><expr pos:start="139:29" pos:end="139:38"><name pos:start="139:29" pos:end="139:32">args</name> <operator pos:start="139:34" pos:end="139:34">+</operator> <name pos:start="139:36" pos:end="139:38">len</name></expr></argument>, <argument pos:start="139:41" pos:end="139:58"><expr pos:start="139:41" pos:end="139:58"><sizeof pos:start="139:41" pos:end="139:52">sizeof<argument_list pos:start="139:47" pos:end="139:52">(<argument pos:start="139:48" pos:end="139:51"><expr pos:start="139:48" pos:end="139:51"><name pos:start="139:48" pos:end="139:51">args</name></expr></argument>)</argument_list></sizeof> <operator pos:start="139:54" pos:end="139:54">-</operator> <name pos:start="139:56" pos:end="139:58">len</name></expr></argument>, <argument pos:start="139:61" pos:end="139:81"><expr pos:start="139:61" pos:end="139:81"><literal type="string" pos:start="139:61" pos:end="139:81">"channel_layouts=%s:"</literal></expr></argument>,

                            <argument pos:start="141:29" pos:end="141:43"><expr pos:start="141:29" pos:end="141:43"><name pos:start="141:29" pos:end="141:43">channel_layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:26"><expr pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:12">args</name><index pos:start="143:13" pos:end="143:21">[<expr pos:start="143:14" pos:end="143:20"><name pos:start="143:14" pos:end="143:16">len</name> <operator pos:start="143:18" pos:end="143:18">-</operator> <literal type="number" pos:start="143:20" pos:end="143:20">1</literal></expr>]</index></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><call pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:16">av_freep</name><argument_list pos:start="147:17" pos:end="147:30">(<argument pos:start="147:18" pos:end="147:29"><expr pos:start="147:18" pos:end="147:29"><operator pos:start="147:18" pos:end="147:18">&amp;</operator><name pos:start="147:19" pos:end="147:29">sample_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:32"><expr pos:start="149:9" pos:end="149:31"><call pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:16">av_freep</name><argument_list pos:start="149:17" pos:end="149:31">(<argument pos:start="149:18" pos:end="149:30"><expr pos:start="149:18" pos:end="149:30"><operator pos:start="149:18" pos:end="149:18">&amp;</operator><name pos:start="149:19" pos:end="149:30">sample_rates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:35"><expr pos:start="151:9" pos:end="151:34"><call pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:16">av_freep</name><argument_list pos:start="151:17" pos:end="151:34">(<argument pos:start="151:18" pos:end="151:33"><expr pos:start="151:18" pos:end="151:33"><operator pos:start="151:18" pos:end="151:18">&amp;</operator><name pos:start="151:19" pos:end="151:33">channel_layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="155:9" pos:end="157:46"><expr pos:start="155:9" pos:end="157:45"><call pos:start="155:9" pos:end="157:45"><name pos:start="155:9" pos:end="155:16">snprintf</name><argument_list pos:start="155:17" pos:end="157:45">(<argument pos:start="155:18" pos:end="155:21"><expr pos:start="155:18" pos:end="155:21"><name pos:start="155:18" pos:end="155:21">name</name></expr></argument>, <argument pos:start="155:24" pos:end="155:35"><expr pos:start="155:24" pos:end="155:35"><sizeof pos:start="155:24" pos:end="155:35">sizeof<argument_list pos:start="155:30" pos:end="155:35">(<argument pos:start="155:31" pos:end="155:34"><expr pos:start="155:31" pos:end="155:34"><name pos:start="155:31" pos:end="155:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="155:38" pos:end="155:75"><expr pos:start="155:38" pos:end="155:75"><literal type="string" pos:start="155:38" pos:end="155:75">"audio format for output stream %d:%d"</literal></expr></argument>,

                 <argument pos:start="157:18" pos:end="157:32"><expr pos:start="157:18" pos:end="157:32"><name pos:start="157:18" pos:end="157:32"><name pos:start="157:18" pos:end="157:20">ost</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:32">file_index</name></name></expr></argument>, <argument pos:start="157:35" pos:end="157:44"><expr pos:start="157:35" pos:end="157:44"><name pos:start="157:35" pos:end="157:44"><name pos:start="157:35" pos:end="157:37">ost</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:44">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="163:72"><expr pos:start="159:9" pos:end="163:71"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="163:71"><name pos:start="159:15" pos:end="159:42">avfilter_graph_create_filter</name><argument_list pos:start="159:43" pos:end="163:71">(<argument pos:start="159:44" pos:end="159:50"><expr pos:start="159:44" pos:end="159:50"><operator pos:start="159:44" pos:end="159:44">&amp;</operator><name pos:start="159:45" pos:end="159:50">format</name></expr></argument>,

                                           <argument pos:start="161:44" pos:end="161:74"><expr pos:start="161:44" pos:end="161:74"><call pos:start="161:44" pos:end="161:74"><name pos:start="161:44" pos:end="161:63">avfilter_get_by_name</name><argument_list pos:start="161:64" pos:end="161:74">(<argument pos:start="161:65" pos:end="161:73"><expr pos:start="161:65" pos:end="161:73"><literal type="string" pos:start="161:65" pos:end="161:73">"aformat"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                           <argument pos:start="163:44" pos:end="163:47"><expr pos:start="163:44" pos:end="163:47"><name pos:start="163:44" pos:end="163:47">name</name></expr></argument>, <argument pos:start="163:50" pos:end="163:53"><expr pos:start="163:50" pos:end="163:53"><name pos:start="163:50" pos:end="163:53">args</name></expr></argument>, <argument pos:start="163:56" pos:end="163:59"><expr pos:start="163:56" pos:end="163:59"><name pos:start="163:56" pos:end="163:59">NULL</name></expr></argument>, <argument pos:start="163:62" pos:end="163:70"><expr pos:start="163:62" pos:end="163:70"><name pos:start="163:62" pos:end="163:70"><name pos:start="163:62" pos:end="163:63">fg</name><operator pos:start="163:64" pos:end="163:65">-&gt;</operator><name pos:start="163:66" pos:end="163:70">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="167:23"><if pos:start="165:9" pos:end="167:23">if <condition pos:start="165:12" pos:end="165:20">(<expr pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:15">ret</name> <operator pos:start="165:17" pos:end="165:17">&lt;</operator> <literal type="number" pos:start="165:19" pos:end="165:19">0</literal></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:23"><block_content pos:start="167:13" pos:end="167:23">

            <return pos:start="167:13" pos:end="167:23">return <expr pos:start="167:20" pos:end="167:22"><name pos:start="167:20" pos:end="167:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:61"><expr pos:start="171:9" pos:end="171:60"><name pos:start="171:9" pos:end="171:11">ret</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:60"><name pos:start="171:15" pos:end="171:27">avfilter_link</name><argument_list pos:start="171:28" pos:end="171:60">(<argument pos:start="171:29" pos:end="171:39"><expr pos:start="171:29" pos:end="171:39"><name pos:start="171:29" pos:end="171:39">last_filter</name></expr></argument>, <argument pos:start="171:42" pos:end="171:48"><expr pos:start="171:42" pos:end="171:48"><name pos:start="171:42" pos:end="171:48">pad_idx</name></expr></argument>, <argument pos:start="171:51" pos:end="171:56"><expr pos:start="171:51" pos:end="171:56"><name pos:start="171:51" pos:end="171:56">format</name></expr></argument>, <argument pos:start="171:59" pos:end="171:59"><expr pos:start="171:59" pos:end="171:59"><literal type="number" pos:start="171:59" pos:end="171:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:23"><if pos:start="173:9" pos:end="175:23">if <condition pos:start="173:12" pos:end="173:20">(<expr pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">&lt;</operator> <literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:23"><block_content pos:start="175:13" pos:end="175:23">

            <return pos:start="175:13" pos:end="175:23">return <expr pos:start="175:20" pos:end="175:22"><name pos:start="175:20" pos:end="175:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:29"><expr pos:start="179:9" pos:end="179:28"><name pos:start="179:9" pos:end="179:19">last_filter</name> <operator pos:start="179:21" pos:end="179:21">=</operator> <name pos:start="179:23" pos:end="179:28">format</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:20"><expr pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:15">pad_idx</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <literal type="number" pos:start="181:19" pos:end="181:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="197:5"><if pos:start="187:5" pos:end="197:5">if <condition pos:start="187:8" pos:end="187:33">(<expr pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:20">audio_volume</name> <operator pos:start="187:22" pos:end="187:23">!=</operator> <literal type="number" pos:start="187:25" pos:end="187:27">256</literal> <operator pos:start="187:29" pos:end="187:30">&amp;&amp;</operator> <literal type="number" pos:start="187:32" pos:end="187:32">0</literal></expr>)</condition> <block pos:start="187:35" pos:end="197:5">{<block_content pos:start="189:9" pos:end="195:51">

        <decl_stmt pos:start="189:9" pos:end="189:23"><decl pos:start="189:9" pos:end="189:22"><type pos:start="189:9" pos:end="189:12"><name pos:start="189:9" pos:end="189:12">char</name></type> <name pos:start="189:14" pos:end="189:22"><name pos:start="189:14" pos:end="189:17">args</name><index pos:start="189:18" pos:end="189:22">[<expr pos:start="189:19" pos:end="189:21"><literal type="number" pos:start="189:19" pos:end="189:21">256</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:64"><expr pos:start="193:9" pos:end="193:63"><call pos:start="193:9" pos:end="193:63"><name pos:start="193:9" pos:end="193:16">snprintf</name><argument_list pos:start="193:17" pos:end="193:63">(<argument pos:start="193:18" pos:end="193:21"><expr pos:start="193:18" pos:end="193:21"><name pos:start="193:18" pos:end="193:21">args</name></expr></argument>, <argument pos:start="193:24" pos:end="193:35"><expr pos:start="193:24" pos:end="193:35"><sizeof pos:start="193:24" pos:end="193:35">sizeof<argument_list pos:start="193:30" pos:end="193:35">(<argument pos:start="193:31" pos:end="193:34"><expr pos:start="193:31" pos:end="193:34"><name pos:start="193:31" pos:end="193:34">args</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="193:38" pos:end="193:41"><expr pos:start="193:38" pos:end="193:41"><literal type="string" pos:start="193:38" pos:end="193:41">"%f"</literal></expr></argument>, <argument pos:start="193:44" pos:end="193:62"><expr pos:start="193:44" pos:end="193:62"><name pos:start="193:44" pos:end="193:55">audio_volume</name> <operator pos:start="193:57" pos:end="193:57">/</operator> <literal type="number" pos:start="193:59" pos:end="193:62">256.</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:51"><expr pos:start="195:9" pos:end="195:50"><call pos:start="195:9" pos:end="195:50"><name pos:start="195:9" pos:end="195:26">AUTO_INSERT_FILTER</name><argument_list pos:start="195:27" pos:end="195:50">(<argument pos:start="195:28" pos:end="195:33"><expr pos:start="195:28" pos:end="195:33"><literal type="string" pos:start="195:28" pos:end="195:33">"-vol"</literal></expr></argument>, <argument pos:start="195:36" pos:end="195:43"><expr pos:start="195:36" pos:end="195:43"><literal type="string" pos:start="195:36" pos:end="195:43">"volume"</literal></expr></argument>, <argument pos:start="195:46" pos:end="195:49"><expr pos:start="195:46" pos:end="195:49"><name pos:start="195:46" pos:end="195:49">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="201:5" pos:end="203:19"><if pos:start="201:5" pos:end="203:19">if <condition pos:start="201:8" pos:end="201:76">(<expr pos:start="201:9" pos:end="201:75"><operator pos:start="201:9" pos:end="201:9">(</operator><name pos:start="201:10" pos:end="201:12">ret</name> <operator pos:start="201:14" pos:end="201:14">=</operator> <call pos:start="201:16" pos:end="201:70"><name pos:start="201:16" pos:end="201:28">avfilter_link</name><argument_list pos:start="201:29" pos:end="201:70">(<argument pos:start="201:30" pos:end="201:40"><expr pos:start="201:30" pos:end="201:40"><name pos:start="201:30" pos:end="201:40">last_filter</name></expr></argument>, <argument pos:start="201:43" pos:end="201:49"><expr pos:start="201:43" pos:end="201:49"><name pos:start="201:43" pos:end="201:49">pad_idx</name></expr></argument>, <argument pos:start="201:52" pos:end="201:66"><expr pos:start="201:52" pos:end="201:66"><name pos:start="201:52" pos:end="201:66"><name pos:start="201:52" pos:end="201:58">ofilter</name><operator pos:start="201:59" pos:end="201:60">-&gt;</operator><name pos:start="201:61" pos:end="201:66">filter</name></name></expr></argument>, <argument pos:start="201:69" pos:end="201:69"><expr pos:start="201:69" pos:end="201:69"><literal type="number" pos:start="201:69" pos:end="201:69">0</literal></expr></argument>)</argument_list></call><operator pos:start="201:71" pos:end="201:71">)</operator> <operator pos:start="201:73" pos:end="201:73">&lt;</operator> <literal type="number" pos:start="201:75" pos:end="201:75">0</literal></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:19"><block_content pos:start="203:9" pos:end="203:19">

        <return pos:start="203:9" pos:end="203:19">return <expr pos:start="203:16" pos:end="203:18"><name pos:start="203:16" pos:end="203:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
