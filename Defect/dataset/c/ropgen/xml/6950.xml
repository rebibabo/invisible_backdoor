<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6950.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">parse_bit</name><parameter_list pos:start="1:21" pos:end="1:71">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:32">DeviceState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">dev</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:47">Property</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">prop</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:13">

    <if_stmt pos:start="5:5" pos:end="15:23"><if pos:start="5:5" pos:end="7:38">if <condition pos:start="5:8" pos:end="5:31">(<expr pos:start="5:9" pos:end="5:30"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:30"><name pos:start="5:10" pos:end="5:19">strcasecmp</name><argument_list pos:start="5:20" pos:end="5:30">(<argument pos:start="5:21" pos:end="5:23"><expr pos:start="5:21" pos:end="5:23"><name pos:start="5:21" pos:end="5:23">str</name></expr></argument>, <argument pos:start="5:26" pos:end="5:29"><expr pos:start="5:26" pos:end="5:29"><literal type="string" pos:start="5:26" pos:end="5:29">"on"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:38"><block_content pos:start="7:9" pos:end="7:38">

        <expr_stmt pos:start="7:9" pos:end="7:38"><expr pos:start="7:9" pos:end="7:37"><call pos:start="7:9" pos:end="7:37"><name pos:start="7:9" pos:end="7:20">bit_prop_set</name><argument_list pos:start="7:21" pos:end="7:37">(<argument pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><name pos:start="7:22" pos:end="7:24">dev</name></expr></argument>, <argument pos:start="7:27" pos:end="7:30"><expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">prop</name></expr></argument>, <argument pos:start="7:33" pos:end="7:36"><expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="9:5" pos:end="11:39">else if <condition pos:start="9:13" pos:end="9:37">(<expr pos:start="9:14" pos:end="9:36"><operator pos:start="9:14" pos:end="9:14">!</operator><call pos:start="9:15" pos:end="9:36"><name pos:start="9:15" pos:end="9:24">strcasecmp</name><argument_list pos:start="9:25" pos:end="9:36">(<argument pos:start="9:26" pos:end="9:28"><expr pos:start="9:26" pos:end="9:28"><name pos:start="9:26" pos:end="9:28">str</name></expr></argument>, <argument pos:start="9:31" pos:end="9:35"><expr pos:start="9:31" pos:end="9:35"><literal type="string" pos:start="9:31" pos:end="9:35">"off"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:39"><block_content pos:start="11:9" pos:end="11:39">

        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><call pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:20">bit_prop_set</name><argument_list pos:start="11:21" pos:end="11:38">(<argument pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:24">dev</name></expr></argument>, <argument pos:start="11:27" pos:end="11:30"><expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:30">prop</name></expr></argument>, <argument pos:start="11:33" pos:end="11:37"><expr pos:start="11:33" pos:end="11:37"><name pos:start="11:33" pos:end="11:37">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="13:5" pos:end="15:23">else<block type="pseudo" pos:start="15:9" pos:end="15:23"><block_content pos:start="15:9" pos:end="15:23">

        <return pos:start="15:9" pos:end="15:23">return <expr pos:start="15:16" pos:end="15:22"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:22">EINVAL</name></expr>;</return></block_content></block></else></if_stmt>

    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
