<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9404.c" pos:tabs="8"><function pos:start="1:1" pos:end="72:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:43">mmubooke206_get_physical_address</name><parameter_list pos:start="1:44" pos:end="5:60">(<parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">CPUState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">env</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:68">mmu_ctx_t</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">ctx</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:64"><decl pos:start="3:45" pos:end="3:64"><type pos:start="3:45" pos:end="3:64"><name pos:start="3:45" pos:end="3:56">target_ulong</name></type> <name pos:start="3:58" pos:end="3:64">address</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:72"><decl pos:start="3:67" pos:end="3:72"><type pos:start="3:67" pos:end="3:72"><name pos:start="3:67" pos:end="3:69">int</name></type> <name pos:start="3:71" pos:end="3:72">rw</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:59"><decl pos:start="5:45" pos:end="5:59"><type pos:start="5:45" pos:end="5:59"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:59">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="72:15">{<block_content pos:start="9:5" pos:end="72:15">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ppcmas_tlb_t</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">target_phys_addr_t</name></type> <name pos:start="11:24" pos:end="11:28">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>, <decl pos:start="13:15" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:9">raddr</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:31">target_phys_addr_t</name><operator pos:start="19:32" pos:end="19:32">)</operator><operator pos:start="19:33" pos:end="19:33">-</operator><literal type="number" pos:start="19:34" pos:end="19:37">1ULL</literal></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="72:15">for <control pos:start="23:9" pos:end="23:43">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:38"><expr pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:37">BOOKE206_MAX_TLBN</name></expr>;</condition> <incr pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:40">i</name><operator pos:start="23:41" pos:end="23:42">++</operator></expr></incr>)</control> <block pos:start="23:45" pos:end="72:15">{<block_content pos:start="25:9" pos:end="72:15">

        <decl_stmt pos:start="25:9" pos:end="25:45"><decl pos:start="25:9" pos:end="25:44"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">ways</name> <init pos:start="25:18" pos:end="25:44">= <expr pos:start="25:20" pos:end="25:44"><call pos:start="25:20" pos:end="25:44"><name pos:start="25:20" pos:end="25:36">booke206_tlb_ways</name><argument_list pos:start="25:37" pos:end="25:44">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">env</name></expr></argument>, <argument pos:start="25:43" pos:end="25:43"><expr pos:start="25:43" pos:end="25:43"><name pos:start="25:43" pos:end="25:43">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <for pos:start="29:9" pos:end="72:15">for <control pos:start="29:13" pos:end="29:34">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">j</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:29"><expr pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:21">j</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:28">ways</name></expr>;</condition> <incr pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:31">j</name><operator pos:start="29:32" pos:end="29:33">++</operator></expr></incr>)</control> <block pos:start="29:36" pos:end="72:15">{<block_content pos:start="31:13" pos:end="72:15">

            <expr_stmt pos:start="31:13" pos:end="31:56"><expr pos:start="31:13" pos:end="31:55"><name pos:start="31:13" pos:end="31:15">tlb</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:55"><name pos:start="31:19" pos:end="31:35">booke206_get_tlbm</name><argument_list pos:start="31:36" pos:end="31:55">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">env</name></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><name pos:start="31:42" pos:end="31:42">i</name></expr></argument>, <argument pos:start="31:45" pos:end="31:51"><expr pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:51">address</name></expr></argument>, <argument pos:start="31:54" pos:end="31:54"><expr pos:start="31:54" pos:end="31:54"><name pos:start="31:54" pos:end="31:54">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="36:13" pos:end="38:57"><expr pos:start="36:13" pos:end="38:56"><name pos:start="36:13" pos:end="36:15">ret</name> <operator pos:start="36:17" pos:end="36:17">=</operator> <call pos:start="36:19" pos:end="38:56"><name pos:start="36:19" pos:end="36:39">mmubooke206_check_tlb</name><argument_list pos:start="36:40" pos:end="38:56">(<argument pos:start="36:41" pos:end="36:43"><expr pos:start="36:41" pos:end="36:43"><name pos:start="36:41" pos:end="36:43">env</name></expr></argument>, <argument pos:start="36:46" pos:end="36:48"><expr pos:start="36:46" pos:end="36:48"><name pos:start="36:46" pos:end="36:48">tlb</name></expr></argument>, <argument pos:start="36:51" pos:end="36:56"><expr pos:start="36:51" pos:end="36:56"><operator pos:start="36:51" pos:end="36:51">&amp;</operator><name pos:start="36:52" pos:end="36:56">raddr</name></expr></argument>, <argument pos:start="36:59" pos:end="36:68"><expr pos:start="36:59" pos:end="36:68"><operator pos:start="36:59" pos:end="36:59">&amp;</operator><name pos:start="36:60" pos:end="36:68"><name pos:start="36:60" pos:end="36:62">ctx</name><operator pos:start="36:63" pos:end="36:64">-&gt;</operator><name pos:start="36:65" pos:end="36:68">prot</name></name></expr></argument>, <argument pos:start="36:71" pos:end="36:77"><expr pos:start="36:71" pos:end="36:77"><name pos:start="36:71" pos:end="36:77">address</name></expr></argument>,

                                        <argument pos:start="38:41" pos:end="38:42"><expr pos:start="38:41" pos:end="38:42"><name pos:start="38:41" pos:end="38:42">rw</name></expr></argument>, <argument pos:start="38:45" pos:end="38:55"><expr pos:start="38:45" pos:end="38:55"><name pos:start="38:45" pos:end="38:55">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="40:13" pos:end="72:15"><if pos:start="40:13" pos:end="72:15">if <condition pos:start="40:16" pos:end="40:26">(<expr pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:19">ret</name> <operator pos:start="40:21" pos:end="40:22">!=</operator> <operator pos:start="40:24" pos:end="40:24">-</operator><literal type="number" pos:start="40:25" pos:end="40:25">1</literal></expr>)</condition> <block pos:start="40:28" pos:end="72:15">{<block_content pos:start="42:17" pos:end="72:15">

                <goto pos:start="42:17" pos:end="42:31">goto <name pos:start="42:22" pos:end="42:30">found_tlb</name>;</goto>






<label pos:start="49:1" pos:end="49:10"><name pos:start="49:1" pos:end="49:9">found_tlb</name>:</label>



    <if_stmt pos:start="53:5" pos:end="72:15"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:14">&gt;=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>)</condition> <block pos:start="53:19" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:23">

        <expr_stmt pos:start="55:9" pos:end="55:27"><expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">raddr</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:26">raddr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="61:23"><expr pos:start="57:9" pos:end="61:22"><call pos:start="57:9" pos:end="61:22"><name pos:start="57:9" pos:end="57:17">LOG_SWTLB</name><argument_list pos:start="57:18" pos:end="61:22">(<argument pos:start="57:19" pos:end="59:28"><expr pos:start="57:19" pos:end="59:28"><literal type="string" pos:start="57:19" pos:end="57:39">"%s: access granted "</literal> <name pos:start="57:41" pos:end="57:53">TARGET_FMT_lx</name> <literal type="string" pos:start="57:55" pos:end="57:60">" =&gt; "</literal> <name pos:start="57:62" pos:end="57:75">TARGET_FMT_plx</name>

                  <literal type="string" pos:start="59:19" pos:end="59:28">" %d %d\n"</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:38"><expr pos:start="59:31" pos:end="59:38"><name pos:start="59:31" pos:end="59:38">__func__</name></expr></argument>, <argument pos:start="59:41" pos:end="59:47"><expr pos:start="59:41" pos:end="59:47"><name pos:start="59:41" pos:end="59:47">address</name></expr></argument>, <argument pos:start="59:50" pos:end="59:59"><expr pos:start="59:50" pos:end="59:59"><name pos:start="59:50" pos:end="59:59"><name pos:start="59:50" pos:end="59:52">ctx</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:59">raddr</name></name></expr></argument>, <argument pos:start="59:62" pos:end="59:70"><expr pos:start="59:62" pos:end="59:70"><name pos:start="59:62" pos:end="59:70"><name pos:start="59:62" pos:end="59:64">ctx</name><operator pos:start="59:65" pos:end="59:66">-&gt;</operator><name pos:start="59:67" pos:end="59:70">prot</name></name></expr></argument>,

                  <argument pos:start="61:19" pos:end="61:21"><expr pos:start="61:19" pos:end="61:21"><name pos:start="61:19" pos:end="61:21">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="72:15">else <block pos:start="63:12" pos:end="72:15">{<block_content pos:start="65:9" pos:end="72:15">

        <expr_stmt pos:start="65:9" pos:end="67:72"><expr pos:start="65:9" pos:end="67:71"><call pos:start="65:9" pos:end="67:71"><name pos:start="65:9" pos:end="65:17">LOG_SWTLB</name><argument_list pos:start="65:18" pos:end="67:71">(<argument pos:start="65:19" pos:end="67:28"><expr pos:start="65:19" pos:end="67:28"><literal type="string" pos:start="65:19" pos:end="65:39">"%s: access refused "</literal> <name pos:start="65:41" pos:end="65:53">TARGET_FMT_lx</name> <literal type="string" pos:start="65:55" pos:end="65:60">" =&gt; "</literal> <name pos:start="65:62" pos:end="65:75">TARGET_FMT_plx</name>

                  <literal type="string" pos:start="67:19" pos:end="67:28">" %d %d\n"</literal></expr></argument>, <argument pos:start="67:31" pos:end="67:38"><expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:38">__func__</name></expr></argument>, <argument pos:start="67:41" pos:end="67:47"><expr pos:start="67:41" pos:end="67:47"><name pos:start="67:41" pos:end="67:47">address</name></expr></argument>, <argument pos:start="67:50" pos:end="67:54"><expr pos:start="67:50" pos:end="67:54"><name pos:start="67:50" pos:end="67:54">raddr</name></expr></argument>, <argument pos:start="67:57" pos:end="67:65"><expr pos:start="67:57" pos:end="67:65"><name pos:start="67:57" pos:end="67:65"><name pos:start="67:57" pos:end="67:59">ctx</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:65">prot</name></name></expr></argument>, <argument pos:start="67:68" pos:end="67:70"><expr pos:start="67:68" pos:end="67:70"><name pos:start="67:68" pos:end="67:70">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="72:5" pos:end="72:15">return <expr pos:start="72:12" pos:end="72:14"><name pos:start="72:12" pos:end="72:14">ret</name></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></function>
</unit>
