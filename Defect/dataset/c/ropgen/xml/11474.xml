<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11474.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockDriverAIOCB</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:32">bdrv_aio_write</name><parameter_list pos:start="1:33" pos:end="5:77">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">BlockDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">bs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:73">sector_num</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:46">uint8_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:51">buf</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:67"><decl pos:start="3:54" pos:end="3:67"><type pos:start="3:54" pos:end="3:67"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:67">nb_sectors</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:62"><decl pos:start="5:34" pos:end="5:62"><type pos:start="5:34" pos:end="5:62"><name pos:start="5:34" pos:end="5:58">BlockDriverCompletionFunc</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:62">cb</name></decl></parameter>, <parameter pos:start="5:65" pos:end="5:76"><decl pos:start="5:65" pos:end="5:76"><type pos:start="5:65" pos:end="5:76"><name pos:start="5:65" pos:end="5:68">void</name> <modifier pos:start="5:70" pos:end="5:70">*</modifier></type><name pos:start="5:71" pos:end="5:76">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:15">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">BlockDriver</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">drv</name> <init pos:start="9:22" pos:end="9:30">= <expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverAIOCB</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:25">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:20"><if pos:start="15:5" pos:end="17:20">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">drv</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:20"><if pos:start="19:5" pos:end="21:20">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:10">bs</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:21">read_only</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:20"><block_content pos:start="21:9" pos:end="21:20">

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:59">(<expr pos:start="23:9" pos:end="23:58"><call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:30">bdrv_wr_badreq_sectors</name><argument_list pos:start="23:31" pos:end="23:58">(<argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><name pos:start="23:32" pos:end="23:33">bs</name></expr></argument>, <argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:45">sector_num</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">nb_sectors</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:69">(<expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:18">sector_num</name> <operator pos:start="27:20" pos:end="27:21">==</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal> <operator pos:start="27:25" pos:end="27:26">&amp;&amp;</operator> <name pos:start="27:28" pos:end="27:50"><name pos:start="27:28" pos:end="27:29">bs</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:50">boot_sector_enabled</name></name> <operator pos:start="27:52" pos:end="27:53">&amp;&amp;</operator> <name pos:start="27:55" pos:end="27:64">nb_sectors</name> <operator pos:start="27:66" pos:end="27:66">&gt;</operator> <literal type="number" pos:start="27:68" pos:end="27:68">0</literal></expr>)</condition> <block pos:start="27:71" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:47">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><call pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:14">memcpy</name><argument_list pos:start="29:15" pos:end="29:46">(<argument pos:start="29:16" pos:end="29:35"><expr pos:start="29:16" pos:end="29:35"><name pos:start="29:16" pos:end="29:35"><name pos:start="29:16" pos:end="29:17">bs</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:35">boot_sector_data</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><name pos:start="29:38" pos:end="29:40">buf</name></expr></argument>, <argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><literal type="number" pos:start="29:43" pos:end="29:45">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:75"><expr pos:start="35:5" pos:end="35:74"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:74"><name pos:start="35:11" pos:end="35:29"><name pos:start="35:11" pos:end="35:13">drv</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:29">bdrv_aio_write</name></name><argument_list pos:start="35:30" pos:end="35:74">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">bs</name></expr></argument>, <argument pos:start="35:35" pos:end="35:44"><expr pos:start="35:35" pos:end="35:44"><name pos:start="35:35" pos:end="35:44">sector_num</name></expr></argument>, <argument pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><name pos:start="35:47" pos:end="35:49">buf</name></expr></argument>, <argument pos:start="35:52" pos:end="35:61"><expr pos:start="35:52" pos:end="35:61"><name pos:start="35:52" pos:end="35:61">nb_sectors</name></expr></argument>, <argument pos:start="35:64" pos:end="35:65"><expr pos:start="35:64" pos:end="35:65"><name pos:start="35:64" pos:end="35:65">cb</name></expr></argument>, <argument pos:start="35:68" pos:end="35:73"><expr pos:start="35:68" pos:end="35:73"><name pos:start="35:68" pos:end="35:73">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">ret</name></expr>)</condition> <block pos:start="39:14" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:22">

	<comment type="block" pos:start="41:9" pos:end="41:77">/* Update stats even though technically transfer has not happened. */</comment>

	<expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:10">bs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">wr_bytes</name></name> <operator pos:start="43:22" pos:end="43:23">+=</operator> <operator pos:start="43:25" pos:end="43:25">(</operator><name pos:start="43:26" pos:end="43:33">unsigned</name><operator pos:start="43:34" pos:end="43:34">)</operator> <name pos:start="43:36" pos:end="43:45">nb_sectors</name> <operator pos:start="43:47" pos:end="43:47">*</operator> <name pos:start="43:49" pos:end="43:59">SECTOR_SIZE</name></expr>;</expr_stmt>

	<expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:10">bs</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:18">wr_ops</name></name> <operator pos:start="45:20" pos:end="45:21">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
