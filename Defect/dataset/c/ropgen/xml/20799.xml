<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20799.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">alpha_translate_init</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:18">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:14"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:24">done_init</name> <init pos:start="9:26" pos:end="9:28">= <expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:17">done_init</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:65"><expr pos:start="19:5" pos:end="19:64"><name pos:start="19:5" pos:end="19:11">cpu_env</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:64"><name pos:start="19:15" pos:end="19:32">tcg_global_reg_new</name><argument_list pos:start="19:33" pos:end="19:64">(<argument pos:start="19:34" pos:end="19:45"><expr pos:start="19:34" pos:end="19:45"><name pos:start="19:34" pos:end="19:45">TCG_TYPE_PTR</name></expr></argument>, <argument pos:start="19:48" pos:end="19:56"><expr pos:start="19:48" pos:end="19:56"><name pos:start="19:48" pos:end="19:56">TCG_AREG0</name></expr></argument>, <argument pos:start="19:59" pos:end="19:63"><expr pos:start="19:59" pos:end="19:63"><literal type="string" pos:start="19:59" pos:end="19:63">"env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">p</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:21">cpu_reg_names</name></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="45:5">for <control pos:start="25:9" pos:end="25:28">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">31</literal></expr>;</condition> <incr pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:25">i</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr></incr>)</control> <block pos:start="25:30" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:15">sprintf</name><argument_list pos:start="27:16" pos:end="27:29">(<argument pos:start="27:17" pos:end="27:17"><expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">p</name></expr></argument>, <argument pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:25"><literal type="string" pos:start="27:20" pos:end="27:25">"ir%d"</literal></expr></argument>, <argument pos:start="27:28" pos:end="27:28"><expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:69"><expr pos:start="29:9" pos:end="31:68"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:14">cpu_ir</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">i</name></expr>]</index></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="31:68"><name pos:start="29:21" pos:end="29:38">tcg_global_mem_new</name><argument_list pos:start="29:39" pos:end="31:68">(<argument pos:start="29:40" pos:end="29:51"><expr pos:start="29:40" pos:end="29:51"><name pos:start="29:40" pos:end="29:51">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="29:54" pos:end="29:62"><expr pos:start="29:54" pos:end="29:62"><name pos:start="29:54" pos:end="29:62">TCG_AREG0</name></expr></argument>,

                                       <argument pos:start="31:40" pos:end="31:64"><expr pos:start="31:40" pos:end="31:64"><call pos:start="31:40" pos:end="31:64"><name pos:start="31:40" pos:end="31:47">offsetof</name><argument_list pos:start="31:48" pos:end="31:64">(<argument pos:start="31:49" pos:end="31:56"><expr pos:start="31:49" pos:end="31:56"><name pos:start="31:49" pos:end="31:56">CPUState</name></expr></argument>, <argument pos:start="31:59" pos:end="31:63"><expr pos:start="31:59" pos:end="31:63"><name pos:start="31:59" pos:end="31:63"><name pos:start="31:59" pos:end="31:60">ir</name><index pos:start="31:61" pos:end="31:63">[<expr pos:start="31:62" pos:end="31:62"><name pos:start="31:62" pos:end="31:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:67" pos:end="31:67"><expr pos:start="31:67" pos:end="31:67"><name pos:start="31:67" pos:end="31:67">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:9">p</name> <operator pos:start="33:11" pos:end="33:12">+=</operator> <ternary pos:start="33:14" pos:end="33:29"><condition pos:start="33:14" pos:end="33:23"><expr pos:start="33:14" pos:end="33:21"><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:15">i</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:20">10</literal><operator pos:start="33:21" pos:end="33:21">)</operator></expr> ?</condition><then pos:start="33:25" pos:end="33:25"> <expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">4</literal></expr> </then><else pos:start="33:27" pos:end="33:29">: <expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">5</literal></expr></else></ternary></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><call pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:15">sprintf</name><argument_list pos:start="37:16" pos:end="37:30">(<argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">p</name></expr></argument>, <argument pos:start="37:20" pos:end="37:26"><expr pos:start="37:20" pos:end="37:26"><literal type="string" pos:start="37:20" pos:end="37:26">"fir%d"</literal></expr></argument>, <argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:71"><expr pos:start="39:9" pos:end="41:70"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:15">cpu_fir</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">i</name></expr>]</index></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="41:70"><name pos:start="39:22" pos:end="39:39">tcg_global_mem_new</name><argument_list pos:start="39:40" pos:end="41:70">(<argument pos:start="39:41" pos:end="39:52"><expr pos:start="39:41" pos:end="39:52"><name pos:start="39:41" pos:end="39:52">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="39:55" pos:end="39:63"><expr pos:start="39:55" pos:end="39:63"><name pos:start="39:55" pos:end="39:63">TCG_AREG0</name></expr></argument>,

                                        <argument pos:start="41:41" pos:end="41:66"><expr pos:start="41:41" pos:end="41:66"><call pos:start="41:41" pos:end="41:66"><name pos:start="41:41" pos:end="41:48">offsetof</name><argument_list pos:start="41:49" pos:end="41:66">(<argument pos:start="41:50" pos:end="41:57"><expr pos:start="41:50" pos:end="41:57"><name pos:start="41:50" pos:end="41:57">CPUState</name></expr></argument>, <argument pos:start="41:60" pos:end="41:65"><expr pos:start="41:60" pos:end="41:65"><name pos:start="41:60" pos:end="41:65"><name pos:start="41:60" pos:end="41:62">fir</name><index pos:start="41:63" pos:end="41:65">[<expr pos:start="41:64" pos:end="41:64"><name pos:start="41:64" pos:end="41:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:69" pos:end="41:69"><expr pos:start="41:69" pos:end="41:69"><name pos:start="41:69" pos:end="41:69">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:9">p</name> <operator pos:start="43:11" pos:end="43:12">+=</operator> <ternary pos:start="43:14" pos:end="43:29"><condition pos:start="43:14" pos:end="43:23"><expr pos:start="43:14" pos:end="43:21"><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:15">i</name> <operator pos:start="43:17" pos:end="43:17">&lt;</operator> <literal type="number" pos:start="43:19" pos:end="43:20">10</literal><operator pos:start="43:21" pos:end="43:21">)</operator></expr> ?</condition><then pos:start="43:25" pos:end="43:25"> <expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">5</literal></expr> </then><else pos:start="43:27" pos:end="43:29">: <expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">6</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="49:5" pos:end="51:62"><expr pos:start="49:5" pos:end="51:61"><name pos:start="49:5" pos:end="49:10">cpu_pc</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="51:61"><name pos:start="49:14" pos:end="49:31">tcg_global_mem_new</name><argument_list pos:start="49:32" pos:end="51:61">(<argument pos:start="49:33" pos:end="49:44"><expr pos:start="49:33" pos:end="49:44"><name pos:start="49:33" pos:end="49:44">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="49:47" pos:end="49:55"><expr pos:start="49:47" pos:end="49:55"><name pos:start="49:47" pos:end="49:55">TCG_AREG0</name></expr></argument>,

                                <argument pos:start="51:33" pos:end="51:54"><expr pos:start="51:33" pos:end="51:54"><call pos:start="51:33" pos:end="51:54"><name pos:start="51:33" pos:end="51:40">offsetof</name><argument_list pos:start="51:41" pos:end="51:54">(<argument pos:start="51:42" pos:end="51:49"><expr pos:start="51:42" pos:end="51:49"><name pos:start="51:42" pos:end="51:49">CPUState</name></expr></argument>, <argument pos:start="51:52" pos:end="51:53"><expr pos:start="51:52" pos:end="51:53"><name pos:start="51:52" pos:end="51:53">pc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:57" pos:end="51:60"><expr pos:start="51:57" pos:end="51:60"><literal type="string" pos:start="51:57" pos:end="51:60">"pc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="68:0"><expr pos:start="55:5" pos:end="57:67"><name pos:start="55:5" pos:end="55:12">cpu_lock</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="57:67"><name pos:start="55:16" pos:end="55:33">tcg_global_mem_new</name><argument_list pos:start="55:34" pos:end="57:67">(<argument pos:start="55:35" pos:end="55:46"><expr pos:start="55:35" pos:end="55:46"><name pos:start="55:35" pos:end="55:46">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="55:49" pos:end="55:57"><expr pos:start="55:49" pos:end="55:57"><name pos:start="55:49" pos:end="55:57">TCG_AREG0</name></expr></argument>,

                                  <argument pos:start="57:35" pos:end="57:58"><expr pos:start="57:35" pos:end="57:58"><call pos:start="57:35" pos:end="57:58"><name pos:start="57:35" pos:end="57:42">offsetof</name><argument_list pos:start="57:43" pos:end="57:58">(<argument pos:start="57:44" pos:end="57:51"><expr pos:start="57:44" pos:end="57:51"><name pos:start="57:44" pos:end="57:51">CPUState</name></expr></argument>, <argument pos:start="57:54" pos:end="57:57"><expr pos:start="57:54" pos:end="57:57"><name pos:start="57:54" pos:end="57:57">lock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:61" pos:end="57:66"><expr pos:start="57:61" pos:end="57:66"><literal type="string" pos:start="57:61" pos:end="57:66">"lock"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:26">/* register helpers */</comment>

<cpp:undef pos:start="63:1" pos:end="63:17">#<cpp:directive pos:start="63:2" pos:end="63:6">undef</cpp:directive> <name pos:start="63:8" pos:end="63:17">DEF_HELPER</name></cpp:undef>

<cpp:define pos:start="65:1" pos:end="65:71">#<cpp:directive pos:start="65:2" pos:end="65:7">define</cpp:directive> <cpp:macro pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:18">DEF_HELPER</name><parameter_list pos:start="65:19" pos:end="65:37">(<parameter pos:start="65:20" pos:end="65:22"><type pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></type></parameter>, <parameter pos:start="65:25" pos:end="65:28"><type pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">name</name></type></parameter>, <parameter pos:start="65:31" pos:end="65:36"><type pos:start="65:31" pos:end="65:36"><name pos:start="65:31" pos:end="65:36">params</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="65:39" pos:end="65:71">tcg_register_helper(name, #name);</cpp:value></cpp:define>

<cpp:include pos:start="67:1" pos:end="67:19">#<cpp:directive pos:start="67:2" pos:end="67:8">include</cpp:directive> <cpp:file pos:start="67:10" pos:end="67:19">"helper.h"</cpp:file></cpp:include>



    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:13">done_init</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
