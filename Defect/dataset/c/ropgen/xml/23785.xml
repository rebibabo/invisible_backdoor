<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23785.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">s390_ccw_realize</name><parameter_list pos:start="1:29" pos:end="1:79">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:42">S390CCWDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">cdev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">sysfsdev</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:71">Error</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:31">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CcwDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">ccw_dev</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><call pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:35">CCW_DEVICE</name><argument_list pos:start="5:36" pos:end="5:41">(<argument pos:start="5:37" pos:end="5:40"><expr pos:start="5:37" pos:end="5:40"><name pos:start="5:37" pos:end="5:40">cdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">CCWDeviceClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">ck</name> <init pos:start="7:24" pos:end="7:54">= <expr pos:start="7:26" pos:end="7:54"><call pos:start="7:26" pos:end="7:54"><name pos:start="7:26" pos:end="7:45">CCW_DEVICE_GET_CLASS</name><argument_list pos:start="7:46" pos:end="7:54">(<argument pos:start="7:47" pos:end="7:53"><expr pos:start="7:47" pos:end="7:53"><name pos:start="7:47" pos:end="7:53">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:23">parent</name> <init pos:start="9:25" pos:end="9:41">= <expr pos:start="9:27" pos:end="9:41"><call pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:32">DEVICE</name><argument_list pos:start="9:33" pos:end="9:41">(<argument pos:start="9:34" pos:end="9:40"><expr pos:start="9:34" pos:end="9:40"><name pos:start="9:34" pos:end="9:40">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BusState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">qbus</name> <init pos:start="11:20" pos:end="11:48">= <expr pos:start="11:22" pos:end="11:48"><call pos:start="11:22" pos:end="11:48"><name pos:start="11:22" pos:end="11:40">qdev_get_parent_bus</name><argument_list pos:start="11:41" pos:end="11:48">(<argument pos:start="11:42" pos:end="11:47"><expr pos:start="11:42" pos:end="11:47"><name pos:start="11:42" pos:end="11:47">parent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">VirtualCssBus</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">cbus</name> <init pos:start="13:25" pos:end="13:47">= <expr pos:start="13:27" pos:end="13:47"><call pos:start="13:27" pos:end="13:47"><name pos:start="13:27" pos:end="13:41">VIRTUAL_CSS_BUS</name><argument_list pos:start="13:42" pos:end="13:47">(<argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">SubchDev</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">sch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:14">err</name> <init pos:start="19:16" pos:end="19:21">= <expr pos:start="19:18" pos:end="19:21"><name pos:start="19:18" pos:end="19:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:25">s390_ccw_get_dev_info</name><argument_list pos:start="23:26" pos:end="23:47">(<argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">cdev</name></expr></argument>, <argument pos:start="23:33" pos:end="23:40"><expr pos:start="23:33" pos:end="23:40"><name pos:start="23:33" pos:end="23:40">sysfsdev</name></expr></argument>, <argument pos:start="23:43" pos:end="23:46"><expr pos:start="23:43" pos:end="23:46"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:46">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">err</name></expr>)</condition> <block pos:start="25:14" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:31">

        <goto pos:start="27:9" pos:end="27:31">goto <name pos:start="27:14" pos:end="27:30">out_err_propagate</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:73"><expr pos:start="33:5" pos:end="33:72"><name pos:start="33:5" pos:end="33:7">sch</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:72"><name pos:start="33:11" pos:end="33:24">css_create_sch</name><argument_list pos:start="33:25" pos:end="33:72">(<argument pos:start="33:26" pos:end="33:39"><expr pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:32">ccw_dev</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:39">devno</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:46"><expr pos:start="33:42" pos:end="33:46"><name pos:start="33:42" pos:end="33:46">false</name></expr></argument>, <argument pos:start="33:49" pos:end="33:65"><expr pos:start="33:49" pos:end="33:65"><name pos:start="33:49" pos:end="33:65"><name pos:start="33:49" pos:end="33:52">cbus</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:65">squash_mcss</name></name></expr></argument>, <argument pos:start="33:68" pos:end="33:71"><expr pos:start="33:68" pos:end="33:71"><operator pos:start="33:68" pos:end="33:68">&amp;</operator><name pos:start="33:69" pos:end="33:71">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:12">sch</name></expr>)</condition> <block pos:start="35:15" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:29">

        <goto pos:start="37:9" pos:end="37:29">goto <name pos:start="37:14" pos:end="37:28">out_mdevid_free</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:7">sch</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:20">driver_data</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:27">cdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:61"><expr pos:start="43:5" pos:end="43:60"><name pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:7">sch</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:27">do_subchannel_work</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:60">do_subchannel_work_passthrough</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:11">ccw_dev</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">sch</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:22">sch</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:49"><name pos:start="49:11" pos:end="49:29">css_sch_build_schib</name><argument_list pos:start="49:30" pos:end="49:49">(<argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">sch</name></expr></argument>, <argument pos:start="49:36" pos:end="49:48"><expr pos:start="49:36" pos:end="49:48"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:40">cdev</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:48">hostid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:12">(<expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">ret</name></expr>)</condition> <block pos:start="51:14" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:21">

        <expr_stmt pos:start="53:9" pos:end="55:35"><expr pos:start="53:9" pos:end="55:34"><call pos:start="53:9" pos:end="55:34"><name pos:start="53:9" pos:end="53:24">error_setg_errno</name><argument_list pos:start="53:25" pos:end="55:34">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:29">err</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><operator pos:start="53:32" pos:end="53:32">-</operator><name pos:start="53:33" pos:end="53:35">ret</name></expr></argument>, <argument pos:start="53:38" pos:end="53:72"><expr pos:start="53:38" pos:end="53:72"><literal type="string" pos:start="53:38" pos:end="53:72">"%s: Failed to build initial schib"</literal></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:33"><expr pos:start="55:26" pos:end="55:33"><name pos:start="55:26" pos:end="55:33">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:21">goto <name pos:start="57:14" pos:end="57:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><call pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:15"><name pos:start="63:5" pos:end="63:6">ck</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:15">realize</name></name><argument_list pos:start="63:16" pos:end="63:30">(<argument pos:start="63:17" pos:end="63:23"><expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:23">ccw_dev</name></expr></argument>, <argument pos:start="63:26" pos:end="63:29"><expr pos:start="63:26" pos:end="63:29"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:12">(<expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">err</name></expr>)</condition> <block pos:start="65:14" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:21">

        <goto pos:start="67:9" pos:end="67:21">goto <name pos:start="67:14" pos:end="67:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="75:49"><expr pos:start="73:5" pos:end="75:48"><call pos:start="73:5" pos:end="75:48"><name pos:start="73:5" pos:end="73:25">css_generate_sch_crws</name><argument_list pos:start="73:26" pos:end="75:48">(<argument pos:start="73:27" pos:end="73:36"><expr pos:start="73:27" pos:end="73:36"><name pos:start="73:27" pos:end="73:36"><name pos:start="73:27" pos:end="73:29">sch</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:36">cssid</name></name></expr></argument>, <argument pos:start="73:39" pos:end="73:47"><expr pos:start="73:39" pos:end="73:47"><name pos:start="73:39" pos:end="73:47"><name pos:start="73:39" pos:end="73:41">sch</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:47">ssid</name></name></expr></argument>, <argument pos:start="73:50" pos:end="73:59"><expr pos:start="73:50" pos:end="73:59"><name pos:start="73:50" pos:end="73:59"><name pos:start="73:50" pos:end="73:52">sch</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:59">schid</name></name></expr></argument>,

                          <argument pos:start="75:27" pos:end="75:44"><expr pos:start="75:27" pos:end="75:44"><name pos:start="75:27" pos:end="75:44"><name pos:start="75:27" pos:end="75:32">parent</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:44">hotplugged</name></name></expr></argument>, <argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:11">return;</return>



<label pos:start="81:1" pos:end="81:8"><name pos:start="81:1" pos:end="81:7">out_err</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:74"><expr pos:start="83:5" pos:end="83:73"><call pos:start="83:5" pos:end="83:73"><name pos:start="83:5" pos:end="83:20">css_subch_assign</name><argument_list pos:start="83:21" pos:end="83:73">(<argument pos:start="83:22" pos:end="83:31"><expr pos:start="83:22" pos:end="83:31"><name pos:start="83:22" pos:end="83:31"><name pos:start="83:22" pos:end="83:24">sch</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:31">cssid</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:42"><expr pos:start="83:34" pos:end="83:42"><name pos:start="83:34" pos:end="83:42"><name pos:start="83:34" pos:end="83:36">sch</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:42">ssid</name></name></expr></argument>, <argument pos:start="83:45" pos:end="83:54"><expr pos:start="83:45" pos:end="83:54"><name pos:start="83:45" pos:end="83:54"><name pos:start="83:45" pos:end="83:47">sch</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:54">schid</name></name></expr></argument>, <argument pos:start="83:57" pos:end="83:66"><expr pos:start="83:57" pos:end="83:66"><name pos:start="83:57" pos:end="83:66"><name pos:start="83:57" pos:end="83:59">sch</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:66">devno</name></name></expr></argument>, <argument pos:start="83:69" pos:end="83:72"><expr pos:start="83:69" pos:end="83:72"><name pos:start="83:69" pos:end="83:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:24"><expr pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:11">ccw_dev</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:16">sch</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:16"><expr pos:start="87:5" pos:end="87:15"><call pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:10">g_free</name><argument_list pos:start="87:11" pos:end="87:15">(<argument pos:start="87:12" pos:end="87:14"><expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">sch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="89:1" pos:end="89:16"><name pos:start="89:1" pos:end="89:15">out_mdevid_free</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:25"><expr pos:start="91:5" pos:end="91:24"><call pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:10">g_free</name><argument_list pos:start="91:11" pos:end="91:24">(<argument pos:start="91:12" pos:end="91:23"><expr pos:start="91:12" pos:end="91:23"><name pos:start="91:12" pos:end="91:23"><name pos:start="91:12" pos:end="91:15">cdev</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:23">mdevid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="93:1" pos:end="93:18"><name pos:start="93:1" pos:end="93:17">out_err_propagate</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:31"><expr pos:start="95:5" pos:end="95:30"><call pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:19">error_propagate</name><argument_list pos:start="95:20" pos:end="95:30">(<argument pos:start="95:21" pos:end="95:24"><expr pos:start="95:21" pos:end="95:24"><name pos:start="95:21" pos:end="95:24">errp</name></expr></argument>, <argument pos:start="95:27" pos:end="95:29"><expr pos:start="95:27" pos:end="95:29"><name pos:start="95:27" pos:end="95:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
