<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15881.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">mjpeg_probe</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">AVProbeData</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">state</name> <init pos:start="7:15" pos:end="7:18">= <expr pos:start="7:17" pos:end="7:18"><operator pos:start="7:17" pos:end="7:17">-</operator><literal type="number" pos:start="7:18" pos:end="7:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">nb_invalid</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">nb_frames</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="97:5">for <control pos:start="15:9" pos:end="15:35">(<init pos:start="15:10" pos:end="15:13"><expr pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:10">i</name><operator pos:start="15:11" pos:end="15:11">=</operator><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</init> <condition pos:start="15:15" pos:end="15:30"><expr pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:15">i</name><operator pos:start="15:16" pos:end="15:16">&lt;</operator><name pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:17">p</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">buf_size</name></name><operator pos:start="15:28" pos:end="15:28">-</operator><literal type="number" pos:start="15:29" pos:end="15:29">2</literal></expr>;</condition> <incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">i</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control> <block pos:start="15:37" pos:end="97:5">{<block_content pos:start="17:9" pos:end="95:9">

        <decl_stmt pos:start="17:9" pos:end="17:14"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">c</name></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:13">p</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:18">buf</name><index pos:start="19:19" pos:end="19:21">[<expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">i</name></expr>]</index></name> <operator pos:start="19:23" pos:end="19:24">!=</operator> <literal type="number" pos:start="19:26" pos:end="19:29">0xFF</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">c</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:13">p</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:18">buf</name><index pos:start="23:19" pos:end="23:23">[<expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:20">i</name><operator pos:start="23:21" pos:end="23:21">+</operator><literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <switch pos:start="25:9" pos:end="95:9">switch <condition pos:start="25:16" pos:end="25:18">(<expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">c</name></expr>)</condition> <block pos:start="25:20" pos:end="95:9">{<block_content pos:start="27:9" pos:end="93:13">

        <case pos:start="27:9" pos:end="27:18">case <expr pos:start="27:14" pos:end="27:17"><literal type="number" pos:start="27:14" pos:end="27:17">0xD8</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:25"><expr pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:17">state</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:24">0xD8</literal></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:18">case <expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0xC0</literal></expr>:</case>

        <case pos:start="35:9" pos:end="35:18">case <expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0xC1</literal></expr>:</case>

        <case pos:start="37:9" pos:end="37:18">case <expr pos:start="37:14" pos:end="37:17"><literal type="number" pos:start="37:14" pos:end="37:17">0xC2</literal></expr>:</case>

        <case pos:start="39:9" pos:end="39:18">case <expr pos:start="39:14" pos:end="39:17"><literal type="number" pos:start="39:14" pos:end="39:17">0xC3</literal></expr>:</case>

        <case pos:start="41:9" pos:end="41:18">case <expr pos:start="41:14" pos:end="41:17"><literal type="number" pos:start="41:14" pos:end="41:17">0xC5</literal></expr>:</case>

        <case pos:start="43:9" pos:end="43:18">case <expr pos:start="43:14" pos:end="43:17"><literal type="number" pos:start="43:14" pos:end="43:17">0xC6</literal></expr>:</case>

        <case pos:start="45:9" pos:end="45:18">case <expr pos:start="45:14" pos:end="45:17"><literal type="number" pos:start="45:14" pos:end="45:17">0xC7</literal></expr>:</case>

        <case pos:start="47:9" pos:end="47:18">case <expr pos:start="47:14" pos:end="47:17"><literal type="number" pos:start="47:14" pos:end="47:17">0xF7</literal></expr>:</case>

            <if_stmt pos:start="49:13" pos:end="55:29"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:30">(<expr pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:21">state</name> <operator pos:start="49:23" pos:end="49:24">==</operator> <literal type="number" pos:start="49:26" pos:end="49:29">0xD8</literal></expr>)</condition> <block pos:start="49:32" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:29">

                <expr_stmt pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:21">state</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <literal type="number" pos:start="51:25" pos:end="51:28">0xC0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="53:15" pos:end="55:29">else<block type="pseudo" pos:start="55:17" pos:end="55:29"><block_content pos:start="55:17" pos:end="55:29">

                <expr_stmt pos:start="55:17" pos:end="55:29"><expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:26">nb_invalid</name><operator pos:start="55:27" pos:end="55:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:18">case <expr pos:start="59:14" pos:end="59:17"><literal type="number" pos:start="59:14" pos:end="59:17">0xDA</literal></expr>:</case>

            <if_stmt pos:start="61:13" pos:end="67:29"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:30">(<expr pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:21">state</name> <operator pos:start="61:23" pos:end="61:24">==</operator> <literal type="number" pos:start="61:26" pos:end="61:29">0xC0</literal></expr>)</condition> <block pos:start="61:32" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:29">

                <expr_stmt pos:start="63:17" pos:end="63:29"><expr pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:21">state</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:28">0xDA</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="67:29">else<block type="pseudo" pos:start="67:17" pos:end="67:29"><block_content pos:start="67:17" pos:end="67:29">

                <expr_stmt pos:start="67:17" pos:end="67:29"><expr pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:26">nb_invalid</name><operator pos:start="67:27" pos:end="67:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:18">case <expr pos:start="71:14" pos:end="71:17"><literal type="number" pos:start="71:14" pos:end="71:17">0xD9</literal></expr>:</case>

            <if_stmt pos:start="73:13" pos:end="81:29"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:30">(<expr pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:21">state</name> <operator pos:start="73:23" pos:end="73:24">==</operator> <literal type="number" pos:start="73:26" pos:end="73:29">0xDA</literal></expr>)</condition> <block pos:start="73:32" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:28">

                <expr_stmt pos:start="75:17" pos:end="75:29"><expr pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:21">state</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:28">0xD9</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:28"><expr pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:25">nb_frames</name><operator pos:start="77:26" pos:end="77:27">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="81:29">else<block type="pseudo" pos:start="81:17" pos:end="81:29"><block_content pos:start="81:17" pos:end="81:29">

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:26">nb_invalid</name><operator pos:start="81:27" pos:end="81:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <default pos:start="85:9" pos:end="85:16">default:</default>

            <if_stmt pos:start="87:13" pos:end="93:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="89:29">(  <expr pos:start="87:19" pos:end="89:28"><operator pos:start="87:19" pos:end="87:19">(</operator><name pos:start="87:20" pos:end="87:20">c</name> <operator pos:start="87:22" pos:end="87:23">&gt;=</operator> <literal type="number" pos:start="87:25" pos:end="87:28">0x02</literal> <operator pos:start="87:30" pos:end="87:31">&amp;&amp;</operator> <name pos:start="87:33" pos:end="87:33">c</name> <operator pos:start="87:35" pos:end="87:36">&lt;=</operator> <literal type="number" pos:start="87:38" pos:end="87:41">0xBF</literal><operator pos:start="87:42" pos:end="87:42">)</operator>

                <operator pos:start="89:17" pos:end="89:18">||</operator> <name pos:start="89:20" pos:end="89:20">c</name> <operator pos:start="89:22" pos:end="89:23">==</operator> <literal type="number" pos:start="89:25" pos:end="89:28">0xC8</literal></expr>)</condition> <block pos:start="89:31" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:29">

                <expr_stmt pos:start="91:17" pos:end="91:29"><expr pos:start="91:17" pos:end="91:28"><name pos:start="91:17" pos:end="91:26">nb_invalid</name><operator pos:start="91:27" pos:end="91:28">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="101:5" pos:end="123:5"><if pos:start="101:5" pos:end="123:5">if <condition pos:start="101:8" pos:end="101:37">(<expr pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:18">nb_invalid</name><operator pos:start="101:19" pos:end="101:19">*</operator><literal type="number" pos:start="101:20" pos:end="101:22">4</literal> <operator pos:start="101:22" pos:end="101:22">+</operator> <literal type="number" pos:start="101:24" pos:end="101:24">1</literal> <operator pos:start="101:26" pos:end="101:26">&lt;</operator> <name pos:start="101:28" pos:end="101:36">nb_frames</name></expr>)</condition> <block pos:start="101:39" pos:end="123:5">{<block_content pos:start="103:9" pos:end="121:43">

        <decl_stmt pos:start="103:9" pos:end="103:77"><decl pos:start="103:9" pos:end="103:76"><type pos:start="103:9" pos:end="103:25"><specifier pos:start="103:9" pos:end="103:14">static</specifier> <specifier pos:start="103:16" pos:end="103:20">const</specifier> <name pos:start="103:22" pos:end="103:25">char</name></type> <name pos:start="103:27" pos:end="103:35"><name pos:start="103:27" pos:end="103:33">ct_jpeg</name><index pos:start="103:34" pos:end="103:35">[]</index></name> <init pos:start="103:37" pos:end="103:76">= <expr pos:start="103:39" pos:end="103:76"><literal type="string" pos:start="103:39" pos:end="103:76">"\r\nContent-Type: image/jpeg\r\n\r\n"</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:14"><decl pos:start="105:9" pos:end="105:13"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:13">i</name></decl>;</decl_stmt>



        <for pos:start="109:9" pos:end="113:47">for <control pos:start="109:13" pos:end="109:67">(<init pos:start="109:14" pos:end="109:17"><expr pos:start="109:14" pos:end="109:16"><name pos:start="109:14" pos:end="109:14">i</name><operator pos:start="109:15" pos:end="109:15">=</operator><literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>;</init> <condition pos:start="109:19" pos:end="109:62"><expr pos:start="109:19" pos:end="109:61"><name pos:start="109:19" pos:end="109:19">i</name><operator pos:start="109:20" pos:end="109:20">&lt;</operator><call pos:start="109:21" pos:end="109:61"><name pos:start="109:21" pos:end="109:25">FFMIN</name><argument_list pos:start="109:26" pos:end="109:61">(<argument pos:start="109:27" pos:end="109:55"><expr pos:start="109:27" pos:end="109:55"><name pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:27">p</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:37">buf_size</name></name> <operator pos:start="109:39" pos:end="109:39">-</operator> <sizeof pos:start="109:41" pos:end="109:55">sizeof<argument_list pos:start="109:47" pos:end="109:55">(<argument pos:start="109:48" pos:end="109:54"><expr pos:start="109:48" pos:end="109:54"><name pos:start="109:48" pos:end="109:54">ct_jpeg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="109:58" pos:end="109:60"><expr pos:start="109:58" pos:end="109:60"><literal type="number" pos:start="109:58" pos:end="109:60">100</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="109:64" pos:end="109:66"><expr pos:start="109:64" pos:end="109:66"><name pos:start="109:64" pos:end="109:64">i</name><operator pos:start="109:65" pos:end="109:66">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:13" pos:end="113:47"><block_content pos:start="111:13" pos:end="113:47">

            <if_stmt pos:start="111:13" pos:end="113:47"><if pos:start="111:13" pos:end="113:47">if <condition pos:start="111:16" pos:end="111:66">(<expr pos:start="111:17" pos:end="111:65"><operator pos:start="111:17" pos:end="111:17">!</operator><call pos:start="111:18" pos:end="111:65"><name pos:start="111:18" pos:end="111:23">memcmp</name><argument_list pos:start="111:24" pos:end="111:65">(<argument pos:start="111:25" pos:end="111:34"><expr pos:start="111:25" pos:end="111:34"><name pos:start="111:25" pos:end="111:30"><name pos:start="111:25" pos:end="111:25">p</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:30">buf</name></name> <operator pos:start="111:32" pos:end="111:32">+</operator> <name pos:start="111:34" pos:end="111:34">i</name></expr></argument>, <argument pos:start="111:37" pos:end="111:43"><expr pos:start="111:37" pos:end="111:43"><name pos:start="111:37" pos:end="111:43">ct_jpeg</name></expr></argument>, <argument pos:start="111:46" pos:end="111:64"><expr pos:start="111:46" pos:end="111:64"><sizeof pos:start="111:46" pos:end="111:60">sizeof<argument_list pos:start="111:52" pos:end="111:60">(<argument pos:start="111:53" pos:end="111:59"><expr pos:start="111:53" pos:end="111:59"><name pos:start="111:53" pos:end="111:59">ct_jpeg</name></expr></argument>)</argument_list></sizeof> <operator pos:start="111:62" pos:end="111:62">-</operator> <literal type="number" pos:start="111:64" pos:end="111:64">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:47"><block_content pos:start="113:17" pos:end="113:47">

                <return pos:start="113:17" pos:end="113:47">return <expr pos:start="113:24" pos:end="113:46"><name pos:start="113:24" pos:end="113:46">AVPROBE_SCORE_EXTENSION</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="117:9" pos:end="119:47"><if pos:start="117:9" pos:end="119:47">if <condition pos:start="117:12" pos:end="117:45">(<expr pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:22">nb_invalid</name> <operator pos:start="117:24" pos:end="117:25">==</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal> <operator pos:start="117:29" pos:end="117:30">&amp;&amp;</operator> <name pos:start="117:32" pos:end="117:40">nb_frames</name> <operator pos:start="117:42" pos:end="117:42">&gt;</operator> <literal type="number" pos:start="117:44" pos:end="117:44">2</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:47"><block_content pos:start="119:13" pos:end="119:47">

            <return pos:start="119:13" pos:end="119:47">return <expr pos:start="119:20" pos:end="119:46"><name pos:start="119:20" pos:end="119:42">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="119:44" pos:end="119:44">/</operator> <literal type="number" pos:start="119:46" pos:end="119:46">2</literal></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="121:9" pos:end="121:43">return <expr pos:start="121:16" pos:end="121:42"><name pos:start="121:16" pos:end="121:38">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="121:40" pos:end="121:40">/</operator> <literal type="number" pos:start="121:42" pos:end="121:42">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
