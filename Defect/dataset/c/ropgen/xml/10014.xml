<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10014.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">write_l1_entry</name><parameter_list pos:start="1:26" pos:end="1:61">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:60">l1_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:39"><name pos:start="7:14" pos:end="7:16">buf</name><index pos:start="7:17" pos:end="7:39">[<expr pos:start="7:18" pos:end="7:38"><name pos:start="7:18" pos:end="7:38">L1_ENTRIES_PER_SECTOR</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">l1_start_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:61"><expr pos:start="15:5" pos:end="15:60"><name pos:start="15:5" pos:end="15:18">l1_start_index</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:29">l1_index</name> <operator pos:start="15:31" pos:end="15:31">&amp;</operator> <operator pos:start="15:33" pos:end="15:33">~</operator><operator pos:start="15:34" pos:end="15:34">(</operator><name pos:start="15:35" pos:end="15:55">L1_ENTRIES_PER_SECTOR</name> <operator pos:start="15:57" pos:end="15:57">-</operator> <literal type="number" pos:start="15:59" pos:end="15:59">1</literal><operator pos:start="15:60" pos:end="15:60">)</operator></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="21:5">for <control pos:start="17:9" pos:end="17:47">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:42"><expr pos:start="17:17" pos:end="17:41"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:41">L1_ENTRIES_PER_SECTOR</name></expr>;</condition> <incr pos:start="17:44" pos:end="17:46"><expr pos:start="17:44" pos:end="17:46"><name pos:start="17:44" pos:end="17:44">i</name><operator pos:start="17:45" pos:end="17:46">++</operator></expr></incr>)</control> <block pos:start="17:49" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:62">

        <expr_stmt pos:start="19:9" pos:end="19:62"><expr pos:start="19:9" pos:end="19:61"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:11">buf</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">i</name></expr>]</index></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:61"><name pos:start="19:18" pos:end="19:28">cpu_to_be64</name><argument_list pos:start="19:29" pos:end="19:61">(<argument pos:start="19:30" pos:end="19:60"><expr pos:start="19:30" pos:end="19:60"><name pos:start="19:30" pos:end="19:60"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:40">l1_table</name><index pos:start="19:41" pos:end="19:60">[<expr pos:start="19:42" pos:end="19:59"><name pos:start="19:42" pos:end="19:55">l1_start_index</name> <operator pos:start="19:57" pos:end="19:57">+</operator> <name pos:start="19:59" pos:end="19:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="25:5" pos:end="29:66"><expr pos:start="25:5" pos:end="29:65"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="29:65"><name pos:start="25:11" pos:end="25:39">qcow2_pre_write_overlap_check</name><argument_list pos:start="25:40" pos:end="29:65">(<argument pos:start="25:41" pos:end="25:42"><expr pos:start="25:41" pos:end="25:42"><name pos:start="25:41" pos:end="25:42">bs</name></expr></argument>,

            <argument pos:start="27:13" pos:end="27:50"><expr pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:28">QCOW2_OL_DEFAULT</name> <operator pos:start="27:30" pos:end="27:30">&amp;</operator> <operator pos:start="27:32" pos:end="27:32">~</operator><name pos:start="27:33" pos:end="27:50">QCOW2_OL_ACTIVE_L1</name></expr></argument>,

            <argument pos:start="29:13" pos:end="29:51"><expr pos:start="29:13" pos:end="29:51"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:30">l1_table_offset</name></name> <operator pos:start="29:32" pos:end="29:32">+</operator> <literal type="number" pos:start="29:34" pos:end="29:34">8</literal> <operator pos:start="29:36" pos:end="29:36">*</operator> <name pos:start="29:38" pos:end="29:51">l1_start_index</name></expr></argument>, <argument pos:start="29:54" pos:end="29:64"><expr pos:start="29:54" pos:end="29:64"><sizeof pos:start="29:54" pos:end="29:64">sizeof<argument_list pos:start="29:60" pos:end="29:64">(<argument pos:start="29:61" pos:end="29:63"><expr pos:start="29:61" pos:end="29:63"><name pos:start="29:61" pos:end="29:63">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><call pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:16">BLKDBG_EVENT</name><argument_list pos:start="39:17" pos:end="39:44">(<argument pos:start="39:18" pos:end="39:25"><expr pos:start="39:18" pos:end="39:25"><name pos:start="39:18" pos:end="39:25"><name pos:start="39:18" pos:end="39:19">bs</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">file</name></name></expr></argument>, <argument pos:start="39:28" pos:end="39:43"><expr pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:43">BLKDBG_L1_UPDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:26"><expr pos:start="41:5" pos:end="43:25"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="43:25"><name pos:start="41:11" pos:end="41:26">bdrv_pwrite_sync</name><argument_list pos:start="41:27" pos:end="43:25">(<argument pos:start="41:28" pos:end="41:35"><expr pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:29">bs</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:35">file</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:76"><expr pos:start="41:38" pos:end="41:76"><name pos:start="41:38" pos:end="41:55"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:55">l1_table_offset</name></name> <operator pos:start="41:57" pos:end="41:57">+</operator> <literal type="number" pos:start="41:59" pos:end="41:59">8</literal> <operator pos:start="41:61" pos:end="41:61">*</operator> <name pos:start="41:63" pos:end="41:76">l1_start_index</name></expr></argument>,

        <argument pos:start="43:9" pos:end="43:11"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">buf</name></expr></argument>, <argument pos:start="43:14" pos:end="43:24"><expr pos:start="43:14" pos:end="43:24"><sizeof pos:start="43:14" pos:end="43:24">sizeof<argument_list pos:start="43:20" pos:end="43:24">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
