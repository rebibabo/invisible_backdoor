<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23290.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">socket_sendf</name><parameter_list pos:start="1:25" pos:end="1:61">(<parameter pos:start="1:26" pos:end="1:31"><decl pos:start="1:26" pos:end="1:31"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:31">fd</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">fmt</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:57">va_list</name></type> <name pos:start="1:59" pos:end="1:60">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">gchar</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:15">size</name></decl>, <decl pos:start="7:18" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:18" pos:end="7:23">offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:7">str</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:35"><name pos:start="11:11" pos:end="11:26">g_strdup_vprintf</name><argument_list pos:start="11:27" pos:end="11:35">(<argument pos:start="11:28" pos:end="11:30"><expr pos:start="11:28" pos:end="11:30"><name pos:start="11:28" pos:end="11:30">fmt</name></expr></argument>, <argument pos:start="11:33" pos:end="11:34"><expr pos:start="11:33" pos:end="11:34"><name pos:start="11:33" pos:end="11:34">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:8">size</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:22"><name pos:start="13:12" pos:end="13:17">strlen</name><argument_list pos:start="13:18" pos:end="13:22">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:10">offset</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="43:5">while <condition pos:start="19:11" pos:end="19:25">(<expr pos:start="19:12" pos:end="19:24"><name pos:start="19:12" pos:end="19:17">offset</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:24">size</name></expr>)</condition> <block pos:start="19:27" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:22">

        <decl_stmt pos:start="21:9" pos:end="21:20"><decl pos:start="21:9" pos:end="21:19"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">ssize_t</name></type> <name pos:start="21:17" pos:end="21:19">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:52"><name pos:start="25:15" pos:end="25:19">write</name><argument_list pos:start="25:20" pos:end="25:52">(<argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">fd</name></expr></argument>, <argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:27">str</name> <operator pos:start="25:29" pos:end="25:29">+</operator> <name pos:start="25:31" pos:end="25:36">offset</name></expr></argument>, <argument pos:start="25:39" pos:end="25:51"><expr pos:start="25:39" pos:end="25:51"><name pos:start="25:39" pos:end="25:42">size</name> <operator pos:start="25:44" pos:end="25:44">-</operator> <name pos:start="25:46" pos:end="25:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:40">(<expr pos:start="27:13" pos:end="27:39"><name pos:start="27:13" pos:end="27:15">len</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal> <operator pos:start="27:23" pos:end="27:24">&amp;&amp;</operator> <name pos:start="27:26" pos:end="27:30">errno</name> <operator pos:start="27:32" pos:end="27:33">==</operator> <name pos:start="27:35" pos:end="27:39">EINTR</name></expr>)</condition> <block pos:start="27:42" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><call pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:25">g_assert_no_errno</name><argument_list pos:start="35:26" pos:end="35:30">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:23">g_assert_cmpint</name><argument_list pos:start="37:24" pos:end="37:34">(<argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">len</name></expr></argument>, <argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><operator pos:start="37:30" pos:end="37:30">&gt;</operator></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:14">offset</name> <operator pos:start="41:16" pos:end="41:17">+=</operator> <name pos:start="41:19" pos:end="41:21">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
