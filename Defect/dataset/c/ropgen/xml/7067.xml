<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7067.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_fstat</name><parameter_list pos:start="1:23" pos:end="3:64">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:54">fid_type</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:43"><decl pos:start="3:24" pos:end="3:43"><type pos:start="3:24" pos:end="3:43"><name pos:start="3:24" pos:end="3:39">V9fsFidOpenState</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:43">fs</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:63"><decl pos:start="3:46" pos:end="3:63"><type pos:start="3:46" pos:end="3:63"><name pos:start="3:46" pos:end="3:56"><name pos:start="3:46" pos:end="3:51">struct</name> <name pos:start="3:53" pos:end="3:56">stat</name></name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">stbuf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:15">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:15">fd</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:16">fid_type</name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:30">P9_FID_DIR</name></expr>)</condition> <block pos:start="11:33" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:28">

        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:10">fd</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:27"><name pos:start="13:14" pos:end="13:18">dirfd</name><argument_list pos:start="13:19" pos:end="13:27">(<argument pos:start="13:20" pos:end="13:26"><expr pos:start="13:20" pos:end="13:26"><name pos:start="13:20" pos:end="13:26"><name pos:start="13:20" pos:end="13:21">fs</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:26">dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:10">fd</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:19"><name pos:start="17:14" pos:end="17:15">fs</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:19">fd</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:7">err</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:26"><name pos:start="23:11" pos:end="23:15">fstat</name><argument_list pos:start="23:16" pos:end="23:26">(<argument pos:start="23:17" pos:end="23:18"><expr pos:start="23:17" pos:end="23:18"><name pos:start="23:17" pos:end="23:18">fd</name></expr></argument>, <argument pos:start="23:21" pos:end="23:25"><expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:25">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">err</name></expr>)</condition> <block pos:start="25:14" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="83:5"><if pos:start="31:5" pos:end="77:5">if <condition pos:start="31:8" pos:end="31:46">(<expr pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:14">fs_ctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">export_flags</name></name> <operator pos:start="31:30" pos:end="31:30">&amp;</operator> <name pos:start="31:32" pos:end="31:45">V9FS_SM_MAPPED</name></expr>)</condition> <block pos:start="31:48" pos:end="77:5">{<block_content pos:start="35:9" pos:end="75:9">

        <comment type="block" pos:start="33:9" pos:end="33:59">/* Actual credentials are part of extended attrs */</comment>

        <decl_stmt pos:start="35:9" pos:end="35:22"><decl pos:start="35:9" pos:end="35:21"><type pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:13">uid_t</name></type> <name pos:start="35:15" pos:end="35:21">tmp_uid</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:22"><decl pos:start="37:9" pos:end="37:21"><type pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:13">gid_t</name></type> <name pos:start="37:15" pos:end="37:21">tmp_gid</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:24"><decl pos:start="39:9" pos:end="39:23"><type pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:14">mode_t</name></type> <name pos:start="39:16" pos:end="39:23">tmp_mode</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:22"><decl pos:start="41:9" pos:end="41:21"><type pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:13">dev_t</name></type> <name pos:start="41:15" pos:end="41:21">tmp_dev</name></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="47:51">(<expr pos:start="45:13" pos:end="47:50"><call pos:start="45:13" pos:end="47:46"><name pos:start="45:13" pos:end="45:21">fgetxattr</name><argument_list pos:start="45:22" pos:end="47:46">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">fd</name></expr></argument>, <argument pos:start="45:27" pos:end="45:43"><expr pos:start="45:27" pos:end="45:43"><literal type="string" pos:start="45:27" pos:end="45:43">"user.virtfs.uid"</literal></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:30"><expr pos:start="47:23" pos:end="47:30"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:30">tmp_uid</name></expr></argument>, <argument pos:start="47:33" pos:end="47:45"><expr pos:start="47:33" pos:end="47:45"><sizeof pos:start="47:33" pos:end="47:45">sizeof<argument_list pos:start="47:39" pos:end="47:45">(<argument pos:start="47:40" pos:end="47:44"><expr pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:44">uid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="47:48" pos:end="47:48">&gt;</operator> <literal type="number" pos:start="47:50" pos:end="47:50">0</literal></expr>)</condition> <block pos:start="47:53" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:36">

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:17">stbuf</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:25">st_uid</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:35">tmp_uid</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="55:51">(<expr pos:start="53:13" pos:end="55:50"><call pos:start="53:13" pos:end="55:46"><name pos:start="53:13" pos:end="53:21">fgetxattr</name><argument_list pos:start="53:22" pos:end="55:46">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">fd</name></expr></argument>, <argument pos:start="53:27" pos:end="53:43"><expr pos:start="53:27" pos:end="53:43"><literal type="string" pos:start="53:27" pos:end="53:43">"user.virtfs.gid"</literal></expr></argument>,

                      <argument pos:start="55:23" pos:end="55:30"><expr pos:start="55:23" pos:end="55:30"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:30">tmp_gid</name></expr></argument>, <argument pos:start="55:33" pos:end="55:45"><expr pos:start="55:33" pos:end="55:45"><sizeof pos:start="55:33" pos:end="55:45">sizeof<argument_list pos:start="55:39" pos:end="55:45">(<argument pos:start="55:40" pos:end="55:44"><expr pos:start="55:40" pos:end="55:44"><name pos:start="55:40" pos:end="55:44">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="55:48" pos:end="55:48">&gt;</operator> <literal type="number" pos:start="55:50" pos:end="55:50">0</literal></expr>)</condition> <block pos:start="55:53" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:36">

            <expr_stmt pos:start="57:13" pos:end="57:36"><expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:17">stbuf</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:25">st_gid</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:35">tmp_gid</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="63:53">(<expr pos:start="61:13" pos:end="63:52"><call pos:start="61:13" pos:end="63:48"><name pos:start="61:13" pos:end="61:21">fgetxattr</name><argument_list pos:start="61:22" pos:end="63:48">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">fd</name></expr></argument>, <argument pos:start="61:27" pos:end="61:44"><expr pos:start="61:27" pos:end="61:44"><literal type="string" pos:start="61:27" pos:end="61:44">"user.virtfs.mode"</literal></expr></argument>,

                      <argument pos:start="63:23" pos:end="63:31"><expr pos:start="63:23" pos:end="63:31"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:31">tmp_mode</name></expr></argument>, <argument pos:start="63:34" pos:end="63:47"><expr pos:start="63:34" pos:end="63:47"><sizeof pos:start="63:34" pos:end="63:47">sizeof<argument_list pos:start="63:40" pos:end="63:47">(<argument pos:start="63:41" pos:end="63:46"><expr pos:start="63:41" pos:end="63:46"><name pos:start="63:41" pos:end="63:46">mode_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="63:50" pos:end="63:50">&gt;</operator> <literal type="number" pos:start="63:52" pos:end="63:52">0</literal></expr>)</condition> <block pos:start="63:55" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:38">

            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:17">stbuf</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:26">st_mode</name></name> <operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:37">tmp_mode</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="71:51">(<expr pos:start="69:13" pos:end="71:50"><call pos:start="69:13" pos:end="71:46"><name pos:start="69:13" pos:end="69:21">fgetxattr</name><argument_list pos:start="69:22" pos:end="71:46">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">fd</name></expr></argument>, <argument pos:start="69:27" pos:end="69:44"><expr pos:start="69:27" pos:end="69:44"><literal type="string" pos:start="69:27" pos:end="69:44">"user.virtfs.rdev"</literal></expr></argument>,

                      <argument pos:start="71:23" pos:end="71:30"><expr pos:start="71:23" pos:end="71:30"><operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:30">tmp_dev</name></expr></argument>, <argument pos:start="71:33" pos:end="71:45"><expr pos:start="71:33" pos:end="71:45"><sizeof pos:start="71:33" pos:end="71:45">sizeof<argument_list pos:start="71:39" pos:end="71:45">(<argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:44">dev_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="71:48" pos:end="71:48">&gt;</operator> <literal type="number" pos:start="71:50" pos:end="71:50">0</literal></expr>)</condition> <block pos:start="71:53" pos:end="75:9">{<block_content pos:start="73:17" pos:end="73:41">

                <expr_stmt pos:start="73:17" pos:end="73:41"><expr pos:start="73:17" pos:end="73:40"><name pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:21">stbuf</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:30">st_rdev</name></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:40">tmp_dev</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="83:5">else if <condition pos:start="77:15" pos:end="77:58">(<expr pos:start="77:16" pos:end="77:57"><name pos:start="77:16" pos:end="77:35"><name pos:start="77:16" pos:end="77:21">fs_ctx</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:35">export_flags</name></name> <operator pos:start="77:37" pos:end="77:37">&amp;</operator> <name pos:start="77:39" pos:end="77:57">V9FS_SM_MAPPED_FILE</name></expr>)</condition> <block pos:start="77:60" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:18">

        <expr_stmt pos:start="79:9" pos:end="79:27"><expr pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:13">errno</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:26">EOPNOTSUPP</name></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="85:5" pos:end="85:15">return <expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
